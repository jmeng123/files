{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"Game ","path":"Game","rule":"function rand(m, n) {\n    if (!n) {\n        n = m, m = 0;\n    }\n    return Math.ceil(Math.random() * (n - m + 1) + m - 1)\n}\nconst numberMap = [\"\", \"1️⃣\", \"2️⃣\", \"3️⃣\", \"4️⃣\", \"5️⃣\", \"6️⃣\", \"7️⃣\", \"8️⃣\", \"9️⃣\", \"🔟\"];\nconst lanFh = \"💥\";\nconst flagFh = \"⛳\";\nconst notFh = \"⬛\";\nconst blankFh = \"⬜️\";\nconst audio = {\n    lose: \"https://m.saolei123.com/assets/sounds/lose.mp3\",\n    win: \"https://m.saolei123.com/assets/sounds/win.mp3\",\n    explosion: \"https://m.saolei123.com/assets/sounds/explosion.mp3\",\n    empty: \"https://m.saolei123.com/assets/sounds/empty.mp3\",\n    reveal: \"https://m.saolei123.com/assets/sounds/reveal.mp3\",\n    mark: \"https://m.saolei123.com/assets/sounds/mark.mp3\",\n    init: \"https://m.saolei123.com/assets/sounds/init.mp3\"\n}\n\nfunction Game(layData) {\n    this.bindID = \"GameY\";\n    this.clickMode = getMyVar(\"mode\", \"排雷\");\n    this.isEnd = !!getMyVar(\"isEnd\", \"\");\n    this.init(layData);\n}\nGame.parse = function(arr) {\n    let layData = [];\n    for (let r = 0; r < arr.length; r++) {\n        let row = [];\n        let rowy = arr[r];\n        for (let c = 0; c < rowy.length; c++) {\n            row.push({\n                isLan: Boolean(rowy[c]),\n                isFlag: false,\n                isTurn: false,\n                id: r + \"-\" + c,\n                row: r,\n                col: c,\n                aLanCount: 0\n            });\n        }\n        layData.push(row);\n    }\n    return layData;\n}\nObject.assign(Game.prototype, {\n    rowCount: Number(getItem(\"rowCount\", \"8\")),\n    columnCount: Number(getItem(\"columnCount\", \"8\")),\n    lanCount: Number(getItem(\"lanCount\", \"12\")),\n\n    init(layData) {\n        this.victoryCount = this.rowCount * this.columnCount - this.lanCount;\n        if (layData) {\n            this.layData = layData;\n            return;\n        }\n        clearMyVar(\"layData\");\n        clearMyVar(\"isSeed\");\n        this.layData = layData = [];\n        for (let r = 0; r < this.rowCount; r++) {\n            let row = [];\n            for (let c = 0; c < this.columnCount; c++) {\n                row.push({\n                    isLan: false,\n                    isFlag: false,\n                    isTurn: false,\n                    id: r + \"-\" + c,\n                    row: r,\n                    col: c,\n                    aLanCount: 0\n                });\n            }\n            layData.push(row);\n        }\n        this.clear();\n        addListener(\"onClose\", this.clear);\n        addListener(\"onRefresh\", this.clear);\n        this.setLan();\n        //refreshX5WebView(audio.init);\n        //this.render();\n        return this;\n    },\n    clear() {\n        clearMyVar(\"time\");\n        clearMyVar(\"isEnd\");\n        unRegisterTask(this.bindID + \"Time\");\n        return this;\n    },\n    time(t, id) {\n        if (t) {\n            let s = Number(getMyVar(\"time\", \"0\"));\n            clearMyVar(\"time\");\n            unRegisterTask(this.bindID + \"Time\");\n            let e = Date.now();\n            return (e - s) / 1000;\n        } else {\n            putMyVar(\"time\", \"\" + Date.now());\n            registerTask(this.bindID + \"Time\", 1000, $.toString((id, gid) => {\n                try {\n                    let t = parseInt(findItem(id).title) || 0;\n                    updateItem(id, {\n                        title: ++t + \"s\",\n                    });\n                } catch (e) {\n                    //log(e.toString());\n                    unRegisterTask(gid);\n                }\n            }, id, this.bindID + \"Time\"));\n        }\n    },\n    setLan() {\n        let layData = this.layData;\n        if (!layData || layData.length !== this.rowCount) throw new Error(\"游戏未初始化\");\n        for (var index = 0; index < this.lanCount; index++) {\n            while (true) {\n                var row = parseInt(Math.random() * this.rowCount);\n                var col = parseInt(Math.random() * this.columnCount);\n                if (!layData[row][col].isLan) {\n                    layData[row][col].isLan = true;\n                    break;\n                }\n            }\n        }\n    },\n    turn(r, c, noRefresh) {\n        let item = this.layData[r][c];\n        if (item.isFlag) {\n            if (!noRefresh) {\n                return toast(\"已标记\");\n            }\n        } else if (item.isLan) {\n            updateItem(this.bindID + item.id, {\n                title: lanFh\n            });\n            refreshX5WebView(audio.explosion);\n            this.settlement(true);\n            return true;\n        } else if (!item.isTurn) {\n            let around = this.getAround(r, c);\n            let aLanCount = around.reduce((i, v) => i + v.isLan, 0);\n            if (aLanCount === 0 && around.length > 0) {\n                item.isTurn = true;\n                /*updateItem(this.bindID + item.id, {\n                    title: \"▢\"\n                });*/\n                around.forEach(v => this.turn(v.row, v.col, true));\n                if (!noRefresh) {\n                    refreshX5WebView(audio.empty);\n                    this.render();\n                }\n            } else {\n                if (!noRefresh) {\n                    refreshX5WebView(audio.mark);\n                }\n\n                item.aLanCount = aLanCount;\n                item.isTurn = true;\n                if (!noRefresh) {\n                    updateItem(this.bindID + item.id, {\n                        title: numberMap[aLanCount] || blankFh\n                    });\n                }\n            }\n        }\n    },\n    fast() {\n        if (this.judgeEnd()) return;\n        for (let row of this.layData) {\n            for (let item of row) {\n                if (!item.isFlag && !item.isTurn) {\n                    if (this.turn(item.row, item.col)) return;\n                }\n            }\n        }\n        this.settlement();\n\n    },\n    judgeEnd() {\n        if (this.isEnd) {\n            confirm({\n                title: \"游戏提示\",\n                content: \"已经结束了，再来一局？\",\n                confirm: () => {\n                    clearMyVar(\"isEnd\");\n                    refreshPage();\n                },\n                cancel: \"\"\n            });\n            return true;\n        }\n    },\n    click(r, c, mode) {\n        if (this.judgeEnd()) return;\n        if (mode === \"插旗\" || this.clickMode === \"插旗\") {\n            let item = this.layData[r][c];\n            if (item.isTurn) return;\n            let flag = findItem(\"flagY\").extra;\n            if (!item.isFlag && flag.count === this.lanCount) return toast(\"旗帜已用完\");\n            refreshX5WebView(audio.reveal);\n            item.isFlag = !item.isFlag;\n            updateItem(this.bindID + item.id, {\n                title: item.isFlag ? flagFh : notFh\n            });\n            let count = item.isFlag ? flag.count + 1 : flag.count - 1;\n            updateItem({\n                title: \"⛳\" + count + \"/\" + this.lanCount + \"💣\",\n                extra: {\n                    count: count,\n                    id: \"flagY\",\n                    lineVisible: false\n                }\n            });\n        } else if (this.clickMode === \"排雷\") {\n            this.turn(r, c);\n        }\n        if (!this.settlement()) {\n            storage0.putMyVar(\"layData\", this.layData);\n        }\n    },\n    getAround(r, c) {\n        let rr = r ? r - 1 : 0,\n            cc = c ? c - 1 : 0;\n        let arr = [];\n        for (let i = rr; i <= r + 1 && i > -1 && i < this.rowCount; i++) {\n            for (let j = cc; j <= c + 1 && j > -1 && j < this.columnCount; j++) {\n                let item = this.layData[i][j];\n                if (item.isTurn || (r === i && c === j)) continue;\n                arr.push(item);\n            }\n        }\n        return arr;\n    },\n    settlement(isFail) {\n        if (isFail) {            \n            putMyVar(\"isEnd\", \"true\");\n            this.layData.forEach((row) => {\n                row.forEach((item) => {\n                    if (item.isLan) {\n                        updateItem(this.bindID + item.id, {\n                            title: lanFh,\n                        });\n                    }\n                });\n            });\n\n            java.lang.Thread.sleep(645);\n            refreshX5WebView(audio.lose);\n            confirm({\n                title: \"游戏提示\",\n                content: \"你输啦！再来一局？\\n时间：\" + this.time(true) + \"s\",\n                confirm: () => {\n                    clearMyVar(\"isEnd\");\n                    refreshPage();\n                },\n                cancel: \"\"\n            });\n            return true;\n        } else {\n            let ti = this.layData.reduce((i, v) => i + v.reduce((i, v) => i + v.isTurn, 0), 0);\n            if (ti === this.victoryCount) {\n                putMyVar(\"isEnd\", \"true\");\n                refreshX5WebView(audio.win);\n                confirm({\n                    title: \"游戏提示(\" + (getMyVar(\"isSeed\", \"\") ? \"种子地图)\" : \"随机地图)\"),\n                    content: \"🎉你赢啦！再来一局？\\n难度：\" + ((this.lanCount / (this.rowCount * this.columnCount)) * 100).toFixed(2) + \"%\\n时间：\" + this.time(true) + \"s\",\n                    confirm: () => {\n                        clearMyVar(\"isEnd\");\n                        clearMyVar(\"isSeed\");\n                        refreshPage();\n                    },\n                    cancel: \"\"\n                });\n                return true;\n            }\n        }\n        return false;\n    },\n    render() {\n        let layData = this.layData;\n        let layout = [];\n        let butclick = $(\"#noLoading#\").lazyRule(() => {\n            let [r, c] = input.split(\"#\");\n            const Game = $.require(\"hiker://page/Game\");\n            let game = new Game(storage0.getMyVar(\"layData\", null));\n            game.click(Number(r), Number(c));\n            return \"hiker://empty\";\n        });\n        let longclick = (r, c) => {\n            const Game = $.require(\"hiker://page/Game\");\n            let game = new Game(storage0.getMyVar(\"layData\", null));\n            game.click(r, c, \"插旗\");\n        }\n        deleteItemByCls(this.bindID);\n        layData.forEach((row, r) => {\n            row.forEach((item, c) => {\n                layout.push({\n                    title: item.isTurn ? (numberMap[item.aLanCount] || blankFh) : (item.isFlag ? flagFh : (item.aLanCount || notFh)),\n                    col_type: \"flex_button\",\n                    url: r + \"#\" + c + butclick,\n                    extra: {\n                        id: this.bindID + item.id,\n                        cls: this.bindID,\n                        longClick: [{\n                            title: \"拆旗/插旗\",\n                            js: $.toString(longclick, r, c)\n                        }]\n                    }\n                });\n            });\n            layout.push({\n                col_type: \"line\",\n                extra: {\n                    cls: this.bindID\n                }\n            });\n        });\n        storage0.putMyVar(\"layData\", layData);\n        addItemAfter(this.bindID, layout);\n        return this;\n    }\n\n});\n$.exports = Game;"}],"title":"扫雷音效版","author":"@LoyDgIk","version":12,"type":"other","url":"hiker://empty#noRefresh#","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nconst Game = $.require(\"hiker://page/Game\");\nlet game = new Game;\nlet layout = [];\nlayout.push({\n    url: \"https://m.saolei123.com/assets/sounds/init.mp3\",\n    desc: \"0\",\n    col_type: \"x5_webview_single\",\n    extra: {\n        showProgress: false\n    }\n});\nlet mode = getMyVar(\"mode\", \"排雷\");\nlayout.push({\n    url:\"hiker://empty\",\n    title:\"∞\",\n    pic_url: \"hiker://images/icon_time6\",\n    col_type: \"avatar\",\n    extra: {\n        id: \"reckonTime\"\n    }\n});\nlayout.push({\n    title: mode === \"排雷\" ? \"‘‘排雷’’\" : \"排雷\",\n    url: $(\"#noLoading#\").lazyRule(() => {\n        updateItem(\"排雷\", {\n            title: \"‘‘排雷’’\"\n        });\n        updateItem(\"插旗\", {\n            title: \"插旗\"\n        });\n        putMyVar(\"mode\", \"排雷\");\n        return \"hiker://empty\";\n    }),\n    col_type: \"text_4\",\n    extra: {\n        id: \"排雷\"\n    }\n});\nlayout.push({\n    title: mode === \"插旗\" ? \"‘‘插旗’’\" : \"插旗\",\n    url: $(\"#noLoading#\").lazyRule(() => {\n        updateItem(\"插旗\", {\n            title: \"‘‘插旗’’\"\n        });\n        updateItem(\"排雷\", {\n            title: \"排雷\"\n        });\n        putMyVar(\"mode\", \"插旗\");\n        return \"hiker://empty\";\n    }),\n    col_type: \"text_4\",\n    extra: {\n        id: \"插旗\"\n    }\n});\nlayout.push({\n    title: \"自定义\",\n    url: $(game.rowCount + \",\" + game.columnCount + \",\" + game.lanCount, \"格式(均不能为0):\\n排数,列数,雷数\").input(() => {\n        let arr = input.split(\",\");\n        if (arr.length !== 3 || arr.some(n => !Number(n))) {\n            return \"toast://格式错误\";\n        }\n        if (Number(arr[0]) * Number(arr[1]) <= Number(arr[2])) {\n            return \"toast://兄弟游戏不能这么玩，总格子数还没雷多\";\n        }\n        setItem(\"rowCount\", arr[0]);\n        setItem(\"columnCount\", arr[1]);\n        setItem(\"lanCount\", arr[2]);\n        refreshPage(false);\n        return \"toast://已创建新的游戏\";\n    }),\n    col_type: \"text_4\"\n});\nlayout.push({\n    title: \"种子\",\n    url: $([\"导入\", \"分享\"], 1, \"选择操作(作弊没意思)\").select(() => {\n        switch (input) {\n            case \"分享\":\n                const Game = $.require(\"hiker://page/Game\");\n                let game = new Game(storage0.getMyVar(\"layData\", null));\n                let simplifyData = game.layData.map((r) => r.map(c => Number(c.isLan)));\n                let share = JSON.stringify({\n                    rowCount: game.rowCount,\n                    columnCount: game.columnCount,\n                    lanCount: game.lanCount,\n                    simplifyData: simplifyData\n                });\n                return \"copy://\" + base64Encode(share);\n            case \"导入\":\n                return $(\"\", \"粘贴种子信息\").input(() => {\n                    if (!input.trim()) return \"toast请输入\";\n                    try {\n                        let share = JSON.parse(base64Decode(input));\n                        setItem(\"rowCount\", share.rowCount + \"\");\n                        setItem(\"columnCount\", share.columnCount + \"\");\n                        setItem(\"lanCount\", share.lanCount + \"\");\n                        putMyVar(\"isSeed\", \"true\");\n                        updateItem({\n                            title: \"⛳0 /\" + share.lanCount + \"💣\",\n                            extra: {\n                                count: 0,\n                                id: \"flagY\",\n                                lineVisible: false\n                            }\n                        });\n                        const Game = $.require(\"hiker://page/Game\");\n                        let game = new Game(Game.parse(share.simplifyData));\n                        game.clear().render().time();\n                        return \"toast://解析完成!已创建游戏\"\n                    } catch (e) {\n                        log(e.toString());\n                        return \"toast://种子解析出错\";\n                    }\n                });\n        }\n    }),\n    col_type: \"text_4\"\n});\nlayout.push({\n    title: \"⛳0/\" + game.lanCount + \"💣\",\n    url: $(\"#noLoading#\").lazyRule((lanCount) => {\n        let that = findItem(\"flagY\").extra;\n        if (that.count !== lanCount) {\n            return \"toast://旗还没插完!\";\n        }\n        const Game = $.require(\"hiker://page/Game\");\n        let game = new Game(storage0.getMyVar(\"layData\", null));\n        game.fast();\n        return \"hiker://empty\";\n    }, game.lanCount),\n    col_type: \"text_center_1\",\n    extra: {\n        id: \"flagY\",\n        count: 0,\n        lineVisible: false\n    }\n});\nlayout.push({\n    col_type: \"blank_block\",\n    extra: {\n        id: \"GameY\"\n    }\n});\nsetResult(layout);\n\ngame.render().time(void 0, \"reckonTime\");","searchFind":"","search_url":"","group":"⑨其它","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"Game \",\"path\":\"Game\",\"rule\":\"function rand(m, n) {\\n    if (!n) {\\n        n = m, m = 0;\\n    }\\n    return Math.ceil(Math.random() * (n - m + 1) + m - 1)\\n}\\nconst numberMap = [\\\"\\\", \\\"1️⃣\\\", \\\"2️⃣\\\", \\\"3️⃣\\\", \\\"4️⃣\\\", \\\"5️⃣\\\", \\\"6️⃣\\\", \\\"7️⃣\\\", \\\"8️⃣\\\", \\\"9️⃣\\\", \\\"🔟\\\"];\\nconst lanFh = \\\"💥\\\";\\nconst flagFh = \\\"⛳\\\";\\nconst notFh = \\\"⬛\\\";\\nconst blankFh = \\\"⬜️\\\";\\nconst audio = {\\n    lose: \\\"https://m.saolei123.com/assets/sounds/lose.mp3\\\",\\n    win: \\\"https://m.saolei123.com/assets/sounds/win.mp3\\\",\\n    explosion: \\\"https://m.saolei123.com/assets/sounds/explosion.mp3\\\",\\n    empty: \\\"https://m.saolei123.com/assets/sounds/empty.mp3\\\",\\n    reveal: \\\"https://m.saolei123.com/assets/sounds/reveal.mp3\\\",\\n    mark: \\\"https://m.saolei123.com/assets/sounds/mark.mp3\\\",\\n    init: \\\"https://m.saolei123.com/assets/sounds/init.mp3\\\"\\n}\\n\\nfunction Game(layData) {\\n    this.bindID = \\\"GameY\\\";\\n    this.clickMode = getMyVar(\\\"mode\\\", \\\"排雷\\\");\\n    this.isEnd = !!getMyVar(\\\"isEnd\\\", \\\"\\\");\\n    this.init(layData);\\n}\\nGame.parse = function(arr) {\\n    let layData = [];\\n    for (let r = 0; r < arr.length; r++) {\\n        let row = [];\\n        let rowy = arr[r];\\n        for (let c = 0; c < rowy.length; c++) {\\n            row.push({\\n                isLan: Boolean(rowy[c]),\\n                isFlag: false,\\n                isTurn: false,\\n                id: r + \\\"-\\\" + c,\\n                row: r,\\n                col: c,\\n                aLanCount: 0\\n            });\\n        }\\n        layData.push(row);\\n    }\\n    return layData;\\n}\\nObject.assign(Game.prototype, {\\n    rowCount: Number(getItem(\\\"rowCount\\\", \\\"8\\\")),\\n    columnCount: Number(getItem(\\\"columnCount\\\", \\\"8\\\")),\\n    lanCount: Number(getItem(\\\"lanCount\\\", \\\"12\\\")),\\n\\n    init(layData) {\\n        this.victoryCount = this.rowCount * this.columnCount - this.lanCount;\\n        if (layData) {\\n            this.layData = layData;\\n            return;\\n        }\\n        clearMyVar(\\\"layData\\\");\\n        clearMyVar(\\\"isSeed\\\");\\n        this.layData = layData = [];\\n        for (let r = 0; r < this.rowCount; r++) {\\n            let row = [];\\n            for (let c = 0; c < this.columnCount; c++) {\\n                row.push({\\n                    isLan: false,\\n                    isFlag: false,\\n                    isTurn: false,\\n                    id: r + \\\"-\\\" + c,\\n                    row: r,\\n                    col: c,\\n                    aLanCount: 0\\n                });\\n            }\\n            layData.push(row);\\n        }\\n        this.clear();\\n        addListener(\\\"onClose\\\", this.clear);\\n        addListener(\\\"onRefresh\\\", this.clear);\\n        this.setLan();\\n        //refreshX5WebView(audio.init);\\n        //this.render();\\n        return this;\\n    },\\n    clear() {\\n        clearMyVar(\\\"time\\\");\\n        clearMyVar(\\\"isEnd\\\");\\n        unRegisterTask(this.bindID + \\\"Time\\\");\\n        return this;\\n    },\\n    time(t, id) {\\n        if (t) {\\n            let s = Number(getMyVar(\\\"time\\\", \\\"0\\\"));\\n            clearMyVar(\\\"time\\\");\\n            unRegisterTask(this.bindID + \\\"Time\\\");\\n            let e = Date.now();\\n            return (e - s) / 1000;\\n        } else {\\n            putMyVar(\\\"time\\\", \\\"\\\" + Date.now());\\n            registerTask(this.bindID + \\\"Time\\\", 1000, $.toString((id, gid) => {\\n                try {\\n                    let t = parseInt(findItem(id).title) || 0;\\n                    updateItem(id, {\\n                        title: ++t + \\\"s\\\",\\n                    });\\n                } catch (e) {\\n                    //log(e.toString());\\n                    unRegisterTask(gid);\\n                }\\n            }, id, this.bindID + \\\"Time\\\"));\\n        }\\n    },\\n    setLan() {\\n        let layData = this.layData;\\n        if (!layData || layData.length !== this.rowCount) throw new Error(\\\"游戏未初始化\\\");\\n        for (var index = 0; index < this.lanCount; index++) {\\n            while (true) {\\n                var row = parseInt(Math.random() * this.rowCount);\\n                var col = parseInt(Math.random() * this.columnCount);\\n                if (!layData[row][col].isLan) {\\n                    layData[row][col].isLan = true;\\n                    break;\\n                }\\n            }\\n        }\\n    },\\n    turn(r, c, noRefresh) {\\n        let item = this.layData[r][c];\\n        if (item.isFlag) {\\n            if (!noRefresh) {\\n                return toast(\\\"已标记\\\");\\n            }\\n        } else if (item.isLan) {\\n            updateItem(this.bindID + item.id, {\\n                title: lanFh\\n            });\\n            refreshX5WebView(audio.explosion);\\n            this.settlement(true);\\n            return true;\\n        } else if (!item.isTurn) {\\n            let around = this.getAround(r, c);\\n            let aLanCount = around.reduce((i, v) => i + v.isLan, 0);\\n            if (aLanCount === 0 && around.length > 0) {\\n                item.isTurn = true;\\n                /*updateItem(this.bindID + item.id, {\\n                    title: \\\"▢\\\"\\n                });*/\\n                around.forEach(v => this.turn(v.row, v.col, true));\\n                if (!noRefresh) {\\n                    refreshX5WebView(audio.empty);\\n                    this.render();\\n                }\\n            } else {\\n                if (!noRefresh) {\\n                    refreshX5WebView(audio.mark);\\n                }\\n\\n                item.aLanCount = aLanCount;\\n                item.isTurn = true;\\n                if (!noRefresh) {\\n                    updateItem(this.bindID + item.id, {\\n                        title: numberMap[aLanCount] || blankFh\\n                    });\\n                }\\n            }\\n        }\\n    },\\n    fast() {\\n        if (this.judgeEnd()) return;\\n        for (let row of this.layData) {\\n            for (let item of row) {\\n                if (!item.isFlag && !item.isTurn) {\\n                    if (this.turn(item.row, item.col)) return;\\n                }\\n            }\\n        }\\n        this.settlement();\\n\\n    },\\n    judgeEnd() {\\n        if (this.isEnd) {\\n            confirm({\\n                title: \\\"游戏提示\\\",\\n                content: \\\"已经结束了，再来一局？\\\",\\n                confirm: () => {\\n                    clearMyVar(\\\"isEnd\\\");\\n                    refreshPage();\\n                },\\n                cancel: \\\"\\\"\\n            });\\n            return true;\\n        }\\n    },\\n    click(r, c, mode) {\\n        if (this.judgeEnd()) return;\\n        if (mode === \\\"插旗\\\" || this.clickMode === \\\"插旗\\\") {\\n            let item = this.layData[r][c];\\n            if (item.isTurn) return;\\n            let flag = findItem(\\\"flagY\\\").extra;\\n            if (!item.isFlag && flag.count === this.lanCount) return toast(\\\"旗帜已用完\\\");\\n            refreshX5WebView(audio.reveal);\\n            item.isFlag = !item.isFlag;\\n            updateItem(this.bindID + item.id, {\\n                title: item.isFlag ? flagFh : notFh\\n            });\\n            let count = item.isFlag ? flag.count + 1 : flag.count - 1;\\n            updateItem({\\n                title: \\\"⛳\\\" + count + \\\"/\\\" + this.lanCount + \\\"💣\\\",\\n                extra: {\\n                    count: count,\\n                    id: \\\"flagY\\\",\\n                    lineVisible: false\\n                }\\n            });\\n        } else if (this.clickMode === \\\"排雷\\\") {\\n            this.turn(r, c);\\n        }\\n        if (!this.settlement()) {\\n            storage0.putMyVar(\\\"layData\\\", this.layData);\\n        }\\n    },\\n    getAround(r, c) {\\n        let rr = r ? r - 1 : 0,\\n            cc = c ? c - 1 : 0;\\n        let arr = [];\\n        for (let i = rr; i <= r + 1 && i > -1 && i < this.rowCount; i++) {\\n            for (let j = cc; j <= c + 1 && j > -1 && j < this.columnCount; j++) {\\n                let item = this.layData[i][j];\\n                if (item.isTurn || (r === i && c === j)) continue;\\n                arr.push(item);\\n            }\\n        }\\n        return arr;\\n    },\\n    settlement(isFail) {\\n        if (isFail) {            \\n            putMyVar(\\\"isEnd\\\", \\\"true\\\");\\n            this.layData.forEach((row) => {\\n                row.forEach((item) => {\\n                    if (item.isLan) {\\n                        updateItem(this.bindID + item.id, {\\n                            title: lanFh,\\n                        });\\n                    }\\n                });\\n            });\\n\\n            java.lang.Thread.sleep(645);\\n            refreshX5WebView(audio.lose);\\n            confirm({\\n                title: \\\"游戏提示\\\",\\n                content: \\\"你输啦！再来一局？\\\\n时间：\\\" + this.time(true) + \\\"s\\\",\\n                confirm: () => {\\n                    clearMyVar(\\\"isEnd\\\");\\n                    refreshPage();\\n                },\\n                cancel: \\\"\\\"\\n            });\\n            return true;\\n        } else {\\n            let ti = this.layData.reduce((i, v) => i + v.reduce((i, v) => i + v.isTurn, 0), 0);\\n            if (ti === this.victoryCount) {\\n                putMyVar(\\\"isEnd\\\", \\\"true\\\");\\n                refreshX5WebView(audio.win);\\n                confirm({\\n                    title: \\\"游戏提示(\\\" + (getMyVar(\\\"isSeed\\\", \\\"\\\") ? \\\"种子地图)\\\" : \\\"随机地图)\\\"),\\n                    content: \\\"🎉你赢啦！再来一局？\\\\n难度：\\\" + ((this.lanCount / (this.rowCount * this.columnCount)) * 100).toFixed(2) + \\\"%\\\\n时间：\\\" + this.time(true) + \\\"s\\\",\\n                    confirm: () => {\\n                        clearMyVar(\\\"isEnd\\\");\\n                        clearMyVar(\\\"isSeed\\\");\\n                        refreshPage();\\n                    },\\n                    cancel: \\\"\\\"\\n                });\\n                return true;\\n            }\\n        }\\n        return false;\\n    },\\n    render() {\\n        let layData = this.layData;\\n        let layout = [];\\n        let butclick = $(\\\"#noLoading#\\\").lazyRule(() => {\\n            let [r, c] = input.split(\\\"#\\\");\\n            const Game = $.require(\\\"hiker://page/Game\\\");\\n            let game = new Game(storage0.getMyVar(\\\"layData\\\", null));\\n            game.click(Number(r), Number(c));\\n            return \\\"hiker://empty\\\";\\n        });\\n        let longclick = (r, c) => {\\n            const Game = $.require(\\\"hiker://page/Game\\\");\\n            let game = new Game(storage0.getMyVar(\\\"layData\\\", null));\\n            game.click(r, c, \\\"插旗\\\");\\n        }\\n        deleteItemByCls(this.bindID);\\n        layData.forEach((row, r) => {\\n            row.forEach((item, c) => {\\n                layout.push({\\n                    title: item.isTurn ? (numberMap[item.aLanCount] || blankFh) : (item.isFlag ? flagFh : (item.aLanCount || notFh)),\\n                    col_type: \\\"flex_button\\\",\\n                    url: r + \\\"#\\\" + c + butclick,\\n                    extra: {\\n                        id: this.bindID + item.id,\\n                        cls: this.bindID,\\n                        longClick: [{\\n                            title: \\\"拆旗/插旗\\\",\\n                            js: $.toString(longclick, r, c)\\n                        }]\\n                    }\\n                });\\n            });\\n            layout.push({\\n                col_type: \\\"line\\\",\\n                extra: {\\n                    cls: this.bindID\\n                }\\n            });\\n        });\\n        storage0.putMyVar(\\\"layData\\\", layData);\\n        addItemAfter(this.bindID, layout);\\n        return this;\\n    }\\n\\n});\\n$.exports = Game;\"}]","proxy":"","icon":"https://appimg.dbankcdn.com/application/icon144/19ab2d6a9793436f8b7a1b5dae345be5_1.png"}
{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"gzip压缩","path":"pako","rule":"js:\nrequire(\"https://cdn.bootcdn.net/ajax/libs/pako/2.1.0/pako.es5.min.js\");\n\nfunction uint8ArrayToBase64(uint8Array) {\n    // 将 Uint8Array 转换为二进制字符串\n    /*var binaryString = '';\n    for (var i = 0; i < uint8Array.byteLength; i++) {\n        binaryString += String.fromCharCode(uint8Array[i]);\n    }*/\n    var binaryString = String.fromCharCode.apply(null, Array.from(uint8Array));\n\n\n    // 使用 window.btoa 将二进制字符串转换为 Base64 编码的字符串\n    return window0.btoa(binaryString);\n}\n\nfunction zip(str) {\n    /*const binaryString = pako.gzip(encodeURIComponent(str), {\n        to: 'string'\n    })*/\n    var arr = pako.gzip((str), {\n        to: 'string'\n    });\n    return uint8ArrayToBase64(arr);\n}\n\nfunction unzip(b64Data) {\n    let strData = window0.atob(b64Data);\n    const charData = strData.split('').map(function(x) {\n        return x.charCodeAt(0);\n    });\n    const binData = new Uint8Array(charData);\n    const data = pako.inflate(binData);\n    //strData = String.fromCharCode.apply(null, new Uint16Array(data));\n    return Utf8ArrayToStr(data);\n}\n\n//（1）解压缩\nfunction uncompress(b64Data) {\n    var strData = window0.atob(b64Data);\n    var charData = strData.split(\"\").map(function(x) {\n        return x.charCodeAt(0);\n    });\n    var binData = new Uint8Array(charData);\n    var data = pako.inflate(binData);\n    var strData = Utf8ArrayToStr(data);\n    return strData;\n}\n//（2）fix解压中文乱码\nfunction Utf8ArrayToStr(array) {\n    var out, i, len, c;\n    var char2, char3;\n    out = \"\";\n    len = array.length;\n    i = 0;\n    while (i < len) {\n        c = array[i++];\n        switch (c >> 4) {\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n                out += String.fromCharCode(c);\n                break;\n            case 12:\n            case 13:\n                char2 = array[i++];\n                out += String.fromCharCode(((c & 0x1f) << 6) | (char2 & 0x3f));\n                break;\n            case 14:\n                char2 = array[i++];\n                char3 = array[i++];\n                out += String.fromCharCode(\n                    ((c & 0x0f) << 12) | ((char2 & 0x3f) << 6) | ((char3 & 0x3f) << 0)\n                );\n                break;\n        }\n    }\n    return out;\n}\n// （3）压缩\nfunction compress(json) {\n    var binaryString = pako.gzip(json, {\n        to: \"string\"\n    });\n    return uint8ArrayToBase64(binaryString)\n}"}],"title":"hipy静态分类","author":"zetalpha","version":1,"type":"video","url":"hiker://empty##","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\n$.require(\"http://hiker.nokia.press/hikerule/rulelist.json?id=6945\")\n","searchFind":"","search_url":"","group":"⑧工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"/*<$>\n@include start\nhttp://hiker.nokia.press/hikerule/rulelist.json?id=6959\n@include end\n<$>*/\nrequire('https://gitcode.net/qq_32394351/dr/-/raw/master/js/预处理.js');","pages":"[{\"col_type\":\"movie_3\",\"name\":\"gzip压缩\",\"path\":\"pako\",\"rule\":\"js:\\nrequire(\\\"https://cdn.bootcdn.net/ajax/libs/pako/2.1.0/pako.es5.min.js\\\");\\n\\nfunction uint8ArrayToBase64(uint8Array) {\\n    // 将 Uint8Array 转换为二进制字符串\\n    /*var binaryString = '';\\n    for (var i = 0; i < uint8Array.byteLength; i++) {\\n        binaryString += String.fromCharCode(uint8Array[i]);\\n    }*/\\n    var binaryString = String.fromCharCode.apply(null, Array.from(uint8Array));\\n\\n\\n    // 使用 window.btoa 将二进制字符串转换为 Base64 编码的字符串\\n    return window0.btoa(binaryString);\\n}\\n\\nfunction zip(str) {\\n    /*const binaryString = pako.gzip(encodeURIComponent(str), {\\n        to: 'string'\\n    })*/\\n    var arr = pako.gzip((str), {\\n        to: 'string'\\n    });\\n    return uint8ArrayToBase64(arr);\\n}\\n\\nfunction unzip(b64Data) {\\n    let strData = window0.atob(b64Data);\\n    const charData = strData.split('').map(function(x) {\\n        return x.charCodeAt(0);\\n    });\\n    const binData = new Uint8Array(charData);\\n    const data = pako.inflate(binData);\\n    //strData = String.fromCharCode.apply(null, new Uint16Array(data));\\n    return Utf8ArrayToStr(data);\\n}\\n\\n//（1）解压缩\\nfunction uncompress(b64Data) {\\n    var strData = window0.atob(b64Data);\\n    var charData = strData.split(\\\"\\\").map(function(x) {\\n        return x.charCodeAt(0);\\n    });\\n    var binData = new Uint8Array(charData);\\n    var data = pako.inflate(binData);\\n    var strData = Utf8ArrayToStr(data);\\n    return strData;\\n}\\n//（2）fix解压中文乱码\\nfunction Utf8ArrayToStr(array) {\\n    var out, i, len, c;\\n    var char2, char3;\\n    out = \\\"\\\";\\n    len = array.length;\\n    i = 0;\\n    while (i < len) {\\n        c = array[i++];\\n        switch (c >> 4) {\\n            case 0:\\n            case 1:\\n            case 2:\\n            case 3:\\n            case 4:\\n            case 5:\\n            case 6:\\n            case 7:\\n                out += String.fromCharCode(c);\\n                break;\\n            case 12:\\n            case 13:\\n                char2 = array[i++];\\n                out += String.fromCharCode(((c & 0x1f) << 6) | (char2 & 0x3f));\\n                break;\\n            case 14:\\n                char2 = array[i++];\\n                char3 = array[i++];\\n                out += String.fromCharCode(\\n                    ((c & 0x0f) << 12) | ((char2 & 0x3f) << 6) | ((char3 & 0x3f) << 0)\\n                );\\n                break;\\n        }\\n    }\\n    return out;\\n}\\n// （3）压缩\\nfunction compress(json) {\\n    var binaryString = pako.gzip(json, {\\n        to: \\\"string\\\"\\n    });\\n    return uint8ArrayToBase64(binaryString)\\n}\"}]","proxy":"","icon":""}
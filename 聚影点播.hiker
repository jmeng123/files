{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"配置参数","path":"config","rule":"js:\n$.exports.version = 14;\n$.exports.依赖 = getItem('依赖', 'https://raw.gitcode.com/src48597962/juying/raw/master/SrcJuying.js');"},{"col_type":"movie_3","name":"云口令导入","path":"import","rule":"js:\nfunction cloudimport() {\n    let JYCode = fetch(\"hiker://home@聚影\");\n    if (JYCode) {\n        writeFile(\"hiker://files/_cache/Juying2/cloudimport.txt\", input);\n        return \"hiker://page/importConfirm#fullTheme##noRecordHistory##noHistory#?rule=聚影\"\n    } else {\n        return \"toast://没有聚影小程序，要是新版哦\";\n    }\n}\n$.exports = cloudimport();"},{"col_type":"movie_3","name":"代理管理","path":"ghproxy","rule":"js:\nlet cfgfile = \"hiker://files/rules/Src/Juying2/config.json\";\nlet Juconfig = {};\nlet Jucfg = fetch(cfgfile);\nif (Jucfg != \"\") {\n    eval(\"Juconfig=\" + Jucfg + \";\");\n}\nlet proxylist = Juconfig['ghproxy'] || [];\n\nfunction getproxy() {\n    return proxylist.filter(v => !v.stop).map(it => it.url);\n}\n\nfunction setproxy(input, zt) {\n    input = input.trim();\n    if (input) {\n        let index = proxylist.findIndex(it => it.url == input);\n        if (index == -1) {\n            proxylist.push({\n                url: input\n            });\n        } else if (zt == 1) {\n            delete proxylist[index].stop;\n        } else if (zt == 0) {\n            proxylist[index].stop = 1;\n        } else if (zt == 2) {\n            proxylist = proxylist.filter(v => v.url != input);\n        }\n        Juconfig['ghproxy'] = proxylist;\n        writeFile(cfgfile, JSON.stringify(Juconfig));\n    }\n}\n\nfunction proxyPage() {\n    setPageTitle('启动代理管理');\n    let d = [];\n    d.push({\n        title: getproxy().length==0?'需要github代理来获取代码，点击来个例子':'选择代码库获取方式',\n        desc: '有代理：' + proxylist.length + '，有效的：' + getproxy().length,\n        url: getproxy().length==0?$(\"#noLoading#\").lazyRule(() => {\n            eval(rc(getItem('依赖', 'https://raw.gitcode.com/src48597962/juying/raw/master/plugins/ghproxy.js'),24));\n            let ghproxy = getproxy(proxys);\n            if(ghproxy){\n                putMyVar('get_ghproxy',ghproxy);\n                refreshPage(false);\n                return 'toast://来了，点添加吧';\n            }else{\n                return 'toast://手工填写如：https://ghproxy.net/';\n            }\n        }):$(['方式一：自动获取代码库','方式二：手工指定代码库','方式三：下载本地代码库'], 1, '指定聚影代码获取方式').select(() => {\n            if(MY_INDEX==0){\n                return \"toast://添加完有效的github加速代理后返回刷新\";\n            }else if(MY_INDEX==0){\n                return $(getItem('依赖', ''), \"指定聚影代码仓地址\").input(() => {\n                    input = input.replace(/\\s+/g, '');\n                    if(!input.startsWith('http')){\n                        return \"toast://输入有误\";\n                    }\n                    setItem('依赖', input);\n                    refreshPage();\n                    return \"toast://已设置\";\n                })\n            }else{\n                toast(\"进入下载链接，导入完成后返回刷新\");\n                return \"web://https://src48597962.lanzouo.com/i4Ti12e60lsh\";\n            }\n        }),\n        col_type: \"text_1\"\n    });\n    d.push({\n        title: '添加',\n        col_type: 'input',\n        desc: '输入github加速代理地址',\n        url: $.toString(() => {\n            clearMyVar('get_ghproxy');\n            input = input.trim();\n            if(input && input.includes(\"/https\")){\n                input = input.split(\"/http\")[0] + \"/\";\n            }\n            if (!input.startsWith('http') || input.includes(\"githubusercontent.com\") || !input.endsWith(\"/\")) {\n                return \"toast://输入错误，请输入正确的github加速代理\";\n            }\n            $.require('ghproxy').setproxy(input);\n            refreshPage();\n            return \"hiker://empty\";\n        }),\n        extra: {\n            defaultValue: getMyVar('get_ghproxy',''),\n            titleVisible: true\n        }\n    });\n    d.push({\n        col_type: \"line\"\n    });\n    proxylist.reverse();\n    proxylist.forEach(it => {\n        d.push({\n            title: it.stop ? '‘‘’’<font color=\"#f20c00\">' + it.url + '</font>' : it.url,\n            url: $([it.stop ? \"启用\" : \"停用\", \"删除\", \"复制\",\"检测\"], 1, \"\").select((url) => {\n                if (input == \"启用\") {\n                    $.require('ghproxy').setproxy(url, 1);\n                } else if (input == \"停用\") {\n                    $.require('ghproxy').setproxy(url, 0);\n                } else if (input == \"删除\") {\n                    $.require('ghproxy').setproxy(url, 2);\n                } else if (input == \"复制\") {\n                    copy(url);\n                    return \"hiker://empty\";\n                } else if (input == \"检测\") {\n                    eval(rc(getItem('聚影', 'https://raw.gitcode.com/src48597962/juying/raw/master/plugins/ghproxy.js'),24));\n                    let ghproxy = getproxy([url]);\n                    if(ghproxy){\n                        return 'toast://成功';\n                    }else{\n                        return 'toast://失败';\n                    }\n                }\n                refreshPage(false);\n                return \"hiker://empty\";\n            }, it.url),\n            col_type: \"text_1\",\n            extra: {\n                id: it.url\n            }\n        });\n    })\n    setResult(d);\n}\n$.exports = {\n    getproxy: getproxy,\n    setproxy: setproxy,\n    proxyPage: proxyPage\n};"},{"col_type":"movie_3","name":"导入确认页","path":"importConfirm","rule":"js:\nlet srcHome = getPublicItem('聚影','');\nif(!srcHome){\n    eval(JSON.parse(fetch(\"hiker://home@聚影\")).preRule);\n    srcHome = config.聚影;\n}\nif (!config.聚影) {\n    initConfig({\n        聚影: srcHome\n    });\n}\nlet extfile = getParam(\"extfile\",\"\");\n\nrequire(srcHome.replace(/[^/]*$/,'') + 'SrcJySet.js');\nimportConfirm(extfile);"},{"col_type":"movie_3","name":"intent#js#","path":"intent","rule":"js:\nfunction jsimport() {\n    return \"hiker://page/importConfirm#fullTheme##noRecordHistory##noHistory#?extfile=\" + input;\n}\n$.exports = jsimport();"},{"col_type":"movie_3","name":"importGM","path":"importGM","rule":"let g = $.require('config').依赖;\nlet m = g.replace(/[^/]*$/,'') + \"plugins/globalmap.js\";\n$.importRequire(m)"},{"col_type":"movie_3","name":"聚影解析","path":"parseUrl","rule":"function aytmParse(input) {\n    let srcHome = getPublicItem('聚影', '');\n    if (!srcHome) {\n        return \"toast://需要先导入聚影新版本并打开一次\";\n    }\n    require(srcHome.replace(/[^/]*$/, '') + 'SrcParseS.js');\n    log(\"聚影解析开始>>>\");\n    let playUrl = SrcParseS.聚影(input);\n    log(\"聚影解析结束>>>\");\n    return playUrl;\n}\nlet lookSet = $(\"#noLoading#\").lazyRule(() => {\n    let srcHome = getPublicItem('聚影', '');\n    if (!srcHome) {\n        return \"toast://需要先导入聚影新版本并打开一次\";\n    }\n    require(srcHome.replace(/[^/]*$/, '') + 'SrcJyPublic.js');\n    return $('hiker://empty#noRecordHistory##noHistory#').rule((srcHome) => {\n        require(srcHome.replace(/[^/]*$/, '') + 'SrcJyMenu.js');\n        lookset();\n    },srcHome)\n})\n\n$.exports.解析 = aytmParse;\n$.exports.设置 = lookSet;"}],"title":"聚影点播","author":"","version":14,"type":"video","url":"hiker://empty","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nlet localcode = \"hiker://files/data/\"+MY_RULE.title+\"/code/SrcJuying.js\";\nif(config.聚影 || fileExist(localcode)){\n    try{\n        require(config.聚影);\n        dianboyiji();\n    }catch(e){\n        log(e.message);\n        toast(e.message);\n        confirm({\n            title:'依赖地址加载失败', \n            content:'是否重新获取依赖？' + (fileExist(localcode)?'\\n取消可切为本地依赖库':''), \n            confirm:$.toString(()=>{\n                clearItem('依赖');\n                initConfig({聚影:''});\n                refreshPage(false);\n                toast('偿试刷新依赖地址');\n            }), \n            cancel:$.toString((localcode)=>{\n                if(fileExist(localcode)){\n                    confirm({\n                        title:'发现本地依赖库', \n                        content:'是否切换走本地依赖库？', \n                        confirm:$.toString((localcode)=>{\n                            setItem('本地依赖库','1');\n                            initConfig({\n                                聚影: localcode\n                            })\n                        },localcode), \n                        cancel:$.toString(()=>{\n                            toast('重进或换网再试一次');\n                        })\n                    })\n                }\n            },localcode)\n        })\n    }\n}else{\n    $.require('ghproxy').proxyPage();\n}","searchFind":"js:\nrequire(config.聚影);\nsousuo()","search_url":"hiker://empty##**##fypage","group":"①推荐","detail_col_type":"movie_3","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"pc","preRule":"/*<$>\n@include start\nimportGM\n@include end\n<$>*/\n\nif (!config.聚影) {\n    let srcHome = getItem('依赖', '');\n    if (!srcHome) {\n        //远程依赖索引文件代理地址列表\n        let ghproxy = $.require('ghproxy').getproxy();\n        if(ghproxy.length==0){\n            ghproxy.push(\"\");\n        }\n        for (let i = 0; i < ghproxy.length; i++) {\n            try { //远程依赖索引\n                require(ghproxy[i] + 'https://raw.githubusercontent.com/src48597962/hk/master/JyRequire.js', {\n                    timeout: 3000\n                });\n                if (relyfile) {\n                    srcHome = relyfile.includes('raw.github') ? ghproxy[i] + relyfile : relyfile;\n                    setItem('依赖', srcHome);\n                    break;\n                }\n            } catch (e) {\n                $.require('ghproxy').setproxy(ghproxy[i], 0);\n                log(e.message);\n            }\n        }\n    }\n    let localcode = \"hiker://files/data/\"+MY_RULE.title+\"/code/SrcJuying.js\";\n    if(getItem('本地依赖库')==\"1\" && fileExist(localcode)){\n        srcHome = localcode;\n    }\n    initConfig({\n        依赖: srcHome,\n        聚影: srcHome\n    });\n    setPublicItem('聚影', srcHome);\n}\n//by.帅√`人才","pages":"[{\"col_type\":\"movie_3\",\"name\":\"配置参数\",\"path\":\"config\",\"rule\":\"js:\\n$.exports.version = 14;\\n$.exports.依赖 = getItem('依赖', 'https://raw.gitcode.com/src48597962/juying/raw/master/SrcJuying.js');\"},{\"col_type\":\"movie_3\",\"name\":\"云口令导入\",\"path\":\"import\",\"rule\":\"js:\\nfunction cloudimport() {\\n    let JYCode = fetch(\\\"hiker://home@聚影\\\");\\n    if (JYCode) {\\n        writeFile(\\\"hiker://files/_cache/Juying2/cloudimport.txt\\\", input);\\n        return \\\"hiker://page/importConfirm#fullTheme##noRecordHistory##noHistory#?rule=聚影\\\"\\n    } else {\\n        return \\\"toast://没有聚影小程序，要是新版哦\\\";\\n    }\\n}\\n$.exports = cloudimport();\"},{\"col_type\":\"movie_3\",\"name\":\"代理管理\",\"path\":\"ghproxy\",\"rule\":\"js:\\nlet cfgfile = \\\"hiker://files/rules/Src/Juying2/config.json\\\";\\nlet Juconfig = {};\\nlet Jucfg = fetch(cfgfile);\\nif (Jucfg != \\\"\\\") {\\n    eval(\\\"Juconfig=\\\" + Jucfg + \\\";\\\");\\n}\\nlet proxylist = Juconfig['ghproxy'] || [];\\n\\nfunction getproxy() {\\n    return proxylist.filter(v => !v.stop).map(it => it.url);\\n}\\n\\nfunction setproxy(input, zt) {\\n    input = input.trim();\\n    if (input) {\\n        let index = proxylist.findIndex(it => it.url == input);\\n        if (index == -1) {\\n            proxylist.push({\\n                url: input\\n            });\\n        } else if (zt == 1) {\\n            delete proxylist[index].stop;\\n        } else if (zt == 0) {\\n            proxylist[index].stop = 1;\\n        } else if (zt == 2) {\\n            proxylist = proxylist.filter(v => v.url != input);\\n        }\\n        Juconfig['ghproxy'] = proxylist;\\n        writeFile(cfgfile, JSON.stringify(Juconfig));\\n    }\\n}\\n\\nfunction proxyPage() {\\n    setPageTitle('启动代理管理');\\n    let d = [];\\n    d.push({\\n        title: getproxy().length==0?'需要github代理来获取代码，点击来个例子':'选择代码库获取方式',\\n        desc: '有代理：' + proxylist.length + '，有效的：' + getproxy().length,\\n        url: getproxy().length==0?$(\\\"#noLoading#\\\").lazyRule(() => {\\n            eval(rc(getItem('依赖', 'https://raw.gitcode.com/src48597962/juying/raw/master/plugins/ghproxy.js'),24));\\n            let ghproxy = getproxy(proxys);\\n            if(ghproxy){\\n                putMyVar('get_ghproxy',ghproxy);\\n                refreshPage(false);\\n                return 'toast://来了，点添加吧';\\n            }else{\\n                return 'toast://手工填写如：https://ghproxy.net/';\\n            }\\n        }):$(['方式一：自动获取代码库','方式二：手工指定代码库','方式三：下载本地代码库'], 1, '指定聚影代码获取方式').select(() => {\\n            if(MY_INDEX==0){\\n                return \\\"toast://添加完有效的github加速代理后返回刷新\\\";\\n            }else if(MY_INDEX==0){\\n                return $(getItem('依赖', ''), \\\"指定聚影代码仓地址\\\").input(() => {\\n                    input = input.replace(/\\\\s+/g, '');\\n                    if(!input.startsWith('http')){\\n                        return \\\"toast://输入有误\\\";\\n                    }\\n                    setItem('依赖', input);\\n                    refreshPage();\\n                    return \\\"toast://已设置\\\";\\n                })\\n            }else{\\n                toast(\\\"进入下载链接，导入完成后返回刷新\\\");\\n                return \\\"web://https://src48597962.lanzouo.com/i4Ti12e60lsh\\\";\\n            }\\n        }),\\n        col_type: \\\"text_1\\\"\\n    });\\n    d.push({\\n        title: '添加',\\n        col_type: 'input',\\n        desc: '输入github加速代理地址',\\n        url: $.toString(() => {\\n            clearMyVar('get_ghproxy');\\n            input = input.trim();\\n            if(input && input.includes(\\\"/https\\\")){\\n                input = input.split(\\\"/http\\\")[0] + \\\"/\\\";\\n            }\\n            if (!input.startsWith('http') || input.includes(\\\"githubusercontent.com\\\") || !input.endsWith(\\\"/\\\")) {\\n                return \\\"toast://输入错误，请输入正确的github加速代理\\\";\\n            }\\n            $.require('ghproxy').setproxy(input);\\n            refreshPage();\\n            return \\\"hiker://empty\\\";\\n        }),\\n        extra: {\\n            defaultValue: getMyVar('get_ghproxy',''),\\n            titleVisible: true\\n        }\\n    });\\n    d.push({\\n        col_type: \\\"line\\\"\\n    });\\n    proxylist.reverse();\\n    proxylist.forEach(it => {\\n        d.push({\\n            title: it.stop ? '‘‘’’<font color=\\\"#f20c00\\\">' + it.url + '</font>' : it.url,\\n            url: $([it.stop ? \\\"启用\\\" : \\\"停用\\\", \\\"删除\\\", \\\"复制\\\",\\\"检测\\\"], 1, \\\"\\\").select((url) => {\\n                if (input == \\\"启用\\\") {\\n                    $.require('ghproxy').setproxy(url, 1);\\n                } else if (input == \\\"停用\\\") {\\n                    $.require('ghproxy').setproxy(url, 0);\\n                } else if (input == \\\"删除\\\") {\\n                    $.require('ghproxy').setproxy(url, 2);\\n                } else if (input == \\\"复制\\\") {\\n                    copy(url);\\n                    return \\\"hiker://empty\\\";\\n                } else if (input == \\\"检测\\\") {\\n                    eval(rc(getItem('聚影', 'https://raw.gitcode.com/src48597962/juying/raw/master/plugins/ghproxy.js'),24));\\n                    let ghproxy = getproxy([url]);\\n                    if(ghproxy){\\n                        return 'toast://成功';\\n                    }else{\\n                        return 'toast://失败';\\n                    }\\n                }\\n                refreshPage(false);\\n                return \\\"hiker://empty\\\";\\n            }, it.url),\\n            col_type: \\\"text_1\\\",\\n            extra: {\\n                id: it.url\\n            }\\n        });\\n    })\\n    setResult(d);\\n}\\n$.exports = {\\n    getproxy: getproxy,\\n    setproxy: setproxy,\\n    proxyPage: proxyPage\\n};\"},{\"col_type\":\"movie_3\",\"name\":\"导入确认页\",\"path\":\"importConfirm\",\"rule\":\"js:\\nlet srcHome = getPublicItem('聚影','');\\nif(!srcHome){\\n    eval(JSON.parse(fetch(\\\"hiker://home@聚影\\\")).preRule);\\n    srcHome = config.聚影;\\n}\\nif (!config.聚影) {\\n    initConfig({\\n        聚影: srcHome\\n    });\\n}\\nlet extfile = getParam(\\\"extfile\\\",\\\"\\\");\\n\\nrequire(srcHome.replace(/[^/]*$/,'') + 'SrcJySet.js');\\nimportConfirm(extfile);\"},{\"col_type\":\"movie_3\",\"name\":\"intent#js#\",\"path\":\"intent\",\"rule\":\"js:\\nfunction jsimport() {\\n    return \\\"hiker://page/importConfirm#fullTheme##noRecordHistory##noHistory#?extfile=\\\" + input;\\n}\\n$.exports = jsimport();\"},{\"col_type\":\"movie_3\",\"name\":\"importGM\",\"path\":\"importGM\",\"rule\":\"let g = $.require('config').依赖;\\nlet m = g.replace(/[^/]*$/,'') + \\\"plugins/globalmap.js\\\";\\n$.importRequire(m)\"},{\"col_type\":\"movie_3\",\"name\":\"聚影解析\",\"path\":\"parseUrl\",\"rule\":\"function aytmParse(input) {\\n    let srcHome = getPublicItem('聚影', '');\\n    if (!srcHome) {\\n        return \\\"toast://需要先导入聚影新版本并打开一次\\\";\\n    }\\n    require(srcHome.replace(/[^/]*$/, '') + 'SrcParseS.js');\\n    log(\\\"聚影解析开始>>>\\\");\\n    let playUrl = SrcParseS.聚影(input);\\n    log(\\\"聚影解析结束>>>\\\");\\n    return playUrl;\\n}\\nlet lookSet = $(\\\"#noLoading#\\\").lazyRule(() => {\\n    let srcHome = getPublicItem('聚影', '');\\n    if (!srcHome) {\\n        return \\\"toast://需要先导入聚影新版本并打开一次\\\";\\n    }\\n    require(srcHome.replace(/[^/]*$/, '') + 'SrcJyPublic.js');\\n    return $('hiker://empty#noRecordHistory##noHistory#').rule((srcHome) => {\\n        require(srcHome.replace(/[^/]*$/, '') + 'SrcJyMenu.js');\\n        lookset();\\n    },srcHome)\\n})\\n\\n$.exports.解析 = aytmParse;\\n$.exports.设置 = lookSet;\"}]","proxy":"","icon":"hiker://files/cache/src/聚影.png"}
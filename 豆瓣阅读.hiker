{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"小类次---多层","path":"xiaoleici","rule":"js:\nlet init_cate1 = [];\nfor (let i = 0; i < 20; i++) {\n    init_cate1.push('0');\n}\n\nif (MY_PAGE === 1) {\n    const cate_temp_json1 = getMyVar('t1', JSON.stringify(init_cate1));\n    const cate_temp1 = JSON.parse(cate_temp_json1);\n    const classlist1 = pdfa(html, 小类次);\n    // log('sublist  is    ' + sublist)\n    classlist1.forEach((smallclass1, key1) => {\n        let sublist1 = pdfa(smallclass1, \"body&&a\");\n        let j = 0;\n        sublist1.forEach((it, jj) => {\n            d.push({\n                title: jj.toString() === cate_temp1[key1] ? \"““\" + pdfh(it, \"a&&Text\") + \"””\" : pdfh(it, \"a&&Text\"),\n                url: pd(it, \"a&&href\") + $('#noLoading#').lazyRule((params1) => {\n                    let new_cate1 = [];\n                    params1.cate_temp1.forEach((cate, index) => {\n                        new_cate1.push(index === 0 ? params1.key1.toString() : '0');\n                    })\n                    putMyVar('t1', JSON.stringify(new_cate1));\n\n                    params1.cate_temp1[params1.key1] = params1.jj.toString();\n                    putMyVar('t1', JSON.stringify(params1.cate_temp1));\n                    //putMyVar('subclassIndex', jj);\n                    // putVar(MY_RULE.title, JSON.stringify(jj));\n                    putVar(MY_RULE.url, input);\n                    refreshPage(true)\n                    return 'hiker://empty';\n                }, {\n\n                    cate_temp1: cate_temp1,\n                    jj: jj,\n                    key1: key1,\n                    page: MY_PAGE,\n                }),\n                col_type: \"scroll_button\",\n            });\n        })\n        d.push({\n            col_type: \"blank_block\"\n        });\n    })\n}"},{"col_type":"movie_3","name":"lazy","path":"lazy","rule":"var lazy = $('').lazyRule(() => {\n    try {\n        \n        var html = JSON.parse(fetchCodeByWebView(input).match(/r player_.*?=(.*?)</)[1])\n        var url = html.url\n        if (html.encrypt == '1') {\n            url = unescape(url);\n        } else if (html.encrypt == '2') {\n            url = unescape(base64Decode(url));\n        }\n        if (/m3u8|mp4/.test(url)) {\n            return url\n        } else {\n            return 'video://' + input\n        }\n    } catch (e) {\n        return 'video://' + input\n    }\n})"},{"col_type":"movie_3","name":"短评","path":"comment","rule":"js:\nvar d = [];\nlet true_url = getVar(MY_RULE.url, MY_URL).split('##')[0]\nvar num=(MY_PAGE-1)*20;\nif(/start/.test(true_url)){\n true_url=true_url+\"&start=\"+num+\"&limit=20\";\n}\nconst 小类次次=\".CommentTabs\";\nvar html = fetch(true_url, {\n    headers: {\n        \"User-Agent\": PC_UA\n    }\n});\nif (MY_PAGE==1){\nd.push({\n    col_type: 'blank_block',\n    });\nd.push({\n    col_type: 'rich_text',\n    title:pdfh(html, 'h1&&Text'),\nextra:{\n        \n        textSize:30,\n    }});}\neval(JSON.parse(request('hiker://page/xiaoleicici')).rule);\npdfa(html, \"#comments&&.comment-item\").forEach(x => {\n    d.push({\n    col_type: 'text_1',\n    title:'““””<small><span><font color=red>' +parseDomForHtml(x, '.comment-info&&a&&Text')+'\\t'+parseDomForHtml(x, '.comment-time&&Text')+'\\t'+parseDomForHtml(x, '.comment-location&&Text')+'\\t\\t\\t'+parseDomForHtml(x, '.comment-vote&&Text') + '</span></small></small>',\n    img:pd(x, 'img&&src'),\n    url:\"hiker://empty\",\n    });\n  let 短评 = parseDomForHtml(x, '.short&&Text');\nd.push({\n    title: 短评,\n    url: $().rule((短评) => {\n        setResult([{\n            title: 短评,\n            col_type: 'rich_text'\n        }])\n    }, 短评),\n    col_type: 'text_1'\n});\n})\nsetResult(d);"},{"col_type":"movie_3","name":"资源搜索","path":"searchzy","rule":"//资源搜索\nhtml = getResCode();\nlet title = parseDomForHtml(html,'h1&&Text');\nd.push({\n    col_type: 'line',\n    })\nd.push({\n    title: '搜索相关的影视资源',\n    col_type: 'avatar',\n    url: 'hiker://search?s='+title+'&rule=青豆',\n    img: 'https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/messy/24.svg'\n    });\nd.push({\n    col_type: 'line',\n    })\nd.push({\n    title: '图书馆Pro',\n    col_type: 'icon_5',\n    url: 'hiker://search?s='+title+'&rule=图书馆Pro',\n    img: 'https://gdown.baidu.com/img/0/512_512/f53bcf56bad60969487d3f5c90ec6012.png'\n    });\nd.push({\n    title: 'AI搜书',\n    col_type: 'icon_5',\n    url: 'hiker://search?s='+title+'&rule=AI搜书',\n    img: 'http://gimg0.baidu.com/gimg/src=http%3A%2F%2Fgdown.baidu.com%2Fimg%2F0%2F512_512%2F25529fb96fb19a1ffdbaaf0f6157cda9.png&app=2008&fmt=auto&size=b219,219&n=0&g=0n&sec=1693384742&t=fb503d56bfec119538b01a5dea2400c8'\n    });\nd.push({\n    title: '搜书君',\n    col_type: 'icon_5',\n    url: 'hiker://search?s='+title+'&rule=搜书君',\n    img: 'https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/square/416.png'\n    });\nd.push({\n    title: '知搜',\n    col_type: 'icon_5',\n    url: 'https://zhiso.cc/search/?q='+title,\n    img: 'https://zhiso.cc/static/image/favicon.ico'\n    });\nd.push({\n    title: '可阅',\n    col_type: 'icon_5',\n    url: 'https://kepub.net/search.html?keyword='+title,\n    img: 'https://kepub.net/favicon.ico'\n    });\nd.push({\n    title: '京东读书',\n    col_type: 'icon_5',\n    url: 'https://m-tob.jd.com/search_dosearch?serch='+title,\n    img: 'https://m-tob.jd.com/static/img/logo.png'\n    });\nd.push({\n    title: '熊猫搜书',\n    col_type: 'icon_5',\n    url: \"https://www.mrsd.top/search.html?keywords=\"+title,\n    img: 'https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/square/176.png'\n    });\nd.push({\n    title: 'Taco搜索',\n    col_type: 'icon_5',\n    url: 'https://www.tacoso.cc/search?keyword='+title+'&authCode=&_csrf=HxTkOkjK-FSDVcxd6VOCgX5Q4zKh3o2SwFAY',\n    img: 'https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/circle/35.png'\n    });\nd.push({\n    title: '热点图书网',\n    col_type: 'icon_5',\n    url: 'http://www.happydot.top/?s='+title,\n    img: 'https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/rounded/122.png'\n    });\nd.push({\n    title: '书舟搜索',\n    col_type: 'icon_5',\n    url: 'https://www.shuzhou.cc/?s='+title,\n    img: 'https://www.shuzhou.cc/favicon.ico'\n    });"},{"col_type":"movie_3","name":"原文摘录","path":"blockquote","rule":"js:\nvar d = [];\nlet true_url = getVar(MY_RULE.url, MY_URL).split('##')[0]\nvar num=(MY_PAGE-1)*20;\nif(/start/.test(true_url)){\n   true_url = true_url.replace(\"?_t=0\",\"\");\n}else{\n   true_url=true_url+\"&start=\"+num;  \n}\nconst 小类次次次次=\".nav-tab\";\nvar html = fetch(true_url, {\n    headers: {\n        \"User-Agent\": PC_UA\n    }\n});\nif (MY_PAGE==1){\nd.push({\n    col_type: 'blank_block',\n    });\nd.push({\n    col_type: 'rich_text',\n    title:pdfh(html, 'h1&&Text'),\nextra:{\n        \n        textSize:30,\n    }});}\neval(JSON.parse(request('hiker://page/小类次次次次')).rule);\n   const  blockquote= pdfa(html, \"body&&.blockquote-list&&li\")\n        blockquote.forEach(x => {\nd.push({\n    col_type: 'avatar',\n    title:'<small><span>' + parseDomForHtml(x, '.author-name&&Text')+'\\t\\t'+parseDomForHtml(x, 'span&&Text')+'\\t\\t'+parseDomForHtml(x, 'datetime&&Text')+ '</span><small>',\n    img:pd(x, 'img&&src'),\n    url:pd(x, 'a&&href'),\n    });\n  let 摘录内容 = parseDomForHtml(x, 'figure&&Text');\nd.push({\n    title:摘录内容 ,\n    url: $().rule((摘录内容) => {\n        setResult([{\n            title: 摘录内容,\n            col_type: 'rich_text'\n        }])\n    }, 摘录内容),\n    col_type: 'text_1'\n});\n})\nsetResult(d)"},{"col_type":"movie_3","name":"读书笔记","path":"annotation","rule":"js:\nvar d = [];\nlet true_url = getVar(MY_RULE.url, MY_URL).split('##')[0]\nvar num=(MY_PAGE-1)*10;\nif(/start/.test(true_url)){\n   true_url=true_url.replace(\"?_t=0\",\"\"); \n}else{\n   true_url=true_url+\"&start=\"+num;  \n}\nlog(true_url)\nconst 小类次次次次次 = \".green_tab\";\nvar html = fetch(true_url, {\n    headers: {\n        \"User-Agent\": PC_UA\n    }\n});\nif (MY_PAGE==1){\nd.push({\n    col_type: 'blank_block',\n    });\nd.push({\n    col_type: 'rich_text',\n    title:pdfh(html, 'h1&&Text'),\nextra:{\n        \n        textSize:30,\n    }});}\neval(JSON.parse(request('hiker://page/小类次次次次次')).rule);\n   const bd= pdfa(html, \"body&&.comments&&li\")\n        bd.forEach(x => {\nd.push({\n    col_type: 'avatar',\n    title:parseDomForHtml(x, '.user&&title&&Text')+parseDomForHtml(x, '.allstar50&&span'),\n    img:pd(x, 'img&&src'),\n    url:pd(x, 'a&&href'),\n    });\nd.push({\n    col_type: 'text_1',\n    title:parseDomForHtml(x, '.nlst&&a,2&&Text'),\n    url:pd(x, 'a&&href'),\n    });\n  let 读书笔记 = parseDomForHtml(x, '.all&&Text');\nd.push({\n    title:'““””<big><span>' +读书笔记 + '</span></big>',\n    url: $().rule((读书笔记) => {\n        setResult([{\n            title: 读书笔记,\n            col_type: 'rich_text'\n        }])\n    }, 读书笔记),\n    col_type: 'text_1'\n});\n})\nsetResult(d)"},{"col_type":"movie_3","name":"二级","path":"erji","rule":"js:\nvar d =  [];\nhtml = getResCode();\nlet list = parseDomForHtml(html,'body&&a');\nlet title = parseDomForHtml(html,'h1&&Text');\nlet id = pdfa(html,'body&&.page')\n//二级头部简介(作者，评分，出版社等)\nd.push({\n    col_type: 'movie_1_vertical_pic_blur',\n    extra: {gradient: true},\n    title:parseDomForHtml(html, 'h1&&Text')+parseDomForHtml(id,'section&&data-id')+'\\n'+parseDomForHtml(html, '.rating_self&&Text')+'\\t'+'力荐指数:'+parseDomForHtml(html, '.rating_per&&Text'),\n    desc:parseDomForHtml(html, '.subject&&Text'),\n    img:parseDom(html, 'img&&src'),\n    });\nd.push({\n    title: \"短评\",\n    url:   $(MY_URL.replace('#immersiveTheme#', '') + \"comments/?start=fypage@-1@*20@&limit=20&status=P&sort=score\").rule(() => {\n\n        return eval(JSON.parse(request('hiker://page/comment')).rule)\n    }),\n    col_type: \"icon_5\",\n    pic_url: \"https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/unframed/262.png\"\n});\nd.push({\n    title: \"原文摘录\",\n    url:  $(MY_URL.replace('#immersiveTheme#', '') + \"blockquotes?sort=score&start=fypage@-1@*20@?_t=0\").rule(() => {\n\n        return eval(JSON.parse(request('hiker://page/blockquote')).rule)\n    }),\n    col_type: \"icon_5\",\n    pic_url: \"https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/unframed/356.png\"\n});\nd.push({\n    title: \"读书笔记\",\n    url:  $(MY_URL.replace('#immersiveTheme#', '') + \"annotation?sort=rank&start=fypage@-1@*10@?_t=0\").rule(() => {\n        return eval(JSON.parse(request('hiker://page/annotation')).rule)\n    }),\n    col_type: \"icon_5\",\n    pic_url: \"https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/unframed/375.png\"\n});\nd.push({\n    title: \"书评\",\n    url:    $(MY_URL.replace('#immersiveTheme#', '') + \"reviews?start=fypage\").rule(() => {\n\n        return eval(JSON.parse(request('hiker://page/reviews')).rule)\n    }),\n    col_type: \"icon_5\",\n    pic_url: \"https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/unframed/231.png\"\n});\nd.push({\n    title: \"论坛\",\n    url:    $(MY_URL.replace('#immersiveTheme#', '') + \"discussion/?start=fypage@-1@*20@&sort_by=time\").rule(() => {\n\n        return eval(JSON.parse(request('hiker://page/discussion')).rule)\n    }),\n    col_type: \"icon_5\",\n    pic_url: \"https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/unframed/578.png\"\n});\nd.push({\n    col_type: 'line_blank',\n    })\nd.push({\n    col_type: 'line',\n    })\nd.push({\n    title: '搜索相关的影视资源',\n    col_type: 'avatar',\n    url: 'hiker://search?s='+title+'&rule=青豆',\n    img: 'https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/messy/24.svg'\n    });\nd.push({\n    col_type: 'line',\n    })\nd.push({\n    title: '图书馆Pro',\n    col_type: 'icon_5',\n    url: 'hiker://search?s='+title+'&rule=图书馆Pro',\n    img: 'https://gdown.baidu.com/img/0/512_512/f53bcf56bad60969487d3f5c90ec6012.png'\n    });\nd.push({\n    title: 'AI搜书',\n    col_type: 'icon_5',\n    url: 'hiker://search?s='+title+'&rule=AI搜书',\n    img: 'http://gimg0.baidu.com/gimg/src=http%3A%2F%2Fgdown.baidu.com%2Fimg%2F0%2F512_512%2F25529fb96fb19a1ffdbaaf0f6157cda9.png&app=2008&fmt=auto&size=b219,219&n=0&g=0n&sec=1693384742&t=fb503d56bfec119538b01a5dea2400c8'\n    });\nd.push({\n    title: '搜书君',\n    col_type: 'icon_5',\n    url: 'hiker://search?s='+title+'&rule=搜书君',\n    img: 'https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/square/416.png'\n    });\nd.push({\n    title: '知搜',\n    col_type: 'icon_5',\n    url: 'https://zhiso.cc/search/?q='+title,\n    img: 'https://zhiso.cc/static/image/favicon.ico'\n    });\nd.push({\n    title: '可阅',\n    col_type: 'icon_5',\n    url: 'https://kepub.net/search.html?keyword='+title,\n    img: 'https://kepub.net/favicon.ico'\n    });\nd.push({\n    title: '京东读书',\n    col_type: 'icon_5',\n    url: 'https://m-tob.jd.com/search_dosearch?serch='+title,\n    img: 'https://m-tob.jd.com/static/img/logo.png'\n    });\nd.push({\n    title: '熊猫搜书',\n    col_type: 'icon_5',\n    url: \"https://www.mrsd.top/search.html?keywords=\"+title,\n    img: 'https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/square/176.png'\n    });\nd.push({\n    title: 'Taco搜索',\n    col_type: 'icon_5',\n    url: 'https://www.tacoso.cc/search?keyword='+title+'&authCode=&_csrf=HxTkOkjK-FSDVcxd6VOCgX5Q4zKh3o2SwFAY',\n    img: 'https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/circle/35.png'\n    });\nd.push({\n    title: '热点图书网',\n    col_type: 'icon_5',\n    url: 'http://www.happydot.top/?s='+title,\n    img: 'https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/rounded/122.png'\n    });\nd.push({\n    title: '书舟搜索',\n    col_type: 'icon_5',\n    url: 'https://www.shuzhou.cc/?s='+title,\n    img: 'https://www.shuzhou.cc/favicon.ico'\n    });\nd.push({\n    col_type: 'line_blank',\n    });\nd.push({\n    col_type: 'rich_text',\n    title:'📄书籍信息',\nextra:{\n        \n        textSize:22,\n    }},\n    {\ncol_type: 'line',\n    });\nlet 丛书信息 = parseDomForHtml(html, '.subject_show&&Text');\n丛书信息= 丛书信息.replace('丛书信息 · · · · · · 　　','').replace('支持 Web、iPhone、iPad、Android 阅读器','').replace(' · · · · · · ','：')\nd.push({\n    col_type: 'rich_text',\n    title:丛书信息,\n    desc:'',\n    });\nlet 内容简介 = parseDomForHtml(html, '.all&&Text') ? parseDomForHtml(html, '.all&&Text') : parseDomForHtml(html, '.intro&&Text');\nd.push({\n    title: '内容简介',\n    url: $().rule((内容简介) => {\n        setResult([{\n            title: 内容简介,\n            col_type: 'long_text'\n\n        }])\n    }, 内容简介),\n    col_type: 'text_3'\n});\n\nlet 作者简介 = parseDomForHtml(html, '.indent,3&&Text');\nd.push({\n    title: '作者简介',\n    url: $().rule((作者简介) => {\n        setResult([{\n            title: 作者简介,\n            col_type: 'long_text'\n        }])\n    }, 作者简介),\n    col_type: 'text_3'\n});\nd.push({\n    title: \"书单推荐\",\n    url:    $(MY_URL.replace('#immersiveTheme#', '')+ \"doulists?start=fypage@-1@*20@?_t=0\").rule(() => {\n        return eval(JSON.parse(request('hiker://page/doulists')).rule)\n    }),\n    col_type: \"text_3\",\n    pic_url: \"\"\n});\nd.push({\n    col_type: 'line_blank',\n    });\nd.push({\n    col_type: 'rich_text',\n    title:'👍相似推荐',\nextra:{     \n        textSize:22,\n    }\n    }  , {\ncol_type: 'line',\n    });   \nconst  rec= pdfa(html, \"body&&dl\")\n  for (var i = 5; i < rec.length&& i<10; i++) {\nd.push({\n    col_type: 'movie_3',\n    title:pdfh(rec[i], 'dd&&Text'),\n    img:pd(rec[i], 'img&&src'),\n    url:pd(rec[i], 'a&&href')+'#immersiveTheme#'+'@rule=js:var d = [];$.require(\"hiker://page/erji\")',\n    });\n}\nfor (var i = 11; i < rec.length&& i<15; i++) {\nd.push({\n    col_type: 'movie_3',\n    title:pdfh(rec[i], 'dd&&Text'),\n    img:pd(rec[i], 'img&&src'),\n    url:pd(rec[i], 'a&&href')+'#immersiveTheme#'+'@rule=js:var d = [];$.require(\"hiker://page/erji\")',\n    });\n}\nd.push({col_type: 'big_big_blank_block'});\nsetResult(d);"},{"col_type":"movie_3","name":"标签页","path":"tag","rule":"js:\n//本程序才用L大佬翻页\naddListener(\"onClose\", () => {\n    for (let it of listMyVarKeys()) {\n        clearMyVar(it);\n    }\n});\naddListener(\"onRefresh\", () => {\n    clearMyVar(\"nextPage\");\n    clearMyVar('classIndex');\n    clearMyVar('t');\n    clearMyVar('t1');\n});\nvar d = [];\n\n//var 大类 = \".abc\";\nvar 小类 = \"#content&&tr\"; //多层-----小类\n//var 小类次 = \"#content&&.hot-tags-col5&&li:has(li:nth-child(n+2))\"; \n\nMY_URL = MY_URL.replace('hiker://empty##', '')\n\n//log(MY_URL)\nlet true_url = getVar(MY_RULE.url, MY_URL).split('##')[0]\n\n//true_url = true_url.replace(\"type\", \"show\")\nlog('true_url' + true_url)\nconst page = MY_PAGE\n\n\n//获取上次缓存的下页链接\nlet nextPage = getMyVar(\"nextPage\", \"\");\n//如果有下一页且不是第一页就使用下一页链接\nif (nextPage && MY_PAGE > 1) {\n    true_url = nextPage;\n} \nvar html = fetchPC(true_url)\ntry {\n    //缓存下一页\n    let nextUrl = pd(html, \"a:contains(后页)&&href\"); \n    putMyVar(\"nextPage\", nextUrl || \"\");\n    log(\"nextUrl----------------------\")\n    log(nextUrl)\n} catch (e) {\n    clearMyVar(\"nextPage\");\n    toast(\"好像没有下一页了！\");\n}\n\nif (MY_PAGE == 1) {\nd.push({\n        img:'/storage/emulated/0/Android/data/com.example.hikerview/files/Documents/H_轮播图/阅读.gif',\n        col_type: \"pic_1_full\",\n        url:'hiker://empty'\n    });\nd.push({\n        title: '搜索',\n        col_type: 'input',\n        url: \"'hiker://search?s='+input+'&rule=豆瓣读书'\",\n        })\nd.push({\n        title: \"豆瓣TOP榜\",\n        url: \"https://book.douban.com/top250\" + $('#immersiveTheme#').lazyRule(() => {\n            putVar(MY_RULE.url, input);\n            refreshPage();\n            return 'hiker://empty';\n        }),\n        col_type: \"scroll_button\",\n        desc: \"\",\n        pic_url: \"\"\n    });\nd.push({\n        title: '小说排行榜',\n        col_type: 'scroll_button',\n        url: \"hiker://home@起点排行\",\n        })\nd.push({\n        title: '微信阅读榜',\n        col_type: 'scroll_button',\n        url: \"hiker://home@微信阅读\",\n        })\nd.push({\n        title: '书架',\n        col_type: 'scroll_button',\n        url: \"hiker://page/Main.view?rule=本地资源管理\",\n        })\n    d.push({\n        title: \"标签\",\n        url: \"https://book.douban.com/tag/?view=type&icn=index-sorttags-hot#%E7%A7%91%E6%8A%80\" + $('#immersiveTheme#').lazyRule(() => {\n            putVar(MY_RULE.url, input);\n            refreshPage();\n            return 'hiker://empty';\n        }),\n        col_type: \"scroll_button\",\n        desc: \"\",\n        pic_url: \"\"\n    });\n    \n    d.push({\n        col_type: \"big_blank_block\"\n    });\n}\n\ntry {\n    if (/tag/.test(true_url)) { eval(JSON.parse(request('hiker://page/xiaolei')).rule);\n        const contentlist1 = pdfa(html, \"#subject_list&&.subject-item\")\n        contentlist1.forEach(x => {\n            // log('X    is:  ' + x)\n            let title = pdfh(x, 'h2&&Text')\n            d.push({\n                title: pdfh(x, 'h2&&Text'),\n                url: pd(x, 'a&&href')+ '#immersiveTheme#',\n                col_type: \"movie_3\",\n                desc: pdfh(x, '.pub&&Text'),\n                pic_url: pd(x, 'img&&src'),\n                extra: {\n                    longClick: [{\n                        title: '海阔搜索',\n                        js: $.toString((title) => {\n                            return 'hiker://search?s=' + title\n                        }, title)\n                    }, {\n                        title: 'AI搜书',\n                        js: $.toString((title) => {\n                            return 'hiker://search?s=' + title + '&rule=AI搜书'\n                        }, title)\n                    }, {\n                        title: '图书馆Pro',\n                        js: $.toString((title) => {\n                            return 'hiker://search?s=' + title + '&rule=图书馆Pro'\n                        }, title)\n                    }, {\n                        title: '阅读组',\n                        js: $.toString((title) => {\n                            return 'hiker://search?s=' + title + '&group=阅读'\n                        }, title)\n                    }]\n                }\n            })\n        })\n    }\n    else if(/top/.test(true_url)) {\n        const contentlist2 = pdfa(html, \"#content&&table\")\n        contentlist2.forEach(x => {\n            let title = pdfh(x, '.pl2&&a&&title')\n            d.push({\n                title: title,\n                url: pd(x, '.pl2&&a&&href')+ '#immersiveTheme#',\n                col_type: \"movie_3\",\n                desc: pdfh(x, '.pl&&Text'),\n                pic_url: pd(x, 'img&&src'),\n                extra: {\n                    longClick: [{\n                        title: '海阔搜索',\n                        js: $.toString((title) => {\n                            return 'hiker://search?s=' + title\n                        }, title)\n                    }, {\n                        title: 'AI搜书',\n                        js: $.toString((title) => {\n                            return 'hiker://search?s=' + title + '&rule=AI搜书'\n                        }, title)\n                    }, {\n                        title: '图书馆Pro',\n                        js: $.toString((title) => {\n                            return 'hiker://search?s=' + title + '&rule=图书馆Pro'\n                        }, title)\n                    }, {\n                        title: '阅读组',\n                        js: $.toString((title) => {\n                            return 'hiker://search?s=' + title + '&group=阅读'\n                        }, title)\n                    }]\n                }\n            })\n        })}\n\n    } catch (e) {\n        toast(\"其他列表没写，好像出错了！请自己写其他列表吧😄\");\n    }\n    setResult(d);"},{"col_type":"movie_3","name":"小类次次","path":"xiaoleicici","rule":"js:\nlet init_cate1 = [];\nfor (let i = 0; i < 20; i++) {\n    init_cate1.push('0');\n}\n\nif (MY_PAGE === 1) {\n    const cate_temp_json1 = getMyVar('tcc', JSON.stringify(init_cate1));\n    const cate_temp1 = JSON.parse(cate_temp_json1);\n    const classlistcc = pdfa(html, 小类次次);\n    // log('sublist  is    ' + sublist)\n    classlistcc.forEach((smallclass1, key1) => {\n        let sublistcc = pdfa(smallclass1, \"body&&a\");\n        let j = 0;\n        sublistcc.forEach((it, jjj) => {\n            d.push({\n                title: jjj.toString() === cate_temp1[key1] ? \"““\" + pdfh(it, \"a&&Text\") + \"””\" : pdfh(it, \"a&&Text\"),\n                url: pd(it, \"a&&href\") + $('#noLoading#').lazyRule((params1) => {\n                    let new_cate1 = [];\n                    params1.cate_temp1.forEach((cate, index) => {\n                        new_cate1.push(index === 0 ? params1.key1.toString() : '0');\n                    })\n                    putMyVar('tcc', JSON.stringify(new_cate1));\n\n                    params1.cate_temp1[params1.key1] = params1.jjj.toString();\n                    putMyVar('tcc', JSON.stringify(params1.cate_temp1));\n                    //putMyVar('subclassIndex', jjj);\n                    // putVar(MY_RULE.title, JSON.stringify(jjj));\n                    putVar(MY_RULE.url, input);\n                    refreshPage(true)\n                    return 'hiker://empty';\n                }, {\n\n                    cate_temp1: cate_temp1,\n                    jjj: jjj,\n                    key1: key1,\n                    page: MY_PAGE,\n                }),\n                col_type: \"scroll_button\",\n            });\n        })\n        d.push({\n            col_type: \"blank_block\"\n        });\n    })\n}"},{"col_type":"movie_3","name":"书单","path":"doulists","rule":"js:\nvar d = [];\nlet true_url = getVar(MY_RULE.url, MY_URL).split('##')[0]\nvar num=(MY_PAGE-1)*20;\nif(/start/.test(true_url)){ \n   true_url = true_url.replace(\"?_t=0\",\"\");  \n}else{\n   true_url=true_url+\"&start=\"+num;\n}\nvar html = fetch(true_url, {\n    headers: {\n        \"User-Agent\": PC_UA\n    }\n});\nif (MY_PAGE==1){\nd.push({\n    col_type: 'blank_block',\n    });\nd.push({\n    col_type: 'rich_text',\n    title:pdfh(html, 'h1&&Text'),\nextra:{\n        \n        textSize:30,\n    }});}\npdfa(html, \"body&&.doulist-list&&li\").forEach(x => {\n    d.push({\n        title:pdfh(x, 'a,1&&Text')+'\\t\\t'+pdfh(x,'.meta&&Text'),\n        url: 'hiker://empty',\n        col_type: \"avatar\",\n        desc:'',\n        pic_url: pdfh(x, '.meta&&img&&src'),\n    });  \nd.push({\n        title:pdfh(x, 'h3&&Text'),\n        url: pd(x, 'a&&href')+'#immersiveTheme#'+'?start=fypage&sort=seq&playable=0&sub_type='+'@rule=js:$.require(\"hiker://page/doulistxq\")',\n        desc:pdfh(x, '.intro&&Text'),\n        pic_url: pdfh(x, '.doulist-cover&&img&&src'),\n        col_type: 'movie_1_vertical_pic'\n});\n})\nsetResult(d);"},{"col_type":"movie_3","name":"小类次次次","path":"小类次次次","rule":"js:\nlet init_cate1 = [];\nfor (let i = 0; i < 20; i++) {\n    init_cate1.push('0');\n}\n\nif (MY_PAGE === 1) {\n    const cate_temp_json1 = getMyVar('tccc', JSON.stringify(init_cate1));\n    const cate_temp1 = JSON.parse(cate_temp_json1);\n    const classlistccc = pdfa(html, 小类次次次);\n    // log('sublist  is    ' + sublist)\n    classlistccc.forEach((smallclass1, key1) => {\n        let sublistccc = pdfa(smallclass1, \"body&&a\");\n        let j = 0;\n        sublistccc.forEach((it, jjj) => {\n            d.push({\n                title: jjj.toString() === cate_temp1[key1] ? \"““\" + pdfh(it, \"a&&Text\") + \"””\" : pdfh(it, \"a&&Text\"),\n                url: pd(it, \"a&&href\") + $('#noLoading#').lazyRule((params1) => {\n                    let new_cate1 = [];\n                    params1.cate_temp1.forEach((cate, index) => {\n                        new_cate1.push(index === 0 ? params1.key1.toString() : '0');\n                    })\n                    putMyVar('tccc', JSON.stringify(new_cate1));\n\n                    params1.cate_temp1[params1.key1] = params1.jjj.toString();\n                    putMyVar('tccc', JSON.stringify(params1.cate_temp1));\n                    //putMyVar('subclassIndex', jjj);\n                    // putVar(MY_RULE.title, JSON.stringify(jjj));\n                    putVar(MY_RULE.url, input);\n                    refreshPage(true)\n                    return 'hiker://empty';\n                }, {\n\n                    cate_temp1: cate_temp1,\n                    jjj: jjj,\n                    key1: key1,\n                    page: MY_PAGE,\n                }),\n                col_type: \"scroll_button\",\n            });\n        })\n        d.push({\n            col_type: \"blank_block\"\n        });\n    })\n}"},{"col_type":"movie_3","name":"书单列表","path":"doulistxq","rule":"js:\nvar d =  [];\nhtml = getResCode();\nlet list = parseDomForHtml(html,'body&&a');\nlet title = parseDomForHtml(html,'a&&Text');\n//二级头部简介(作者，评分，出版社等)\nif ( MY_PAGE==1){\nd.push({\n    col_type: 'movie_1_vertical_pic_blur',\n    extra: {gradient: true},\n    title:parseDomForHtml(html, 'h1&&Text')+'\\n'+pdfh(html, '.meta&&Text'),\n    desc:parseDomForHtml(html, '.doulist-about&&Text'),\n    img:parseDom(html, '.doulist-cover&&img&&src'),\n    });\nd.push({\n    col_type: 'rich_text',\n    title:'⭐️该书单被'+parseDomForHtml(html, '.doulist-followers-link&&Text')+'人关注'+'\\t\\t\\t'+parseDomForHtml(html, '.rec-num&&Text')+'推荐'\n    });\n}\n//MY_URL = MY_URL.replace('hiker://empty##', '')\nlog(MY_PAGE)\nlog(\"MY_URL\"+MY_URL)\nlet true_url = getVar(MY_RULE.url, MY_URL).split('##')[0]\nvar num=(MY_PAGE-1)*20;\nlog(num)\nlog(\"true_url\"+true_url)\nif(/start/.test(true_url)){  \n   true_url=true_url.replace(\"start=1\",\"start=\"+num);\nlog(\"又匹配true_url1\"+true_url)   \n}else{\n   true_url=true_url+\"&start=\"+num;\n//https://book.douban.com/subject/4913064/reviews?sort=time&start=20\n\n//https://book.douban.com/subject/4913064/reviews?sort=time#noLoading\n    log(\"true_url2\"+true_url)\n    \n}\n log(\"true_url最终\"+true_url)\nvar html = fetch(true_url, {\n    headers: {\n        \"User-Agent\": PC_UA\n    }\n});\n//log(html)\nlog('html')\npdfa(html, \"#content&&.doulist-item\").forEach(x => {\n    d.push({\n        title:pdfh(x, '.title&&Text')+'\\t\\t'+pdfh(x,'.rating&&Text'),\n        url: pd(x, 'a&&href')+'#immersiveTheme#'+'@rule=js:var d = [];$.require(\"hiker://page/erji\")',\n        col_type: \"movie_1_vertical_pic\",\n        pic_url: pdfh(x, 'img&&src'),\n        desc:pdfh(x, '.abstract&&Text')\n    });  \n})\nsetResult(d);"},{"col_type":"movie_3","name":"小类次次次次","path":"小类次次次次","rule":"js:\nlet init_cate1 = [];\nfor (let i = 0; i < 20; i++) {\n    init_cate1.push('0');\n}\n\nif (MY_PAGE === 1) {\n    const cate_temp_json1 = getMyVar('tcccc', JSON.stringify(init_cate1));\n    const cate_temp1 = JSON.parse(cate_temp_json1);\n    const classlistcccc = pdfa(html, 小类次次次次);\n    // log('sublist  is    ' + sublist)\n    classlistcccc.forEach((smallclass1, key1) => {\n        let sublistcccc = pdfa(smallclass1, \"body&&a\");\n        let j = 0;\n        sublistcccc.forEach((it, jjj) => {\n            d.push({\n                title: jjj.toString() === cate_temp1[key1] ? \"““\" + pdfh(it, \"a&&Text\") + \"””\" : pdfh(it, \"a&&Text\"),\n                url: pd(it, \"a&&href\") + $('#noLoading#').lazyRule((params1) => {\n                    let new_cate1 = [];\n                    params1.cate_temp1.forEach((cate, index) => {\n                        new_cate1.push(index === 0 ? params1.key1.toString() : '0');\n                    })\n                    putMyVar('tcccc', JSON.stringify(new_cate1));\n\n                    params1.cate_temp1[params1.key1] = params1.jjj.toString();\n                    putMyVar('tcccc', JSON.stringify(params1.cate_temp1));\n                    //putMyVar('subclassIndex', jjj);\n                    // putVar(MY_RULE.title, JSON.stringify(jjj));\n                    putVar(MY_RULE.url, input);\n                    refreshPage(true)\n                    return 'hiker://empty';\n                }, {\n\n                    cate_temp1: cate_temp1,\n                    jjj: jjj,\n                    key1: key1,\n                    page: MY_PAGE,\n                }),\n                col_type: \"scroll_button\",\n            });\n        })\n        d.push({\n            col_type: \"blank_block\"\n        });\n    })\n}"},{"col_type":"movie_3","name":"小类次次次次次","path":"小类次次次次次","rule":"js:\nlet init_cate1 = [];\nfor (let i = 0; i < 20; i++) {\n    init_cate1.push('0');\n}\n\nif (MY_PAGE === 1) {\n    const cate_temp_json1 = getMyVar('tcccc', JSON.stringify(init_cate1));\n    const cate_temp1 = JSON.parse(cate_temp_json1);\n    const classlistcccc = pdfa(html, 小类次次次次次);\n    // log('sublist  is    ' + sublist)\n    classlistcccc.forEach((smallclass1, key1) => {\n        let sublistcccc = pdfa(smallclass1, \"body&&a\");\n        let j = 0;\n        sublistcccc.forEach((it, jjj) => {\n            d.push({\n                title: jjj.toString() === cate_temp1[key1] ? \"““\" + pdfh(it, \"a&&Text\") + \"””\" : pdfh(it, \"a&&Text\"),\n                url: pd(it, \"a&&href\") + $('#noLoading#').lazyRule((params1) => {\n                    let new_cate1 = [];\n                    params1.cate_temp1.forEach((cate, index) => {\n                        new_cate1.push(index === 0 ? params1.key1.toString() : '0');\n                    })\n                    putMyVar('tcccc', JSON.stringify(new_cate1));\n\n                    params1.cate_temp1[params1.key1] = params1.jjj.toString();\n                    putMyVar('tcccc', JSON.stringify(params1.cate_temp1));\n                    //putMyVar('subclassIndex', jjj);\n                    // putVar(MY_RULE.title, JSON.stringify(jjj));\n                    putVar(MY_RULE.url, input);\n                    refreshPage(true)\n                    return 'hiker://empty';\n                }, {\n\n                    cate_temp1: cate_temp1,\n                    jjj: jjj,\n                    key1: key1,\n                    page: MY_PAGE,\n                }),\n                col_type: \"scroll_button\",\n            });\n        })\n        d.push({\n            col_type: \"blank_block\"\n        });\n    })\n}"},{"col_type":"movie_3","name":"大类----一行","path":"dalei","rule":"js:\n\nlet classIndex = Number(getMyVar(\"classIndex\", \"0\"));\nif (MY_PAGE == 1) {\n    const list = pdfa(html, 大类);\n    //    log('list  is    ' + list)\n    let i = 0;\n    list.forEach((it, i) => {\n        d.push({\n            title: classIndex === i ? \"““\" + '读书首页' + \"””\" : '读书首页',\n            url: pd(it, \"a&&href\") + $('#noLoading#').lazyRule((i) => {\n                putMyVar('classIndex', i);\n                putVar(MY_RULE.title, JSON.stringify(i));\n                putVar(MY_RULE.url, input);\n                refreshPage(true)\n                return 'hiker://empty';\n            }, i),\n            col_type: \"scroll_button\",\n        })\n    })\n   /* d.push({\n        col_type: \"big_blank_block\",\n    })\n*/\n}"},{"col_type":"movie_3","name":"小类---多层","path":"xiaolei","rule":"js:\n    let init_cate = [];\nfor (let i = 0; i < 20; i++) {\n    init_cate.push('0');\n}\n\nif (parseInt(MY_PAGE) === 1) {\n    const cate_temp_json = getMyVar('t', JSON.stringify(init_cate));\n    const cate_temp = JSON.parse(cate_temp_json);\n    const classlist = pdfa(html, 小类);\n    // log('sublist  is    ' + sublist)\n    classlist.forEach((smallclass, key) => {\n        let sublist = pdfa(smallclass, \"body&&a\");\n        let j = 0;\n        sublist.forEach((it, j) => {\n            d.push({\n                title: j.toString() === cate_temp[key] ? \"““\" + pdfh(it, \"a&&Text\") + \"””\" : pdfh(it, \"a&&Text\"),\n                url: pd(it, \"a&&href\") + $('#noLoading#').lazyRule((params) => {\n                    let new_cate = [];\n                    params.cate_temp.forEach((cate, index) => {\n                        new_cate.push(index === 0 ? params.key.toString() : '0');\n                    })\n                    putMyVar('t', JSON.stringify(new_cate));\n\n                    params.cate_temp[params.key] = params.j.toString();\n                    putMyVar('t', JSON.stringify(params.cate_temp));\n                    //putMyVar('subclassIndex', j);\n                    // putVar(MY_RULE.title, JSON.stringify(j));\n                    putVar(MY_RULE.url, input);\n                    refreshPage(true)\n                    return 'hiker://empty';\n                }, {\n\n                    cate_temp: cate_temp,\n                    j: j,\n                    key: key,\n                    page: MY_PAGE,\n                }),\n                col_type: \"flex_button\",\n            });\n        })\n        d.push({\n            col_type: \"blank_block\"\n        });\n    })\n}"},{"col_type":"movie_3","name":"书评详情","path":"reviewer","rule":"js:\nvar d = [];\nlet myurl = MY_URL;\nvar html = fetch(myurl, {\n    headers: {\n        \"User-Agent\": PC_UA\n    }\n});\nvar content = pdfh(html, \".review-content&&Html\");\nd.push({\n    title: content,\n    col_type: \"rich_text\",\n    extra: {\n        textSize: 18,\n    }\n});\nsetResult(d);"},{"col_type":"movie_3","name":"书评","path":"reviews","rule":"js:\nvar d = [];\nlet true_url = getVar(MY_RULE.url, MY_URL).split('##')[0]\nvar num=(MY_PAGE-1)*20;\n/*\nif(/start/.test(true_url)){\n   true_url=true_url.replace(\"start=1\",\"start=\"+num);  \n}else{\n   true_url=true_url+\"&start=\"+num;  \n}\n*/\nconst 小类次次次=\"#content&&.top-tab\";\nvar html = fetch(true_url, {\n    headers: {\n        \"User-Agent\": PC_UA\n    }\n});\nif (MY_PAGE==1){\nd.push({\n    col_type: 'blank_block',\n    });\nd.push({\n    col_type: 'rich_text',\n    title:pdfh(html, 'h1&&Text'),\nextra:{\n        \n        textSize:30,\n    }});}\neval(JSON.parse(request('hiker://page/小类次次次')).rule);\npdfa(html, \"#content&&.review-item\").forEach(x => {\n    d.push({\n        title:'<small><span><font color=red>' + pdfh(x, '.name&&Text')+'\\t\\t'+pdfh(x,'span&&title')+'\\t\\t'+pdfh(x,'.main-meta&&Text')+ '</span></small>',\n        url: pd(x, 'a&&href'),\n        col_type: \"avatar\",\n        pic_url: pdfh(x, 'img&&src'),\n    });\nd.push({\n    title: pdfh(x, 'h2&&Text'),\n    url: pd(x, '.main-bd&&a&&href')+'@rule=js:var d = [];$.require(\"hiker://page/reviewer\")',\ncol_type: 'text_1'\n});\n})\nsetResult(d);"},{"col_type":"movie_3","name":"论坛","path":"discussion","rule":"js:\nvar d = [];\nlet true_url = getVar(MY_RULE.url, MY_URL).split('##')[0]\nvar html = fetch(true_url, {\n    headers: {\n        \"User-Agent\": PC_UA\n    }\n});\nif (MY_PAGE==1){\nd.push({\n    col_type: 'blank_block',\n    });\nd.push({\n    col_type: 'rich_text',\n    title:pdfh(html, 'h1&&Text'),\nextra:{    \n        textSize:30,\n    }});}\nconst item= pdfa(html, \"#posts-table&&tr\");\n item.forEach(x => {\nlet author = parseDomForHtml(x, '[itemprop=\"author\"]&&Text');\nd.push({\n    col_type: 'text_1',\n    title:parseDomForHtml(x, 'a&&title&&Text'),\n   desc:author+'\\t\\t\\t'+parseDomForHtml(html, '.time&&Text'),\n    url:pd(x, 'a&&href')+'?start=fypage@-1@*100@&author=0#comments'+'@rule=js:var d = [];$.require(\"hiker://page/lterji\")',\n    });\n})\nsetResult(d)"},{"col_type":"movie_3","name":"论坛二级","path":"lterji","rule":"js:\nvar d = [];\nlet true_url = getVar(MY_RULE.url, MY_URL);\nlog(true_url)\nvar html = fetch(true_url, {\n    headers: {\n        \"User-Agent\": PC_UA\n    }\n});\nconst item= pdfa(html, \"body&&#comments&&.comment-item\");\nif (MY_PAGE==1){\nd.push({\n    col_type: 'blank_block',\n    });\nd.push({\n    col_type: 'rich_text',\n    title:pdfh(html, 'h1&&Text'),\nextra:{ \n        textSize:30,\n    }});}\nd.push({\n    col_type: 'avatar',\n    title:pdfh(html, '#link-report&&.post-author-info&&Text'),\n    img:pdfh(html,'#link-report&&img&&src'),\n    url:'hiker://empty'\n    });\nd.push({\n    col_type: 'rich_text',\n    title:pdfh(html, '#link-report&&p&&Text'),\nextra:{\n        \n        textSize:18,\n    }});\nd.push({\n    col_type: 'line_blank',\n    });\nd.push({\n    col_type: 'text_1',\n    title:'““””<span><strong><big><font color=\"\t#f47920\">'+'回应'+ '</span></big></strong>',\n    url:'hiker://empty'\n    });\n        item.forEach(x => {\nd.push({\n    col_type: 'avatar',\n    title:pdfh(x, '.author&&Text'),\n    img:pdfh(x,'img&&src'),\n    url:'hiker://empty'\n    });\nd.push({\n    col_type: 'rich_text',\n    title:pdfh(x, 'p&&Text'),\n    });\nd.push({\n    col_type: 'line',\n    });\n})\nsetResult(d)"}],"title":"豆瓣阅读","author":"123","version":0,"type":"other","url":"hiker://empty##https://book.douban.com/top250?start=all-fypage","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\n//hiker://empty##https://book.douban.com/tag/?view=type&icn=index-sorttags-all##fypage;\naddListener(\"onClose\", () => {\n    for (let it of listMyVarKeys()) {\n        clearMyVar(it);\n    }\n});\naddListener(\"onRefresh\", () => {\n    clearMyVar(\"nextPage\");\n    clearMyVar('classIndex');\n    clearMyVar('t');\n    clearMyVar('t1');\n});\nvar d = [];\n\n//var 大类 = \".abc\";\nvar 小类 = \"#content&&.article&&table\";\n//var 小类次 = \"#content&&.hot-tags-col5&&li:has(li:nth-child(n+2))\"; \n\nMY_URL = MY_URL.replace('hiker://empty##', '')\n\n//log(MY_URL)\nlet true_url = getVar(MY_RULE.url, MY_URL).split('##')[0]\n\n//true_url = true_url.replace(\"type\", \"show\")\nlog('true_url' + true_url)\nconst page = MY_PAGE\n\n\n//获取上次缓存的下页链接\nlet nextPage = getMyVar(\"nextPage\", \"\");\n//如果有下一页且不是第一页就使用下一页链接\nif (nextPage && MY_PAGE > 1) {\n    true_url = nextPage;\n} \nvar html = fetchPC(true_url)\ntry {\n    //缓存下一页\n    let nextUrl = pd(html, \"a:contains(后页)&&href\"); \n    putMyVar(\"nextPage\", nextUrl || \"\");\n    log(\"nextUrl----------------------\")\n    log(nextUrl)\n} catch (e) {\n    clearMyVar(\"nextPage\");\n    toast(\"好像没有下一页了！\");\n}\n\nif (MY_PAGE == 1) {\nd.push({\n        img:'https://bossaudioandcomic-1252317822.image.myqcloud.com/activity/document/f582fef41dc29cf37bf5234e4df20233.jpg',\n        col_type: \"pic_1_full\",\n        url:'hiker://empty'\n    });\nd.push({\n        title: '搜索',\n        col_type: 'input',\n        url: \"'hiker://search?s='+input+'&rule=豆瓣阅读'\",\n        })\nd.push({\n        title: \"豆瓣TOP榜\",\n        url: \"https://book.douban.com/top250\" + $('#immersiveTheme#').lazyRule(() => {\n            putVar(MY_RULE.url, input);\n            refreshPage();\n            return 'hiker://empty';\n        }),\n        col_type: \"text_3\",\n        desc: \"\",\n        pic_url: \"\"\n    });\nd.push({\n        title: '书架',\n        col_type: 'text_3',\n        url: \"hiker://page/Main.view?rule=本地资源管理\",\n        })\n    d.push({\n        title: \"标签\",   url:\"https://book.douban.com/tag/?view=type&icn=index-sorttags-hot#%E7%A7%91%E6%8A%80\" + $('#immersiveTheme#').lazyRule(() => {\n            putVar(MY_RULE.url, input);\n            refreshPage();\n            return 'hiker://empty';\n        }),\n        col_type: \"text_3\",\n        desc: \"\",\n        pic_url: \"\"\n    });\n    \n    d.push({\n        col_type: \"big_blank_block\"\n    });\n}\n\ntry {\n    if (/tag/.test(true_url)) { eval(JSON.parse(request('hiker://page/xiaolei')).rule);\n        const contentlist1 = pdfa(html, \"#subject_list&&.subject-item\")\n        contentlist1.forEach(x => {\n            // log('X    is:  ' + x)\n            let title = pdfh(x, 'h2&&Text')\n            d.push({\n                title: pdfh(x, 'h2&&Text'),\n                url: pd(x, 'a&&href')+'#immersiveTheme#',\n                col_type: \"movie_3\",\n                desc: pdfh(x, '.pub&&Text'),\n                pic_url: pd(x, 'img&&src'),\n                extra: {\n                    longClick: [{\n                        title: '海阔搜索',\n                        js: $.toString((title) => {\n                            return 'hiker://search?s=' + title\n                        }, title)\n                    }, {\n                        title: 'AI搜书',\n                        js: $.toString((title) => {\n                            return 'hiker://search?s=' + title + '&rule=AI搜书'\n                        }, title)\n                    }, {\n                        title: '图书馆Pro',\n                        js: $.toString((title) => {\n                            return 'hiker://search?s=' + title + '&rule=图书馆Pro'\n                        }, title)\n                    }, {\n                        title: '阅读组',\n                        js: $.toString((title) => {\n                            return 'hiker://search?s=' + title + '&group=阅读'\n                        }, title)\n                    }]\n                }\n            })\n        })\n    }\n    else if(/top/.test(true_url)) {\n        const contentlist2 = pdfa(html, \"#content&&table\")\n        contentlist2.forEach(x => {\n            let title = pdfh(x, '.pl2&&a&&title')\n            d.push({\n                title: title,\n                url: pd(x, '.pl2&&a&&href')+'#immersiveTheme#',\n                col_type: \"movie_3\",\n                desc: pdfh(x, '.pl&&Text'),\n                pic_url: pd(x, 'img&&src'),\n                extra: {\n                    longClick: [{\n                        title: '海阔搜索',\n                        js: $.toString((title) => {\n                            return 'hiker://search?s=' + title\n                        }, title)\n                    }, {\n                        title: 'AI搜书',\n                        js: $.toString((title) => {\n                            return 'hiker://search?s=' + title + '&rule=AI搜书'\n                        }, title)\n                    }, {\n                        title: '图书馆Pro',\n                        js: $.toString((title) => {\n                            return 'hiker://search?s=' + title + '&rule=图书馆Pro'\n                        }, title)\n                    }, {\n                        title: '阅读组',\n                        js: $.toString((title) => {\n                            return 'hiker://search?s=' + title + '&group=阅读'\n                        }, title)\n                    }]\n                }\n            })\n        })}\n\n    } catch (e) {\n        toast(\"其他列表没写，好像出错了！请自己写其他列表吧😄\");\n    }\n    setResult(d);","searchFind":"js:\nvar d = [];\nvar html=fetchCodeByWebView(MY_URL)\n\nvar books_list = parseDomForArray(html, '#root&&.sc-bZQynM');\nfor(var i in books_list){\nlet title = parseDomForHtml(books_list[i],'.title&&Text');\nd.push({\ntitle:title,\ndesc:parseDomForHtml(books_list[i],'.pub&&Text'),\npic_url:parseDomForHtml(books_list[i],'img&&src'),\nurl:parseDom(books_list[i],'a&&href')+'#immersiveTheme#',\ncol_type:'movie_3_marquee',\n});\n}\nsetResult(d);","search_url":"https://search.douban.com/book/subject_search?search_text=**&cat=1001&start=fypage@-1@*15@?_t=0","group":"①推荐","detail_col_type":"movie_3_marquee","detail_find_rule":"js:\nvar d =  [];\nhtml = getResCode();\nlet list = parseDomForHtml(html,'body&&a');\nlet title = parseDomForHtml(html,'h1&&Text');\nlet id = pdfa(html,'body&&.page')\n//二级头部简介(作者，评分，出版社等)\nd.push({\n    col_type: 'movie_1_vertical_pic_blur',\n    extra: {gradient: true},\n    title:parseDomForHtml(html, 'h1&&Text')+parseDomForHtml(id,'section&&data-id')+'\\n'+parseDomForHtml(html, '.rating_self&&Text')+'\\t'+'力荐指数:'+parseDomForHtml(html, '.rating_per&&Text'),\n    desc:parseDomForHtml(html, '.subject&&Text'),\n    img:parseDom(html, 'img&&src'),\n    });\nd.push({\n    title: \"短评\",\n    url:   $(MY_URL.replace('#immersiveTheme#', '') + \"comments/?start=fypage@-1@*20@&limit=20&status=P&sort=score\").rule(() => {\n\n        return eval(JSON.parse(request('hiker://page/comment')).rule)\n    }),\n    col_type: \"icon_5\",\n    pic_url: \"https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/unframed/262.png\"\n});\nd.push({\n    title: \"原文摘录\",\n    url:  $(MY_URL.replace('#immersiveTheme#', '') + \"blockquotes?sort=score&start=fypage@-1@*20@?_t=0\").rule(() => {\n\n        return eval(JSON.parse(request('hiker://page/blockquote')).rule)\n    }),\n    col_type: \"icon_5\",\n    pic_url: \"https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/unframed/356.png\"\n});\nd.push({\n    title: \"读书笔记\",\n    url:  $(MY_URL.replace('#immersiveTheme#', '') + \"annotation?sort=rank&start=fypage@-1@*10@?_t=0\").rule(() => {\n        return eval(JSON.parse(request('hiker://page/annotation')).rule)\n    }),\n    col_type: \"icon_5\",\n    pic_url: \"https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/unframed/375.png\"\n});\nd.push({\n    title: \"书评\",\n    url:    $(MY_URL.replace('#immersiveTheme#', '') + \"reviews?start=fypage\").rule(() => {\n\n        return eval(JSON.parse(request('hiker://page/reviews')).rule)\n    }),\n    col_type: \"icon_5\",\n    pic_url: \"https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/unframed/231.png\"\n});\nd.push({\n    title: \"论坛\",\n    url:    $(MY_URL.replace('#immersiveTheme#', '') + \"discussion/?start=fypage@-1@*20@&sort_by=time\").rule(() => {\n\n        return eval(JSON.parse(request('hiker://page/discussion')).rule)\n    }),\n    col_type: \"icon_5\",\n    pic_url: \"https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/unframed/578.png\"\n});\nd.push({\n    col_type: 'line_blank',\n    })\nrequire('hiker://page/searchzy');\nd.push({\n    col_type: 'line_blank',\n    });\nd.push({\n    col_type: 'rich_text',\n    title:'📄书籍信息',\nextra:{\n        \n        textSize:22,\n    }},\n    {\ncol_type: 'line',\n    });\nlet 丛书信息 = parseDomForHtml(html, '.subject_show&&Text');\n丛书信息= 丛书信息.replace('丛书信息 · · · · · · 　　','').replace('支持 Web、iPhone、iPad、Android 阅读器','').replace(' · · · · · · ','：')\nd.push({\n    col_type: 'rich_text',\n    title:丛书信息,\n    desc:'',\n    });\nlet 内容简介 = parseDomForHtml(html, '.all&&Text') ? parseDomForHtml(html, '.all&&Text') : parseDomForHtml(html, '.intro&&Text');\nd.push({\n    title: '内容简介',\n    url: $().rule((内容简介) => {\n        setResult([{\n            title: 内容简介,\n            col_type: 'long_text'\n\n        }])\n    }, 内容简介),\n    col_type: 'text_3'\n});\n\nlet 作者简介 = parseDomForHtml(html, '.indent,3&&Text');\nd.push({\n    title: '作者简介',\n    url: $().rule((作者简介) => {\n        setResult([{\n            title: 作者简介,\n            col_type: 'long_text'\n        }])\n    }, 作者简介),\n    col_type: 'text_3'\n});\nd.push({\n    title: \"书单推荐\",\n    url:    $(MY_URL.replace('#immersiveTheme#', '')+ \"doulists?start=fypage@-1@*20@?_t=0\").rule(() => {\n        return eval(JSON.parse(request('hiker://page/doulists')).rule)\n    }),\n    col_type: \"text_3\",\n    pic_url: \"\"\n});\nd.push({\n    col_type: 'line_blank',\n    });\nd.push({\n    col_type: 'rich_text',\n    title:'👍相似推荐',\nextra:{     \n        textSize:22,\n    }\n    }  , {\ncol_type: 'line',\n    });   \nconst  rec= pdfa(html, \"body&&dl\")\n  for (var i = 5; i < rec.length&& i<10; i++) {\nd.push({\n    col_type: 'movie_3',\n    title:pdfh(rec[i], 'dd&&Text'),\n    img:pd(rec[i], 'img&&src'),\n    url:pd(rec[i], 'a&&href')+'#immersiveTheme#'+'@rule=js:var d = [];$.require(\"hiker://page/erji\")',\n    });\n}\nfor (var i = 11; i < rec.length&& i<15; i++) {\nd.push({\n    col_type: 'movie_3',\n    title:pdfh(rec[i], 'dd&&Text'),\n    img:pd(rec[i], 'img&&src'),\n    url:pd(rec[i], 'a&&href')+'#immersiveTheme#'+'@rule=js:var d = [];$.require(\"hiker://page/erji\")',\n    });\n}\nd.push({col_type: 'big_big_blank_block'});\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"pc","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"小类次---多层\",\"path\":\"xiaoleici\",\"rule\":\"js:\\nlet init_cate1 = [];\\nfor (let i = 0; i < 20; i++) {\\n    init_cate1.push('0');\\n}\\n\\nif (MY_PAGE === 1) {\\n    const cate_temp_json1 = getMyVar('t1', JSON.stringify(init_cate1));\\n    const cate_temp1 = JSON.parse(cate_temp_json1);\\n    const classlist1 = pdfa(html, 小类次);\\n    // log('sublist  is    ' + sublist)\\n    classlist1.forEach((smallclass1, key1) => {\\n        let sublist1 = pdfa(smallclass1, \\\"body&&a\\\");\\n        let j = 0;\\n        sublist1.forEach((it, jj) => {\\n            d.push({\\n                title: jj.toString() === cate_temp1[key1] ? \\\"““\\\" + pdfh(it, \\\"a&&Text\\\") + \\\"””\\\" : pdfh(it, \\\"a&&Text\\\"),\\n                url: pd(it, \\\"a&&href\\\") + $('#noLoading#').lazyRule((params1) => {\\n                    let new_cate1 = [];\\n                    params1.cate_temp1.forEach((cate, index) => {\\n                        new_cate1.push(index === 0 ? params1.key1.toString() : '0');\\n                    })\\n                    putMyVar('t1', JSON.stringify(new_cate1));\\n\\n                    params1.cate_temp1[params1.key1] = params1.jj.toString();\\n                    putMyVar('t1', JSON.stringify(params1.cate_temp1));\\n                    //putMyVar('subclassIndex', jj);\\n                    // putVar(MY_RULE.title, JSON.stringify(jj));\\n                    putVar(MY_RULE.url, input);\\n                    refreshPage(true)\\n                    return 'hiker://empty';\\n                }, {\\n\\n                    cate_temp1: cate_temp1,\\n                    jj: jj,\\n                    key1: key1,\\n                    page: MY_PAGE,\\n                }),\\n                col_type: \\\"scroll_button\\\",\\n            });\\n        })\\n        d.push({\\n            col_type: \\\"blank_block\\\"\\n        });\\n    })\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"lazy\",\"path\":\"lazy\",\"rule\":\"var lazy = $('').lazyRule(() => {\\n    try {\\n        \\n        var html = JSON.parse(fetchCodeByWebView(input).match(/r player_.*?=(.*?)</)[1])\\n        var url = html.url\\n        if (html.encrypt == '1') {\\n            url = unescape(url);\\n        } else if (html.encrypt == '2') {\\n            url = unescape(base64Decode(url));\\n        }\\n        if (/m3u8|mp4/.test(url)) {\\n            return url\\n        } else {\\n            return 'video://' + input\\n        }\\n    } catch (e) {\\n        return 'video://' + input\\n    }\\n})\"},{\"col_type\":\"movie_3\",\"name\":\"短评\",\"path\":\"comment\",\"rule\":\"js:\\nvar d = [];\\nlet true_url = getVar(MY_RULE.url, MY_URL).split('##')[0]\\nvar num=(MY_PAGE-1)*20;\\nif(/start/.test(true_url)){\\n true_url=true_url+\\\"&start=\\\"+num+\\\"&limit=20\\\";\\n}\\nconst 小类次次=\\\".CommentTabs\\\";\\nvar html = fetch(true_url, {\\n    headers: {\\n        \\\"User-Agent\\\": PC_UA\\n    }\\n});\\nif (MY_PAGE==1){\\nd.push({\\n    col_type: 'blank_block',\\n    });\\nd.push({\\n    col_type: 'rich_text',\\n    title:pdfh(html, 'h1&&Text'),\\nextra:{\\n        \\n        textSize:30,\\n    }});}\\neval(JSON.parse(request('hiker://page/xiaoleicici')).rule);\\npdfa(html, \\\"#comments&&.comment-item\\\").forEach(x => {\\n    d.push({\\n    col_type: 'text_1',\\n    title:'““””<small><span><font color=red>' +parseDomForHtml(x, '.comment-info&&a&&Text')+'\\\\t'+parseDomForHtml(x, '.comment-time&&Text')+'\\\\t'+parseDomForHtml(x, '.comment-location&&Text')+'\\\\t\\\\t\\\\t'+parseDomForHtml(x, '.comment-vote&&Text') + '</span></small></small>',\\n    img:pd(x, 'img&&src'),\\n    url:\\\"hiker://empty\\\",\\n    });\\n  let 短评 = parseDomForHtml(x, '.short&&Text');\\nd.push({\\n    title: 短评,\\n    url: $().rule((短评) => {\\n        setResult([{\\n            title: 短评,\\n            col_type: 'rich_text'\\n        }])\\n    }, 短评),\\n    col_type: 'text_1'\\n});\\n})\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"资源搜索\",\"path\":\"searchzy\",\"rule\":\"//资源搜索\\nhtml = getResCode();\\nlet title = parseDomForHtml(html,'h1&&Text');\\nd.push({\\n    col_type: 'line',\\n    })\\nd.push({\\n    title: '搜索相关的影视资源',\\n    col_type: 'avatar',\\n    url: 'hiker://search?s='+title+'&rule=青豆',\\n    img: 'https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/messy/24.svg'\\n    });\\nd.push({\\n    col_type: 'line',\\n    })\\nd.push({\\n    title: '图书馆Pro',\\n    col_type: 'icon_5',\\n    url: 'hiker://search?s='+title+'&rule=图书馆Pro',\\n    img: 'https://gdown.baidu.com/img/0/512_512/f53bcf56bad60969487d3f5c90ec6012.png'\\n    });\\nd.push({\\n    title: 'AI搜书',\\n    col_type: 'icon_5',\\n    url: 'hiker://search?s='+title+'&rule=AI搜书',\\n    img: 'http://gimg0.baidu.com/gimg/src=http%3A%2F%2Fgdown.baidu.com%2Fimg%2F0%2F512_512%2F25529fb96fb19a1ffdbaaf0f6157cda9.png&app=2008&fmt=auto&size=b219,219&n=0&g=0n&sec=1693384742&t=fb503d56bfec119538b01a5dea2400c8'\\n    });\\nd.push({\\n    title: '搜书君',\\n    col_type: 'icon_5',\\n    url: 'hiker://search?s='+title+'&rule=搜书君',\\n    img: 'https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/square/416.png'\\n    });\\nd.push({\\n    title: '知搜',\\n    col_type: 'icon_5',\\n    url: 'https://zhiso.cc/search/?q='+title,\\n    img: 'https://zhiso.cc/static/image/favicon.ico'\\n    });\\nd.push({\\n    title: '可阅',\\n    col_type: 'icon_5',\\n    url: 'https://kepub.net/search.html?keyword='+title,\\n    img: 'https://kepub.net/favicon.ico'\\n    });\\nd.push({\\n    title: '京东读书',\\n    col_type: 'icon_5',\\n    url: 'https://m-tob.jd.com/search_dosearch?serch='+title,\\n    img: 'https://m-tob.jd.com/static/img/logo.png'\\n    });\\nd.push({\\n    title: '熊猫搜书',\\n    col_type: 'icon_5',\\n    url: \\\"https://www.mrsd.top/search.html?keywords=\\\"+title,\\n    img: 'https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/square/176.png'\\n    });\\nd.push({\\n    title: 'Taco搜索',\\n    col_type: 'icon_5',\\n    url: 'https://www.tacoso.cc/search?keyword='+title+'&authCode=&_csrf=HxTkOkjK-FSDVcxd6VOCgX5Q4zKh3o2SwFAY',\\n    img: 'https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/circle/35.png'\\n    });\\nd.push({\\n    title: '热点图书网',\\n    col_type: 'icon_5',\\n    url: 'http://www.happydot.top/?s='+title,\\n    img: 'https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/rounded/122.png'\\n    });\\nd.push({\\n    title: '书舟搜索',\\n    col_type: 'icon_5',\\n    url: 'https://www.shuzhou.cc/?s='+title,\\n    img: 'https://www.shuzhou.cc/favicon.ico'\\n    });\"},{\"col_type\":\"movie_3\",\"name\":\"原文摘录\",\"path\":\"blockquote\",\"rule\":\"js:\\nvar d = [];\\nlet true_url = getVar(MY_RULE.url, MY_URL).split('##')[0]\\nvar num=(MY_PAGE-1)*20;\\nif(/start/.test(true_url)){\\n   true_url = true_url.replace(\\\"?_t=0\\\",\\\"\\\");\\n}else{\\n   true_url=true_url+\\\"&start=\\\"+num;  \\n}\\nconst 小类次次次次=\\\".nav-tab\\\";\\nvar html = fetch(true_url, {\\n    headers: {\\n        \\\"User-Agent\\\": PC_UA\\n    }\\n});\\nif (MY_PAGE==1){\\nd.push({\\n    col_type: 'blank_block',\\n    });\\nd.push({\\n    col_type: 'rich_text',\\n    title:pdfh(html, 'h1&&Text'),\\nextra:{\\n        \\n        textSize:30,\\n    }});}\\neval(JSON.parse(request('hiker://page/小类次次次次')).rule);\\n   const  blockquote= pdfa(html, \\\"body&&.blockquote-list&&li\\\")\\n        blockquote.forEach(x => {\\nd.push({\\n    col_type: 'avatar',\\n    title:'<small><span>' + parseDomForHtml(x, '.author-name&&Text')+'\\\\t\\\\t'+parseDomForHtml(x, 'span&&Text')+'\\\\t\\\\t'+parseDomForHtml(x, 'datetime&&Text')+ '</span><small>',\\n    img:pd(x, 'img&&src'),\\n    url:pd(x, 'a&&href'),\\n    });\\n  let 摘录内容 = parseDomForHtml(x, 'figure&&Text');\\nd.push({\\n    title:摘录内容 ,\\n    url: $().rule((摘录内容) => {\\n        setResult([{\\n            title: 摘录内容,\\n            col_type: 'rich_text'\\n        }])\\n    }, 摘录内容),\\n    col_type: 'text_1'\\n});\\n})\\nsetResult(d)\"},{\"col_type\":\"movie_3\",\"name\":\"读书笔记\",\"path\":\"annotation\",\"rule\":\"js:\\nvar d = [];\\nlet true_url = getVar(MY_RULE.url, MY_URL).split('##')[0]\\nvar num=(MY_PAGE-1)*10;\\nif(/start/.test(true_url)){\\n   true_url=true_url.replace(\\\"?_t=0\\\",\\\"\\\"); \\n}else{\\n   true_url=true_url+\\\"&start=\\\"+num;  \\n}\\nlog(true_url)\\nconst 小类次次次次次 = \\\".green_tab\\\";\\nvar html = fetch(true_url, {\\n    headers: {\\n        \\\"User-Agent\\\": PC_UA\\n    }\\n});\\nif (MY_PAGE==1){\\nd.push({\\n    col_type: 'blank_block',\\n    });\\nd.push({\\n    col_type: 'rich_text',\\n    title:pdfh(html, 'h1&&Text'),\\nextra:{\\n        \\n        textSize:30,\\n    }});}\\neval(JSON.parse(request('hiker://page/小类次次次次次')).rule);\\n   const bd= pdfa(html, \\\"body&&.comments&&li\\\")\\n        bd.forEach(x => {\\nd.push({\\n    col_type: 'avatar',\\n    title:parseDomForHtml(x, '.user&&title&&Text')+parseDomForHtml(x, '.allstar50&&span'),\\n    img:pd(x, 'img&&src'),\\n    url:pd(x, 'a&&href'),\\n    });\\nd.push({\\n    col_type: 'text_1',\\n    title:parseDomForHtml(x, '.nlst&&a,2&&Text'),\\n    url:pd(x, 'a&&href'),\\n    });\\n  let 读书笔记 = parseDomForHtml(x, '.all&&Text');\\nd.push({\\n    title:'““””<big><span>' +读书笔记 + '</span></big>',\\n    url: $().rule((读书笔记) => {\\n        setResult([{\\n            title: 读书笔记,\\n            col_type: 'rich_text'\\n        }])\\n    }, 读书笔记),\\n    col_type: 'text_1'\\n});\\n})\\nsetResult(d)\"},{\"col_type\":\"movie_3\",\"name\":\"二级\",\"path\":\"erji\",\"rule\":\"js:\\nvar d =  [];\\nhtml = getResCode();\\nlet list = parseDomForHtml(html,'body&&a');\\nlet title = parseDomForHtml(html,'h1&&Text');\\nlet id = pdfa(html,'body&&.page')\\n//二级头部简介(作者，评分，出版社等)\\nd.push({\\n    col_type: 'movie_1_vertical_pic_blur',\\n    extra: {gradient: true},\\n    title:parseDomForHtml(html, 'h1&&Text')+parseDomForHtml(id,'section&&data-id')+'\\\\n'+parseDomForHtml(html, '.rating_self&&Text')+'\\\\t'+'力荐指数:'+parseDomForHtml(html, '.rating_per&&Text'),\\n    desc:parseDomForHtml(html, '.subject&&Text'),\\n    img:parseDom(html, 'img&&src'),\\n    });\\nd.push({\\n    title: \\\"短评\\\",\\n    url:   $(MY_URL.replace('#immersiveTheme#', '') + \\\"comments/?start=fypage@-1@*20@&limit=20&status=P&sort=score\\\").rule(() => {\\n\\n        return eval(JSON.parse(request('hiker://page/comment')).rule)\\n    }),\\n    col_type: \\\"icon_5\\\",\\n    pic_url: \\\"https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/unframed/262.png\\\"\\n});\\nd.push({\\n    title: \\\"原文摘录\\\",\\n    url:  $(MY_URL.replace('#immersiveTheme#', '') + \\\"blockquotes?sort=score&start=fypage@-1@*20@?_t=0\\\").rule(() => {\\n\\n        return eval(JSON.parse(request('hiker://page/blockquote')).rule)\\n    }),\\n    col_type: \\\"icon_5\\\",\\n    pic_url: \\\"https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/unframed/356.png\\\"\\n});\\nd.push({\\n    title: \\\"读书笔记\\\",\\n    url:  $(MY_URL.replace('#immersiveTheme#', '') + \\\"annotation?sort=rank&start=fypage@-1@*10@?_t=0\\\").rule(() => {\\n        return eval(JSON.parse(request('hiker://page/annotation')).rule)\\n    }),\\n    col_type: \\\"icon_5\\\",\\n    pic_url: \\\"https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/unframed/375.png\\\"\\n});\\nd.push({\\n    title: \\\"书评\\\",\\n    url:    $(MY_URL.replace('#immersiveTheme#', '') + \\\"reviews?start=fypage\\\").rule(() => {\\n\\n        return eval(JSON.parse(request('hiker://page/reviews')).rule)\\n    }),\\n    col_type: \\\"icon_5\\\",\\n    pic_url: \\\"https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/unframed/231.png\\\"\\n});\\nd.push({\\n    title: \\\"论坛\\\",\\n    url:    $(MY_URL.replace('#immersiveTheme#', '') + \\\"discussion/?start=fypage@-1@*20@&sort_by=time\\\").rule(() => {\\n\\n        return eval(JSON.parse(request('hiker://page/discussion')).rule)\\n    }),\\n    col_type: \\\"icon_5\\\",\\n    pic_url: \\\"https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/unframed/578.png\\\"\\n});\\nd.push({\\n    col_type: 'line_blank',\\n    })\\nd.push({\\n    col_type: 'line',\\n    })\\nd.push({\\n    title: '搜索相关的影视资源',\\n    col_type: 'avatar',\\n    url: 'hiker://search?s='+title+'&rule=青豆',\\n    img: 'https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/messy/24.svg'\\n    });\\nd.push({\\n    col_type: 'line',\\n    })\\nd.push({\\n    title: '图书馆Pro',\\n    col_type: 'icon_5',\\n    url: 'hiker://search?s='+title+'&rule=图书馆Pro',\\n    img: 'https://gdown.baidu.com/img/0/512_512/f53bcf56bad60969487d3f5c90ec6012.png'\\n    });\\nd.push({\\n    title: 'AI搜书',\\n    col_type: 'icon_5',\\n    url: 'hiker://search?s='+title+'&rule=AI搜书',\\n    img: 'http://gimg0.baidu.com/gimg/src=http%3A%2F%2Fgdown.baidu.com%2Fimg%2F0%2F512_512%2F25529fb96fb19a1ffdbaaf0f6157cda9.png&app=2008&fmt=auto&size=b219,219&n=0&g=0n&sec=1693384742&t=fb503d56bfec119538b01a5dea2400c8'\\n    });\\nd.push({\\n    title: '搜书君',\\n    col_type: 'icon_5',\\n    url: 'hiker://search?s='+title+'&rule=搜书君',\\n    img: 'https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/square/416.png'\\n    });\\nd.push({\\n    title: '知搜',\\n    col_type: 'icon_5',\\n    url: 'https://zhiso.cc/search/?q='+title,\\n    img: 'https://zhiso.cc/static/image/favicon.ico'\\n    });\\nd.push({\\n    title: '可阅',\\n    col_type: 'icon_5',\\n    url: 'https://kepub.net/search.html?keyword='+title,\\n    img: 'https://kepub.net/favicon.ico'\\n    });\\nd.push({\\n    title: '京东读书',\\n    col_type: 'icon_5',\\n    url: 'https://m-tob.jd.com/search_dosearch?serch='+title,\\n    img: 'https://m-tob.jd.com/static/img/logo.png'\\n    });\\nd.push({\\n    title: '熊猫搜书',\\n    col_type: 'icon_5',\\n    url: \\\"https://www.mrsd.top/search.html?keywords=\\\"+title,\\n    img: 'https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/square/176.png'\\n    });\\nd.push({\\n    title: 'Taco搜索',\\n    col_type: 'icon_5',\\n    url: 'https://www.tacoso.cc/search?keyword='+title+'&authCode=&_csrf=HxTkOkjK-FSDVcxd6VOCgX5Q4zKh3o2SwFAY',\\n    img: 'https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/circle/35.png'\\n    });\\nd.push({\\n    title: '热点图书网',\\n    col_type: 'icon_5',\\n    url: 'http://www.happydot.top/?s='+title,\\n    img: 'https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/lmtubiao/main/rounded/122.png'\\n    });\\nd.push({\\n    title: '书舟搜索',\\n    col_type: 'icon_5',\\n    url: 'https://www.shuzhou.cc/?s='+title,\\n    img: 'https://www.shuzhou.cc/favicon.ico'\\n    });\\nd.push({\\n    col_type: 'line_blank',\\n    });\\nd.push({\\n    col_type: 'rich_text',\\n    title:'📄书籍信息',\\nextra:{\\n        \\n        textSize:22,\\n    }},\\n    {\\ncol_type: 'line',\\n    });\\nlet 丛书信息 = parseDomForHtml(html, '.subject_show&&Text');\\n丛书信息= 丛书信息.replace('丛书信息 · · · · · · 　　','').replace('支持 Web、iPhone、iPad、Android 阅读器','').replace(' · · · · · · ','：')\\nd.push({\\n    col_type: 'rich_text',\\n    title:丛书信息,\\n    desc:'',\\n    });\\nlet 内容简介 = parseDomForHtml(html, '.all&&Text') ? parseDomForHtml(html, '.all&&Text') : parseDomForHtml(html, '.intro&&Text');\\nd.push({\\n    title: '内容简介',\\n    url: $().rule((内容简介) => {\\n        setResult([{\\n            title: 内容简介,\\n            col_type: 'long_text'\\n\\n        }])\\n    }, 内容简介),\\n    col_type: 'text_3'\\n});\\n\\nlet 作者简介 = parseDomForHtml(html, '.indent,3&&Text');\\nd.push({\\n    title: '作者简介',\\n    url: $().rule((作者简介) => {\\n        setResult([{\\n            title: 作者简介,\\n            col_type: 'long_text'\\n        }])\\n    }, 作者简介),\\n    col_type: 'text_3'\\n});\\nd.push({\\n    title: \\\"书单推荐\\\",\\n    url:    $(MY_URL.replace('#immersiveTheme#', '')+ \\\"doulists?start=fypage@-1@*20@?_t=0\\\").rule(() => {\\n        return eval(JSON.parse(request('hiker://page/doulists')).rule)\\n    }),\\n    col_type: \\\"text_3\\\",\\n    pic_url: \\\"\\\"\\n});\\nd.push({\\n    col_type: 'line_blank',\\n    });\\nd.push({\\n    col_type: 'rich_text',\\n    title:'👍相似推荐',\\nextra:{     \\n        textSize:22,\\n    }\\n    }  , {\\ncol_type: 'line',\\n    });   \\nconst  rec= pdfa(html, \\\"body&&dl\\\")\\n  for (var i = 5; i < rec.length&& i<10; i++) {\\nd.push({\\n    col_type: 'movie_3',\\n    title:pdfh(rec[i], 'dd&&Text'),\\n    img:pd(rec[i], 'img&&src'),\\n    url:pd(rec[i], 'a&&href')+'#immersiveTheme#'+'@rule=js:var d = [];$.require(\\\"hiker://page/erji\\\")',\\n    });\\n}\\nfor (var i = 11; i < rec.length&& i<15; i++) {\\nd.push({\\n    col_type: 'movie_3',\\n    title:pdfh(rec[i], 'dd&&Text'),\\n    img:pd(rec[i], 'img&&src'),\\n    url:pd(rec[i], 'a&&href')+'#immersiveTheme#'+'@rule=js:var d = [];$.require(\\\"hiker://page/erji\\\")',\\n    });\\n}\\nd.push({col_type: 'big_big_blank_block'});\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"标签页\",\"path\":\"tag\",\"rule\":\"js:\\n//本程序才用L大佬翻页\\naddListener(\\\"onClose\\\", () => {\\n    for (let it of listMyVarKeys()) {\\n        clearMyVar(it);\\n    }\\n});\\naddListener(\\\"onRefresh\\\", () => {\\n    clearMyVar(\\\"nextPage\\\");\\n    clearMyVar('classIndex');\\n    clearMyVar('t');\\n    clearMyVar('t1');\\n});\\nvar d = [];\\n\\n//var 大类 = \\\".abc\\\";\\nvar 小类 = \\\"#content&&tr\\\"; //多层-----小类\\n//var 小类次 = \\\"#content&&.hot-tags-col5&&li:has(li:nth-child(n+2))\\\"; \\n\\nMY_URL = MY_URL.replace('hiker://empty##', '')\\n\\n//log(MY_URL)\\nlet true_url = getVar(MY_RULE.url, MY_URL).split('##')[0]\\n\\n//true_url = true_url.replace(\\\"type\\\", \\\"show\\\")\\nlog('true_url' + true_url)\\nconst page = MY_PAGE\\n\\n\\n//获取上次缓存的下页链接\\nlet nextPage = getMyVar(\\\"nextPage\\\", \\\"\\\");\\n//如果有下一页且不是第一页就使用下一页链接\\nif (nextPage && MY_PAGE > 1) {\\n    true_url = nextPage;\\n} \\nvar html = fetchPC(true_url)\\ntry {\\n    //缓存下一页\\n    let nextUrl = pd(html, \\\"a:contains(后页)&&href\\\"); \\n    putMyVar(\\\"nextPage\\\", nextUrl || \\\"\\\");\\n    log(\\\"nextUrl----------------------\\\")\\n    log(nextUrl)\\n} catch (e) {\\n    clearMyVar(\\\"nextPage\\\");\\n    toast(\\\"好像没有下一页了！\\\");\\n}\\n\\nif (MY_PAGE == 1) {\\nd.push({\\n        img:'/storage/emulated/0/Android/data/com.example.hikerview/files/Documents/H_轮播图/阅读.gif',\\n        col_type: \\\"pic_1_full\\\",\\n        url:'hiker://empty'\\n    });\\nd.push({\\n        title: '搜索',\\n        col_type: 'input',\\n        url: \\\"'hiker://search?s='+input+'&rule=豆瓣读书'\\\",\\n        })\\nd.push({\\n        title: \\\"豆瓣TOP榜\\\",\\n        url: \\\"https://book.douban.com/top250\\\" + $('#immersiveTheme#').lazyRule(() => {\\n            putVar(MY_RULE.url, input);\\n            refreshPage();\\n            return 'hiker://empty';\\n        }),\\n        col_type: \\\"scroll_button\\\",\\n        desc: \\\"\\\",\\n        pic_url: \\\"\\\"\\n    });\\nd.push({\\n        title: '小说排行榜',\\n        col_type: 'scroll_button',\\n        url: \\\"hiker://home@起点排行\\\",\\n        })\\nd.push({\\n        title: '微信阅读榜',\\n        col_type: 'scroll_button',\\n        url: \\\"hiker://home@微信阅读\\\",\\n        })\\nd.push({\\n        title: '书架',\\n        col_type: 'scroll_button',\\n        url: \\\"hiker://page/Main.view?rule=本地资源管理\\\",\\n        })\\n    d.push({\\n        title: \\\"标签\\\",\\n        url: \\\"https://book.douban.com/tag/?view=type&icn=index-sorttags-hot#%E7%A7%91%E6%8A%80\\\" + $('#immersiveTheme#').lazyRule(() => {\\n            putVar(MY_RULE.url, input);\\n            refreshPage();\\n            return 'hiker://empty';\\n        }),\\n        col_type: \\\"scroll_button\\\",\\n        desc: \\\"\\\",\\n        pic_url: \\\"\\\"\\n    });\\n    \\n    d.push({\\n        col_type: \\\"big_blank_block\\\"\\n    });\\n}\\n\\ntry {\\n    if (/tag/.test(true_url)) { eval(JSON.parse(request('hiker://page/xiaolei')).rule);\\n        const contentlist1 = pdfa(html, \\\"#subject_list&&.subject-item\\\")\\n        contentlist1.forEach(x => {\\n            // log('X    is:  ' + x)\\n            let title = pdfh(x, 'h2&&Text')\\n            d.push({\\n                title: pdfh(x, 'h2&&Text'),\\n                url: pd(x, 'a&&href')+ '#immersiveTheme#',\\n                col_type: \\\"movie_3\\\",\\n                desc: pdfh(x, '.pub&&Text'),\\n                pic_url: pd(x, 'img&&src'),\\n                extra: {\\n                    longClick: [{\\n                        title: '海阔搜索',\\n                        js: $.toString((title) => {\\n                            return 'hiker://search?s=' + title\\n                        }, title)\\n                    }, {\\n                        title: 'AI搜书',\\n                        js: $.toString((title) => {\\n                            return 'hiker://search?s=' + title + '&rule=AI搜书'\\n                        }, title)\\n                    }, {\\n                        title: '图书馆Pro',\\n                        js: $.toString((title) => {\\n                            return 'hiker://search?s=' + title + '&rule=图书馆Pro'\\n                        }, title)\\n                    }, {\\n                        title: '阅读组',\\n                        js: $.toString((title) => {\\n                            return 'hiker://search?s=' + title + '&group=阅读'\\n                        }, title)\\n                    }]\\n                }\\n            })\\n        })\\n    }\\n    else if(/top/.test(true_url)) {\\n        const contentlist2 = pdfa(html, \\\"#content&&table\\\")\\n        contentlist2.forEach(x => {\\n            let title = pdfh(x, '.pl2&&a&&title')\\n            d.push({\\n                title: title,\\n                url: pd(x, '.pl2&&a&&href')+ '#immersiveTheme#',\\n                col_type: \\\"movie_3\\\",\\n                desc: pdfh(x, '.pl&&Text'),\\n                pic_url: pd(x, 'img&&src'),\\n                extra: {\\n                    longClick: [{\\n                        title: '海阔搜索',\\n                        js: $.toString((title) => {\\n                            return 'hiker://search?s=' + title\\n                        }, title)\\n                    }, {\\n                        title: 'AI搜书',\\n                        js: $.toString((title) => {\\n                            return 'hiker://search?s=' + title + '&rule=AI搜书'\\n                        }, title)\\n                    }, {\\n                        title: '图书馆Pro',\\n                        js: $.toString((title) => {\\n                            return 'hiker://search?s=' + title + '&rule=图书馆Pro'\\n                        }, title)\\n                    }, {\\n                        title: '阅读组',\\n                        js: $.toString((title) => {\\n                            return 'hiker://search?s=' + title + '&group=阅读'\\n                        }, title)\\n                    }]\\n                }\\n            })\\n        })}\\n\\n    } catch (e) {\\n        toast(\\\"其他列表没写，好像出错了！请自己写其他列表吧😄\\\");\\n    }\\n    setResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"小类次次\",\"path\":\"xiaoleicici\",\"rule\":\"js:\\nlet init_cate1 = [];\\nfor (let i = 0; i < 20; i++) {\\n    init_cate1.push('0');\\n}\\n\\nif (MY_PAGE === 1) {\\n    const cate_temp_json1 = getMyVar('tcc', JSON.stringify(init_cate1));\\n    const cate_temp1 = JSON.parse(cate_temp_json1);\\n    const classlistcc = pdfa(html, 小类次次);\\n    // log('sublist  is    ' + sublist)\\n    classlistcc.forEach((smallclass1, key1) => {\\n        let sublistcc = pdfa(smallclass1, \\\"body&&a\\\");\\n        let j = 0;\\n        sublistcc.forEach((it, jjj) => {\\n            d.push({\\n                title: jjj.toString() === cate_temp1[key1] ? \\\"““\\\" + pdfh(it, \\\"a&&Text\\\") + \\\"””\\\" : pdfh(it, \\\"a&&Text\\\"),\\n                url: pd(it, \\\"a&&href\\\") + $('#noLoading#').lazyRule((params1) => {\\n                    let new_cate1 = [];\\n                    params1.cate_temp1.forEach((cate, index) => {\\n                        new_cate1.push(index === 0 ? params1.key1.toString() : '0');\\n                    })\\n                    putMyVar('tcc', JSON.stringify(new_cate1));\\n\\n                    params1.cate_temp1[params1.key1] = params1.jjj.toString();\\n                    putMyVar('tcc', JSON.stringify(params1.cate_temp1));\\n                    //putMyVar('subclassIndex', jjj);\\n                    // putVar(MY_RULE.title, JSON.stringify(jjj));\\n                    putVar(MY_RULE.url, input);\\n                    refreshPage(true)\\n                    return 'hiker://empty';\\n                }, {\\n\\n                    cate_temp1: cate_temp1,\\n                    jjj: jjj,\\n                    key1: key1,\\n                    page: MY_PAGE,\\n                }),\\n                col_type: \\\"scroll_button\\\",\\n            });\\n        })\\n        d.push({\\n            col_type: \\\"blank_block\\\"\\n        });\\n    })\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"书单\",\"path\":\"doulists\",\"rule\":\"js:\\nvar d = [];\\nlet true_url = getVar(MY_RULE.url, MY_URL).split('##')[0]\\nvar num=(MY_PAGE-1)*20;\\nif(/start/.test(true_url)){ \\n   true_url = true_url.replace(\\\"?_t=0\\\",\\\"\\\");  \\n}else{\\n   true_url=true_url+\\\"&start=\\\"+num;\\n}\\nvar html = fetch(true_url, {\\n    headers: {\\n        \\\"User-Agent\\\": PC_UA\\n    }\\n});\\nif (MY_PAGE==1){\\nd.push({\\n    col_type: 'blank_block',\\n    });\\nd.push({\\n    col_type: 'rich_text',\\n    title:pdfh(html, 'h1&&Text'),\\nextra:{\\n        \\n        textSize:30,\\n    }});}\\npdfa(html, \\\"body&&.doulist-list&&li\\\").forEach(x => {\\n    d.push({\\n        title:pdfh(x, 'a,1&&Text')+'\\\\t\\\\t'+pdfh(x,'.meta&&Text'),\\n        url: 'hiker://empty',\\n        col_type: \\\"avatar\\\",\\n        desc:'',\\n        pic_url: pdfh(x, '.meta&&img&&src'),\\n    });  \\nd.push({\\n        title:pdfh(x, 'h3&&Text'),\\n        url: pd(x, 'a&&href')+'#immersiveTheme#'+'?start=fypage&sort=seq&playable=0&sub_type='+'@rule=js:$.require(\\\"hiker://page/doulistxq\\\")',\\n        desc:pdfh(x, '.intro&&Text'),\\n        pic_url: pdfh(x, '.doulist-cover&&img&&src'),\\n        col_type: 'movie_1_vertical_pic'\\n});\\n})\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"小类次次次\",\"path\":\"小类次次次\",\"rule\":\"js:\\nlet init_cate1 = [];\\nfor (let i = 0; i < 20; i++) {\\n    init_cate1.push('0');\\n}\\n\\nif (MY_PAGE === 1) {\\n    const cate_temp_json1 = getMyVar('tccc', JSON.stringify(init_cate1));\\n    const cate_temp1 = JSON.parse(cate_temp_json1);\\n    const classlistccc = pdfa(html, 小类次次次);\\n    // log('sublist  is    ' + sublist)\\n    classlistccc.forEach((smallclass1, key1) => {\\n        let sublistccc = pdfa(smallclass1, \\\"body&&a\\\");\\n        let j = 0;\\n        sublistccc.forEach((it, jjj) => {\\n            d.push({\\n                title: jjj.toString() === cate_temp1[key1] ? \\\"““\\\" + pdfh(it, \\\"a&&Text\\\") + \\\"””\\\" : pdfh(it, \\\"a&&Text\\\"),\\n                url: pd(it, \\\"a&&href\\\") + $('#noLoading#').lazyRule((params1) => {\\n                    let new_cate1 = [];\\n                    params1.cate_temp1.forEach((cate, index) => {\\n                        new_cate1.push(index === 0 ? params1.key1.toString() : '0');\\n                    })\\n                    putMyVar('tccc', JSON.stringify(new_cate1));\\n\\n                    params1.cate_temp1[params1.key1] = params1.jjj.toString();\\n                    putMyVar('tccc', JSON.stringify(params1.cate_temp1));\\n                    //putMyVar('subclassIndex', jjj);\\n                    // putVar(MY_RULE.title, JSON.stringify(jjj));\\n                    putVar(MY_RULE.url, input);\\n                    refreshPage(true)\\n                    return 'hiker://empty';\\n                }, {\\n\\n                    cate_temp1: cate_temp1,\\n                    jjj: jjj,\\n                    key1: key1,\\n                    page: MY_PAGE,\\n                }),\\n                col_type: \\\"scroll_button\\\",\\n            });\\n        })\\n        d.push({\\n            col_type: \\\"blank_block\\\"\\n        });\\n    })\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"书单列表\",\"path\":\"doulistxq\",\"rule\":\"js:\\nvar d =  [];\\nhtml = getResCode();\\nlet list = parseDomForHtml(html,'body&&a');\\nlet title = parseDomForHtml(html,'a&&Text');\\n//二级头部简介(作者，评分，出版社等)\\nif ( MY_PAGE==1){\\nd.push({\\n    col_type: 'movie_1_vertical_pic_blur',\\n    extra: {gradient: true},\\n    title:parseDomForHtml(html, 'h1&&Text')+'\\\\n'+pdfh(html, '.meta&&Text'),\\n    desc:parseDomForHtml(html, '.doulist-about&&Text'),\\n    img:parseDom(html, '.doulist-cover&&img&&src'),\\n    });\\nd.push({\\n    col_type: 'rich_text',\\n    title:'⭐️该书单被'+parseDomForHtml(html, '.doulist-followers-link&&Text')+'人关注'+'\\\\t\\\\t\\\\t'+parseDomForHtml(html, '.rec-num&&Text')+'推荐'\\n    });\\n}\\n//MY_URL = MY_URL.replace('hiker://empty##', '')\\nlog(MY_PAGE)\\nlog(\\\"MY_URL\\\"+MY_URL)\\nlet true_url = getVar(MY_RULE.url, MY_URL).split('##')[0]\\nvar num=(MY_PAGE-1)*20;\\nlog(num)\\nlog(\\\"true_url\\\"+true_url)\\nif(/start/.test(true_url)){  \\n   true_url=true_url.replace(\\\"start=1\\\",\\\"start=\\\"+num);\\nlog(\\\"又匹配true_url1\\\"+true_url)   \\n}else{\\n   true_url=true_url+\\\"&start=\\\"+num;\\n//https://book.douban.com/subject/4913064/reviews?sort=time&start=20\\n\\n//https://book.douban.com/subject/4913064/reviews?sort=time#noLoading\\n    log(\\\"true_url2\\\"+true_url)\\n    \\n}\\n log(\\\"true_url最终\\\"+true_url)\\nvar html = fetch(true_url, {\\n    headers: {\\n        \\\"User-Agent\\\": PC_UA\\n    }\\n});\\n//log(html)\\nlog('html')\\npdfa(html, \\\"#content&&.doulist-item\\\").forEach(x => {\\n    d.push({\\n        title:pdfh(x, '.title&&Text')+'\\\\t\\\\t'+pdfh(x,'.rating&&Text'),\\n        url: pd(x, 'a&&href')+'#immersiveTheme#'+'@rule=js:var d = [];$.require(\\\"hiker://page/erji\\\")',\\n        col_type: \\\"movie_1_vertical_pic\\\",\\n        pic_url: pdfh(x, 'img&&src'),\\n        desc:pdfh(x, '.abstract&&Text')\\n    });  \\n})\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"小类次次次次\",\"path\":\"小类次次次次\",\"rule\":\"js:\\nlet init_cate1 = [];\\nfor (let i = 0; i < 20; i++) {\\n    init_cate1.push('0');\\n}\\n\\nif (MY_PAGE === 1) {\\n    const cate_temp_json1 = getMyVar('tcccc', JSON.stringify(init_cate1));\\n    const cate_temp1 = JSON.parse(cate_temp_json1);\\n    const classlistcccc = pdfa(html, 小类次次次次);\\n    // log('sublist  is    ' + sublist)\\n    classlistcccc.forEach((smallclass1, key1) => {\\n        let sublistcccc = pdfa(smallclass1, \\\"body&&a\\\");\\n        let j = 0;\\n        sublistcccc.forEach((it, jjj) => {\\n            d.push({\\n                title: jjj.toString() === cate_temp1[key1] ? \\\"““\\\" + pdfh(it, \\\"a&&Text\\\") + \\\"””\\\" : pdfh(it, \\\"a&&Text\\\"),\\n                url: pd(it, \\\"a&&href\\\") + $('#noLoading#').lazyRule((params1) => {\\n                    let new_cate1 = [];\\n                    params1.cate_temp1.forEach((cate, index) => {\\n                        new_cate1.push(index === 0 ? params1.key1.toString() : '0');\\n                    })\\n                    putMyVar('tcccc', JSON.stringify(new_cate1));\\n\\n                    params1.cate_temp1[params1.key1] = params1.jjj.toString();\\n                    putMyVar('tcccc', JSON.stringify(params1.cate_temp1));\\n                    //putMyVar('subclassIndex', jjj);\\n                    // putVar(MY_RULE.title, JSON.stringify(jjj));\\n                    putVar(MY_RULE.url, input);\\n                    refreshPage(true)\\n                    return 'hiker://empty';\\n                }, {\\n\\n                    cate_temp1: cate_temp1,\\n                    jjj: jjj,\\n                    key1: key1,\\n                    page: MY_PAGE,\\n                }),\\n                col_type: \\\"scroll_button\\\",\\n            });\\n        })\\n        d.push({\\n            col_type: \\\"blank_block\\\"\\n        });\\n    })\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"小类次次次次次\",\"path\":\"小类次次次次次\",\"rule\":\"js:\\nlet init_cate1 = [];\\nfor (let i = 0; i < 20; i++) {\\n    init_cate1.push('0');\\n}\\n\\nif (MY_PAGE === 1) {\\n    const cate_temp_json1 = getMyVar('tcccc', JSON.stringify(init_cate1));\\n    const cate_temp1 = JSON.parse(cate_temp_json1);\\n    const classlistcccc = pdfa(html, 小类次次次次次);\\n    // log('sublist  is    ' + sublist)\\n    classlistcccc.forEach((smallclass1, key1) => {\\n        let sublistcccc = pdfa(smallclass1, \\\"body&&a\\\");\\n        let j = 0;\\n        sublistcccc.forEach((it, jjj) => {\\n            d.push({\\n                title: jjj.toString() === cate_temp1[key1] ? \\\"““\\\" + pdfh(it, \\\"a&&Text\\\") + \\\"””\\\" : pdfh(it, \\\"a&&Text\\\"),\\n                url: pd(it, \\\"a&&href\\\") + $('#noLoading#').lazyRule((params1) => {\\n                    let new_cate1 = [];\\n                    params1.cate_temp1.forEach((cate, index) => {\\n                        new_cate1.push(index === 0 ? params1.key1.toString() : '0');\\n                    })\\n                    putMyVar('tcccc', JSON.stringify(new_cate1));\\n\\n                    params1.cate_temp1[params1.key1] = params1.jjj.toString();\\n                    putMyVar('tcccc', JSON.stringify(params1.cate_temp1));\\n                    //putMyVar('subclassIndex', jjj);\\n                    // putVar(MY_RULE.title, JSON.stringify(jjj));\\n                    putVar(MY_RULE.url, input);\\n                    refreshPage(true)\\n                    return 'hiker://empty';\\n                }, {\\n\\n                    cate_temp1: cate_temp1,\\n                    jjj: jjj,\\n                    key1: key1,\\n                    page: MY_PAGE,\\n                }),\\n                col_type: \\\"scroll_button\\\",\\n            });\\n        })\\n        d.push({\\n            col_type: \\\"blank_block\\\"\\n        });\\n    })\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"大类----一行\",\"path\":\"dalei\",\"rule\":\"js:\\n\\nlet classIndex = Number(getMyVar(\\\"classIndex\\\", \\\"0\\\"));\\nif (MY_PAGE == 1) {\\n    const list = pdfa(html, 大类);\\n    //    log('list  is    ' + list)\\n    let i = 0;\\n    list.forEach((it, i) => {\\n        d.push({\\n            title: classIndex === i ? \\\"““\\\" + '读书首页' + \\\"””\\\" : '读书首页',\\n            url: pd(it, \\\"a&&href\\\") + $('#noLoading#').lazyRule((i) => {\\n                putMyVar('classIndex', i);\\n                putVar(MY_RULE.title, JSON.stringify(i));\\n                putVar(MY_RULE.url, input);\\n                refreshPage(true)\\n                return 'hiker://empty';\\n            }, i),\\n            col_type: \\\"scroll_button\\\",\\n        })\\n    })\\n   /* d.push({\\n        col_type: \\\"big_blank_block\\\",\\n    })\\n*/\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"小类---多层\",\"path\":\"xiaolei\",\"rule\":\"js:\\n    let init_cate = [];\\nfor (let i = 0; i < 20; i++) {\\n    init_cate.push('0');\\n}\\n\\nif (parseInt(MY_PAGE) === 1) {\\n    const cate_temp_json = getMyVar('t', JSON.stringify(init_cate));\\n    const cate_temp = JSON.parse(cate_temp_json);\\n    const classlist = pdfa(html, 小类);\\n    // log('sublist  is    ' + sublist)\\n    classlist.forEach((smallclass, key) => {\\n        let sublist = pdfa(smallclass, \\\"body&&a\\\");\\n        let j = 0;\\n        sublist.forEach((it, j) => {\\n            d.push({\\n                title: j.toString() === cate_temp[key] ? \\\"““\\\" + pdfh(it, \\\"a&&Text\\\") + \\\"””\\\" : pdfh(it, \\\"a&&Text\\\"),\\n                url: pd(it, \\\"a&&href\\\") + $('#noLoading#').lazyRule((params) => {\\n                    let new_cate = [];\\n                    params.cate_temp.forEach((cate, index) => {\\n                        new_cate.push(index === 0 ? params.key.toString() : '0');\\n                    })\\n                    putMyVar('t', JSON.stringify(new_cate));\\n\\n                    params.cate_temp[params.key] = params.j.toString();\\n                    putMyVar('t', JSON.stringify(params.cate_temp));\\n                    //putMyVar('subclassIndex', j);\\n                    // putVar(MY_RULE.title, JSON.stringify(j));\\n                    putVar(MY_RULE.url, input);\\n                    refreshPage(true)\\n                    return 'hiker://empty';\\n                }, {\\n\\n                    cate_temp: cate_temp,\\n                    j: j,\\n                    key: key,\\n                    page: MY_PAGE,\\n                }),\\n                col_type: \\\"flex_button\\\",\\n            });\\n        })\\n        d.push({\\n            col_type: \\\"blank_block\\\"\\n        });\\n    })\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"书评详情\",\"path\":\"reviewer\",\"rule\":\"js:\\nvar d = [];\\nlet myurl = MY_URL;\\nvar html = fetch(myurl, {\\n    headers: {\\n        \\\"User-Agent\\\": PC_UA\\n    }\\n});\\nvar content = pdfh(html, \\\".review-content&&Html\\\");\\nd.push({\\n    title: content,\\n    col_type: \\\"rich_text\\\",\\n    extra: {\\n        textSize: 18,\\n    }\\n});\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"书评\",\"path\":\"reviews\",\"rule\":\"js:\\nvar d = [];\\nlet true_url = getVar(MY_RULE.url, MY_URL).split('##')[0]\\nvar num=(MY_PAGE-1)*20;\\n/*\\nif(/start/.test(true_url)){\\n   true_url=true_url.replace(\\\"start=1\\\",\\\"start=\\\"+num);  \\n}else{\\n   true_url=true_url+\\\"&start=\\\"+num;  \\n}\\n*/\\nconst 小类次次次=\\\"#content&&.top-tab\\\";\\nvar html = fetch(true_url, {\\n    headers: {\\n        \\\"User-Agent\\\": PC_UA\\n    }\\n});\\nif (MY_PAGE==1){\\nd.push({\\n    col_type: 'blank_block',\\n    });\\nd.push({\\n    col_type: 'rich_text',\\n    title:pdfh(html, 'h1&&Text'),\\nextra:{\\n        \\n        textSize:30,\\n    }});}\\neval(JSON.parse(request('hiker://page/小类次次次')).rule);\\npdfa(html, \\\"#content&&.review-item\\\").forEach(x => {\\n    d.push({\\n        title:'<small><span><font color=red>' + pdfh(x, '.name&&Text')+'\\\\t\\\\t'+pdfh(x,'span&&title')+'\\\\t\\\\t'+pdfh(x,'.main-meta&&Text')+ '</span></small>',\\n        url: pd(x, 'a&&href'),\\n        col_type: \\\"avatar\\\",\\n        pic_url: pdfh(x, 'img&&src'),\\n    });\\nd.push({\\n    title: pdfh(x, 'h2&&Text'),\\n    url: pd(x, '.main-bd&&a&&href')+'@rule=js:var d = [];$.require(\\\"hiker://page/reviewer\\\")',\\ncol_type: 'text_1'\\n});\\n})\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"论坛\",\"path\":\"discussion\",\"rule\":\"js:\\nvar d = [];\\nlet true_url = getVar(MY_RULE.url, MY_URL).split('##')[0]\\nvar html = fetch(true_url, {\\n    headers: {\\n        \\\"User-Agent\\\": PC_UA\\n    }\\n});\\nif (MY_PAGE==1){\\nd.push({\\n    col_type: 'blank_block',\\n    });\\nd.push({\\n    col_type: 'rich_text',\\n    title:pdfh(html, 'h1&&Text'),\\nextra:{    \\n        textSize:30,\\n    }});}\\nconst item= pdfa(html, \\\"#posts-table&&tr\\\");\\n item.forEach(x => {\\nlet author = parseDomForHtml(x, '[itemprop=\\\"author\\\"]&&Text');\\nd.push({\\n    col_type: 'text_1',\\n    title:parseDomForHtml(x, 'a&&title&&Text'),\\n   desc:author+'\\\\t\\\\t\\\\t'+parseDomForHtml(html, '.time&&Text'),\\n    url:pd(x, 'a&&href')+'?start=fypage@-1@*100@&author=0#comments'+'@rule=js:var d = [];$.require(\\\"hiker://page/lterji\\\")',\\n    });\\n})\\nsetResult(d)\"},{\"col_type\":\"movie_3\",\"name\":\"论坛二级\",\"path\":\"lterji\",\"rule\":\"js:\\nvar d = [];\\nlet true_url = getVar(MY_RULE.url, MY_URL);\\nlog(true_url)\\nvar html = fetch(true_url, {\\n    headers: {\\n        \\\"User-Agent\\\": PC_UA\\n    }\\n});\\nconst item= pdfa(html, \\\"body&&#comments&&.comment-item\\\");\\nif (MY_PAGE==1){\\nd.push({\\n    col_type: 'blank_block',\\n    });\\nd.push({\\n    col_type: 'rich_text',\\n    title:pdfh(html, 'h1&&Text'),\\nextra:{ \\n        textSize:30,\\n    }});}\\nd.push({\\n    col_type: 'avatar',\\n    title:pdfh(html, '#link-report&&.post-author-info&&Text'),\\n    img:pdfh(html,'#link-report&&img&&src'),\\n    url:'hiker://empty'\\n    });\\nd.push({\\n    col_type: 'rich_text',\\n    title:pdfh(html, '#link-report&&p&&Text'),\\nextra:{\\n        \\n        textSize:18,\\n    }});\\nd.push({\\n    col_type: 'line_blank',\\n    });\\nd.push({\\n    col_type: 'text_1',\\n    title:'““””<span><strong><big><font color=\\\"\\t#f47920\\\">'+'回应'+ '</span></big></strong>',\\n    url:'hiker://empty'\\n    });\\n        item.forEach(x => {\\nd.push({\\n    col_type: 'avatar',\\n    title:pdfh(x, '.author&&Text'),\\n    img:pdfh(x,'img&&src'),\\n    url:'hiker://empty'\\n    });\\nd.push({\\n    col_type: 'rich_text',\\n    title:pdfh(x, 'p&&Text'),\\n    });\\nd.push({\\n    col_type: 'line',\\n    });\\n})\\nsetResult(d)\"}]","proxy":"","icon":"https://app-center.cdn.bcebos.com/appcenter/sts/pcfile/5360099930/93cbefe060a2cfd031762aa2de6f6598.png"}
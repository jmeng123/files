{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"方法","path":"fun","rule":"js:\nfunction getFav(url, inf) {\n    if (!/http[s]?/.test(url)) {\n        toast('不是网址')\n        return\n    }\n    var javai = JavaImporter(java.net.URL, org.jsoup.Jsoup)\n\n    var list = []\n\n    with(javai) {\n        try {\n            var u = new URL(url);\n        } catch (e) {\n            log('错误信息：' + e)\n            toast('错误信息：' + e)\n            return\n        }\n        var pl = u.getProtocol();\n        var hs = u.getHost();\n        var newUrl = u.getProtocol().concat(\"://\").concat(u.getHost());\n\n        if (inf != '直连') {\n            if (inf.includes('##')) {\n                inf = inf.split('##')[1]\n            }\n            list.push(inf.replace('${url}', newUrl))\n            return list\n        }\n\n        var fav = newUrl + '/favicon.ico'\n        var res = fetch(fav, {\n            withStatusCode: true\n        })\n        var code = 0\n        if (res != '') {\n            var mes = JSON.parse(res)\n        }\n\n        if (mes.error != null) {\n            if (mes.error.includes('Unable to resolve host')) {\n                log('错误信息：' + mes.error)\n                toast('错误信息：' + mes.error)\n                return\n            }\n\n        }\n        code = mes.statusCode\n        if (code == 200 && !mes.body.includes('html')) {\n            list.push(fav)\n        }\n\n        try {\n            var document = Jsoup.connect(newUrl).get();\n        } catch (e) {\n            log('错误信息：' + e)\n            toast('错误信息：' + e)\n            return\n        }\n\n\n        var imgs = document.select(\"link[type=image/x-icon]\");\n        log(imgs)\n        imgs = Object.keys(imgs).length > 0 ? imgs : document.select(\"link[rel$=icon]\")\n        imgs = Object.keys(imgs).length > 0 ? imgs : document.select(\"meta[itemprop=image]\")\n        //log(JSON.stringify(imgs))\n\n        var isweb = /(com|cn)/\n        var isimg = /.*?(svg|jpg|ico|png|gif|jpeg)$/gm\n        for (let x of imgs) {\n\n            var link = x.attr(\"href\")\n            if (link == '') {\n                link = x.attr('content')\n            }\n            if (isweb.test(link) && isimg.test(link)) {\n                if (link.startsWith('//')) {\n                    link = `${pl}:${link}`\n                }\n            }\n            if (link.startsWith('/')) {\n                link = `${pl}://${hs}${link}`\n            } else if (!link.includes(pl)) {\n                link = `${pl}://${hs}/${link}`\n            }\n\n            list.push(link)\n        }\n\n\n       /* imgs.forEach((x) => {\n\n        })*/\n\n    }\n\n    function unique(arr) {\n        var obj = {};\n        return arr.filter(function(item, index, arr) {\n            return obj.hasOwnProperty(typeof item + item) ? false : (obj[typeof item + item] = true)\n        })\n    }\n\n\n\n    alist = unique(list)\n\n    return alist\n}\n\n$.exports.gfav = getFav"},{"col_type":"movie_3","name":"按钮","path":"btn","rule":"js:\n\nd.push({\n    title: '保存',\n    url: $('#noLoading#').lazyRule(() => {\n        var lists = (findItemsByCls('img') || [])\n        var list = []\n        if (lists.length > 0) {\n            for (let item of lists) {\n                list.push(item.pic)\n            }\n            storage0.setItem('arr', list)\n            toast('保存成功')\n        } else {\n            toast('当前为空')\n        }\n        return 'hiker://empty'\n    }),\n    col_type: 'flex_button',\n    extra: {\n\n    }\n})\n\nd.push({\n    title: '加载',\n    url: $('#noLoading#').lazyRule(() => {\n        var list = storage0.getItem('arr', [])\n\n        if (list.length > 0) {\n            for (let l of list) {\n                var tl = l.substring(l.lastIndexOf('/') + 1)\n                addItemAfter('text', {\n                    title: tl,\n                    img: l,\n                    url: 'copy://' + l,\n                    col_type: storage0.getItem('按钮样式', 'icon_4_card'),\n                    extra: {\n                        cls: 'img',\n                        id: l\n                    }\n                });\n            }\n        } else {\n            toast('记录为空')\n        }\n        return 'hiker://empty'\n    }),\n    col_type: 'flex_button',\n    extra: {\n\n    }\n})"},{"col_type":"movie_3","name":"首页","path":"home","rule":"js:\nvar d = []\naddListener('onClose', () => {\n    refreshPage(false)\n    //log('页面关闭')\n})\n\n\nsetPageTitle(MY_RULE.title)\ninfs = [\"直连\", \"https://api.xinac.net/icon/?url=${url}\", \"https://api.btstu.cn/getfav/api.php?url=${url}\", \"https://api.cxr.cool/get.php?url=${url}\", \"https://ico.di8du.com/get.php?url=${url}\",\"Google##https://t1.gstatic.com/faviconV2?client=SOCIAL&type=FAVICON&fallback_opts=TYPE,SIZE,URL&url=${url}&size=32\",\"yandex##https://favicon.yandex.net/favicon/v2/${url}?size=32&stub=1\"]\n\nd.push({\n    title: '  请在下方输入链接[必须有http] 然后点确认',\n    url: 'hiker://empty',\n    col_type: 'text_1',\n    extra: {\n        id: 'lab',\n    }\n})\n\n\n\nd.push({\n    title: '清空',\n    url: $('#noLoading#').lazyRule(() => {\n        updateItem('text', {\n            extra: {\n                type: 'textarea',\n                height: -1,\n                defaultValue: ''\n            }\n        });\n        putMyVar('keyword', '')\n        return 'hiker://empty'\n    }),\n    col_type: 'flex_button',\n    extra: {}\n})\n\n//require('hiker://page/btn')\n\n\n\nd.push({\n    title: '粘贴',\n    url: $('#noLoading#').lazyRule(() => {\n        let test = $(\"{{clipboard}}\", \"\").input(() => {\n            updateItem('text', {\n                extra: {\n                    type: 'textarea',\n                    height: -1,\n                    defaultValue: input\n                }\n            });\n            return 'hiker://empty'\n        })\n\n        return test\n    }),\n    col_type: 'flex_button',\n    extra: {}\n})\n\nd.push({\n    title: '清除',\n    url: $('#noLoading#').lazyRule(() => {\n        storage0.setItem('arr', [])\n        toast('清除记录')\n        refreshPage()\n        return 'hiker://empty'\n    }),\n    col_type: 'flex_button',\n    extra: {}\n})\n\nd.push({\n    title: '样式:' + storage0.getItem('按钮样式', 'icon_4_card'),\n    url: $('#noLoading#').lazyRule(() => {\n        let all_cols = [''].concat(getColTypes());\n        all_cols = all_cols.filter(item => /(ico|ava)/.test(item) && !item.includes('mov'))\n        let col = (storage0.getItem('按钮样式', 'icon_4_card') || '');\n        let 按钮样式 = all_cols.map((it) => {\n            return it === col ? '➡️' + it : it;\n        });\n        let tips = '请选择样式';\n        return $(按钮样式, 2, tips).select(() => {\n            input = input.replace(/➡️/g, '');\n            storage0.setItem('按钮样式', input);\n            // config.按钮样式 = input;\n            initConfig({\n                按钮样式: input\n            });\n            // refreshPage(true);\n            let oldIds = (findItemsByCls('img')).map(it => it.extra.id);\n            updateItem('style', {\n                title: '样式:' + storage0.getItem('按钮样式', 'icon_4_card')\n            });\n            oldIds.forEach(x => {\n\n                updateItem(x, {\n                    col_type: input\n                });\n            });\n            return 'toast://已切换样式为:' + input;\n        });\n        return 'hiker://empty'\n    }),\n    col_type: 'flex_button',\n    extra: {\n        id: 'style'\n    }\n})\n\nd.push({\n    title: '接口:' + storage0.getItem('接口', '直连'),\n    url: $('#noLoading#').lazyRule((inf) => {\n        let all_cols = inf\n        let col = (storage0.getItem('接口', '直连') || '');\n        let 接口 = all_cols.map((it) => {\n            return it === col ? '➡️' + it : it;\n        });\n        let tips = '请选择样式';\n        return $(接口, 1, tips).select(() => {\n            input = input.replace(/➡️/g, '');\n            storage0.setItem('接口', input);\n            // config.按钮样式 = input;\n            initConfig({\n                接口: input\n            });\n            // refreshPage(true);\n\n            updateItem('inf', {\n                title: '接口:' + storage0.getItem('接口', '直连')\n            });\n            return 'toast://已切接口为:' + input;\n        });\n        return 'hiker://empty'\n    }, infs),\n    col_type: 'text_1',\n    extra: {\n        id: 'inf'\n    }\n})\n\nd.push({\n    col_type: 'text_2',\n    title: '打开新窗口',\n    url: 'hiker://page/home',\n    extra: {\n        newWindow: true,\n        windowId: MY_RULE.title\n    }\n})\n\nd.push({\n    title: '类型:' + storage0.getItem('类型', 'img'),\n    url: $('#noLoading#').lazyRule(() => {\n        let col = storage0.getItem('类型', 'img');\n        if(col=='img'){\n            storage0.setItem('类型', 'base64')\n        }else{\n            storage0.setItem('类型', 'img')\n        }\n        toast('请重新获取')\n        updateItem('type', {\n            title: '类型:' + storage0.getItem('类型', 'img')\n        });\n        return 'hiker://empty'\n    }),\n    col_type: 'text_2',\n    extra: {\n        id: 'type'\n    }\n})\n\n\nd.push({\n    url: $.toString(() => {\n        putMyVar('keyword', input)\n        if (input == '') {\n            toast('输入为空')\n            return ''\n        }\n        updateItem('lab', {\n            title: '  获取中请稍等',\n        });\n        var r = $.require('hiker://page/fun');\n        var inf = storage0.getItem('接口', '直连')\n        var list = r.gfav(input, inf)\n        //log(list)\n\n\n        if (list != undefined && list.length > 0) {\n            for (let l of list) {\n                var tl = l.substring(l.lastIndexOf('/') + 1)\n                if (l.includes('?')) {\n                    tl = l.split('=')[1]\n                }\n                var type = storage0.getItem('类型', 'img')\n                var c = l\n                if (type == 'base64') {\n                    c=convertBase64Image(l)\n                }\n                addItemAfter('text', {\n                    title: tl,\n                    img: l,\n                    url: 'copy://' + c,\n                    col_type: storage0.getItem('按钮样式', 'icon_4_card'),\n                    extra: {\n                        cls: 'img',\n                        id: l\n                    }\n                });\n            }\n            storage0.setItem('arr', list)\n        }\n        updateItem('lab', {\n            title: '  请在下方输入链接[必须有http] 然后点确认',\n        });\n        return ''\n    }),\n    col_type: 'input',\n    title: '确定',\n    extra: {\n        type: 'textarea',\n        height: -1,\n        id: 'text',\n        defaultValue: getMyVar('keyword', '') || \"\"\n    }\n})\n\n\nsetResult(d);\n\nif (MY_TYPE == 'home') {\n    \n    var list = storage0.getItem('arr', [])\n\n    if (list.length > 0) {\n        for (let l of list) {\n            var tl = l.substring(l.lastIndexOf('/') + 1)\n            if (l.includes('?')) {\n                tl = l.split('=')[1]\n            }\n            addItemAfter('text', {\n                title: tl,\n                img: l,\n                url: 'copy://' + l,\n                col_type: storage0.getItem('按钮样式', 'icon_4_card'),\n                extra: {\n                    cls: 'img',\n                    id: l\n                }\n            });\n        }\n    }\n    \n}"}],"title":"获取Favicon·α","author":"zetalpha","version":0,"type":"tool","url":"hiker://empty##","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\n\neval(JSON.parse(request('hiker://page/home')).rule) ","searchFind":"","search_url":"","group":"⑧工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"方法\",\"path\":\"fun\",\"rule\":\"js:\\nfunction getFav(url, inf) {\\n    if (!/http[s]?/.test(url)) {\\n        toast('不是网址')\\n        return\\n    }\\n    var javai = JavaImporter(java.net.URL, org.jsoup.Jsoup)\\n\\n    var list = []\\n\\n    with(javai) {\\n        try {\\n            var u = new URL(url);\\n        } catch (e) {\\n            log('错误信息：' + e)\\n            toast('错误信息：' + e)\\n            return\\n        }\\n        var pl = u.getProtocol();\\n        var hs = u.getHost();\\n        var newUrl = u.getProtocol().concat(\\\"://\\\").concat(u.getHost());\\n\\n        if (inf != '直连') {\\n            if (inf.includes('##')) {\\n                inf = inf.split('##')[1]\\n            }\\n            list.push(inf.replace('${url}', newUrl))\\n            return list\\n        }\\n\\n        var fav = newUrl + '/favicon.ico'\\n        var res = fetch(fav, {\\n            withStatusCode: true\\n        })\\n        var code = 0\\n        if (res != '') {\\n            var mes = JSON.parse(res)\\n        }\\n\\n        if (mes.error != null) {\\n            if (mes.error.includes('Unable to resolve host')) {\\n                log('错误信息：' + mes.error)\\n                toast('错误信息：' + mes.error)\\n                return\\n            }\\n\\n        }\\n        code = mes.statusCode\\n        if (code == 200 && !mes.body.includes('html')) {\\n            list.push(fav)\\n        }\\n\\n        try {\\n            var document = Jsoup.connect(newUrl).get();\\n        } catch (e) {\\n            log('错误信息：' + e)\\n            toast('错误信息：' + e)\\n            return\\n        }\\n\\n\\n        var imgs = document.select(\\\"link[type=image/x-icon]\\\");\\n        log(imgs)\\n        imgs = Object.keys(imgs).length > 0 ? imgs : document.select(\\\"link[rel$=icon]\\\")\\n        imgs = Object.keys(imgs).length > 0 ? imgs : document.select(\\\"meta[itemprop=image]\\\")\\n        //log(JSON.stringify(imgs))\\n\\n        var isweb = /(com|cn)/\\n        var isimg = /.*?(svg|jpg|ico|png|gif|jpeg)$/gm\\n        for (let x of imgs) {\\n\\n            var link = x.attr(\\\"href\\\")\\n            if (link == '') {\\n                link = x.attr('content')\\n            }\\n            if (isweb.test(link) && isimg.test(link)) {\\n                if (link.startsWith('//')) {\\n                    link = `${pl}:${link}`\\n                }\\n            }\\n            if (link.startsWith('/')) {\\n                link = `${pl}://${hs}${link}`\\n            } else if (!link.includes(pl)) {\\n                link = `${pl}://${hs}/${link}`\\n            }\\n\\n            list.push(link)\\n        }\\n\\n\\n       /* imgs.forEach((x) => {\\n\\n        })*/\\n\\n    }\\n\\n    function unique(arr) {\\n        var obj = {};\\n        return arr.filter(function(item, index, arr) {\\n            return obj.hasOwnProperty(typeof item + item) ? false : (obj[typeof item + item] = true)\\n        })\\n    }\\n\\n\\n\\n    alist = unique(list)\\n\\n    return alist\\n}\\n\\n$.exports.gfav = getFav\"},{\"col_type\":\"movie_3\",\"name\":\"按钮\",\"path\":\"btn\",\"rule\":\"js:\\n\\nd.push({\\n    title: '保存',\\n    url: $('#noLoading#').lazyRule(() => {\\n        var lists = (findItemsByCls('img') || [])\\n        var list = []\\n        if (lists.length > 0) {\\n            for (let item of lists) {\\n                list.push(item.pic)\\n            }\\n            storage0.setItem('arr', list)\\n            toast('保存成功')\\n        } else {\\n            toast('当前为空')\\n        }\\n        return 'hiker://empty'\\n    }),\\n    col_type: 'flex_button',\\n    extra: {\\n\\n    }\\n})\\n\\nd.push({\\n    title: '加载',\\n    url: $('#noLoading#').lazyRule(() => {\\n        var list = storage0.getItem('arr', [])\\n\\n        if (list.length > 0) {\\n            for (let l of list) {\\n                var tl = l.substring(l.lastIndexOf('/') + 1)\\n                addItemAfter('text', {\\n                    title: tl,\\n                    img: l,\\n                    url: 'copy://' + l,\\n                    col_type: storage0.getItem('按钮样式', 'icon_4_card'),\\n                    extra: {\\n                        cls: 'img',\\n                        id: l\\n                    }\\n                });\\n            }\\n        } else {\\n            toast('记录为空')\\n        }\\n        return 'hiker://empty'\\n    }),\\n    col_type: 'flex_button',\\n    extra: {\\n\\n    }\\n})\"},{\"col_type\":\"movie_3\",\"name\":\"首页\",\"path\":\"home\",\"rule\":\"js:\\nvar d = []\\naddListener('onClose', () => {\\n    refreshPage(false)\\n    //log('页面关闭')\\n})\\n\\n\\nsetPageTitle(MY_RULE.title)\\ninfs = [\\\"直连\\\", \\\"https://api.xinac.net/icon/?url=${url}\\\", \\\"https://api.btstu.cn/getfav/api.php?url=${url}\\\", \\\"https://api.cxr.cool/get.php?url=${url}\\\", \\\"https://ico.di8du.com/get.php?url=${url}\\\",\\\"Google##https://t1.gstatic.com/faviconV2?client=SOCIAL&type=FAVICON&fallback_opts=TYPE,SIZE,URL&url=${url}&size=32\\\",\\\"yandex##https://favicon.yandex.net/favicon/v2/${url}?size=32&stub=1\\\"]\\n\\nd.push({\\n    title: '  请在下方输入链接[必须有http] 然后点确认',\\n    url: 'hiker://empty',\\n    col_type: 'text_1',\\n    extra: {\\n        id: 'lab',\\n    }\\n})\\n\\n\\n\\nd.push({\\n    title: '清空',\\n    url: $('#noLoading#').lazyRule(() => {\\n        updateItem('text', {\\n            extra: {\\n                type: 'textarea',\\n                height: -1,\\n                defaultValue: ''\\n            }\\n        });\\n        putMyVar('keyword', '')\\n        return 'hiker://empty'\\n    }),\\n    col_type: 'flex_button',\\n    extra: {}\\n})\\n\\n//require('hiker://page/btn')\\n\\n\\n\\nd.push({\\n    title: '粘贴',\\n    url: $('#noLoading#').lazyRule(() => {\\n        let test = $(\\\"{{clipboard}}\\\", \\\"\\\").input(() => {\\n            updateItem('text', {\\n                extra: {\\n                    type: 'textarea',\\n                    height: -1,\\n                    defaultValue: input\\n                }\\n            });\\n            return 'hiker://empty'\\n        })\\n\\n        return test\\n    }),\\n    col_type: 'flex_button',\\n    extra: {}\\n})\\n\\nd.push({\\n    title: '清除',\\n    url: $('#noLoading#').lazyRule(() => {\\n        storage0.setItem('arr', [])\\n        toast('清除记录')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }),\\n    col_type: 'flex_button',\\n    extra: {}\\n})\\n\\nd.push({\\n    title: '样式:' + storage0.getItem('按钮样式', 'icon_4_card'),\\n    url: $('#noLoading#').lazyRule(() => {\\n        let all_cols = [''].concat(getColTypes());\\n        all_cols = all_cols.filter(item => /(ico|ava)/.test(item) && !item.includes('mov'))\\n        let col = (storage0.getItem('按钮样式', 'icon_4_card') || '');\\n        let 按钮样式 = all_cols.map((it) => {\\n            return it === col ? '➡️' + it : it;\\n        });\\n        let tips = '请选择样式';\\n        return $(按钮样式, 2, tips).select(() => {\\n            input = input.replace(/➡️/g, '');\\n            storage0.setItem('按钮样式', input);\\n            // config.按钮样式 = input;\\n            initConfig({\\n                按钮样式: input\\n            });\\n            // refreshPage(true);\\n            let oldIds = (findItemsByCls('img')).map(it => it.extra.id);\\n            updateItem('style', {\\n                title: '样式:' + storage0.getItem('按钮样式', 'icon_4_card')\\n            });\\n            oldIds.forEach(x => {\\n\\n                updateItem(x, {\\n                    col_type: input\\n                });\\n            });\\n            return 'toast://已切换样式为:' + input;\\n        });\\n        return 'hiker://empty'\\n    }),\\n    col_type: 'flex_button',\\n    extra: {\\n        id: 'style'\\n    }\\n})\\n\\nd.push({\\n    title: '接口:' + storage0.getItem('接口', '直连'),\\n    url: $('#noLoading#').lazyRule((inf) => {\\n        let all_cols = inf\\n        let col = (storage0.getItem('接口', '直连') || '');\\n        let 接口 = all_cols.map((it) => {\\n            return it === col ? '➡️' + it : it;\\n        });\\n        let tips = '请选择样式';\\n        return $(接口, 1, tips).select(() => {\\n            input = input.replace(/➡️/g, '');\\n            storage0.setItem('接口', input);\\n            // config.按钮样式 = input;\\n            initConfig({\\n                接口: input\\n            });\\n            // refreshPage(true);\\n\\n            updateItem('inf', {\\n                title: '接口:' + storage0.getItem('接口', '直连')\\n            });\\n            return 'toast://已切接口为:' + input;\\n        });\\n        return 'hiker://empty'\\n    }, infs),\\n    col_type: 'text_1',\\n    extra: {\\n        id: 'inf'\\n    }\\n})\\n\\nd.push({\\n    col_type: 'text_2',\\n    title: '打开新窗口',\\n    url: 'hiker://page/home',\\n    extra: {\\n        newWindow: true,\\n        windowId: MY_RULE.title\\n    }\\n})\\n\\nd.push({\\n    title: '类型:' + storage0.getItem('类型', 'img'),\\n    url: $('#noLoading#').lazyRule(() => {\\n        let col = storage0.getItem('类型', 'img');\\n        if(col=='img'){\\n            storage0.setItem('类型', 'base64')\\n        }else{\\n            storage0.setItem('类型', 'img')\\n        }\\n        toast('请重新获取')\\n        updateItem('type', {\\n            title: '类型:' + storage0.getItem('类型', 'img')\\n        });\\n        return 'hiker://empty'\\n    }),\\n    col_type: 'text_2',\\n    extra: {\\n        id: 'type'\\n    }\\n})\\n\\n\\nd.push({\\n    url: $.toString(() => {\\n        putMyVar('keyword', input)\\n        if (input == '') {\\n            toast('输入为空')\\n            return ''\\n        }\\n        updateItem('lab', {\\n            title: '  获取中请稍等',\\n        });\\n        var r = $.require('hiker://page/fun');\\n        var inf = storage0.getItem('接口', '直连')\\n        var list = r.gfav(input, inf)\\n        //log(list)\\n\\n\\n        if (list != undefined && list.length > 0) {\\n            for (let l of list) {\\n                var tl = l.substring(l.lastIndexOf('/') + 1)\\n                if (l.includes('?')) {\\n                    tl = l.split('=')[1]\\n                }\\n                var type = storage0.getItem('类型', 'img')\\n                var c = l\\n                if (type == 'base64') {\\n                    c=convertBase64Image(l)\\n                }\\n                addItemAfter('text', {\\n                    title: tl,\\n                    img: l,\\n                    url: 'copy://' + c,\\n                    col_type: storage0.getItem('按钮样式', 'icon_4_card'),\\n                    extra: {\\n                        cls: 'img',\\n                        id: l\\n                    }\\n                });\\n            }\\n            storage0.setItem('arr', list)\\n        }\\n        updateItem('lab', {\\n            title: '  请在下方输入链接[必须有http] 然后点确认',\\n        });\\n        return ''\\n    }),\\n    col_type: 'input',\\n    title: '确定',\\n    extra: {\\n        type: 'textarea',\\n        height: -1,\\n        id: 'text',\\n        defaultValue: getMyVar('keyword', '') || \\\"\\\"\\n    }\\n})\\n\\n\\nsetResult(d);\\n\\nif (MY_TYPE == 'home') {\\n    \\n    var list = storage0.getItem('arr', [])\\n\\n    if (list.length > 0) {\\n        for (let l of list) {\\n            var tl = l.substring(l.lastIndexOf('/') + 1)\\n            if (l.includes('?')) {\\n                tl = l.split('=')[1]\\n            }\\n            addItemAfter('text', {\\n                title: tl,\\n                img: l,\\n                url: 'copy://' + l,\\n                col_type: storage0.getItem('按钮样式', 'icon_4_card'),\\n                extra: {\\n                    cls: 'img',\\n                    id: l\\n                }\\n            });\\n        }\\n    }\\n    \\n}\"}]","proxy":"","icon":"https://api.xinac.net/icon/?url=https://api.xiaobaibk.com/"}
{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"腾讯二级","path":"qq","rule":"js:\n// 数据定位\nvar d = [];\nMY_URL = MY_URL.split(\"#\")[0];\nif (MY_URL.match(/cover/)) {\n    // 手机搜索结果链接\n    cid = MY_URL.split('/')[5].split('.html')[0];\n    if (MY_URL.split('=')[1]) {\n        vid = MY_URL.split('=')[1];\n        MY_URL = 'https://v.qq.com/x/cover/' + cid + '/' + vid + '.html';\n    } else {\n        MY_URL = 'https://v.qq.com/x/cover/' + cid + '.html';\n    }\n} else {\n    // 手机首页跳转链接\n    cid = MY_URL.split('=')[1].split('&')[0];\n    if (cid == '') {\n        vid = MY_URL.split('=')[2]\n        // 这个cid貌似是错的，，算了就尝试一下，多半还是要404~\n        data = fetch('https://union.video.qq.com/fcgi-bin/data?otype=json&tid=682&appid=20001238&appkey=6c03bbe9658448a4&union_platform=1&idlist=' + vid);\n        cid = JSON.parse(data.match(/{[\\S\\s]+}/)[0]).results[0].fields.cover_list[0]\n    }\n    MY_URL = 'https://v.qq.com/x/cover/' + cid + '.html';\n}\n// log(MY_URL);\nhtml = fetch(MY_URL, {\n    headers: {\n        'User-Agent': PC_UA,\n        \"Referer\": \"https://v.qq.com/\"\n    },\n    method: \"GET\",\n    body: {}\n})\n// log(html);\neval(pdfh(html, 'head&&script,-1&&Html').replace('window.__PINIA__', 'var video_data'));\n// log(video_data);\ntry {\n    Data1 = video_data.global;\n    // Data1 = JSON.parse(html.match(/\"global\":[\\S\\s]+(?=,\"player\")/)[0].replace('\"global\":', ''));二旧\n    // Data1 = JSON.parse(html.match(/\"global\":[\\S\\s]+(?=,\"topList\")/)[0].replace('\"global\":', ''));——旧\n} catch (e) {\n    log('对不起，PC端页面丢失，或许可以新窗口在手机ua访问~');\n}\n剧集列表 = Data1.coverInfo.video_ids;\n演职人员 = Data1.coverInfo.leading_actor;\n简介 = Data1.coverInfo.description ? Data1.coverInfo.description : Data1.columnInfo.description;\n简介 = 简介 == undefined ? '' : 简介;\n类型 = Data1.coverInfo.type_name;\n全集数 = Data1.coverInfo.episode_all;\n影片名称 = Data1.coverInfo.title;\n第二标题 = Data1.coverInfo.second_title;\n地区 = Data1.coverInfo.area_name;\ntry {\n    Data2 = video_data.introduction;\n    // Data2 = JSON.parse(html.match(/\"introduction\":[\\S\\s]+(?=,\"episodeMain\")/)[0].replace('\"introduction\":', ''));测试二新版腾讯\n} catch (e) {\n    // 旧版原版腾讯\n    Data2 = JSON.parse(html.match(/\"introduction\":[\\S\\s]+(?=,\"episodeClips\")/)[0].replace('\"introduction\":', ''));\n}\ntry {\n    // 动漫类的或许会有进度\n    追剧日历 = Data2.introData.list[0].item_params.update_notify_desc.replace('\\u002F', '/');\n} catch (e) {\n    // 综艺应该没写全集\n    追剧日历 = Data2.introData.list[0].item_params.update_notify_desc;\n}\n// 更新状态=Data2.introData.list[0].item_params.detail_info.split('·')[1]+'/'+Data2.introData.list[0].item_params.detail_info.split('·')[2];\n标签 = Data2.introData.list[0].item_params.main_genres;\n// 未必能获取到——可以用地区替换\n年份 = Data2.introData.list[0].item_params.year;\n得分 = Data2.introData.list[0].item_params.score;\n封面 = Data2.introData.list[0].item_params.new_pic_vt.replace('\\u002F', '/') + \"@Referer=\";\nif (!封面.match(/https/)) 封面 = 封面.replace('http', 'https') + \"@Referer=\";\n// 相关热榜 = html.match(/\"topList\":[\\S\\s]+(?=,\"knowledgeIntro\")/)[0];\n相关热榜 = video_data.topList;\n// JSON里边不能出现undefined这样的非法变量值，所以需要替换成“字符串类型”的变量值\n// 相关热榜 = JSON.parse(相关热榜.match(/undefined/) ? 相关热榜.replace('\"topList\":', '').replace('undefined', '\"\"') : 相关热榜.replace('\"topList\":', ''));\n短讯 = \"⭐\" + 类型 + \"⭐\" + (年份 ? 年份 : '') + '\\t' + (地区 ? 地区 : '') + '\\t' + (得分 ? 得分 : '') + '\\n' + (第二标题 ? '—' + 第二标题 + '—' : '') + '\\n' + 标签;\n// 重定义二级页面数据\nsetPageTitle(影片名称);\nsetPagePicUrl(封面);\n// 前置参数和预处理---\nvar lazy = $('').lazyRule(() => {\n    eval(fetch('hiker://files/cache/Parse_Dn.js', {}));\n    return aytmParse(input)\n});\nvar Color = \"#19B89D\";\nvar 每页集数 = 20\nvar 搜索模式 = '分组';\nvar 调用名称 = '简影';\nputMyVar('折叠', '关');\nputMyVar('日历', '关');\nputMyVar('lazy', lazy);\nputMyVar('剧集列表', 剧集列表);\n// 清除变量\naddListener('onClose', $.toString(() => {\n    clearMyVar('分集起');\n    clearMyVar('分集终');\n    clearMyVar('lazy');\n    clearMyVar('剧集列表');\n}))\n// 设置动态最新章节\nsetLastChapterRule('js:' + $.toString((MY_URL) => {\n    eval(JSON.parse(request('hiker://page/getUpdate?rule=腾讯.cy')).rule);\n}, MY_URL));\n// 页面内容正文---\n// 基本信息模块\nd.push({\n    title: 短讯,\n    desc: 简介 == '' ? '暂无简介' : 简介.substring(0, 45) + '‘‘’’…<font color=\"#1C1C1C\">详情</font>',\n    img: 封面,\n    url: $().rule((简介, 演职人员) => {\n        res = {};\n        var d = [];\n        d.push({\n            title: '影片简介：' + '\\n\\t\\t\\t\\t\\t\\t\\t演职人员：' + 演职人员 + '\\n\\t\\t\\t\\t\\t\\t\\t' + 简介,\n            col_type: 'long_text'\n        });\n        res.data = d;\n        setHomeResult(res);\n    }, 简介, 演职人员),\n    col_type: 'movie_1_vertical_pic_blur',\n    extra: {\n        longClick: [{\n            title: '预告、花絮开关', js: $.toString(() => {\n                if (getItem('previewSwitch', 'fold') == 'fold') {\n                    setItem('previewSwitch', 'open');\n                    refreshPage(true);\n                    return \"toast://预告已经切换为展示~\";\n                } else {\n                    setItem('previewSwitch', 'fold');\n                    refreshPage(true);\n                    return \"toast://预告不再展示~\";\n                }\n            }),\n        }, {\n            title: 'dm盒子', js: $.toString(() => {\n                return 'hiker://page/setting#noHistory#?rule=dm盒子';\n            })\n        }]\n    }\n});\n// 追剧日历模块\nd.push({\n    title: '‘‘’’<small><font><font color=\"#098AC1\">📅追剧</font>' + '</small>',\n    url: $('#noLoading#').lazyRule((追剧日历, 全集数) => {\n        if (getMyVar('日历', '关') == '开') {\n            deleteItem('追剧日历');\n            putMyVar('日历', '关');\n        } else {\n            addItemAfter('显示模式', {\n                title: 追剧日历 == '' ? '-已完结or无更新计划-' : (全集数 == '' ? '暂无集数数据<br>' + 追剧日历 : '共' + 全集数 + '集<br>' + 追剧日历),\n                col_type: \"rich_text\",\n                extra: {\n                    id: '追剧日历'\n                }\n            });\n            putMyVar('日历', '开');\n        }\n        return 'toast://已切换日历为:' + getMyVar('日历', '开')\n    }, 追剧日历, 全集数),\n    col_type: 'text_4'\n});\n// 豆瓣影讯模块\nd.push({\n    title: '‘‘’’<small><font color=\"#098AC1\">🍃豆瓣</font></small>',\n    url: 'hiker://search?s=' + 影片名称 + '&rule=青豆',\n    col_type: 'text_4'\n});\n// 相关热榜模块\nd.push({\n    title: '‘‘’’<small><font><font color=\"#098AC1\">🏷️' + 相关热榜.title + '热榜</font>' + '</small>',\n    url: $('#noLoading#').lazyRule((相关热榜) => {\n        if (相关热榜.title == '') {\n            return 'toast://没有分类榜单！'\n        }\n        return $().rule((相关热榜) => {\n            res = {};\n            d = [];\n            setPageTitle(相关热榜.title + '热榜');\n            榜单列表 = 相关热榜.data;\n            num = 1;\n            榜单列表.forEach(list => {\n                link = 'https://v.qq.com/x/cover/' + list.id + '.html';\n                d.push({\n                    title: '‘‘’’<big><font color=\"red\">Num.' + num + '</font></big>' + list.title,\n                    img: list.pic.replace('\\u002F', '/') + \"@Referer=\",\n                    url: $('#noLoading#').lazyRule((link) => {\n                        return $('hiker://empty#immersiveTheme#').rule((link) => {\n                            MY_URL = link + '#immersiveTheme#';\n                            eval(JSON.parse(request('hiker://page/qq?rule=腾讯.cy')).rule);\n                        }, link)\n                    }, link),\n                    desc: list.timelong + '\\n' + list.secondTitle,\n                    col_type: 'movie_1_left_pic'\n                });\n                num += 1;\n            });\n            res.data = d;\n            setHomeResult(res);\n        }, 相关热榜)\n    }, 相关热榜),\n    col_type: 'text_4',\n    extra: {\n        id: '相关热榜'\n    }\n});\n// 显示模式更改模块\nd.push({\n    title: '‘‘’’<small><font color=\"#098AC1\">🔃' + getItem('模式', '双边') + '</font></small>',\n    url: $('#noLoading#').lazyRule(() => {\n        if (getItem('模式', '双边') == '列表') {\n            for (let index = 1; index <= 300; index++) {\n                updateItem('tx' + index, {\n                    col_type: 'movie_2',\n                });\n            }\n            setItem('模式', '双边')\n        } else {\n            for (let index = 1; index <= 300; index++) {\n                updateItem('tx' + index, {\n                    col_type: 'movie_1_left_pic',\n                });\n            }\n            setItem('模式', '列表')\n        }\n        updateItem('显示模式', {\n            title: '‘‘’’<small><font color=\"#098AC1\">🔃' + getItem('模式', '双边') + '</font></small>',\n        });\n        return 'toast://已切换模式为:' + getItem('模式', '双边')\n    }),\n    col_type: 'text_4',\n    extra: {\n        id: '显示模式'\n    }\n});\n// 选插模块——局部刷新版\n来源 = 'tx';\nputMyVar('简插', $.toString(() => {\n    let titleArr = []\n    setFile = readFile('hiker://files/rules/DuanNian/MyParse.json');\n    try {\n        eval('json=' + setFile);\n    } catch (e) {\n        log('Json解析发生了错误:' + e.message);\n    }\n    titleArr = json.title;\n    let barry1 = ['✍️辅助'];\n    let barry2 = ['📦️魔断'];\n    let barry3 = ['🔍搜索'];\n    titleArr = barry3.concat(titleArr);\n    titleArr = barry2.concat(titleArr);\n    titleArr = barry1.concat(titleArr);\n    eval('op=json.settings.' + 来源);\n    titleArr = titleArr.map((it) => {\n        return it === op ? '👉' + it : it;\n    });\n    putMyVar('解析数组', titleArr);\n    putMyVar('setFile', setFile);\n}))\neval(getMyVar('简插'));\nd.push({\n    title: '解析：🔘<font color=\"' + Color + '\">' + op + '</font>\\t\\t页码：<font color=\"' + Color + '\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\n    url: $('#noLoading#').lazyRule((json, 来源, Color, op, 影片名称, 搜索模式, 调用名称) => {\n        eval(getMyVar('简插'));\n        return $(eval(getMyVar('解析数组')), 3).select((json, 来源, Color, op, 影片名称, 搜索模式, 调用名称) => {\n            setFile = getMyVar('setFile');\n            input = input.replace(/👉/g, '');\n            if (input === '✍️辅助') {\n                return $().rule(() => {\n                    eval(JSON.parse(request('hiker://page/home?rule=配置助手')).rule);\n                })\n            } else if (input === '📦️魔断') {\n                return \"hiker://page/Route?rule=MyFieldᴰⁿ&type=编辑#noHistory#\";\n            } else if (input === '🔍搜索') {\n                if (搜索模式 == '分组') {\n                    return \"hiker://search?s=\" + 影片名称 + \"&group=\" + 调用名称;\n                } else {\n                    return \"hiker://search?s=\" + 影片名称 + \"&rule=\" + 调用名称;\n                }\n            }\n            // 原先的配置\n            originSettings = JSON.stringify(json.settings);\n            // 修改配置\n            eval('json.settings.' + 来源 + '=input;');\n            setFile = setFile.replace(originSettings, JSON.stringify(json.settings));\n            saveFile('hiker://files/rules/DuanNian/MyParse.json', setFile);\n            // 刷新元素\n            eval(getMyVar('简插'));\n            updateItem('op', {\n                title: '解析：🔘<font color=\"' + Color + '\">' + op + '</font>\\t\\t页码：<font color=\"' + Color + '\">' + getMyVar(\"页码\", \"首页\") + '</font>',\n            });\n            return \"toast://切换解析口为:\" + input;\n        }, json, 来源, Color, op, 影片名称, 搜索模式, 调用名称)\n    }, json, 来源, Color, op, 影片名称, 搜索模式, 调用名称),\n    img: 'hiker://files/rules/cy/tubiao/tx.svg',\n    col_type: \"avatar\",\n    extra: {\n        id: 'op'\n    }\n});\n// 获取剧集信息\nputMyVar('刷新选集', $.toString(() => {\n    // 删除\n    for (let i = 1; i <= 300; i++) {\n        deleteItem('tx' + i);\n    }\n    // 判断执行的接口方案\n    // 添加\n    lazy = getMyVar('lazy');\n    function formatTime(seconds) {\n        var minutes = Math.floor(seconds / 60);\n        var remainingSeconds = seconds % 60;\n        var formattedTime = minutes.toString().padStart(2, '0') + \":\" + remainingSeconds.toString().padStart(2, '0');\n        return formattedTime;\n    }\n    newArray = [];\n    index = 1;\n    if (el.title) {\n        title = el.title;\n        data = JSON.parse(fetch(buildUrl('https://pbaccess.video.qq.com/trpc.videosearch.search_cgi.http/load_playsource_list_info', {\n            pageNum: '0',\n            id: cid,\n            dataType: '2',\n            pageContext: encodeURIComponent(el.asnycParams),\n            scene: '2',\n            platform: '2',\n            appId: '10718',\n            site: 'qq'\n        }))).data.normalList.itemList[0].videoInfo.firstBlockSites[0];\n        episodeInfoList = data.episodeInfoList;\n        正片列表 = episodeInfoList.filter((it) => {\n            lable = it.markLabel;\n            if (lable.match(/限免/) || !lable.match(/预|花絮/)) {\n                return true;\n            } else {\n                return false;\n            }\n            // !it.markLabel.match(/预|花絮/)\n        });\n        (getItem('previewSwitch', 'fold') == 'fold' ? 正片列表 : episodeInfoList).forEach(list => {\n            if (getItem('模式', '双边') == '列表') {\n                newArray.push({\n                    title: list.title + '\\t' + list.checkUpTime,\n                    img: list.imgUrl.replace('/160', '') + \"@Referer=\",\n                    url: list.url + lazy,\n                    desc: formatTime(list.duration) + '\\n' + list.checkUpTime,\n                    col_type: 'movie_1_left_pic',\n                    extra: {\n                        id: 'tx' + index\n                    }\n                });\n            } else {\n                newArray.push({\n                    title: list.checkUpTime,\n                    img: list.imgUrl.replace('/160', '') + \"@Referer=\",\n                    url: list.url + lazy,\n                    desc: list.title + '\\t' + formatTime(list.duration),\n                    col_type: 'movie_2',\n                    extra: {\n                        id: 'tx' + index\n                    }\n                });\n            }\n            index += 1;\n        });\n    } else {\n        title = el.begin + '-' + el.end;\n        pageContext = el.page_context;\n        data = JSON.parse(fetch('https://pbaccess.video.qq.com/trpc.universal_backend_service.page_server_rpc.PageServer/GetPageData?video_appid=3000010&vplatform=2&vversion_name=8.2.96', {\n            body: {\n                \"page_params\": {\n                    \"req_from\": \"web_vsite\",\n                    \"page_id\": \"vsite_episode_list\",\n                    \"page_type\": \"detail_operation\",\n                    \"id_type\": \"1\",\n                    \"page_size\": \"\",\n                    \"cid\": cid,\n                    \"vid\": \"\",\n                    \"lid\": \"\",\n                    \"page_num\": \"\",\n                    \"page_context\": pageContext,\n                    \"detail_page_type\": \"1\"\n                },\n                \"has_cache\": 1\n            },\n            headers: {\n                'Referer': 'https://v.qq.com/'\n            }\n        })).data.module_list_datas[0].module_datas[0];\n        // 是正片，排除预告片\n        episodeInfoList = data.item_data_lists.item_datas.filter((it) => it.item_type === \"1\");\n        正片列表 = episodeInfoList.filter((it) => it.item_params.is_trailer !== \"1\");\n        (getItem('previewSwitch', 'fold') == 'fold' ? 正片列表 : episodeInfoList).forEach(list => {\n            parms = list.item_params;\n            tag = parms.is_trailer !== \"1\" ? '正片' : '预';\n            if (getItem('模式', '双边') == '列表') {\n                newArray.push({\n                    title: parms.play_title,\n                    img: parms.image_url.replace('/160', '') + \"@Referer=\",\n                    url: 'https://v.qq.com/x/cover/' + parms.cid + '/' + parms.vid + '.html' + lazy,\n                    desc: tag + '\\t' + formatTime(parms.duration),\n                    col_type: 'movie_1_left_pic',\n                    extra: {\n                        id: 'tx' + index\n                    }\n                });\n            } else {\n                newArray.push({\n                    title: parms.play_title,\n                    img: parms.image_url.replace('/160', '') + \"@Referer=\",\n                    url: 'https://v.qq.com/x/cover/' + parms.cid + '/' + parms.vid + '.html' + lazy,\n                    desc: tag + '\\t' + formatTime(parms.duration),\n                    col_type: 'movie_2',\n                    extra: {\n                        id: 'tx' + index\n                    }\n                });\n            }\n            index += 1;\n        });\n    }\n    addItemAfter(getMyVar('末页'), newArray);\n    eval(getMyVar('简插'));\n    updateItem('op', {\n        title: '解析：🔘<font color=\"' + Color + '\">' + op + '</font>\\t\\t页码：<font color=\"' + Color + '\">' + title + '</font>',\n    })\n    putMyVar(\"页码\", title);\n}));\n// 展示剧集区域\nindex = 1;\nfunction formatTime(seconds) {\n    var minutes = Math.floor(seconds / 60);\n    var remainingSeconds = seconds % 60;\n    var formattedTime = minutes.toString().padStart(2, '0') + \":\" + remainingSeconds.toString().padStart(2, '0');\n    return formattedTime;\n}\ntry {\n    pageContext = 'lid=&cid=' + cid + '&page_num=0&page_size=30&id_type=1&req_type=6&req_from=web_vsite&req_from_second_type=&detail_page_type=1';\n    curtag = 0; tablen = 1;\n    data = JSON.parse(fetch('https://pbaccess.video.qq.com/trpc.universal_backend_service.page_server_rpc.PageServer/GetPageData?video_appid=3000010&vplatform=2&vversion_name=8.2.96', {\n        body: {\n            \"page_params\": {\n                \"req_from\": \"web_vsite\",\n                \"page_id\": \"vsite_episode_list\",\n                \"page_type\": \"detail_operation\",\n                \"id_type\": \"1\",\n                \"page_size\": \"\",\n                \"cid\": cid,\n                \"vid\": \"\",\n                \"lid\": \"\",\n                \"page_num\": \"\",\n                \"page_context\": pageContext,\n                \"detail_page_type\": \"1\"\n            },\n            \"has_cache\": 1\n        },\n        headers: {\n            'Referer': 'https://v.qq.com/'\n        }\n    })).data.module_list_datas[0].module_datas[0];\n    // 打补丁，一刀切，存在特殊分季，如动漫诛仙\n    分季列表 = data.item_data_lists.item_datas.filter((it) => it.item_type === \"28\");\n    if (分季列表.length > 0) throw new Error('存在特殊的分季，尝试备用接口方案...');\n    if (data.module_params.tabs == \"\") {\n        tabs = [];\n    } else {\n        tabs = JSON.parse(data.module_params.tabs);\n    }\n    if (tabs.length > 0) {\n        d.push({\n            col_type: 'scroll_button',\n            url: 'hiker://empty',\n            title: '∷',\n            extra: {\n                id: '占位符',\n            }\n        })\n        tabs.forEach(el => {\n            d.push({\n                title: el.begin + '-' + el.end,\n                url: $('#noLoading##noHistory#').lazyRule((el, cid, 来源, Color) => {\n                    eval(getMyVar('刷新选集'));\n                    return \"hiker://empty\";\n                }, el, cid, 来源, Color),\n                col_type: 'scroll_button',\n                extra: {\n                    id: el.begin + '-' + el.end\n                }\n            });\n        });\n        末页 = tabs[tabs.length - 1];\n        putMyVar('末页', 末页.begin + '-' + 末页.end);\n    }\n    episodeInfoList = data.item_data_lists.item_datas.filter((it) => it.item_type === \"1\");\n    正片列表 = episodeInfoList.filter((it) => it.item_params.is_trailer !== \"1\");\n    (getItem('previewSwitch', 'fold') == 'fold' ? 正片列表 : episodeInfoList).forEach(list => {\n        parms = list.item_params;\n        tag = parms.is_trailer !== \"1\" ? '正片' : '预';\n        if (getItem('模式', '双边') == '列表') {\n            d.push({\n                title: parms.union_title,\n                img: parms.image_url.replace('/160', '') + \"@Referer=\",\n                url: 'https://v.qq.com/x/cover/' + parms.cid + '/' + parms.vid + '.html' + lazy,\n                desc: tag + '\\t' + formatTime(parms.duration),\n                col_type: 'movie_1_left_pic',\n                extra: {\n                    id: 'tx' + index\n                }\n            });\n        } else {\n            d.push({\n                title: parms.union_title,\n                img: parms.image_url.replace('/160', '') + \"@Referer=\",\n                url: 'https://v.qq.com/x/cover/' + parms.cid + '/' + parms.vid + '.html' + lazy,\n                desc: tag + '\\t' + formatTime(parms.duration),\n                col_type: 'movie_2',\n                extra: {\n                    id: 'tx' + index\n                }\n            });\n        }\n        index += 1;\n    });\n} catch (e) {\n    log('首选接口出错：' + e);\n    // 综艺、电影（无标题）\n    pageContext = 'need_async=true';\n    data = JSON.parse(fetch(buildUrl('https://pbaccess.video.qq.com/trpc.videosearch.search_cgi.http/load_playsource_list_info', {\n        pageNum: '0',\n        id: cid,\n        dataType: '2',\n        pageContext: encodeURIComponent(pageContext),\n        scene: '2',\n        platform: '2',\n        appId: '10718',\n        site: 'qq'\n    }))).data.normalList.itemList[0].videoInfo.firstBlockSites[0];\n    // log(data)\n    tabs = data.tabs;\n    if (tabs.length > 0) {\n        d.push({\n            col_type: 'scroll_button',\n            url: 'hiker://empty',\n            title: '∷',\n            extra: {\n                id: '占位符',\n            }\n        })\n        tabs.forEach(el => {\n            d.push({\n                title: el.title,\n                url: $('#noLoading##noHistory#').lazyRule((el, cid, 来源, Color) => {\n                    eval(getMyVar('刷新选集'));\n                    return \"hiker://empty\";\n                }, el, cid, 来源, Color),\n                col_type: 'scroll_button',\n                extra: {\n                    id: el.title\n                }\n            });\n        });\n        末页 = tabs[tabs.length - 1];\n        putMyVar('末页', 末页.title);\n    }\n    episodeInfoList = data.episodeInfoList;\n    正片列表 = episodeInfoList.filter((it) => {\n        lable = it.markLabel;\n        if (lable.match(/限免/) || !lable.match(/预|花絮/)) {\n            return true;\n        } else {\n            return false;\n        }\n        // !it.markLabel.match(/预|花絮/)\n    });\n    (getItem('previewSwitch', 'fold') == 'fold' ? 正片列表 : episodeInfoList).forEach(list => {\n        if (getItem('模式', '双边') == '列表') {\n            d.push({\n                title: list.title,\n                img: list.imgUrl.replace('/160', '') + \"@Referer=\",\n                url: list.url + lazy,\n                desc: formatTime(list.duration) + '\\n' + list.checkUpTime,\n                col_type: 'movie_1_left_pic',\n                extra: {\n                    id: 'tx' + index\n                }\n            });\n        } else {\n            d.push({\n                title: list.checkUpTime,\n                img: list.imgUrl.replace('/160', '') + \"@Referer=\",\n                url: list.url + lazy,\n                desc: list.title + '\\t' + formatTime(list.duration),\n                col_type: 'movie_2',\n                extra: {\n                    id: 'tx' + index\n                }\n            });\n        }\n        index += 1;\n    });\n\n}\nsetResult(d);\n"},{"name":"腾讯最新章节","path":"getUpdate","rule":"cid = MY_URL.substring(MY_URL.lastIndexOf('/') + 1, MY_URL.lastIndexOf('.html'));\npageContext = 'lid=&cid=' + cid + '&page_num=0&page_size=30&id_type=1&req_type=6&req_from=web_vsite&req_from_second_type=&detail_page_type=1';\ninfoData = JSON.parse(fetch('https://pbaccess.video.qq.com/trpc.universal_backend_service.page_server_rpc.PageServer/GetPageData?video_appid=3000010&vplatform=2&vversion_name=8.2.96', {\n    body: {\n        \"page_params\": {\n            \"req_from\": \"web_vsite\",\n            \"page_id\": \"vsite_episode_list\",\n            \"page_type\": \"detail_operation\",\n            \"id_type\": \"1\",\n            \"page_size\": \"\",\n            \"cid\": cid,\n            \"vid\": \"\",\n            \"lid\": \"\",\n            \"page_num\": \"\",\n            \"page_context\": pageContext,\n            \"detail_page_type\": \"1\"\n        },\n        \"has_cache\": 1\n    },\n    headers: {\n        'Referer': 'https://v.qq.com/'\n    }\n})).data.module_list_datas[0].module_datas[0];\nif (infoData.module_params.tabs == \"\") {\n    // tabs = [];\n    episodeInfoList = infoData.item_data_lists.item_datas.filter((it) => it.item_type === \"1\");\n    正片列表 = episodeInfoList.filter((it) => it.item_params.is_trailer !== \"1\");\n} else {\n    tabs = JSON.parse(infoData.module_params.tabs);\n    pageContext = tabs[tabs.length - 1].page_context;\n    data = JSON.parse(fetch('https://pbaccess.video.qq.com/trpc.universal_backend_service.page_server_rpc.PageServer/GetPageData?video_appid=3000010&vplatform=2&vversion_name=8.2.96', {\n        body: {\n            \"page_params\": {\n                \"req_from\": \"web_vsite\",\n                \"page_id\": \"vsite_episode_list\",\n                \"page_type\": \"detail_operation\",\n                \"id_type\": \"1\",\n                \"page_size\": \"\",\n                \"cid\": cid,\n                \"vid\": \"\",\n                \"lid\": \"\",\n                \"page_num\": \"\",\n                \"page_context\": pageContext,\n                \"detail_page_type\": \"1\"\n            },\n            \"has_cache\": 1\n        },\n        headers: {\n            'Referer': 'https://v.qq.com/'\n        }\n    })).data.module_list_datas[0].module_datas[0];\n    episodeInfoList = data.item_data_lists.item_datas.filter((it) => it.item_type === \"1\");\n    正片列表 = episodeInfoList.filter((it) => it.item_params.is_trailer !== \"1\");\n}\n// 修正（往上翻页）\nif (正片列表.length == 0) {\n    tabs = JSON.parse(infoData.module_params.tabs);\n    pageContext = tabs[tabs.length - 2].page_context;\n    data = JSON.parse(fetch('https://pbaccess.video.qq.com/trpc.universal_backend_service.page_server_rpc.PageServer/GetPageData?video_appid=3000010&vplatform=2&vversion_name=8.2.96', {\n        body: {\n            \"page_params\": {\n                \"req_from\": \"web_vsite\",\n                \"page_id\": \"vsite_episode_list\",\n                \"page_type\": \"detail_operation\",\n                \"id_type\": \"1\",\n                \"page_size\": \"\",\n                \"cid\": cid,\n                \"vid\": \"\",\n                \"lid\": \"\",\n                \"page_num\": \"\",\n                \"page_context\": pageContext,\n                \"detail_page_type\": \"1\"\n            },\n            \"has_cache\": 1\n        },\n        headers: {\n            'Referer': 'https://v.qq.com/'\n        }\n    })).data.module_list_datas[0].module_datas[0];\n    episodeInfoList = data.item_data_lists.item_datas.filter((it) => it.item_type === \"1\");\n    正片列表 = episodeInfoList.filter((it) => it.item_params.is_trailer !== \"1\");\n}\nsetResult(正片列表[正片列表.length - 1].item_params.play_title);"}],"title":"腾讯.cy","author":"侠名","version":0,"type":"video","url":"hiker://empty##","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\n// 把MY_RULE作为全局变量存储\nputVar('rulejiexi', MY_RULE);\nd.push({\n    col_type: \"x5_webview_single\",\n    url: \"https://m.v.qq.com/index.html\",\n    desc: \"float&&100%\",\n    extra: {\n        canBack: true,\n        blockRules: [''],\n        // 算是明白了urlInterceptor，必须input有值才会触发这里的代码，但问题的关键是腾讯触发不了input值，只有app下载和搜索结果的详情才会触发链接值(旧版腾讯)\n        urlInterceptor: $.toString((MY_RULE) => {\n            // log(input);莫名其妙，腾讯改页面input响应方式了\n            // 拦截app下载页面——非网页代码\n            if (input.includes('download')) return true;\n            if (input.match(/play|cover/)) {\n                return $.toString((url, MY_RULE) => {\n                    fba.open(JSON.stringify({\n                        rule: MY_RULE.title,\n                        title: '影片详情',\n                        url: url + '#immersiveTheme#',\n                        group: MY_RULE.group,\n                        findRule: MY_RULE.detail_find_rule,\n                        preRule: MY_RULE.preRule,\n                        extra: {}\n                    }));\n                }, input, MY_RULE)\n            }\n        }, MY_RULE),\n        js: $.toString((MY_RULE) => {\n            var token_timer = function () {\n                locationUrl = document.location.href;\n                // 监听页面链接变化\n                if (locationUrl.match(/play|cover/)) {\n                    fba.log(locationUrl);\n                    // 回退\n                    history.back();\n                    fba.open(JSON.stringify({\n                        rule: MY_RULE.title,\n                        title: '影片详情',\n                        url: locationUrl + '#immersiveTheme#',\n                        group: MY_RULE.group,\n                        findRule: MY_RULE.detail_find_rule,\n                        preRule: MY_RULE.preRule,\n                        extra: {}\n                    }));\n                }\n                // 定时任务\n                var timer = setInterval(() => {\n                    // 模拟点击继续浏览精彩内容——如果有'继续使用浏览器'的话\n                    if (document.body.textContent.match(/继续使用浏览器/)) {\n                        btn = document.getElementsByClassName(\"at-app-banner--button\")[0];\n                        btn.dispatchEvent(new Event('click'));\n                    }\n                    // 隐藏顶部栏\n                    if (document.getElementsByClassName(\"site-top\")[0]) {\n                        document.getElementsByClassName(\"site-top\")[0].style.display = \"none\";\n                        // 隐藏之后需要调整元素顶距——先调顶部分类盒子，再调下方整体（以海报轮播图为参考）\n                        document.getElementsByClassName(\"site_header\")[0].style[\"height\"] = \"35px\";\n                        document.getElementsByClassName(\"container\")[0].style[\"padding-top\"] = \"45px\";\n                    }\n                    // 隐藏橙色色app弹框\n                    if (document.querySelector(\"div[dt-eid=open_app_bottom]\")) {\n                        document.querySelector(\"div[dt-eid=open_app_bottom]\").style.display = \"none\";\n                    }\n                    // 隐藏继续浏览、app打开\n                    if (document.querySelector(\"div[dt-eid=open_app_float]\")) {\n                        document.querySelector(\"div[dt-eid=open_app_float]\").style.display = \"none\";\n                    }\n                    // 隐藏app打开看高清内容\n                    if (document.querySelector(\".at-app-banner [dt-eid]\")) {\n                        document.querySelector(\".at-app-banner [dt-eid]\").style.display = \"none\";\n                    }\n                    // 移除VIP分栏\n                    if (document.querySelector(\"div[key='13']\")) {\n                        document.querySelector(\"div[key='13']\").style.display = \"none\";\n                    }\n                    // 移除娱乐分栏\n                    if (document.querySelector(\"div[key='18']\")) {\n                        document.querySelector(\"div[key='18']\").style.display = \"none\";\n                    }\n                }, 100)\n            };\n            token_timer();\n        }, MY_RULE),\n        // jsLoadingInject: true,\n        // 悬浮嗅探部分短视频\n        // floatVideo: true,\n        ua: MOBILE_UA\n    }\n});\nsetResult(d);","searchFind":"js:\nvar d = [];\nMY_URL = MY_URL.split('##');\nvar seaword = MY_URL[1];\nvar res = JSON.parse(fetch(\"https://pbaccess.video.qq.com/trpc.videosearch.mobile_search.MultiTerminalSearch/MbSearch?vplatform=2\", {\n    body: { \"version\": \"24072901\", \"clientType\": 1, \"filterValue\": \"undefined\", \"uuid\": \"9C771991-2BD9-4200-AE44-898D626738EE\", \"retry\": 0, \"query\": seaword, \"pagenum\": 0, \"pagesize\": 30, \"queryFrom\": 110, \"searchDatakey\": \"\", \"transInfo\": \"\", \"isneedQc\": true, \"preQid\": \"\", \"adClientInfo\": \"\", \"extraInfo\": { \"isNewMarkLabel\": \"1\", \"multi_terminal_pc\": \"1\" } },\n    headers: {\n        \"User-Agent\": PC_UA,\n        \"Referer\": \"https://v.qq.com\",\n        \"origin\": \"https://v.qq.com\",\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\",\n        \"sec-ch-ua-platform\": \"Windows\"\n    },\n    method: \"POST\"\n}));\n// 普通结果\nvar baseList = res.data.normalList.itemList;\nvar SerieList = res.data.areaBoxList;\ntry {\n    baseList.forEach(rs => {\n        if (rs.videoInfo != null) {\n            videoInfo = rs.videoInfo;\n            playSites = videoInfo.playSites[0];\n            标签='';\n            videoInfo.coverDoc.richTags.forEach(item=>{\n                标签+='['+item.text+']\\t'\n            })\n            d.push({\n                title: videoInfo.title + '-来源:' + playSites.enName,\n                img: videoInfo.imgUrl + \"@Referer=\",\n                url: playSites.episodeInfoList[0].url + \"#immersiveTheme#\",\n                content: videoInfo.descrip,\n                desc: \"⭐\" + videoInfo.typeName + '-' + videoInfo.year,\n                extra: {\n                    影片名称:videoInfo.title,\n                    简介: videoInfo.descrip,\n                    类型: videoInfo.typeName,\n                    年份: videoInfo.year,\n                    地区:videoInfo.area,\n                    语言:videoInfo.language.join('、'),\n                    演职人员:\"导演：\"+videoInfo.directors.join('、')+\"\\n主演：\"+videoInfo.actors.join('、'),\n                    封面: videoInfo.imgUrl + \"@Referer=\",\n                    全集数:videoInfo.subjectDoc.videoNum,\n                    标签:标签,\n                    from:'search_res'\n                }\n            });\n        }\n    });\n} catch (e) {\n    // 系列结果\n    log('系列结果');\n    SerieList.forEach(item => {\n        if (!item.boxShowName.match(/短视频/)) {\n            d.push({\n                title: \"Series | \"+item.boxShowName+\"↓\",\n                url: 'hiker://empty',\n            })\n            item.itemList.forEach(rs => {\n                if (rs.videoInfo != null) {\n                    videoInfo = rs.videoInfo;\n                    playSites = videoInfo.playSites[0];\n                    标签='';\n                    videoInfo.coverDoc.richTags.forEach(item=>{\n                        标签+='['+item.text+']\\t'\n                    })\n                    d.push({\n                        title: videoInfo.title + '-来源:' + playSites.enName,\n                        img: videoInfo.imgUrl + \"@Referer=\",\n                        url: playSites.episodeInfoList[0].url + \"#immersiveTheme#\",\n                        content: videoInfo.descrip,\n                        desc: \"⭐\" + videoInfo.typeName + '-' + videoInfo.year,\n                        extra: {\n                            影片名称:videoInfo.title,\n                            简介: videoInfo.descrip,\n                            类型: videoInfo.typeName,\n                            年份: videoInfo.year,\n                            地区:videoInfo.area,\n                            语言:videoInfo.language.join('、'),\n                            演职人员:\"导演：\"+videoInfo.directors.join('、')+\"\\n主演：\"+videoInfo.actors.join('、'),\n                            封面: videoInfo.imgUrl + \"@Referer=\",\n                            全集数:videoInfo.subjectDoc.videoNum,\n                            标签:标签,\n                            from:'search_res'\n                        }\n                    });\n                }\n            });\n        }\n    });\n\n}\n// 系列结果\nsetSearchResult(d);","search_url":"hiker://empty##**##fypage","group":"②影视","detail_col_type":"movie_1","detail_find_rule":"js:\n\nMY_URL = MY_URL.split(\"#\")[0];\n\nif (MY_URL.match(/qiyi/)) {\n\n    eval(JSON.parse(request('hiker://page/qiyi?rule=爱奇艺.cy')).rule);\n\n}else if(MY_URL.match(/youku/)){\n\n    eval(JSON.parse(request('hiker://page/youku?rule=优酷.cy')).rule);\n\n}else if(MY_URL.match(/qq/)){\n\n    eval(JSON.parse(request('hiker://page/qq?rule=腾讯.cy')).rule);\n\n}else if(MY_URL.match(/mgtv/)){\n\n    eval(JSON.parse(request('hiker://page/mgtv?rule=芒果.cy')).rule);\n\n}else if(MY_URL.match(/bili/)){\n\n    eval(JSON.parse(request('hiker://page/bili?rule=哔哩.cy')).rule);\n\n}\n\n\n","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"pc","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"腾讯二级\",\"path\":\"qq\",\"rule\":\"js:\\n// 数据定位\\nvar d = [];\\nMY_URL = MY_URL.split(\\\"#\\\")[0];\\nif (MY_URL.match(/cover/)) {\\n    // 手机搜索结果链接\\n    cid = MY_URL.split('/')[5].split('.html')[0];\\n    if (MY_URL.split('=')[1]) {\\n        vid = MY_URL.split('=')[1];\\n        MY_URL = 'https://v.qq.com/x/cover/' + cid + '/' + vid + '.html';\\n    } else {\\n        MY_URL = 'https://v.qq.com/x/cover/' + cid + '.html';\\n    }\\n} else {\\n    // 手机首页跳转链接\\n    cid = MY_URL.split('=')[1].split('&')[0];\\n    if (cid == '') {\\n        vid = MY_URL.split('=')[2]\\n        // 这个cid貌似是错的，，算了就尝试一下，多半还是要404~\\n        data = fetch('https://union.video.qq.com/fcgi-bin/data?otype=json&tid=682&appid=20001238&appkey=6c03bbe9658448a4&union_platform=1&idlist=' + vid);\\n        cid = JSON.parse(data.match(/{[\\\\S\\\\s]+}/)[0]).results[0].fields.cover_list[0]\\n    }\\n    MY_URL = 'https://v.qq.com/x/cover/' + cid + '.html';\\n}\\n// log(MY_URL);\\nhtml = fetch(MY_URL, {\\n    headers: {\\n        'User-Agent': PC_UA,\\n        \\\"Referer\\\": \\\"https://v.qq.com/\\\"\\n    },\\n    method: \\\"GET\\\",\\n    body: {}\\n})\\n// log(html);\\neval(pdfh(html, 'head&&script,-1&&Html').replace('window.__PINIA__', 'var video_data'));\\n// log(video_data);\\ntry {\\n    Data1 = video_data.global;\\n    // Data1 = JSON.parse(html.match(/\\\"global\\\":[\\\\S\\\\s]+(?=,\\\"player\\\")/)[0].replace('\\\"global\\\":', ''));二旧\\n    // Data1 = JSON.parse(html.match(/\\\"global\\\":[\\\\S\\\\s]+(?=,\\\"topList\\\")/)[0].replace('\\\"global\\\":', ''));——旧\\n} catch (e) {\\n    log('对不起，PC端页面丢失，或许可以新窗口在手机ua访问~');\\n}\\n剧集列表 = Data1.coverInfo.video_ids;\\n演职人员 = Data1.coverInfo.leading_actor;\\n简介 = Data1.coverInfo.description ? Data1.coverInfo.description : Data1.columnInfo.description;\\n简介 = 简介 == undefined ? '' : 简介;\\n类型 = Data1.coverInfo.type_name;\\n全集数 = Data1.coverInfo.episode_all;\\n影片名称 = Data1.coverInfo.title;\\n第二标题 = Data1.coverInfo.second_title;\\n地区 = Data1.coverInfo.area_name;\\ntry {\\n    Data2 = video_data.introduction;\\n    // Data2 = JSON.parse(html.match(/\\\"introduction\\\":[\\\\S\\\\s]+(?=,\\\"episodeMain\\\")/)[0].replace('\\\"introduction\\\":', ''));测试二新版腾讯\\n} catch (e) {\\n    // 旧版原版腾讯\\n    Data2 = JSON.parse(html.match(/\\\"introduction\\\":[\\\\S\\\\s]+(?=,\\\"episodeClips\\\")/)[0].replace('\\\"introduction\\\":', ''));\\n}\\ntry {\\n    // 动漫类的或许会有进度\\n    追剧日历 = Data2.introData.list[0].item_params.update_notify_desc.replace('\\\\u002F', '/');\\n} catch (e) {\\n    // 综艺应该没写全集\\n    追剧日历 = Data2.introData.list[0].item_params.update_notify_desc;\\n}\\n// 更新状态=Data2.introData.list[0].item_params.detail_info.split('·')[1]+'/'+Data2.introData.list[0].item_params.detail_info.split('·')[2];\\n标签 = Data2.introData.list[0].item_params.main_genres;\\n// 未必能获取到——可以用地区替换\\n年份 = Data2.introData.list[0].item_params.year;\\n得分 = Data2.introData.list[0].item_params.score;\\n封面 = Data2.introData.list[0].item_params.new_pic_vt.replace('\\\\u002F', '/') + \\\"@Referer=\\\";\\nif (!封面.match(/https/)) 封面 = 封面.replace('http', 'https') + \\\"@Referer=\\\";\\n// 相关热榜 = html.match(/\\\"topList\\\":[\\\\S\\\\s]+(?=,\\\"knowledgeIntro\\\")/)[0];\\n相关热榜 = video_data.topList;\\n// JSON里边不能出现undefined这样的非法变量值，所以需要替换成“字符串类型”的变量值\\n// 相关热榜 = JSON.parse(相关热榜.match(/undefined/) ? 相关热榜.replace('\\\"topList\\\":', '').replace('undefined', '\\\"\\\"') : 相关热榜.replace('\\\"topList\\\":', ''));\\n短讯 = \\\"⭐\\\" + 类型 + \\\"⭐\\\" + (年份 ? 年份 : '') + '\\\\t' + (地区 ? 地区 : '') + '\\\\t' + (得分 ? 得分 : '') + '\\\\n' + (第二标题 ? '—' + 第二标题 + '—' : '') + '\\\\n' + 标签;\\n// 重定义二级页面数据\\nsetPageTitle(影片名称);\\nsetPagePicUrl(封面);\\n// 前置参数和预处理---\\nvar lazy = $('').lazyRule(() => {\\n    eval(fetch('hiker://files/cache/Parse_Dn.js', {}));\\n    return aytmParse(input)\\n});\\nvar Color = \\\"#19B89D\\\";\\nvar 每页集数 = 20\\nvar 搜索模式 = '分组';\\nvar 调用名称 = '简影';\\nputMyVar('折叠', '关');\\nputMyVar('日历', '关');\\nputMyVar('lazy', lazy);\\nputMyVar('剧集列表', 剧集列表);\\n// 清除变量\\naddListener('onClose', $.toString(() => {\\n    clearMyVar('分集起');\\n    clearMyVar('分集终');\\n    clearMyVar('lazy');\\n    clearMyVar('剧集列表');\\n}))\\n// 设置动态最新章节\\nsetLastChapterRule('js:' + $.toString((MY_URL) => {\\n    eval(JSON.parse(request('hiker://page/getUpdate?rule=腾讯.cy')).rule);\\n}, MY_URL));\\n// 页面内容正文---\\n// 基本信息模块\\nd.push({\\n    title: 短讯,\\n    desc: 简介 == '' ? '暂无简介' : 简介.substring(0, 45) + '‘‘’’…<font color=\\\"#1C1C1C\\\">详情</font>',\\n    img: 封面,\\n    url: $().rule((简介, 演职人员) => {\\n        res = {};\\n        var d = [];\\n        d.push({\\n            title: '影片简介：' + '\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t演职人员：' + 演职人员 + '\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t' + 简介,\\n            col_type: 'long_text'\\n        });\\n        res.data = d;\\n        setHomeResult(res);\\n    }, 简介, 演职人员),\\n    col_type: 'movie_1_vertical_pic_blur',\\n    extra: {\\n        longClick: [{\\n            title: '预告、花絮开关', js: $.toString(() => {\\n                if (getItem('previewSwitch', 'fold') == 'fold') {\\n                    setItem('previewSwitch', 'open');\\n                    refreshPage(true);\\n                    return \\\"toast://预告已经切换为展示~\\\";\\n                } else {\\n                    setItem('previewSwitch', 'fold');\\n                    refreshPage(true);\\n                    return \\\"toast://预告不再展示~\\\";\\n                }\\n            }),\\n        }, {\\n            title: 'dm盒子', js: $.toString(() => {\\n                return 'hiker://page/setting#noHistory#?rule=dm盒子';\\n            })\\n        }]\\n    }\\n});\\n// 追剧日历模块\\nd.push({\\n    title: '‘‘’’<small><font><font color=\\\"#098AC1\\\">📅追剧</font>' + '</small>',\\n    url: $('#noLoading#').lazyRule((追剧日历, 全集数) => {\\n        if (getMyVar('日历', '关') == '开') {\\n            deleteItem('追剧日历');\\n            putMyVar('日历', '关');\\n        } else {\\n            addItemAfter('显示模式', {\\n                title: 追剧日历 == '' ? '-已完结or无更新计划-' : (全集数 == '' ? '暂无集数数据<br>' + 追剧日历 : '共' + 全集数 + '集<br>' + 追剧日历),\\n                col_type: \\\"rich_text\\\",\\n                extra: {\\n                    id: '追剧日历'\\n                }\\n            });\\n            putMyVar('日历', '开');\\n        }\\n        return 'toast://已切换日历为:' + getMyVar('日历', '开')\\n    }, 追剧日历, 全集数),\\n    col_type: 'text_4'\\n});\\n// 豆瓣影讯模块\\nd.push({\\n    title: '‘‘’’<small><font color=\\\"#098AC1\\\">🍃豆瓣</font></small>',\\n    url: 'hiker://search?s=' + 影片名称 + '&rule=青豆',\\n    col_type: 'text_4'\\n});\\n// 相关热榜模块\\nd.push({\\n    title: '‘‘’’<small><font><font color=\\\"#098AC1\\\">🏷️' + 相关热榜.title + '热榜</font>' + '</small>',\\n    url: $('#noLoading#').lazyRule((相关热榜) => {\\n        if (相关热榜.title == '') {\\n            return 'toast://没有分类榜单！'\\n        }\\n        return $().rule((相关热榜) => {\\n            res = {};\\n            d = [];\\n            setPageTitle(相关热榜.title + '热榜');\\n            榜单列表 = 相关热榜.data;\\n            num = 1;\\n            榜单列表.forEach(list => {\\n                link = 'https://v.qq.com/x/cover/' + list.id + '.html';\\n                d.push({\\n                    title: '‘‘’’<big><font color=\\\"red\\\">Num.' + num + '</font></big>' + list.title,\\n                    img: list.pic.replace('\\\\u002F', '/') + \\\"@Referer=\\\",\\n                    url: $('#noLoading#').lazyRule((link) => {\\n                        return $('hiker://empty#immersiveTheme#').rule((link) => {\\n                            MY_URL = link + '#immersiveTheme#';\\n                            eval(JSON.parse(request('hiker://page/qq?rule=腾讯.cy')).rule);\\n                        }, link)\\n                    }, link),\\n                    desc: list.timelong + '\\\\n' + list.secondTitle,\\n                    col_type: 'movie_1_left_pic'\\n                });\\n                num += 1;\\n            });\\n            res.data = d;\\n            setHomeResult(res);\\n        }, 相关热榜)\\n    }, 相关热榜),\\n    col_type: 'text_4',\\n    extra: {\\n        id: '相关热榜'\\n    }\\n});\\n// 显示模式更改模块\\nd.push({\\n    title: '‘‘’’<small><font color=\\\"#098AC1\\\">🔃' + getItem('模式', '双边') + '</font></small>',\\n    url: $('#noLoading#').lazyRule(() => {\\n        if (getItem('模式', '双边') == '列表') {\\n            for (let index = 1; index <= 300; index++) {\\n                updateItem('tx' + index, {\\n                    col_type: 'movie_2',\\n                });\\n            }\\n            setItem('模式', '双边')\\n        } else {\\n            for (let index = 1; index <= 300; index++) {\\n                updateItem('tx' + index, {\\n                    col_type: 'movie_1_left_pic',\\n                });\\n            }\\n            setItem('模式', '列表')\\n        }\\n        updateItem('显示模式', {\\n            title: '‘‘’’<small><font color=\\\"#098AC1\\\">🔃' + getItem('模式', '双边') + '</font></small>',\\n        });\\n        return 'toast://已切换模式为:' + getItem('模式', '双边')\\n    }),\\n    col_type: 'text_4',\\n    extra: {\\n        id: '显示模式'\\n    }\\n});\\n// 选插模块——局部刷新版\\n来源 = 'tx';\\nputMyVar('简插', $.toString(() => {\\n    let titleArr = []\\n    setFile = readFile('hiker://files/rules/DuanNian/MyParse.json');\\n    try {\\n        eval('json=' + setFile);\\n    } catch (e) {\\n        log('Json解析发生了错误:' + e.message);\\n    }\\n    titleArr = json.title;\\n    let barry1 = ['✍️辅助'];\\n    let barry2 = ['📦️魔断'];\\n    let barry3 = ['🔍搜索'];\\n    titleArr = barry3.concat(titleArr);\\n    titleArr = barry2.concat(titleArr);\\n    titleArr = barry1.concat(titleArr);\\n    eval('op=json.settings.' + 来源);\\n    titleArr = titleArr.map((it) => {\\n        return it === op ? '👉' + it : it;\\n    });\\n    putMyVar('解析数组', titleArr);\\n    putMyVar('setFile', setFile);\\n}))\\neval(getMyVar('简插'));\\nd.push({\\n    title: '解析：🔘<font color=\\\"' + Color + '\\\">' + op + '</font>\\\\t\\\\t页码：<font color=\\\"' + Color + '\\\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\\n    url: $('#noLoading#').lazyRule((json, 来源, Color, op, 影片名称, 搜索模式, 调用名称) => {\\n        eval(getMyVar('简插'));\\n        return $(eval(getMyVar('解析数组')), 3).select((json, 来源, Color, op, 影片名称, 搜索模式, 调用名称) => {\\n            setFile = getMyVar('setFile');\\n            input = input.replace(/👉/g, '');\\n            if (input === '✍️辅助') {\\n                return $().rule(() => {\\n                    eval(JSON.parse(request('hiker://page/home?rule=配置助手')).rule);\\n                })\\n            } else if (input === '📦️魔断') {\\n                return \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=编辑#noHistory#\\\";\\n            } else if (input === '🔍搜索') {\\n                if (搜索模式 == '分组') {\\n                    return \\\"hiker://search?s=\\\" + 影片名称 + \\\"&group=\\\" + 调用名称;\\n                } else {\\n                    return \\\"hiker://search?s=\\\" + 影片名称 + \\\"&rule=\\\" + 调用名称;\\n                }\\n            }\\n            // 原先的配置\\n            originSettings = JSON.stringify(json.settings);\\n            // 修改配置\\n            eval('json.settings.' + 来源 + '=input;');\\n            setFile = setFile.replace(originSettings, JSON.stringify(json.settings));\\n            saveFile('hiker://files/rules/DuanNian/MyParse.json', setFile);\\n            // 刷新元素\\n            eval(getMyVar('简插'));\\n            updateItem('op', {\\n                title: '解析：🔘<font color=\\\"' + Color + '\\\">' + op + '</font>\\\\t\\\\t页码：<font color=\\\"' + Color + '\\\">' + getMyVar(\\\"页码\\\", \\\"首页\\\") + '</font>',\\n            });\\n            return \\\"toast://切换解析口为:\\\" + input;\\n        }, json, 来源, Color, op, 影片名称, 搜索模式, 调用名称)\\n    }, json, 来源, Color, op, 影片名称, 搜索模式, 调用名称),\\n    img: 'hiker://files/rules/cy/tubiao/tx.svg',\\n    col_type: \\\"avatar\\\",\\n    extra: {\\n        id: 'op'\\n    }\\n});\\n// 获取剧集信息\\nputMyVar('刷新选集', $.toString(() => {\\n    // 删除\\n    for (let i = 1; i <= 300; i++) {\\n        deleteItem('tx' + i);\\n    }\\n    // 判断执行的接口方案\\n    // 添加\\n    lazy = getMyVar('lazy');\\n    function formatTime(seconds) {\\n        var minutes = Math.floor(seconds / 60);\\n        var remainingSeconds = seconds % 60;\\n        var formattedTime = minutes.toString().padStart(2, '0') + \\\":\\\" + remainingSeconds.toString().padStart(2, '0');\\n        return formattedTime;\\n    }\\n    newArray = [];\\n    index = 1;\\n    if (el.title) {\\n        title = el.title;\\n        data = JSON.parse(fetch(buildUrl('https://pbaccess.video.qq.com/trpc.videosearch.search_cgi.http/load_playsource_list_info', {\\n            pageNum: '0',\\n            id: cid,\\n            dataType: '2',\\n            pageContext: encodeURIComponent(el.asnycParams),\\n            scene: '2',\\n            platform: '2',\\n            appId: '10718',\\n            site: 'qq'\\n        }))).data.normalList.itemList[0].videoInfo.firstBlockSites[0];\\n        episodeInfoList = data.episodeInfoList;\\n        正片列表 = episodeInfoList.filter((it) => {\\n            lable = it.markLabel;\\n            if (lable.match(/限免/) || !lable.match(/预|花絮/)) {\\n                return true;\\n            } else {\\n                return false;\\n            }\\n            // !it.markLabel.match(/预|花絮/)\\n        });\\n        (getItem('previewSwitch', 'fold') == 'fold' ? 正片列表 : episodeInfoList).forEach(list => {\\n            if (getItem('模式', '双边') == '列表') {\\n                newArray.push({\\n                    title: list.title + '\\\\t' + list.checkUpTime,\\n                    img: list.imgUrl.replace('/160', '') + \\\"@Referer=\\\",\\n                    url: list.url + lazy,\\n                    desc: formatTime(list.duration) + '\\\\n' + list.checkUpTime,\\n                    col_type: 'movie_1_left_pic',\\n                    extra: {\\n                        id: 'tx' + index\\n                    }\\n                });\\n            } else {\\n                newArray.push({\\n                    title: list.checkUpTime,\\n                    img: list.imgUrl.replace('/160', '') + \\\"@Referer=\\\",\\n                    url: list.url + lazy,\\n                    desc: list.title + '\\\\t' + formatTime(list.duration),\\n                    col_type: 'movie_2',\\n                    extra: {\\n                        id: 'tx' + index\\n                    }\\n                });\\n            }\\n            index += 1;\\n        });\\n    } else {\\n        title = el.begin + '-' + el.end;\\n        pageContext = el.page_context;\\n        data = JSON.parse(fetch('https://pbaccess.video.qq.com/trpc.universal_backend_service.page_server_rpc.PageServer/GetPageData?video_appid=3000010&vplatform=2&vversion_name=8.2.96', {\\n            body: {\\n                \\\"page_params\\\": {\\n                    \\\"req_from\\\": \\\"web_vsite\\\",\\n                    \\\"page_id\\\": \\\"vsite_episode_list\\\",\\n                    \\\"page_type\\\": \\\"detail_operation\\\",\\n                    \\\"id_type\\\": \\\"1\\\",\\n                    \\\"page_size\\\": \\\"\\\",\\n                    \\\"cid\\\": cid,\\n                    \\\"vid\\\": \\\"\\\",\\n                    \\\"lid\\\": \\\"\\\",\\n                    \\\"page_num\\\": \\\"\\\",\\n                    \\\"page_context\\\": pageContext,\\n                    \\\"detail_page_type\\\": \\\"1\\\"\\n                },\\n                \\\"has_cache\\\": 1\\n            },\\n            headers: {\\n                'Referer': 'https://v.qq.com/'\\n            }\\n        })).data.module_list_datas[0].module_datas[0];\\n        // 是正片，排除预告片\\n        episodeInfoList = data.item_data_lists.item_datas.filter((it) => it.item_type === \\\"1\\\");\\n        正片列表 = episodeInfoList.filter((it) => it.item_params.is_trailer !== \\\"1\\\");\\n        (getItem('previewSwitch', 'fold') == 'fold' ? 正片列表 : episodeInfoList).forEach(list => {\\n            parms = list.item_params;\\n            tag = parms.is_trailer !== \\\"1\\\" ? '正片' : '预';\\n            if (getItem('模式', '双边') == '列表') {\\n                newArray.push({\\n                    title: parms.play_title,\\n                    img: parms.image_url.replace('/160', '') + \\\"@Referer=\\\",\\n                    url: 'https://v.qq.com/x/cover/' + parms.cid + '/' + parms.vid + '.html' + lazy,\\n                    desc: tag + '\\\\t' + formatTime(parms.duration),\\n                    col_type: 'movie_1_left_pic',\\n                    extra: {\\n                        id: 'tx' + index\\n                    }\\n                });\\n            } else {\\n                newArray.push({\\n                    title: parms.play_title,\\n                    img: parms.image_url.replace('/160', '') + \\\"@Referer=\\\",\\n                    url: 'https://v.qq.com/x/cover/' + parms.cid + '/' + parms.vid + '.html' + lazy,\\n                    desc: tag + '\\\\t' + formatTime(parms.duration),\\n                    col_type: 'movie_2',\\n                    extra: {\\n                        id: 'tx' + index\\n                    }\\n                });\\n            }\\n            index += 1;\\n        });\\n    }\\n    addItemAfter(getMyVar('末页'), newArray);\\n    eval(getMyVar('简插'));\\n    updateItem('op', {\\n        title: '解析：🔘<font color=\\\"' + Color + '\\\">' + op + '</font>\\\\t\\\\t页码：<font color=\\\"' + Color + '\\\">' + title + '</font>',\\n    })\\n    putMyVar(\\\"页码\\\", title);\\n}));\\n// 展示剧集区域\\nindex = 1;\\nfunction formatTime(seconds) {\\n    var minutes = Math.floor(seconds / 60);\\n    var remainingSeconds = seconds % 60;\\n    var formattedTime = minutes.toString().padStart(2, '0') + \\\":\\\" + remainingSeconds.toString().padStart(2, '0');\\n    return formattedTime;\\n}\\ntry {\\n    pageContext = 'lid=&cid=' + cid + '&page_num=0&page_size=30&id_type=1&req_type=6&req_from=web_vsite&req_from_second_type=&detail_page_type=1';\\n    curtag = 0; tablen = 1;\\n    data = JSON.parse(fetch('https://pbaccess.video.qq.com/trpc.universal_backend_service.page_server_rpc.PageServer/GetPageData?video_appid=3000010&vplatform=2&vversion_name=8.2.96', {\\n        body: {\\n            \\\"page_params\\\": {\\n                \\\"req_from\\\": \\\"web_vsite\\\",\\n                \\\"page_id\\\": \\\"vsite_episode_list\\\",\\n                \\\"page_type\\\": \\\"detail_operation\\\",\\n                \\\"id_type\\\": \\\"1\\\",\\n                \\\"page_size\\\": \\\"\\\",\\n                \\\"cid\\\": cid,\\n                \\\"vid\\\": \\\"\\\",\\n                \\\"lid\\\": \\\"\\\",\\n                \\\"page_num\\\": \\\"\\\",\\n                \\\"page_context\\\": pageContext,\\n                \\\"detail_page_type\\\": \\\"1\\\"\\n            },\\n            \\\"has_cache\\\": 1\\n        },\\n        headers: {\\n            'Referer': 'https://v.qq.com/'\\n        }\\n    })).data.module_list_datas[0].module_datas[0];\\n    // 打补丁，一刀切，存在特殊分季，如动漫诛仙\\n    分季列表 = data.item_data_lists.item_datas.filter((it) => it.item_type === \\\"28\\\");\\n    if (分季列表.length > 0) throw new Error('存在特殊的分季，尝试备用接口方案...');\\n    if (data.module_params.tabs == \\\"\\\") {\\n        tabs = [];\\n    } else {\\n        tabs = JSON.parse(data.module_params.tabs);\\n    }\\n    if (tabs.length > 0) {\\n        d.push({\\n            col_type: 'scroll_button',\\n            url: 'hiker://empty',\\n            title: '∷',\\n            extra: {\\n                id: '占位符',\\n            }\\n        })\\n        tabs.forEach(el => {\\n            d.push({\\n                title: el.begin + '-' + el.end,\\n                url: $('#noLoading##noHistory#').lazyRule((el, cid, 来源, Color) => {\\n                    eval(getMyVar('刷新选集'));\\n                    return \\\"hiker://empty\\\";\\n                }, el, cid, 来源, Color),\\n                col_type: 'scroll_button',\\n                extra: {\\n                    id: el.begin + '-' + el.end\\n                }\\n            });\\n        });\\n        末页 = tabs[tabs.length - 1];\\n        putMyVar('末页', 末页.begin + '-' + 末页.end);\\n    }\\n    episodeInfoList = data.item_data_lists.item_datas.filter((it) => it.item_type === \\\"1\\\");\\n    正片列表 = episodeInfoList.filter((it) => it.item_params.is_trailer !== \\\"1\\\");\\n    (getItem('previewSwitch', 'fold') == 'fold' ? 正片列表 : episodeInfoList).forEach(list => {\\n        parms = list.item_params;\\n        tag = parms.is_trailer !== \\\"1\\\" ? '正片' : '预';\\n        if (getItem('模式', '双边') == '列表') {\\n            d.push({\\n                title: parms.union_title,\\n                img: parms.image_url.replace('/160', '') + \\\"@Referer=\\\",\\n                url: 'https://v.qq.com/x/cover/' + parms.cid + '/' + parms.vid + '.html' + lazy,\\n                desc: tag + '\\\\t' + formatTime(parms.duration),\\n                col_type: 'movie_1_left_pic',\\n                extra: {\\n                    id: 'tx' + index\\n                }\\n            });\\n        } else {\\n            d.push({\\n                title: parms.union_title,\\n                img: parms.image_url.replace('/160', '') + \\\"@Referer=\\\",\\n                url: 'https://v.qq.com/x/cover/' + parms.cid + '/' + parms.vid + '.html' + lazy,\\n                desc: tag + '\\\\t' + formatTime(parms.duration),\\n                col_type: 'movie_2',\\n                extra: {\\n                    id: 'tx' + index\\n                }\\n            });\\n        }\\n        index += 1;\\n    });\\n} catch (e) {\\n    log('首选接口出错：' + e);\\n    // 综艺、电影（无标题）\\n    pageContext = 'need_async=true';\\n    data = JSON.parse(fetch(buildUrl('https://pbaccess.video.qq.com/trpc.videosearch.search_cgi.http/load_playsource_list_info', {\\n        pageNum: '0',\\n        id: cid,\\n        dataType: '2',\\n        pageContext: encodeURIComponent(pageContext),\\n        scene: '2',\\n        platform: '2',\\n        appId: '10718',\\n        site: 'qq'\\n    }))).data.normalList.itemList[0].videoInfo.firstBlockSites[0];\\n    // log(data)\\n    tabs = data.tabs;\\n    if (tabs.length > 0) {\\n        d.push({\\n            col_type: 'scroll_button',\\n            url: 'hiker://empty',\\n            title: '∷',\\n            extra: {\\n                id: '占位符',\\n            }\\n        })\\n        tabs.forEach(el => {\\n            d.push({\\n                title: el.title,\\n                url: $('#noLoading##noHistory#').lazyRule((el, cid, 来源, Color) => {\\n                    eval(getMyVar('刷新选集'));\\n                    return \\\"hiker://empty\\\";\\n                }, el, cid, 来源, Color),\\n                col_type: 'scroll_button',\\n                extra: {\\n                    id: el.title\\n                }\\n            });\\n        });\\n        末页 = tabs[tabs.length - 1];\\n        putMyVar('末页', 末页.title);\\n    }\\n    episodeInfoList = data.episodeInfoList;\\n    正片列表 = episodeInfoList.filter((it) => {\\n        lable = it.markLabel;\\n        if (lable.match(/限免/) || !lable.match(/预|花絮/)) {\\n            return true;\\n        } else {\\n            return false;\\n        }\\n        // !it.markLabel.match(/预|花絮/)\\n    });\\n    (getItem('previewSwitch', 'fold') == 'fold' ? 正片列表 : episodeInfoList).forEach(list => {\\n        if (getItem('模式', '双边') == '列表') {\\n            d.push({\\n                title: list.title,\\n                img: list.imgUrl.replace('/160', '') + \\\"@Referer=\\\",\\n                url: list.url + lazy,\\n                desc: formatTime(list.duration) + '\\\\n' + list.checkUpTime,\\n                col_type: 'movie_1_left_pic',\\n                extra: {\\n                    id: 'tx' + index\\n                }\\n            });\\n        } else {\\n            d.push({\\n                title: list.checkUpTime,\\n                img: list.imgUrl.replace('/160', '') + \\\"@Referer=\\\",\\n                url: list.url + lazy,\\n                desc: list.title + '\\\\t' + formatTime(list.duration),\\n                col_type: 'movie_2',\\n                extra: {\\n                    id: 'tx' + index\\n                }\\n            });\\n        }\\n        index += 1;\\n    });\\n\\n}\\nsetResult(d);\\n\"},{\"name\":\"腾讯最新章节\",\"path\":\"getUpdate\",\"rule\":\"cid = MY_URL.substring(MY_URL.lastIndexOf('/') + 1, MY_URL.lastIndexOf('.html'));\\npageContext = 'lid=&cid=' + cid + '&page_num=0&page_size=30&id_type=1&req_type=6&req_from=web_vsite&req_from_second_type=&detail_page_type=1';\\ninfoData = JSON.parse(fetch('https://pbaccess.video.qq.com/trpc.universal_backend_service.page_server_rpc.PageServer/GetPageData?video_appid=3000010&vplatform=2&vversion_name=8.2.96', {\\n    body: {\\n        \\\"page_params\\\": {\\n            \\\"req_from\\\": \\\"web_vsite\\\",\\n            \\\"page_id\\\": \\\"vsite_episode_list\\\",\\n            \\\"page_type\\\": \\\"detail_operation\\\",\\n            \\\"id_type\\\": \\\"1\\\",\\n            \\\"page_size\\\": \\\"\\\",\\n            \\\"cid\\\": cid,\\n            \\\"vid\\\": \\\"\\\",\\n            \\\"lid\\\": \\\"\\\",\\n            \\\"page_num\\\": \\\"\\\",\\n            \\\"page_context\\\": pageContext,\\n            \\\"detail_page_type\\\": \\\"1\\\"\\n        },\\n        \\\"has_cache\\\": 1\\n    },\\n    headers: {\\n        'Referer': 'https://v.qq.com/'\\n    }\\n})).data.module_list_datas[0].module_datas[0];\\nif (infoData.module_params.tabs == \\\"\\\") {\\n    // tabs = [];\\n    episodeInfoList = infoData.item_data_lists.item_datas.filter((it) => it.item_type === \\\"1\\\");\\n    正片列表 = episodeInfoList.filter((it) => it.item_params.is_trailer !== \\\"1\\\");\\n} else {\\n    tabs = JSON.parse(infoData.module_params.tabs);\\n    pageContext = tabs[tabs.length - 1].page_context;\\n    data = JSON.parse(fetch('https://pbaccess.video.qq.com/trpc.universal_backend_service.page_server_rpc.PageServer/GetPageData?video_appid=3000010&vplatform=2&vversion_name=8.2.96', {\\n        body: {\\n            \\\"page_params\\\": {\\n                \\\"req_from\\\": \\\"web_vsite\\\",\\n                \\\"page_id\\\": \\\"vsite_episode_list\\\",\\n                \\\"page_type\\\": \\\"detail_operation\\\",\\n                \\\"id_type\\\": \\\"1\\\",\\n                \\\"page_size\\\": \\\"\\\",\\n                \\\"cid\\\": cid,\\n                \\\"vid\\\": \\\"\\\",\\n                \\\"lid\\\": \\\"\\\",\\n                \\\"page_num\\\": \\\"\\\",\\n                \\\"page_context\\\": pageContext,\\n                \\\"detail_page_type\\\": \\\"1\\\"\\n            },\\n            \\\"has_cache\\\": 1\\n        },\\n        headers: {\\n            'Referer': 'https://v.qq.com/'\\n        }\\n    })).data.module_list_datas[0].module_datas[0];\\n    episodeInfoList = data.item_data_lists.item_datas.filter((it) => it.item_type === \\\"1\\\");\\n    正片列表 = episodeInfoList.filter((it) => it.item_params.is_trailer !== \\\"1\\\");\\n}\\n// 修正（往上翻页）\\nif (正片列表.length == 0) {\\n    tabs = JSON.parse(infoData.module_params.tabs);\\n    pageContext = tabs[tabs.length - 2].page_context;\\n    data = JSON.parse(fetch('https://pbaccess.video.qq.com/trpc.universal_backend_service.page_server_rpc.PageServer/GetPageData?video_appid=3000010&vplatform=2&vversion_name=8.2.96', {\\n        body: {\\n            \\\"page_params\\\": {\\n                \\\"req_from\\\": \\\"web_vsite\\\",\\n                \\\"page_id\\\": \\\"vsite_episode_list\\\",\\n                \\\"page_type\\\": \\\"detail_operation\\\",\\n                \\\"id_type\\\": \\\"1\\\",\\n                \\\"page_size\\\": \\\"\\\",\\n                \\\"cid\\\": cid,\\n                \\\"vid\\\": \\\"\\\",\\n                \\\"lid\\\": \\\"\\\",\\n                \\\"page_num\\\": \\\"\\\",\\n                \\\"page_context\\\": pageContext,\\n                \\\"detail_page_type\\\": \\\"1\\\"\\n            },\\n            \\\"has_cache\\\": 1\\n        },\\n        headers: {\\n            'Referer': 'https://v.qq.com/'\\n        }\\n    })).data.module_list_datas[0].module_datas[0];\\n    episodeInfoList = data.item_data_lists.item_datas.filter((it) => it.item_type === \\\"1\\\");\\n    正片列表 = episodeInfoList.filter((it) => it.item_params.is_trailer !== \\\"1\\\");\\n}\\nsetResult(正片列表[正片列表.length - 1].item_params.play_title);\"}]","proxy":"","icon":"https://files.codelife.cc/website/qqvideo.svg"}
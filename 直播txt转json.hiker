{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"hikerPop","path":"hikerPop","rule":"// author@LoyDgIk\n// 该插件仅供娱乐，是作者学习研究代码的副产物，插件可能纯在一些漏洞与不合理的设计，请谨慎用于实际项目。\n// 已知问题，用弹窗播放视频链接，不会有播放记录。进入子页面有历史记录，但没有足迹。\n//引入Java类\nconst XPopup = com.lxj.xpopup.XPopup;\nconst XPopupCallback = com.lxj.xpopup.interfaces.XPopupCallback;\nconst DetailUIHelper = com.example.hikerview.ui.detail.DetailUIHelper;\nconst DisplayUtil = com.example.hikerview.utils.DisplayUtil;\nconst ActivityManager = com.example.hikerview.ui.ActivityManager;\nconst R = com.example.hikerview.R;\nconst Integer = java.lang.Integer;\nconst ArrayList = java.util.ArrayList;\nconst Runnable = java.lang.Runnable;\nconst Bookmark = com.example.hikerview.model.Bookmark;\n\nlet BookmarkFolderPopup = com.example.hikerview.ui.home.view.BookmarkFolderPopup;\n\nconst InputPopup = com.example.hikerview.ui.view.popup.InputPopup\nconst ConfirmPopup = com.example.hikerview.ui.view.popup.ConfirmPopup;\n\nconst SettingMenuPopup = com.example.hikerview.ui.setting.SettingMenuPopup;\nconst OfficeItem = com.example.hikerview.ui.setting.office.OfficeItem;\nconst CustomBottomRecyclerViewPopup = com.example.hikerview.ui.view.CustomBottomRecyclerViewPopup;\nconst CustomCenterRecyclerViewPopup = com.example.hikerview.ui.view.CustomCenterRecyclerViewPopup;\nconst CustomRecyclerViewPopup = com.example.hikerview.ui.view.CustomRecyclerViewPopup;\nconst FileDetailPopup = com.example.hikerview.ui.setting.file.FileDetailPopup;\nconst CustomCopyPopup = com.example.hikerview.ui.view.CustomCopyPopup;\nconst CustomColorPopup = com.example.hikerview.ui.view.CustomColorPopup;\nconst Class = java.lang.Class;\nconst AutoImportHelper = com.example.hikerview.utils.AutoImportHelper;\nconst PageParser = com.example.hikerview.service.parser.PageParser;\n\nconst UrlDetector = com.example.hikerview.ui.browser.model.UrlDetector;\nconst PlayerChooser = com.example.hikerview.ui.video.PlayerChooser;\nconst VideoChapter = com.example.hikerview.ui.video.VideoChapter;\nconst FJSON = com.alibaba.fastjson.JSON;\n\nconst ToastMgr = com.example.hikerview.utils.ToastMgr;\nconst ChefSnackbar = com.example.hikerview.ui.view.toast.ChefSnackbar;\nconst ThreadTool = com.example.hikerview.utils.ThreadTool;\nconst AlertDialog = Packages.androidx.appcompat.app.AlertDialog;\nconst DialogUtil = com.example.hikerview.utils.view.DialogUtil;\nconst HeavyTaskUtil = com.example.hikerview.utils.HeavyTaskUtil;\n\nconst BiometricManager = Packages.androidx.biometric.BiometricManager;\nconst BiometricPrompt = Packages.androidx.biometric.BiometricPrompt;\nconst ContextCompat = Packages.androidx.core.content.ContextCompat;\nconst Build = android.os.Build;\nlet JSContext = org.mozilla.javascript.Context;\nlet JSContextVer = JSContext.getCurrentContext().getLanguageVersion();\n\nif (typeof MY_RULE === \"undefined\") {\n\tMY_RULE = null;\n}\nif (Build.VERSION.SDK_INT < Build.VERSION_CODES.O) {\n\tthrow Error(\"hikerPop只能在android8.0及以上运行\");\n}\n//适配嗅觉浏览器\nlet cannotTouchUI = false;\nif (typeof MY_NAME !== \"undefined\" && MY_NAME === \"嗅觉浏览器\") {\n\tcannotTouchUI = true;\n\tBookmarkFolderPopup = com.example.hikerview.ui.bookmark.BookmarkFolderPopup;\n}\n\nfunction getContext() {\n\treturn typeof getCurrentActivity === \"function\" ? getCurrentActivity() : ActivityManager.getInstance().getCurrentActivity();\n}\n//获取上下文\nconst startActivity = getContext();\n\nlet useStartActivity = true;\n\nfunction getArticleListFragment(activity) {\n\t//let activity = getCurrentActivity();\t\n\ttry {\n\t\tif (activity instanceof com.example.hikerview.ui.home.MainActivity) {\n\t\t\tlet MainActivity = activity.getClass();\n\t\t\tlet field = MainActivity.getDeclaredField(\"viewPagerAdapter\");\n\t\t\tfield.setAccessible(true);\n\t\t\tlet viewPagerAdapter = field.get(activity);\n\t\t\tlet articleListFragment = viewPagerAdapter.getClass().getMethod(\"getCurrentFragment\").invoke(viewPagerAdapter);\n\t\t\treturn articleListFragment || null;\n\t\t} else if (activity instanceof com.example.hikerview.ui.home.FilmListActivity) {\n\t\t\tlet FilmListActivity = activity.getClass();\n\t\t\tlet field = FilmListActivity.getDeclaredField(\"articleListFragment\");\n\t\t\tfield.setAccessible(true);\n\t\t\tlet articleListFragment = field.get(activity);\n\t\t\treturn articleListFragment;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t} catch (e) {\n\t\treturn null;\n\t}\n}\nconst currentArticleListFragment = getArticleListFragment(startActivity);\n\nfunction clickItem(af, position, url) {\n\tlet click = af.getClass().getDeclaredMethod(\"clickItem\", android.view.View, java.lang.Integer.TYPE, java.lang.String, java.lang.Boolean.TYPE, java.lang.String);\n\tclick.setAccessible(true);\n\tclick.invoke(af, null, java.lang.Integer.valueOf(position), url, true, \"\");\n}\n\n\nfunction getActivityContext() {\n\treturn useStartActivity ? startActivity : getContext();\n}\n\nfunction setUseStartActivity(bool) {\n\tuseStartActivity = !!bool;\n\treturn this;\n}\n\nfunction newSimpleCallback({\n\tbeforeDismiss,\n\tbeforeShow,\n\tonBackPressed,\n\tonCreated,\n\tonDismiss,\n\tonDrag,\n\tonKeyBoardStateChanged,\n\tonShow\n}) {\n\treturn new XPopupCallback({\n\t\tbeforeDismiss(basePopupView) {\n\t\t\ttryCallBack(beforeDismiss, [basePopupView], true);\n\t\t},\n\t\tbeforeShow(basePopupView) {\n\t\t\ttryCallBack(beforeShow, [basePopupView], true);\n\t\t},\n\t\tonBackPressed(basePopupView) {\n\t\t\tif (typeof onBackPressed === \"function\") {\n\t\t\t\treturn !!tryCallBack(onBackPressed, [basePopupView], true);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tonCreated(basePopupView) {\n\t\t\ttryCallBack(onCreated, [basePopupView], true);\n\t\t},\n\t\tonDismiss(basePopupView) {\n\t\t\ttryCallBack(onDismiss, [basePopupView], true);\n\t\t},\n\t\tonDrag(basePopupView, value, percent, upOrLeft) {\n\t\t\ttryCallBack(onDrag, [basePopupView, value, percent, upOrLeft], true);\n\t\t},\n\t\tonKeyBoardStateChanged(basePopupView, height) {\n\t\t\ttryCallBack(onKeyBoardStateChanged, [basePopupView, height], true);\n\t\t},\n\t\tonShow(basePopupView) {\n\t\t\ttryCallBack(onKeyBoardStateChanged, [basePopupView], true);\n\t\t}\n\t});\n}\n\nfunction getVideoChapter(playList) {\n\tlet videoChapterClass = new VideoChapter().getClass();\n\treturn FJSON.parseArray(JSON.stringify(playList), videoChapterClass);\n}\n\nfunction playVideos(playList, pos) {\n\tif (!Array.isArray(playList)) {\n\t\tif ($.type(playList) === \"object\") {\n\t\t\tplayList = [playList];\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tlet videoChapter = getVideoChapter(playList);\n\tif (pos !== void 0 && pos >= 0 && pos < videoChapter.size()) {\n\t\tvideoChapter.get(pos).setUse(true);\n\t}\n\tPlayerChooser.startPlayer(getActivityContext(), videoChapter);\n\treturn true;\n}\n\nfunction toNextPage(url) {\n\ttry {\n\t\tlet rule = getParam(\"rule\", \"\", url);\n\t\tif (!rule && MY_RULE) {\n\t\t\turl = buildUrl(url, {\n\t\t\t\trule: MY_RULE.title\n\t\t\t});\n\t\t}\n\t\tif (Object.keys(AutoImportHelper).includes(\"lambda$couldCloudImport$2\")) {\n\t\t\tAutoImportHelper.lambda$couldCloudImport$2(url);\n\t\t} else {\n\t\t\tlet autoImportHelperClass = new AutoImportHelper().getClass();\n\t\t\tlet couldCloudImportMethod = autoImportHelperClass.getDeclaredMethod(\"lambda$couldCloudImport$2\", Class.forName(\"java.lang.String\"));\n\t\t\tcouldCloudImportMethod.setAccessible(true);\n\t\t\tcouldCloudImportMethod.invoke(null, url);\n\t\t}\n\t} catch (e) {\n\t\ttoast(e.toString());\n\t}\n}\n\nfunction toPalyPage(url, title) {\n\ttry {\n\t\tPlayerChooser.startPlayer(getActivityContext(), title || url, url);\n\t} catch (e) {\n\t\ttoast(e.toString());\n\t}\n}\n\nfunction throwError(e) {\n\tlet message = \"\",\n\t\tlineNumber = -1;\n\tif (e instanceof Error) {\n\t\tmessage = e.message;\n\t\tlineNumber = e.lineNumber;\n\t} else {\n\t\tmessage = String(e);\n\t}\n\tlog(message);\n\tsetError(\"\\n行数：\" + lineNumber + \"\\n详情：\" + message);\n}\n\nfunction tryNewCallBack(callBack, args, noDeal) {\n\tHeavyTaskUtil.executeNewTask(new Runnable({\n\t\trun() {\n\t\t\ttry {\n\t\t\t\tcheckJsVer();\n\t\t\t\tif (callBack == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\targs = args || [];\n\t\t\t\tlet res = callBack.apply(null, args);\n\t\t\t\tif (noDeal) return;\n\t\t\t\tdealUrlSimply(res, args[0]);\n\t\t\t} catch (e) {\n\t\t\t\tthrowError(e);\n\t\t\t}\n\t\t}\n\t}));\n}\n\nfunction runOnNewThread(func) {\n\ttryNewCallBack(func);\n}\n\nfunction tryCallBack(callBack, args, noDeal) {\n\ttry {\n\t\tcheckJsVer();\n\t\tif (callBack == null) {\n\t\t\treturn;\n\t\t}\n\t\targs = args || [];\n\t\tlet res = callBack.apply(null, args);\n\t\t//log(res)\n\t\tif (noDeal) return res;\n\n\t\tdealUrlSimply(res, args[0]);\n\t} catch (e) {\n\t\tthrowError(e);\n\t}\n}\n\nfunction dealUrlSimply(url, title) {\n\tif (typeof url !== \"string\" || !url) return;\n\tif (currentArticleListFragment && typeof MY_POSITION !== \"undefined\" && MY_POSITION > -1) {\n\t\tclickItem(currentArticleListFragment, MY_POSITION, url);\n\t} else {\n\t\tif (PageParser.isPageUrl(url)) {\n\t\t\treturn toNextPage(url);\n\t\t} else if (!DetailUIHelper.dealUrlSimply(getActivityContext(), null, MY_RULE, null, url || \"\", null, null) && UrlDetector.isVideoOrMusic(url)) {\n\t\t\treturn toPalyPage(url, typeof title === \"string\" ? title : url);\n\t\t}\n\t}\n}\n\nfunction checkJsVer() {\n\tlet cx = JSContext.getCurrentContext();\n\tif (!cx.getLanguageVersion()) {\n\t\ttry {\n\n\t\t} catch (e) {\n\t\t\tlog(e.toString())\n\t\t}\n\t\tcx.setLanguageVersion(JSContextVer);\n\t}\n}\n\nfunction getDefaultValue(v, type, defaultValue) {\n\tif ($.type(v) !== type) return defaultValue;\n\treturn v || defaultValue;\n}\n\nfunction getNumberValue(v, func, defaultValue) {\n\tif (!($.type(v) === \"number\" || func(v))) return defaultValue;\n\treturn v;\n}\n\nfunction getStringArray(arr, defaultValue) {\n\tif ($.type(arr) !== \"array\") return defaultValue;\n\treturn arr.map(v => String(v));\n}\n\nfunction checkStringArray(arr) {\n\tarr.forEach((v, i) => arr[i] = String(v));\n}\n\nfunction getNumberArray(arr, defaultValue) {\n\tif ($.type(arr) !== \"array\") return defaultValue;\n\treturn arr.map(v => Number(v) || 0);\n}\n\nfunction getBookList(arr) {\n\tlet list = new ArrayList();\n\tfor (let it of arr) {\n\t\tlet bookmark = new Bookmark();\n\t\tbookmark.setTitle(it.title || \"\");\n\t\tbookmark.setDir(false);\n\t\tbookmark.setUrl(it.url || it.title || \"\");\n\t\tbookmark.setIcon(it.icon || \"\");\n\t\tlist.add(bookmark);\n\t}\n\treturn list;\n}\n\nfunction builderXPopup(context) {\n\treturn new XPopup.Builder(context || getActivityContext())\n\t\t.borderRadius(DisplayUtil.dpToPx(getActivityContext(), 16));\n}\n\nfunction dpToPx(dp) {\n\treturn DisplayUtil.dpToPx(getActivityContext(), dp);\n}\n\nfunction runOnUI(func) {\n\tThreadTool.INSTANCE.runOnUI(new Runnable({\n\t\trun() {\n\t\t\tcheckJsVer();\n\t\t\ttry {\n\t\t\t\tfunc();\n\t\t\t} catch (e) {\n\t\t\t\tthrowError(e);\n\t\t\t}\n\t\t}\n\t}));\n}\nconst showOnUI = cannotTouchUI ? pop => runOnUI(() => pop.show()) : pop => pop.show();\n\nfunction updateRecordsBottom(records) {\n\tconst DefaultItemAnimator = Packages.androidx.recyclerview.widget.DefaultItemAnimator;\n\tconst MyStatusBarUtil = com.example.hikerview.utils.MyStatusBarUtil;\n\tconst UpdateRecordsAdapter = com.example.hikerview.ui.setting.updaterecords.UpdateRecordsAdapter;\n\tconst GridLayoutManager = Packages.androidx.recyclerview.widget.GridLayoutManager;\n\tconst RecordDetail = com.example.hikerview.ui.setting.updaterecords.RecordDetail;\n\n\tlet myRecordDetail = new JavaAdapter(com.lxj.xpopup.core.BottomPopupView, {\n\t\trules: [],\n\t\tgetImplLayoutId() {\n\t\t\treturn R.layout.activit_ad_list;\n\t\t},\n\t\tonCreate() {\n\t\t\tthis.super$onCreate();\n\t\t\tlet recyclerView = this.findViewById(R.id.ad_list_recycler_view);\n\t\t\tthis.recyclerView = recyclerView;\n\t\t\trecyclerView.setItemAnimator(new DefaultItemAnimator());\n\t\t\tthis.findViewById(R.id.ad_list_title_text).setText(\"更新日志\");\n\t\t\tlet button = this.findViewById(R.id.ad_list_add);\n\t\t\tbutton.setText(\"知道啦\");\n\t\t\tbutton.setOnClickListener(() => {\n\t\t\t\tthis.dismiss();\n\t\t\t});\n\t\t\tlet statusBarHeight = MyStatusBarUtil.getStatusBarHeight(getActivityContext()) + DisplayUtil.dpToPx(getActivityContext(), 86);\n\t\t\tlet findView2 = this.findViewById(R.id.ad_list_bg);\n\t\t\t//this.findView(0x7f0a007c).setOnClickListener(new -$.Lambda.UpdateRecordsActivity.RJCabNcRtjM6-f9zjjTJnyOIczg(this));\n\t\t\tlet layoutParams = findView2.getLayoutParams();\n\t\t\tlayoutParams.topMargin = statusBarHeight;\n\t\t\tfindView2.setLayoutParams(layoutParams);\n\n\t\t\tthis.adapter = new UpdateRecordsAdapter(getActivityContext(), this.rules);\n\t\t\tthis.recyclerView.setLayoutManager(new GridLayoutManager(getActivityContext(), 1));\n\t\t\tthis.recyclerView.setAdapter(this.adapter);\n\t\t\ttry {\n\t\t\t\tfor (let it of records) {\n\t\t\t\t\tlet recordDetail = new RecordDetail();\n\t\t\t\t\trecordDetail.setType(1);\n\t\t\t\t\trecordDetail.setDetail(String(it.title || \"\"));\n\t\t\t\t\tthis.rules.push(recordDetail);\n\t\t\t\t\tfor (let item of (it.records || [])) {\n\t\t\t\t\t\tlet recordDetail2 = new RecordDetail();\n\t\t\t\t\t\trecordDetail2.setType(2);\n\t\t\t\t\t\trecordDetail2.setDetail(String(item || \"\"));\n\t\t\t\t\t\tthis.rules.push(recordDetail2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tlog(e.toString());\n\t\t\t\tsetError(e);\n\t\t\t}\n\n\t\t}\n\t}, getActivityContext());\n\n\tlet pop = new builderXPopup().asCustom(myRecordDetail);\n\tshowOnUI(pop);\n\treturn pop;\n}\n\nfunction findRecyclerView(viewGroup) {\n\tfor (let i = 0; i < viewGroup.getChildCount(); i++) {\n\t\tlet child = viewGroup.getChildAt(i);\n\t\tlet name = child.getClass().getSimpleName();\n\n\t\tif (name == \"RecyclerView\") {\n\t\t\treturn child;\n\t\t}\n\t\tif (child instanceof android.view.ViewGroup) {\n\t\t\tlet res;\n\t\t\tif ((res = findRecyclerView(child))) {\n\t\t\t\treturn res;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nfunction selectAttachList(id, {\n\tclick,\n\toptions,\n}) {\n\tif (typeof id !== \"string\" || !id) return null;\n\toptions = getStringArray(options, []);\n\tlet context = getActivityContext();\n\tlet recyclerView = findRecyclerView(context.findViewById(android.R.id.content));\n\t//log(recyclerView===null);\n\tif (recyclerView == null) return null;\n\tlet list = recyclerView.getAdapter().getList();\n\tlet i = 0;\n\tlet ii = -1\n\tfor (let it of list) {\n\t\tif (id == it.getBaseExtra().getId()) {\n\t\t\tii = i;\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\tif (ii < 0) return null;\n\tlet mg = recyclerView.getLayoutManager();\n\n\tlet pop = builderXPopup(getContext())\n\t\t.atView(mg.getChildAt(ii))\n\t\t.asAttachList(options, null, (position, text) => {\n\t\t\ttryCallBack(getDefaultValue(click, \"function\", null), [text, position]);\n\t\t});\n\tshowOnUI(pop);\n\treturn pop;\n}\n\nfunction loading(title) {\n\tlet pop = builderXPopup()\n\t\t.asLoading(getDefaultValue(title, \"string\", null), 0);\n\tshowOnUI(pop);\n\treturn pop;\n}\n\nfunction selectCenterMark({\n\tclick,\n\ttitle,\n\toptions,\n\ticons,\n\tnoAutoDismiss,\n\tposition\n}) {\n\toptions = getStringArray(options, []);\n\ticons = getNumberArray(icons, null);\n\tlet pop = builderXPopup()\n\t\t.autoDismiss(!noAutoDismiss)\n\t\t.asCenterList(getDefaultValue(title, \"string\", null), options, icons, getNumberValue(position, v => v % 1 === 0 && v < options.length && v >= -1, -1), (index, value) => {\n\t\t\ttryCallBack(getDefaultValue(click, \"function\", null), [value, index]);\n\t\t});\n\tshowOnUI(pop);\n\treturn pop;\n}\n\nfunction selectBottomMark({\n\tclick,\n\ttitle,\n\toptions,\n\ticons,\n\tnoAutoDismiss,\n\tposition\n}) {\n\toptions = getStringArray(options, []);\n\ticons = getNumberArray(icons, null);\n\tlet pop = builderXPopup()\n\t\t.moveUpToKeyboard(false)\n\t\t.autoDismiss(!noAutoDismiss)\n\t\t.asBottomList(getDefaultValue(title, \"string\", null), options, icons, getNumberValue(position, v => v % 1 === 0 && v < options.length && v >= -1, -1), (index, value) => {\n\t\t\ttryCallBack(getDefaultValue(click, \"function\", null), [value, index]);\n\t\t});\n\tshowOnUI(pop);\n\treturn pop;\n}\n\nfunction selectCenter({\n\tclick,\n\tlongClick,\n\ttitle,\n\toptions,\n\tcolumns,\n\tposition\n}) {\n\tlet clickListener = new CustomCenterRecyclerViewPopup.ClickListener({\n\t\tonLongClick(value, index) {\n\t\t\ttryCallBack(getDefaultValue(longClick, \"function\", null), [value, index]);\n\t\t},\n\t\tclick(value, index) {\n\t\t\ttryCallBack(getDefaultValue(click, \"function\", null), [value, index]);\n\t\t}\n\t});\n\toptions = getStringArray(options, []);\n\tlet custom = new CustomCenterRecyclerViewPopup(getActivityContext())\n\t\t.withTitle(getDefaultValue(title, \"string\", \"请选择\"))\n\t\t.with(options, getDefaultValue(columns, \"number\", 3), clickListener);\n\tif (position !== void 0) {\n\t\tcustom.withSelectedIndex(getNumberValue(position, v => v < options.length && v >= -1, -1));\n\t}\n\tlet pop = builderXPopup()\n\t\t.asCustom(custom);\n\tshowOnUI(pop);\n\treturn pop;\n}\n\nfunction selectBottom({\n\tclick,\n\tlongClick,\n\ttitle,\n\toptions,\n\tcolumns,\n\theight,\n\tnoAutoDismiss,\n}) {\n\tlet clickListener = new CustomRecyclerViewPopup.ClickListener({\n\t\tonLongClick(value, index) {\n\t\t\ttryCallBack(getDefaultValue(longClick, \"function\", null), [value, index]);\n\t\t},\n\t\tclick(value, index) {\n\t\t\ttryCallBack(getDefaultValue(click, \"function\", null), [value, index]);\n\t\t}\n\t});\n\toptions = getStringArray(options, []);\n\tlet custom = new CustomRecyclerViewPopup(getActivityContext())\n\t\t.withTitle(getDefaultValue(title, \"string\", \"请选择\"))\n\t\t.height(getNumberValue(height, v => v <= 1 && v > 0, 0.75))\n\t\t.dismissAfterClick(!noAutoDismiss).with(options, getDefaultValue(columns, \"number\", 3), clickListener);\n\tlet pop = builderXPopup()\n\t\t.moveUpToKeyboard(false)\n\t\t.asCustom(custom);\n\tshowOnUI(pop);\n\treturn pop;\n}\n\nfunction IconExtraMenu(click) {\n\tthis.create = function(parentView, args) {\n\t\tconst Gravity = android.view.Gravity;\n\t\tconst ImageView = android.widget.ImageView;\n\t\tconst LinearLayout = android.widget.LinearLayout;\n\n\t\tlet menuIcon = new ImageView(getActivityContext());\n\t\tlet menuIconLayoutParams = new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, 65);\n\t\tmenuIconLayoutParams.gravity = Gravity.CENTER_VERTICAL;\n\t\tmenuIconLayoutParams.setMargins(0, 0, 10, 0);\n\t\tmenuIcon.setLayoutParams(menuIconLayoutParams);\n\t\tmenuIcon.setId(R.id.menu_icon);\n\t\tmenuIcon.setPadding(4, 4, 4, 4);\n\t\t//menuIcon.setVisibility(android.view.View.GONE);\n\t\tmenuIcon.setImageResource(R.drawable.home_left_menu);\n\t\tif (typeof click === \"function\") {\n\t\t\tmenuIcon.setOnClickListener(new android.view.View.OnClickListener({\n\t\t\t\tonClick() {\n\t\t\t\t\ttryCallBack(click, args);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\treturn menuIcon;\n\t}\n}\n\nfunction selectCenterIcon({\n\tclick,\n\ttitle,\n\ticonList,\n\tcolumns,\n\tposition,\n\textraMenu\n}) {\n\tlet clickListener = new BookmarkFolderPopup.ClickListener({\n\t\tonLongClick(value, index) {},\n\t\tclick(value, index) {\n\t\t\ttryCallBack(getDefaultValue(click, \"function\", null), [value, index]);\n\t\t}\n\t});\n\ticonList = getDefaultValue(iconList, \"array\", []);\n\ticonList = getBookList(iconList);\n\n\tlet custom = new BookmarkFolderPopup(getActivityContext())\n\t\t.withTitle(getDefaultValue(title, \"string\", \"请选择\"))\n\t\t.with(iconList, getDefaultValue(columns, \"number\", 2), clickListener);\n\tif (position !== void 0) {\n\t\tcustom.withSelectedIndex(getNumberValue(position, v => v < iconList.size() && v >= -1, -1));\n\t}\n\tXPopup.setAnimationDuration(200);\n\tlet pop = builderXPopup();\n\tif (extraMenu instanceof IconExtraMenu) {\n\t\tpop.setPopupCallback(newSimpleCallback({\n\t\t\tonCreated(basePopupView) {\n\t\t\t\tlet linearLayout = basePopupView.getChildAt(0).getChildAt(0).getChildAt(0);\n\t\t\t\ttry {\n\t\t\t\t\tif (linearLayout) {\n\t\t\t\t\t\tconst LinearLayout = android.widget.LinearLayout;\n\t\t\t\t\t\tlet item = extraMenu.create(linearLayout, []);\n\t\t\t\t\t\tlinearLayout.addView(item);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tlog(e.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}))\n\t}\n\tpop = pop.asCustom(custom);\n\tshowOnUI(pop);\n\treturn pop;\n}\n\nfunction inputTwoRow({\n\ttitle,\n\ttitleHint,\n\turlHint,\n\ttitleDefault,\n\turlDefault,\n\tconfirm,\n\tcancel,\n\thideCancel,\n\tnoAutoSoft\n}) {\n\tlet okListener = new InputPopup.OkListener({\n\t\tok(text1, text2) {\n\t\t\ttryCallBack(getDefaultValue(confirm, \"function\", null), [text1, text2]);\n\t\t}\n\t});\n\tlet cancelListener = new InputPopup.CancelListener({\n\t\tcancel() {\n\t\t\ttryCallBack(getDefaultValue(cancel, \"function\", null));\n\t\t}\n\t});\n\tlet custom = new InputPopup(getActivityContext())\n\t\t.bind(\n\t\t\tgetDefaultValue(title, \"string\", \"输入框\"),\n\t\t\tgetDefaultValue(titleHint, \"string\", null),\n\t\t\tgetDefaultValue(titleDefault, \"string\", null),\n\t\t\tgetDefaultValue(urlHint, \"string\", null),\n\t\t\tgetDefaultValue(urlDefault, \"string\", null),\n\t\t\tokListener\n\t\t)\n\t\t.setCancelListener(cancelListener);\n\tlet pop = builderXPopup()\n\t\t.autoOpenSoftInput(!noAutoSoft)\n\t\t.autoFocusEditText(!noAutoSoft);\n\tif (hideCancel) {\n\t\tpop.setPopupCallback(newSimpleCallback({\n\t\t\tonCreated(basePopupView) {\n\t\t\t\tlet cancelTextView = basePopupView.findViewById(R.id.tv_cancel);\n\t\t\t\tif (cancelTextView) {\n\t\t\t\t\tcancelTextView.setVisibility(8);\n\t\t\t\t}\n\t\t\t\tlet dividerView = basePopupView.findViewById(R.id.xpopup_divider_h);\n\t\t\t\tif (dividerView) {\n\t\t\t\t\tdividerView.setVisibility(8);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\tpop = pop\n\t\t.asCustom(custom);\n\tshowOnUI(pop);\n\treturn pop;\n}\n\nfunction inputAutoRow({\n\ttitle,\n\thint,\n\tconfirm,\n\tcancel,\n\tokTitle,\n\tcancelTitle,\n\tdefaultValue,\n\thideCancel,\n\tnoAutoSoft\n}) {\n\tlet okListener = new ConfirmPopup.OkListener({\n\t\tok(text) {\n\t\t\ttryCallBack(getDefaultValue(confirm, \"function\", null), [text]);\n\t\t},\n\t\tcancel() {\n\t\t\ttryCallBack(getDefaultValue(cancel, \"function\", null));\n\t\t}\n\t});\n\tlet custom = new ConfirmPopup(getActivityContext()).bind(getDefaultValue(title, \"string\", \"输入框\"), getDefaultValue(hint, \"string\", \"\"), okListener)\n\t\t.setBtn(getDefaultValue(okTitle, \"string\", \"确认\"), getDefaultValue(cancelTitle, \"string\", \"取消\"));\n\tlet pop = builderXPopup()\n\t\t.autoOpenSoftInput(!noAutoSoft)\n\t\t.autoFocusEditText(!noAutoSoft);\n\n\tpop.setPopupCallback(newSimpleCallback({\n\t\tonCreated(basePopupView) {\n\t\t\tdefaultValue = getDefaultValue(defaultValue, \"string\", null);\n\t\t\tif (defaultValue) {\n\t\t\t\tlet titleEdit = basePopupView.findViewById(R.id.edit_title);\n\t\t\t\tif (titleEdit) {\n\t\t\t\t\ttitleEdit.setText(defaultValue);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (hideCancel) {\n\t\t\t\tlet cancelTextView = basePopupView.findViewById(R.id.tv_cancel);\n\t\t\t\tif (cancelTextView) {\n\t\t\t\t\tcancelTextView.setVisibility(8);\n\t\t\t\t}\n\t\t\t\tlet dividerView = basePopupView.findViewById(R.id.xpopup_divider_h);\n\t\t\t\tif (dividerView) {\n\t\t\t\t\tdividerView.setVisibility(8);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}));\n\n\tpop = pop\n\t\t.asCustom(custom);\n\tshowOnUI(pop);\n\treturn pop;\n}\n\nfunction inputConfirm({\n\ttitle,\n\tcontent,\n\tdefaultValue,\n\thint,\n\tconfirm,\n\tcancel,\n\ttextarea,\n\tmaxTextarea,\n\thideCancel,\n\tnoAutoSoft\n}) {\n\tlet pop = builderXPopup()\n\t\t.autoOpenSoftInput(!noAutoSoft)\n\t\t.autoFocusEditText(!noAutoSoft);\n\tif (hideCancel) {\n\t\tpop.setPopupCallback(newSimpleCallback({\n\t\t\tonCreated(basePopupView) {\n\t\t\t\tlet cancelTextView = basePopupView.findViewById(R.id.tv_cancel);\n\t\t\t\tif (cancelTextView) {\n\t\t\t\t\tcancelTextView.setVisibility(8);\n\t\t\t\t}\n\t\t\t\tlet dividerView = basePopupView.findViewById(R.id.xpopup_divider2);\n\t\t\t\tif (dividerView) {\n\t\t\t\t\tdividerView.setVisibility(8);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\tpop = pop.asInputConfirm(getDefaultValue(title, \"string\", null), getDefaultValue(content, \"string\", null), getDefaultValue(defaultValue, \"string\", null), getDefaultValue(hint, \"string\", null), (text) => {\n\t\ttryCallBack(getDefaultValue(confirm, \"function\", null), [text]);\n\t}, (text) => {\n\t\ttryCallBack(getDefaultValue(cancel, \"function\", null), [text]);\n\t}, maxTextarea ? R.layout.xpopup_confirm_input_max : (textarea ? R.layout.xpopup_confirm_input : 0));\n\tshowOnUI(pop);\n\treturn pop;\n}\n\nfunction confirm({\n\ttitle,\n\tcontent,\n\tconfirm,\n\tcancel,\n\tokTitle,\n\tcancelTitle,\n\thideCancel\n}) {\n\tlet pop = builderXPopup()\n\t\t.asConfirm(getDefaultValue(title, \"string\", null), getDefaultValue(content, \"string\", \"\"), getDefaultValue(cancelTitle, \"string\", \"取消\"), getDefaultValue(okTitle, \"string\", \"确认\"), () => {\n\t\t\ttryCallBack(getDefaultValue(confirm, \"function\", null));\n\t\t}, () => {\n\t\t\ttryCallBack(getDefaultValue(cancel, \"function\", null));\n\t\t}, !!hideCancel);\n\tshowOnUI(pop);\n\treturn pop;\n}\n\nfunction SettingItem(...arr) {\n\tif (arr.length === 0) return new OfficeItem(\"\");\n\telse if (arr.length === 1) return new OfficeItem(String(arr[0]));\n\telse if (arr.length === 2 && typeof arr[1] === \"boolean\") return new OfficeItem(String(arr[0]), arr[1] ? 1 : -1);\n\telse if (arr.length === 2) return new OfficeItem(String(arr[0]), String(arr[1]));\n\telse if (arr.length === 3) return new OfficeItem(String(arr[0]), arr[1] ? 1 : -1, String(arr[2]));\n}\n\nfunction selectBottomSettingMenu({\n\tclick,\n\toptions,\n\tonDismiss\n}) {\n\tlet onItemClickListener = new SettingMenuPopup.OnItemClickListener({\n\t\tonClick(str, officeItem, consumer) {\n\t\t\ttryCallBack(getDefaultValue(click, \"function\", null), [str, officeItem, () => consumer.accept(officeItem)]);\n\t\t}\n\t});\n\toptions = options.filter(v => v instanceof OfficeItem);\n\tlet arrayList = new ArrayList();\n\toptions.forEach(v => arrayList.add(v));\n\n\tlet custom = new SettingMenuPopup(getActivityContext(), \"设置\", arrayList, null, onItemClickListener);\n\tlet pop = builderXPopup()\n\t\t.moveUpToKeyboard(false)\n\t\t.setPopupCallback(newSimpleCallback({\n\t\t\tonDismiss() {\n\t\t\t\ttryCallBack(onDismiss);\n\t\t\t}\n\t\t}))\n\t\t.asCustom(custom);\n\tshowOnUI(pop);\n\treturn pop;\n}\n \nselectBottomSettingMenu.SettingItem = SettingItem;\n\n\nfunction ResExtraInputBox({\n\thint,\n\tclick,\n\ttitle,\n\tonChange,\n\tdefaultValue,\n\ttitleVisible\n}) {\n\tlet search;\n\tlet edit;\n\tthis.create = function(parentView, args) {\n\t\targs = Array.isArray(args) ? args : [];\n\t\tlet inputItem = android.view.LayoutInflater.from(getActivityContext()).inflate(R.layout.item_input, parentView, false);\n\t\tsearch = inputItem.findViewById(R.id.search);\n\t\tedit = inputItem.findViewById(R.id.edit);\n\t\tlet clearBtn = inputItem.findViewById(R.id.clearBtn);\n\t\tlet divider = inputItem.findViewById(R.id.divider);\n\t\tlet pop_input_edit_bg = inputItem.findViewById(R.id.pop_input_edit_bg);\n\t\tlet search_suggest = inputItem.findViewById(R.id.search_suggest);\n\t\tif (typeof title === \"string\" && title) {\n\t\t\tsearch.setText(title);\n\t\t} else {\n\t\t\tsearch.setText(\"确定\");\n\t\t}\n\t\tif (typeof titleVisible === \"boolean\" && !titleVisible) {\n\t\t\tsearch.setText(\"\");\n\t\t\tsearch.setPadding(0, 0, 0, 0);\n\t\t\tsearch.setVisibility(4);\n\t\t\tdivider.setVisibility(4);\n\t\t}\n\t\tif (typeof click === \"function\") {\n\t\t\tsearch.setOnClickListener(new android.view.View.OnClickListener({\n\t\t\t\tonClick() {\n\t\t\t\t\ttryCallBack(click, [String(edit.getText())].concat(args));\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tif (typeof hint === \"string\" && hint) {\n\t\t\tedit.setHint(hint);\n\t\t}\n\n\t\tif (typeof onChange === \"function\") {\n\t\t\tedit.addTextChangedListener(new android.text.TextWatcher({\n\t\t\t\tonTextChanged() {},\n\t\t\t\tbeforeTextChanged() {},\n\t\t\t\tafterTextChanged(s) {\n\t\t\t\t\tlet text;\n\t\t\t\t\tif (s) {\n\t\t\t\t\t\ttext = String(s.toString());\n\t\t\t\t\t\ttryCallBack(onChange, [text].concat(args), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t\tif (typeof defaultValue === \"string\") {\n\t\t\tedit.setText(defaultValue);\n\t\t\tlet len = defaultValue.length;\n\t\t\tedit.setSelection(len, len);\n\t\t}\n\t\treturn inputItem;\n\t}\n\tthis.setTitle = (title) => {\n\t\tif (search && typeof title === \"string\") {\n\t\t\tsearch.setText(title);\n\t\t}\n\t}\n\tthis.setDefaultValue = (defaultValue) => {\n\t\tif (edit && typeof defaultValue === \"string\") {\n\t\t\tedit.setText(defaultValue);\n\t\t\tlet len = defaultValue.length;\n\t\t\tedit.setSelection(len, len);\n\t\t}\n\t}\n\tthis.setHint = (hint) => {\n\t\tif (edit && typeof hint === \"string\" && hint) {\n\t\t\tedit.setHint(hint);\n\t\t}\n\t}\n}\n\nfunction selectBottomResIcon({\n\tclick,\n\tmenuClick,\n\ttitle,\n\ticonList,\n\tcolumns,\n\theight,\n\tnoAutoDismiss,\n\textraInputBox,\n\tposition,\n\ttoPosition,\n\tbeforeShow\n}) {\n\tlet clickListener = new CustomCenterRecyclerViewPopup.ClickListener({\n\t\tonLongClick(value, index) {},\n\t\tclick(value, index) {}\n\t});\n\ticonList = getDefaultValue(iconList, \"array\", []);\n\tlet booksList = getBookList(iconList);\n\tlet rv = null,\n\t\ttv = null;\n\n\tlet scrollToPosition = (pos, isScroll) => {\n\t\tif (typeof pos === \"number\" && rv && pos < booksList.length && pos >= -1) {\n\t\t\tif (isScroll) {\n\t\t\t\trv.smoothScrollToPosition(pos);\n\t\t\t} else {\n\t\t\t\trv.scrollToPosition(pos);\n\t\t\t}\n\t\t}\n\t};\n\tlet setTitle = title => {\n\t\tif (tv) tv.setText(String(title)); \n\t}\n\tlet custom = new CustomBottomRecyclerViewPopup(getActivityContext())\n\t\t.withTitle(getDefaultValue(title, \"string\", \"请选择\"))\n\t\t.withHeight(getNumberValue(height, v => v <= 1 && v > 0, 0.75))\n\t\t.dismissWhenClick(!noAutoDismiss)\n\t\t.with([], getDefaultValue(columns, \"number\", 2), clickListener)\n\t\t.withOnCreateCallback((basePopupView) => {\n\t\t\ttry {\n\t\t\t\tlet recyclerView = basePopupView.findViewById(R.id.recyclerView);\n\t\t\t\ttv = custom.findViewById(R.id.title);\n\t\t\t\tlet linearLayout;\n\t\t\t\tif (recyclerView) {\n\t\t\t\t\trv = recyclerView;\n\t\t\t\t\trecyclerView.setAdapter(iconAdapter);\n\t\t\t\t\tPackages.androidx.core.view.ViewCompat.setBackground(recyclerView, Packages.androidx.core.content.ContextCompat.getDrawable(getActivityContext(), R.drawable.bg_round_all_rice));\n\t\t\t\t}\n\t\t\t\tif (recyclerView && (linearLayout = recyclerView.getParent()) && extraInputBox instanceof ResExtraInputBox) {\n\t\t\t\t\tlet inputItem = extraInputBox.create(linearLayout, [resOptionsManage]);\n\t\t\t\t\tlet params = inputItem.getLayoutParams();\n\t\t\t\t\tparams.setMargins(35, 0, 35, 0);\n\t\t\t\t\tinputItem.setLayoutParams(params);\n\t\t\t\t\tlinearLayout.addView(inputItem, 1);\n\t\t\t\t}\n\t\t\t\tscrollToPosition(toPosition);\n\t\t\t} catch (e) {\n\t\t\t\tlog(e.toString());\n\t\t\t}\n\t\t});\n\tlet iconAdapter = new com.example.hikerview.ui.home.view.BookmarkFolderAdapter(getActivityContext(), booksList, (v, i) => {\n\t\tlet item = booksList.get(i);\n\t\tlet items = {\n\t\t\ticon: String(item.getIcon()),\n\t\t\ttitle: String(item.getTitle())\n\t\t};\n\t\tlet func = () => tryCallBack(getDefaultValue(click, \"function\", null), [items, Number(i), resOptionsManage]);\n\t\tif (noAutoDismiss) {\n\t\t\tfunc();\n\t\t} else {\n\t\t\tcustom.dismissWith(func);\n\t\t}\n\t}, false);\n\ticonAdapter.setSelectedIndex(getNumberValue(position, v => v < iconList.length && v >= -1, -1));\n\tlet resOptionsManage = {\n\t\tsetTitle: setTitle,\n\t\tscrollToPosition: scrollToPosition,\n\t\tgetSize: () => Number(booksList.length),\n\t\tchange(list, position) {\n\t\t\tbooksList.length = 0;\n\t\t\tObject.assign(booksList, getBookList(list));\n\t\t\tif (position !== void 0) {\n\t\t\t\ticonAdapter.setSelectedIndex(getNumberValue(position, v => v < iconList.length && v >= -1, -1));\n\t\t\t}\n\t\t\ticonAdapter.notifyDataSetChanged();\n\t\t},\n\t\tsetSelectedIndex(position) {\n\t\t\ticonAdapter.setSelectedIndex(getNumberValue(position, v => v < iconList.length && v >= -1, -1));\n\t\t\ticonAdapter.notifyDataSetChanged();\n\t\t},\n\t\tremoved(pos) {\n\t\t\tif (pos >= booksList.size()) {\n\t\t\t\tthrow new Error(\"pos大于列表长度\");\n\t\t\t}\n\t\t\ticonAdapter.notifyItemRemoved(pos);\n\t\t},\n\t\tchangeColumns: custom.changeSpanCount.bind(custom)\n\t}\n\tif (typeof menuClick === \"function\") {\n\t\tcustom.withMenu(new android.view.View.OnClickListener({\n\t\t\tonClick() {\n\t\t\t\ttryCallBack(getDefaultValue(menuClick, \"function\", null), [resOptionsManage]);\n\t\t\t}\n\t\t}));\n\t}\n\tlet pop = builderXPopup();\n\tpop.setPopupCallback(newSimpleCallback({\n\t\tbeforeShow(basePopupView) {\n\t\t\tscrollToPosition(toPosition);\n\t\t\ttryCallBack(getDefaultValue(beforeShow, \"function\", null), [pop, resOptionsManage]);\n\t\t}\n\t}));\n\tpop = pop.moveUpToKeyboard(false).asCustom(custom);\n\tshowOnUI(pop);\n\treturn pop;\n}\n\nfunction selectBottomRes({\n\tclick,\n\tlongClick,\n\tmenuClick,\n\ttitle,\n\toptions,\n\tcolumns,\n\theight,\n\tnoAutoDismiss,\n\textraInputBox,\n\ttoPosition,\n\tbeforeShow,\n\tonDismiss\n}) {\n\tlet clickListener = new CustomCenterRecyclerViewPopup.ClickListener({\n\t\tonLongClick(value, index) {\n\t\t\ttryCallBack(getDefaultValue(longClick, \"function\", null), [value, index, resOptionsManage]);\n\t\t},\n\t\tclick(value, index) {\n\t\t\ttryCallBack(getDefaultValue(click, \"function\", null), [value, index, resOptionsManage]);\n\t\t}\n\t});\n\tconst list = getStringArray(options, []);\n\tlet rv = null,\n\t\ttv = null;\n\tlet scrollToPosition = (pos, isScroll) => {\n\t\tif (typeof pos === \"number\" && rv && pos < list.length && pos >= -1) {\n\t\t\tif (isScroll) {\n\t\t\t\trv.smoothScrollToPosition(pos);\n\t\t\t} else {\n\t\t\t\trv.scrollToPosition(pos);\n\t\t\t}\n\t\t}\n\t};\n\tlet setTitle = title => {\n\t\tif (tv) tv.setText(String(title));\n\t}\n\tlet custom = new CustomBottomRecyclerViewPopup(getActivityContext())\n\t\t.withTitle(getDefaultValue(title, \"string\", \"请选择\"))\n\t\t.withHeight(getNumberValue(height, v => v <= 1 && v > 0, 0.75))\n\t\t.dismissWhenClick(!noAutoDismiss)\n\t\t.with(list, getDefaultValue(columns, \"number\", 2), clickListener)\n\t\t.withOnCreateCallback((basePopupView) => {\n\t\t\tlet recyclerView = basePopupView.findViewById(R.id.recyclerView);\n\t\t\trv = recyclerView;\n\t\t\ttv = custom.findViewById(R.id.title);\n\t\t\tlet linearLayout;\n\t\t\tif (recyclerView && (linearLayout = recyclerView.getParent()) && extraInputBox instanceof ResExtraInputBox) {\n\n\t\t\t\tlet inputItem = extraInputBox.create(linearLayout, [resOptionsManage]);\n\t\t\t\tlet params = inputItem.getLayoutParams();\n\t\t\t\tparams.setMargins(35, 0, 35, 0);\n\t\t\t\tinputItem.setLayoutParams(params);\n\t\t\t\tlinearLayout.addView(inputItem, 1);\n\t\t\t}\n\t\t});\n\tlet resOptionsManage = {\n\t\tlist: list,\n\t\tsetTitle: setTitle,\n\t\tscrollToPosition: scrollToPosition,\n\t\tchange() {\n\t\t\tcheckStringArray(list);\n\t\t\tcustom.notifyDataChange();\n\t\t},\n\t\tremoved(pos) {\n\t\t\tcheckStringArray(list);\n\t\t\tif (pos >= list.length) {\n\t\t\t\tthrow new Error(\"pos大于列表长度\");\n\t\t\t}\n\t\t\tcustom.notifyDataRemoved(pos);\n\t\t},\n\t\tchangeColumns: custom.changeSpanCount.bind(custom)\n\t}\n\tif (typeof menuClick === \"function\") {\n\t\tcustom.withMenu(new android.view.View.OnClickListener({\n\t\t\tonClick() {\n\t\t\t\ttryCallBack(getDefaultValue(menuClick, \"function\", null), [resOptionsManage]);\n\t\t\t}\n\t\t}));\n\t}\n\tlet pop = builderXPopup();\n\tpop.setPopupCallback(newSimpleCallback({\n\t\tbeforeShow(basePopupView) {\n\t\t\tscrollToPosition(toPosition);\n\t\t\ttryCallBack(getDefaultValue(beforeShow, \"function\", null), [pop, resOptionsManage]);\n\t\t},\n\t\tonDismiss(basePopupView) {\n\t\t\ttryCallBack(getDefaultValue(onDismiss, \"function\", null), []);\n\t\t}\n\t}));\n\tpop = pop.moveUpToKeyboard(false).asCustom(custom);\n\tshowOnUI(pop);\n\treturn pop;\n}\n\nfunction infoBottom({\n\ttitle,\n\toptions,\n\tclick,\n\tlongClick\n}) {\n\tlet clickListener = new com.example.hikerview.ui.setting.file.FileDetailAdapter.OnClickListener({\n\t\tclick(value) {\n\t\t\ttryCallBack(getDefaultValue(click, \"function\", null), [value]);\n\t\t},\n\t\tlongClick(view, value) {\n\t\t\ttryCallBack(getDefaultValue(longClick, \"function\", null), [value]);\n\t\t}\n\t});\n\n\tlet custom = new FileDetailPopup(\n\t\t\tgetActivityContext(),\n\t\t\tgetDefaultValue(title, \"string\", null),\n\t\t\tgetStringArray(options, [])\n\t\t)\n\t\t.withClickListener(clickListener);\n\tlet pop = builderXPopup()\n\t\t.moveUpToKeyboard(false)\n\t\t.asCustom(custom);\n\tshowOnUI(pop);\n\treturn pop;\n}\n\nfunction copyBottom(title, content) {\n\tif (cannotTouchUI) return null;\n\tlet custom = new CustomCopyPopup(getActivityContext())\n\t\t.with(\n\t\t\tgetDefaultValue(title, \"string\", null),\n\t\t\tgetDefaultValue(content, \"string\", \"\"),\n\t\t);\n\tlet pop = builderXPopup()\n\t\t.moveUpToKeyboard(false)\n\t\t.asCustom(custom);\n\tshowOnUI(pop);\n\treturn pop;\n}\n\nfunction selectCenterColor(colors, callBack) {\n\tif (typeof colors === \"function\") {\n\t\tcallBack = colors;\n\t}\n\tcolors = getStringArray(colors, []);\n\tlet custom = new CustomColorPopup(getActivityContext());\n\tcustom.setColorSelect(new CustomColorPopup.OnColorSelect({\n\t\tselect(value) {\n\t\t\ttryCallBack(getDefaultValue(callBack, \"function\", null), [value]);\n\t\t}\n\t}));\n\tlet pop = builderXPopup()\n\t\t.setPopupCallback(newSimpleCallback({\n\t\t\tonCreated(basePopupView) {\n\t\t\t\tconst count = colors.length > 8 ? 8 : colors.length;\n\t\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\t\tif (colors[i]) {\n\t\t\t\t\t\tlet color = android.graphics.Color.parseColor(colors[i]);\n\t\t\t\t\t\tlet relativeLayout = basePopupView.findViewById(R.id[\"color\" + (i + 1) + \"_bg\"]);\n\t\t\t\t\t\trelativeLayout.setTag(colors[i]);\n\t\t\t\t\t\trelativeLayout.getChildAt(0).setCardBackgroundColor(color);\n\t\t\t\t\t\trelativeLayout.getChildAt(1).setTextColor(color);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}))\n\t\t.asCustom(custom);\n\tshowOnUI(pop);\n\treturn pop;\n}\n\nfunction chefSnackbarMake({\n\tcontent,\n\tduration,\n\tconfirm,\n\tcancel,\n\tokTitle,\n\tcancelTitle\n}) {\n\tlet decorView = getContext().getWindow().getDecorView();\n\tChefSnackbar.Companion.make(decorView)\n\t\t.setText(getDefaultValue(content, \"string\", \"\"))\n\t\t.setDuration(getDefaultValue(okTitle, \"number\", 0))\n\t\t.setAction(getDefaultValue(okTitle, \"string\", \"确认\"), function() {\n\t\t\ttryCallBack(getDefaultValue(confirm, \"function\", null));\n\t\t})\n\t\t.setCancelButton(getDefaultValue(cancelTitle, \"string\", \"取消\"), function() {\n\t\t\ttryCallBack(getDefaultValue(cancel, \"function\", null));\n\t\t})\n\t\t.show();\n}\n\nfunction toastMeg(text, type) {\n\tswitch (type) {\n\t\tcase toastMeg.LC:\n\t\t\tToastMgr.longCenter(getContext(), String(text));\n\t\t\tbreak;\n\t\tcase toastMeg.SC:\n\t\t\tToastMgr.shortCenter(getContext(), String(text));\n\t\t\tbreak;\n\t\tcase toastMeg.LB:\n\t\t\tToastMgr.longBottomCenter(getContext(), String(text));\n\t\t\tbreak;\n\t\tcase toastMeg.SC:\n\t\tdefault:\n\t\t\tToastMgr.shortBottomCenter(getContext(), String(text));\n\t\t\tbreak;\n\t}\n}\ntoastMeg.LC = 1;\ntoastMeg.SC = 2;\ntoastMeg.LB = 3;\ntoastMeg.SB = 4;\n\nfunction getClipTopData() {\n\ttry {\n\t\tconst Context = android.content.Context;\n\t\tconst context = getContext();\n\t\tlet clipboard = context.getSystemService(Context.CLIPBOARD_SERVICE);\n\t\tlet clipData = clipboard.getPrimaryClip();\n\t\tif (clipData != null && clipData.getItemCount() > 0) {\n\t\t\tlet text = clipData.getItemAt(0).getText();\n\t\t\tif (text != null) {\n\t\t\t\treturn String(text.toString());\n\t\t\t}\n\t\t}\n\t\treturn \"\";\n\t} catch (e) {\n\t\tlog(e.toString());\n\t\treturn \"\";\n\t}\n}\n\nfunction confirmSync({\n\ttitle,\n\tcontent,\n\tokTitle,\n\tcancelTitle,\n\thideCancel,\n\tnoDismissOnBack,\n\tnoDismissOnBlank\n}) {\n\tlet countDownLatch = new java.util.concurrent.CountDownLatch(1);\n\tlet result = false;\n\tshowOnUI(\n\t\tbuilderXPopup()\n\t\t.dismissOnTouchOutside(!noDismissOnBlank)\n\t\t.dismissOnBackPressed(!noDismissOnBack)\n\t\t.setPopupCallback(newSimpleCallback({\n\t\t\tonDismiss(basePopupView) {\n\t\t\t\tcountDownLatch.countDown();\n\t\t\t}\n\t\t}))\n\t\t.asConfirm(getDefaultValue(title, \"string\", null), getDefaultValue(content, \"string\", \"\"), getDefaultValue(cancelTitle, \"string\", \"取消\"), getDefaultValue(okTitle, \"string\", \"确认\"), () => {\n\t\t\tresult = true;\n\t\t}, () => {\n\t\t\tresult = false;\n\t\t}, !!hideCancel)\n\t);\n\tcountDownLatch.await();\n\treturn result;\n}\n\nfunction inputConfirmSync({\n\ttitle,\n\tcontent,\n\tdefaultValue,\n\thint,\n\ttextarea,\n\tmaxTextarea,\n\thideCancel,\n\tnoAutoSoft,\n\tnoDismissOnBack,\n\tnoDismissOnBlank\n}) {\n\tlet countDownLatch = new java.util.concurrent.CountDownLatch(1);\n\tlet result = \"\";\n\tshowOnUI(\n\t\tbuilderXPopup()\n\t\t.autoOpenSoftInput(!noAutoSoft)\n\t\t.autoFocusEditText(!noAutoSoft)\n\t\t.dismissOnTouchOutside(!noDismissOnBlank)\n\t\t.dismissOnBackPressed(!noDismissOnBack)\n\t\t.setPopupCallback(newSimpleCallback({\n\t\t\tonCreated(basePopupView) {\n\t\t\t\tif (hideCancel) {\n\t\t\t\t\tlet cancelTextView = basePopupView.findViewById(R.id.tv_cancel);\n\t\t\t\t\tif (cancelTextView) {\n\t\t\t\t\t\tcancelTextView.setVisibility(8);\n\t\t\t\t\t}\n\t\t\t\t\tlet dividerView = basePopupView.findViewById(R.id.xpopup_divider2);\n\t\t\t\t\tif (dividerView) {\n\t\t\t\t\t\tdividerView.setVisibility(8);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tonDismiss(basePopupView) {\n\t\t\t\tcountDownLatch.countDown();\n\t\t\t}\n\t\t}))\n\t\t.asInputConfirm(getDefaultValue(title, \"string\", null), getDefaultValue(content, \"string\", null), getDefaultValue(defaultValue, \"string\", null), getDefaultValue(hint, \"string\", null), (text) => {\n\t\t\tresult = text;\n\t\t}, null, maxTextarea ? R.layout.xpopup_confirm_input_max : (textarea ? R.layout.xpopup_confirm_input : 0))\n\t);\n\tcountDownLatch.await();\n\treturn result;\n}\n\nfunction dialogShowOnUI(dialogBuilder, callBack) {\n\trunOnUI(() => {\n\t\tlet dialog = dialogBuilder.create();\n\t\tDialogUtil.INSTANCE.showAsCard(getActivityContext(), dialog);\n\t\tif (callBack) {\n\t\t\tcallBack(dialog);\n\t\t}\n\n\t});\n}\n\nfunction setAlertDialogButton({\n\trightTitle,\n\trightClick,\n\tleftTitle,\n\tleftClick,\n\tcenterTitle,\n\tcenterClick\n}, dialogBuilder, getParam) {\n\tif (rightTitle || rightClick) {\n\t\trightClick = getDefaultValue(rightClick, \"function\", null);\n\t\tdialogBuilder.setPositiveButton(getDefaultValue(rightTitle, \"string\", \"确认\"), (dialog) => {\n\t\t\ttryCallBack(rightClick, getParam(dialog));\n\t\t});\n\t}\n\tif (leftTitle || leftClick) {\n\t\tleftClick = getDefaultValue(leftClick, \"function\", null);\n\t\tdialogBuilder.setNeutralButton(getDefaultValue(leftTitle, \"string\", \"忽略\"), (dialog) => {\n\t\t\ttryCallBack(leftClick, getParam(dialog));\n\t\t});\n\t}\n\tif (centerTitle || centerClick) {\n\t\tcenterClick = getDefaultValue(centerClick, \"function\", null);\n\t\tdialogBuilder.setNegativeButton(getDefaultValue(centerTitle, \"string\", \"取消\"), (dialog) => {\n\t\t\ttryCallBack(centerClick, getParam(dialog));\n\t\t});\n\t}\n}\n\nfunction setAlertDialogButtonTitle({\n\trightTitle,\n\trightClick,\n\tleftTitle,\n\tleftClick,\n\tcenterTitle,\n\tcenterClick\n}, dialogBuilder) {\n\tif (rightTitle || rightClick) {\n\t\tdialogBuilder.setPositiveButton(getDefaultValue(rightTitle, \"string\", \"确认\"), null);\n\t}\n\tif (leftTitle || leftClick) {\n\t\tdialogBuilder.setNeutralButton(getDefaultValue(leftTitle, \"string\", \"忽略\"), null);\n\t}\n\tif (centerTitle || centerClick) {\n\t\tdialogBuilder.setNegativeButton(getDefaultValue(centerTitle, \"string\", \"取消\"), null);\n\t}\n}\n\nfunction setAlertDialogButtonFunc({\n\trightTitle,\n\trightClick,\n\tleftTitle,\n\tleftClick,\n\tcenterTitle,\n\tcenterClick\n}, dialog, getParam) {\n\tconst DialogInterface = android.content.DialogInterface;\n\tif (rightTitle || rightClick) {\n\t\trightClick = getDefaultValue(rightClick, \"function\", null);\n\t\tdialog.getButton(DialogInterface.BUTTON_POSITIVE).setOnClickListener(() => {\n\t\t\ttryCallBack(rightClick, getParam(dialog));\n\t\t});\n\t}\n\tif (leftTitle || leftClick) {\n\t\tleftClick = getDefaultValue(leftClick, \"function\", null);\n\t\tdialog.getButton(DialogInterface.BUTTON_NEUTRAL).setOnClickListener(() => {\n\t\t\ttryCallBack(leftClick, getParam(dialog));\n\t\t});\n\t}\n\tif (centerTitle || centerClick) {\n\t\tcenterClick = getDefaultValue(centerClick, \"function\", null);\n\t\tdialog.getButton(DialogInterface.BUTTON_NEGATIVE).setOnClickListener(() => {\n\t\t\ttryCallBack(centerClick, getParam(dialog));\n\t\t});\n\t}\n}\n\nfunction multiChoice({\n\ttitle,\n\toptions,\n\tcheckedIndexs,\n\tnoAutoDismiss,\n\tonChoice,\n}) {\n\toptions = getStringArray(options, []);\n\tcheckedIndexs = getDefaultValue(checkedIndexs, \"array\", []);\n\tlet checkedItems = new Array(options.length).fill(false);\n\tcheckedIndexs.forEach(i => checkedItems[i] = true);\n\tcheckedItems.length = options.length;\n\tonChoice = getDefaultValue(onChoice, \"function\", null);\n\tlet setItemChecked = (dialog, newcheckedIndexs) => {\n\t\tif (!Array.isArray(newcheckedIndexs)) return;\n\n\t\tcheckedItems.fill(false);\n\t\tnewcheckedIndexs.forEach(i => checkedItems[i] = true);\n\n\t\tlet listView = dialog.getListView();\n\n\t\tfor (let i = 0; i < options.length; i++) {\n\t\t\tlistView.setItemChecked(i, checkedItems[i]);\n\t\t}\n\t\tlistView.getAdapter().notifyDataSetChanged();\n\t};\n\tlet dialogBuilder = new AlertDialog.Builder(getActivityContext())\n\t\t.setTitle(getDefaultValue(title, \"string\", null))\n\t\t.setMultiChoiceItems(options, checkedItems, (v, i, b) => {\n\t\t\tcheckedItems[i] = b;\n\t\t\ttryCallBack(onChoice, [i, b]);\n\t\t});\n\n\tif (noAutoDismiss) {\n\t\tsetAlertDialogButtonTitle(arguments[0], dialogBuilder);\n\t\tdialogShowOnUI(dialogBuilder, (dialog) => {\n\t\t\tsetAlertDialogButtonFunc(arguments[0], dialog, () => [options, checkedItems, setItemChecked.bind(null, dialog), dialog.dismiss.bind(dialog)]);\n\t\t});\n\t} else {\n\t\tsetAlertDialogButton(arguments[0], dialogBuilder, () => [options, checkedItems]);\n\t\tdialogShowOnUI(dialogBuilder);\n\t}\n}\n\nfunction getSeekAndLayout(max, pos, onChange) {\n\tconst Bundle = android.os.Bundle;\n\tconst LinearLayout = android.widget.LinearLayout;\n\tconst SeekBar = android.widget.SeekBar;\n\tconst TextView = android.widget.TextView;\n\tconst Gravity = android.view.Gravity;\n\tconst View = android.view.View;\n\tconst LayoutParams = android.view.ViewGroup.LayoutParams;\n\tconst RelativeLayout = android.widget.RelativeLayout;\n\tconst ImageView = android.widget.ImageView;\n\tconst Spanned = android.text.Spanned;\n\tconst Html = android.text.Html;\n\tlet linearLayout = new LinearLayout(getActivityContext());\n\tlinearLayout.setOrientation(LinearLayout.VERTICAL);\n\tlinearLayout.setLayoutParams(new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT));\n\tlinearLayout.setPadding(65, 50, 60, 50);\n\n\tlet titleStart = new TextView(getActivityContext());\n\ttitleStart.setId(View.generateViewId());\n\ttitleStart.setLayoutParams(new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT));\n\ttitleStart.setTextSize(17);\n\ttitleStart.setPadding(0, 0, 0, 20);\n\tlet initText = tryCallBack(onChange, [pos, max, Html.fromHtml], true);\n\tif (typeof initText === \"string\" || initText instanceof Spanned) {\n\t\ttitleStart.setText(initText);\n\t}\n\tlet relativeLayout = new RelativeLayout(getActivityContext());\n\trelativeLayout.setLayoutParams(new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT));\n\n\tlet startImgStart = new ImageView(getActivityContext());\n\tstartImgStart.setId(View.generateViewId());\n\tstartImgStart.setLayoutParams(new LayoutParams(32, 32));\n\tstartImgStart.setPadding(4, 4, 4, 4);\n\tstartImgStart.setImageResource(R.drawable.ic_arrow_start);\n\n\tlet startImgEnd = new ImageView(getActivityContext());\n\tstartImgEnd.setId(View.generateViewId());\n\tstartImgEnd.setLayoutParams(new LayoutParams(32, 32));\n\tstartImgEnd.setPadding(4, 4, 4, 4);\n\tstartImgEnd.setImageResource(R.drawable.ic_arrow_end);\n\n\tlet seekBar = new SeekBar(getActivityContext());\n\tseekBar.setLayoutParams(new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT));\n\tseekBar.setMax(max);\n\tseekBar.setProgress(pos);\n\n\tlinearLayout.addView(titleStart);\n\tlinearLayout.addView(relativeLayout);\n\n\tlet layoutParams = new RelativeLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);\n\tlayoutParams.addRule(RelativeLayout.CENTER_VERTICAL, RelativeLayout.TRUE);\n\tstartImgStart.setLayoutParams(layoutParams);\n\trelativeLayout.addView(startImgStart);\n\n\tlayoutParams = new RelativeLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);\n\tlayoutParams.addRule(RelativeLayout.ALIGN_PARENT_END, RelativeLayout.TRUE);\n\tlayoutParams.addRule(RelativeLayout.CENTER_VERTICAL, RelativeLayout.TRUE);\n\tstartImgEnd.setLayoutParams(layoutParams);\n\trelativeLayout.addView(startImgEnd);\n\n\tlayoutParams = new RelativeLayout.LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);\n\tlayoutParams.addRule(RelativeLayout.END_OF, startImgStart.getId());\n\tlayoutParams.addRule(RelativeLayout.START_OF, startImgEnd.getId());\n\tlayoutParams.addRule(RelativeLayout.CENTER_VERTICAL, RelativeLayout.TRUE);\n\tseekBar.setLayoutParams(layoutParams);\n\trelativeLayout.addView(seekBar);\n\n\tstartImgStart.setOnClickListener(() => {\n\t\tlet progress = seekBar.getProgress();\n\t\tif (progress <= 0 || progress > max) {\n\t\t\treturn;\n\t\t}\n\t\tseekBar.setProgress(progress - 1);\n\t});\n\tstartImgEnd.setOnClickListener(() => {\n\t\tlet progress = seekBar.getProgress();\n\t\tif (progress < 0 || progress >= max) {\n\t\t\treturn;\n\t\t}\n\t\tseekBar.setProgress(progress + 1);\n\t});\n\tseekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener({\n\t\tonProgressChanged(seekBar, progress, fromUser) {\n\t\t\tlet res = tryCallBack(onChange, [progress, max, Html.fromHtml], true);\n\t\t\tif (typeof res === \"string\" || initText instanceof Spanned) {\n\t\t\t\ttitleStart.setText(res);\n\t\t\t}\n\t\t},\n\t\tonStartTrackingTouch(seekBar) {},\n\t\tonStopTrackingTouch(seekBar) {}\n\t}));\n\treturn [seekBar, linearLayout];\n}\n\nfunction seekCenter({\n\ttitle,\n\tmax,\n\tpos,\n\tonChange,\n}) {\n\tmax = parseInt(max), pos = parseInt(pos) || 0;\n\tif (!max || max < pos || pos < 0) {\n\t\tthrow Error(\"max和pos必须为整数，且max>0,max>=pos>=0\");\n\t}\n\tlet builder = new AlertDialog.Builder(getActivityContext());\n\tbuilder.setTitle(getDefaultValue(title, \"string\", null));\n\tlet [seekBar, linearLayout] = getSeekAndLayout(max, pos, onChange);\n\tsetAlertDialogButton(arguments[0], builder, () => [Number(seekBar.getProgress()), max]);\n\tbuilder.setView(linearLayout);\n\tdialogShowOnUI(builder);\n}\n\nfunction canBiometric() {\n\treturn Number(BiometricManager.from(getActivityContext()).canAuthenticate())\n}\n\nfunction checkByBiometric(success) {\n\tif (typeof success !== \"function\") return;\n\tlet can = canBiometric();\n\tif (can !== 0) return can;\n\trunOnUI(() => {\n\t\tcom.example.hikerview.ui.setting.office.MoreSettingOfficer.INSTANCE.checkByBiometric(getActivityContext(), () => {\n\t\t\ttryCallBack(success, [], true);\n\t\t});\n\t});\n}\n\n\nfunction decodeQRCode(path) {\n\tlet result = null;\n\ttry {\n\t\tlet bitmap = android.graphics.BitmapFactory.decodeFile(path);\n\t\tif (bitmap == null) return result;\n\t\tlet hints = new java.util.Hashtable();\n\t\tlet width = bitmap.getWidth();\n\t\tlet height = bitmap.getHeight();\n\t\tlet pixels = java.lang.reflect.Array.newInstance(java.lang.Class.forName(\"java.lang.Integer\"), width * height);\n\t\tpixels = java.util.Arrays.stream(pixels).mapToInt(v => 0).toArray();\n\t\tbitmap.getPixels(pixels, 0, width, 0, 0, width, height);\n\t\tlet source = new com.google.zxing.RGBLuminanceSource(width, height, pixels);\n\t\tlet binaryBitmap = new com.google.zxing.BinaryBitmap(new com.google.zxing.common.HybridBinarizer(source));\n\t\tlet decodedResult = new com.google.zxing.MultiFormatReader().decode(binaryBitmap, hints);\n\t\tresult = String(decodedResult.getText());\n\t} catch (e) {}\n\treturn result;\n}\n\n\n$.exports = {\n\tconfirm,\n\tinputAutoRow,\n\tinputConfirm,\n\tselectCenter,\n\tselectCenterMark,\n\tselectBottom,\n\tselectBottomMark,\n\tIconExtraMenu,\n\tselectCenterIcon,\n\tinputTwoRow,\n\tselectBottomSettingMenu,\n\tselectBottomRes,\n\tResExtraInputBox,\n\tinfoBottom,\n\tcopyBottom,\n\tselectCenterColor,\n\tconfirmSync,\n\tinputConfirmSync,\n\ticon: R.drawable,\n\tchefSnackbarMake,\n\ttoastMeg,\n\tplayVideos,\n\tgetClipTopData,\n\tmultiChoice,\n\tseekCenter,\n\tsetUseStartActivity,\n\trunOnNewThread,\n\trunOnUIThread: runOnUI,\n\tcanBiometric,\n\tcheckByBiometric,\n\tdecodeQRCode,\n\tselectAttachList,\n\tselectBottomResIcon,\n\tupdateRecordsBottom\n};"}],"title":"直播txt转json","author":"🏅京梦","version":0,"type":"tool","url":"hiker://empty","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nlet d = [];\n\nd.push({\n    title: '‘‘’’<font color=#fd268a>注意：转换的json数据适用于京梦主页的电视，转换后记得去主页 长按电视改下路径。</font>',\n    col_type: 'text_1',\n    url: 'hiker://empty',\n}, {\n    title: '‘‘’’<font color=#1AB16B>点我去转换</font>',\n    col_type: 'text_center_1',\n    url: $('hiker://empty#noLoading#').lazyRule(() => {\n        let hikerPop = $.require(\"hiker://page/hikerPop\");\n        hikerPop.inputTwoRow({\n            titleHint: \"本地路径|网络地址\",\n            titleDefault: getItem(\"live_dizhi\", \"hiker|http地址\"),\n            urlHint: \"保存路径|文件名称\",\n            urlDefault: getItem(\"live_file\", \"hiker://files/Jm/live/live.json\"),\n            noAutoSoft: true,\n            title: \"转换的地址和路径\",\n            confirm(s1, s2) {\n                let data = [];\n                let html = getItem('live_dizhi', '');\n                let file = getItem('live_file', 'hiker://files/Jm/live/live.json');\n                let text = fetch(s1);\n                text.split('\\n').forEach(function(line) {\n                    let nameMatch = line.match(/^(.*?),/);\n                    let urlMatch = line.match(/http\\S+/);\n                    if (nameMatch && urlMatch) {\n                        var name = nameMatch[1].trim();\n                        var url = urlMatch[0];\n                        var existingData = data.find(function(item) {\n                            return item.name === name;\n                        });\n\n                        if (existingData) {\n                            if (existingData.urls) {\n                                if (!existingData.urls.includes(url)) {\n                                    existingData.urls.push(url);\n                                }\n                            } else {\n                                existingData.urls = [existingData.url];\n                                delete existingData.url;\n                                existingData.urls.push(url);\n                            }\n                        } else {\n                            data.push({\n                                name: name,\n                                url: url\n                            });\n                        }\n                    }\n                });\n\n                let result = {\n                    data: data\n                };\n                writeFile(file, JSON.stringify(result));\n\n                setItem(\"live_dizhi\", s1);\n                setItem(\"live_file\", s2);\n                refreshPage(false);\n                copy(s2);\n                return \"toast://转换成功并复制了路径地址\";\n            },\n            cancel() {\n                return \"toast://你取消了\"\n            }\n        });\n        return 'hiker://empty'\n    }),\n});\nsetResult(d);","searchFind":"","search_url":"","group":"⑧工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"hikerPop\",\"path\":\"hikerPop\",\"rule\":\"// author@LoyDgIk\\n// 该插件仅供娱乐，是作者学习研究代码的副产物，插件可能纯在一些漏洞与不合理的设计，请谨慎用于实际项目。\\n// 已知问题，用弹窗播放视频链接，不会有播放记录。进入子页面有历史记录，但没有足迹。\\n//引入Java类\\nconst XPopup = com.lxj.xpopup.XPopup;\\nconst XPopupCallback = com.lxj.xpopup.interfaces.XPopupCallback;\\nconst DetailUIHelper = com.example.hikerview.ui.detail.DetailUIHelper;\\nconst DisplayUtil = com.example.hikerview.utils.DisplayUtil;\\nconst ActivityManager = com.example.hikerview.ui.ActivityManager;\\nconst R = com.example.hikerview.R;\\nconst Integer = java.lang.Integer;\\nconst ArrayList = java.util.ArrayList;\\nconst Runnable = java.lang.Runnable;\\nconst Bookmark = com.example.hikerview.model.Bookmark;\\n\\nlet BookmarkFolderPopup = com.example.hikerview.ui.home.view.BookmarkFolderPopup;\\n\\nconst InputPopup = com.example.hikerview.ui.view.popup.InputPopup\\nconst ConfirmPopup = com.example.hikerview.ui.view.popup.ConfirmPopup;\\n\\nconst SettingMenuPopup = com.example.hikerview.ui.setting.SettingMenuPopup;\\nconst OfficeItem = com.example.hikerview.ui.setting.office.OfficeItem;\\nconst CustomBottomRecyclerViewPopup = com.example.hikerview.ui.view.CustomBottomRecyclerViewPopup;\\nconst CustomCenterRecyclerViewPopup = com.example.hikerview.ui.view.CustomCenterRecyclerViewPopup;\\nconst CustomRecyclerViewPopup = com.example.hikerview.ui.view.CustomRecyclerViewPopup;\\nconst FileDetailPopup = com.example.hikerview.ui.setting.file.FileDetailPopup;\\nconst CustomCopyPopup = com.example.hikerview.ui.view.CustomCopyPopup;\\nconst CustomColorPopup = com.example.hikerview.ui.view.CustomColorPopup;\\nconst Class = java.lang.Class;\\nconst AutoImportHelper = com.example.hikerview.utils.AutoImportHelper;\\nconst PageParser = com.example.hikerview.service.parser.PageParser;\\n\\nconst UrlDetector = com.example.hikerview.ui.browser.model.UrlDetector;\\nconst PlayerChooser = com.example.hikerview.ui.video.PlayerChooser;\\nconst VideoChapter = com.example.hikerview.ui.video.VideoChapter;\\nconst FJSON = com.alibaba.fastjson.JSON;\\n\\nconst ToastMgr = com.example.hikerview.utils.ToastMgr;\\nconst ChefSnackbar = com.example.hikerview.ui.view.toast.ChefSnackbar;\\nconst ThreadTool = com.example.hikerview.utils.ThreadTool;\\nconst AlertDialog = Packages.androidx.appcompat.app.AlertDialog;\\nconst DialogUtil = com.example.hikerview.utils.view.DialogUtil;\\nconst HeavyTaskUtil = com.example.hikerview.utils.HeavyTaskUtil;\\n\\nconst BiometricManager = Packages.androidx.biometric.BiometricManager;\\nconst BiometricPrompt = Packages.androidx.biometric.BiometricPrompt;\\nconst ContextCompat = Packages.androidx.core.content.ContextCompat;\\nconst Build = android.os.Build;\\nlet JSContext = org.mozilla.javascript.Context;\\nlet JSContextVer = JSContext.getCurrentContext().getLanguageVersion();\\n\\nif (typeof MY_RULE === \\\"undefined\\\") {\\n\\tMY_RULE = null;\\n}\\nif (Build.VERSION.SDK_INT < Build.VERSION_CODES.O) {\\n\\tthrow Error(\\\"hikerPop只能在android8.0及以上运行\\\");\\n}\\n//适配嗅觉浏览器\\nlet cannotTouchUI = false;\\nif (typeof MY_NAME !== \\\"undefined\\\" && MY_NAME === \\\"嗅觉浏览器\\\") {\\n\\tcannotTouchUI = true;\\n\\tBookmarkFolderPopup = com.example.hikerview.ui.bookmark.BookmarkFolderPopup;\\n}\\n\\nfunction getContext() {\\n\\treturn typeof getCurrentActivity === \\\"function\\\" ? getCurrentActivity() : ActivityManager.getInstance().getCurrentActivity();\\n}\\n//获取上下文\\nconst startActivity = getContext();\\n\\nlet useStartActivity = true;\\n\\nfunction getArticleListFragment(activity) {\\n\\t//let activity = getCurrentActivity();\\t\\n\\ttry {\\n\\t\\tif (activity instanceof com.example.hikerview.ui.home.MainActivity) {\\n\\t\\t\\tlet MainActivity = activity.getClass();\\n\\t\\t\\tlet field = MainActivity.getDeclaredField(\\\"viewPagerAdapter\\\");\\n\\t\\t\\tfield.setAccessible(true);\\n\\t\\t\\tlet viewPagerAdapter = field.get(activity);\\n\\t\\t\\tlet articleListFragment = viewPagerAdapter.getClass().getMethod(\\\"getCurrentFragment\\\").invoke(viewPagerAdapter);\\n\\t\\t\\treturn articleListFragment || null;\\n\\t\\t} else if (activity instanceof com.example.hikerview.ui.home.FilmListActivity) {\\n\\t\\t\\tlet FilmListActivity = activity.getClass();\\n\\t\\t\\tlet field = FilmListActivity.getDeclaredField(\\\"articleListFragment\\\");\\n\\t\\t\\tfield.setAccessible(true);\\n\\t\\t\\tlet articleListFragment = field.get(activity);\\n\\t\\t\\treturn articleListFragment;\\n\\t\\t} else {\\n\\t\\t\\treturn null;\\n\\t\\t}\\n\\t} catch (e) {\\n\\t\\treturn null;\\n\\t}\\n}\\nconst currentArticleListFragment = getArticleListFragment(startActivity);\\n\\nfunction clickItem(af, position, url) {\\n\\tlet click = af.getClass().getDeclaredMethod(\\\"clickItem\\\", android.view.View, java.lang.Integer.TYPE, java.lang.String, java.lang.Boolean.TYPE, java.lang.String);\\n\\tclick.setAccessible(true);\\n\\tclick.invoke(af, null, java.lang.Integer.valueOf(position), url, true, \\\"\\\");\\n}\\n\\n\\nfunction getActivityContext() {\\n\\treturn useStartActivity ? startActivity : getContext();\\n}\\n\\nfunction setUseStartActivity(bool) {\\n\\tuseStartActivity = !!bool;\\n\\treturn this;\\n}\\n\\nfunction newSimpleCallback({\\n\\tbeforeDismiss,\\n\\tbeforeShow,\\n\\tonBackPressed,\\n\\tonCreated,\\n\\tonDismiss,\\n\\tonDrag,\\n\\tonKeyBoardStateChanged,\\n\\tonShow\\n}) {\\n\\treturn new XPopupCallback({\\n\\t\\tbeforeDismiss(basePopupView) {\\n\\t\\t\\ttryCallBack(beforeDismiss, [basePopupView], true);\\n\\t\\t},\\n\\t\\tbeforeShow(basePopupView) {\\n\\t\\t\\ttryCallBack(beforeShow, [basePopupView], true);\\n\\t\\t},\\n\\t\\tonBackPressed(basePopupView) {\\n\\t\\t\\tif (typeof onBackPressed === \\\"function\\\") {\\n\\t\\t\\t\\treturn !!tryCallBack(onBackPressed, [basePopupView], true);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tonCreated(basePopupView) {\\n\\t\\t\\ttryCallBack(onCreated, [basePopupView], true);\\n\\t\\t},\\n\\t\\tonDismiss(basePopupView) {\\n\\t\\t\\ttryCallBack(onDismiss, [basePopupView], true);\\n\\t\\t},\\n\\t\\tonDrag(basePopupView, value, percent, upOrLeft) {\\n\\t\\t\\ttryCallBack(onDrag, [basePopupView, value, percent, upOrLeft], true);\\n\\t\\t},\\n\\t\\tonKeyBoardStateChanged(basePopupView, height) {\\n\\t\\t\\ttryCallBack(onKeyBoardStateChanged, [basePopupView, height], true);\\n\\t\\t},\\n\\t\\tonShow(basePopupView) {\\n\\t\\t\\ttryCallBack(onKeyBoardStateChanged, [basePopupView], true);\\n\\t\\t}\\n\\t});\\n}\\n\\nfunction getVideoChapter(playList) {\\n\\tlet videoChapterClass = new VideoChapter().getClass();\\n\\treturn FJSON.parseArray(JSON.stringify(playList), videoChapterClass);\\n}\\n\\nfunction playVideos(playList, pos) {\\n\\tif (!Array.isArray(playList)) {\\n\\t\\tif ($.type(playList) === \\\"object\\\") {\\n\\t\\t\\tplayList = [playList];\\n\\t\\t} else {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\t}\\n\\n\\tlet videoChapter = getVideoChapter(playList);\\n\\tif (pos !== void 0 && pos >= 0 && pos < videoChapter.size()) {\\n\\t\\tvideoChapter.get(pos).setUse(true);\\n\\t}\\n\\tPlayerChooser.startPlayer(getActivityContext(), videoChapter);\\n\\treturn true;\\n}\\n\\nfunction toNextPage(url) {\\n\\ttry {\\n\\t\\tlet rule = getParam(\\\"rule\\\", \\\"\\\", url);\\n\\t\\tif (!rule && MY_RULE) {\\n\\t\\t\\turl = buildUrl(url, {\\n\\t\\t\\t\\trule: MY_RULE.title\\n\\t\\t\\t});\\n\\t\\t}\\n\\t\\tif (Object.keys(AutoImportHelper).includes(\\\"lambda$couldCloudImport$2\\\")) {\\n\\t\\t\\tAutoImportHelper.lambda$couldCloudImport$2(url);\\n\\t\\t} else {\\n\\t\\t\\tlet autoImportHelperClass = new AutoImportHelper().getClass();\\n\\t\\t\\tlet couldCloudImportMethod = autoImportHelperClass.getDeclaredMethod(\\\"lambda$couldCloudImport$2\\\", Class.forName(\\\"java.lang.String\\\"));\\n\\t\\t\\tcouldCloudImportMethod.setAccessible(true);\\n\\t\\t\\tcouldCloudImportMethod.invoke(null, url);\\n\\t\\t}\\n\\t} catch (e) {\\n\\t\\ttoast(e.toString());\\n\\t}\\n}\\n\\nfunction toPalyPage(url, title) {\\n\\ttry {\\n\\t\\tPlayerChooser.startPlayer(getActivityContext(), title || url, url);\\n\\t} catch (e) {\\n\\t\\ttoast(e.toString());\\n\\t}\\n}\\n\\nfunction throwError(e) {\\n\\tlet message = \\\"\\\",\\n\\t\\tlineNumber = -1;\\n\\tif (e instanceof Error) {\\n\\t\\tmessage = e.message;\\n\\t\\tlineNumber = e.lineNumber;\\n\\t} else {\\n\\t\\tmessage = String(e);\\n\\t}\\n\\tlog(message);\\n\\tsetError(\\\"\\\\n行数：\\\" + lineNumber + \\\"\\\\n详情：\\\" + message);\\n}\\n\\nfunction tryNewCallBack(callBack, args, noDeal) {\\n\\tHeavyTaskUtil.executeNewTask(new Runnable({\\n\\t\\trun() {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tcheckJsVer();\\n\\t\\t\\t\\tif (callBack == null) {\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\targs = args || [];\\n\\t\\t\\t\\tlet res = callBack.apply(null, args);\\n\\t\\t\\t\\tif (noDeal) return;\\n\\t\\t\\t\\tdealUrlSimply(res, args[0]);\\n\\t\\t\\t} catch (e) {\\n\\t\\t\\t\\tthrowError(e);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}));\\n}\\n\\nfunction runOnNewThread(func) {\\n\\ttryNewCallBack(func);\\n}\\n\\nfunction tryCallBack(callBack, args, noDeal) {\\n\\ttry {\\n\\t\\tcheckJsVer();\\n\\t\\tif (callBack == null) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\targs = args || [];\\n\\t\\tlet res = callBack.apply(null, args);\\n\\t\\t//log(res)\\n\\t\\tif (noDeal) return res;\\n\\n\\t\\tdealUrlSimply(res, args[0]);\\n\\t} catch (e) {\\n\\t\\tthrowError(e);\\n\\t}\\n}\\n\\nfunction dealUrlSimply(url, title) {\\n\\tif (typeof url !== \\\"string\\\" || !url) return;\\n\\tif (currentArticleListFragment && typeof MY_POSITION !== \\\"undefined\\\" && MY_POSITION > -1) {\\n\\t\\tclickItem(currentArticleListFragment, MY_POSITION, url);\\n\\t} else {\\n\\t\\tif (PageParser.isPageUrl(url)) {\\n\\t\\t\\treturn toNextPage(url);\\n\\t\\t} else if (!DetailUIHelper.dealUrlSimply(getActivityContext(), null, MY_RULE, null, url || \\\"\\\", null, null) && UrlDetector.isVideoOrMusic(url)) {\\n\\t\\t\\treturn toPalyPage(url, typeof title === \\\"string\\\" ? title : url);\\n\\t\\t}\\n\\t}\\n}\\n\\nfunction checkJsVer() {\\n\\tlet cx = JSContext.getCurrentContext();\\n\\tif (!cx.getLanguageVersion()) {\\n\\t\\ttry {\\n\\n\\t\\t} catch (e) {\\n\\t\\t\\tlog(e.toString())\\n\\t\\t}\\n\\t\\tcx.setLanguageVersion(JSContextVer);\\n\\t}\\n}\\n\\nfunction getDefaultValue(v, type, defaultValue) {\\n\\tif ($.type(v) !== type) return defaultValue;\\n\\treturn v || defaultValue;\\n}\\n\\nfunction getNumberValue(v, func, defaultValue) {\\n\\tif (!($.type(v) === \\\"number\\\" || func(v))) return defaultValue;\\n\\treturn v;\\n}\\n\\nfunction getStringArray(arr, defaultValue) {\\n\\tif ($.type(arr) !== \\\"array\\\") return defaultValue;\\n\\treturn arr.map(v => String(v));\\n}\\n\\nfunction checkStringArray(arr) {\\n\\tarr.forEach((v, i) => arr[i] = String(v));\\n}\\n\\nfunction getNumberArray(arr, defaultValue) {\\n\\tif ($.type(arr) !== \\\"array\\\") return defaultValue;\\n\\treturn arr.map(v => Number(v) || 0);\\n}\\n\\nfunction getBookList(arr) {\\n\\tlet list = new ArrayList();\\n\\tfor (let it of arr) {\\n\\t\\tlet bookmark = new Bookmark();\\n\\t\\tbookmark.setTitle(it.title || \\\"\\\");\\n\\t\\tbookmark.setDir(false);\\n\\t\\tbookmark.setUrl(it.url || it.title || \\\"\\\");\\n\\t\\tbookmark.setIcon(it.icon || \\\"\\\");\\n\\t\\tlist.add(bookmark);\\n\\t}\\n\\treturn list;\\n}\\n\\nfunction builderXPopup(context) {\\n\\treturn new XPopup.Builder(context || getActivityContext())\\n\\t\\t.borderRadius(DisplayUtil.dpToPx(getActivityContext(), 16));\\n}\\n\\nfunction dpToPx(dp) {\\n\\treturn DisplayUtil.dpToPx(getActivityContext(), dp);\\n}\\n\\nfunction runOnUI(func) {\\n\\tThreadTool.INSTANCE.runOnUI(new Runnable({\\n\\t\\trun() {\\n\\t\\t\\tcheckJsVer();\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tfunc();\\n\\t\\t\\t} catch (e) {\\n\\t\\t\\t\\tthrowError(e);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}));\\n}\\nconst showOnUI = cannotTouchUI ? pop => runOnUI(() => pop.show()) : pop => pop.show();\\n\\nfunction updateRecordsBottom(records) {\\n\\tconst DefaultItemAnimator = Packages.androidx.recyclerview.widget.DefaultItemAnimator;\\n\\tconst MyStatusBarUtil = com.example.hikerview.utils.MyStatusBarUtil;\\n\\tconst UpdateRecordsAdapter = com.example.hikerview.ui.setting.updaterecords.UpdateRecordsAdapter;\\n\\tconst GridLayoutManager = Packages.androidx.recyclerview.widget.GridLayoutManager;\\n\\tconst RecordDetail = com.example.hikerview.ui.setting.updaterecords.RecordDetail;\\n\\n\\tlet myRecordDetail = new JavaAdapter(com.lxj.xpopup.core.BottomPopupView, {\\n\\t\\trules: [],\\n\\t\\tgetImplLayoutId() {\\n\\t\\t\\treturn R.layout.activit_ad_list;\\n\\t\\t},\\n\\t\\tonCreate() {\\n\\t\\t\\tthis.super$onCreate();\\n\\t\\t\\tlet recyclerView = this.findViewById(R.id.ad_list_recycler_view);\\n\\t\\t\\tthis.recyclerView = recyclerView;\\n\\t\\t\\trecyclerView.setItemAnimator(new DefaultItemAnimator());\\n\\t\\t\\tthis.findViewById(R.id.ad_list_title_text).setText(\\\"更新日志\\\");\\n\\t\\t\\tlet button = this.findViewById(R.id.ad_list_add);\\n\\t\\t\\tbutton.setText(\\\"知道啦\\\");\\n\\t\\t\\tbutton.setOnClickListener(() => {\\n\\t\\t\\t\\tthis.dismiss();\\n\\t\\t\\t});\\n\\t\\t\\tlet statusBarHeight = MyStatusBarUtil.getStatusBarHeight(getActivityContext()) + DisplayUtil.dpToPx(getActivityContext(), 86);\\n\\t\\t\\tlet findView2 = this.findViewById(R.id.ad_list_bg);\\n\\t\\t\\t//this.findView(0x7f0a007c).setOnClickListener(new -$.Lambda.UpdateRecordsActivity.RJCabNcRtjM6-f9zjjTJnyOIczg(this));\\n\\t\\t\\tlet layoutParams = findView2.getLayoutParams();\\n\\t\\t\\tlayoutParams.topMargin = statusBarHeight;\\n\\t\\t\\tfindView2.setLayoutParams(layoutParams);\\n\\n\\t\\t\\tthis.adapter = new UpdateRecordsAdapter(getActivityContext(), this.rules);\\n\\t\\t\\tthis.recyclerView.setLayoutManager(new GridLayoutManager(getActivityContext(), 1));\\n\\t\\t\\tthis.recyclerView.setAdapter(this.adapter);\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tfor (let it of records) {\\n\\t\\t\\t\\t\\tlet recordDetail = new RecordDetail();\\n\\t\\t\\t\\t\\trecordDetail.setType(1);\\n\\t\\t\\t\\t\\trecordDetail.setDetail(String(it.title || \\\"\\\"));\\n\\t\\t\\t\\t\\tthis.rules.push(recordDetail);\\n\\t\\t\\t\\t\\tfor (let item of (it.records || [])) {\\n\\t\\t\\t\\t\\t\\tlet recordDetail2 = new RecordDetail();\\n\\t\\t\\t\\t\\t\\trecordDetail2.setType(2);\\n\\t\\t\\t\\t\\t\\trecordDetail2.setDetail(String(item || \\\"\\\"));\\n\\t\\t\\t\\t\\t\\tthis.rules.push(recordDetail2);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t} catch (e) {\\n\\t\\t\\t\\tlog(e.toString());\\n\\t\\t\\t\\tsetError(e);\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\t}, getActivityContext());\\n\\n\\tlet pop = new builderXPopup().asCustom(myRecordDetail);\\n\\tshowOnUI(pop);\\n\\treturn pop;\\n}\\n\\nfunction findRecyclerView(viewGroup) {\\n\\tfor (let i = 0; i < viewGroup.getChildCount(); i++) {\\n\\t\\tlet child = viewGroup.getChildAt(i);\\n\\t\\tlet name = child.getClass().getSimpleName();\\n\\n\\t\\tif (name == \\\"RecyclerView\\\") {\\n\\t\\t\\treturn child;\\n\\t\\t}\\n\\t\\tif (child instanceof android.view.ViewGroup) {\\n\\t\\t\\tlet res;\\n\\t\\t\\tif ((res = findRecyclerView(child))) {\\n\\t\\t\\t\\treturn res;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\\n\\nfunction selectAttachList(id, {\\n\\tclick,\\n\\toptions,\\n}) {\\n\\tif (typeof id !== \\\"string\\\" || !id) return null;\\n\\toptions = getStringArray(options, []);\\n\\tlet context = getActivityContext();\\n\\tlet recyclerView = findRecyclerView(context.findViewById(android.R.id.content));\\n\\t//log(recyclerView===null);\\n\\tif (recyclerView == null) return null;\\n\\tlet list = recyclerView.getAdapter().getList();\\n\\tlet i = 0;\\n\\tlet ii = -1\\n\\tfor (let it of list) {\\n\\t\\tif (id == it.getBaseExtra().getId()) {\\n\\t\\t\\tii = i;\\n\\t\\t\\tbreak;\\n\\t\\t}\\n\\t\\ti++;\\n\\t}\\n\\tif (ii < 0) return null;\\n\\tlet mg = recyclerView.getLayoutManager();\\n\\n\\tlet pop = builderXPopup(getContext())\\n\\t\\t.atView(mg.getChildAt(ii))\\n\\t\\t.asAttachList(options, null, (position, text) => {\\n\\t\\t\\ttryCallBack(getDefaultValue(click, \\\"function\\\", null), [text, position]);\\n\\t\\t});\\n\\tshowOnUI(pop);\\n\\treturn pop;\\n}\\n\\nfunction loading(title) {\\n\\tlet pop = builderXPopup()\\n\\t\\t.asLoading(getDefaultValue(title, \\\"string\\\", null), 0);\\n\\tshowOnUI(pop);\\n\\treturn pop;\\n}\\n\\nfunction selectCenterMark({\\n\\tclick,\\n\\ttitle,\\n\\toptions,\\n\\ticons,\\n\\tnoAutoDismiss,\\n\\tposition\\n}) {\\n\\toptions = getStringArray(options, []);\\n\\ticons = getNumberArray(icons, null);\\n\\tlet pop = builderXPopup()\\n\\t\\t.autoDismiss(!noAutoDismiss)\\n\\t\\t.asCenterList(getDefaultValue(title, \\\"string\\\", null), options, icons, getNumberValue(position, v => v % 1 === 0 && v < options.length && v >= -1, -1), (index, value) => {\\n\\t\\t\\ttryCallBack(getDefaultValue(click, \\\"function\\\", null), [value, index]);\\n\\t\\t});\\n\\tshowOnUI(pop);\\n\\treturn pop;\\n}\\n\\nfunction selectBottomMark({\\n\\tclick,\\n\\ttitle,\\n\\toptions,\\n\\ticons,\\n\\tnoAutoDismiss,\\n\\tposition\\n}) {\\n\\toptions = getStringArray(options, []);\\n\\ticons = getNumberArray(icons, null);\\n\\tlet pop = builderXPopup()\\n\\t\\t.moveUpToKeyboard(false)\\n\\t\\t.autoDismiss(!noAutoDismiss)\\n\\t\\t.asBottomList(getDefaultValue(title, \\\"string\\\", null), options, icons, getNumberValue(position, v => v % 1 === 0 && v < options.length && v >= -1, -1), (index, value) => {\\n\\t\\t\\ttryCallBack(getDefaultValue(click, \\\"function\\\", null), [value, index]);\\n\\t\\t});\\n\\tshowOnUI(pop);\\n\\treturn pop;\\n}\\n\\nfunction selectCenter({\\n\\tclick,\\n\\tlongClick,\\n\\ttitle,\\n\\toptions,\\n\\tcolumns,\\n\\tposition\\n}) {\\n\\tlet clickListener = new CustomCenterRecyclerViewPopup.ClickListener({\\n\\t\\tonLongClick(value, index) {\\n\\t\\t\\ttryCallBack(getDefaultValue(longClick, \\\"function\\\", null), [value, index]);\\n\\t\\t},\\n\\t\\tclick(value, index) {\\n\\t\\t\\ttryCallBack(getDefaultValue(click, \\\"function\\\", null), [value, index]);\\n\\t\\t}\\n\\t});\\n\\toptions = getStringArray(options, []);\\n\\tlet custom = new CustomCenterRecyclerViewPopup(getActivityContext())\\n\\t\\t.withTitle(getDefaultValue(title, \\\"string\\\", \\\"请选择\\\"))\\n\\t\\t.with(options, getDefaultValue(columns, \\\"number\\\", 3), clickListener);\\n\\tif (position !== void 0) {\\n\\t\\tcustom.withSelectedIndex(getNumberValue(position, v => v < options.length && v >= -1, -1));\\n\\t}\\n\\tlet pop = builderXPopup()\\n\\t\\t.asCustom(custom);\\n\\tshowOnUI(pop);\\n\\treturn pop;\\n}\\n\\nfunction selectBottom({\\n\\tclick,\\n\\tlongClick,\\n\\ttitle,\\n\\toptions,\\n\\tcolumns,\\n\\theight,\\n\\tnoAutoDismiss,\\n}) {\\n\\tlet clickListener = new CustomRecyclerViewPopup.ClickListener({\\n\\t\\tonLongClick(value, index) {\\n\\t\\t\\ttryCallBack(getDefaultValue(longClick, \\\"function\\\", null), [value, index]);\\n\\t\\t},\\n\\t\\tclick(value, index) {\\n\\t\\t\\ttryCallBack(getDefaultValue(click, \\\"function\\\", null), [value, index]);\\n\\t\\t}\\n\\t});\\n\\toptions = getStringArray(options, []);\\n\\tlet custom = new CustomRecyclerViewPopup(getActivityContext())\\n\\t\\t.withTitle(getDefaultValue(title, \\\"string\\\", \\\"请选择\\\"))\\n\\t\\t.height(getNumberValue(height, v => v <= 1 && v > 0, 0.75))\\n\\t\\t.dismissAfterClick(!noAutoDismiss).with(options, getDefaultValue(columns, \\\"number\\\", 3), clickListener);\\n\\tlet pop = builderXPopup()\\n\\t\\t.moveUpToKeyboard(false)\\n\\t\\t.asCustom(custom);\\n\\tshowOnUI(pop);\\n\\treturn pop;\\n}\\n\\nfunction IconExtraMenu(click) {\\n\\tthis.create = function(parentView, args) {\\n\\t\\tconst Gravity = android.view.Gravity;\\n\\t\\tconst ImageView = android.widget.ImageView;\\n\\t\\tconst LinearLayout = android.widget.LinearLayout;\\n\\n\\t\\tlet menuIcon = new ImageView(getActivityContext());\\n\\t\\tlet menuIconLayoutParams = new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, 65);\\n\\t\\tmenuIconLayoutParams.gravity = Gravity.CENTER_VERTICAL;\\n\\t\\tmenuIconLayoutParams.setMargins(0, 0, 10, 0);\\n\\t\\tmenuIcon.setLayoutParams(menuIconLayoutParams);\\n\\t\\tmenuIcon.setId(R.id.menu_icon);\\n\\t\\tmenuIcon.setPadding(4, 4, 4, 4);\\n\\t\\t//menuIcon.setVisibility(android.view.View.GONE);\\n\\t\\tmenuIcon.setImageResource(R.drawable.home_left_menu);\\n\\t\\tif (typeof click === \\\"function\\\") {\\n\\t\\t\\tmenuIcon.setOnClickListener(new android.view.View.OnClickListener({\\n\\t\\t\\t\\tonClick() {\\n\\t\\t\\t\\t\\ttryCallBack(click, args);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}));\\n\\t\\t}\\n\\n\\t\\treturn menuIcon;\\n\\t}\\n}\\n\\nfunction selectCenterIcon({\\n\\tclick,\\n\\ttitle,\\n\\ticonList,\\n\\tcolumns,\\n\\tposition,\\n\\textraMenu\\n}) {\\n\\tlet clickListener = new BookmarkFolderPopup.ClickListener({\\n\\t\\tonLongClick(value, index) {},\\n\\t\\tclick(value, index) {\\n\\t\\t\\ttryCallBack(getDefaultValue(click, \\\"function\\\", null), [value, index]);\\n\\t\\t}\\n\\t});\\n\\ticonList = getDefaultValue(iconList, \\\"array\\\", []);\\n\\ticonList = getBookList(iconList);\\n\\n\\tlet custom = new BookmarkFolderPopup(getActivityContext())\\n\\t\\t.withTitle(getDefaultValue(title, \\\"string\\\", \\\"请选择\\\"))\\n\\t\\t.with(iconList, getDefaultValue(columns, \\\"number\\\", 2), clickListener);\\n\\tif (position !== void 0) {\\n\\t\\tcustom.withSelectedIndex(getNumberValue(position, v => v < iconList.size() && v >= -1, -1));\\n\\t}\\n\\tXPopup.setAnimationDuration(200);\\n\\tlet pop = builderXPopup();\\n\\tif (extraMenu instanceof IconExtraMenu) {\\n\\t\\tpop.setPopupCallback(newSimpleCallback({\\n\\t\\t\\tonCreated(basePopupView) {\\n\\t\\t\\t\\tlet linearLayout = basePopupView.getChildAt(0).getChildAt(0).getChildAt(0);\\n\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\tif (linearLayout) {\\n\\t\\t\\t\\t\\t\\tconst LinearLayout = android.widget.LinearLayout;\\n\\t\\t\\t\\t\\t\\tlet item = extraMenu.create(linearLayout, []);\\n\\t\\t\\t\\t\\t\\tlinearLayout.addView(item);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} catch (e) {\\n\\t\\t\\t\\t\\tlog(e.toString());\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}))\\n\\t}\\n\\tpop = pop.asCustom(custom);\\n\\tshowOnUI(pop);\\n\\treturn pop;\\n}\\n\\nfunction inputTwoRow({\\n\\ttitle,\\n\\ttitleHint,\\n\\turlHint,\\n\\ttitleDefault,\\n\\turlDefault,\\n\\tconfirm,\\n\\tcancel,\\n\\thideCancel,\\n\\tnoAutoSoft\\n}) {\\n\\tlet okListener = new InputPopup.OkListener({\\n\\t\\tok(text1, text2) {\\n\\t\\t\\ttryCallBack(getDefaultValue(confirm, \\\"function\\\", null), [text1, text2]);\\n\\t\\t}\\n\\t});\\n\\tlet cancelListener = new InputPopup.CancelListener({\\n\\t\\tcancel() {\\n\\t\\t\\ttryCallBack(getDefaultValue(cancel, \\\"function\\\", null));\\n\\t\\t}\\n\\t});\\n\\tlet custom = new InputPopup(getActivityContext())\\n\\t\\t.bind(\\n\\t\\t\\tgetDefaultValue(title, \\\"string\\\", \\\"输入框\\\"),\\n\\t\\t\\tgetDefaultValue(titleHint, \\\"string\\\", null),\\n\\t\\t\\tgetDefaultValue(titleDefault, \\\"string\\\", null),\\n\\t\\t\\tgetDefaultValue(urlHint, \\\"string\\\", null),\\n\\t\\t\\tgetDefaultValue(urlDefault, \\\"string\\\", null),\\n\\t\\t\\tokListener\\n\\t\\t)\\n\\t\\t.setCancelListener(cancelListener);\\n\\tlet pop = builderXPopup()\\n\\t\\t.autoOpenSoftInput(!noAutoSoft)\\n\\t\\t.autoFocusEditText(!noAutoSoft);\\n\\tif (hideCancel) {\\n\\t\\tpop.setPopupCallback(newSimpleCallback({\\n\\t\\t\\tonCreated(basePopupView) {\\n\\t\\t\\t\\tlet cancelTextView = basePopupView.findViewById(R.id.tv_cancel);\\n\\t\\t\\t\\tif (cancelTextView) {\\n\\t\\t\\t\\t\\tcancelTextView.setVisibility(8);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tlet dividerView = basePopupView.findViewById(R.id.xpopup_divider_h);\\n\\t\\t\\t\\tif (dividerView) {\\n\\t\\t\\t\\t\\tdividerView.setVisibility(8);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}));\\n\\t}\\n\\tpop = pop\\n\\t\\t.asCustom(custom);\\n\\tshowOnUI(pop);\\n\\treturn pop;\\n}\\n\\nfunction inputAutoRow({\\n\\ttitle,\\n\\thint,\\n\\tconfirm,\\n\\tcancel,\\n\\tokTitle,\\n\\tcancelTitle,\\n\\tdefaultValue,\\n\\thideCancel,\\n\\tnoAutoSoft\\n}) {\\n\\tlet okListener = new ConfirmPopup.OkListener({\\n\\t\\tok(text) {\\n\\t\\t\\ttryCallBack(getDefaultValue(confirm, \\\"function\\\", null), [text]);\\n\\t\\t},\\n\\t\\tcancel() {\\n\\t\\t\\ttryCallBack(getDefaultValue(cancel, \\\"function\\\", null));\\n\\t\\t}\\n\\t});\\n\\tlet custom = new ConfirmPopup(getActivityContext()).bind(getDefaultValue(title, \\\"string\\\", \\\"输入框\\\"), getDefaultValue(hint, \\\"string\\\", \\\"\\\"), okListener)\\n\\t\\t.setBtn(getDefaultValue(okTitle, \\\"string\\\", \\\"确认\\\"), getDefaultValue(cancelTitle, \\\"string\\\", \\\"取消\\\"));\\n\\tlet pop = builderXPopup()\\n\\t\\t.autoOpenSoftInput(!noAutoSoft)\\n\\t\\t.autoFocusEditText(!noAutoSoft);\\n\\n\\tpop.setPopupCallback(newSimpleCallback({\\n\\t\\tonCreated(basePopupView) {\\n\\t\\t\\tdefaultValue = getDefaultValue(defaultValue, \\\"string\\\", null);\\n\\t\\t\\tif (defaultValue) {\\n\\t\\t\\t\\tlet titleEdit = basePopupView.findViewById(R.id.edit_title);\\n\\t\\t\\t\\tif (titleEdit) {\\n\\t\\t\\t\\t\\ttitleEdit.setText(defaultValue);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\tif (hideCancel) {\\n\\t\\t\\t\\tlet cancelTextView = basePopupView.findViewById(R.id.tv_cancel);\\n\\t\\t\\t\\tif (cancelTextView) {\\n\\t\\t\\t\\t\\tcancelTextView.setVisibility(8);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tlet dividerView = basePopupView.findViewById(R.id.xpopup_divider_h);\\n\\t\\t\\t\\tif (dividerView) {\\n\\t\\t\\t\\t\\tdividerView.setVisibility(8);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}));\\n\\n\\tpop = pop\\n\\t\\t.asCustom(custom);\\n\\tshowOnUI(pop);\\n\\treturn pop;\\n}\\n\\nfunction inputConfirm({\\n\\ttitle,\\n\\tcontent,\\n\\tdefaultValue,\\n\\thint,\\n\\tconfirm,\\n\\tcancel,\\n\\ttextarea,\\n\\tmaxTextarea,\\n\\thideCancel,\\n\\tnoAutoSoft\\n}) {\\n\\tlet pop = builderXPopup()\\n\\t\\t.autoOpenSoftInput(!noAutoSoft)\\n\\t\\t.autoFocusEditText(!noAutoSoft);\\n\\tif (hideCancel) {\\n\\t\\tpop.setPopupCallback(newSimpleCallback({\\n\\t\\t\\tonCreated(basePopupView) {\\n\\t\\t\\t\\tlet cancelTextView = basePopupView.findViewById(R.id.tv_cancel);\\n\\t\\t\\t\\tif (cancelTextView) {\\n\\t\\t\\t\\t\\tcancelTextView.setVisibility(8);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tlet dividerView = basePopupView.findViewById(R.id.xpopup_divider2);\\n\\t\\t\\t\\tif (dividerView) {\\n\\t\\t\\t\\t\\tdividerView.setVisibility(8);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}));\\n\\t}\\n\\tpop = pop.asInputConfirm(getDefaultValue(title, \\\"string\\\", null), getDefaultValue(content, \\\"string\\\", null), getDefaultValue(defaultValue, \\\"string\\\", null), getDefaultValue(hint, \\\"string\\\", null), (text) => {\\n\\t\\ttryCallBack(getDefaultValue(confirm, \\\"function\\\", null), [text]);\\n\\t}, (text) => {\\n\\t\\ttryCallBack(getDefaultValue(cancel, \\\"function\\\", null), [text]);\\n\\t}, maxTextarea ? R.layout.xpopup_confirm_input_max : (textarea ? R.layout.xpopup_confirm_input : 0));\\n\\tshowOnUI(pop);\\n\\treturn pop;\\n}\\n\\nfunction confirm({\\n\\ttitle,\\n\\tcontent,\\n\\tconfirm,\\n\\tcancel,\\n\\tokTitle,\\n\\tcancelTitle,\\n\\thideCancel\\n}) {\\n\\tlet pop = builderXPopup()\\n\\t\\t.asConfirm(getDefaultValue(title, \\\"string\\\", null), getDefaultValue(content, \\\"string\\\", \\\"\\\"), getDefaultValue(cancelTitle, \\\"string\\\", \\\"取消\\\"), getDefaultValue(okTitle, \\\"string\\\", \\\"确认\\\"), () => {\\n\\t\\t\\ttryCallBack(getDefaultValue(confirm, \\\"function\\\", null));\\n\\t\\t}, () => {\\n\\t\\t\\ttryCallBack(getDefaultValue(cancel, \\\"function\\\", null));\\n\\t\\t}, !!hideCancel);\\n\\tshowOnUI(pop);\\n\\treturn pop;\\n}\\n\\nfunction SettingItem(...arr) {\\n\\tif (arr.length === 0) return new OfficeItem(\\\"\\\");\\n\\telse if (arr.length === 1) return new OfficeItem(String(arr[0]));\\n\\telse if (arr.length === 2 && typeof arr[1] === \\\"boolean\\\") return new OfficeItem(String(arr[0]), arr[1] ? 1 : -1);\\n\\telse if (arr.length === 2) return new OfficeItem(String(arr[0]), String(arr[1]));\\n\\telse if (arr.length === 3) return new OfficeItem(String(arr[0]), arr[1] ? 1 : -1, String(arr[2]));\\n}\\n\\nfunction selectBottomSettingMenu({\\n\\tclick,\\n\\toptions,\\n\\tonDismiss\\n}) {\\n\\tlet onItemClickListener = new SettingMenuPopup.OnItemClickListener({\\n\\t\\tonClick(str, officeItem, consumer) {\\n\\t\\t\\ttryCallBack(getDefaultValue(click, \\\"function\\\", null), [str, officeItem, () => consumer.accept(officeItem)]);\\n\\t\\t}\\n\\t});\\n\\toptions = options.filter(v => v instanceof OfficeItem);\\n\\tlet arrayList = new ArrayList();\\n\\toptions.forEach(v => arrayList.add(v));\\n\\n\\tlet custom = new SettingMenuPopup(getActivityContext(), \\\"设置\\\", arrayList, null, onItemClickListener);\\n\\tlet pop = builderXPopup()\\n\\t\\t.moveUpToKeyboard(false)\\n\\t\\t.setPopupCallback(newSimpleCallback({\\n\\t\\t\\tonDismiss() {\\n\\t\\t\\t\\ttryCallBack(onDismiss);\\n\\t\\t\\t}\\n\\t\\t}))\\n\\t\\t.asCustom(custom);\\n\\tshowOnUI(pop);\\n\\treturn pop;\\n}\\n \\nselectBottomSettingMenu.SettingItem = SettingItem;\\n\\n\\nfunction ResExtraInputBox({\\n\\thint,\\n\\tclick,\\n\\ttitle,\\n\\tonChange,\\n\\tdefaultValue,\\n\\ttitleVisible\\n}) {\\n\\tlet search;\\n\\tlet edit;\\n\\tthis.create = function(parentView, args) {\\n\\t\\targs = Array.isArray(args) ? args : [];\\n\\t\\tlet inputItem = android.view.LayoutInflater.from(getActivityContext()).inflate(R.layout.item_input, parentView, false);\\n\\t\\tsearch = inputItem.findViewById(R.id.search);\\n\\t\\tedit = inputItem.findViewById(R.id.edit);\\n\\t\\tlet clearBtn = inputItem.findViewById(R.id.clearBtn);\\n\\t\\tlet divider = inputItem.findViewById(R.id.divider);\\n\\t\\tlet pop_input_edit_bg = inputItem.findViewById(R.id.pop_input_edit_bg);\\n\\t\\tlet search_suggest = inputItem.findViewById(R.id.search_suggest);\\n\\t\\tif (typeof title === \\\"string\\\" && title) {\\n\\t\\t\\tsearch.setText(title);\\n\\t\\t} else {\\n\\t\\t\\tsearch.setText(\\\"确定\\\");\\n\\t\\t}\\n\\t\\tif (typeof titleVisible === \\\"boolean\\\" && !titleVisible) {\\n\\t\\t\\tsearch.setText(\\\"\\\");\\n\\t\\t\\tsearch.setPadding(0, 0, 0, 0);\\n\\t\\t\\tsearch.setVisibility(4);\\n\\t\\t\\tdivider.setVisibility(4);\\n\\t\\t}\\n\\t\\tif (typeof click === \\\"function\\\") {\\n\\t\\t\\tsearch.setOnClickListener(new android.view.View.OnClickListener({\\n\\t\\t\\t\\tonClick() {\\n\\t\\t\\t\\t\\ttryCallBack(click, [String(edit.getText())].concat(args));\\n\\t\\t\\t\\t}\\n\\t\\t\\t}));\\n\\t\\t}\\n\\n\\t\\tif (typeof hint === \\\"string\\\" && hint) {\\n\\t\\t\\tedit.setHint(hint);\\n\\t\\t}\\n\\n\\t\\tif (typeof onChange === \\\"function\\\") {\\n\\t\\t\\tedit.addTextChangedListener(new android.text.TextWatcher({\\n\\t\\t\\t\\tonTextChanged() {},\\n\\t\\t\\t\\tbeforeTextChanged() {},\\n\\t\\t\\t\\tafterTextChanged(s) {\\n\\t\\t\\t\\t\\tlet text;\\n\\t\\t\\t\\t\\tif (s) {\\n\\t\\t\\t\\t\\t\\ttext = String(s.toString());\\n\\t\\t\\t\\t\\t\\ttryCallBack(onChange, [text].concat(args), true);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}));\\n\\t\\t}\\n\\t\\tif (typeof defaultValue === \\\"string\\\") {\\n\\t\\t\\tedit.setText(defaultValue);\\n\\t\\t\\tlet len = defaultValue.length;\\n\\t\\t\\tedit.setSelection(len, len);\\n\\t\\t}\\n\\t\\treturn inputItem;\\n\\t}\\n\\tthis.setTitle = (title) => {\\n\\t\\tif (search && typeof title === \\\"string\\\") {\\n\\t\\t\\tsearch.setText(title);\\n\\t\\t}\\n\\t}\\n\\tthis.setDefaultValue = (defaultValue) => {\\n\\t\\tif (edit && typeof defaultValue === \\\"string\\\") {\\n\\t\\t\\tedit.setText(defaultValue);\\n\\t\\t\\tlet len = defaultValue.length;\\n\\t\\t\\tedit.setSelection(len, len);\\n\\t\\t}\\n\\t}\\n\\tthis.setHint = (hint) => {\\n\\t\\tif (edit && typeof hint === \\\"string\\\" && hint) {\\n\\t\\t\\tedit.setHint(hint);\\n\\t\\t}\\n\\t}\\n}\\n\\nfunction selectBottomResIcon({\\n\\tclick,\\n\\tmenuClick,\\n\\ttitle,\\n\\ticonList,\\n\\tcolumns,\\n\\theight,\\n\\tnoAutoDismiss,\\n\\textraInputBox,\\n\\tposition,\\n\\ttoPosition,\\n\\tbeforeShow\\n}) {\\n\\tlet clickListener = new CustomCenterRecyclerViewPopup.ClickListener({\\n\\t\\tonLongClick(value, index) {},\\n\\t\\tclick(value, index) {}\\n\\t});\\n\\ticonList = getDefaultValue(iconList, \\\"array\\\", []);\\n\\tlet booksList = getBookList(iconList);\\n\\tlet rv = null,\\n\\t\\ttv = null;\\n\\n\\tlet scrollToPosition = (pos, isScroll) => {\\n\\t\\tif (typeof pos === \\\"number\\\" && rv && pos < booksList.length && pos >= -1) {\\n\\t\\t\\tif (isScroll) {\\n\\t\\t\\t\\trv.smoothScrollToPosition(pos);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\trv.scrollToPosition(pos);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n\\tlet setTitle = title => {\\n\\t\\tif (tv) tv.setText(String(title)); \\n\\t}\\n\\tlet custom = new CustomBottomRecyclerViewPopup(getActivityContext())\\n\\t\\t.withTitle(getDefaultValue(title, \\\"string\\\", \\\"请选择\\\"))\\n\\t\\t.withHeight(getNumberValue(height, v => v <= 1 && v > 0, 0.75))\\n\\t\\t.dismissWhenClick(!noAutoDismiss)\\n\\t\\t.with([], getDefaultValue(columns, \\\"number\\\", 2), clickListener)\\n\\t\\t.withOnCreateCallback((basePopupView) => {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tlet recyclerView = basePopupView.findViewById(R.id.recyclerView);\\n\\t\\t\\t\\ttv = custom.findViewById(R.id.title);\\n\\t\\t\\t\\tlet linearLayout;\\n\\t\\t\\t\\tif (recyclerView) {\\n\\t\\t\\t\\t\\trv = recyclerView;\\n\\t\\t\\t\\t\\trecyclerView.setAdapter(iconAdapter);\\n\\t\\t\\t\\t\\tPackages.androidx.core.view.ViewCompat.setBackground(recyclerView, Packages.androidx.core.content.ContextCompat.getDrawable(getActivityContext(), R.drawable.bg_round_all_rice));\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif (recyclerView && (linearLayout = recyclerView.getParent()) && extraInputBox instanceof ResExtraInputBox) {\\n\\t\\t\\t\\t\\tlet inputItem = extraInputBox.create(linearLayout, [resOptionsManage]);\\n\\t\\t\\t\\t\\tlet params = inputItem.getLayoutParams();\\n\\t\\t\\t\\t\\tparams.setMargins(35, 0, 35, 0);\\n\\t\\t\\t\\t\\tinputItem.setLayoutParams(params);\\n\\t\\t\\t\\t\\tlinearLayout.addView(inputItem, 1);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tscrollToPosition(toPosition);\\n\\t\\t\\t} catch (e) {\\n\\t\\t\\t\\tlog(e.toString());\\n\\t\\t\\t}\\n\\t\\t});\\n\\tlet iconAdapter = new com.example.hikerview.ui.home.view.BookmarkFolderAdapter(getActivityContext(), booksList, (v, i) => {\\n\\t\\tlet item = booksList.get(i);\\n\\t\\tlet items = {\\n\\t\\t\\ticon: String(item.getIcon()),\\n\\t\\t\\ttitle: String(item.getTitle())\\n\\t\\t};\\n\\t\\tlet func = () => tryCallBack(getDefaultValue(click, \\\"function\\\", null), [items, Number(i), resOptionsManage]);\\n\\t\\tif (noAutoDismiss) {\\n\\t\\t\\tfunc();\\n\\t\\t} else {\\n\\t\\t\\tcustom.dismissWith(func);\\n\\t\\t}\\n\\t}, false);\\n\\ticonAdapter.setSelectedIndex(getNumberValue(position, v => v < iconList.length && v >= -1, -1));\\n\\tlet resOptionsManage = {\\n\\t\\tsetTitle: setTitle,\\n\\t\\tscrollToPosition: scrollToPosition,\\n\\t\\tgetSize: () => Number(booksList.length),\\n\\t\\tchange(list, position) {\\n\\t\\t\\tbooksList.length = 0;\\n\\t\\t\\tObject.assign(booksList, getBookList(list));\\n\\t\\t\\tif (position !== void 0) {\\n\\t\\t\\t\\ticonAdapter.setSelectedIndex(getNumberValue(position, v => v < iconList.length && v >= -1, -1));\\n\\t\\t\\t}\\n\\t\\t\\ticonAdapter.notifyDataSetChanged();\\n\\t\\t},\\n\\t\\tsetSelectedIndex(position) {\\n\\t\\t\\ticonAdapter.setSelectedIndex(getNumberValue(position, v => v < iconList.length && v >= -1, -1));\\n\\t\\t\\ticonAdapter.notifyDataSetChanged();\\n\\t\\t},\\n\\t\\tremoved(pos) {\\n\\t\\t\\tif (pos >= booksList.size()) {\\n\\t\\t\\t\\tthrow new Error(\\\"pos大于列表长度\\\");\\n\\t\\t\\t}\\n\\t\\t\\ticonAdapter.notifyItemRemoved(pos);\\n\\t\\t},\\n\\t\\tchangeColumns: custom.changeSpanCount.bind(custom)\\n\\t}\\n\\tif (typeof menuClick === \\\"function\\\") {\\n\\t\\tcustom.withMenu(new android.view.View.OnClickListener({\\n\\t\\t\\tonClick() {\\n\\t\\t\\t\\ttryCallBack(getDefaultValue(menuClick, \\\"function\\\", null), [resOptionsManage]);\\n\\t\\t\\t}\\n\\t\\t}));\\n\\t}\\n\\tlet pop = builderXPopup();\\n\\tpop.setPopupCallback(newSimpleCallback({\\n\\t\\tbeforeShow(basePopupView) {\\n\\t\\t\\tscrollToPosition(toPosition);\\n\\t\\t\\ttryCallBack(getDefaultValue(beforeShow, \\\"function\\\", null), [pop, resOptionsManage]);\\n\\t\\t}\\n\\t}));\\n\\tpop = pop.moveUpToKeyboard(false).asCustom(custom);\\n\\tshowOnUI(pop);\\n\\treturn pop;\\n}\\n\\nfunction selectBottomRes({\\n\\tclick,\\n\\tlongClick,\\n\\tmenuClick,\\n\\ttitle,\\n\\toptions,\\n\\tcolumns,\\n\\theight,\\n\\tnoAutoDismiss,\\n\\textraInputBox,\\n\\ttoPosition,\\n\\tbeforeShow,\\n\\tonDismiss\\n}) {\\n\\tlet clickListener = new CustomCenterRecyclerViewPopup.ClickListener({\\n\\t\\tonLongClick(value, index) {\\n\\t\\t\\ttryCallBack(getDefaultValue(longClick, \\\"function\\\", null), [value, index, resOptionsManage]);\\n\\t\\t},\\n\\t\\tclick(value, index) {\\n\\t\\t\\ttryCallBack(getDefaultValue(click, \\\"function\\\", null), [value, index, resOptionsManage]);\\n\\t\\t}\\n\\t});\\n\\tconst list = getStringArray(options, []);\\n\\tlet rv = null,\\n\\t\\ttv = null;\\n\\tlet scrollToPosition = (pos, isScroll) => {\\n\\t\\tif (typeof pos === \\\"number\\\" && rv && pos < list.length && pos >= -1) {\\n\\t\\t\\tif (isScroll) {\\n\\t\\t\\t\\trv.smoothScrollToPosition(pos);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\trv.scrollToPosition(pos);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n\\tlet setTitle = title => {\\n\\t\\tif (tv) tv.setText(String(title));\\n\\t}\\n\\tlet custom = new CustomBottomRecyclerViewPopup(getActivityContext())\\n\\t\\t.withTitle(getDefaultValue(title, \\\"string\\\", \\\"请选择\\\"))\\n\\t\\t.withHeight(getNumberValue(height, v => v <= 1 && v > 0, 0.75))\\n\\t\\t.dismissWhenClick(!noAutoDismiss)\\n\\t\\t.with(list, getDefaultValue(columns, \\\"number\\\", 2), clickListener)\\n\\t\\t.withOnCreateCallback((basePopupView) => {\\n\\t\\t\\tlet recyclerView = basePopupView.findViewById(R.id.recyclerView);\\n\\t\\t\\trv = recyclerView;\\n\\t\\t\\ttv = custom.findViewById(R.id.title);\\n\\t\\t\\tlet linearLayout;\\n\\t\\t\\tif (recyclerView && (linearLayout = recyclerView.getParent()) && extraInputBox instanceof ResExtraInputBox) {\\n\\n\\t\\t\\t\\tlet inputItem = extraInputBox.create(linearLayout, [resOptionsManage]);\\n\\t\\t\\t\\tlet params = inputItem.getLayoutParams();\\n\\t\\t\\t\\tparams.setMargins(35, 0, 35, 0);\\n\\t\\t\\t\\tinputItem.setLayoutParams(params);\\n\\t\\t\\t\\tlinearLayout.addView(inputItem, 1);\\n\\t\\t\\t}\\n\\t\\t});\\n\\tlet resOptionsManage = {\\n\\t\\tlist: list,\\n\\t\\tsetTitle: setTitle,\\n\\t\\tscrollToPosition: scrollToPosition,\\n\\t\\tchange() {\\n\\t\\t\\tcheckStringArray(list);\\n\\t\\t\\tcustom.notifyDataChange();\\n\\t\\t},\\n\\t\\tremoved(pos) {\\n\\t\\t\\tcheckStringArray(list);\\n\\t\\t\\tif (pos >= list.length) {\\n\\t\\t\\t\\tthrow new Error(\\\"pos大于列表长度\\\");\\n\\t\\t\\t}\\n\\t\\t\\tcustom.notifyDataRemoved(pos);\\n\\t\\t},\\n\\t\\tchangeColumns: custom.changeSpanCount.bind(custom)\\n\\t}\\n\\tif (typeof menuClick === \\\"function\\\") {\\n\\t\\tcustom.withMenu(new android.view.View.OnClickListener({\\n\\t\\t\\tonClick() {\\n\\t\\t\\t\\ttryCallBack(getDefaultValue(menuClick, \\\"function\\\", null), [resOptionsManage]);\\n\\t\\t\\t}\\n\\t\\t}));\\n\\t}\\n\\tlet pop = builderXPopup();\\n\\tpop.setPopupCallback(newSimpleCallback({\\n\\t\\tbeforeShow(basePopupView) {\\n\\t\\t\\tscrollToPosition(toPosition);\\n\\t\\t\\ttryCallBack(getDefaultValue(beforeShow, \\\"function\\\", null), [pop, resOptionsManage]);\\n\\t\\t},\\n\\t\\tonDismiss(basePopupView) {\\n\\t\\t\\ttryCallBack(getDefaultValue(onDismiss, \\\"function\\\", null), []);\\n\\t\\t}\\n\\t}));\\n\\tpop = pop.moveUpToKeyboard(false).asCustom(custom);\\n\\tshowOnUI(pop);\\n\\treturn pop;\\n}\\n\\nfunction infoBottom({\\n\\ttitle,\\n\\toptions,\\n\\tclick,\\n\\tlongClick\\n}) {\\n\\tlet clickListener = new com.example.hikerview.ui.setting.file.FileDetailAdapter.OnClickListener({\\n\\t\\tclick(value) {\\n\\t\\t\\ttryCallBack(getDefaultValue(click, \\\"function\\\", null), [value]);\\n\\t\\t},\\n\\t\\tlongClick(view, value) {\\n\\t\\t\\ttryCallBack(getDefaultValue(longClick, \\\"function\\\", null), [value]);\\n\\t\\t}\\n\\t});\\n\\n\\tlet custom = new FileDetailPopup(\\n\\t\\t\\tgetActivityContext(),\\n\\t\\t\\tgetDefaultValue(title, \\\"string\\\", null),\\n\\t\\t\\tgetStringArray(options, [])\\n\\t\\t)\\n\\t\\t.withClickListener(clickListener);\\n\\tlet pop = builderXPopup()\\n\\t\\t.moveUpToKeyboard(false)\\n\\t\\t.asCustom(custom);\\n\\tshowOnUI(pop);\\n\\treturn pop;\\n}\\n\\nfunction copyBottom(title, content) {\\n\\tif (cannotTouchUI) return null;\\n\\tlet custom = new CustomCopyPopup(getActivityContext())\\n\\t\\t.with(\\n\\t\\t\\tgetDefaultValue(title, \\\"string\\\", null),\\n\\t\\t\\tgetDefaultValue(content, \\\"string\\\", \\\"\\\"),\\n\\t\\t);\\n\\tlet pop = builderXPopup()\\n\\t\\t.moveUpToKeyboard(false)\\n\\t\\t.asCustom(custom);\\n\\tshowOnUI(pop);\\n\\treturn pop;\\n}\\n\\nfunction selectCenterColor(colors, callBack) {\\n\\tif (typeof colors === \\\"function\\\") {\\n\\t\\tcallBack = colors;\\n\\t}\\n\\tcolors = getStringArray(colors, []);\\n\\tlet custom = new CustomColorPopup(getActivityContext());\\n\\tcustom.setColorSelect(new CustomColorPopup.OnColorSelect({\\n\\t\\tselect(value) {\\n\\t\\t\\ttryCallBack(getDefaultValue(callBack, \\\"function\\\", null), [value]);\\n\\t\\t}\\n\\t}));\\n\\tlet pop = builderXPopup()\\n\\t\\t.setPopupCallback(newSimpleCallback({\\n\\t\\t\\tonCreated(basePopupView) {\\n\\t\\t\\t\\tconst count = colors.length > 8 ? 8 : colors.length;\\n\\t\\t\\t\\tfor (let i = 0; i < count; i++) {\\n\\t\\t\\t\\t\\tif (colors[i]) {\\n\\t\\t\\t\\t\\t\\tlet color = android.graphics.Color.parseColor(colors[i]);\\n\\t\\t\\t\\t\\t\\tlet relativeLayout = basePopupView.findViewById(R.id[\\\"color\\\" + (i + 1) + \\\"_bg\\\"]);\\n\\t\\t\\t\\t\\t\\trelativeLayout.setTag(colors[i]);\\n\\t\\t\\t\\t\\t\\trelativeLayout.getChildAt(0).setCardBackgroundColor(color);\\n\\t\\t\\t\\t\\t\\trelativeLayout.getChildAt(1).setTextColor(color);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}))\\n\\t\\t.asCustom(custom);\\n\\tshowOnUI(pop);\\n\\treturn pop;\\n}\\n\\nfunction chefSnackbarMake({\\n\\tcontent,\\n\\tduration,\\n\\tconfirm,\\n\\tcancel,\\n\\tokTitle,\\n\\tcancelTitle\\n}) {\\n\\tlet decorView = getContext().getWindow().getDecorView();\\n\\tChefSnackbar.Companion.make(decorView)\\n\\t\\t.setText(getDefaultValue(content, \\\"string\\\", \\\"\\\"))\\n\\t\\t.setDuration(getDefaultValue(okTitle, \\\"number\\\", 0))\\n\\t\\t.setAction(getDefaultValue(okTitle, \\\"string\\\", \\\"确认\\\"), function() {\\n\\t\\t\\ttryCallBack(getDefaultValue(confirm, \\\"function\\\", null));\\n\\t\\t})\\n\\t\\t.setCancelButton(getDefaultValue(cancelTitle, \\\"string\\\", \\\"取消\\\"), function() {\\n\\t\\t\\ttryCallBack(getDefaultValue(cancel, \\\"function\\\", null));\\n\\t\\t})\\n\\t\\t.show();\\n}\\n\\nfunction toastMeg(text, type) {\\n\\tswitch (type) {\\n\\t\\tcase toastMeg.LC:\\n\\t\\t\\tToastMgr.longCenter(getContext(), String(text));\\n\\t\\t\\tbreak;\\n\\t\\tcase toastMeg.SC:\\n\\t\\t\\tToastMgr.shortCenter(getContext(), String(text));\\n\\t\\t\\tbreak;\\n\\t\\tcase toastMeg.LB:\\n\\t\\t\\tToastMgr.longBottomCenter(getContext(), String(text));\\n\\t\\t\\tbreak;\\n\\t\\tcase toastMeg.SC:\\n\\t\\tdefault:\\n\\t\\t\\tToastMgr.shortBottomCenter(getContext(), String(text));\\n\\t\\t\\tbreak;\\n\\t}\\n}\\ntoastMeg.LC = 1;\\ntoastMeg.SC = 2;\\ntoastMeg.LB = 3;\\ntoastMeg.SB = 4;\\n\\nfunction getClipTopData() {\\n\\ttry {\\n\\t\\tconst Context = android.content.Context;\\n\\t\\tconst context = getContext();\\n\\t\\tlet clipboard = context.getSystemService(Context.CLIPBOARD_SERVICE);\\n\\t\\tlet clipData = clipboard.getPrimaryClip();\\n\\t\\tif (clipData != null && clipData.getItemCount() > 0) {\\n\\t\\t\\tlet text = clipData.getItemAt(0).getText();\\n\\t\\t\\tif (text != null) {\\n\\t\\t\\t\\treturn String(text.toString());\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn \\\"\\\";\\n\\t} catch (e) {\\n\\t\\tlog(e.toString());\\n\\t\\treturn \\\"\\\";\\n\\t}\\n}\\n\\nfunction confirmSync({\\n\\ttitle,\\n\\tcontent,\\n\\tokTitle,\\n\\tcancelTitle,\\n\\thideCancel,\\n\\tnoDismissOnBack,\\n\\tnoDismissOnBlank\\n}) {\\n\\tlet countDownLatch = new java.util.concurrent.CountDownLatch(1);\\n\\tlet result = false;\\n\\tshowOnUI(\\n\\t\\tbuilderXPopup()\\n\\t\\t.dismissOnTouchOutside(!noDismissOnBlank)\\n\\t\\t.dismissOnBackPressed(!noDismissOnBack)\\n\\t\\t.setPopupCallback(newSimpleCallback({\\n\\t\\t\\tonDismiss(basePopupView) {\\n\\t\\t\\t\\tcountDownLatch.countDown();\\n\\t\\t\\t}\\n\\t\\t}))\\n\\t\\t.asConfirm(getDefaultValue(title, \\\"string\\\", null), getDefaultValue(content, \\\"string\\\", \\\"\\\"), getDefaultValue(cancelTitle, \\\"string\\\", \\\"取消\\\"), getDefaultValue(okTitle, \\\"string\\\", \\\"确认\\\"), () => {\\n\\t\\t\\tresult = true;\\n\\t\\t}, () => {\\n\\t\\t\\tresult = false;\\n\\t\\t}, !!hideCancel)\\n\\t);\\n\\tcountDownLatch.await();\\n\\treturn result;\\n}\\n\\nfunction inputConfirmSync({\\n\\ttitle,\\n\\tcontent,\\n\\tdefaultValue,\\n\\thint,\\n\\ttextarea,\\n\\tmaxTextarea,\\n\\thideCancel,\\n\\tnoAutoSoft,\\n\\tnoDismissOnBack,\\n\\tnoDismissOnBlank\\n}) {\\n\\tlet countDownLatch = new java.util.concurrent.CountDownLatch(1);\\n\\tlet result = \\\"\\\";\\n\\tshowOnUI(\\n\\t\\tbuilderXPopup()\\n\\t\\t.autoOpenSoftInput(!noAutoSoft)\\n\\t\\t.autoFocusEditText(!noAutoSoft)\\n\\t\\t.dismissOnTouchOutside(!noDismissOnBlank)\\n\\t\\t.dismissOnBackPressed(!noDismissOnBack)\\n\\t\\t.setPopupCallback(newSimpleCallback({\\n\\t\\t\\tonCreated(basePopupView) {\\n\\t\\t\\t\\tif (hideCancel) {\\n\\t\\t\\t\\t\\tlet cancelTextView = basePopupView.findViewById(R.id.tv_cancel);\\n\\t\\t\\t\\t\\tif (cancelTextView) {\\n\\t\\t\\t\\t\\t\\tcancelTextView.setVisibility(8);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tlet dividerView = basePopupView.findViewById(R.id.xpopup_divider2);\\n\\t\\t\\t\\t\\tif (dividerView) {\\n\\t\\t\\t\\t\\t\\tdividerView.setVisibility(8);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\tonDismiss(basePopupView) {\\n\\t\\t\\t\\tcountDownLatch.countDown();\\n\\t\\t\\t}\\n\\t\\t}))\\n\\t\\t.asInputConfirm(getDefaultValue(title, \\\"string\\\", null), getDefaultValue(content, \\\"string\\\", null), getDefaultValue(defaultValue, \\\"string\\\", null), getDefaultValue(hint, \\\"string\\\", null), (text) => {\\n\\t\\t\\tresult = text;\\n\\t\\t}, null, maxTextarea ? R.layout.xpopup_confirm_input_max : (textarea ? R.layout.xpopup_confirm_input : 0))\\n\\t);\\n\\tcountDownLatch.await();\\n\\treturn result;\\n}\\n\\nfunction dialogShowOnUI(dialogBuilder, callBack) {\\n\\trunOnUI(() => {\\n\\t\\tlet dialog = dialogBuilder.create();\\n\\t\\tDialogUtil.INSTANCE.showAsCard(getActivityContext(), dialog);\\n\\t\\tif (callBack) {\\n\\t\\t\\tcallBack(dialog);\\n\\t\\t}\\n\\n\\t});\\n}\\n\\nfunction setAlertDialogButton({\\n\\trightTitle,\\n\\trightClick,\\n\\tleftTitle,\\n\\tleftClick,\\n\\tcenterTitle,\\n\\tcenterClick\\n}, dialogBuilder, getParam) {\\n\\tif (rightTitle || rightClick) {\\n\\t\\trightClick = getDefaultValue(rightClick, \\\"function\\\", null);\\n\\t\\tdialogBuilder.setPositiveButton(getDefaultValue(rightTitle, \\\"string\\\", \\\"确认\\\"), (dialog) => {\\n\\t\\t\\ttryCallBack(rightClick, getParam(dialog));\\n\\t\\t});\\n\\t}\\n\\tif (leftTitle || leftClick) {\\n\\t\\tleftClick = getDefaultValue(leftClick, \\\"function\\\", null);\\n\\t\\tdialogBuilder.setNeutralButton(getDefaultValue(leftTitle, \\\"string\\\", \\\"忽略\\\"), (dialog) => {\\n\\t\\t\\ttryCallBack(leftClick, getParam(dialog));\\n\\t\\t});\\n\\t}\\n\\tif (centerTitle || centerClick) {\\n\\t\\tcenterClick = getDefaultValue(centerClick, \\\"function\\\", null);\\n\\t\\tdialogBuilder.setNegativeButton(getDefaultValue(centerTitle, \\\"string\\\", \\\"取消\\\"), (dialog) => {\\n\\t\\t\\ttryCallBack(centerClick, getParam(dialog));\\n\\t\\t});\\n\\t}\\n}\\n\\nfunction setAlertDialogButtonTitle({\\n\\trightTitle,\\n\\trightClick,\\n\\tleftTitle,\\n\\tleftClick,\\n\\tcenterTitle,\\n\\tcenterClick\\n}, dialogBuilder) {\\n\\tif (rightTitle || rightClick) {\\n\\t\\tdialogBuilder.setPositiveButton(getDefaultValue(rightTitle, \\\"string\\\", \\\"确认\\\"), null);\\n\\t}\\n\\tif (leftTitle || leftClick) {\\n\\t\\tdialogBuilder.setNeutralButton(getDefaultValue(leftTitle, \\\"string\\\", \\\"忽略\\\"), null);\\n\\t}\\n\\tif (centerTitle || centerClick) {\\n\\t\\tdialogBuilder.setNegativeButton(getDefaultValue(centerTitle, \\\"string\\\", \\\"取消\\\"), null);\\n\\t}\\n}\\n\\nfunction setAlertDialogButtonFunc({\\n\\trightTitle,\\n\\trightClick,\\n\\tleftTitle,\\n\\tleftClick,\\n\\tcenterTitle,\\n\\tcenterClick\\n}, dialog, getParam) {\\n\\tconst DialogInterface = android.content.DialogInterface;\\n\\tif (rightTitle || rightClick) {\\n\\t\\trightClick = getDefaultValue(rightClick, \\\"function\\\", null);\\n\\t\\tdialog.getButton(DialogInterface.BUTTON_POSITIVE).setOnClickListener(() => {\\n\\t\\t\\ttryCallBack(rightClick, getParam(dialog));\\n\\t\\t});\\n\\t}\\n\\tif (leftTitle || leftClick) {\\n\\t\\tleftClick = getDefaultValue(leftClick, \\\"function\\\", null);\\n\\t\\tdialog.getButton(DialogInterface.BUTTON_NEUTRAL).setOnClickListener(() => {\\n\\t\\t\\ttryCallBack(leftClick, getParam(dialog));\\n\\t\\t});\\n\\t}\\n\\tif (centerTitle || centerClick) {\\n\\t\\tcenterClick = getDefaultValue(centerClick, \\\"function\\\", null);\\n\\t\\tdialog.getButton(DialogInterface.BUTTON_NEGATIVE).setOnClickListener(() => {\\n\\t\\t\\ttryCallBack(centerClick, getParam(dialog));\\n\\t\\t});\\n\\t}\\n}\\n\\nfunction multiChoice({\\n\\ttitle,\\n\\toptions,\\n\\tcheckedIndexs,\\n\\tnoAutoDismiss,\\n\\tonChoice,\\n}) {\\n\\toptions = getStringArray(options, []);\\n\\tcheckedIndexs = getDefaultValue(checkedIndexs, \\\"array\\\", []);\\n\\tlet checkedItems = new Array(options.length).fill(false);\\n\\tcheckedIndexs.forEach(i => checkedItems[i] = true);\\n\\tcheckedItems.length = options.length;\\n\\tonChoice = getDefaultValue(onChoice, \\\"function\\\", null);\\n\\tlet setItemChecked = (dialog, newcheckedIndexs) => {\\n\\t\\tif (!Array.isArray(newcheckedIndexs)) return;\\n\\n\\t\\tcheckedItems.fill(false);\\n\\t\\tnewcheckedIndexs.forEach(i => checkedItems[i] = true);\\n\\n\\t\\tlet listView = dialog.getListView();\\n\\n\\t\\tfor (let i = 0; i < options.length; i++) {\\n\\t\\t\\tlistView.setItemChecked(i, checkedItems[i]);\\n\\t\\t}\\n\\t\\tlistView.getAdapter().notifyDataSetChanged();\\n\\t};\\n\\tlet dialogBuilder = new AlertDialog.Builder(getActivityContext())\\n\\t\\t.setTitle(getDefaultValue(title, \\\"string\\\", null))\\n\\t\\t.setMultiChoiceItems(options, checkedItems, (v, i, b) => {\\n\\t\\t\\tcheckedItems[i] = b;\\n\\t\\t\\ttryCallBack(onChoice, [i, b]);\\n\\t\\t});\\n\\n\\tif (noAutoDismiss) {\\n\\t\\tsetAlertDialogButtonTitle(arguments[0], dialogBuilder);\\n\\t\\tdialogShowOnUI(dialogBuilder, (dialog) => {\\n\\t\\t\\tsetAlertDialogButtonFunc(arguments[0], dialog, () => [options, checkedItems, setItemChecked.bind(null, dialog), dialog.dismiss.bind(dialog)]);\\n\\t\\t});\\n\\t} else {\\n\\t\\tsetAlertDialogButton(arguments[0], dialogBuilder, () => [options, checkedItems]);\\n\\t\\tdialogShowOnUI(dialogBuilder);\\n\\t}\\n}\\n\\nfunction getSeekAndLayout(max, pos, onChange) {\\n\\tconst Bundle = android.os.Bundle;\\n\\tconst LinearLayout = android.widget.LinearLayout;\\n\\tconst SeekBar = android.widget.SeekBar;\\n\\tconst TextView = android.widget.TextView;\\n\\tconst Gravity = android.view.Gravity;\\n\\tconst View = android.view.View;\\n\\tconst LayoutParams = android.view.ViewGroup.LayoutParams;\\n\\tconst RelativeLayout = android.widget.RelativeLayout;\\n\\tconst ImageView = android.widget.ImageView;\\n\\tconst Spanned = android.text.Spanned;\\n\\tconst Html = android.text.Html;\\n\\tlet linearLayout = new LinearLayout(getActivityContext());\\n\\tlinearLayout.setOrientation(LinearLayout.VERTICAL);\\n\\tlinearLayout.setLayoutParams(new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT));\\n\\tlinearLayout.setPadding(65, 50, 60, 50);\\n\\n\\tlet titleStart = new TextView(getActivityContext());\\n\\ttitleStart.setId(View.generateViewId());\\n\\ttitleStart.setLayoutParams(new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT));\\n\\ttitleStart.setTextSize(17);\\n\\ttitleStart.setPadding(0, 0, 0, 20);\\n\\tlet initText = tryCallBack(onChange, [pos, max, Html.fromHtml], true);\\n\\tif (typeof initText === \\\"string\\\" || initText instanceof Spanned) {\\n\\t\\ttitleStart.setText(initText);\\n\\t}\\n\\tlet relativeLayout = new RelativeLayout(getActivityContext());\\n\\trelativeLayout.setLayoutParams(new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT));\\n\\n\\tlet startImgStart = new ImageView(getActivityContext());\\n\\tstartImgStart.setId(View.generateViewId());\\n\\tstartImgStart.setLayoutParams(new LayoutParams(32, 32));\\n\\tstartImgStart.setPadding(4, 4, 4, 4);\\n\\tstartImgStart.setImageResource(R.drawable.ic_arrow_start);\\n\\n\\tlet startImgEnd = new ImageView(getActivityContext());\\n\\tstartImgEnd.setId(View.generateViewId());\\n\\tstartImgEnd.setLayoutParams(new LayoutParams(32, 32));\\n\\tstartImgEnd.setPadding(4, 4, 4, 4);\\n\\tstartImgEnd.setImageResource(R.drawable.ic_arrow_end);\\n\\n\\tlet seekBar = new SeekBar(getActivityContext());\\n\\tseekBar.setLayoutParams(new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT));\\n\\tseekBar.setMax(max);\\n\\tseekBar.setProgress(pos);\\n\\n\\tlinearLayout.addView(titleStart);\\n\\tlinearLayout.addView(relativeLayout);\\n\\n\\tlet layoutParams = new RelativeLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);\\n\\tlayoutParams.addRule(RelativeLayout.CENTER_VERTICAL, RelativeLayout.TRUE);\\n\\tstartImgStart.setLayoutParams(layoutParams);\\n\\trelativeLayout.addView(startImgStart);\\n\\n\\tlayoutParams = new RelativeLayout.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);\\n\\tlayoutParams.addRule(RelativeLayout.ALIGN_PARENT_END, RelativeLayout.TRUE);\\n\\tlayoutParams.addRule(RelativeLayout.CENTER_VERTICAL, RelativeLayout.TRUE);\\n\\tstartImgEnd.setLayoutParams(layoutParams);\\n\\trelativeLayout.addView(startImgEnd);\\n\\n\\tlayoutParams = new RelativeLayout.LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);\\n\\tlayoutParams.addRule(RelativeLayout.END_OF, startImgStart.getId());\\n\\tlayoutParams.addRule(RelativeLayout.START_OF, startImgEnd.getId());\\n\\tlayoutParams.addRule(RelativeLayout.CENTER_VERTICAL, RelativeLayout.TRUE);\\n\\tseekBar.setLayoutParams(layoutParams);\\n\\trelativeLayout.addView(seekBar);\\n\\n\\tstartImgStart.setOnClickListener(() => {\\n\\t\\tlet progress = seekBar.getProgress();\\n\\t\\tif (progress <= 0 || progress > max) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\tseekBar.setProgress(progress - 1);\\n\\t});\\n\\tstartImgEnd.setOnClickListener(() => {\\n\\t\\tlet progress = seekBar.getProgress();\\n\\t\\tif (progress < 0 || progress >= max) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\tseekBar.setProgress(progress + 1);\\n\\t});\\n\\tseekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener({\\n\\t\\tonProgressChanged(seekBar, progress, fromUser) {\\n\\t\\t\\tlet res = tryCallBack(onChange, [progress, max, Html.fromHtml], true);\\n\\t\\t\\tif (typeof res === \\\"string\\\" || initText instanceof Spanned) {\\n\\t\\t\\t\\ttitleStart.setText(res);\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tonStartTrackingTouch(seekBar) {},\\n\\t\\tonStopTrackingTouch(seekBar) {}\\n\\t}));\\n\\treturn [seekBar, linearLayout];\\n}\\n\\nfunction seekCenter({\\n\\ttitle,\\n\\tmax,\\n\\tpos,\\n\\tonChange,\\n}) {\\n\\tmax = parseInt(max), pos = parseInt(pos) || 0;\\n\\tif (!max || max < pos || pos < 0) {\\n\\t\\tthrow Error(\\\"max和pos必须为整数，且max>0,max>=pos>=0\\\");\\n\\t}\\n\\tlet builder = new AlertDialog.Builder(getActivityContext());\\n\\tbuilder.setTitle(getDefaultValue(title, \\\"string\\\", null));\\n\\tlet [seekBar, linearLayout] = getSeekAndLayout(max, pos, onChange);\\n\\tsetAlertDialogButton(arguments[0], builder, () => [Number(seekBar.getProgress()), max]);\\n\\tbuilder.setView(linearLayout);\\n\\tdialogShowOnUI(builder);\\n}\\n\\nfunction canBiometric() {\\n\\treturn Number(BiometricManager.from(getActivityContext()).canAuthenticate())\\n}\\n\\nfunction checkByBiometric(success) {\\n\\tif (typeof success !== \\\"function\\\") return;\\n\\tlet can = canBiometric();\\n\\tif (can !== 0) return can;\\n\\trunOnUI(() => {\\n\\t\\tcom.example.hikerview.ui.setting.office.MoreSettingOfficer.INSTANCE.checkByBiometric(getActivityContext(), () => {\\n\\t\\t\\ttryCallBack(success, [], true);\\n\\t\\t});\\n\\t});\\n}\\n\\n\\nfunction decodeQRCode(path) {\\n\\tlet result = null;\\n\\ttry {\\n\\t\\tlet bitmap = android.graphics.BitmapFactory.decodeFile(path);\\n\\t\\tif (bitmap == null) return result;\\n\\t\\tlet hints = new java.util.Hashtable();\\n\\t\\tlet width = bitmap.getWidth();\\n\\t\\tlet height = bitmap.getHeight();\\n\\t\\tlet pixels = java.lang.reflect.Array.newInstance(java.lang.Class.forName(\\\"java.lang.Integer\\\"), width * height);\\n\\t\\tpixels = java.util.Arrays.stream(pixels).mapToInt(v => 0).toArray();\\n\\t\\tbitmap.getPixels(pixels, 0, width, 0, 0, width, height);\\n\\t\\tlet source = new com.google.zxing.RGBLuminanceSource(width, height, pixels);\\n\\t\\tlet binaryBitmap = new com.google.zxing.BinaryBitmap(new com.google.zxing.common.HybridBinarizer(source));\\n\\t\\tlet decodedResult = new com.google.zxing.MultiFormatReader().decode(binaryBitmap, hints);\\n\\t\\tresult = String(decodedResult.getText());\\n\\t} catch (e) {}\\n\\treturn result;\\n}\\n\\n\\n$.exports = {\\n\\tconfirm,\\n\\tinputAutoRow,\\n\\tinputConfirm,\\n\\tselectCenter,\\n\\tselectCenterMark,\\n\\tselectBottom,\\n\\tselectBottomMark,\\n\\tIconExtraMenu,\\n\\tselectCenterIcon,\\n\\tinputTwoRow,\\n\\tselectBottomSettingMenu,\\n\\tselectBottomRes,\\n\\tResExtraInputBox,\\n\\tinfoBottom,\\n\\tcopyBottom,\\n\\tselectCenterColor,\\n\\tconfirmSync,\\n\\tinputConfirmSync,\\n\\ticon: R.drawable,\\n\\tchefSnackbarMake,\\n\\ttoastMeg,\\n\\tplayVideos,\\n\\tgetClipTopData,\\n\\tmultiChoice,\\n\\tseekCenter,\\n\\tsetUseStartActivity,\\n\\trunOnNewThread,\\n\\trunOnUIThread: runOnUI,\\n\\tcanBiometric,\\n\\tcheckByBiometric,\\n\\tdecodeQRCode,\\n\\tselectAttachList,\\n\\tselectBottomResIcon,\\n\\tupdateRecordsBottom\\n};\"}]","proxy":"","icon":""}
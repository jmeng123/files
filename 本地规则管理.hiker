{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"新增","path":"new","rule":"js:\nvar d = [];\nd.push({\n    title: '',\n    desc: \"搜索规则\",\n    col_type: 'input',\n    extra: {\n        id: \"xj-s\",\n        onChange: $.toString(() => {\n            if (input != \"\") {\n                let s = fetch(\"hiker://home\");\n                let rules = JSON.parse(s);\n                rules = rules.filter(i => i.title && i.title.includes(input));\n                let list = rules.map(it => {\n                    return {\n                        title: it.title,\n                        url: $(\"#noLoading#\").lazyRule((t) => {\n                            let mem = storage0.getItem(\"d\", []);\n                            for (let i in mem) {\n                                if (t == mem[i]) {\n                                    delete mem[i];\n                                    break\n                                }\n                            }\n                            if (mem.length > 10) {\n                                delete mem[0];\n                            }\n                            mem.push(t);\n                            //log(mem);\n                            storage0.setItem(\"d\", mem);\n                            let ru = JSON.parse(fetch(\"hiker://home@\" + t))\n                            var saveList = fileExist(\"hiker://files/rules/ddd/rules.json\") ? JSON.parse(readFile(\"hiker://files/rules/ddd/rules.json\", 0)) : []\n                            try {\n                                date = Date.parse(new Date())\n                                saveList.push({\n                                    title: ru.title,\n                                    rule: date + \".json\",\n                                    version: ru.version,\n                                    time: date\n                                })\n                                saveFile(\"hiker://files/rules/ddd/\" + date + \".json\", JSON.stringify(ru), 0)\n                                saveFile(\"hiker://files/rules/ddd/rules.json\", JSON.stringify(saveList), 0)\n                                var code = \"添加成功\"\n                            } catch (e) {\n                                var code = e\n                            }\n                            saveFile(\"hiker://files/rules/ddd/rules.json\", JSON.stringify(saveList), 0)\n                            back()\n                            return \"toast://\" + code\n                        }, it.title),\n                        col_type: \"text_1\",\n                        extra: {\n                            cls: \"xj-b\"\n                        }\n                    }\n                });\n                deleteItemByCls(\"xj-b\");\n                addItemAfter(\"xj-s\", list);\n            }\n        }),\n        titleVisible: false,\n        textSize: 15,\n        defaultValue: getMyVar('title', ''),\n    },\n});\nsetResult(d);"}],"title":"本地规则管理","author":"Joe","version":0,"type":"video","url":"hiker://empty","col_type":"text_1","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nd.push({\n    title: \"搜索\",\n    desc: \"搜索规则\",\n    url: \"'hiker://search?s=' + input + '&rule=' + MY_RULE.title\",\n    col_type: \"input\"\n})\nif (!fileExist(\"hiker://files/rules/ddd/rules.json\")) {\n    d.push({\n        title: \"你还没有使用过，点我添加规则\",\n        url: \"hiker://page/new\",\n        col_type: \"text_center_1\"\n    })\n} else {\n    let lists = JSON.parse(readFile(\"hiker://files/rules/ddd/rules.json\", 0))\n    d.push({\n        title: \"““””<b><font color=#FA7298>增加</font></b>\",\n        url: \"hiker://page/new\",\n        col_type: \"text_2\"\n    })\n    let i = 0;\n    for (item of lists) {\n        var date = new Date(item.time);\n        d.push({\n            title: item.title,\n            desc: \"本地版本：\" + item.version + \"\\n提交时间：\" + $.dateFormat(item.time, \"Y-M-d h:m\"),\n            url: $([\"分享\", \"删除\", \"导入\"], 2, \"请选择\").select((item, lists, i) => {\n                switch (input) {\n                    case \"分享\":\n                        return \"copy://\" + sharePaste(\"海阔视界规则分享，当前分享的是：小程序￥home_rule_v2￥base64://@\" + item.title + \"@\" + base64Encode(readFile(\"hiker://files/rules/ddd/\" + item.rule, 0))) + \"\\n\\n小程序：\" + item.title\n\n                        break\n                    case \"删除\":\n                        lists.splice(i, 1);\n                        saveFile(\"hiker://files/rules/ddd/rules.json\", JSON.stringify(lists), 0)\n                        deleteFile(\"hiker://files/rules/ddd/\" + item.rule)\n                        refreshPage(false);\n                        break;\n                    case \"导入\":\n                        log(\"rule://\" + base64Encode(\"海阔视界首页频道规则【\" + item.name + \"】￥home_rule_url￥hiker://files/rules/ddd/\" + item.rule))\n                        return \"rule://\" + base64Encode(\"海阔视界首页频道规则【\" + item.name + \"】￥home_rule_url￥hiker://files/rules/ddd/\" + item.rule)\n                }\n\n            }, item, lists, i++)\n        })\n    }\n}\nsetResult(d);","searchFind":"js:\nvar d = [];\nlet lists = JSON.parse(readFile(\"hiker://files/rules/ddd/rules.json\", 0))\nvar kw = MY_URL.replace(\"hiker://empty##\", \"\")\nlet i = 0;\nfor (item of lists) {\n    if (item.title.includes(kw)) {\n        var date = new Date(item.time);\n        d.push({\n            title: item.title,\n            desc: \"本地版本：\" + item.version,\n            content: \"提交时间：\" + $.dateFormat(item.time, \"y-M-d h:s\"),\n            url: $([\"分享\", \"删除\", \"导入\"], 2, \"请选择\").select((item, lists, i) => {\n                switch (input) {\n                    case \"分享\":\n                        return \"copy://\" + sharePaste(\"海阔视界规则分享，当前分享的是：小程序￥home_rule_v2￥base64://@\" + item.title + \"@\" + base64Encode(readFile(\"hiker://files/rules/ddd/\" + item.rule, 0))) + \"\\n\\n小程序：\" + item.title\n\n                        break\n                    case \"删除\":\n                        lists.splice(i, 1);\n                        saveFile(\"hiker://files/rules/ddd/rules.json\", JSON.stringify(lists), 0)\n                        deleteFile(\"hiker://files/rules/ddd/\" + item.rule)\n                        refreshPage(false);\n                        break;\n                    case \"导入\":\n                        log(\"rule://\" + base64Encode(\"海阔视界首页频道规则【\" + item.name + \"】￥home_rule_url￥hiker://files/rules/ddd/\" + item.rule))\n                        return \"rule://\" + base64Encode(\"海阔视界首页频道规则【\" + item.name + \"】￥home_rule_url￥hiker://files/rules/ddd/\" + item.rule)\n                }\n\n            }, item, lists, i++)\n        })\n    }\n}\nsetResult(d);","search_url":"hiker://empty##**","group":"⑧工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"新增\",\"path\":\"new\",\"rule\":\"js:\\nvar d = [];\\nd.push({\\n    title: '',\\n    desc: \\\"搜索规则\\\",\\n    col_type: 'input',\\n    extra: {\\n        id: \\\"xj-s\\\",\\n        onChange: $.toString(() => {\\n            if (input != \\\"\\\") {\\n                let s = fetch(\\\"hiker://home\\\");\\n                let rules = JSON.parse(s);\\n                rules = rules.filter(i => i.title && i.title.includes(input));\\n                let list = rules.map(it => {\\n                    return {\\n                        title: it.title,\\n                        url: $(\\\"#noLoading#\\\").lazyRule((t) => {\\n                            let mem = storage0.getItem(\\\"d\\\", []);\\n                            for (let i in mem) {\\n                                if (t == mem[i]) {\\n                                    delete mem[i];\\n                                    break\\n                                }\\n                            }\\n                            if (mem.length > 10) {\\n                                delete mem[0];\\n                            }\\n                            mem.push(t);\\n                            //log(mem);\\n                            storage0.setItem(\\\"d\\\", mem);\\n                            let ru = JSON.parse(fetch(\\\"hiker://home@\\\" + t))\\n                            var saveList = fileExist(\\\"hiker://files/rules/ddd/rules.json\\\") ? JSON.parse(readFile(\\\"hiker://files/rules/ddd/rules.json\\\", 0)) : []\\n                            try {\\n                                date = Date.parse(new Date())\\n                                saveList.push({\\n                                    title: ru.title,\\n                                    rule: date + \\\".json\\\",\\n                                    version: ru.version,\\n                                    time: date\\n                                })\\n                                saveFile(\\\"hiker://files/rules/ddd/\\\" + date + \\\".json\\\", JSON.stringify(ru), 0)\\n                                saveFile(\\\"hiker://files/rules/ddd/rules.json\\\", JSON.stringify(saveList), 0)\\n                                var code = \\\"添加成功\\\"\\n                            } catch (e) {\\n                                var code = e\\n                            }\\n                            saveFile(\\\"hiker://files/rules/ddd/rules.json\\\", JSON.stringify(saveList), 0)\\n                            back()\\n                            return \\\"toast://\\\" + code\\n                        }, it.title),\\n                        col_type: \\\"text_1\\\",\\n                        extra: {\\n                            cls: \\\"xj-b\\\"\\n                        }\\n                    }\\n                });\\n                deleteItemByCls(\\\"xj-b\\\");\\n                addItemAfter(\\\"xj-s\\\", list);\\n            }\\n        }),\\n        titleVisible: false,\\n        textSize: 15,\\n        defaultValue: getMyVar('title', ''),\\n    },\\n});\\nsetResult(d);\"}]","proxy":"","icon":""}
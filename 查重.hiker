{"last_chapter_rule":"","pageList":[],"title":"查重","author":"Reborn","version":4,"type":"tool","url":"hiker://fyAll","col_type":"text_2","class_name":"规则查重","class_url":"home","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar res = {};\nvar items = [];\n\n// 所有开关  开则 true  关则 false\n// 规则去重开关\nlet clearDuplicate = true;\n\nvar keyList = [];\n// TODO 优化能匹配 hiker://xxx 的链接\nvar domainRegExp = new RegExp(\"([a-zA-Z0-9][-a-zA-Z0-9]{0,62}(\\\\.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+\\\\.?)\");\n// domainRegExp = new RegExp(\"[hiker|http|https]://(.*?)/\");\nfunction isKeyInList(key) {\n    if (keyList.indexOf(key) > -1) {\n        return true;\n    }\n    return false;\n}\n\nlet rules = JSON.parse(getResCode());\n// let url = getUrl();\nlet url = \"hiker://home\";\n/hiker:\\/\\/(.*)/.test(url);\nlet category = RegExp.$1;\nswitch (category) {\n    case \"home\":\n        for (let i = 0; i < rules.length; i++) {\n            let rule = rules[i];\n            let key = domainRegExp.test(rule.url) === true ? RegExp.$1 : \"\";\n            // TODO 修复匹配出 fypage.html 的问题\n            if (key === \"\" || key === \"fypage.html\" || isKeyInList(key) === true) {\n                continue;\n            }\n            keyList.push(key);\n        }\n        break;\n    case \"bookmark\":\n        break;\n    default:\n        setError(\"未知分类，无法解析\");\n        break;\n}\n\nvar mRulesList = new Array(keyList.length);\nfor (let i = 0; i < mRulesList.length; i++) {\n    let rulesTemp = rules;\n    mRulesList[i] = rulesTemp.filter(item => {\n        let result = false;\n        try {\n            result = item.url.indexOf(keyList[i]) > -1;\n        } catch (e) {  result = false;  }\n        return result;\n    });\n}\n\nvar keyNum = 0;\nvar itemsTemp = [];\nfor (let i = 0; i < mRulesList.length; i++) {\n    let mRules = mRulesList[i];\n    if (mRules.length >= 2) {\n        itemsTemp.push({\n            title: keyList[i],\n            col_type: \"text_1\"\n        });\n        keyNum++;\n        for (let j = 0; j < mRules.length; j++) {\n            let rule = mRules[j];\n            itemsTemp.push({\n                title: rule.title,\n                url: \"hiker://home@\" + rule.title,\n            });\n        }\n    }\n}\n\nif (clearDuplicate === true){\n    var obj = {};\n    itemsTemp = itemsTemp.reduce((current, next) => {\n        obj[next.title] ? \"\" : obj[next.title] = true && current.push(next);\n        return current;\n    }, []);\n}\n\nitems.push({\n    title: \"总规则数：\" + rules.length + \"，当前待处理：\" + keyNum + \" 组\",\n    desc: \"少掉的规则去哪里了？当然是不重复的规则啦！\\n(然而还有一部分是匹配失败的结果🙈️...)\",\n    col_type: \"pic_1\"\n});\n\nwhile (itemsTemp.length) items.push(itemsTemp.shift());\n\nres.data = items;\nsetHomeResult(res);","searchFind":"js: // From Zruiry\nvar jsonZr = JSON.parse(fetch('hiker://home'));\r\nvar res = {};\nvar d = [];\nvar n = 0;\nfor (var i = 0; i <jsonZr.length; i++) {\n    if ((jsonZr[i].title + JSON.stringify(jsonZr[i].url).match(/https?:\\/\\/.*?\\//) + JSON.stringify(jsonZr[i].url).match(/.*?hiker.*?/)).includes(getUrl().split('#')[1]))\n    n++;\n}\nd.push({\n    title: '您的本地共有' + jsonZr.length + '条规则',\n    content: \"共搜索到\" + n + \"条结果\",\n});\nfor (var i = 0; i <jsonZr.length; i++) {\n    var r = {};\n    r.title = jsonZr[i].title;\n    var ruleAuthor = jsonZr[i].author;\n    var ruleGroup = jsonZr[i].group;\n    var ruleUrl = JSON.stringify(jsonZr[i].url).match(/https?:\\/\\/.*?\\//);\n    r.desc = \"规则版本：\" + jsonZr[i].version;\n    if (jsonZr[i].author == null || jsonZr[i].author == undefined || jsonZr[i].author == '') {\n       ruleAuthor = \"未知\";\n} \n    if(JSON.stringify(jsonZr[i].url).match(/https?:\\/\\/.*?\\//) == null || JSON.stringify(jsonZr[i].url).match(/https?:\\/\\/.*?\\//) == undefined || JSON.stringify(jsonZr[i].url).match(/https?:\\/\\/.*?\\//) == '') {\n        ruleUrl = \"无法识别\";\n}\n    if (JSON.stringify(jsonZr[i].url).includes(\"hiker\")) {\n       ruleUrl = jsonZr[i].url;\n}\n    if (jsonZr[i].group == null || jsonZr[i].group == undefined || jsonZr[i].group == '') {\n       ruleGroup = \"暂无分组\";\n}\n    r.content = \"规则作者：\" + ruleAuthor + \"\\n所在分组：\" + ruleGroup + \"\\n站点网址：\" + ruleUrl;\n    r.url = 'hiker://home@' + jsonZr[i].title;\n    r.img = 'https://acg.xydwz.cn/gqapi/gqapi.php?t=' + new Date().getTime() / i * (i + 1);\n    if ((jsonZr[i].title + JSON.stringify(jsonZr[i].url).match(/https?:\\/\\/.*?\\//) + JSON.stringify(jsonZr[i].url).match(/.*?hiker.*?/)).includes(getUrl().split('#')[1]))\n    d.push(r);\n}\r\nres.data = d;\r\nsetSearchResult(res);\r","search_url":"hiker://bookmark#**","group":"⑧工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[]","proxy":"","icon":"#ff148e8e"}
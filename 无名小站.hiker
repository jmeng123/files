{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"公共","path":"globals","rule":"//list: ['net', 'org', 'si', 'nu', 'fun']\nconst host = \"https://www.btnull.net\"\nfunction Aimg(ty,id){\n    return \"https://s.tutu.pm/img/\"+ty+\"/\"+id+\".webp\"\n}\nfunction Aurl(ty,id){\n    return \"https://www.btnull.net/\"+ty+\"/\"+id\n}\nconst 分类颜色 = () => '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6)\nfunction substr(str, maxLength) {\n  let len = 0;\n  for (let i = 0; i < str.length; i++) {\n    if (str.charCodeAt(i) > 255) {\n      len += 2;\n    } else {\n      len++;\n    }\n    if (len > maxLength) {\n      return str.slice(0, i) + '...';\n    }\n  }\n  return str;\n}\nfunction setDesc(arr, desc, num) {\n  //log(desc)\n  if (desc == undefined) {\n    return;\n  }\n  desc = desc.constructor == Array ? desc.join('<br>') : desc;\n  if (desc.replace(/(<br>|\\s+|<\\/?p>|&nbsp;)/g, '').length == 0) {\n    return;\n  }\n\n  const mark = 'desc';\n  num = typeof (num) == 'undefined' ? 100 : num\n  desc = desc.startsWith('　　') ? desc : '　　' + desc;\n  desc = desc.replace(/'/g, \"&#39;\");\n  desc = desc.replace(/\\r\\n/g, \"<br>\");\n  desc = desc.replace(/\\r/g, \"<br>\");\n  desc = desc.replace(/\\n/g, \"<br>\");\n  let sdesc = substr(desc, num);\n\n  var colors = {\n    show: \"black\",\n    hide: \"grey\"\n  }\n\n  var lazy = $(`#noLoading#`).lazyRule((dc, sdc, m, cs) => {\n    var show = storage0.getItem(m, '0');\n    var title = findItem('desc').title;\n    var re = /(<\\/small><br>.*?>).+/g;\n    var exp = '展开:';\n    var ret = '收起:';\n    if (show == '1') {\n      updateItem('desc', {\n        title: title\n          .replace(ret, exp)\n          .replace(re, '$1' + sdc + '</small>')\n          .replace(/(<\\/small><br>\\<font color=\").*?(\">)/, '$1' + cs.hide + '$2')\n\n      })\n      storage0.setItem(m, '0');\n    } else {\n      updateItem('desc', {\n        title: title\n          .replace(exp, ret)\n          .replace(re, '$1' + dc + '</small>')\n          .replace(/(<\\/small><br>\\<font color=\").*?(\">)/, '$1' + cs.show + '$2')\n      })\n      storage0.setItem(m, '1');\n    }\n    return `hiker://empty`\n  }, desc, sdesc, mark, colors)\n  var sc = storage0.getItem(mark, '0') == '0' ? '展开:' : '收起:';\n  var dc = storage0.getItem(mark, '0') == '0' ? sdesc : desc;\n  var cs = storage0.getItem(mark, '0') == '0' ? colors.hide : colors.show;\n  arr.push({\n    title: '' + '<b><font color=\"#098AC1\">∷剧情简介\t</font></b>' + \"<small><a style='text-decoration: none;' href='\" + lazy + \"'>\" + sc + '</a></small><br><font color=\"' + cs + '\">' + `${dc}` + '</small>',\n    col_type: 'rich_text',\n    extra: {\n      id: 'desc',\n      lineSpacing: 6,\n      textSize: 15,\n      lineVisible: true,\n    }\n  })\n} \nvar getRangeColors = function() {\n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);\n}\nfunction decrypt(r, k) {\n        let s = window0.atob(r);\n        let d = '';\n        for (let i = 0; i < s.length; i++) {\n            d += String.fromCharCode(s.charCodeAt(i) ^ k.charCodeAt(i % k.length))\n        }\n        return d\n    }\nfunction fontstyle(text, params, col) {\n    params = params || undefined;\n    var h = params.h !== false ? '““””' : '';\n    let ontag = [\"icon_small_3\"];\n    if (col != undefined) {\n      if (ontag.includes(col)) {\n        h = '';\n      }\n    }\n    var tags = params.tags || \"\";\n    if (params.c != undefined) {\n      text = text.fontcolor(params.c);\n    }\n    if (tags) {\n      var tagArray = tags.split('|').filter(e => e);\n      var openTags = '';\n      var closeTags = '';\n      for (var i = 0; i < tagArray.length; i++) {\n        openTags += '<' + tagArray[i] + '>';\n        closeTags = '</' + tagArray[i] + '>' + closeTags;\n      }\n      text = openTags + text + closeTags;\n    }\n    return h + text;\n  }\nconst Obj = (list) => {\n    let year = Array.from({ length: list.y - (list.y - 10) + 1 }, (_, i) => list.y - i);\n\n    list.r.d1 = {\n        a: ['更新时间', '添加时间', list.dir === 'mv' ? '上映时间' : '首播时间', '评分最高', '评分人数', '评分总人数', '综合评分'],\n        b: ['', 'addtime', 'date', 'score', 'number', 'numbers', 'cscore'],\n    };\n\n    list.r.d2 = {\n        a: ['IMDB', '可播放'],\n        b: [9, 1],\n    };\n\n    let lobj = [{\n        a: list.dir !== 'ac' ? \n            ['剧情', '科幻', '动作', '喜剧', '爱情', '冒险', '儿童', '歌舞', '音乐', '奇幻', '动画', '恐怖', '惊悚', '丧尸', '战争', '传记', '纪录', '犯罪', '悬疑', '西部', '灾难', '古装', '武侠', '家庭', '短片', '校园', '文艺', '运动', '青春', '同性', '励志', '人性', '美食', '女性', '治愈', '历史', '真人秀', '脱口秀'] : \n            ['剧情', '萌系', '科幻', '日常', '战斗', '战争', '热血', '机战', '游戏', '搞笑', '恋爱', '后宫', '百合', '基腐', '冒险', '儿童', '歌舞', '音乐', '奇幻', '恐怖', '惊悚', '犯罪', '悬疑', '西部', '灾难', '古装', '武侠', '泡面', '校园', '运动', '青春', '美食', '治愈', '致郁', '励志', '历史', '纪录', '异世界'],\n        t: '类型',\n    }, {\n        a: year.concat(['20年代', '10年代', '00年代', '90年代', '80年代', '70年代', '60年代', '更早']),\n        v: year.concat([120, 110, 100, 90, 80, 70, 60, 1]),\n        t: '年代',\n    }, {\n        a: ['大陆', '香港', '台湾', '海外', '欧美', '美国', '日本', '韩国', '英国', '法国', '德国', '印度', '泰国', '瑞典', '巴西', '加拿大', '俄罗斯', '意大利', '比利时', '西班牙', '澳大利亚'],\n        t: '地区',\n    }, {\n        a: ['英语', '法语', '国语', '粤语', '日语', '韩语', '泰语', '德语', '俄语', '闽南语', '丹麦语', '波兰语', '瑞典语', '印地语', '挪威语', '意大利语', '西班牙语', '无对白'],\n        t: '语言',\n    }];\n    list.l = list.l.concat(lobj);\n    return list;\n};\nfunction extractData(data) {\n    const result = {};\n    const fields = {\n        title: \"标题\",\n        status: \"状态\",\n        daoyan: \"导演\",\n        zhuyan: \"主演\",\n        leixing: \"类型\",\n        diqu: \"地区\",\n        stime: \"上映\",\n        times: \"时长\",\n        introduce: \"简介\"\n    };\n\n    Object.keys(fields).forEach(key => {\n        if (data[key]) {\n            // 如果键存在，且值是数组，使用 join 连接，否则直接赋值\n            result[fields[key]] = Array.isArray(data[key]) ? data[key].join('/') : data[key];\n        }\n    });\n\n    return result;\n}\nfunction transformData(data) {\n    const descs = [];\n    const titles = [];\n\n    if (data[\"类型\"]) descs.push(`类型：${data[\"类型\"]}`);\n    if (data[\"状态\"]) descs.push(`状态：${data[\"状态\"]}`);\n    if (data[\"时长\"]) descs.push(`时长：${data[\"时长\"]}`);\n    if (data[\"地区\"]) descs.push(`地区：${data[\"地区\"]}`);\n    if (data[\"主演\"]) descs.push(`主演：${data[\"主演\"]}`);\n\n    if (data[\"标题\"]) titles.push(data[\"标题\"]);\n    if (data[\"导演\"]) titles.push(`导演：${data[\"导演\"]}`);\n    if (data[\"上映\"]) titles.push(`上映：${data[\"上映\"]}`);\n\n    return { descs, titles };\n}\nfunction headText(k){\n    if(k=='0'){\n        return \"🧲\"\n    }else return \"📂\"\n}\nfunction GT(oblist) {\n        return {\n            ids: oblist.r.d1.b,\n            names: oblist.r.d1.a,\n            title: 'time'\n        };\n    }\nfunction setTabs(tabs) {\n        if (!tabs) return;\n        for (let data of tabs) {\n     if (data.title !== 'type'&& data.title !== 'time'&&Array.isArray(data.names)) {\n    data.names.unshift('全部');\n} else if (data.title !== 'type'&&data.title !== 'time') {\n            continue; // 跳过非数组的情况\n        }\n            getMyVar(data.title) || putMyVar(data.title, data.ids[0]);\n            for (let i = 0; i < data.names.length; i++) {\n                var title = data.names[i].toString()\n                d.push({\n                    title: getMyVar(data.title) == data.ids[i] ?\n                        `““””<font color=${分类颜色()}><b>${title}</b></font>` : title,\n                    url: $('#noLoading#').lazyRule(\n                        (title, id) => {\n                            if (getMyVar(title) != id) {\n                                if (title == 'type') clearMyVar('类型')\n                                putMyVar(title, id);\n                                refreshPage();\n                            }\n                            return 'hiker://empty';\n                        },\n                        data.title.toString(),\n                        data.ids[i]\n                    ),\n                    col_type: 'scroll_button',\n                });\n            }\n            d.push({\n                col_type: 'blank_block',\n            });\n            if (data.arr) {\n                setTabs(data.arr[data.ids.indexOf(getMyVar(data.title))]);\n            }\n        }\n    }\nfunction getxl(data,target) {\n    let index = data.s.indexOf(target);\n    if (index !== -1) {\n        return data.t[index];\n    }\n    return null; // 如果找不到匹配项，返回 null\n}\nfunction backColor(title, colors) {\n    var def = {\n      fc: '#FFFFFF',\n      bc: '',\n    }\n    colors = Object.assign(def, colors);\n    return '<font color=\"' + colors.fc + '\"><span style=\"background-color: ' + colors.bc + '\">' + title + '</span></font>'\n  }\n  function favorite(fa,id,dir){\n      if(fa=='1'){\n          fav = {\n              t: '🩶',\n              u: `${host}/ajax/favorite/add_${id}_${dir}/`,\n              info: false\n          }\n      }else if(fa=='2') {\n          fav = {\n              t: '❤️',\n              u: `${host}/ajax/favorite/del_${id}_${dir}/`,\n              info: true\n          }\n      }else fav = {\n          t: '💔'\n          \n      }\n      return fav\n  }\nfunction replaceValue(value) {\n     if (value === 1) return \"mv\"; \n     if (value === 2) return \"tv\"; \n     if (value === 3) return \"ac\"; \n     return value; \n     }\nfunction listlength(input,play){\n    if(!play) return '0'\n    else if(input=='playlist') return play.length;\n    else if(input=='downlist') return play.list.t.length;\n    else if(input=='panlist') return play.e.length;  \n    else return '未登录'\n}\nfunction combinPath(dire, path) {\n    let Proto = '';\n    if (dire.includes(\"//\")) {\n        [Proto, _, dire] = dire.split(/(\\/{2})/);\n        Proto += _;\n    }\n    const Paths = java.nio.file.Paths;\n    dire = dire + path;\n    var p = Paths.get(dire).toAbsolutePath().normalize();\n    return Proto + String(p);\n}\nfunction getTy() {\n  // 如果需要使用 getParam('ty')，可以在这里设置条件\n  return MY_PARAMS.ty ? getMyVar('ty', MY_PARAMS.ty) : getMyVar('ty', getParam('ty'))\n}\n\nfunction getTid() {\n  // 如果需要使用 getParam('tid').split('#')[0]，可以在这里设置条件\n  return MY_PARAMS.tid ? getMyVar('tid', MY_PARAMS.tid) : getMyVar('tid', getParam('tid').split('#')[0])\n}"},{"col_type":"movie_3","name":"磁力","path":"BT","rule":"js:\nvar d = [];\neval(JSON.parse(fetch(\"hiker://page/globals\")).rule);\nvar html = fetch(MY_URL,{\n                headers:{\n        \"Cookie\": fetchPC('hiker://files/cache/bt_cookie.txt') || ''\n                    },\n            })\n            d.push({\n                title: \"资源名称\",\n                desc: pdfh(html,\".alert-info&&Text\"),\n                url: \"hiker://empty\",\n                col_type: \"text_1\"\n            },{\n                col_type: \"line_blank\"\n            })\n            \nvar d_code = html.match(/let\\s+d_code\\s*=\\s*'([^']+)';/)[1]\nif(MY_PARAMS.k=='0'){\n    var bt = decrypt(pdfh(html,\"li:matches(磁力)&&data-clipboard-text\"),d_code)\n    var zz = decrypt(pdfh(html,\"li:matches(种子)&&data-clipboard-text\"),d_code).replace(/#host#/,`${host}`)\n    d.push({\n        title: pdfh(html,\".alert-info&&Text\"),\n        //desc: pdfh(x,\".left&&Text\"),\n        url: \"hiker://empty\",\n        col_type: \"text_1\",\n    },{\n                title: fontstyle(backColor(\"磁力链接\", { bc: \"#C49f47\" }), { tags: \"small\" }),\n                col_type: \"text_3\",\n                url: bt,\n                extra: {\n                    longClick: [{\n                        title: \"复制磁链\",\n                        js: $.toString((bt) => {\n                            copy(bt)\n                        }, bt),\n                    }, {\n                        title: \"其它应用打开\",\n                        js: JSON.stringify(\"magnet://\" + bt),\n                    }\n                    ],\n                    lineVisible: false\n                }\n            },{\n                title: fontstyle(backColor(pdfh(html,\"em&&Text\").split('　')[1], { bc: \"#8E44AD\" }), { tags: \"small\" }),\n                col_type: \"text_3\",\n                url: \"hiker://empty\",\n            },{\n                title: fontstyle(backColor(\"下载种子\", { bc: \"#3598DC\" }), { tags: \"small\" }),\n                col_type: \"text_3\",\n                url: $(\"#noLoading#\").lazyRule((zz) => {\n                    return zz\n                }, zz),\n                extra: {\n                    longClick: [{\n                        title: \"复制\",\n                        js: $.toString((zz) => {\n                            copy(zz)\n                        }, zz),\n                    }]\n                    }\n            })\n            d.push({\n                title: \"资源信息\",\n                col_type: \"rich_text\"\n            },{\n                title: pdfh(html,\"section,2&&.alert-info&&Html\"),\n                col_type: \"rich_text\",\n                extra: {\n                    textSize: 14\n                }\n            })\n    \n}\nelse{\nvar list = pdfa(html,\"body&&section.wrap&&li\")\nlist.forEach(x=>{\n    var bt = decrypt(pdfh(x,\"#d2&&data-clipboard-text\"),d_code)\n    var zz = decrypt(pdfh(x,\"#d1&&data-clipboard-text\"),d_code).replace(/#host#/,`${host}`)\n    d.push({\n        title: '““””'+pdfh(x,\"div&&Text\").small(),\n        //desc: pdfh(x,\".left&&Text\"),\n        url: \"hiker://empty\",\n        col_type: \"text_1\",\n    },{\n                title: fontstyle(backColor(\"磁力链接\", { bc: \"#C49f47\" }), { tags: \"small\" }),\n                col_type: \"text_3\",\n                url: bt,\n                extra: {\n                    longClick: [{\n                        title: \"复制磁链\",\n                        js: $.toString((bt) => {\n                            copy(bt)\n                        }, bt),\n                    }, {\n                        title: \"其它应用打开\",\n                        js: JSON.stringify(\"magnet://\" + bt),\n                    }\n                    ],\n                    lineVisible: false\n                }\n            },{\n                title: fontstyle(backColor(pdfh(x,\".left&&Text\"), { bc: \"#8E44AD\" }), { tags: \"small\" }),\n                col_type: \"text_3\",\n                url: \"hiker://empty\",\n            },{\n                title: fontstyle(backColor(\"下载种子\", { bc: \"#3598DC\" }), { tags: \"small\" }),\n                col_type: \"text_3\",\n                url: $(\"#noLoading#\").lazyRule((zz) => {\n                    return zz\n                }, zz),\n                extra: {\n                    longClick: [{\n                        title: \"复制\",\n                        js: $.toString((zz) => {\n                            copy(zz)\n                        }, zz),\n                    }]\n                    }\n            })\n    })\n}\nsetResult(d);"},{"col_type":"movie_3","name":"首页","path":"main","rule":"js:\nvar arr = [];\neval(JSON.parse(fetch(\"hiker://page/globals\")).rule);\nconst page = MY_PAGE\nvar login = host+\"/user/login\"\nvar logining = fetch(login,{\n    headers:{\n        \"Cookie\": fetchPC('hiker://files/cache/bt_cookie.txt') || ''\n    }\n})\nif(page==1){\nif(logining.includes(\"登录成功\")){\n        arr.push({\n            title: \"BTNULL\",\n            url: $(\"#noLoading#\").lazyRule(()=> {\n                    return $([\"分类\", \"收藏\"], 2).select(() => {\n                        if (input == \"分类\") {\n                            return \"hiker://page/class?page=fypage\";\n                        } else {\n                            return \"hiker://page/favorite\";\n                        }\n                    });\n                }),\n            desc: \"分类/收藏\",\n            pic_url: host+\"/favicon.ico\",\n            col_type: \"avatar\",\n            extra:{\n                    longClick:[{\n                        title: '退出账号',\n                        js: $.toString(() => {\n        writeFile('hiker://files/cache/bt_cookie.txt', '')\n                    toast('退出了账号')\n                    refreshPage()\n                    return 'hiker://empty'\n                   })\n                    }]\n                }\n        });\n    }else{\narr.push({\n        title: '登录账号',\n        desc: '登录时记得都勾上'.small(),\n        pic_url: \"https://m.dmzj.com/images/photo.png\",\n        url: login + $('').rule(() => {\n            var d = [];\n            d.push({\n                col_type: 'x5_webview_single',\n                url: MY_URL,\n                desc: 'list&&screen',\n                extra: {\n                    \"User-Agent\": \"Mozilla/5.0 (Linux; Android 12; SM-G9750 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/89.0.4389.72 MQQBrowser/6.2 TBS/046279 Mobile Safari/537.36\",             \n                    showProgress: false,\n                    js: $.toString((u) => {\n                        function check() {\n                            var co = fba.getCookie(u);\n                            console.log(co)\n                            if (co.includes('BT_auth')) {\n                                fba.parseLazyRule($$$().lazyRule((co) => {\n                                    writeFile('hiker://files/cache/bt_cookie.txt', co);\n                                    toast('账号已登录');\n                                    back(true);\n                                }, co));\n                            } else {\n                                setTimeout(check, 500);\n                            }\n                        }\n                        check();\n                    }, MY_URL)\n                }\n            });\n            return setResult(d);\n        }),\n        col_type: 'avatar'\n    });\n}\nvar _obj = {};\neval(pdfh(fetch(host), 'body&&script&&Html').split('_BT')[0]);\nvar ban = _obj.banner\n    try {\r\n            var lb = ban.t.map((x,s)=> {\n                var y = ban.y\n                var id = ban.i\r\n                var obj = {};\n                obj.title = x               \r\n                obj.img = Aimg(y[s],id[s]).replace(id[s],`i_${id[s]}`)\n                obj.url= `&ty=${y[s]}&tid=${id[s]}`\r\n                return obj;\r\n            })\n            var cfg = {\n    url: \"hiker://page/detail?rule=无名小站{url}\",\n}\n            var o = {}\r\n            var r = $.require(combinPath(storage0.getItem(\"src_mode\", 'https://gitee.com/zetalpha/hikerview/raw/master/juyue/'), \"../global/js/x5ui.js\"), undefined, 24);\r\n            r.show(arr, lb,cfg,o);\n        } catch (e) {\r\n            log(e.message)\r\n        }\narr.push({\n        url: \"'hiker://page/search?fypage'\",\n        title: \"搜索\",\n        desc: '请输入关键词',\n        col_type: 'input',\n        extra: {\n            onChange: $.toString(() => {\n       putMyVar(\"st\",\"1\")\n       putMyVar(\"keyword\", input);\n                })\n            }\n        })    \nvar List = {\n    \"h2\": [\"新片推荐\", \"新剧推荐\", \"新番推荐\"],\n    \"ty\": [\"mv\", \"tv\", \"ac\"],\n    \"p\": [1, 1, 1]  // 将 List.p 改为数组，分别记录每个类别的页数\n}\nList.h2.forEach((h, s) => {\n    var p = getItem(List.ty[s]+'p','1')\n    var url = `${host}/change/${p}_${List.ty[s]}/`\n    arr.push({\n        title: h.big()+\"[\"+p+\"/5]\",\n        img: \"https://hikerfans.com/tubiao/messy/9.svg\",\n        url: $('#noLoading#').lazyRule((List,s) => {\n            var p = getItem(List.ty[s]+'p','1')\n            var ps = ((p % 5) + 1).toString()\n            setItem(List.ty[s]+'p',ps)\n            refreshPage(false);\n            return \"hiker://empty\";\n        },List,s),\n        col_type: \"text_icon\",\n        extra: {\n            id: MY_RULE.title + List.ty[s],\n            longClick: [{\n                title: \"刷新\",\n                js: $.toString((List,s) => {\n                    clearItem(List.ty[s]+'p')\n                    refreshPage(false);\n                    return \"hiker://empty\";\n                },List,s)\n            }]\n        }\n    });\n    var data = JSON.parse(fetch(url, {\n        headers: {\n            \"User-Agent\": \"Mozilla/5.0 (Linux; Android 12; M2012K11AC Build/SKQ1.211006.001; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/97.0.4692.98 Mobile Safari/537.36\"\n        }\n    }));\n    \n    var list = data.t;\n    list.forEach((x, index) => {\n        var g = data.g;\n        var i = data.i;\n        var a = data.a;\n        var d = data.d;\n        var url = Aurl(List.ty[s], i[index]);\n        var img = Aimg(List.ty[s], i[index]);\n        var desc = d[index] == '0' ? g[index] : d[index] + \" \" + g[index];\n        arr.push({\n            title: x,\n            desc: desc,\n            url:  \"hiker://page/detail#immersiveTheme#\",\n            img: img,\n            col_type: \"movie_3\",\n            extra: {\n                tid: i[index],\n                ty: List.ty[s],\n                pageTitle: x\n            }\n        });\n    });\n});\n}\nsetResult(arr);"},{"col_type":"movie_3","name":"分类","path":"class","rule":"js:\nvar d = [];\neval(JSON.parse(fetch(\"hiker://page/globals\")).rule);\nvar URI = input => encodeURI(input.replace('全部', ''))\n\nMY_URL = `${host}/${getMyVar('type','mv')}/${URI(getMyVar('类型',''))}-${URI(getMyVar('年代',''))}-${URI(getMyVar('地区',''))}-${URI(getMyVar('语言',''))}-${getMyVar('time','')}--${MY_PAGE}`\nvar html = request(MY_URL)\n\nvar _obj = {};\neval(pdfh(html, 'body&&script&&Html').split('_BT')[0]);\nvar oblist = Obj(_obj.list)\nvar times = GT(oblist)\nif (MY_PAGE == '1') {\n    var tabs = [{\n        title: 'type',\n        names: ['电影', '剧集', '动漫'],\n        ids: ['mv', 'tv', 'ac']\n    }]\n    const fold = getMyVar('fold', \"0\")\n    d.push({\n        title: fold === '1' ? '““””<b>' + '∨'.fontcolor(\"#FF0000\") + '</b>' : '““””<b>' + '∧'.fontcolor(\"#1aad19\") + '</b>',\n        url: $().lazyRule((fold) => {\n            putMyVar('fold', fold === '1' ? '0' : '1');\n            refreshPage(false);\n            return \"hiker://empty\"\n        }, fold),\n        col_type: 'scroll_button',\n    })\n    if (fold == '1') {\n        for (let data of oblist.l) {\n            tabs.push({\n                title: data.t,\n                names: data.a,\n                ids: typeof(data.v) == 'object' ? data.v : data.a\n            })\n        }\n        tabs.push(times);\n    }\n    //log(tabs)\n\n    setTabs(tabs);\n}\nvar list = _obj.inlist;\nfor (var i in list.t) {\n    d.push({\n        title: list.t[i],\n        img: Aimg(list.ty,list.i[i]),\n        url: \"hiker://page/detail#immersiveTheme#\",\n        desc: list.g[i],\n        extra:{\n            tid: list.i[i],\n            ty: list.ty,\n            pageTitle: list.t[i]\n        }\n    });\n}\n\nsetResult(d);"},{"col_type":"movie_3","name":"二级","path":"detail","rule":"js:\nvar d = [];\naddListener(\"onClose\", $.toString(() => {\n    let keys = listMyVarKeys();\n    for (let it of keys) {\n        clearMyVar(it);\n    }\n}));\neval(JSON.parse(fetch(\"hiker://page/globals\")).rule);\nvar html = fetch(Aurl(getTy(), getTid()),{\n    headers:{\n        \"User-Agent\": \"Mozilla/5.0 (Linux; Android 12; M2012K11AC Build/SKQ1.211006.001; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/97.0.4692.98 Mobile Safari/537.36\",\n        \"Cookie\": fetchPC('hiker://files/cache/bt_cookie.txt') || ''\n                    }\n})\nvar _obj = {};\neval(pdfh(html, 'body&&script&&Html').split('_BT')[0]);\nvar Data = transformData(extractData(_obj.d))\nvar 简介 = extractData(_obj.d).简介\nsetPageTitle(Data.titles[0])\nvar 标题 = '““””' + Data.titles[0] + '\\n' + (Data.titles.slice(1,3).join('\\n')).small();\nvar 描述 = '““””' + (Data.descs.slice(0,3).join('\\n')).small().fontcolor('#806d9e');\n        d.push({\n            title: 标题,\n            desc: 描述,\n            img: Aimg(dir,id),\n            url: Aurl(dir,id),\n            col_type: \"movie_1_vertical_pic_blur\",\n            extra:{\n                gradient: true\n            }\n        })\nvar fav = favorite(_obj.d.fa,id,dir)\n        try{\nvar db =  _obj.d.pf.db.id\nvar dbty = dir=='mv'?'movie':'tv'      \nd.push({\n    title: fav.t,\n    url:  $('#noLoading##noHistory#').lazyRule((fav) => {\n                    postRequest(fav.u, {\n                        headers: {\n                        \"Cookie\": fetchPC('hiker://files/cache/bt_cookie.txt') || ''\n                        }\n                        })\n                    toast(fav.info?'取消收藏':'收藏成功')\n                    refreshPage()\n                    return 'hiker://empty'\n                }, fav),\n    col_type: \"scroll_button\"\n},{\n    title: fontstyle(\"豆瓣\", { tags: \"small\",c:\"#20894d\" }),\n    col_type: \"scroll_button\",\n    url: `hiker://page/Sdetail#noHistory##immersiveTheme#?rule=青豆&type=${dbty}&id=${db}`\n  })\n  }catch(e){}\nvar xle = _obj.d.xle\nif(xle){\n    var xlm = getxl(xle,\"1\")\n    var xlindex = xle.t.indexOf(xlm) \n  d.push({\n    title: fontstyle(\"系列:\"+xlm, { tags: \"small\",c:\"brown\" }),\n    col_type: \"scroll_button\",\n    url:$(\"#noLoading#\").lazyRule((xle,dir,xlindex) => {\n        const hikerPop = require(\"http://hiker.nokia.press/hikerule/rulelist.json?id=6966\");\n      let 系列 = xle.t.map((x,i) => {\n          let title = x\n          let value = xle.u[i]\n              return {        \n              title: title,        \n              icon: \"https://hikerfans.com/tubiao/more/24.png\",        \n              url: value,    }});\n             hikerPop.selectCenterIcon({\n              iconList: 系列,            \n              title: \"请选择系列\",            \n              columns: 1,\n              position: xlindex,            \n              click(a) {\n                  hikerPop.runOnNewThread(() => {\n                      putMyVar('ty',dir)\n                      putMyVar('tid',a)\n                        return \"toast://选好了\"\n                    })\n                      refreshPage();\n                       }\n                               });      \n              return \"hiker://empty\";    \n     },xle,dir,xlindex)\n  })\n}\ntry{\nvar authors = _obj.d.daoyan\nvar tags = _obj.d.leixing\nauthors.forEach((item) => {\n    d.push({\n      title: fontstyle(item, { tags: \"small\", c: \"#8D6463\" }),\n      url: $(\"#noLoading#\").lazyRule((item) => {\n        putMyVar('st',\"2\")\n        putMyVar(\"keyword\", item);\n        return \"hiker://page/search?fypage\";\n      }, item),\n      col_type: \"scroll_button\",\n      extra: {\n        pageTitle: item,\n        nav: false,\n        lineVisible: false\n      }\n    })\n  })\n  tags.forEach((item) => {\n    d.push({\n      title: fontstyle(item, { tags: \"small\", c: \"#8D6463\" }),\n      url: $(\"#noLoading#\").lazyRule((item,dir) => {\n        putMyVar('type',dir)\n        putMyVar(\"类型\", item);\n        return \"hiker://page/class?fypage\";\n      }, item,dir),\n      col_type: \"scroll_button\",\n      extra: {\n        pageTitle: item,\n        nav: false,\n        lineVisible: false\n      }\n    })\n  })\n  }catch(e){}      \nsetDesc(d,简介)\nvar down = `${host}/ajax/downurl/${id}_${dir}/`\nvar list = JSON.parse(fetch(down,{\n    headers:{\n        \"Referer\": Aurl(dir,id),\n        \"Cookie\": fetchPC('hiker://files/cache/bt_cookie.txt') || ''\n                    },\n}))\nvar tabs = [\"在线\",\"磁力\",\"云盘\"]\nvar turls = [\"playlist\",\"downlist\",\"panlist\"]\nvar tag = getMyVar(\"turl\",\"playlist\");       \nvar play = list[tag]\ntabs.forEach((li,i)=>{\n    var turl = turls[i]\n    var length = listlength(turl,list[turl])=='0'?'':`(${listlength(turl,list[turl])})`\n    d.push({\n            title: getMyVar(\"fenl\", \"在线\") == li ? '““””'+(`${li}${length}`).fontcolor(getRangeColors()): `${li}${length}`,\n            col_type: \"text_3\",\n            url: $(\"#noLoading#\").lazyRule((li,turl) => {\n                putMyVar(\"fenl\", li);\n                putMyVar(\"turl\",turl);\n                refreshPage();\n                return 'hiker://empty';\n            },li,turl)\n            })\n})\n//log(play)\nif(tag==turls[0]){\n    try{\n    var sf = play.map(x=>x.t)\n    play.forEach(x=>{\n        d.push({\n            title: getMyVar(\"sf\",sf[0]) == x.t ? '““””'+x.t.fontcolor(getRangeColors()).small(): '““””'+x.t.small(),\n            col_type: \"scroll_button\",\n            url: $(\"#noLoading#\").lazyRule((x) => {\n                putMyVar(\"sf\", x.t);\n                refreshPage(false);\n                return 'hiker://empty';\n            },x)\n            })\n        })\n        var index = sf.indexOf(getMyVar(\"sf\",sf[0]))\n        var lazy = $('').lazyRule(() => {\n            var html = fetch(input,{\n                headers:{\n        \"Cookie\": fetchPC('hiker://files/cache/bt_cookie.txt') || ''\n                    },\n            })\n            var _obj = {};\n            eval(pdfh(html, 'body&&script&&Html').split('_BT')[0]);\n            var playu = _obj.player.url\n            return playu\n\n        })\n        var playlist = play[index].list\n        playlist.forEach((x,i)=>{\n            d.push({\n                title: x,\n                url: `${host}/py/${play[index].i}_${i+1}.html`+lazy,\n                col_type: \"text_4\"\n            })\n        })\n        }catch(e){\n        }\n}else if(tag==turls[1]){\n    try{\n        var downlist = play.list        \n        const categorizedData = {};\n        play.type.a.forEach((category) => {\n  categorizedData[category] = { p: [], s: [], t: [], u: [] ,k:[]};\n});\n\n// 遍历 jsonData.p 并根据 type.b 中的 id 分类\ndownlist.p.forEach((id, index) => {\n  const categoryIndex = play.type.b.indexOf(id);\n  if (categoryIndex !== -1) {\n    const category = play.type.a[categoryIndex];\n    categorizedData[category].p.push(id); categorizedData[category].s.push(downlist.s[index]);\n    categorizedData[category].t.push(downlist.t[index]);\n    categorizedData[category].u.push(downlist.u[index]);\n    categorizedData[category].k.push(downlist.k[index]);\n  }\n});\n\n        categorizedData[\"全部\"] = downlist\n        var lei = [\"全部\"]\n        var type = lei.concat(play.type.a)\n        var dt = getMyVar(\"df\",type[0]);\n        var dlist = categorizedData[dt]\n        type.forEach((x,i)=>{\n            var de = categorizedData[type[i]].t.length\n            d.push({\n                title: getMyVar(\"df\",\"全部\") == x ? '““””'+(x+\"[\"+de+\"]\").fontcolor(getRangeColors()).small(): '““””'+(x+\"[\"+de+\"]\").small(),\n                url: $(\"#noLoading#\").lazyRule((x) => {\n                putMyVar(\"df\", x);\n                refreshPage(false);\n                return 'hiker://empty';\n            },x),\n                col_type: \"scroll_button\"\n            })\n        })\n        var lazy = $('').lazyRule(() => {\n            eval(JSON.parse(fetch(\"hiker://page/globals\")).rule);\nvar html = fetch(input,{\n                headers:{\n        \"Cookie\": fetchPC('hiker://files/cache/bt_cookie.txt') || ''\n                    },\n            })\n            var d_code = html.match(/let\\s+d_code\\s*=\\s*'([^']+)';/)[1]\n            var play = decrypt(pdfh(html,'body&&section:matches(资源链接|资源下载)&&li:matches(磁力)&&data-clipboard-text'),d_code)\n            return play\n\n        })\ndlist.t.forEach((x,i)=>{\n            d.push({\n                title: '““””'+(headText(dlist.k[i])+x).small(),\n                url: `hiker://page/BT?url=${host}/bt/${dlist.u[i]}#noHistory##noRecordHistory#`,\n                desc: dlist.s[i],\n                col_type: \"text_1\",\n                extra:{\n                    k: dlist.k[i]\n                }\n            })\n        })\n                \n    }catch(e){}\n}else if(tag==turls[2]){\n    try{\n        const pan = {};\n\n\nplay.tname.forEach((category) => {\n  pan[category] = { url: [], name: [], time: [] ,user: [],p: [],type:[]};\n});\n\n// 遍历 jsonData.type 并根据 type 中的值分类\nplay.type.forEach((typeId, index) => {\n  // 找到对应的 category\n  const category = play.tname[typeId];\n  if (category) {\n    pan[category].url.push(play.url[index]);\n    pan[category].name.push(play.name[index]);\n    pan[category].time.push(play.time[index]);\n    pan[category].user.push(play.user[index]);\n    pan[category].p.push(play.p[index]);\n    pan[category].type.push(typeId);\n\n\n  }\n});\n         pan[\"全部\"] = play\n        var lei = [\"全部\"]\n        var type = lei.concat(play.tname)\n        var dt = getMyVar(\"pf\",type[0]);\n        var plist = pan[dt]\n        type.forEach((x,i)=>{\n            var de = pan[type[i]].name.length\n            d.push({\n                title: getMyVar(\"pf\",\"全部\") == x ? '““””'+(x+\"[\"+de+\"]\").fontcolor(getRangeColors()).small(): '““””'+(x+\"[\"+de+\"]\").small(),\n                url: $(\"#noLoading#\").lazyRule((x) => {\n                putMyVar(\"pf\", x);\n                refreshPage(false);\n                return 'hiker://empty';\n            },x),\n                col_type: \"scroll_button\"\n            })\n        })\n        var lazy = $('').lazyRule(() => {\n        if (/ali/.test(input)){\n            return \"hiker://page/aliyun?rule=云盘君.简&page=fypage&realurl=\" + encodeURIComponent(input);\n        }\n         else  if (/quark|uc/.test(input)){\n        return \"hiker://page/quarkList?rule=Quark.简&page=fypage&realurl=\"+input\n    }else\n    return input\n\n});\nplist.name.forEach((x,i)=>{\n    var pass = plist.p[i]==''?'':'[提取码:'+plist.p[i]+']'\n    var tag = play.tname[plist.type[i]]\n            d.push({\n                title: '““””'+x.small(),\n                url: plist.url[i]+lazy,\n                desc: `${plist.user[i]} ${plist.time[i]} [${tag}] ${pass}`,\n                col_type: \"text_1\"\n            })\n        })\n\n\n        \n    }catch(e){}\n}\nvar like = _obj.cblist\nd.push({\n            title: \"相关推荐\",\n            url: \"hiker://empty\",\n            img: \"https://hikerfans.com/tubiao/more/84.png\",\n            col_type: \"avatar\"\n        })\nlike.t.forEach((x,i)=>{\n    d.push({\n        title: x,\n        url: \"hiker://page/detail#immersiveTheme##noHistory##noRecordHistory#\",\n        img: Aimg(dir,like.u[i]),\n        col_type: \"movie_3\",\n        extra: {\n                tid: like.u[i],\n                ty: dir,\n                pageTitle: x\n            }\n    })\n})\nsetResult(d);"},{"col_type":"movie_3","name":"搜索","path":"search","rule":"js:\nvar d = [];\neval(JSON.parse(fetch(\"hiker://page/globals\")).rule);\nconst page = MY_PAGE\nvar surl = `${host}/s/${getMyVar(\"st\",\"1\")}-0--${page}/${getMyVar(\"keyword\")}`\nvar html = fetch(surl)\nvar list = pdfa(html,\".sr_lists&&li\")\nlist.forEach(x=>{\n    var link = pdfh(x,\"a&&href\").match(/\\/(\\w+)\\/(\\w+)/);\n    d.push({\n        title: pdfh(x,\"h3&&Text\"),\n        img: pdfh(x,\"img&&data-src\"),\n        url: \"hiker://page/detail#immersiveTheme#\",\n        desc: pdfh(x,\"p&&Text\"),\n        content: pdfh(x,\".p0&&Text\"),\n        col_type: \"movie_3\",\n        extra: {\n                tid: link[2],\n                ty: link[1],\n                pageTitle: pdfh(x,\"h3&&Text\")\n            }\n    })\n})\n\nsetResult(d);"},{"col_type":"movie_3","name":"收藏","path":"favorite","rule":"js:\nvar d = [];\naddListener(\"onClose\", $.toString(() => {\n    let keys = listMyVarKeys();\n    for (let it of keys) {\n        clearMyVar(it);\n    }\n}));\neval(JSON.parse(fetch(\"hiker://page/globals\")).rule);\nvar url = `${host}/user/favorite/${getMyVar(\"ftype\",\"\")}`\nvar html =fetch(url,{\n    headers:{\n        \"Cookie\": fetchPC('hiker://files/cache/bt_cookie.txt') || ''\n    }\n})\nvar _obj = {};\neval(pdfh(html, 'body&&script&&Html').split('_BT')[0]);\nvar tabs = [\"全部\",\"电影\",\"剧集\",\"动漫\"]\nvar turls = [\"\",\"mv\",\"tv\",\"ac\"]\ntabs.forEach((li,i)=>{\n    var turl = turls[i]\n    d.push({\n            title: getMyVar(\"favt\", \"全部\") == li ? '““””'+li.fontcolor(getRangeColors()): li,\n            col_type: \"flex_button\",\n            url: $(\"#noLoading#\").lazyRule((li,turl) => {\n                putMyVar(\"favt\", li);\n                putMyVar(\"ftype\",turl);\n                refreshPage();\n                return 'hiker://empty';\n            },li,turl)\n            })\n})\nvar list = _obj.inlist\nlist.t.forEach((x,i)=>{  \n    d.push({\n        title: x,\n        img: Aimg(replaceValue(list.ty[i]),list.i[i]),\n        url: \"hiker://page/detail#immersiveTheme#\",\n        desc: list.g[i],\n        col_type: \"movie_3\",\n        extra:{\n            tid: list.i[i],\n            ty: replaceValue(list.ty[i]),\n            pageTitle: x,\n            longClick: [{\n                        title: '取消收藏',\n                        js: $.toString((id, dir) => {\n                            eval(JSON.parse(fetch(\"hiker://page/globals\")).rule);\n        postRequest(favorite(2,id,dir).u, {headers:{\n        \"Cookie\": fetchPC('hiker://files/cache/bt_cookie.txt') || ''\n    }})\n                    toast('取消收藏')\n                    refreshPage()\n                    return 'hiker://empty'\n                   },list.i[i],replaceValue(list.ty[i]))\n                    }]\n        }\n    })\n})\nsetResult(d);"}],"title":"无名小站","author":"季风","version":1,"type":"video","url":"hiker://empty##fypage","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\n$.require(\"hiker://page/main\")","searchFind":"js:\nvar d = [];\nlet key = getParam('key');\nconst page = MY_PAGE;\nd.push({\n    title: \"点我开始搜索\" + key,\n    url: $(\"#noLoading#\").lazyRule((key) => {\n        putMyVar(\"st\",\"1\")\n        putMyVar(\"keyword\", key);\n        return \"hiker://page/search?fypage\";\n    }, key),\n    extra: {\n        pageTitle: \"搜索:\" + key,\n    }\n});\nsetResult(d)","search_url":"hiker://empty?key=**&page=fypage","group":"④网盘","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"公共\",\"path\":\"globals\",\"rule\":\"//list: ['net', 'org', 'si', 'nu', 'fun']\\nconst host = \\\"https://www.btnull.net\\\"\\nfunction Aimg(ty,id){\\n    return \\\"https://s.tutu.pm/img/\\\"+ty+\\\"/\\\"+id+\\\".webp\\\"\\n}\\nfunction Aurl(ty,id){\\n    return \\\"https://www.btnull.net/\\\"+ty+\\\"/\\\"+id\\n}\\nconst 分类颜色 = () => '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6)\\nfunction substr(str, maxLength) {\\n  let len = 0;\\n  for (let i = 0; i < str.length; i++) {\\n    if (str.charCodeAt(i) > 255) {\\n      len += 2;\\n    } else {\\n      len++;\\n    }\\n    if (len > maxLength) {\\n      return str.slice(0, i) + '...';\\n    }\\n  }\\n  return str;\\n}\\nfunction setDesc(arr, desc, num) {\\n  //log(desc)\\n  if (desc == undefined) {\\n    return;\\n  }\\n  desc = desc.constructor == Array ? desc.join('<br>') : desc;\\n  if (desc.replace(/(<br>|\\\\s+|<\\\\/?p>|&nbsp;)/g, '').length == 0) {\\n    return;\\n  }\\n\\n  const mark = 'desc';\\n  num = typeof (num) == 'undefined' ? 100 : num\\n  desc = desc.startsWith('　　') ? desc : '　　' + desc;\\n  desc = desc.replace(/'/g, \\\"&#39;\\\");\\n  desc = desc.replace(/\\\\r\\\\n/g, \\\"<br>\\\");\\n  desc = desc.replace(/\\\\r/g, \\\"<br>\\\");\\n  desc = desc.replace(/\\\\n/g, \\\"<br>\\\");\\n  let sdesc = substr(desc, num);\\n\\n  var colors = {\\n    show: \\\"black\\\",\\n    hide: \\\"grey\\\"\\n  }\\n\\n  var lazy = $(`#noLoading#`).lazyRule((dc, sdc, m, cs) => {\\n    var show = storage0.getItem(m, '0');\\n    var title = findItem('desc').title;\\n    var re = /(<\\\\/small><br>.*?>).+/g;\\n    var exp = '展开:';\\n    var ret = '收起:';\\n    if (show == '1') {\\n      updateItem('desc', {\\n        title: title\\n          .replace(ret, exp)\\n          .replace(re, '$1' + sdc + '</small>')\\n          .replace(/(<\\\\/small><br>\\\\<font color=\\\").*?(\\\">)/, '$1' + cs.hide + '$2')\\n\\n      })\\n      storage0.setItem(m, '0');\\n    } else {\\n      updateItem('desc', {\\n        title: title\\n          .replace(exp, ret)\\n          .replace(re, '$1' + dc + '</small>')\\n          .replace(/(<\\\\/small><br>\\\\<font color=\\\").*?(\\\">)/, '$1' + cs.show + '$2')\\n      })\\n      storage0.setItem(m, '1');\\n    }\\n    return `hiker://empty`\\n  }, desc, sdesc, mark, colors)\\n  var sc = storage0.getItem(mark, '0') == '0' ? '展开:' : '收起:';\\n  var dc = storage0.getItem(mark, '0') == '0' ? sdesc : desc;\\n  var cs = storage0.getItem(mark, '0') == '0' ? colors.hide : colors.show;\\n  arr.push({\\n    title: '' + '<b><font color=\\\"#098AC1\\\">∷剧情简介\\t</font></b>' + \\\"<small><a style='text-decoration: none;' href='\\\" + lazy + \\\"'>\\\" + sc + '</a></small><br><font color=\\\"' + cs + '\\\">' + `${dc}` + '</small>',\\n    col_type: 'rich_text',\\n    extra: {\\n      id: 'desc',\\n      lineSpacing: 6,\\n      textSize: 15,\\n      lineVisible: true,\\n    }\\n  })\\n} \\nvar getRangeColors = function() {\\n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);\\n}\\nfunction decrypt(r, k) {\\n        let s = window0.atob(r);\\n        let d = '';\\n        for (let i = 0; i < s.length; i++) {\\n            d += String.fromCharCode(s.charCodeAt(i) ^ k.charCodeAt(i % k.length))\\n        }\\n        return d\\n    }\\nfunction fontstyle(text, params, col) {\\n    params = params || undefined;\\n    var h = params.h !== false ? '““””' : '';\\n    let ontag = [\\\"icon_small_3\\\"];\\n    if (col != undefined) {\\n      if (ontag.includes(col)) {\\n        h = '';\\n      }\\n    }\\n    var tags = params.tags || \\\"\\\";\\n    if (params.c != undefined) {\\n      text = text.fontcolor(params.c);\\n    }\\n    if (tags) {\\n      var tagArray = tags.split('|').filter(e => e);\\n      var openTags = '';\\n      var closeTags = '';\\n      for (var i = 0; i < tagArray.length; i++) {\\n        openTags += '<' + tagArray[i] + '>';\\n        closeTags = '</' + tagArray[i] + '>' + closeTags;\\n      }\\n      text = openTags + text + closeTags;\\n    }\\n    return h + text;\\n  }\\nconst Obj = (list) => {\\n    let year = Array.from({ length: list.y - (list.y - 10) + 1 }, (_, i) => list.y - i);\\n\\n    list.r.d1 = {\\n        a: ['更新时间', '添加时间', list.dir === 'mv' ? '上映时间' : '首播时间', '评分最高', '评分人数', '评分总人数', '综合评分'],\\n        b: ['', 'addtime', 'date', 'score', 'number', 'numbers', 'cscore'],\\n    };\\n\\n    list.r.d2 = {\\n        a: ['IMDB', '可播放'],\\n        b: [9, 1],\\n    };\\n\\n    let lobj = [{\\n        a: list.dir !== 'ac' ? \\n            ['剧情', '科幻', '动作', '喜剧', '爱情', '冒险', '儿童', '歌舞', '音乐', '奇幻', '动画', '恐怖', '惊悚', '丧尸', '战争', '传记', '纪录', '犯罪', '悬疑', '西部', '灾难', '古装', '武侠', '家庭', '短片', '校园', '文艺', '运动', '青春', '同性', '励志', '人性', '美食', '女性', '治愈', '历史', '真人秀', '脱口秀'] : \\n            ['剧情', '萌系', '科幻', '日常', '战斗', '战争', '热血', '机战', '游戏', '搞笑', '恋爱', '后宫', '百合', '基腐', '冒险', '儿童', '歌舞', '音乐', '奇幻', '恐怖', '惊悚', '犯罪', '悬疑', '西部', '灾难', '古装', '武侠', '泡面', '校园', '运动', '青春', '美食', '治愈', '致郁', '励志', '历史', '纪录', '异世界'],\\n        t: '类型',\\n    }, {\\n        a: year.concat(['20年代', '10年代', '00年代', '90年代', '80年代', '70年代', '60年代', '更早']),\\n        v: year.concat([120, 110, 100, 90, 80, 70, 60, 1]),\\n        t: '年代',\\n    }, {\\n        a: ['大陆', '香港', '台湾', '海外', '欧美', '美国', '日本', '韩国', '英国', '法国', '德国', '印度', '泰国', '瑞典', '巴西', '加拿大', '俄罗斯', '意大利', '比利时', '西班牙', '澳大利亚'],\\n        t: '地区',\\n    }, {\\n        a: ['英语', '法语', '国语', '粤语', '日语', '韩语', '泰语', '德语', '俄语', '闽南语', '丹麦语', '波兰语', '瑞典语', '印地语', '挪威语', '意大利语', '西班牙语', '无对白'],\\n        t: '语言',\\n    }];\\n    list.l = list.l.concat(lobj);\\n    return list;\\n};\\nfunction extractData(data) {\\n    const result = {};\\n    const fields = {\\n        title: \\\"标题\\\",\\n        status: \\\"状态\\\",\\n        daoyan: \\\"导演\\\",\\n        zhuyan: \\\"主演\\\",\\n        leixing: \\\"类型\\\",\\n        diqu: \\\"地区\\\",\\n        stime: \\\"上映\\\",\\n        times: \\\"时长\\\",\\n        introduce: \\\"简介\\\"\\n    };\\n\\n    Object.keys(fields).forEach(key => {\\n        if (data[key]) {\\n            // 如果键存在，且值是数组，使用 join 连接，否则直接赋值\\n            result[fields[key]] = Array.isArray(data[key]) ? data[key].join('/') : data[key];\\n        }\\n    });\\n\\n    return result;\\n}\\nfunction transformData(data) {\\n    const descs = [];\\n    const titles = [];\\n\\n    if (data[\\\"类型\\\"]) descs.push(`类型：${data[\\\"类型\\\"]}`);\\n    if (data[\\\"状态\\\"]) descs.push(`状态：${data[\\\"状态\\\"]}`);\\n    if (data[\\\"时长\\\"]) descs.push(`时长：${data[\\\"时长\\\"]}`);\\n    if (data[\\\"地区\\\"]) descs.push(`地区：${data[\\\"地区\\\"]}`);\\n    if (data[\\\"主演\\\"]) descs.push(`主演：${data[\\\"主演\\\"]}`);\\n\\n    if (data[\\\"标题\\\"]) titles.push(data[\\\"标题\\\"]);\\n    if (data[\\\"导演\\\"]) titles.push(`导演：${data[\\\"导演\\\"]}`);\\n    if (data[\\\"上映\\\"]) titles.push(`上映：${data[\\\"上映\\\"]}`);\\n\\n    return { descs, titles };\\n}\\nfunction headText(k){\\n    if(k=='0'){\\n        return \\\"🧲\\\"\\n    }else return \\\"📂\\\"\\n}\\nfunction GT(oblist) {\\n        return {\\n            ids: oblist.r.d1.b,\\n            names: oblist.r.d1.a,\\n            title: 'time'\\n        };\\n    }\\nfunction setTabs(tabs) {\\n        if (!tabs) return;\\n        for (let data of tabs) {\\n     if (data.title !== 'type'&& data.title !== 'time'&&Array.isArray(data.names)) {\\n    data.names.unshift('全部');\\n} else if (data.title !== 'type'&&data.title !== 'time') {\\n            continue; // 跳过非数组的情况\\n        }\\n            getMyVar(data.title) || putMyVar(data.title, data.ids[0]);\\n            for (let i = 0; i < data.names.length; i++) {\\n                var title = data.names[i].toString()\\n                d.push({\\n                    title: getMyVar(data.title) == data.ids[i] ?\\n                        `““””<font color=${分类颜色()}><b>${title}</b></font>` : title,\\n                    url: $('#noLoading#').lazyRule(\\n                        (title, id) => {\\n                            if (getMyVar(title) != id) {\\n                                if (title == 'type') clearMyVar('类型')\\n                                putMyVar(title, id);\\n                                refreshPage();\\n                            }\\n                            return 'hiker://empty';\\n                        },\\n                        data.title.toString(),\\n                        data.ids[i]\\n                    ),\\n                    col_type: 'scroll_button',\\n                });\\n            }\\n            d.push({\\n                col_type: 'blank_block',\\n            });\\n            if (data.arr) {\\n                setTabs(data.arr[data.ids.indexOf(getMyVar(data.title))]);\\n            }\\n        }\\n    }\\nfunction getxl(data,target) {\\n    let index = data.s.indexOf(target);\\n    if (index !== -1) {\\n        return data.t[index];\\n    }\\n    return null; // 如果找不到匹配项，返回 null\\n}\\nfunction backColor(title, colors) {\\n    var def = {\\n      fc: '#FFFFFF',\\n      bc: '',\\n    }\\n    colors = Object.assign(def, colors);\\n    return '<font color=\\\"' + colors.fc + '\\\"><span style=\\\"background-color: ' + colors.bc + '\\\">' + title + '</span></font>'\\n  }\\n  function favorite(fa,id,dir){\\n      if(fa=='1'){\\n          fav = {\\n              t: '🩶',\\n              u: `${host}/ajax/favorite/add_${id}_${dir}/`,\\n              info: false\\n          }\\n      }else if(fa=='2') {\\n          fav = {\\n              t: '❤️',\\n              u: `${host}/ajax/favorite/del_${id}_${dir}/`,\\n              info: true\\n          }\\n      }else fav = {\\n          t: '💔'\\n          \\n      }\\n      return fav\\n  }\\nfunction replaceValue(value) {\\n     if (value === 1) return \\\"mv\\\"; \\n     if (value === 2) return \\\"tv\\\"; \\n     if (value === 3) return \\\"ac\\\"; \\n     return value; \\n     }\\nfunction listlength(input,play){\\n    if(!play) return '0'\\n    else if(input=='playlist') return play.length;\\n    else if(input=='downlist') return play.list.t.length;\\n    else if(input=='panlist') return play.e.length;  \\n    else return '未登录'\\n}\\nfunction combinPath(dire, path) {\\n    let Proto = '';\\n    if (dire.includes(\\\"//\\\")) {\\n        [Proto, _, dire] = dire.split(/(\\\\/{2})/);\\n        Proto += _;\\n    }\\n    const Paths = java.nio.file.Paths;\\n    dire = dire + path;\\n    var p = Paths.get(dire).toAbsolutePath().normalize();\\n    return Proto + String(p);\\n}\\nfunction getTy() {\\n  // 如果需要使用 getParam('ty')，可以在这里设置条件\\n  return MY_PARAMS.ty ? getMyVar('ty', MY_PARAMS.ty) : getMyVar('ty', getParam('ty'))\\n}\\n\\nfunction getTid() {\\n  // 如果需要使用 getParam('tid').split('#')[0]，可以在这里设置条件\\n  return MY_PARAMS.tid ? getMyVar('tid', MY_PARAMS.tid) : getMyVar('tid', getParam('tid').split('#')[0])\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"磁力\",\"path\":\"BT\",\"rule\":\"js:\\nvar d = [];\\neval(JSON.parse(fetch(\\\"hiker://page/globals\\\")).rule);\\nvar html = fetch(MY_URL,{\\n                headers:{\\n        \\\"Cookie\\\": fetchPC('hiker://files/cache/bt_cookie.txt') || ''\\n                    },\\n            })\\n            d.push({\\n                title: \\\"资源名称\\\",\\n                desc: pdfh(html,\\\".alert-info&&Text\\\"),\\n                url: \\\"hiker://empty\\\",\\n                col_type: \\\"text_1\\\"\\n            },{\\n                col_type: \\\"line_blank\\\"\\n            })\\n            \\nvar d_code = html.match(/let\\\\s+d_code\\\\s*=\\\\s*'([^']+)';/)[1]\\nif(MY_PARAMS.k=='0'){\\n    var bt = decrypt(pdfh(html,\\\"li:matches(磁力)&&data-clipboard-text\\\"),d_code)\\n    var zz = decrypt(pdfh(html,\\\"li:matches(种子)&&data-clipboard-text\\\"),d_code).replace(/#host#/,`${host}`)\\n    d.push({\\n        title: pdfh(html,\\\".alert-info&&Text\\\"),\\n        //desc: pdfh(x,\\\".left&&Text\\\"),\\n        url: \\\"hiker://empty\\\",\\n        col_type: \\\"text_1\\\",\\n    },{\\n                title: fontstyle(backColor(\\\"磁力链接\\\", { bc: \\\"#C49f47\\\" }), { tags: \\\"small\\\" }),\\n                col_type: \\\"text_3\\\",\\n                url: bt,\\n                extra: {\\n                    longClick: [{\\n                        title: \\\"复制磁链\\\",\\n                        js: $.toString((bt) => {\\n                            copy(bt)\\n                        }, bt),\\n                    }, {\\n                        title: \\\"其它应用打开\\\",\\n                        js: JSON.stringify(\\\"magnet://\\\" + bt),\\n                    }\\n                    ],\\n                    lineVisible: false\\n                }\\n            },{\\n                title: fontstyle(backColor(pdfh(html,\\\"em&&Text\\\").split('　')[1], { bc: \\\"#8E44AD\\\" }), { tags: \\\"small\\\" }),\\n                col_type: \\\"text_3\\\",\\n                url: \\\"hiker://empty\\\",\\n            },{\\n                title: fontstyle(backColor(\\\"下载种子\\\", { bc: \\\"#3598DC\\\" }), { tags: \\\"small\\\" }),\\n                col_type: \\\"text_3\\\",\\n                url: $(\\\"#noLoading#\\\").lazyRule((zz) => {\\n                    return zz\\n                }, zz),\\n                extra: {\\n                    longClick: [{\\n                        title: \\\"复制\\\",\\n                        js: $.toString((zz) => {\\n                            copy(zz)\\n                        }, zz),\\n                    }]\\n                    }\\n            })\\n            d.push({\\n                title: \\\"资源信息\\\",\\n                col_type: \\\"rich_text\\\"\\n            },{\\n                title: pdfh(html,\\\"section,2&&.alert-info&&Html\\\"),\\n                col_type: \\\"rich_text\\\",\\n                extra: {\\n                    textSize: 14\\n                }\\n            })\\n    \\n}\\nelse{\\nvar list = pdfa(html,\\\"body&&section.wrap&&li\\\")\\nlist.forEach(x=>{\\n    var bt = decrypt(pdfh(x,\\\"#d2&&data-clipboard-text\\\"),d_code)\\n    var zz = decrypt(pdfh(x,\\\"#d1&&data-clipboard-text\\\"),d_code).replace(/#host#/,`${host}`)\\n    d.push({\\n        title: '““””'+pdfh(x,\\\"div&&Text\\\").small(),\\n        //desc: pdfh(x,\\\".left&&Text\\\"),\\n        url: \\\"hiker://empty\\\",\\n        col_type: \\\"text_1\\\",\\n    },{\\n                title: fontstyle(backColor(\\\"磁力链接\\\", { bc: \\\"#C49f47\\\" }), { tags: \\\"small\\\" }),\\n                col_type: \\\"text_3\\\",\\n                url: bt,\\n                extra: {\\n                    longClick: [{\\n                        title: \\\"复制磁链\\\",\\n                        js: $.toString((bt) => {\\n                            copy(bt)\\n                        }, bt),\\n                    }, {\\n                        title: \\\"其它应用打开\\\",\\n                        js: JSON.stringify(\\\"magnet://\\\" + bt),\\n                    }\\n                    ],\\n                    lineVisible: false\\n                }\\n            },{\\n                title: fontstyle(backColor(pdfh(x,\\\".left&&Text\\\"), { bc: \\\"#8E44AD\\\" }), { tags: \\\"small\\\" }),\\n                col_type: \\\"text_3\\\",\\n                url: \\\"hiker://empty\\\",\\n            },{\\n                title: fontstyle(backColor(\\\"下载种子\\\", { bc: \\\"#3598DC\\\" }), { tags: \\\"small\\\" }),\\n                col_type: \\\"text_3\\\",\\n                url: $(\\\"#noLoading#\\\").lazyRule((zz) => {\\n                    return zz\\n                }, zz),\\n                extra: {\\n                    longClick: [{\\n                        title: \\\"复制\\\",\\n                        js: $.toString((zz) => {\\n                            copy(zz)\\n                        }, zz),\\n                    }]\\n                    }\\n            })\\n    })\\n}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"首页\",\"path\":\"main\",\"rule\":\"js:\\nvar arr = [];\\neval(JSON.parse(fetch(\\\"hiker://page/globals\\\")).rule);\\nconst page = MY_PAGE\\nvar login = host+\\\"/user/login\\\"\\nvar logining = fetch(login,{\\n    headers:{\\n        \\\"Cookie\\\": fetchPC('hiker://files/cache/bt_cookie.txt') || ''\\n    }\\n})\\nif(page==1){\\nif(logining.includes(\\\"登录成功\\\")){\\n        arr.push({\\n            title: \\\"BTNULL\\\",\\n            url: $(\\\"#noLoading#\\\").lazyRule(()=> {\\n                    return $([\\\"分类\\\", \\\"收藏\\\"], 2).select(() => {\\n                        if (input == \\\"分类\\\") {\\n                            return \\\"hiker://page/class?page=fypage\\\";\\n                        } else {\\n                            return \\\"hiker://page/favorite\\\";\\n                        }\\n                    });\\n                }),\\n            desc: \\\"分类/收藏\\\",\\n            pic_url: host+\\\"/favicon.ico\\\",\\n            col_type: \\\"avatar\\\",\\n            extra:{\\n                    longClick:[{\\n                        title: '退出账号',\\n                        js: $.toString(() => {\\n        writeFile('hiker://files/cache/bt_cookie.txt', '')\\n                    toast('退出了账号')\\n                    refreshPage()\\n                    return 'hiker://empty'\\n                   })\\n                    }]\\n                }\\n        });\\n    }else{\\narr.push({\\n        title: '登录账号',\\n        desc: '登录时记得都勾上'.small(),\\n        pic_url: \\\"https://m.dmzj.com/images/photo.png\\\",\\n        url: login + $('').rule(() => {\\n            var d = [];\\n            d.push({\\n                col_type: 'x5_webview_single',\\n                url: MY_URL,\\n                desc: 'list&&screen',\\n                extra: {\\n                    \\\"User-Agent\\\": \\\"Mozilla/5.0 (Linux; Android 12; SM-G9750 Build/SP1A.210812.016; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/89.0.4389.72 MQQBrowser/6.2 TBS/046279 Mobile Safari/537.36\\\",             \\n                    showProgress: false,\\n                    js: $.toString((u) => {\\n                        function check() {\\n                            var co = fba.getCookie(u);\\n                            console.log(co)\\n                            if (co.includes('BT_auth')) {\\n                                fba.parseLazyRule($$$().lazyRule((co) => {\\n                                    writeFile('hiker://files/cache/bt_cookie.txt', co);\\n                                    toast('账号已登录');\\n                                    back(true);\\n                                }, co));\\n                            } else {\\n                                setTimeout(check, 500);\\n                            }\\n                        }\\n                        check();\\n                    }, MY_URL)\\n                }\\n            });\\n            return setResult(d);\\n        }),\\n        col_type: 'avatar'\\n    });\\n}\\nvar _obj = {};\\neval(pdfh(fetch(host), 'body&&script&&Html').split('_BT')[0]);\\nvar ban = _obj.banner\\n    try {\\r\\n            var lb = ban.t.map((x,s)=> {\\n                var y = ban.y\\n                var id = ban.i\\r\\n                var obj = {};\\n                obj.title = x               \\r\\n                obj.img = Aimg(y[s],id[s]).replace(id[s],`i_${id[s]}`)\\n                obj.url= `&ty=${y[s]}&tid=${id[s]}`\\r\\n                return obj;\\r\\n            })\\n            var cfg = {\\n    url: \\\"hiker://page/detail?rule=无名小站{url}\\\",\\n}\\n            var o = {}\\r\\n            var r = $.require(combinPath(storage0.getItem(\\\"src_mode\\\", 'https://gitee.com/zetalpha/hikerview/raw/master/juyue/'), \\\"../global/js/x5ui.js\\\"), undefined, 24);\\r\\n            r.show(arr, lb,cfg,o);\\n        } catch (e) {\\r\\n            log(e.message)\\r\\n        }\\narr.push({\\n        url: \\\"'hiker://page/search?fypage'\\\",\\n        title: \\\"搜索\\\",\\n        desc: '请输入关键词',\\n        col_type: 'input',\\n        extra: {\\n            onChange: $.toString(() => {\\n       putMyVar(\\\"st\\\",\\\"1\\\")\\n       putMyVar(\\\"keyword\\\", input);\\n                })\\n            }\\n        })    \\nvar List = {\\n    \\\"h2\\\": [\\\"新片推荐\\\", \\\"新剧推荐\\\", \\\"新番推荐\\\"],\\n    \\\"ty\\\": [\\\"mv\\\", \\\"tv\\\", \\\"ac\\\"],\\n    \\\"p\\\": [1, 1, 1]  // 将 List.p 改为数组，分别记录每个类别的页数\\n}\\nList.h2.forEach((h, s) => {\\n    var p = getItem(List.ty[s]+'p','1')\\n    var url = `${host}/change/${p}_${List.ty[s]}/`\\n    arr.push({\\n        title: h.big()+\\\"[\\\"+p+\\\"/5]\\\",\\n        img: \\\"https://hikerfans.com/tubiao/messy/9.svg\\\",\\n        url: $('#noLoading#').lazyRule((List,s) => {\\n            var p = getItem(List.ty[s]+'p','1')\\n            var ps = ((p % 5) + 1).toString()\\n            setItem(List.ty[s]+'p',ps)\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\";\\n        },List,s),\\n        col_type: \\\"text_icon\\\",\\n        extra: {\\n            id: MY_RULE.title + List.ty[s],\\n            longClick: [{\\n                title: \\\"刷新\\\",\\n                js: $.toString((List,s) => {\\n                    clearItem(List.ty[s]+'p')\\n                    refreshPage(false);\\n                    return \\\"hiker://empty\\\";\\n                },List,s)\\n            }]\\n        }\\n    });\\n    var data = JSON.parse(fetch(url, {\\n        headers: {\\n            \\\"User-Agent\\\": \\\"Mozilla/5.0 (Linux; Android 12; M2012K11AC Build/SKQ1.211006.001; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/97.0.4692.98 Mobile Safari/537.36\\\"\\n        }\\n    }));\\n    \\n    var list = data.t;\\n    list.forEach((x, index) => {\\n        var g = data.g;\\n        var i = data.i;\\n        var a = data.a;\\n        var d = data.d;\\n        var url = Aurl(List.ty[s], i[index]);\\n        var img = Aimg(List.ty[s], i[index]);\\n        var desc = d[index] == '0' ? g[index] : d[index] + \\\" \\\" + g[index];\\n        arr.push({\\n            title: x,\\n            desc: desc,\\n            url:  \\\"hiker://page/detail#immersiveTheme#\\\",\\n            img: img,\\n            col_type: \\\"movie_3\\\",\\n            extra: {\\n                tid: i[index],\\n                ty: List.ty[s],\\n                pageTitle: x\\n            }\\n        });\\n    });\\n});\\n}\\nsetResult(arr);\"},{\"col_type\":\"movie_3\",\"name\":\"分类\",\"path\":\"class\",\"rule\":\"js:\\nvar d = [];\\neval(JSON.parse(fetch(\\\"hiker://page/globals\\\")).rule);\\nvar URI = input => encodeURI(input.replace('全部', ''))\\n\\nMY_URL = `${host}/${getMyVar('type','mv')}/${URI(getMyVar('类型',''))}-${URI(getMyVar('年代',''))}-${URI(getMyVar('地区',''))}-${URI(getMyVar('语言',''))}-${getMyVar('time','')}--${MY_PAGE}`\\nvar html = request(MY_URL)\\n\\nvar _obj = {};\\neval(pdfh(html, 'body&&script&&Html').split('_BT')[0]);\\nvar oblist = Obj(_obj.list)\\nvar times = GT(oblist)\\nif (MY_PAGE == '1') {\\n    var tabs = [{\\n        title: 'type',\\n        names: ['电影', '剧集', '动漫'],\\n        ids: ['mv', 'tv', 'ac']\\n    }]\\n    const fold = getMyVar('fold', \\\"0\\\")\\n    d.push({\\n        title: fold === '1' ? '““””<b>' + '∨'.fontcolor(\\\"#FF0000\\\") + '</b>' : '““””<b>' + '∧'.fontcolor(\\\"#1aad19\\\") + '</b>',\\n        url: $().lazyRule((fold) => {\\n            putMyVar('fold', fold === '1' ? '0' : '1');\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\"\\n        }, fold),\\n        col_type: 'scroll_button',\\n    })\\n    if (fold == '1') {\\n        for (let data of oblist.l) {\\n            tabs.push({\\n                title: data.t,\\n                names: data.a,\\n                ids: typeof(data.v) == 'object' ? data.v : data.a\\n            })\\n        }\\n        tabs.push(times);\\n    }\\n    //log(tabs)\\n\\n    setTabs(tabs);\\n}\\nvar list = _obj.inlist;\\nfor (var i in list.t) {\\n    d.push({\\n        title: list.t[i],\\n        img: Aimg(list.ty,list.i[i]),\\n        url: \\\"hiker://page/detail#immersiveTheme#\\\",\\n        desc: list.g[i],\\n        extra:{\\n            tid: list.i[i],\\n            ty: list.ty,\\n            pageTitle: list.t[i]\\n        }\\n    });\\n}\\n\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"二级\",\"path\":\"detail\",\"rule\":\"js:\\nvar d = [];\\naddListener(\\\"onClose\\\", $.toString(() => {\\n    let keys = listMyVarKeys();\\n    for (let it of keys) {\\n        clearMyVar(it);\\n    }\\n}));\\neval(JSON.parse(fetch(\\\"hiker://page/globals\\\")).rule);\\nvar html = fetch(Aurl(getTy(), getTid()),{\\n    headers:{\\n        \\\"User-Agent\\\": \\\"Mozilla/5.0 (Linux; Android 12; M2012K11AC Build/SKQ1.211006.001; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/97.0.4692.98 Mobile Safari/537.36\\\",\\n        \\\"Cookie\\\": fetchPC('hiker://files/cache/bt_cookie.txt') || ''\\n                    }\\n})\\nvar _obj = {};\\neval(pdfh(html, 'body&&script&&Html').split('_BT')[0]);\\nvar Data = transformData(extractData(_obj.d))\\nvar 简介 = extractData(_obj.d).简介\\nsetPageTitle(Data.titles[0])\\nvar 标题 = '““””' + Data.titles[0] + '\\\\n' + (Data.titles.slice(1,3).join('\\\\n')).small();\\nvar 描述 = '““””' + (Data.descs.slice(0,3).join('\\\\n')).small().fontcolor('#806d9e');\\n        d.push({\\n            title: 标题,\\n            desc: 描述,\\n            img: Aimg(dir,id),\\n            url: Aurl(dir,id),\\n            col_type: \\\"movie_1_vertical_pic_blur\\\",\\n            extra:{\\n                gradient: true\\n            }\\n        })\\nvar fav = favorite(_obj.d.fa,id,dir)\\n        try{\\nvar db =  _obj.d.pf.db.id\\nvar dbty = dir=='mv'?'movie':'tv'      \\nd.push({\\n    title: fav.t,\\n    url:  $('#noLoading##noHistory#').lazyRule((fav) => {\\n                    postRequest(fav.u, {\\n                        headers: {\\n                        \\\"Cookie\\\": fetchPC('hiker://files/cache/bt_cookie.txt') || ''\\n                        }\\n                        })\\n                    toast(fav.info?'取消收藏':'收藏成功')\\n                    refreshPage()\\n                    return 'hiker://empty'\\n                }, fav),\\n    col_type: \\\"scroll_button\\\"\\n},{\\n    title: fontstyle(\\\"豆瓣\\\", { tags: \\\"small\\\",c:\\\"#20894d\\\" }),\\n    col_type: \\\"scroll_button\\\",\\n    url: `hiker://page/Sdetail#noHistory##immersiveTheme#?rule=青豆&type=${dbty}&id=${db}`\\n  })\\n  }catch(e){}\\nvar xle = _obj.d.xle\\nif(xle){\\n    var xlm = getxl(xle,\\\"1\\\")\\n    var xlindex = xle.t.indexOf(xlm) \\n  d.push({\\n    title: fontstyle(\\\"系列:\\\"+xlm, { tags: \\\"small\\\",c:\\\"brown\\\" }),\\n    col_type: \\\"scroll_button\\\",\\n    url:$(\\\"#noLoading#\\\").lazyRule((xle,dir,xlindex) => {\\n        const hikerPop = require(\\\"http://hiker.nokia.press/hikerule/rulelist.json?id=6966\\\");\\n      let 系列 = xle.t.map((x,i) => {\\n          let title = x\\n          let value = xle.u[i]\\n              return {        \\n              title: title,        \\n              icon: \\\"https://hikerfans.com/tubiao/more/24.png\\\",        \\n              url: value,    }});\\n             hikerPop.selectCenterIcon({\\n              iconList: 系列,            \\n              title: \\\"请选择系列\\\",            \\n              columns: 1,\\n              position: xlindex,            \\n              click(a) {\\n                  hikerPop.runOnNewThread(() => {\\n                      putMyVar('ty',dir)\\n                      putMyVar('tid',a)\\n                        return \\\"toast://选好了\\\"\\n                    })\\n                      refreshPage();\\n                       }\\n                               });      \\n              return \\\"hiker://empty\\\";    \\n     },xle,dir,xlindex)\\n  })\\n}\\ntry{\\nvar authors = _obj.d.daoyan\\nvar tags = _obj.d.leixing\\nauthors.forEach((item) => {\\n    d.push({\\n      title: fontstyle(item, { tags: \\\"small\\\", c: \\\"#8D6463\\\" }),\\n      url: $(\\\"#noLoading#\\\").lazyRule((item) => {\\n        putMyVar('st',\\\"2\\\")\\n        putMyVar(\\\"keyword\\\", item);\\n        return \\\"hiker://page/search?fypage\\\";\\n      }, item),\\n      col_type: \\\"scroll_button\\\",\\n      extra: {\\n        pageTitle: item,\\n        nav: false,\\n        lineVisible: false\\n      }\\n    })\\n  })\\n  tags.forEach((item) => {\\n    d.push({\\n      title: fontstyle(item, { tags: \\\"small\\\", c: \\\"#8D6463\\\" }),\\n      url: $(\\\"#noLoading#\\\").lazyRule((item,dir) => {\\n        putMyVar('type',dir)\\n        putMyVar(\\\"类型\\\", item);\\n        return \\\"hiker://page/class?fypage\\\";\\n      }, item,dir),\\n      col_type: \\\"scroll_button\\\",\\n      extra: {\\n        pageTitle: item,\\n        nav: false,\\n        lineVisible: false\\n      }\\n    })\\n  })\\n  }catch(e){}      \\nsetDesc(d,简介)\\nvar down = `${host}/ajax/downurl/${id}_${dir}/`\\nvar list = JSON.parse(fetch(down,{\\n    headers:{\\n        \\\"Referer\\\": Aurl(dir,id),\\n        \\\"Cookie\\\": fetchPC('hiker://files/cache/bt_cookie.txt') || ''\\n                    },\\n}))\\nvar tabs = [\\\"在线\\\",\\\"磁力\\\",\\\"云盘\\\"]\\nvar turls = [\\\"playlist\\\",\\\"downlist\\\",\\\"panlist\\\"]\\nvar tag = getMyVar(\\\"turl\\\",\\\"playlist\\\");       \\nvar play = list[tag]\\ntabs.forEach((li,i)=>{\\n    var turl = turls[i]\\n    var length = listlength(turl,list[turl])=='0'?'':`(${listlength(turl,list[turl])})`\\n    d.push({\\n            title: getMyVar(\\\"fenl\\\", \\\"在线\\\") == li ? '““””'+(`${li}${length}`).fontcolor(getRangeColors()): `${li}${length}`,\\n            col_type: \\\"text_3\\\",\\n            url: $(\\\"#noLoading#\\\").lazyRule((li,turl) => {\\n                putMyVar(\\\"fenl\\\", li);\\n                putMyVar(\\\"turl\\\",turl);\\n                refreshPage();\\n                return 'hiker://empty';\\n            },li,turl)\\n            })\\n})\\n//log(play)\\nif(tag==turls[0]){\\n    try{\\n    var sf = play.map(x=>x.t)\\n    play.forEach(x=>{\\n        d.push({\\n            title: getMyVar(\\\"sf\\\",sf[0]) == x.t ? '““””'+x.t.fontcolor(getRangeColors()).small(): '““””'+x.t.small(),\\n            col_type: \\\"scroll_button\\\",\\n            url: $(\\\"#noLoading#\\\").lazyRule((x) => {\\n                putMyVar(\\\"sf\\\", x.t);\\n                refreshPage(false);\\n                return 'hiker://empty';\\n            },x)\\n            })\\n        })\\n        var index = sf.indexOf(getMyVar(\\\"sf\\\",sf[0]))\\n        var lazy = $('').lazyRule(() => {\\n            var html = fetch(input,{\\n                headers:{\\n        \\\"Cookie\\\": fetchPC('hiker://files/cache/bt_cookie.txt') || ''\\n                    },\\n            })\\n            var _obj = {};\\n            eval(pdfh(html, 'body&&script&&Html').split('_BT')[0]);\\n            var playu = _obj.player.url\\n            return playu\\n\\n        })\\n        var playlist = play[index].list\\n        playlist.forEach((x,i)=>{\\n            d.push({\\n                title: x,\\n                url: `${host}/py/${play[index].i}_${i+1}.html`+lazy,\\n                col_type: \\\"text_4\\\"\\n            })\\n        })\\n        }catch(e){\\n        }\\n}else if(tag==turls[1]){\\n    try{\\n        var downlist = play.list        \\n        const categorizedData = {};\\n        play.type.a.forEach((category) => {\\n  categorizedData[category] = { p: [], s: [], t: [], u: [] ,k:[]};\\n});\\n\\n// 遍历 jsonData.p 并根据 type.b 中的 id 分类\\ndownlist.p.forEach((id, index) => {\\n  const categoryIndex = play.type.b.indexOf(id);\\n  if (categoryIndex !== -1) {\\n    const category = play.type.a[categoryIndex];\\n    categorizedData[category].p.push(id); categorizedData[category].s.push(downlist.s[index]);\\n    categorizedData[category].t.push(downlist.t[index]);\\n    categorizedData[category].u.push(downlist.u[index]);\\n    categorizedData[category].k.push(downlist.k[index]);\\n  }\\n});\\n\\n        categorizedData[\\\"全部\\\"] = downlist\\n        var lei = [\\\"全部\\\"]\\n        var type = lei.concat(play.type.a)\\n        var dt = getMyVar(\\\"df\\\",type[0]);\\n        var dlist = categorizedData[dt]\\n        type.forEach((x,i)=>{\\n            var de = categorizedData[type[i]].t.length\\n            d.push({\\n                title: getMyVar(\\\"df\\\",\\\"全部\\\") == x ? '““””'+(x+\\\"[\\\"+de+\\\"]\\\").fontcolor(getRangeColors()).small(): '““””'+(x+\\\"[\\\"+de+\\\"]\\\").small(),\\n                url: $(\\\"#noLoading#\\\").lazyRule((x) => {\\n                putMyVar(\\\"df\\\", x);\\n                refreshPage(false);\\n                return 'hiker://empty';\\n            },x),\\n                col_type: \\\"scroll_button\\\"\\n            })\\n        })\\n        var lazy = $('').lazyRule(() => {\\n            eval(JSON.parse(fetch(\\\"hiker://page/globals\\\")).rule);\\nvar html = fetch(input,{\\n                headers:{\\n        \\\"Cookie\\\": fetchPC('hiker://files/cache/bt_cookie.txt') || ''\\n                    },\\n            })\\n            var d_code = html.match(/let\\\\s+d_code\\\\s*=\\\\s*'([^']+)';/)[1]\\n            var play = decrypt(pdfh(html,'body&&section:matches(资源链接|资源下载)&&li:matches(磁力)&&data-clipboard-text'),d_code)\\n            return play\\n\\n        })\\ndlist.t.forEach((x,i)=>{\\n            d.push({\\n                title: '““””'+(headText(dlist.k[i])+x).small(),\\n                url: `hiker://page/BT?url=${host}/bt/${dlist.u[i]}#noHistory##noRecordHistory#`,\\n                desc: dlist.s[i],\\n                col_type: \\\"text_1\\\",\\n                extra:{\\n                    k: dlist.k[i]\\n                }\\n            })\\n        })\\n                \\n    }catch(e){}\\n}else if(tag==turls[2]){\\n    try{\\n        const pan = {};\\n\\n\\nplay.tname.forEach((category) => {\\n  pan[category] = { url: [], name: [], time: [] ,user: [],p: [],type:[]};\\n});\\n\\n// 遍历 jsonData.type 并根据 type 中的值分类\\nplay.type.forEach((typeId, index) => {\\n  // 找到对应的 category\\n  const category = play.tname[typeId];\\n  if (category) {\\n    pan[category].url.push(play.url[index]);\\n    pan[category].name.push(play.name[index]);\\n    pan[category].time.push(play.time[index]);\\n    pan[category].user.push(play.user[index]);\\n    pan[category].p.push(play.p[index]);\\n    pan[category].type.push(typeId);\\n\\n\\n  }\\n});\\n         pan[\\\"全部\\\"] = play\\n        var lei = [\\\"全部\\\"]\\n        var type = lei.concat(play.tname)\\n        var dt = getMyVar(\\\"pf\\\",type[0]);\\n        var plist = pan[dt]\\n        type.forEach((x,i)=>{\\n            var de = pan[type[i]].name.length\\n            d.push({\\n                title: getMyVar(\\\"pf\\\",\\\"全部\\\") == x ? '““””'+(x+\\\"[\\\"+de+\\\"]\\\").fontcolor(getRangeColors()).small(): '““””'+(x+\\\"[\\\"+de+\\\"]\\\").small(),\\n                url: $(\\\"#noLoading#\\\").lazyRule((x) => {\\n                putMyVar(\\\"pf\\\", x);\\n                refreshPage(false);\\n                return 'hiker://empty';\\n            },x),\\n                col_type: \\\"scroll_button\\\"\\n            })\\n        })\\n        var lazy = $('').lazyRule(() => {\\n        if (/ali/.test(input)){\\n            return \\\"hiker://page/aliyun?rule=云盘君.简&page=fypage&realurl=\\\" + encodeURIComponent(input);\\n        }\\n         else  if (/quark|uc/.test(input)){\\n        return \\\"hiker://page/quarkList?rule=Quark.简&page=fypage&realurl=\\\"+input\\n    }else\\n    return input\\n\\n});\\nplist.name.forEach((x,i)=>{\\n    var pass = plist.p[i]==''?'':'[提取码:'+plist.p[i]+']'\\n    var tag = play.tname[plist.type[i]]\\n            d.push({\\n                title: '““””'+x.small(),\\n                url: plist.url[i]+lazy,\\n                desc: `${plist.user[i]} ${plist.time[i]} [${tag}] ${pass}`,\\n                col_type: \\\"text_1\\\"\\n            })\\n        })\\n\\n\\n        \\n    }catch(e){}\\n}\\nvar like = _obj.cblist\\nd.push({\\n            title: \\\"相关推荐\\\",\\n            url: \\\"hiker://empty\\\",\\n            img: \\\"https://hikerfans.com/tubiao/more/84.png\\\",\\n            col_type: \\\"avatar\\\"\\n        })\\nlike.t.forEach((x,i)=>{\\n    d.push({\\n        title: x,\\n        url: \\\"hiker://page/detail#immersiveTheme##noHistory##noRecordHistory#\\\",\\n        img: Aimg(dir,like.u[i]),\\n        col_type: \\\"movie_3\\\",\\n        extra: {\\n                tid: like.u[i],\\n                ty: dir,\\n                pageTitle: x\\n            }\\n    })\\n})\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"搜索\",\"path\":\"search\",\"rule\":\"js:\\nvar d = [];\\neval(JSON.parse(fetch(\\\"hiker://page/globals\\\")).rule);\\nconst page = MY_PAGE\\nvar surl = `${host}/s/${getMyVar(\\\"st\\\",\\\"1\\\")}-0--${page}/${getMyVar(\\\"keyword\\\")}`\\nvar html = fetch(surl)\\nvar list = pdfa(html,\\\".sr_lists&&li\\\")\\nlist.forEach(x=>{\\n    var link = pdfh(x,\\\"a&&href\\\").match(/\\\\/(\\\\w+)\\\\/(\\\\w+)/);\\n    d.push({\\n        title: pdfh(x,\\\"h3&&Text\\\"),\\n        img: pdfh(x,\\\"img&&data-src\\\"),\\n        url: \\\"hiker://page/detail#immersiveTheme#\\\",\\n        desc: pdfh(x,\\\"p&&Text\\\"),\\n        content: pdfh(x,\\\".p0&&Text\\\"),\\n        col_type: \\\"movie_3\\\",\\n        extra: {\\n                tid: link[2],\\n                ty: link[1],\\n                pageTitle: pdfh(x,\\\"h3&&Text\\\")\\n            }\\n    })\\n})\\n\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"收藏\",\"path\":\"favorite\",\"rule\":\"js:\\nvar d = [];\\naddListener(\\\"onClose\\\", $.toString(() => {\\n    let keys = listMyVarKeys();\\n    for (let it of keys) {\\n        clearMyVar(it);\\n    }\\n}));\\neval(JSON.parse(fetch(\\\"hiker://page/globals\\\")).rule);\\nvar url = `${host}/user/favorite/${getMyVar(\\\"ftype\\\",\\\"\\\")}`\\nvar html =fetch(url,{\\n    headers:{\\n        \\\"Cookie\\\": fetchPC('hiker://files/cache/bt_cookie.txt') || ''\\n    }\\n})\\nvar _obj = {};\\neval(pdfh(html, 'body&&script&&Html').split('_BT')[0]);\\nvar tabs = [\\\"全部\\\",\\\"电影\\\",\\\"剧集\\\",\\\"动漫\\\"]\\nvar turls = [\\\"\\\",\\\"mv\\\",\\\"tv\\\",\\\"ac\\\"]\\ntabs.forEach((li,i)=>{\\n    var turl = turls[i]\\n    d.push({\\n            title: getMyVar(\\\"favt\\\", \\\"全部\\\") == li ? '““””'+li.fontcolor(getRangeColors()): li,\\n            col_type: \\\"flex_button\\\",\\n            url: $(\\\"#noLoading#\\\").lazyRule((li,turl) => {\\n                putMyVar(\\\"favt\\\", li);\\n                putMyVar(\\\"ftype\\\",turl);\\n                refreshPage();\\n                return 'hiker://empty';\\n            },li,turl)\\n            })\\n})\\nvar list = _obj.inlist\\nlist.t.forEach((x,i)=>{  \\n    d.push({\\n        title: x,\\n        img: Aimg(replaceValue(list.ty[i]),list.i[i]),\\n        url: \\\"hiker://page/detail#immersiveTheme#\\\",\\n        desc: list.g[i],\\n        col_type: \\\"movie_3\\\",\\n        extra:{\\n            tid: list.i[i],\\n            ty: replaceValue(list.ty[i]),\\n            pageTitle: x,\\n            longClick: [{\\n                        title: '取消收藏',\\n                        js: $.toString((id, dir) => {\\n                            eval(JSON.parse(fetch(\\\"hiker://page/globals\\\")).rule);\\n        postRequest(favorite(2,id,dir).u, {headers:{\\n        \\\"Cookie\\\": fetchPC('hiker://files/cache/bt_cookie.txt') || ''\\n    }})\\n                    toast('取消收藏')\\n                    refreshPage()\\n                    return 'hiker://empty'\\n                   },list.i[i],replaceValue(list.ty[i]))\\n                    }]\\n        }\\n    })\\n})\\nsetResult(d);\"}]","proxy":"","icon":"https://api.xinac.net/icon/?url=https://www.btnull.net/"}
{"last_chapter_rule":"","pageList":[],"title":"live转json","author":"🏅京梦","version":1,"type":"tool","url":"hiker://empty","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nlet d = [];\nlet url = getItem('live_url', '');\nlet file = getItem('live_file', 'hiker://files/Jm/live/live.json');\nd.push({\n    title: '‘‘’’<font color=#fd268a>注意：转换的json数据适用于京梦主页的电视，转换后记得去主页 长按电视改下路径。</font>',\n    col_type: 'text_1',\n    url: $('hiker://empty#noLoading#').lazyRule(() => {\n        clearItem('live_file');\n        refreshPage(false);\n        return 'hiker://empty'\n    }),\n}, {\n    title: \"\",\n    desc: \"请输入hiker|http地址\",\n    url: \"hiker://empty\",\n    col_type: \"input\",\n    extra: {\n        defaultValue: url,\n        onChange: \"setItem('live_url',input)\",\n        titleVisible: false\n    }\n}, {\n    title: \"\",\n    desc: \"保存路径|文件名称\",\n    url: \"hiker://empty\",\n    col_type: \"input\",\n    extra: {\n        defaultValue: file,\n        onChange: \"setItem('live_file',input)\",\n        titleVisible: false\n    }\n}, {\n    title: '‘‘’’<font color=#1AB16B>txt转json</font>',\n    col_type: 'text_2',\n    url: $('hiker://empty#noLoading#').lazyRule((url, file) => {\n        let data = [];\n        let txt = fetch(url);\n        txt.split('\\n').forEach(function(line) {\n            let nameMatch = line.match(/^(.*?),/);\n            let urlMatch = line.match(/http\\S+/);\n            if (nameMatch && urlMatch) {\n                var name = nameMatch[1].trim();\n                var url = urlMatch[0];\n                var existingData = data.find(function(item) {\n                    return item.name === name;\n                });\n\n                if (existingData) {\n                    if (!existingData.url.includes(url)) {\n                        existingData.url.push(url);\n                    }\n                } else {\n                    data.push({\n                        name: name,\n                        url: [url]\n                    });\n                }\n            }\n        });\n\n        let result = {\n            data: data\n        };\n\n        saveFile(file, JSON.stringify(result));\n\n        refreshPage(false);\n        copy(file);\n        return \"toast://转换成功并复制了路径地址\";\n    }, url, file),\n}, {\n    title: '‘‘’’<font color=#1AB16B>m3u转json</font>',\n    col_type: 'text_2',\n    url: $('hiker://empty#noLoading#').lazyRule((url, file) => {\n        let data = [];\n        let txt = fetch(url);\n        var lines = txt.split('\\n');\n        var currentTitle = '';\n\n        for (let i = 0; i < lines.length; i++) {\n            var line = lines[i].trim();\n            if (line.startsWith('#EXTINF:')) {\n                let titleMatch = line.match(/,(.*?)$/);\n                if (titleMatch && titleMatch[1]) {\n                    currentTitle = titleMatch[1];\n                }\n            } else if (line.startsWith('http')) {\n                var url = line;\n                var existingEntry = data.find(entry => entry.name === currentTitle);\n                if (existingEntry) {\n                    if (!existingEntry.url.includes(url)) {\n                        existingEntry.url.push(url);\n                    }\n                } else {\n                    data.push({\n                        name: currentTitle,\n                        url: [url]\n                    });\n                }\n            }\n        }\n        let result = {\n            data: data\n        };\n        writeFile(file, JSON.stringify(result));\n\n        refreshPage(false);\n        copy(file);\n        return \"toast://转换成功并复制了路径地址\";\n    }, url, file),\n});\nsetResult(d);","searchFind":"","search_url":"","group":"⑧工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[]","proxy":"","icon":""}
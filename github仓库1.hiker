{"last_chapter_rule":"","pageList":[],"title":"github仓库1","author":"@LoyDgIk","version":2,"type":"other","url":"hiker://empty##","col_type":"text_2","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nlet d = [];\nlet host = 'https://api.github.com/repos/+用户名/仓库名+/contents/';\n\n//你的token\nlet token = '';\n\n//代理链接\nlet proxy = 'https://gh-proxy.com/';\n\nlet list = JSON.parse(fetch(host));\n\n//控制显示的资源类型\nlet type = [\".hiker\", \".json\", \".js\", \".hkzip\", \".html\"];\n\nlist = list.filter(item => {\n    return item.type === \"file\" && type.some(ext => item.name.endsWith(ext));\n});\nlet it = list.map(j => {\n    return {\n        name: j.name,\n        url: j.download_url,\n        sha: j.sha\n    };\n});\nd.push({\n    title: '🔍',\n    col_type: 'input',\n    desc: '请输入关键词',\n    url: $.toString((it, host, token, proxy) => {\n        function search(name) {\n            return it.filter(item => item.name.toLowerCase().includes(name.toLowerCase()));\n        }\n        let results = search(input);\n        if (results.length > 0) {\n            return $('hiker://empty').rule((results, host, token, proxy) => {\n                let d = [];\n                results.forEach(j => {\n                    d.push({\n                        title: j.name,\n                        col_type: 'text_1',\n                        url: $([\"删除\", \"复制分享链接\", \"导入规则\", \"导入文件\", \"下载\"]).select((j, host, token, proxy) => {\n                            var h = proxy + j.url;\n                            if (input === \"复制分享链接\") {\n                                return \"copy://海阔视界规则【\" + j.name + \"】￥home_rule_url￥\" + h;\n                            } else if (input === \"导入规则\") {\n                                return \"rule://\" + base64Encode(\"￥home_rule_url￥\" + h);\n                            } else if (input === \"导入文件\") {\n                                let file = getPath('hiker://files/Jm/file/' + j.name);\n                                let html = fetch(h);\n                                writeFile(file, html);\n                                return 'toast://已导入' + j.name\n                            } else if (input === \"下载\") {\n                                return \"download://\" + h\n                            } else {\n                                return $(\"确认从仓库删除该分享:\" + j.name).confirm((j, host, token) => {\n                                    showLoading(\"正在删除\");\n                                    try {\n                                        let res = JSON.parse(fetch(host + j.name, {\n                                            headers: {\n                                                Accept: \"application/vnd.github.v3+json\",\n                                                Authorization: \"token \" + token\n                                            },\n                                            body: {\n                                                sha: j.sha,\n                                                message: \"删除规则\"\n                                            },\n                                            method: \"DELETE\",\n                                            withStatusCode: true\n                                        }));\n                                        if (res.statusCode === 200) {\n                                            java.lang.Thread.sleep(1650);\n                                            refreshPage(false);\n                                            hideLoading();\n                                            return \"toast://删除成功,服务器删除会有一定延迟\";\n                                        } else {\n                                            res = JSON.parse(res.body);\n                                            throw new Error(res.message);\n                                        }\n                                    } catch (e) {\n                                        hideLoading();\n                                        return \"toast://删除失败:\" + e.toString();\n                                    }\n                                }, j, host, token);\n                            }\n                        }, j, host, token, proxy),\n                        extra: {\n                            inheritTitle: false\n                        }\n                    });\n                });\n                setResult(d);\n            }, results, host, token, proxy)\n        } else {\n            return 'toast://没有找到'\n        }\n    }, it, host, token, proxy)\n});\n\nit.map(j => {\n    d.push({\n        title: '‘‘’’<small>' + j.name + '</small>',\n        col_type: \"text_2\",\n        url: $([\"删除\", \"复制分享链接\", \"导入规则\", \"导入文件\", \"下载\"]).select((j, host, token, proxy) => {\n            var h = proxy + j.url;\n            if (input === \"复制分享链接\") {\n                return \"copy://海阔视界规则【\" + j.name + \"】￥home_rule_url￥\" + h;\n            } else if (input === \"导入规则\") {\n                return \"rule://\" + base64Encode(\"￥home_rule_url￥\" + h);\n            } else if (input === \"导入文件\") {\n                let file = getPath('hiker://files/Jm/file/' + j.name);\n                let html = fetch(h);\n                writeFile(file, html);\n                return 'toast://已导入' + j.name\n            } else if (input === \"下载\") {\n                return \"download://\" + h\n            } else {\n                return $(\"确认从仓库删除该分享:\" + j.name).confirm((j, host, token) => {\n                    showLoading(\"正在删除\");\n                    try {\n                        let res = JSON.parse(fetch(host + j.name, {\n                            headers: {\n                                Accept: \"application/vnd.github.v3+json\",\n                                Authorization: \"token \" + token\n                            },\n                            body: {\n                                sha: j.sha,\n                                message: \"删除规则\"\n                            },\n                            method: \"DELETE\",\n                            withStatusCode: true\n                        }));\n                        if (res.statusCode === 200) {\n                            java.lang.Thread.sleep(1650);\n                            refreshPage(false);\n                            hideLoading();\n                            return \"toast://删除成功,服务器删除会有一定延迟\";\n                        } else {\n                            res = JSON.parse(res.body);\n                            throw new Error(res.message);\n                        }\n                    } catch (e) {\n                        hideLoading();\n                        return \"toast://删除失败:\" + e.toString();\n                    }\n                }, j, host, token);\n            }\n        }, j, host, token, proxy),\n        extra: {\n            textAlign: 'left',\n            inheritTitle: false\n        }\n    });\n});\nsetResult(d);","searchFind":"","search_url":"","group":"⑧工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[]","proxy":"","icon":"https://github.githubassets.com/favicons/favicon.svg"}
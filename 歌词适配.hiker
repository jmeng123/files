{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"①通用函数","path":"lib","rule":"addListener('onClose', $.toString(() => {\n    clearMyVar('addlist');\n    clearMyVar('addpitch');\n    clearMyVar('home_page');\n    clearMyVar('search_down');\n}));\nconst empty = 'hiker://empty?p=fypage';\nconst Color = (test, color) => {\n    return String(test).fontcolor(color || '#FA7298');\n}\nconst Strong = (test) => {\n    return '<strong>' + test + '</strong>';\n}\nconst Rich = (test, ___) => {\n    test = String(test).replace(/<\\/?em[^>]*>/gi, '')\n        .replace(/&(lt|gt|nbsp|amp|quot);/gi, ($0, $1) => ({\n            'lt': '<',\n            'gt': '>',\n            'nbsp': ' ',\n            'amp': '&',\n            'quot': '\"'\n        }[$1.toLowerCase()]));\n    if (test == \"\") {\n        return \"\";\n    }\n    if (typeof ___ === 'object') {\n        for (let key in ___) {\n            ___[key] = String(___[key] || \"\")\n                .replace(/\\n|(<|\\s+)br\\s*\\/?\\s*>/gi, '\\\\n')\n                .replace(/\\r/g, '\\\\r')\n                .replace(/\\f/g, '\\\\f')\n                .replace(/\\t/g, '\\\\t')\n                .replace(/\\\"/g, '\\\\\"')\n                .replace(/\\'/g, \"\\\\'\")\n                .replace(/\\`/g, '\\\\`');\n        }\n        return String(test)\n            .replace(/\\$title/gi, ___.title || getPageTitle())\n            .replace(/\\$desc/gi, ___.desc || \"暂无简介\")\n            .replace(/\\$author/gi, ___.author || \"佚名\")\n            .replace(/\\$img/gi, ___.img || MY_PARAMS.img || MY_RULE.icon)\n            .replace(/\\$time/gi, ___.time || \"未知\")\n            .replace(/\\$tags/gi, String(___.tags || \"\").replace(/^(\\s*、?)*$/, \"\") || \"无\")\n            .replace(/\\$total/gi, ___.total || \"x\");\n    } else {\n        return \"‘‘’’\" + String(test)\n            .replace(/\\\\n|(<|\\s+)br\\s*\\/?\\s*>/gi, '\\n')\n            .replace(/\\\\r/g, '\\r')\n            .replace(/\\\\f/g, '\\f')\n            .replace(/\\\\t/g, '\\t');\n    }\n}\nconst R = (x, z) => {\n    let t, z = z || \"1234567890abcdef\";\n    if (x == \"randomUUID\") {\n        t = [R(8), R(4), R(4), R(4), R(12)].join(\"-\");\n    } else {\n        t = \"\";\n        for (let i = 0; i < x; i++) {\n            t += z[Math.floor(Math.random() * z.length)];\n        }\n    }\n    return t\n}\nconst Size = size => {\n    if (!size) return '无法计算';\n    let units = ['B', 'KB', 'MB', 'GB'];\n    let i = 0;\n    while (size >= 1024) {\n        size /= 1024;\n        i++;\n    }\n    size = i ? size.toFixed(2) : size;\n    return `${size} ${units[i]}`;\n}\nconst Loading = () => {\n    d.push({\n        url: \"toast://加载中...\",\n        img: \"http://123.56.105.145/weisyr/img/Loading1.gif\",\n        col_type: \"pic_1_center\",\n        extra: {\n            cls: \"loading_gif\"\n        }\n    });\n    setPreResult(d);\n};\nlet Lrc = (lrc, time) => {\n    let time = String(time || 200);\n    if (time.match(/\\d+\\:\\d+/)) {\n        time = function(time) {\n            let sp = time.split(\":\");\n            let l3 = sp.length == 3;\n            let h = l3 ? sp[0] : sp[3] || 0;\n            let m = l3 ? sp[1] : sp[0] || 0;\n            let s = l3 ? sp[2] : sp[1] || 0;\n            return (h * 60 * 60) + (m * 60) + s;\n        }(time.replace(/^\\s*0+\\:/gi, \"\"));\n    } else if (time.match(/\\D/)) {\n        time = 200;\n    }\n    time = Number(time) || 200;\n    let n = String(lrc).replace(/\\s*((\\n|(\\u003c|<)\\/?(br|p)\\/?(\\u003e|>))\\s*)+\\s*/gi, '\\n').trim().split(/\\n/);\n    return n.map((lineLyric, i) => {\n        let itime = i / n.length * time;\n        let s = ((itime - 0) % 60).toFixed(3).padStart(6, '0');\n        let m = ((itime - s) / 60).toFixed(0).padStart(2, '0');\n        return `[${m}:${s}]` + lineLyric;\n    }).join('\\n');\n}\nlet Hms = (second) => {\n    let t_Arr = $.dateFormat(second, 'hh:mm:ss').split(':');\n    if ((t_Arr[0] -= 8) < 10) t_Arr[0] = '0' + t_Arr[0];\n    return t_Arr.join(\":\");\n}\n\nlet id = \"gcsp1999\";\nlet platforms = [\"lib\", \"qq\", \"wy\", \"kg\", \"kw\", \"mg\", \"5s\", \"my\", \"qt\"];\nlet platform = getMyVar('platform', getItem('platform', 'kw'));\nif (platform == 'lib') {\n    let newArr = platforms.slice(1, 8);\n    let randomIndex = Math.floor(Math.random() * newArr.length);\n    platform = newArr[randomIndex];\n    putMyVar('platform', platform);\n}\nlet ts = [\"【流畅音质】\", \"【标准音质】\", \"【高品音质】\", \"【无损音质】\", \"【高品无损】\", \"【立体无损】\"];\nlet qts = [\"lib\", \"bd\", \"zz\", \"kz\", \"ni\", \"g3\", \"qy\", \"qk\", /*\"km\",  \"bz\", \"st\", \"blm\",  \"fp\", \"ht\", \"1t\", \"9t\", \"ky\", \"5nd\", \"biu\", \"mus\", \"jam\", \"jui\", \"y3\", \"365\", \"dj1\", \"dj2\", \"dj3\", \"dj4\", \"dj5\", \"dj6\", \"dj7\", \"dj8\", \"dj9\"*/ ];\n\n\n\n\n\nconst Lazy = (platform, t1, t2, t3) => {\n    if (t1 > 1)\n        return $(empty + \"#immersiveTheme#\" /*+\"#background#\"*/ ).rule((a, b, c) => {\n            // return $.require(a + \"?rule=歌词适配\").lazy(b, c, 0);\n            return $.require(\"theme3?rule=歌词适配\").lazy(a, b, c);\n        }, platform, t1, t2);\n    else\n        return $(\"#noHistory##noRecordHistory#\").lazyRule((a, b, c) => {\n            return $.require(\"jiexi?rule=歌词适配\").lazy(a, b, c);\n        }, platform, t2, t3);\n}\nconst Extra = (_, r1, r2, r3) => {\n    if (r1) {\n        _.name = Rich(_.name).replace(/^‘‘’’|\\s*\\-?\\s*$/gi, \"\");\n        _.picUrl = String(_.picUrl || \"\").replace(/{size}/gi, '480');\n        _.content = _.content + '';\n        if (!_.source) _.source = this_platform;\n    }\n    let r4, t1 = Number(String(_.content).replace(/^(\\d?\\D\\d?)+$/, '0')) < 2 ? 0 : 1;\n    if (r1) {\n        if (!t1) {\n            _.songId = _.songId + '';\n        } else {\n            _.sourceListId = (_.sourceListId || new Date().getTime()) + '';\n        }\n    }\n    delete _.col_type;\n    let zyid = _.hash || _.copyrightId || _.songId || _.sourceListId;\n    let extra = {\n        inheritTitle: false,\n        cls: id + ':addlist',\n        img: _.picUrl,\n        id: [_.source, String(zyid).replace(\"undefined\", Math.random()), _.content].join(\"$\"),\n        longClick: [{\n                title: \"★ 收藏\" + (t1 ? '歌单' : '单曲') + \" ★\",\n                js: $.toString((t1, _) => {\n                    return $.require(\"collection2?rule=歌词适配\").logData(_, t1);\n                }, t1, _)\n            }\n            /*, {\n                        title: \"★ 批量收藏 ★\",\n                        js: $.toString((clsId, si) => {\n                            let json = {\n                                type: 0,\n                                pitch: 0,\n                                si: si,\n                                name: \"\",\n                                data: findItemsByCls(clsId)\n                            }\n                            writeFile(\"hiker://files/_cache/gcsp1999/Import.txt\", JSON.stringify(json));\n                            return \"hiker://page/rely2#noHistory##noRecordHistory#?rule=歌词适配\";\n                        }, id + ':addlist', t1)\n                    }*/\n        ]\n    };\n    if (/mg|5s/i.test(_.source) ? (_.content != 3) : /qq|wy|kg|kw/i.test(_.source)) {\n        extra.longClick.push({\n            title: \"✩ 复制链接 ✩\",\n            js: $.toString((a, b, c) => {\n                return $.require(\"lib?rule=歌词适配\").copyurl(a, b, c);\n            }, _.source, _.content, zyid)\n        });\n        if (!/5s/i.test(_.source) && (_.content < 2 || _.content == \"undefined\")) {\n            extra.longClick.push({\n                title: \"✩ 播放视频 ✩\",\n                js: $.toString((a, b) => {\n                    return $(\"#noHistory##noRecordHistory#\").lazyRule((a, b, c) => {\n                        [names, urls] = $.require(a + \"?rule=歌词适配\").mv({}, b);\n                        if (urls.length)\n                            return JSON.stringify({\n                                names,\n                                urls\n                            });\n                        else\n                            return \"toast://这个歌曲没有mv\";\n                    }, a, b);\n                }, _.source, zyid)\n            });\n        }\n    }\n\n    if (r3) {\n        r4 = $(r3.names, 1, '选择下载音质').select((names, urls) => {\n            let i = names.indexOf(input);\n            return 'download://' + urls[i];\n        }, r3.names, r3.urls);\n        if (r1 == 2) {\n            _.url = r4;\n            extra.url = r3;\n        } else {\n            _.url = r3;\n            extra.url = r4;\n        }\n        extra.longClick.unshift({\n            title: \"★ 下载歌曲 ★\",\n            js: $.toString((names, urls) => {\n                return $(names, 1, '选择下载音质').select((names, urls) => {\n                    let i = names.indexOf(input);\n                    return 'download://' + urls[i];\n                }, names, urls);\n            }, r3.names, r3.urls)\n        });\n    } else {\n        if (!t1) {\n            extra.longClick.unshift({\n                title: \"★ 下载歌曲 ★\",\n                js: $.toString((url) => {\n                    return url;\n                }, Lazy(_.source, _.content, _, 1))\n            });\n            extra.url = Lazy(_.source, _.content, _, r1 != 2);\n        }\n        _.url = Lazy(_.source, _.content, _, r1 == 2);\n    }\n    if (typeof r1 === 'object') {\n        /*\n        let is_down = getMyVar('search_down', '0') == '1'\n        if (is_down) {\n            is_donwn = _.url;\n            _.url = extra.url;\n            extra.url = is_down;\n            // is_down = true;\n        }\n        */\n        _.title = String(r1.title || \"$songName - $userName\")\n            .replace(/\\$songName/gi, r1.songName || \"\")\n            .replace(/\\$userName/gi, r1.userName || \"\")\n            .replace(/\\$songTime/gi, r1.songTime || \"\")\n            .replace(/\\$albumName/gi, r1.albumName || \"\")\n            .replace(/\\s*\\-?\\s*$/gi, \"\").replace(/^\\s*$/gi, _.title);\n        _.desc = String(r1.desc || \"$songTime\\n$albumName\")\n            .replace(/\\$songName/gi, r1.songName || \"\")\n            .replace(/\\$userName/gi, r1.userName || \"\")\n            .replace(/\\$songTime/gi, r1.songTime || \"\")\n            .replace(/\\$albumName/gi, r1.albumName || \"\")\n            .replace(/\\s*\\-?\\s*$/gi, \"\").replace(/^\\s*$/gi, _.desc);\n        _.col_type = r1.col_type;\n    }\n    _.title = Rich(_.title || _.name + ((_.singer && ' - ' + _.singer) || \"\"))\n        .replace(/^‘‘’’|\\s*\\-?\\s*$/gi, \"\")\n        .replace(\"　-　\".small().small().sub(), \"\")\n        .replace(\"　-　\", \"&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;&nbsp;&nbsp;&nbsp;\");\n    _.pic_url = _.picUrl;\n    _.col_type = _.col_type || 'card_pic_3';\n    _.extra = extra;\n    if (r2) return _;\n    d.push(_);\n}\n\n\n\n\nfunction _X5(index, set) {\n    let _x5 = getMyVar(\"x5_webview_single\", \"0\") == \"1\";\n    let _set = String(set || \"\");\n    if (_set.match(\"theme/home\"))\n        return _x5 ? 0 : index + 1;\n    else if (_set.match(\"theme/page\"))\n        return index;\n    else\n        return _x5;\n}\n$.exports = {\n    Lrc,\n    copyurl: function(A, B, C) {\n        switch (A) {\n            case 'qq':\n                switch (B) {\n                    case '2':\n                        // url = 'https://i.y.qq.com/n2/m/share/details/taoge.html?id=' + C;\n                        url = 'https://i2.y.qq.com/n3/other/pages/share/personalized_playlist_v2/index.html?id=' + C\n                        break;\n                    case '3':\n                        url = 'https://i.y.qq.com/n2/m/share/details/toplist.html?id=' + C;\n                        break;\n                    case '4':\n                        url = 'https://i.y.qq.com/n2/m/share/details/album.html?albummid=' + C;\n                        break;\n                    case '5':\n                        url = 'https://i.y.qq.com/n2/m/share/profile_v2/index.html?singermid=' + C;\n                        break;\n                    default:\n                        url = 'https://i.y.qq.com/v8/playsong.html?songmid=' + C;\n                        break;\n                }\n                break;\n            case 'wy':\n                switch (B) {\n                    case '2':\n                    case '3':\n                        if (/#djradio/.test(C))\n                            url = 'https://y.music.163.com/m/radio?id=' + C\n                        else\n                            url = 'https://y.music.163.com/m/playlist?id=' + C;\n                        break;\n                    case '4':\n                        url = 'https://y.music.163.com/m/album?id=' + C;\n                        break;\n                    case '5':\n                        url = 'https://y.music.163.com/m/artist?id=' + C;\n                        break;\n                    default:\n                        url = 'https://y.music.163.com/m/song?id=' + C;\n                        break;\n                }\n                break;\n            case 'kg':\n                switch (B) {\n                    case '2':\n                        if (C.match(/gcid_/))\n                            url = \"https://m.kugou.com/songlist/\" + C + \"/\";\n                        else if (C.match(/collection_/))\n                            // url = 'https://activity.kugou.com/share/v-a00a45b0/index.html?cType=0&global_specialid=' + C;\n                            url = 'https://www.kugou.com/yy/special/single/' + C + '.html';\n                        else\n                            url = 'https://m.kugou.com/weibo/?share_type=special&id=' + C;\n                        break;\n                    case '3':\n                        url = 'https://m.kugou.com/rank/info/' + C;\n                        break;\n                    case '4':\n                        url = 'https://m.kugou.com/album/info/' + C;\n                        break;\n                    case '5':\n                        url = 'https://m.kugou.com/singer/info/' + C;\n                        break;\n                    default:\n                        url = 'https://m.kugou.com/weibo/?hash=' + C;\n                        break;\n                }\n                break;\n            case 'kw':\n                switch (B) {\n                    case '2':\n                        url = 'https://m.kuwo.cn/newh5app/playlist_detail/' + C;\n                        break;\n                    case '3':\n                        url = 'https://h5app.kuwo.cn/2000003/rank.html?id=' + C;\n                        break;\n                    case '4':\n                        url = 'https://m.kuwo.cn/newh5app/album_detail/' + C;\n                        break;\n                    case '5':\n                        url = 'https://m.kuwo.cn/newh5app/singers/' + C;\n                        break;\n                    default:\n                        url = 'https://m.kuwo.cn/newh5app/play_detail/' + C;\n                        break;\n                }\n                break;\n            case 'mg':\n                switch (B) {\n                    case '2':\n                        url = 'https://m.music.migu.cn/v3/music/playlist/' + C;\n                        break;\n                    case '3':\n                        url = 'https://m.music.migu.cn/v4/music/top/' + C;\n                        break;\n                    case '4':\n                        url = 'https://m.music.migu.cn/v3/music/album/' + C;\n                        break;\n                    case '5':\n                        url = 'https://m.music.migu.cn/v3/music/artist/' + C;\n                        break;\n                    default:\n                        url = 'https://m.music.migu.cn/v3/music/song/' + C;\n                        break;\n                }\n                break;\n            case '5s':\n                switch (B) {\n                    case '2':\n                        url = 'http://5sing.kugou.com/topic/share/songlist/#/?id=' + C;\n                        break;\n                    default:\n                        url = 'http://5sing.kugou.com/topic/share/song/#/?songid=' + C + '&songtype=' + B;\n                        break;\n                }\n                break;\n        }\n        return \"copy://\" + url;\n    },\n\n}"},{"col_type":"movie_3","name":"②图片链接","path":"image","rule":"$.exports = function(_type) {\n    switch (_type = String(_type || 'rule_type_audio')) {\n        case 'qq':\n            return 'https://android-artworks.25pp.com/fs08/2023/12/21/0/2_b7596a6777b7c62d06094bfb8d5bcfdd_con_130x130.png';\n            break;\n        case 'wy':\n            return 'https://android-artworks.25pp.com/fs08/2024/01/09/0/110_9d8058e8404df856e99876c7c975a0e5_con_130x130.png';\n            break;\n        case 'kg':\n            return 'https://android-artworks.25pp.com/fs08/2024/01/02/3/110_4f951d42ac0dd576a53db81621be2f53_con_130x130.png';\n            break;\n        case 'kg2':\n            return 'https://android-artworks.25pp.com/fs08/2023/12/28/4/110_45806680cf32dd6fed6323442b6ce9d9_con_130x130.png';\n            break;\n        case 'kw':\n            return 'https://android-artworks.25pp.com/fs08/2023/12/28/2/110_9ff45ea0adf6502febdcc384df355269_con_130x130.png';\n            break;\n        case 'kw2':\n            return 'https://android-artworks.25pp.com/fs08/2024/01/10/6/110_4dc628341a3da688cb59eda7372f59a6_con_130x130.png';\n            break;\n        case 'mg':\n            return 'https://android-artworks.25pp.com/fs08/2024/01/03/4/110_224ce9429814216b17fb3ad9e9a10472_con_130x130.png';\n            break;\n        case '5s':\n            return 'https://android-artworks.25pp.com/fs08/2023/12/28/0/110_c5c4af47f60f916f88c30110018e3a64_con_130x130.png';\n            break;\n        case '设置':\n            return 'http://123.56.105.145/tubiao/messy/30.svg';\n            break;\n        case '收藏':\n            return 'http://123.56.105.145/tubiao/more/129.png';\n            break;\n        case '作者':\n            return 'http://q.qlogo.cn/g?b=qq&nk=1585568865&s=140';\n            break;\n        case 'top':\n            return 'http://123.56.105.145/weisyr/img/TopImg0.png';\n            break;\n        case 'add':\n            return 'https://cdn.icon-icons.com/icons2/37/PNG/512/addproperty_a%C3%B1adir_3625.png';\n            break;\n        case 'icon':\n            return JSON.parse(request(\"hiker://home@歌词适配\")).icon;\n            break;\n        case 'my':\n            _type = \"rule_type_audio\";\n        default:\n            if (!/https?\\:\\/\\//i.test(_type)) {\n                _type = 'hiker://images/' + _type\n            }\n            return _type;\n            break;\n    }\n}"},{"col_type":"movie_3","name":"❶qq","path":"qq","rule":"eval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配')).rule);\nconst this_platform = \"qq\";\nconst headers = {\n    \"Referer\": \"https://y.qq.com/\",\n    \"User-Agent\": \"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)\",\n    \"Cookie\": \"qm_keyst=Q_H_L_5FBMRs-uicpIQo8Ymt3v0w1f0DAyJwQMdLJPVKmmOQZRQZkuz8AfB1Q; uin=948168827;\"\n}\n\n\nfunction getComm() {\n    let ct = 11;\n    let cv = 948168827; // 0\n    return { // 基础信息\n        \"cv\": cv,\n        \"ct\": ct,\n        \"format\": \"json\",\n        \"inCharset\": \"utf-8\",\n        \"outCharset\": \"utf-8\",\n        \"notice\": 0,\n        \"platform\": \"yqq.json\", // wk_v15.json, h5\n        \"needNewCode\": 1,\n        \"uin\": cv,\n        \"g_tk_new_20200303\": cv,\n        \"g_tk\": cv,\n\n\n        // APP信息相关？\n        \"tmeAppID\": \"qqmusiclight\", // qqmusic\n        \"nettype\": 'NETWORK_WIFI', // 网络状态？\n        \"tmeLoginType\": \"2\", // 1-微信，2-QQ？\n        \"devicelevel\": \"31\", // 装置等级？\n        \"os_ver\": ct, // 系统版本\n        \"v\": cv,\n\n\n        // 账号信息相关？\n        \"qq\": cv, // qq号\n        \"authst\": \"\", // 未知\n        \"tmeLoginMethod\": \"1\",\n        \"fPersonality\": \"0\",\n        \"phonetype\": '0',\n    }\n};\n\n\nfunction webSign(postBody, signType, _webcgikey) {\n    let sign = \"\";\n    let run = {\n        _: new Date().getTime() + \"\",\n        _webcgikey\n    }\n\n    function pickId(h, a) {\n        return a.map(function(i) {\n            return h[i] || \"\"\n        }).join('');\n    }\n    switch (signType) {\n\n\n        case 'zza':\n            sign = R(16) + md5('CJBPACrRuNy7' + postBody);\n            break;\n\n\n        case 'zzb':\n            sign = function(hash) {\n                let t = pickId(hash, [21,  4, 9, 26, 16, 20, 27, 30]);\n                let e = pickId(hash, [18, 11, 3,  2,  1,  7,  6, 25]);\n\n                let c = function(b) {\n                    let zd = '0123456789ABCDEF'.split('').reduce((acc, v, i) => (acc[v] = i, acc), {});\n                    let ol = [212, 45, 80, 68, 195, 163, 163, 203, 157, 220, 254, 91, 204, 79, 104, 6];\n                    return b.match(/../g).map((v, i) => (zd[v[0]] * 16 ^ zd[v[1]]) ^ ol[i]);\n                }(hash);\n                return t + window0.btoa(String.fromCharCode.apply(null, c)) + e;\n            }(md5(postBody).toUpperCase());\n            break;\n\n\n        case 'zzc':\n            sign = function(T) {\n                let C = $.require('hiker://assets/crypto-java.js');\n                let hash = C.Digest.digest(C.Data.parseUTF8(T), 'SHA-1');\n                let t = pickId(hash, [23, 14,  6, 36, 16, 40, 7, 19]);\n                let e = pickId(hash, [16,  1, 32, 12, 19, 27, 8,  5]);\n\n                let c = [89, 39, 179, 150, 218, 82, 58, 252, 177, 52, 186, 123, 120, 64, 242, 133, 143, 161, 121, 179].map(function(value, i) {\n                    let index = hash.slice(i * 2, i * 2 + 2);\n                    return value ^ parseInt(index, 16);\n                });\n                return t + window0.btoa(String.fromCharCode.apply(null, c)) + e;\n            }(postBody);\n            break;\n\n\n        default:\n            return run;\n            break;\n    }\n    delete run._webcgikey;\n    run.sign = String(signType + sign).toLowerCase().replace(/[\\\\\\/+=]/g, '');\n    return run;\n}\n\n\nfunction ajax(data, headerx, signType, run) {\n    let body = function(body) {\n        if (data.req_1 != undefined) {\n            body = Object.assign(data, body);\n        } else {\n            body.data = data;\n        }\n        return JSON.stringify(body)\n    }({\n        comm: getComm()\n    });\n    let url = buildUrl( // https://u6.kuwo.cn/cgi-bin/\n        \"https://u6.y.qq.com/cgi-bin/\" + [\n            \"musicu.fcg\", // 不校验sign\n            \"musics.fcg\", // 校验sign\n        ][/zz[abc]/i.test(signType) ? 1 : 0],\n        webSign(body, signType, data.method)\n    );\n    body = JSON.parse(post(url, {\n        headers: Object.assign(headers, headerx || {}),\n        body\n    })) || {};\n    if (!data.req_1) {\n        body = body.data || {};\n    }\n    if (run) return body;\n    return body.data || {};\n}\n\n\nfunction ajax2(path, data, meta) {\n    let params = Object.assign({\n        loginUin: 0,\n        hostUin: 0,\n        format: \"json\",\n        inCharset: \"utf8\",\n        outCharset: \"utf-8\",\n        notice: 0,\n        platform: \"wk_v15.json\",\n        needNewCode: 0,\n\n        // pcachetime: new Date().getTime(),\n        new_format: 1,\n        json: 1,\n        utf8: 1,\n    }, data || {});\n    // params.data = JSON.stringify(data);\n    return JSON.parse(fetch(\n        buildUrl(\"https://c.y.qq.com/\" + path, params),\n        Object.assign({\n            headers\n        }, meta || {})\n    )) || {};\n}\n\n\nfunction _formatting(_, r2) {\n    let f = _.file || {};\n    let name = _.name || _.songname || _.mvname || _.title;\n    let singer = (_.singer && _.singer.map(_ => _.name).join('&')) || _.singername || \"\";\n    let interval = Hms((_.interval || _.duration) * 1000);\n\n    let songId = _.mid || _.songmid;\n    let albumName = _.albumname || (_.album && _.album.name);\n    let albumId = _.albummid || (_.album && _.album.mid) || \"\";\n    let picUrl = (albumId && `T002 _ ${albumId}`) || (_.vs && _.vs[1] && `T062 _ ${_.vs[1]}`) || \"\";\n    if (picUrl != \"\") picUrl = \"https://y.gtimg.cn/music/photo_new/\" + picUrl.replace(\" _ \", \"R500x500M000\") + \".jpg\";\n    let qualitys = [];\n    for (let k of ['128mp3', '320mp3', 'flac', 'hires']) {\n        if (f['size_' + k]) {\n            qualitys.push({\n                type: {\n                    '128mp3': \"128k\",\n                    '320mp3': \"320k\",\n                    'flac': \"flac\",\n                    'hires': \"flac24bit\"\n                }[k],\n                size: Size(f['size_' + k])\n            });\n        }\n    }\n    let strMediaMid = f.media_mid;\n    let albumMid = _.album && _.album.mid;\n    Extra({\n        name,\n        singer,\n        interval,\n        songId,\n        albumName,\n        albumId,\n        picUrl,\n        qualitys,\n        id: _.id || _.songid,\n        strMediaMid,\n        albumMid,\n\n        content: _.pay.payplay || _.pay.pay_play || \"0\",\n    }, ((typeof r2 === 'object') ? Object.assign(r2, {\n        songName: name,\n        userName: singer,\n        songTime: interval,\n        albumName: albumName || name\n    }) : r2));\n}\n\n\nfunction getCdns() {\n    return ajax({\n        \"module\": \"music.audioCdnDispatch.cdnDispatch\",\n        \"method\": \"GetCdnDispatch\",\n        \"param\": {\n            \"guid\": \"0\",\n            \"uid\": \"0\",\n            \"use_new_domain\": 1,\n            \"use_ipv6\": 1\n        }\n    });\n}\n$.exports = {\n    ajax,\n    ajax2,\n    getCdns,\n    _formatting,\n    iTag: function() {\n        /*\n        ajax2(\"splcloud/fcgi-bin/fcg_get_diss_tag_conf.fcg\", {}).data.categories.map(_ => {\n            let name = _.categoryGroupName.replace('热门', '推荐');\n            iTag[name] = {};\n            _.items.map(_ => {\n                if (_.categoryName == '全部')\n                    iTag[name][\"最新\"] = _.categoryId + \"&sortId=2\";\n                iTag[name][_.categoryName] = _.categoryId;\n            });\n        });\n        ajax({\n            module: \"playlist.PlaylistAllCategoriesServer\",\n            method: \"get_all_categories\",\n            param: {}\n        }).v_group;\n        */\n        ajax({\n            module: \"music.playlist.PlaylistSquare\",\n            method: \"GetAllTag\",\n            param: {}\n        }).v_group.map(_ => {\n            if (_.group_id) {\n                let name = _.group_name.replace('热门', '推荐');\n                iTag[name] = {};\n                if (name == '推荐') {\n                    iTag[name]['推荐'] = 'rec';\n                }\n                _.v_item.map(_ => {\n                    iTag[name][_.name.replace(\"歌单\", \"\")] = _.id;\n                });\n                if (name == '推荐') {\n                    iTag[name]['最新'] = 'new';\n                    iTag[name]['最热'] = 'hot';\n                    iTag[name]['免费'] = 3418;\n                }\n            }\n        });\n        iTag[\"排行\"] = {};\n        ajax({\n            module: \"musicToplist.ToplistInfoServer\",\n            method: \"GetAll\",\n            param: {}\n        }).group.map(_ => {\n            iTag[\"排行\"][_.groupName] = [];\n            _.toplist.map(__ => {\n                if (__.title != \"MV榜\") {\n                    iTag[\"排行\"][_.groupName].push(Extra({\n                        name: __.title,\n                        sourceListId: __.topId,\n                        picUrl: __.headPicUrl || __.frontPicUrl,\n                        content: 3,\n                    }, 1, 1))\n                }\n            });\n        });\n        storage0.putMyVar(\"qq_iTag\", iTag);\n    },\n\n    mv: function(_, t1) {\n        let mvhash = $.require(\"qq?rule=歌词适配\").search(0, t1, 'url', 'mv');\n        mvhash = mvhash.mv && mvhash.mv.vid;\n        let names = [];\n        let urls = [];\n        if (mvhash) {\n            let mvinfo = ajax({\n                module: \"gosrf.Stream.MvUrlProxy\", // music.stream.MvUrlProxy\n                method: \"GetMvUrls\",\n                param: {\n                    \"vids\": [mvhash],\n                    \"request_type\": 10003,\n                    \"videoformat\": 1,\n                    \"filetype\": 30,\n                    \"format\": 265,\n                    \"use_new_domain\": 1,\n                    // \"addrtype\":3,\n                    // \"maxFiletype\":60,\n                }\n            })[mvhash][\"mp4\"].filter(_ => _.freeflow_url && _.freeflow_url.length);\n            [\n                '【标清】 240P',\n                '【高清】 480P',\n                '【超清】 720P',\n                '【蓝光】 1080P',\n                '【未知】 2000P',\n                '【未知】 4000P',\n            ].map((name, path) => {\n                let mp4url = mvinfo[path] && mvinfo[path][\"freeflow_url\"][0];\n                if (mp4url) {\n                    names.push(name);\n                    urls.push(mp4url);\n                }\n            });\n        }\n        return [names.reverse(), urls.reverse()];\n    },\n    getLyric: function(_, t1) {\n        let lrc;\n        for (let lType of [\"new\", \"yqq\"]) {\n            try {\n                lrc = ajax2(\"lyric/fcgi-bin/fcg_query_lyric_\" + lType + \".fcg\", {\n                    nobase64: 1,\n                    songmid: t1\n                }).lyric;\n                if (!lrc.match(/\\[\\d+\\:\\d+/)) {\n                    lrc = Lrc(lrc, _.interval);\n                }\n                if (lrc) break;\n            } catch (err) {}\n        }\n        return lrc || \"\";\n    },\n    lazy: function(platform, t1, t2, t3) {\n        let title, author, desc, img, time, tags, total, list, u;\n        let _ = t1;\n        t1 = _.songId || _.sourceListId;\n        switch (String(platform)) {\n            case '0': // 详情\n                if (t2) {\n                    return $.require(\"jiexi?rule=歌词适配\").GetMusicUrl(\"down\", \"qq\", t1, t3, _);\n                }\n                let f = _.qualitys;\n                // 链接\n                var url, ii, lrc;\n                switch (ii = t3) {\n                    case '3':\n                        if (ii == 3) {\n                            if (f[3] && f[3].type == 'flac24bit') {\n                                [url, lrc, ii] = $.require(\"jiexi?rule=歌词适配\").GetMusicUrl(\"open\", \"qq\", t1, 3, _, lrc, ii);\n                                if (url) break;\n                            } else ii = 2;\n                        }\n                    case '2':\n                        if (ii == 2) {\n                            if (f[2] && f[2].type == 'flac') {\n                                [url, lrc, ii] = $.require(\"jiexi?rule=歌词适配\").GetMusicUrl(\"open\", \"qq\", t1, 2, _, lrc, ii);\n                                if (url) break;\n                            } else ii = 1;\n                        }\n                    case '1':\n                        if (ii == 1) {\n                            if (f[1] && f[1].type == '320k') {\n                                [url, lrc, ii] = $.require(\"jiexi?rule=歌词适配\").GetMusicUrl(\"open\", \"qq\", t1, 1, _, lrc, ii);\n                                if (url) break;\n                            } else ii = 0;\n                        }\n                    default:\n                        try {\n                            if (_.content == \"1\") {\n                                throw new Error('is vip music');\n                            }\n                            let __ = ajax({\n                                module: \"vkey.GetVkeyServer\", // music.vkey.GetVkey\n                                method: \"CgiGetVkey\", // GetUrl\n                                param: {\n                                    \"guid\": \"0\",\n                                    \"platform\": \"20\",\n                                    \"filename\": [\"M500\" + t1 + t1 + \".mp3\"],\n                                    \"songmid\": [t1],\n\n                                    // \"uin\": \"\",\n                                    // \"loginflag\": 1\n                                }\n                            });\n                            url = __.midurlinfo[0].purl;\n                            if (url && url != \"\") {\n                                url = __.sip[0] + url;\n                            } else {\n                                throw new Error('no get purl');\n                            }\n                        } catch (isVipMusic) {\n                            [url, lrc, ii] = $.require(\"jiexi?rule=歌词适配\").GetMusicUrl(\"open\", \"qq\", t1, 0, _, lrc, ii);\n                        }\n                        break;\n                }\n                return [url, lrc, ii];\n                break;\n            case '1': // 首页\n                /*\n                _ = ajax2(\"splcloud/fcgi-bin/fcg_get_diss_by_tag.fcg\", {\n                    categoryId: t1,\n                    sin: ((MY_PAGE - 1) * 30),\n                    ein: ((MY_PAGE * 30) - 1)\n                }).data;\n                */\n                if (t1 == 'rec') { // 推荐\n                    _ = ajax({\n                        module: \"music.playlist.PlaylistSquare\",\n                        method: \"GetRecommendWhole\",\n                        param: {\n                            IsReqFeed: true,\n                            FeedReq: {\n                                From: (MY_PAGE - 1) * 30,\n                                Size: 30\n                            }\n                        }\n                    }, {\n                        Cookie: \"\"\n                    });\n                } else if (t1 == 9527) { // ai\n                    _ = ajax({\n                        module: 'music.playlist.AiPlCategory',\n                        method: 'get_ai_category_content',\n                        param: {\n                            category_id: 9527,\n                            size: 30,\n                            page: (MY_PAGE - 1),\n                            use_page: MY_PAGE\n                        }\n                    });\n                } else if (t1 == 'new' || t1 == 'hot') { // 最新/最热\n                    _ = ajax({\n                        module: 'playlist.PlayListPlazaServer',\n                        method: 'get_playlist_by_tag',\n                        param: {\n                            id: 10000000,\n                            sin: (MY_PAGE - 1) * 30,\n                            size: 30,\n                            order: t1 == 'new' ? 2 : 5,\n                            cur_page: MY_PAGE\n                        }\n                    });\n                } else {\n                    _ = ajax({\n                        module: 'playlist.PlayListCategoryServer',\n                        method: 'get_category_content',\n                        param: {\n                            titleid: +t1,\n                            caller: '0',\n                            category_id: +t1,\n                            size: 30,\n                            page: MY_PAGE - 1,\n                            use_page: 1,\n                        }\n                    });\n                }\n                _ = _.FeedRsp || _.content || _;\n                list = _.list || _.List || _.v_item || _.v_playlist;\n                list.map(_ => {\n                    _ = _.Playlist ? _.Playlist.basic : _.basic || _;\n                    Extra({\n                        name: _.dissname || _.title,\n                        picUrl: _.imgurl || _.cover_url_big || _.cover_url_medium || _.cover_url_small || (_.cover && (_.cover.big_url || _.cover.medium_url || _.cover.small_url)),\n                        content: 2,\n                        sourceListId: _.dissid || _.tid,\n                        col_type: t2\n                    }, 1);\n                });\n                return _.sum || _.total || _.total_cnt || _.FromLimit || ((MY_PAGE - 1) * 30 + list.length);\n                break;\n            case '2': // 发现\n                /*\n                _ = ajax2(\"qzone/fcg-bin/fcg_ucc_getcdinfo_byids_cp.fcg\", {\n                    type: 1,\n                    onlysong: 0,\n                    disstid: t1,\n                }).cdlist[0];\n                */\n                _ = ajax({\n                    module: \"music.srfDissInfo.aiDissInfo\",\n                    method: \"uniform_get_Dissinfo\",\n                    param: {\n                        \"disstid\": +t1,\n                        \"enc_host_uin\": \"\",\n                        \"tag\": 1,\n                        \"userinfo\": 1,\n                        \"song_begin\": (MY_PAGE - 1) * 30,\n                        \"song_num\": 30,\n                        // \"orderlist\": 1,\n                        // \"onlysonglist\": 0,\n                    }\n                });\n\n                title = _.dissname || _.dirinfo.title;\n                author = _.nickname || _.dirinfo.host_nick;\n                desc = _.desc || _.dirinfo.desc;\n                img = _.logo || _.dirinfo.picurl;\n                time = $.dateFormat((_.ctime || _.dirinfo.ctime) * 1000, 'yyyy-MM-dd');\n                tags = (_.tags || (_.dirinfo && _.dirinfo.tag) || []).map(_ => _.name).join(\"、\").replace(/、{2,}/g, \"、\");\n\n                total = _.songnum || _.total_song_num || _.dirinfo.songnum;\n                list = _.songlist;\n                if (list.length == total) total = 1;\n                break;\n            case '3': // 排行\n                _ = ajax({\n                    module: \"musicToplist.ToplistInfoServer\",\n                    method: \"GetDetail\",\n                    param: {\n                        \"topId\": +t1,\n                        \"offset\": (MY_PAGE - 1) * 30,\n                        \"num\": 30,\n                        \"period\": \"\"\n                    },\n                });\n\n                title = _.data.title;\n                author = \"QQ音乐\";\n                desc = _.data.intro;\n                img = _.data.mbHeadPicUrl;\n                time = _.data.updateTime;\n                tags = _.data.title;\n\n                total = _.data.totalNum;\n                list = _.songInfoList;\n                break;\n            case '4': // 专辑\n                _ = ajax({\n                    req_1: {\n                        module: \"music.musichallAlbum.AlbumInfoServer\",\n                        method: \"GetAlbumDetail\",\n                        param: {\n                            \"albumMid\": t1\n                        }\n                    },\n                    req_2: {\n                        module: \"music.musichallAlbum.AlbumSongList\",\n                        method: \"GetAlbumSongList\",\n                        param: {\n                            \"albumMid\": t1,\n                            \"order\": 2,\n                            \"begin\": 0,\n                            \"num\": -1\n                        },\n                    }\n                }, {}, \"noSign\", true);\n                let req_1 = _.req_1.data;\n                _ = _.req_2.data;\n\n                title = req_1.basicInfo.albumName;\n                author = req_1.singer.singerList.map(_ => _.name || _.transName).join(\"&\");\n                desc = req_1.basicInfo.desc;\n                img = `https://y.gtimg.cn/music/photo_new/T002R300x300M000${t1}.jpg`;\n                time = req_1.basicInfo.publishDate;\n                tags = [req_1.basicInfo.language, req_1.basicInfo.albumType];\n                (req_1.basicInfo.genres || []).map(_ => {\n                    if (_.name) tags.push(_.name);\n                });\n                (req_1.basicInfo.award || []).map(_ => {\n                    if (_.name) tags.push(_.name);\n                });\n\n                total = _.totalNum;\n                list = _.songList.map(_ => _.songInfo);\n                break;\n            case '5': // 作者\n                _ = ajax({\n                    req_1: {\n                        module: \"music.musichallSinger.SingerInfoInter\",\n                        method: \"GetSingerDetail\",\n                        param: {\n                            \"singer_mids\": [t1],\n                            \"ex_singer\": 1,\n                            \"wiki_singer\": 1,\n                            \"group_singer\": 0,\n                            \"pic\": 1,\n                            \"photos\": 0\n                        }\n                    },\n                    req_2: {\n                        module: \"musichall.song_list_server\",\n                        method: \"GetSingerSongList\",\n                        param: {\n                            \"singerMid\": t1,\n                            \"order\": 1,\n                            \"begin\": (MY_PAGE - 1) * 30,\n                            \"num\": 30\n                        }\n                    }\n                }, {}, \"noSign\", true);\n                try {\n                    let singer = _.req_1.data.singer_list[0] || {};\n                    title = singer.basic_info.name;\n                    author = singer.ex_info.foreign_name;\n                    desc = singer.ex_info.desc;\n                    img = singer.pic.pic;\n                    time = singer.ex_info.birthday;\n                    tags = singer.group_list;\n                } catch (e) {};\n                _ = _.req_2.data;\n                total = _.totalNum;\n                list = _.songList.map(_ => _.songInfo);\n                break;\n        }\n        if (t2) return list;\n        list.map(_ => _formatting(_, t3 || {}));\n        return {\n            title,\n            author,\n            desc,\n            img,\n            time,\n            tags,\n            total: total || ((MY_PAGE - 1) * 30 + list.length)\n        }\n    },\n\n\n\n    search: function(platform, keyword, isU, run) {\n        let _;\n        if (isU != \"url\") {\n            let list, __ = {\n                lib: (_) => true,\n                paid: (_) => _.pay.pay_play == '1',\n                free: (_) => _.pay.pay_play == '0',\n                lyric: (_) => true,\n                mv: (_) => true\n            }\n            let surl = (stype) => ajax({\n                module: \"music.search.SearchCgiService\",\n                method: \"DoSearchForQQMusicLite\", // DoSearchForQQMusicDesktop\n                param: {\n                    // \"remoteplace\": \"txt.yqq.top\", // txt.mqq.all\n                    // \"searchid\": R(17,\"1234567890\"),\n                    \"query\": keyword,\n                    \"search_type\": stype,\n                    \"num_per_page\": 30,\n                    \"page_num\": MY_PAGE,\n                    \"nqc_flag\": 0,\n                    \"grp\": 1\n                }\n            });\n            switch (String(platform)) {\n                case '0': // 搜索单曲\n                    _ = surl({\n                        mv: 4,\n                        lyric: 7\n                    }[isU] || 0);\n                    if (isU == 'mv') { // 搜索mv\n                        list = _.body.item_mv || [];\n\n                        // 通过vid获取歌曲id\n                        let vidtoids = function(vidlist) {\n                            let ids = [];\n                            let types = [];\n                            let modify_stamp = ajax({\n                                module: \"video.VideoDataServer\",\n                                method: \"get_video_info_batch\",\n                                param: {\n                                    \"vidlist\": vidlist,\n                                    \"required\": [\"related_songs\"]\n                                }\n                            });\n                            vidlist.map(vid => {\n                                let arr = modify_stamp[vid].related_songs || [];\n                                for (let id of arr) {\n                                    if (id && ids.indexOf(id) == -1) {\n                                        ids.push(id);\n                                        types.push(0);\n                                    }\n                                }\n                            });\n                            return {\n                                \"ids\": ids,\n                                \"mids\": [],\n                                \"types\": types,\n                                \"modify_stamp\": types,\n                                \"ctx\": 0,\n                                \"client\": 1,\n                            };\n                        }(list.map(_ => _.vid));\n\n                        // 通过歌曲id获取歌曲信息\n                        list = ajax({\n                            module: \"music.trackInfo.UniformRuleCtrl\",\n                            method: \"CgiGetTrackInfo\",\n                            param: vidtoids\n                        }).tracks || [];\n                    } else {\n                        list = _.body.item_song || [];\n                    }\n                    let r1 = getMyVar('search_down', '0') == '1' ? 2 : 1;\n                    list.map(_ => {\n                        if (__[isU](_)) _formatting(_, r1);\n                    });\n                    break;\n                case '1': // 搜索歌单\n                    isU = {\n                        songs: {\n                            u: 3,\n                            c: 2,\n                            p: \"item_songlist\"\n                        },\n                        album: {\n                            u: 2,\n                            c: 4,\n                            p: \"item_album\"\n                        },\n                        artist: {\n                            u: 1,\n                            c: 5,\n                            p: \"singer\"\n                        }\n                    }[isU];\n                    _ = surl(isU.u);\n                    list = _.body[isU.p] || [];\n                    list.map(_ => Extra({\n                        name: _.dissname || _.name || _.singerName,\n                        picUrl: _.logo || _.pic || _.singerPic,\n                        sourceListId: _.dissid || _.albummid || _.singerMID,\n                        content: isU.c,\n                    }, 1));\n                    break;\n            }\n            return _.meta.sum || ((MY_PAGE - 1) * 30 + list.length);\n        } else { // 搜索 分享链接\n            switch (String(platform)) {\n                case '0': // 搜索单曲\n                    _ = ajax({\n                        module: 'music.pf_song_detail_svr',\n                        method: 'get_song_detail_yqq',\n                        param: {\n                            song_mid: keyword\n                        }\n                    }).track_info;\n                    if (run == 'mv') return _;\n                    _formatting(_, 1);\n                    break;\n                case '1': // 搜索歌单\n                    _ = ajax({\n                        module: \"music.srfDissInfo.aiDissInfo\",\n                        method: \"uniform_get_Dissinfo\",\n                        param: {\n                            disstid: +keyword,\n                            song_num: 1,\n                        }\n                    }).dirinfo;\n                    Extra({\n                        name: _.title,\n                        picUrl: _.picurl,\n                        content: 2,\n                        sourceListId: _.id\n                    }, 1);\n                    break;\n            }\n            return 0;\n        }\n    },\n\n\n\n    refresh_login: function(cookie, run) {\n        let _, c, C = String(cookie).trim();\n        c = C.split(/qm_keyst=/i);\n        let key = (c[1] || c[0]).split(\";\")[0];\n        c = C.split(/uin=/i);\n        let uin = (c[1] || c[0]).split(\";\")[0];\n        if (key.startsWith('W_X')) {\n            _ = {\n                module: \"music.login.LoginServer\",\n                method: \"Login\",\n                param: {\n                    \"code\": \"\",\n                    \"openid\": \"\",\n                    \"refresh_token\": \"\",\n                    \"str_musicid\": String(uin),\n                    \"musickey\": key,\n                    \"unionid\": \"\",\n                    \"refresh_key\": \"\",\n                    \"loginMode\": 2\n                }\n            }\n        } else {\n            _ = {\n                module: 'QQConnectLogin.LoginServer',\n                method: 'QQLogin',\n                param: {\n                    'expired_in': 7776000,\n                    'musicid': Number(uin),\n                    'musickey': key\n                }\n            }\n        }\n        _ = ajax(_, {\n            Cookie: \"qm_keyst=\" + key + \"; uin=\" + uin\n        }, 'zzc', true);\n        if (_.code == 0) {\n            let key2 = _.data.musickey;\n            if (run) return [key2, uin];\n            log(\"qq_refresh_token...\\nQQ音乐：token获取成功  |  是否更改：\" + (key != key2));\n            putMyVar('viprule_c0', key2);\n            putMyVar('viprule_c1', uin);\n            return $.require('jiexi?rule=歌词适配').setEdit2(\"qq\");\n        } else if (_.code == 1000) {\n            log(\"qq_refresh_token...\\nQQ音乐：token获取失败  |  失败原因：token过期\");\n            return \"toast://token过期，请重新配置\";\n        } else if (_.code == 10006) {\n            log(\"qq_refresh_token...\\nQQ音乐：token获取失败  |  失败原因：参数错误？\");\n            return \"toast://参数错误\";\n        } else {\n            log(\"qq_refresh_token...\\nQQ音乐：token获取失败  |  失败原因：未知错误\");\n            return \"toast://刷新失败\";\n        }\n    },\n}"},{"col_type":"movie_3","name":"⑤TGX收藏","path":"collection","rule":"js:\neval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配', {})).rule);\nlet data, path, set, zu, i, ZY, zy, d;\n[path, set, data, zu] = $.require('collection2?rule=歌词适配').getData(true);\nif ((i = getItem(\"ci_1\", \"0\")) >= zu.length) i = 0;\nzy = JSON.parse(readFile(path + (ZY = zu[i]).id + \".json\"));\n\n\n\nd = [{\n    col_type: 'pic_1_full',\n    img: $.require('image?rule=歌词适配')(\"top\"),\n    url: $([{\n        title: \"我的收藏\",\n        icon: \"hiker://images/icon_download\"\n    }, {\n        title: \"历史浏览\",\n        icon: \"hiker://images/icon_his\"\n    }, {\n        title: \"程序设置\",\n        icon: \"hiker://images/rule_type_other\"\n    }, {\n        title: \"本地歌曲\",\n        icon: \"hiker://images/rule_type_audio\"\n    }, {\n        title: \"解析管理\",\n        icon: \"hiker://images/icon_xiutan\"\n    }, {\n        title: \"高级搜索\",\n        icon: \"hiker://images/icon_find\"\n    }], 2, '选择页面').select((_) => {\n        let u = 'hiker://empty';\n        switch (input) {\n            case '我的收藏':\n                u = 'hiker://collection?rule=歌词适配';\n                break;\n            case '历史浏览':\n                u = 'hiker://history?rule=歌词适配';\n                break;\n            case '本地歌曲':\n                u = 'hiker://localMedia';\n                break;\n            case '程序设置':\n                u = 'hiker://page/install#noHistory##noRecordHistory##noRefresh#?pageTitle=程序设置&rule=歌词适配';\n                break;\n            case '解析管理':\n                u = 'hiker://page/ruleList#noHistory##noRecordHistory##noRefresh#?pageTitle=解析管理&rule=歌词适配';\n                break;\n            case '高级搜索':\n                clearMyVar('s_platform');\n                clearMyVar('s_t3');\n                clearMyVar('s_t4');\n                if (_.back) {\n                    return back(false), u;\n                }\n                u = \"hiker://page/search#noHistory##noRecordHistory#?p=fypage&pageTitle=高级搜索&rule=歌词适配\";\n                break;\n        }\n        return u;\n    }, MY_PARAMS),\n    extra: {\n        back: true,\n        inheritTitle: false\n    }\n}];\n\n\n\nlet is_down = getMyVar('search_down', '0') == '1';\nd.push({\n    title: Strong(is_down ? '下载歌曲' : '播放歌曲'),\n    url: $(\"#noLoading#\").lazyRule((id) => {\n        let is_down = getMyVar('search_down', '0') == '1';\n        let title, img = 'http://123.56.105.145/tubiao/more/';\n        if (is_down) {\n            title = '<strong>播放歌曲</strong>';\n            img += '40';\n        } else {\n            title = '<strong>下载歌曲</strong>';\n            img += '22';\n        }\n        img += '.png';\n        putMyVar('search_down', is_down ? '0' : '1');\n        updateItem(id + ':collection:down', {\n            title,\n            img\n        });\n        let list = findItemsByCls(id + ':addlist') || [];\n        for (let it of list) {\n            let extra_url = it.url;\n            let url = it.extra.url;\n            it.extra.url = extra_url;\n            updateItem(it.extra.id, {\n                extra: it.extra,\n                url\n            });\n        }\n        return \"hiker://empty\";\n    }, id),\n    col_type: \"icon_small_3\",\n    img: \"http://123.56.105.145/tubiao/more/40.png\",\n    extra: {\n        id: id + ':collection:down'\n    }\n});\nd.push({\n    title: Strong(\"导入歌单\"),\n    col_type: \"icon_small_3\",\n    img: \"http://123.56.105.145/tubiao/unframed/459.png\",\n    url: \"fileSelect://\" + $.toString(() => {\n        if (!input) return \"toast://没有地址\";\n        path = \"hiker://files/rules/Thomas/gcsp1999/collection/\";\n        _ = $.require(\"GZIP\").unzip(\"file://\" + input),\n            _ = JSON.parse(_.replace(/(\"source\"\\:\")tx\"/gi, '$1qq\"'));\n        if (_.type == \"playListPart_v2\")\n            _.data = [_.data];\n        let l1 = JSON.parse(readFile(path + \"details.json\"));\n        let l2 = l1.map(_ => _.source + _.sourceListId);\n        let l3 = _.data.map(_ => {\n            let __ = {\n                name: _.name,\n                source: _.source || _.id.split(\"_\")[0],\n                sourceListId: _.sourceListId || _.id.split(\"_\")[1],\n                locationUpdateTime: _.locationUpdateTime || new Date().getTime(),\n                picUrl: _.picUrl || \"https://docs.lxmusic.top/logo.svg\",\n                content: \"2\",\n                // author: _.author || \"佚名\",\n                // desc: _.desc || \"值得分享的歌曲\",\n                // tags: _.tags || \"好听\"\n            };\n            if (__.source == \"kg\" || __.source == \"kw\") {\n                let sourceListId = __.sourceListId.replace(/^(id|digest\\-8_)_(\\d+)$/i, \"$2\");\n                if (__.source == \"kg\" && sourceListId.match(/https?\\:\\/\\//i)) {\n                    let ListIdmatch = sourceListId.match(/(\\/special\\/single\\/|share_type=special&id=|global_specialid=|\\/songlist\\/|global_collection_id=)([^\\.\\&\\/\\?]+)/i);\n                    sourceListId = ListIdmatch && ListIdmatch[2] || sourceListId;\n                }\n                __.sourceListId = sourceListId;\n            };\n            let i1 = l2.indexOf(__.source + __.sourceListId);\n            if (i1 != -1) {\n                l1.splice(i1, 1);\n                l2.splice(i1, 1);\n            }\n            let list = _.list.map(_ => {\n                let meta = _.meta;\n                delete _.id;\n                delete _.meta;\n                delete meta._qualitys;\n                meta.qualitys = meta.qualitys.filter(_ => /^(128k|320k|flac|flac24bit)$/i.test(_.type));\n                if (_.interval.length == 5) {\n                    _.interval = \"00:\" + _.interval;\n                }\n                return Object.assign(_, meta);\n            });\n            saveFile(\n                path + __.source + '_' + __.sourceListId + \".json\",\n                JSON.stringify(list, 0, 1)\n            );\n            return __;\n        });\n        saveFile(\n            path + \"details.json\",\n            JSON.stringify(l1.concat(l3), 0, 1)\n        );\n        refreshPage();\n        return \"toast://导入成功\";\n    })\n});\nd.push({\n    title: Strong(\"样式切换\"),\n    url: $(\"#noLoading#\").lazyRule((id) => {\n        const hikerPop = $.require(\"http://123.56.105.145/weisyr/js/hikerPop.js\");\n\n        function up(a) {\n            let list = findItemsByCls(id + ':addlist') || [];\n            for (let it of list) {\n                updateItem(it.extra.id, {\n                    col_type: a\n                });\n            }\n            return \"hiker://empty\";\n        }\n        let pop = hikerPop.selectBottom({\n            title: \"请选择显示样式\",\n            options: getColTypes(),\n            columns: 2,\n            height: 0.6, //0-1\n            position: 1,\n            click(a) {\n                return up(a)\n            },\n            longClick(a) {\n                return up(a)\n            }\n        });\n        return \"hiker://empty\";\n    }, id),\n    col_type: \"icon_small_3\",\n    img: \"http://123.56.105.145/tubiao/red/35.png\"\n});\nd.push({\n    url: \"hiker://empty\",\n    col_type: \"line_blank\",\n});\nd.push({\n    url: \"hiker://empty\",\n    col_type: \"line_blank\",\n});\n\n\n\n\n\nlet options = [\"删除分组\", \"分享分组\", \"新增分组\", \"修改封面\", \"修改名称\", \"合并分组\", \"更改排序\", \"更新资源\", \"二级页面\"];\nd.push({\n    title: Strong(ZY.name),\n    desc: \"共\" + zy.length + \"首音乐\",\n    col_type: \"avatar\",\n    img: \"hiker://images/icon_menu6\",\n    url: $(\"#noLoading#\").lazyRule((options, i) => {\n        options.splice(1, 0, \"切换样式\");\n        const hikerPop = $.require(\"http://123.56.105.145/weisyr/js/hikerPop.js\");\n        [path, set, data, list] = $.require('collection2?rule=歌词适配').getData();\n        let spen = Number(getMyVar(\"ci_2\", \"2\"));\n        let inputBox;\n        let pop = hikerPop.selectBottomResIcon({\n            iconList: list,\n            columns: spen,\n            title: \"切换分组\",\n            noAutoDismiss: false,\n            position: 20,\n            toPosition: 20,\n            position: i,\n            click(a) {\n                let ii = list.map(_ => _.title).indexOf(a.title);\n                setItem(\"ci_1\", ii + \"\");\n                refreshPage();\n                return \"hiker://empty\";\n            },\n            menuClick(manage) {\n                hikerPop.selectCenter({\n                    options,\n                    columns: 2,\n                    title: \"扩展操作\",\n                    click(input) {\n                        if (input == '切换样式') {\n                            spen = spen == 2 ? 1 : 2;\n                            putMyVar(\"ci_2\", spen + \"\");\n                            manage.changeColumns(spen);\n                            hikerPop.runOnNewThread(() => {\n                                java.lang.Thread.sleep(120);\n                                manage.scrollToPosition(20, true);\n                            });\n                            return \"hiker://empty\";\n                        } else {\n                            pop.dismiss();\n                            return $.require('collection2?rule=歌词适配').setData(input, i);\n                        }\n                    },\n                });\n\n            }\n        });\n        return \"hiker://empty\";\n    }, options, i),\n    extra: {\n        longClick: options.map(title => ({\n            title,\n            js: $.toString((input, i) => {\n                return $.require('collection2?rule=歌词适配').setData(input, i);\n            }, title, i)\n        }))\n    }\n});\nd.push({\n    url: \"hiker://empty\",\n    col_type: \"line\",\n});\n\n\n\n// 分组数据\nif (zy.length == 0) {\n    d.push({\n        col_type: \"text_center_1\",\n        url: \"hiker://empty\",\n        title: \"““””\" + \"~~~什么都没有~~~\".fontcolor(\"Gray\")\n    });\n} else {\n    zy.map((_, i) => {\n        let __ = Extra(_, {\n            title: Rich(\"$songName\" + (\"　-　$userName\").small().small().sub()),\n            desc: \"📼 $songTime\\n📀 $albumName\",\n            col_type: \"text_1\",\n\n            songName: _.name,\n            userName: _.singer,\n            songTime: _.interval || _.qualitys[_.qualitys.length - 1].type,\n            albumName: _.albumName || _.name\n        }, 1);\n        __.extra.longClick[1].title = \"复制\";\n        __.extra.longClick.splice(1, 0, {\n            title: \"修改\",\n            js: $.toString((p1, p2, i) => {\n                return $.require(\"theme3?rule=歌词适配\").clickJs(p1, p2, i);\n            }, path, ZY.id + \".json\", i)\n        }, {\n            title: \"分享\",\n            js: $.toString((p1, p2, i) => {\n                let json = JSON.parse(readFile(p1 + p2))[i];\n                return $.require(\"jiexi?rule=歌词适配\").getShare(json, false, 1, \"歌曲\", json.name + ' - ' + json.singer);\n            }, path, ZY.id + \".json\", i)\n        }, {\n            title: \"删除\",\n            js: $.toString((path, i, name) => {\n                return $(\"确定删除 \" + name + \" 吗？\").confirm((path, i) => {\n                    let zy = JSON.parse(readFile(path));\n                    zy.splice(i, 1);\n                    saveFile(path, JSON.stringify(zy, 0, 1));\n                    refreshPage(false);\n                    return \"toast://歌曲删除成功\";\n                }, path, i)\n            }, path + ZY.id + \".json\", i, _.name)\n        });\n        d.push(__);\n    });\n}\nsetResult(d);"},{"col_type":"movie_3","name":"④高级搜索","path":"search","rule":"js:\neval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配', {})).rule);\n// MY_PAGE == 1 && (d = [], Loading());\nlet history = storage0.getItem(\"searchHistory\", []);\nlet s_platform = getMyVar('s_platform', 'lib')\nlet s_t1 = getMyVar('s_t1', getItem('s_t1', '0'))\nlet s_t2 = getMyVar('s_t2', '').replace(/^[\\s\\S]*?(https?\\:\\/\\/[^\\n\\r]+)[\\s\\S]*/i, '$1').split(/\\s+\\@QQ音乐/i)[0];\nlet s_t3 = getMyVar('s_t3', 'lib');\nlet s_t4, tabs, regid, is_down,\n    isU = /https?\\:\\/\\//.test(s_t2),\n    isP = MY_PAGE == 1;\n\n\n\nif (s_platform == 'lib') { // 搜索推荐\n    s_t3 = getMyVar('s_t3', 'kw');\n    tabs = ['kw', 'kg'];\n} else if (s_t1 == '0') { // 搜索单曲\n    switch (s_platform) {\n        case '5s':\n            tabs = ['lib', 'yc', 'fc', 'bz'];\n            break;\n        case 'my':\n            s_t4 = getMyVar('s_t4', '1') == '1';\n            s_t3 = getMyVar('s_t3', 'wy');\n            if (!s_t3.match(/wy|kw|mg/) && s_t4)\n                s_t3 = 'wy';\n            tabs = [\"wy\", \"kw\", \"mg\", \"1t\", \"db\", \"5y\", \"5f\"].slice(0, s_t4 ? 3 : 7);\n            break;\n        case 'qt':\n            s_t3 = getMyVar('s_t3', 'bd');\n            tabs = qts.slice(1);\n            break;\n        default:\n            if (s_t3 == 'kw' || s_t3 == 'kg') {\n                s_t3 = 'lib';\n            }\n            tabs = ['lib', 'paid', 'free', 'lyric', 'mv'];\n            break;\n    }\n} else { // 搜索歌单\n    switch (s_platform) {\n        case '5s':\n        case 'my':\n        case 'qt':\n            tabs = ['lib'];\n            s_t3 = getMyVar('s_t3', 'lib');\n            break;\n        default:\n            tabs = ['songs', 'album', 'artist'];\n            s_t3 = getMyVar('s_t3', 'songs');\n            break;\n    }\n}\n\n\nif (isP) {\n    if (isU) {\n        let s_t2_1, regs = [\n            [\"qq\", /y\\.qq\\.com|(music|wx\\.y)\\.gtimg\\.cn/i, /.*(\\/details\\/.*id=|\\/playlist\\/|playlist_v2.*?[\\?&]id=)(\\d+)/i, /[\\/\\?\\&]song(Detail\\/|mid\\=|\\/)([a-z0-9]+)/i],\n            [\"wy\", /music\\.163\\.com|163cn\\.tv/i, /\\/(playlist|d?j?radio)(\\/|.*?[\\?\\&]id=)(\\d+)/i, /(song|program)(.*?[\\?\\&]id=|\\/)(\\d+)/i],\n            [\"kw\", /kuwo\\.cn/i, /(\\/playlist(_detail)?\\/|[\\?\\&]pid=)(\\d+)/i, /(\\/yinyue\\/|\\/play_detail\\/|[\\?\\&][mr]?id=(MUSIC_)?)(\\d+)/i],\n            [\"mg\", /migu\\.cn/i, /\\/playlist\\/(.*id=)?(\\d+)/i, /\\/song\\/(.*id=)?([a-z0-9]+)/i],\n            [\"5s\", /5sing\\./i, /.*(songlist.*id=)([a-z0-9]+)/i, /.*(\\?song.*?=|\\/)([a-z0-9]+)(\\&song.*?=|\\/|\\-)([a-z0-9]+)/i],\n            [\"kg\", /kugou\\./i, /(\\/special\\/single\\/|share_type=special&id=|global_specialid=|\\/songlist\\/|global_collection_id=|^[^(\\/share)]+[&\\?]id=)([^\\.\\&\\/\\?]+)/i, /(hash=)([a-z0-9]+)/i],\n        ];\n        try {\n            s_t2_1 = !/antiserver.kuwo.cn/i.test(s_t2) && JSON.parse(fetch(s_t2, {\n                redirect: false,\n                onlyHeaders: true,\n                timeout: 5000\n            })).headers.location || \"\";\n            s_t2 = s_t2_1[0].split(\"/\").length > 4 ? s_t2_1[0] : s_t2;\n        } catch (noFetch) {};\n        s_t2_1 = false;\n        for (let mat of regs) {\n            let reg1, reg2, reg3;\n            [platform, reg1, reg2, reg3] = mat;\n            if (s_t2.match(reg1)) {\n                s_t2_1 = true;\n                try {\n                    s_platform = platform;\n                    if (reg2 && (mat = s_t2.match(reg2))) {\n                        s_t1 = '1';\n                        regid = mat[3] || mat[2];\n                    } else if (reg3 && (mat = s_t2.match(reg3))) {\n                        s_t1 = '0';\n                        if (platform == '5s') {\n                            regid = mat[2];\n                            if (regid.match(/\\D/))\n                                regid = mat[4] + '#' + regid;\n                            else\n                                regid += '#' + mat[4];\n                        } else {\n                            regid = mat[3] || mat[2];\n                        }\n                    }\n                } catch (err) {}\n                break;\n            }\n        }\n\n        if (s_t2_1 && (!regid || (regid.match(/gcid_/) && !regid.match(/collection_/)))) { // 正则未匹配\n            try {\n                [s_platform, s_t1, regid] = JSON.parse(executeWebRule(s_t2, $.toString((regs, platform, s_t1) => {\n                    let isReg = (reg, i) => {\n                        try {\n                            return window.location.href.match(reg)[i];\n                        } catch (matErr) {\n                            return false;\n                        }\n                    }\n                    try {\n                        Run = [\"qq\", \"0\", window.__ssrFirstPageData__.songList[0].mid];\n                    } catch (err0) {\n                        try {\n                            Run = [\"qq\", \"1\", firstPageData.taogeData.id];\n                        } catch (err1) {\n                            try {\n                                try {\n                                    phpParam = dataFromSmarty[0];\n                                } catch (isKgpe) {}\n                                specialid = phpParam.specialid || phpParam.global_collection_id;\n                                if (specialid) {\n                                    Run = [\"kg\", \"1\", specialid];\n                                } else {\n                                    Run = [\"kg\", \"0\", phpParam.hash];\n                                }\n                            } catch (err2) {\n                                try { // 好像是这样拼的(大概\n                                    if ((listid = isReg(/listid=(\\d+)/i, 1)) && (uid = isReg(/uid=(\\d+)/i, 1))) {\n                                        Run = [\"kg\", \"1\", \"collection_3_\" + uid + \"_\" + listid + \"_0\"];\n                                    } else {\n                                        phpParam = (window.$output ? window.$output.info : nData).listinfo;\n                                        Run = [\"kg\", \"1\", phpParam.specialid || phpParam.global_collection_id];\n                                    }\n                                } catch (err3) {\n                                    Run = [platform, s_t1, \"\"];\n                                }\n                            }\n                        }\n                    }\n                    return JSON.stringify(Run);\n                }, regs, platform, s_t1), {\n                    blockRules: ['.js', '.css', '.jpg', '.png', '.gif', '.svg', '.ico'],\n                    timeout: 8000\n                }));\n            } catch (webErr) {}\n        }\n\n        if (s_platform == \"wy\" && s_t2.match(/d?j?radio|program/))\n            s_t4 = \"4\";\n        s_t2 = String(regid || \"\");\n    } else if (s_t2.trim()) {\n        // 搜索内容是纯数字，看看是不是酷狗码\n        let kucode = Number(s_t2);\n        if (kucode) {\n            kucode = JSON.parse(fetch('http://t.kugou.com/command/', {\n                method: 'POST',\n                headers: {\n                    'KG-RC': '1',\n                    'KG-THash': 'network_super_call.cpp:3676261689:379',\n                    'User-Agent': '',\n                },\n                body: {\n                    appid: 1001,\n                    clientver: 9020,\n                    mid: '21511157a05844bd085308bc76ef3343',\n                    clienttime: 640612895,\n                    key: '36164c4015e704673c588ee202b9ecb8',\n                    data: kucode\n                },\n            }));\n            // 是酷狗码\n            if (kucode.status == 1) {\n                kucode = kucode.data;\n                s_platform = \"kg\";\n                s_t3 = \"url\";\n                isU = true;\n                let kuinfo = kucode.info;\n\n                // type 1单曲，2歌单，3电台，4酷狗码，5别人的播放队列\n                if (kuinfo.type == 1) {\n                    s_t1 = regid = \"0\";\n                    s_t2 = kucode.list.hash;\n                } else {\n                    if (kuinfo.global_collection_id || (kuinfo.userid && kuinfo.id)) {\n                        s_t1 = \"1\";\n                        s_t2 = kuinfo.global_collection_id || (\"collection_3_\" + kuinfo.userid + \"_\" + kuinfo.id + \"_0\");\n                    } else {\n                        s_t1 = \"2\";\n                        s_t2 = JSON.stringify({\n                            id: kuinfo.id,\n                            type: 3,\n                            userid: kuinfo.userid,\n                            collect_type: kuinfo.collect_type,\n                            page: 1,\n                            pagesize: kuinfo.count,\n                        });\n                    }\n                }\n                regid = kucode && s_t2;\n            } else { // 不是酷狗码\n                kucode = 0;\n            }\n        }\n        if (!kucode) {\n            let ii = history.indexOf(s_t2);\n            if (ii > -1) {\n                history.splice(ii, 1);\n            }\n            if (history.length > 20) {\n                history.splice(history.length - 1, 1);\n            }\n            history.unshift(s_t2);\n            storage0.setItem(\"searchHistory\", history);\n        }\n    }\n    if (s_platform == \"wy\") tabs.push(\"boke\");\n\n    d = [{\n        col_type: 'pic_1_full',\n        title: '0',\n        img: $.require('image?rule=歌词适配')(\"top\"),\n        url: $('#noLoading#').lazyRule((_) => {\n            if (_.back)\n                return back(true), 'hiker://empty';\n            else\n                return \"hiker://page/collection#noHistory##noRecordHistory##noRefresh##gameTheme#?rule=歌词适配\";\n        }, MY_PARAMS),\n        extra: {\n            pageTitle: \"TGX收藏\",\n            back: 1\n        }\n    }, {\n        title: Strong(\"搜索\" + (s_t1 === '0' ? \"单曲\" : \"歌单\")),\n        url: $('#noLoading#').lazyRule((s_t1) => {\n            putMyVar('s_t1', s_t1);\n            clearMyVar('s_t3');\n            refreshPage();\n            clearMyVar('search_page');\n            return 'hiker://empty';\n        }, s_t1 === '0' ? '1' : '0'),\n        col_type: \"icon_small_3\",\n        img: \"hiker://images/icon_xiutan\"\n    }, {\n        title: Strong(\"我的收藏\"),\n        url: \"hiker://collection?rule=歌词适配\",\n        col_type: \"icon_small_3\",\n        img: \"hiker://images/icon_download\"\n    }, {\n        title: Strong(\"历史记录\"),\n        url: \"hiker://history?rule=歌词适配\",\n        col_type: \"icon_small_3\",\n        img: \"hiker://images/icon_his\"\n    }];\n    d.push({\n        title: '🔍',\n        desc: '搜索关键词 / 平台链接',\n        url: $.toString((s_platform) => {\n            s_t2 = input.trim();\n            if (s_t2 != \"\") {\n                putMyVar('s_t2', s_t2);\n                if (s_platform == 'lib')\n                    putMyVar('s_platform', getItem('s_platform', 'kw'));\n                clearMyVar('search_page');\n                refreshPage(false);\n            }\n            return 'hiker://empty';\n        }, s_platform),\n        col_type: \"input\",\n        extra: {\n            id: id + \":search\",\n            defaultValue: getMyVar(\"s_t2\"),\n            onChange: \"putMyVar('s_t2',input)\",\n            /* 不好用\n            $.toString((id) => {\n                            input = String(input).trim();\n                            if (getMyVar(\"s_t2\") != input) {\n                                putMyVar('s_t2', input);\n                                deleteItemByCls(id + ':cmd:key');\n                                if (input && input != \"\" && !/https?:\\/\\//.test(input)) {\n                                    u = \"http://msearchcdn.kugou.com/new/app/i/search.php?cmd=302&keyword=\" + input;\n                                    d = JSON.parse(fetch(u)).data\n                                        .map(_ => {\n                                            return {\n                                                title: _.keyword,\n                                                col_type: 'scroll_button',\n                                                url: $(\"#noLoading#\").lazyRule((id, key) => {\n                                                    let extra = findItem(id+\":search\").extra;\n                                                    extra.defaultValue = key;\n                                                    updateItem({\n                                                        extra: extra\n                                                    });\n                                                    return \"hiker://empty\";\n                                                }, id, _.keyword),\n                                                extra: {\n                                                    cls: id + ':cmd:key'\n                                                }\n                                            }\n                                        });\n                                    addItemAfter(id + ':search', d);\n                                }\n                            }\n                        }, id)\n          */\n        }\n    });\n    d.push({\n        col_type: 'blank_block'\n    });\n    platforms.map(platform => {\n        if (s_platform == platform)\n            platform = Rich(Strong(Color(platform)));\n        d.push({\n            title: platform,\n            url: $('#noLoading#').lazyRule((platform) => {\n                if (!platform.match(/^‘‘’’/)) {\n                    clearMyVar('search_page');\n                    putMyVar('s_platform', platform);\n                    clearMyVar('s_t3');\n                    clearMyVar('s_t4');\n                    refreshPage(false);\n                }\n                return 'hiker://empty';\n            }, platform),\n            col_type: 'scroll_button'\n        });\n    });\n    d.push({\n        col_type: 'blank_block'\n    });\n    if (s_t1 == '0' && s_platform == 'my') {\n        d.push({\n            title: Rich(Strong(Color(s_t4 ? '新' : '旧', '#3399cc'))),\n            url: $('#noLoading#').lazyRule((s_t4) => {\n                clearMyVar('search_page');\n                putMyVar('s_t4', s_t4);\n                refreshPage(false);\n                return 'hiker://empty';\n            }, s_t4 ? '0' : '1'),\n            col_type: 'scroll_button'\n        });\n    }\n    tabs.map(name => {\n        d.push({\n            title: s_t3 == name ? Rich(Strong(Color(name))) : name,\n            url: $('#noLoading#').lazyRule((tid) => {\n                clearMyVar('search_page');\n                putMyVar('s_t3', tid);\n                refreshPage(false);\n                return 'hiker://empty';\n            }, name),\n            col_type: 'scroll_button'\n        });\n    });\n    d.push({\n        col_type: 'line_blank'\n    }, {\n        col_type: 'line_blank'\n    });\n    Loading();\n    if (isU) {\n        if (!regid) d.push({\n            title: \"链接格式未收录\",\n            url: \"hiker://empty\",\n            col_type: \"text_center_1\",\n        });\n        else s_t3 = \"url\";\n    }\n} else d = [];\n\n\n\nif (s_platform != \"lib\" && !/^\\s*$/.test(s_t2)) {\n    if (s_t2.trim() && (!isU || isP)) {\n        if (isU)\n            setPageTitle('高级搜索 - ' + s_platform + (s_t1 == '2' ? '酷狗码' + s_t2 : (s_t1 == '1' ? '歌单' : '单曲')));\n        else\n            setPageTitle('高级搜索 - ' + s_t2 + '#' + MY_PAGE);\n        if (isP && !isU && s_t1 == '0') {\n            is_down = getMyVar('search_down', '0') == '1'\n            d.push({\n                title: is_down ? '<b>📥 下载</b>' : '<b>🎵 播放</b>',\n                img: 'http://123.56.105.145/tubiao/more/' + (is_down ? 22 : 40) + '.png',\n                url: $(\"#noLoading#\").lazyRule((id) => {\n                    let is_down = getMyVar('search_down', '0') == '1';\n                    let title, img = 'http://123.56.105.145/tubiao/more/';\n                    if (is_down) {\n                        title = '<b>🎵 播放</b>';\n                        img += '40';\n                    } else {\n                        title = '<b>📥 下载</b>';\n                        img += '22';\n                    }\n                    img += '.png';\n                    putMyVar('search_down', is_down ? '0' : '1');\n                    updateItem(id + ':yiyan', {\n                        title,\n                        img\n                    });\n                    let list = findItemsByCls(id + ':addlist') || [];\n                    for (let it of list) {\n                        let extra_url = it.url;\n                        let url = it.extra.url;\n                        it.extra.url = extra_url;\n                        updateItem(it.extra.id, {\n                            extra: it.extra,\n                            url\n                        });\n                    }\n                    return \"hiker://empty\";\n                }, id),\n                col_type: \"text_icon\",\n                extra: {\n                    id: id + ':yiyan'\n                }\n            });\n        } else if (isP) {\n            // is_down = fetch('https://v1.hitokoto.cn/?encode=text');\n            is_down = fetch('https://tenapi.cn/v2/yiyan', {\n                timeout: 3000\n            });\n            d.push({\n                title: '<b>📚 ' + is_down + '</b>',\n                img: 'hiker://images/icon4',\n                url: $(\"#noLoading#\").lazyRule((id) => {\n                    let is_down = fetch('https://tenapi.cn/v2/yiyan', {\n                        timeout: 3000\n                    });\n                    updateItem(id, {\n                        title: '<b>📚 ' + is_down + '</b>',\n                        extra: {\n                            id: id,\n                            longClick: [{\n                                title: \"复制: \" + is_down,\n                                js: $.toString((t) => {\n                                    return \"copy://\" + t\n                                }, is_down)\n                            }]\n                        }\n                    });\n                    return \"hiker://empty\";\n                }, id + \":search_down\"),\n                col_type: \"text_icon\",\n                extra: {\n                    id: id + \":search_down\",\n                    longClick: [{\n                        title: \"复制: \" + is_down,\n                        js: $.toString((t) => {\n                            return \"copy://\" + t\n                        }, is_down)\n                    }]\n                }\n            });\n        }\n        if (isP || getMyVar('search_page', '0') == '0' || s_platform.match(/my|qt/)) {\n            let pageSize = s_platform == \"5s\" ? (s_t1 == '0' ? 10 : 15) : 30;\n            let total = $.require(s_platform + \"?rule=歌词适配\").search(s_t1, s_t2, s_t3, s_t4);\n            if (total < MY_PAGE * pageSize) {\n                putMyVar('search_page', '1');\n                d.push({\n                    title: \"““””\" + '我是有底线的'.fontcolor('Gray').small(),\n                    url: 'hiker://empty',\n                    col_type: 'text_center_1',\n                    extra: {\n                        lineVisible: false\n                    }\n                });\n            } else {\n                clearMyVar('search_page');\n            }\n        }\n    }\n} else if (isP && !isU) {\n    setPageTitle('高级搜索');\n    d.push({\n        title: '<span style=\"color:#ff6601\"><b>历史搜索</b></span>',\n        pic_url: \"hiker://images/icon_find\",\n        col_type: \"avatar\",\n        url: $(\"确定清除全部搜索记录？\").confirm((id) => {\n            clearItem(\"searchHistory\");\n            deleteItemByCls(id + \":key\");\n            addItemAfter(id + \":searchHistory\", {\n                col_type: \"text_center_1\",\n                url: \"hiker://empty\",\n                title: \"““””\" + \"~~~什么都没有哦~~~\".fontcolor(\"Gray\"),\n                extra: {\n                    cls: id + \":key\",\n                    lineVisible: false\n                }\n            });\n        }, id),\n        extra: {\n            id: id + \":searchHistory\",\n        }\n    });\n    if (history.length === 0) d.push({\n        col_type: \"text_center_1\",\n        url: \"hiker://empty\",\n        title: \"““””\" + \"~~~什么都没有哦~~~\".fontcolor(\"Gray\"),\n        extra: {\n            cls: id + \":key\",\n            lineVisible: false\n        }\n    });\n    else history.map((key, i) => {\n        d.push({\n            title: key,\n            url: $(\"#noLoading#\").lazyRule((s_platform, key) => {\n                if (true) {\n                    if (s_platform == 'lib') putMyVar('s_platform', getItem('s_platform', 'kw'));\n                    clearMyVar('search_page');\n                    putMyVar('s_t2', key);\n                    // clearMyVar('s_t3');\n                    refreshPage(false);\n                } else {\n                    let extra = findItem(\"gcsp1999:search\").extra;\n                    extra.defaultValue = key;\n                    updateItem({\n                        extra: extra\n                    });\n                }\n                return \"hiker://empty\";\n            }, s_platform, key),\n            col_type: \"flex_button\",\n            extra: {\n                id: id + \":key:\" + key,\n                cls: id + \":key\",\n                longClick: [{\n                    title: \"删除关键词:\" + key,\n                    js: $.toString((id, key) => {\n                        let history = storage0.getItem(\"searchHistory\", []);\n                        let ii = history.indexOf(key);\n                        history.splice(ii, 1);\n                        storage0.setItem(\"searchHistory\", history);\n                        deleteItem(id + \":key:\" + key);\n                        if (history.length === 0) addItemAfter(id + \":searchHistory\", {\n                            col_type: \"text_center_1\",\n                            url: \"hiker://empty\",\n                            title: \"““””\" + \"~~~什么都没有哦~~~\".fontcolor(\"Gray\"),\n                            extra: {\n                                cls: id + \":key\",\n                                lineVisible: false\n                            }\n                        });\n                    }, id, key)\n                }]\n            }\n        });\n    });\n    Resou = (id, s_platform, platform, resou) => {\n        let D = [];\n        resou.map(name => {\n            D.push({\n                title: name,\n                url: $('#noLoading#').lazyRule((s_platform, platform, keyword) => {\n                    if (s_platform == 'lib') putMyVar('s_platform', platform);\n                    clearMyVar('search_page');\n                    putMyVar('s_t1', '0');\n                    putMyVar('s_t2', keyword);\n                    // clearMyVar('s_t3');\n                    refreshPage(false);\n                    return \"hiker://empty\";\n                }, s_platform, platform, name),\n                col_type: 'flex_button',\n                extra: {\n                    cls: id + ':resou:key'\n                }\n            });\n        });\n        return D;\n    };\n    d.push({\n        col_type: 'line_blank'\n    }, {\n        title: '<span style=\"color:#ff6601\"><b>大家都在搜</b></span>',\n        url: $('#noLoading#').lazyRule((id, s_platform, platform, Resou) => {\n            deleteItemByCls(id + ':resou:key');\n            let srec;\n            if (platform != 'kg') {\n                srec = [];\n                JSON.parse(fetch(\"http://searchrec.kuwo.cn/srec.s?searchrecapi=0&id=0\")).abslist.map(ablist => {\n                    ablist.map(_ => {\n                        srec.push(_.word)\n                    })\n                })\n            } else {\n                MY_PAGE = 1;\n                srec = $.require(\"kg?rule=歌词适配\").search(\"0\", \"\", \"lib\", \"srec\").map(_ => _.OriSongName);\n            }\n            addItemAfter(id + ':resou', Resou(id, s_platform, platform, srec));\n            return \"hiker://empty\";\n        }, id, s_platform, s_t3, Resou),\n        col_type: \"avatar\",\n        pic_url: \"hiker://images/rule_type_comics\",\n        extra: {\n            id: id + \":resou\"\n        }\n    });\n    let srec = storage0.getMyVar(s_t3 + \"_srec\");\n    if (srec == \"\") {\n        if (s_t3 != \"kg\") {\n            srec = fetch('http://hotword.kuwo.cn/hotword.s?encoding=utf8&tabid=1').split(/\\n/).map(text => text.trim().replace(/^TEXT=|(\\s+\\d+){2}$/gi, ''));\n            JSON.parse(fetch('http://searchrecterm.kuwo.cn/recterm.s?encoding=utf8&version=1')).content.map(_ => srec.push(_.query_word));\n        } else {\n            srec = [];\n            srec_t = fetch(\"http://gateway.kugou.com/api/v3/search/hot_tab?signature=ee44edb9d7155821412d220bcaf509dd&appid=1005&clientver=10026&plat=0\", {\n                \"headers\": {\n                    \"dfid\": \"-\",\n                    \"mid\": R(32, \"1234567890\"),\n                    \"clienttime\": new Date().getTime() + \"\",\n                    \"x-router\": \"msearch.kugou.com\"\n                }\n            });\n\n            JSON.parse(srec_t).data.list.map(_ => {\n                r = _.name == \"综艺热搜\";\n                _.keywords.map(_ => {\n                    srec.push(r ? _.keyword.split(\" \")[0] : _.keyword);\n                });\n            });\n\n        }\n        srec = srec.filter((a, b, c) => c.indexOf(a) === b && a.trim() !== \"\");\n        storage0.putMyVar(s_t3 + \"_srec\", srec);\n    }\n    d = d.concat(Resou(id, s_platform, s_t3, srec));\n}\n\nMY_PAGE == 1 ? setPreResult(d) : setResult(d);\ndeleteItemByCls('loading_gif');"},{"col_type":"movie_3","name":"❷wy","path":"wy","rule":"eval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配')).rule);\nconst this_platform = \"wy\";\nconst this_host = \"https://interface.music.163.com/\";\nconst headers = {\n    \"Secret\": \"5pa55qC86Z+z5LmQ54mb6YC8\",\n    \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.0.0 Safari/537.36\",\n    \"Cookie\": \"os=pc; appver=9.0.25; MUSIC_U=0034B44F9926BE9F1DD236BFB146E0FEB27696AD0802E2DD8D8062B036AD87CEEEB49D3141C00C103A8B110C944E6DFA2909843C098EB2515B513BC1AA0A7974866D653BEA27F81BF15700FB398CB95ABE260EDA0E71900A46296E8E9C069B6C6A3509D1FDE9F41DCEF55B07BEE0990EE13F8A461098536FF86896E76892551CC5B8C6C2063E605639146CEF24D2904725876F53C57B442653EA13ACFE9F2653B512A23BABE01680F2E953AF4BE1602B38B39B38B1D6D5C50E1F84AAF323D841A717DECDF9E0834EF1703C1D4A37DE7DB3AC49FA2A2C397B3418C34FAF191ED064E4F266D94A281B0C08947F339929EE1896350C37FE1E007D32BE2E0C1970DD2161A0D87F4A95CEA5B111289EC1064555149DBEEFBF73A1397D5B24EB5B429D81C8CBDB2A7DF61BECFAB3DBA3BD165167\"\n}\n\n\nfunction _formatting(_, r2) {\n    let name = _.name || _.songname;\n    let singer = _.ar && _.ar.map(_ => _.name).join('&') || \"\";\n    let interval = Hms(_.dt);\n    let songId = _.id;\n    let albumName = _.al && _.al.name;\n    let albumId = (_.al && _.al.id) || \"\";\n    let picUrl = (_.al && _.al.picUrl) || \"\";\n    let qualitys = [];\n    for (let k of ['l', 'h', 'sq', 'hr']) {\n        if (_[k] || (k == 'l' && _[k = 'm'])) {\n            qualitys.push({\n                type: {\n                    'm': \"128k\",\n                    'l': \"128k\", //192k\n                    'h': \"320k\",\n                    'sq': \"flac\",\n                    'hr': \"flac24bit\"\n                }[k],\n                size: Size(_[k].size)\n            });\n        }\n    }\n\n    let content = ((_.fee == 0 || _.fee == 8) && (_.privilege ? (_.privilege.st > -1) : 1)) ? 0 : 1;\n    Extra({\n        name,\n        singer,\n        interval,\n        songId,\n        albumName,\n        albumId,\n        picUrl,\n        qualitys,\n        content,\n    }, ((typeof r2 === 'object') ? Object.assign(r2, {\n        songName: name,\n        userName: singer,\n        songTime: interval,\n        albumName: albumName || name\n    }) : r2));\n}\n\n\n//  web - weapi\nfunction ajax2(path, json, head) {\n    let CryptoUtil = $.require(\"hiker://assets/crypto-java.js\");\n    let str_key = CryptoUtil.Data.parseUTF8(\"0CoJUm6Qyw8W8jud\");\n    let str_iv = CryptoUtil.Data.parseUTF8(\"0102030405060708\");\n    let aes = word => CryptoUtil.AES.encrypt(word, str_key, {\n        mode: \"AES/CBC/PKCS7Padding\",\n        iv: str_iv\n    }).toBase64(_base64.NO_WRAP);\n    let params = aes(aes(JSON.stringify(json)));\n    return JSON.parse(postPC(path.replace(/^(\\/api)?\\//i, this_host + \"weapi/\"), {\n        body: {\n            params: params,\n            encSecKey: \"bf50d0bcf56833b06d8d1219496a452a1d860fd58a14c0aafba3e770104ca77dc6856cb310ed3309039e6865081be4ddc2df52663373b20b70ac25b4d0c6ca466daef6b50174e93536e2d580c49e70649ad1936584899e85722eb83ceddfb4f56c1172fca5e60592d0e6ee3e8e02be1fe6e53f285b0389162d8e6ddc553857cd\"\n        },\n        headers: Object.assign(headers, head || {})\n    }));\n}\n\n\n//  app - eapi\nfunction ajax3(path, json, head) {\n    let CryptoUtil = $.require(\"hiker://assets/crypto-java.js\");\n    let params = [path, JSON.stringify(json || {})];\n    params.push(md5(\n        \"nobody\" +\n        params.join(\"use\") +\n        \"md5forencrypt\"\n    ));\n    return JSON.parse(postPC(path.replace(\"/\", this_host + \"e\"), {\n        body: {\n            params: CryptoUtil.AES.encrypt(\n                params.join(\"-36cd479b6b5-\"),\n                CryptoUtil.Data.parseUTF8(\"e82ckenh8dichen8\"), {\n                    mode: \"AES/ECB/PKCS7Padding\",\n                }\n            ).toHex()\n        },\n        headers: Object.assign(headers, head || {})\n    }));\n}\n$.exports = {\n    _formatting,\n    iTag: function(run) {\n        iTag[\"推荐\"] = {};\n        iTag[\"推荐\"][\"随机\"] = \"personalized?\";\n        iTag[\"推荐\"][\"推荐\"] = \"_SPECIAL_CLOUD_VILLAGE_PLAYLIST\";\n        iTag[\"推荐\"][\"官方\"] = \"官方\";\n        iTag[\"推荐\"][\"雷达\"] = \"_RADAR\";\n        iTag[\"推荐\"][\"新热\"] = \"_NEW_SONG_AND_ALBUM\";\n        iTag[\"推荐\"][\"原创\"] = \"_SPECIAL_ORIGIN_SONG_LOCATION\";\n        iTag[\"推荐\"][\"心情\"] = \"_FEELING_PLAYLIST_LOCATION\";\n        iTag[\"推荐\"][\"场景\"] = \"_SCENE_PLAYLIST_LOCATION\";\n        iTag[\"推荐\"][\"影视\"] = \"_FIRM_PLAYLIST\";\n        iTag[\"推荐\"][\"奖项\"] = \"_AWARDS_PLAYLIST\";\n        iTag[\"推荐\"][\"专属\"] = \"_COMBINATION\";\n        iTag[\"推荐\"][\"全部\"] = \"全部歌单\";\n        let Arr = [\"语种\", \"风格\", \"场景\", \"情感\", \"主题\"];\n        for (let key of Arr) iTag[key] = {};\n        // #代理接口已失效#  Sub = ajax(\"playlist/catlist\").sub;\n        //  Sub = ajax2(\"/api/playlist/catalogue\", {}).sub;\n        let Sub = ajax3(\"/api/playlist/catalogue/v1\", {}).sub;\n        Sub.map(_ =>\n            iTag[Arr[_.category]][_.name] = _.name\n        );\n\n\n        iTag[\"播客\"] = {};\n        iTag[\"播客\"][\"精选播客\"] = \"_PODCAST_MUSIC_RADIO\";\n        let Bok = ajax3(\"/api/podcast/ranklist/square/ranklist/get/v2\", {\n            \"ranklistSquareId\": \"1\"\n        }).data;\n        Bok.map(_ => {\n            iTag[\"播客\"][_.name] = (_.resourceId || _.chartType) + \"#b#\" + (_.resourceId && \"/category\" || \"\");\n        });\n        iTag[\"播客\"][\"热门节目\"] = \"_PODCAST_RADIO_PROGRAM\";\n        iTag[\"播客\"][\"电音风暴\"] = \"_PODCAST_ALBUM_COVER\";\n\n\n        iTag[\"排行\"] = {};\n        /* #代理接口已失效#\n                iTag[\"排行\"][\"全部\"] = ajax(\"toplist?\").list.map(_ => Extra({\n                    title: _.name,\n                    img: _.coverImgUrl,\n                    content: 3,\n                    zyid: _.id\n                }, 1, 1));\n        */\n        let Top = ajax3(\"/api/toplist/detail/v2\").data;\n        Top.map(_ => {\n            if (_.list && _.list.length) {\n                let name = _.name.replace(/榜单?/, \"\");\n                iTag[\"排行\"][name] = [];\n                _.list.map(_ => {\n                    if (_.id != 0) {\n                        iTag[\"排行\"][name].push(Extra({\n                            name: _.name,\n                            picUrl: _.coverUrl,\n                            content: 3,\n                            sourceListId: _.id\n                        }, 1, 1));\n                    }\n                });\n            }\n        });\n        if (run) return true;\n        storage0.putMyVar(\"wy_iTag\", iTag);\n    },\n    mv: function(_, t1) {\n        // search(0, t1, \"url\", \"mv\").mv + \"\";\n        let mvhash = ajax2(\"/api/v3/song/detail\", {\n            c: `[{\"id\":\"${t1}\"}]`\n        }).songs[0].mv;\n        let names = [];\n        let urls = [];\n        if (mvhash) {\n            let mvinfo = ajax3(\"/api/mv/detail\", {\n                \"id\": mvhash + \"\"\n            }).data.brs;\n            [\n                ['1080', '【蓝光】 '],\n                ['720', '【超清】 '],\n                ['480', '【高清】 '],\n                ['240', '【标清】 '],\n            ].map([path, name] => {\n                if (mvinfo[path]) {\n                    names.push(name + path + 'P');\n                    urls.push(mvinfo[path]);\n                }\n            });\n        }\n        return [names, urls];\n\n    },\n    getLyric: function(_, t1) {\n        let lrc;\n        try {\n            lrc = ajax2(\"/api/song/lyric\", {\n                id: t1,\n                lv: -1,\n                kv: -1,\n                tv: -1\n            }).lrc.lyric;\n        } catch (err_1) {\n            try {\n                lrc = ajax3(\"/api/song/lyric/v1\", {\n                    \"id\": t1,\n                    \"cp\": \"false\",\n                    \"lv\": \"0\",\n                    \"tv\": \"0\",\n                    \"kv\": \"0\",\n                    \"rv\": \"0\",\n                    \"yv\": \"0\",\n                    \"ytv\": \"0\",\n                    \"yrv\": \"0\"\n                }).lrc.lyric;\n            } catch (err_2) {}\n        }\n        return lrc || \"\";\n    },\n    lazy: function(platform, t1, t2, t3) {\n        let title, author, desc, img, time, tags, total, list;\n        let _ = t1;\n        t1 = _.songId || _.sourceListId;\n        switch (String(platform)) {\n            case '0': // 详情\n                if (t2) {\n                    return $.require(\"jiexi?rule=歌词适配\").GetMusicUrl(\"down\", \"wy\", t1, t3, _);\n                }\n                let url, lrc, ii, f = _.qualitys;\n                switch (ii = t3) {\n                    case '3':\n                        if (ii == 3) {\n                            if (f[3] && f[3].type == 'flac24bit') {\n                                [url, lrc, ii] = $.require(\"jiexi?rule=歌词适配\").GetMusicUrl(\"open\", \"wy\", t1, 3, _, lrc, ii);\n                                if (url) break;\n                            } else ii = 2;\n                        }\n                    case '2':\n                        if (ii == 2) {\n                            if (f[2] && f[2].type == 'flac') {\n                                [url, lrc, ii] = $.require(\"jiexi?rule=歌词适配\").GetMusicUrl(\"open\", \"wy\", t1, 2, _, lrc, ii);\n                                if (url) break;\n                            } else ii = 1;\n                        }\n                    default:\n                        let iii = ii > 0 ? 1 : 0;\n                        do {\n                            if (_.content === '0') { // 免费歌曲\n                                url = ajax3(\"/api/song/enhance/player/url/v1\", {\n                                    ids: `[\"${t1}\"]`,\n                                    level: iii > 0 ? \"exhigh\" : \"standard\",\n                                    trialMode: \"23\", // 试听\n                                    immerseType: \"c51\",\n                                    encodeType: \"flac\",\n                                }).data;\n                                if (url && url[0]) { //  320k / 128k\n                                    if (url[0].url)\n                                        url = url[0].url.split(\"?\")[0];\n                                    else if (url[0].code == 404)\n                                        url = \"toast://无版权歌曲，无法解析\";\n                                    else\n                                        url = false;\n                                }\n                                if (!url && !iii) { //  128k\n                                    url = `http://music.163.com/song/media/outer/url?id=${t1}.mp3`;\n                                }\n                            }\n                            if (!url && (((f[ii] && f[ii].type == '320k') && ii == 1) || iii == 0)) {\n                                [url, lrc, ii] = $.require(\"jiexi?rule=歌词适配\").GetMusicUrl(\"open\", \"wy\", t1, iii, _, lrc, ii);\n                            }\n                            if (url) break;\n                            iii -= 1;\n                        } while (iii > -1);\n                        break;\n                }\n                return [url, lrc, ii];\n                break;\n            case '1': //首页\n                // #代理接口已失效#  _ = ajax(t1.match(\"?\") ? t1 : \"top/playlist?cat=\" + t1 + \"&\");\n                if (t1 == \"personalized?\") {\n                    _ = ajax3(\"/api/personalized/playlist\", {\n                        // limit: 12\n                    }, {\n                        Cookie: \"\"\n                    });\n                } else if (/^_[A-Z]+/.test(t1)) {\n                    _ = ajax3(\"/api/link/page/rcmd/resource/show\", {\n                        \"pageCode\": \"HOME_RECOMMEND_PAGE\",\n                        \"isFirstScreen\": \"false\",\n                        \"cursor\": \"6\",\n                        \"refresh\": \"true\",\n                        \"blockCodeOrderList\": `[\"PAGE_RECOMMEND${t1}\"]`\n                    }).data.blocks[0].dslData;\n                    if (/_PODCAST/.test(t1)) { // 播客相关\n                        _.resources = [];\n                        if (_.djPrograms) {\n                            _.djPrograms.map(__ => {\n                                if (__ = __.radio) {\n                                    __.id += \"#djradio\";\n                                    _.resources.push(__);\n                                }\n                            });\n                        } else {\n                            (_.home_podcast_rcmd_list_ufzcn4oyj8 || _.home_podcast_rcmd_list_k8rlwn9uv1 || _).items.map(__ => {\n                                __.items.map(__ => {\n                                    if (__ = __.djProgram) {\n                                        __ = __.radio;\n                                        __.id += \"#djradio\";\n                                        _.resources.push(__);\n                                    }\n                                });\n                            });\n                        }\n                    } else {\n                        _ = (_.home_page_common_playlist_module_d1r94fwj80 || _.home_page_scene_playlist_module_w5rp24j0x2 || _.home_page_scene_playlist_module_rsoa9pd6fn || _).blockResource;\n                    }\n                } else if (/#b#/.test(t1)) {\n                    t1 = t1.split(\"#b#\");\n                    _ = ajax3(\"/api/charts/voicelist\" + (t1[1] || \"\"), {\n                        \"categoryId\": t1[0],\n                        \"chartType\": t1[0]\n                    });\n                    _.resources = _.data.map(_ => {\n                        let __ = _.voicelistMetaVO;\n                        __.id += \"#djradio\";\n                        return __;\n                    });\n                } else {\n                    _ = ajax2(\"/api/playlist/list\", {\n                        cat: t1 || \"全部\",\n                        order: \"hot\",\n                        limit: 30,\n                        offset: (MY_PAGE - 1) * 30,\n                        total: true,\n                        csrf_token: \"\",\n                    });\n                }\n                list = _.result || _.playlists || _.resources || [];\n                list.map(_ => Extra({\n                    name: _.name || _.title,\n                    picUrl: _.coverImgUrl || _.picUrl || _.coverImg,\n                    content: 2,\n                    sourceListId: _.id || _.resourceId,\n                    col_type: t2\n                }, 1));\n                // if (t1 == \"personalized?\") return 0;\n                return _.total || ((MY_PAGE - 1) * 30 + list.length);\n                break;\n            case '2': // 发现\n            case '3': // 排行\n                if (MY_PAGE == 1) {\n                    if (t1.match(\"#djradio\")) { // 是 播客 链接\n                        _ = ajax3(\"/api/v4/dj/program/byradio\", {\n                            \"page\": \"{\\\"size\\\":0}\",\n                            \"radioId\": t1.replace(\"#djradio\", \"\")\n                        }).data;\n\n                        let e = _.extInfo.radioData;\n                        title = e.name;\n                        author = e.dj && e.dj.nickname ? e.dj.nickname : \"网易云音乐\";\n                        desc = e.desc;\n                        img = e.picUrl;\n                        time = $.dateFormat(e.lastProgramCreateTime, 'yyyy-MM-dd');\n                        tags = e.category;\n\n                        total = _.page.size;\n                        list = _.records.map(_ => {\n                            let a = _.mainSong;\n                            let it = {\n                                id: a.id,\n                                name: a.name || _.name,\n                                ar: a.artists || [{\n                                    name: _.dj.nickname\n                                }],\n                                al: {\n                                    id: (_.radio && _.radio.id) || \"\",\n                                    name: (_.radio && _.radio.name) || \"\",\n                                    picUrl: _.coverUrl || (a.album && a.album.picUrl) || \"\"\n                                },\n                                dt: a.duration || _.duration,\n                                fee: _.programFeeType,\n                                h: a.hMusic,\n                                l: a.lMusic,\n                                m: a.mMusic\n                            }\n                            if (it.al.id) it.al.id += \"#djradio\";\n                            return it;\n                        });\n                    } else {\n                        _ = ajax3(\"/api/v6/playlist/detail\", {\n                            n: 99999,\n                            id: t1\n                        }).playlist;\n                        title = _.name;\n                        author = _.creator && _.creator.nickname ? _.creator.nickname : \"网易云音乐\";\n                        desc = _.description;\n                        img = _.coverImgUrl;\n                        time = $.dateFormat(_.updateTime, 'yyyy-MM-dd');\n                        tags = (_.tags || []).join(\"、\");\n\n                        total = _.trackCount;\n                        list = _.tracks || [];\n                    }\n                } else\n                    list = [];\n                break;\n            case '4': // 专辑\n                if (MY_PAGE == 1) {\n                    _ = ajax2(\"/api/v1/album/\" + t1, {});\n                    title = _.album.name;\n                    author = _.album.artist.name;\n                    desc = _.album.description;\n                    img = _.album.picUrl;\n                    time = $.dateFormat(_.album.publishTime, 'yyyy-MM-dd');\n                    tags = (_.album.awardTags || []).join(\"、\");\n\n                    total = _.album.size;\n                    list = _.songs || [];\n                } else\n                    list = [];\n                break;\n            case '5': // 歌手\n                _ = ajax2(\"/api/v2/artist/songs\", {\n                    \"id\": t1,\n                    \"limit\": \"30\",\n                    \"offset\": (MY_PAGE - 1) * 30,\n                    \"private_cloud\": \"true\",\n                    \"work_type\": \"5\",\n                    \"order\": \"hot\"\n                });\n                total = _.total;\n                list = _.songs || [];\n                break;\n        }\n        if (t2) return list;\n\n        list.map(_ => _formatting(_, t3 || {}));\n        return {\n            title,\n            author,\n            desc,\n            img,\n            time,\n            tags,\n            total: total || ((MY_PAGE - 1) * 30 + list.length)\n        }\n    },\n    search: function(platform, keyword, isU, run) {\n        let _, getr = (_) => {\n            let al = _.program || _;\n            let ar = _.anchor || _.dj;\n            let at = _.radio;\n            _ = _.mainSong;\n            let r = {\n                id: _.id,\n                name: _.name || al.name || at.name,\n                ar: _.artists || [{\n                    name: ar.nickname || \"\"\n                }],\n                al: {\n                    id: (at.id) || \"\",\n                    name: (at.name) || \"\",\n                    picUrl: al.coverUrl || (_.album && _.album.picUrl) || at.picUrl || ar.avatarUrl || \"\"\n                },\n                fee: 0,\n                dt: _.duration || al.duration,\n                l: _.lMusic,\n                m: _.mMusic,\n                h: _.hMusic,\n                sq: _.sqMusic,\n                hr: _.hrMusic\n            }\n            if (r.al.id) r.al.id += \"#djradio\";\n            return r;\n        }\n        if (isU != \"url\") {\n            let list, __ = {\n                lib: (_) => true,\n                paid: (_) => ((_.fee == 0 || _.fee == 8) && (_.privilege ? (_.privilege.st > -1) : 1)) ? 0 : 1,\n                free: (_) => ((_.fee == 0 || _.fee == 8) && (_.privilege ? (_.privilege.st > -1) : 1)) ? 1 : 0,\n                lyric: (_) => true,\n                mv: (_) => true,\n                boke: (_) => true\n            };\n            /*\n                        let surl = (stype) => _ = ajax2(\"/api/search/get\", {\n                            s: keyword,\n                            limit: 30,\n                            offset: (MY_PAGE - 1) * 30,\n                            type: stype,\n                            strategy: 5,\n                            queryCorrect: true\n                        }).result;\n            */\n            let surl = (stype, v1) => {\n                _ = ajax3(\"/api\" + v1 + \"/search/\" + (/\\//.test(stype) ? stype : (stype + \"/get\")), {\n                    \"filterCode\": \"-1\",\n                    \"offset\": ((MY_PAGE - 1) * 30) + \"\",\n                    \"limit\": \"30\",\n                    \"channel\": \"typing\",\n                    \"keyword\": keyword,\n                    \"scene\": \"normal\",\n                    \"s\": keyword,\n                });\n                _ = _.data || _.result;\n                return _;\n            }\n            let isB = isU == \"boke\";\n            switch (String(platform)) {\n                case '0': // 搜索单曲\n                    // list = surl(1).songs;\n                    list = surl({\n                        lyric: \"resource/lyric\",\n                        boke: \"voice\",\n                        mv: \"mlog\"\n                    }[isU] || \"song\", \"\").resources || [];\n                    if (isU == 'mv') {\n                        list = function() {\n                            let c = [];\n                            list.map(_ => {\n                                try {\n                                    let songId = _.baseInfo.resource.mlogExtVO.song.id;\n                                    if (c.indexOf(songId) == -1) {\n                                        c.push({\n                                            id: songId\n                                        });\n                                    }\n                                } catch (e) {}\n                            });\n                            let __ = ajax2(\"/api/v3/song/detail\", {\n                                c: JSON.stringify(c)\n                            });\n                            return __.songs.map((___, i) => {\n                                let a = ___ || __.privileges[i];\n                                a.privilege = __.privileges[i];\n                                return a;\n                            });\n                        }();\n                    }\n                    if (isU === 1) return list;\n                    let r1 = getMyVar('search_down', '0') == '1' ? 2 : 1;\n                    list.map(_ => {\n                        _ = _.baseInfo || _.song || _;\n                        if (isB) {\n                            _ = getr(_);\n                        }\n                        if (__[isU](_)) _formatting(_, r1);\n                    });\n                    break;\n                case '1': // 搜索歌单\n                    // list = surl(1000).playlists;\n                    isU = {\n                        songs: {\n                            u: \"playlist\",\n                            c: \"2\"\n                        },\n                        album: {\n                            u: \"album\",\n                            c: \"4\",\n                            v: 1\n                        },\n                        artist: {\n                            u: \"artist\",\n                            c: \"5\",\n                            v: 1\n                        },\n                        boke: {\n                            u: \"voicelist\",\n                            c: \"2\"\n                        }\n                    }[isU];\n                    list = surl(isU.u, isU.v ? \"/v1\" : \"\");\n                    list = list.resources || list.albums || list.artists || [];\n                    // if (isU === 1) return list;\n                    list.map(_ => {\n                        _ = _.baseInfo || _;\n                        if (isB) {\n                            _.id += \"#djradio\";\n                        }\n                        Extra({\n                            name: _.name,\n                            picUrl: _.coverImgUrl || _.picUrl,\n                            content: isU.c,\n                            sourceListId: _.id\n                        }, 1);\n                    });\n                    break;\n            }\n            return _.songCount || _.playlistCount || _.albumCount || _.totalCount || ((MY_PAGE - 1) * 30 + list.length);\n        } else { // 搜索 分享链接\n            switch (String(platform)) {\n                case '0': // 搜索单曲\n                    let a;\n                    if (run == 4) { // 是 播客 链接\n                        _ = ajax2(\"/api/dj/program/detail/static/get\", {\n                            id: keyword\n                        }).data;\n                        a = getr(_);\n                    } else {\n                        _ = ajax2(\"/api/v3/song/detail\", {\n                            c: `[{\"id\":\"${keyword}\"}]`\n                        });\n                        a = _.songs[0] || _.privileges[0];\n                        a.privilege = _.privileges[0];\n                    }\n                    if (run == 'mv') return a;\n                    _formatting(a, 1);\n                    break;\n                case '1': // 搜索歌单\n                    if (run == 4) // 是 播客 链接\n                        _ = ajax3(\"/api/djradio/v3/get\", {\n                            id: keyword\n                        }).data, _.id += \"#djradio\";\n                    else\n                        _ = ajax3(\"/api/v6/playlist/detail\", {\n                            n: 0,\n                            id: keyword\n                        }).playlist;;\n                    Extra({\n                        name: _.name,\n                        picUrl: _.coverImgUrl || _.picUrl,\n                        content: 2,\n                        sourceListId: _.id\n                    }, 1);\n                    /* MyFreeMP3 歌单解析崩了，不显示\n                                        Extra({\n                                            name: _.name,\n                                            picUrl: _.coverImgUrl,\n                                            content: 2,\n                                            sourceListId: \"d\" + _.id,\n                                            source: 'my'\n                                        }, 1);\n                    */\n                    break;\n            }\n            return 0;\n        }\n    },\n    ajax: function(path) {\n        if (!path.match(/^https?:\\/\\//)) { // 代理接口\n            if (path == \"personalized?\") path += \"limit=12\";\n            else if (path.match(/\\?/)) path += \"limit=30&offset=\" + ((MY_PAGE - 1) * 30);\n            path = \"https://pl-fe.cn/cloud-music-api/\" + path;\n        }\n        return JSON.parse(fetch(path, {\n            headers\n        }));\n    },\n    ajax2,\n    ajax3\n}"},{"col_type":"movie_3","name":"❸kg","path":"kg","rule":"eval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配')).rule);\nconst this_platform = \"kg\";\n\nfunction getParams(params, signkey, body, noSign) {\n    if (noSign) return params.sort().join(\"&\");\n    body = body || \"\";\n    params = params.sort();\n    return params.join(\"&\") + \"&signature=\" + md5(signkey + params.join(\"\") + body + signkey);\n}\n\nfunction webSign(url, params, path) {\n    let mid = new Date().getTime() + \"\";\n    params = [\n        \"dfid=-\",\n        \"mid=\" + mid,\n        \"uuid=\" + mid,\n        \"appid=1058\",\n        \"srcappid=2919\",\n        \"clientver=1000\",\n        \"clienttime=\" + mid,\n        \"pagesize=30\",\n        \"page=\" + MY_PAGE,\n        \"userid=440908392\",\n        \"token=f7524337c1ae877929a1497cf3d5d37e5c4cb8073fc298e492a67babc376a9d4\",\n        // \"callback=callback123\",\n        // \"bitrate=0\",\n        // \"isfuzzy=0\",\n        // \"inputtype=0\",\n        // \"iscorrection=1\",\n        // \"privilege_filter=0\",\n        // \"platid=4\",\n        // \"plat=0\",\n        // \"filter=10\",\n        // \"format=jsonp\",\n        // \"version=8000\",\n    ].concat(params);\n    return JSON.parse(fetch(url + \"?\" + getParams(params, \"NVPh5oo715z5DIWAeQlhMDsWXXQV4hwt\"), {\n        'headers': {\n            'dfid': '-',\n            'mid': mid,\n            'clienttime': mid,\n            \"User-Agent\": \"Android712-AndroidPhone-10518-18-0-NetMusic-wifi\",\n            \"KG-FAKE\": \"440908392\", // userid\n            \"KG-THash\": \"3e5ec6b\",\n            \"KG-Tid\": \"1\",\n            \"KG-Rec\": \"1\",\n            \"KG-RC\": \"1\",\n            \"KG-RF\": \"00869891\"\n        }\n    }))[path || \"data\"] || {};\n}\n\n\nfunction _formatting(_, r2) {\n    let name, singer;\n    let interval = Hms((_.info && _.info.duration) || (_.duration * 1000));\n    let songId = _.audio_id || _.id;\n    let albumName = _.albumname || _.remark || \"\";\n    let albumId = _.album_id || \"\";\n    let picUrl = _.album_sizable_cover || (_.info && _.info.image) || \"\";\n    let hash = _.hash.toUpperCase();\n    let album_audio_id = _.album_audio_id;\n    let content = (_.privilege == 0 || _.privilege == 8) ? 0 : 1;\n\n    let qualitys = _.relate_goods || [];\n    if (qualitys.length == 0) {\n        for (let k of ['', '320', 'sq', 'hign']) {\n            if (_[k + 'filesize']) {\n                qualitys.push({\n                    type: {\n                        '': \"128k\",\n                        '320': \"320k\",\n                        'sq': \"flac\",\n                        'high': \"flac24bit\"\n                    }[k],\n                    size: Size(_[k + 'filesize']),\n                    hash: _[k + 'hash'].toUpperCase()\n                });\n            }\n        }\n        if (qualitys.length == 0) {\n            qualitys.push({\n                type: \"128k\",\n                size: Size(),\n                hash: _.hash.toUpperCase()\n            });\n        }\n    } else {\n        _ = qualitys[0];\n        qualitys = qualitys.slice(0, 4).filter(_ => /^(128|320|flac|high)$/i.test(_.quality))\n            .map(_ => {\n                return {\n                    type: {\n                        '128': '128k',\n                        '320': '320k',\n                        'flac': 'flac',\n                        'high': 'flac24bit'\n                    }[_.quality],\n                    size: Size(_.info.filesize),\n                    hash: _.hash.toUpperCase()\n                }\n            });\n    }\n    [singer, name] = String(_.filename || _.name).split(' - ');\n\n    Extra({\n        name,\n        singer,\n        interval,\n        songId,\n        albumName,\n        albumId,\n        picUrl,\n        qualitys,\n        hash,\n        album_audio_id,\n        content,\n    }, ((typeof r2 === 'object') ? Object.assign(r2, {\n        songName: name,\n        userName: singer,\n        songTime: interval,\n        albumName: albumName || name\n    }) : r2));\n}\n$.exports = {\n    webSign,\n    getParams,\n    _formatting,\n    iTag: function() {\n        let _ = JSON.parse(fetch(\"http://www2.kugou.kugou.com/yueku/v9/special/getSpecial?is_smarty=1\")).data;\n        iTag[\"推荐\"] = {\n            随机: \"recommend\",\n            最新: \"\"\n        };\n        let its = _.hotTag.data;\n        for (let i in its) {\n            let it = its[i];\n            iTag[\"推荐\"][it.special_name] = it.special_id;\n        }\n        _ = _.tagids;\n        for (let name in _) {\n            iTag[name] = {};\n            _[name].data.map(\n                _ => iTag[name][_.name] = _.id\n            );\n        }\n        iTag[\"排行\"] = {};\n        JSON.parse(fetch('http://mobilecdnbj.kugou.com/api/v3/rank/list')).data.info.map(_ => {\n            name = [null, \"推荐\", \"新歌\", \"特色\", \"全球\", \"曲风\"][_.classify];\n            if (!iTag[\"排行\"][name]) iTag[\"排行\"][name] = [];\n            iTag[\"排行\"][name].push(Extra({\n                name: _.rankname,\n                picUrl: _.imgurl,\n                content: 3,\n                sourceListId: _.rankid,\n            }, 1, 1));\n        });\n        storage0.putMyVar(\"kg_iTag\", iTag);\n    },\n    mv: function(_, t1) {\n        MY_PAGE = 1;\n        let mvhash = webSign(\"http://mobilecdnbj.kugou.com/api/v3/song/info\", [\n            \"hash=\" + t1\n        ]).mvhash;\n        let names = [];\n        let urls = [];\n        if (mvhash) {\n            // http://mobilecdnbj.kugou.com/api/v3/mv/detail?mvhash=\n            let mvinfo = webSign([\n                \"http://trackermv.kugou.com/interface/index\",\n                \"https://m.kugou.com/app/i/mv.php\",\n            ][0], [\n                \"cmd=100\",\n                \"hash=\" + mvhash,\n                \"key=\" + md5(mvhash + \"kugoumvcloud\"),\n                \"ismp3=1\",\n                \"ext=mp4\"\n            ], \"mvdata\");\n            [\n                ['rq', '【蓝光】 1080P'],\n                ['sq', '【超清】 720P'],\n                ['hd', '【高清】 480P'],\n                ['sd', '【标清】 240P'],\n                ['le', '【标清】 240P'],\n            ].map([path, name] => {\n                let __ = mvinfo[path];\n                if (__ && __.downurl) {\n                    names.push(name);\n                    urls.push(__.downurl);\n                }\n            });\n        }\n        return [names, urls];\n    },\n    getLyric: function(_, t1) {\n        let lrc;\n        try {\n            lrc = fetch(\"http://m.kugou.com/app/i/krc.php?cmd=100&timelength=999999&hash=\" + t1);\n            if (!lrc) {\n                throw new Error('no get lrc_1');\n            }\n        } catch (getlrc_err_1) {\n            try {\n                let u = \"http://krcs.kugou.com/search?ver=1&man=yes&client=mobi&keyword=&duration=&hash=\" + t1 + \"&album_audio_id=\";\n                let __ = JSON.parse(fetch(u)).candidates[0];\n                if (__ && __.id && __.accesskey) {\n                    u = \"http://lyrics.kugou.com/download?ver=1&client=pc&id=\" + __.id + \"&accesskey=\" + __.accesskey + \"&fmt=lrc&charset=utf8\";\n                    lrc = base64Decode(JSON.parse(fetch(u)).content);\n                } else {\n                    throw new Error('no get lrc_2');\n                }\n            } catch (getlrc_err_2) {\n                try {\n                    MY_PAGE = 1;\n                    /*  20240225  这个接口不能用了\n                               lrc = webSign(\"https://wwwapi.kugou.com/yy/index.php\", [\n                                    \"r=play/getdata\",\n                                    \"hash=\" + _.hash,\n                                    \"album_id=\" + _.album_audio_id,\n                                    \"platid=4\"\n                                ]).lyrics;\n                    */\n                    _ = webSign(\"https://m.kugou.com/api/v1/song/get_song_info_v2\", [\n                        \"cmd=playInfo\",\n                        \"hash=\" + t1,\n                        \"album_id=\",\n                        \"album_audio_id=\",\n                        // \"appid=3358\",\n                        // \"source_id=\",\n                        // \"from=\"\n                    ]);\n                    lrc = webSign(\"https://m3ws.kugou.com/api/v1/krc/get_lyrics\", [\n                        \"keyword=\" + _.fileName,\n                        \"hash=\" + _.hash,\n                        \"timelength=\" + ((_.timeLength || _.duration) * 1000)\n                    ]).lrc;\n                } catch (getlrc_err_3) {}\n            }\n        }\n        return lrc || \"\";\n    },\n    lazy: function(platform, t1, t2, t3) {\n        let title, author, desc, img, time, tags, total, list;\n        let _ = t1;\n        t1 = _.hash || _.sourceListId;\n        switch (String(platform)) {\n            case '0': // 详情\n                if (t2) {\n                    return $.require(\"jiexi?rule=歌词适配\").GetMusicUrl(\"down\", \"kg\", t1, t3, _);\n                }\n                let f = _.qualitys;\n\n                // 链接\n                var url, ii, lrc;\n                switch (ii = t3) {\n                    case '3':\n                        if (ii == 3) {\n                            if (f[3] && f[3].type == 'flac24bit') {\n                                [url, lrc, ii] = $.require(\"jiexi?rule=歌词适配\").GetMusicUrl(\"open\", \"kg\", t1, 3, _, lrc, ii);\n                                if (url) break;\n                            } else ii = 2;\n                        }\n                    case '2':\n                        if (ii == 2) {\n                            if (f[2] && f[2].type == 'flac') {\n                                [url, lrc, ii] = $.require(\"jiexi?rule=歌词适配\").GetMusicUrl(\"open\", \"kg\", t1, 2, _, lrc, ii);\n                                if (url) break;\n                            } else ii = 1;\n                        }\n                    case '1':\n                        if (ii == 1) {\n                            if (f[1] && f[1].type == '320k') {\n                                [url, lrc, ii] = $.require(\"jiexi?rule=歌词适配\").GetMusicUrl(\"open\", \"kg\", t1, 1, _, lrc, ii);\n                                if (url) break;\n                            } else ii = 0;\n                        }\n                    default:\n                        if (_.content === '0') {\n                            // url = JSON.parse(fetch(\"https://m.kugou.com/app/i/getSongInfo.php?cmd=playInfo&hash=\" + t1)).url;\n                            url = $.require(\"kg?rule=歌词适配\").GetMusicUrl(t1, '128', _.album_id, _.album_audio_id);\n                        } else {\n                            [url, lrc, ii] = $.require(\"jiexi?rule=歌词适配\").GetMusicUrl(\"open\", \"kg\", t1, 0, _, lrc, ii);\n                        }\n                        break;\n                }\n                return [url, lrc, ii];\n                break;\n            case '1': // 首页\n                if (t1 == \"recommend\")\n                    list = JSON.parse(fetch(\"http://everydayrec.service.kugou.com/guess_special_recommend\", {\n                        method: 'post',\n                        headers: {\n                            'User-Agent': 'KuGou2012-8275-web_browser_event_handler'\n                        },\n                        body: {\n                            appid: 1001,\n                            clienttime: 1566798337219,\n                            clientver: 8275,\n                            key: 'f1f93580115bb106680d2375f8032d96',\n                            mid: '21511157a05844bd085308bc76ef3343',\n                            platform: 'pc',\n                            userid: '262643156',\n                            return_min: 6,\n                            return_max: 15,\n                        }\n                    })).data.special_list;\n                else\n                    list = JSON.parse(fetch(\"http://www2.kugou.kugou.com/yueku/v9/special/getSpecial?is_ajax=1&cdn=cdn&t=5&pagesize=30&c=\" + t1 + \"&p=\" + MY_PAGE)).special_db;\n                list.map(_ => Extra({\n                    name: _.specialname,\n                    picUrl: _.img || _.flexible_cover,\n                    content: 2,\n                    sourceListId: _.specialid,\n                    col_type: t2\n                }, 1));\n                return (MY_PAGE - 1) * 30 + list.length;\n                break;\n            case '2': // 发现\n                /*\n                if (MY_PAGE == 1 && !t1.match(/_/)) {\n                    _ = executeWebRule(`http://www2.kugou.kugou.com/yueku/v9/special/single/${t1}-5-99999.html?json=true`, $.toString(() => {\n                        return JSON.stringify(global.data, 0, 2);\n                    }), {\n                        blockRules: ['.js', '.css', '.jpg', '.png', '.gif', '.svg', '.ico']\n                    });\n                    list = JSON.parse(_);\n                } else list = [];\n                \n                webSign(\"https://pubsongscdn.kugou.com/v2/get_other_list_file\", [\n                    \"module=playlist\", // CloudMusic\n                    \"need_sort=1\",\n                    \"area_code=1\",\n                    \"type=0\",\n                    'global_specialid=' + t1,\n                    'specialid=' + t1\n                ]);\n                */\n                u = \"https://mobiles.kugou.com/api/v5/special/\";\n\n                title = getPageTitle();\n                author = \"酷狗音乐\";\n                desc = \"\";\n                img = \"\";\n                time = \"\";\n                tags = \"\";\n                if (MY_PAGE == 1) { // 只在第一页获取信息\n                    let e = webSign(u + \"info_v2\", ['global_specialid=' + t1, 'specialid=' + t1]);\n                    title = e.specialname;\n                    author = e.nickname;\n                    desc = e.intro;\n                    img = e.imgurl.replace(\"{size}\", \"480\");\n                    time = e.publishtime.split(\" \")[0];\n                    tags = (e.tags || []).map(_ => _.tagname).join(\"、\");\n                }\n                _ = webSign(u + \"song_v2\", ['global_specialid=' + t1, 'specialid=' + t1]);\n                total = _.total;\n                list = _.info;\n                break;\n            case '3': // 排行\n                _ = JSON.parse(fetch(`http://mobilecdnbj.kugou.com/api/v3/rank/song?pagesize=30&page=${MY_PAGE}&rankid=${t1}`)).data;\n                total = _.total;\n                list = _.info;\n                break;\n            case '4': // 专辑\n                _ = webSign(\"https://m3ws.kugou.com/api/v1/album/info\", [\"albumid=\" + t1, \"version=1000\", \"plat=5\"]);\n\n                title = _.albumname;\n                author = _.singer;\n                desc = _.intro;\n                img = _.img400 || _.img;\n                time = _.publish_date;\n                tags = \"\";\n\n                total = _.songcount;\n                list = _.list;\n                if (total == list.length) total = 1;\n                break;\n            case '5': // 歌手\n                title = getPageTitle();\n                author = \"酷狗音乐\";\n                desc = \"\";\n                img = \"\";\n                time = \"\";\n                tags = \"\";\n                if (MY_PAGE == 1) { // 只在第一页获取信息\n                    let e2 = webSign(\"https://gateway.kugou.com/mobilecdn/api/v3/singer/info\", [\"singerid=\" + t1, \"with_listener_index=1\"]);\n                    title = e2.singername;\n                    author = e2.singername;\n                    desc = e2.intro;\n                    img = e2.imgurl.replace(\"{size}\", \"480\");\n                }\n                _ = webSign('https://gateway.kugou.com/openapi/kmr/v1/author/audios', [\"author_id=\" + t1]);\n\n                total = _.total;\n                list = (_.songs || []).map(_ => _.audio_info);\n                break;\n        }\n\n        // 接口没办法获取hires属性，再获取一次list2\n        let list2 = $.require(\"kg?rule=歌词适配\").ajax(list);\n        list = list.map((_, i) => Object.assign(list2[i], _));\n\n        if (t2) return list;\n        list.map(_ => _formatting(_, t3 || {}));\n        return {\n            title,\n            author,\n            desc,\n            img,\n            time,\n            tags,\n            total: total || ((MY_PAGE - 1) * 30 + list.length)\n        }\n    },\n\n\n\n    search: function(platform, keyword, isU, run) {\n        let _;\n        if (platform == \"2\") {\n            /*\n                        _ = JSON.parse(fetch(\"http://www2.kugou.kugou.com/apps/kucodeAndShare/app/\", {\n                            method: 'POST',\n                            headers: {\n                                'KG-RC': '1',\n                                'KG-THash': 'network_super_call.cpp:3676261689:379',\n                                'User-Agent': '',\n                            },\n                            body: {\n                                appid: 1001,\n                                clientver: 10112, // 9020\n                                mid: \"70a02aad1ce4648e7dca77f2afa7b182\", // 21511157a05844bd085308bc76ef3343\n                                clienttime: 722219501, // 640612895\n                                key: \"381d7062030e8a5a94cfbe50bfe65433\", // 36164c4015e704673c588ee202b9ecb8\n                                data: JSON.parse(keyword)\n                            }\n                        }));\n            */\n            d.push({\n                title: \"酷狗码格式未收录\",\n                url: \"hiker://empty\",\n                col_type: \"text_center_1\",\n            });\n            return 0;\n        } else if (isU != \"url\") {\n            let list, __ = {\n                lib: (_) => true,\n                paid: (_) => (_.privilege != 0 && _.privilege != 8),\n                free: (_) => (_.privilege == 0 || _.privilege == 8),\n                lyric: (_) => true,\n                mv: (_) => true\n            };\n            // surl = (stype) => JSON.parse(fetch(`http://mobilecdn.kugou.com/api/v3/search/${stype}?format=json&keyword=${keyword}&page=${MY_PAGE}&pagesize=30`)).data.info;\n            let surl2 = (v, s, p) => {\n                let url = \"https://gateway.kugou.com/complexsearch/\" + v + \"/search/\" + s;\n                return webSign(url, [\"keyword=\" + keyword, p]);\n            }\n            switch (String(platform)) {\n                case '0': // 搜索单曲 #platform=AndroidFilter\n                    if (isU == 'free') {\n                        _ = surl2(\"v3\", \"song\", \"\");\n                        if (run == 'run') return _.lists[0];\n                    } else if (isU == 'mv' || isU == 'lyric') {\n                        _ = surl2(\"v1\", isU, \"platform=WebFilter\");\n                        if (run == 'run') return _.lists[0];\n                    } else {\n                        // list = surl('song');\n                        _ = surl2(\"v3\", \"song\", \"platform=WebFilter\");\n                        if (run == 'srec') return _.lists;\n                    }\n                    list = $.require(\"kg?rule=歌词适配\").ajax(_.lists, isU == 'mv') || [];\n                    let r1 = getMyVar('search_down', '0') == '1' ? 2 : 1;\n                    list.map(_ => {\n                        if (__[isU](_)) _formatting(_, r1);\n                    });\n                    break;\n                case '1': // 搜索歌单\n                    // list = surl('special');\n                    // searchsong=1 #搜索包含这首歌的歌单\n                    isU = {\n                        songs: { // 歌单\n                            u: \"special\",\n                            c: \"2\"\n                        },\n                        album: { // 专辑\n                            u: \"album\",\n                            c: \"4\"\n                        },\n                        artist: { // 歌手\n                            u: \"author\",\n                            c: \"5\"\n                        },\n                        伴奏: \"accsong\", // v4\n                        小说: \"novel\", // v1\n                    }[isU];\n                    _ = surl2(\"v1\", isU.u, \"searchsong=1\");\n                    list = _.lists;\n                    list.map(_ => Extra({\n                        name: _.specialname || _.albumname || _.title || _.AuthorName,\n                        picUrl: _.imgurl || _.img || _.Avatar,\n                        content: isU.c,\n                        sourceListId: _.specialid || _.albumid || _.AuthorId\n                    }, 1));\n                    break;\n            }\n            return _.total || ((MY_PAGE - 1) * 30 + list.length);\n        } else { // 搜索 分享链接\n            switch (String(platform)) {\n                case '0': // 搜索单曲\n                    _ = $.require(\"kg?rule=歌词适配\").ajax([{\n                        hash: keyword\n                    }])[0];\n                    if (run == 'mv') return _;\n                    _formatting(_, 1);\n                    break;\n                case '1': // 搜索歌单\n                    _ = webSign(\"https://mobiles.kugou.com/api/v5/special/info_v2\", [\"specialid=\" + keyword, \"global_specialid=\" + keyword]);\n                    if (_ === null && Number(keyword)) {\n                        _ = executeWebRule(`http://www2.kugou.kugou.com/yueku/v9/special/single/${keyword}-5-99999.html?json=true`, $.toString(() => {\n                            return JSON.stringify(global);\n                        }), {\n                            blockRules: ['.js', '.css', '.jpg', '.png', '.gif', '.svg', '.ico']\n                        });\n                        _ = JSON.parse(_);\n                    }\n                    Extra({\n                        name: _.specialname || _.name,\n                        picUrl: _.imgurl || _.pic,\n                        content: 2,\n                        sourceListId: (_.specialid || _.global_specialid || _.id) + \"\"\n                    }, 1);\n                    break;\n            }\n            return 0;\n        }\n    },\n\n\n\n    ajax: function ajax(resource, isFilter) {\n        let list, headers = {\n            'KG-THash': '13a3164',\n            'KG-RC': '1',\n            'KG-Fake': '0',\n            'KG-RF': '00869891',\n            'User-Agent': 'Android712-AndroidPhone-11451-376-0-FeeCacheUpdate-wifi'\n        };\n        let _get = hash => ({\n            \"id\": 0,\n            \"type\": \"audio\",\n            \"hash\": hash,\n            // album_audio_id: 0,\n            // album_id: \"0\",\n            // name: _.filename.replace(\".mp3\", \"\"),\n            // page_id: 0,\n        });\n        if (isFilter) {\n            list = new Map();\n            resource.forEach(obj => {\n                let key = obj.hash || obj.FileHash;\n                if (!list.has(key)) {\n                    list.set(key, _get(key));\n                }\n            });\n            list = Array.from(list.values());\n        } else {\n            list = resource.map(_ => _get(_.hash || _.FileHash));\n        }\n        if (true) {\n            headers[\"x-router\"] = \"media.store.kugou.com\";\n            let body = JSON.stringify({\n                \"relate\": 1,\n                \"userid\": \"2626431536\",\n                \"vip\": 1, // 0\n                \"token\": \"\",\n                // \"userid\": \"0\",\n                \"appid\": 1001,\n                \"behavior\": \"play\",\n                \"area_code\": \"1\",\n                \"clientver\": \"8990\", // 10112\n                \"need_hash_offset\": 1,\n                \"resource\": list,\n                // \"dfid\": \"-\",\n                // \"mid\": R(32),\n            });\n            return JSON.parse(post([\n                \"http://media.store.kugou.com/v1/get_res_privilege\",\n                \"https://gateway.kugou.com/v2/get_res_privilege/lite\"\n            ][1], {\n                body,\n                headers\n            })).data;\n        } else {\n            headers['x-router'] = 'kmr.service.kugou.com';\n            let data = {\n                area_code: '1',\n                show_privilege: 1,\n                show_album_info: '1',\n                is_publish: '',\n                appid: 1005,\n                clientver: 11451,\n                mid: '1',\n                dfid: '-',\n                clienttime: Date.now(),\n                key: 'OIlwieks28dk2k092lksi2UIkp',\n                fields: 'album_info,author_name,audio_info,ori_audio_name,base,songname',\n            }\n            let tasks = []\n            while (list.length) {\n                tasks.push(Object.assign({\n                    data: list.slice(0, 100)\n                }, data))\n                if (list.length < 100) break\n                list = list.slice(100)\n            }\n            list = [];\n            tasks.map(body => {\n                let t = JSON.parse(post('http://gateway.kugou.com/v2/album_audio/audio', {\n                    body,\n                    headers\n                })).data.map(t => t[0]);\n                list = list.concat(t);\n            });\n            return list;\n        }\n    },\n\n\n\n    GetMusicUrl: function(hash, quality, album_id, album_audio_id, userid, token, appid, signkey) {\n        var mid  = R(32);\n        var date = new Date().getTime();\n        var hash = String(hash).toLowerCase();\n        var quality = quality || \"128\";\n        var album_id = album_id || \"\";\n        var album_audio_id = album_audio_id || \"\";\n        var userid = userid || \"440908392\";\n        var token = token || \"f7524337c1ae877929a1497cf3d5d37e5c4cb8073fc298e492a67babc376a9d4\";\n        var appid = appid || \"1005\";\n        var signkey = signkey || \"OIlwieks28dk2k092lksi2UIkp\";\n        var params = [\n            'quality=' + quality,\n            'hash=' + hash,\n            'mid=' + mid,\n            'appid=' + appid,\n            'userid=' + userid,\n            'key=' + md5(hash + \"57ae12eb6890223e355ccfcb74edf70d\" + appid + mid + userid),\n            'album_id=' + album_id,\n            'album_audio_id=' + album_audio_id,\n            'clienttime=' + Math.floor(date / 1000),\n            'open_time=' + $.dateFormat(date, 'yyyyMMdd'),\n            'token=' + token,\n            'area_code=1',\n            'module=',\n            'ssa_flag=is_fromtrack',\n            'clientver=12029', //10518\n            'vipType=6',\n            'ptype=0',\n            'auth=',\n            'mtype=0',\n            'behavior=play',\n            'pid=2',\n            'dfid=-',\n            'pidversion=3001',\n            'secret=' + R(32),\n            // 'behavior=play',\n            // 'version=9209',\n            // 'cmd=26',\n        ];\n        // body_ = \"http://trackercdngz.kugou.com/i/v2/?\" + params.join(\"&\");\n        var body_ = JSON.parse(fetch(\"https://gateway.kugou.com/v5/url?\" + getParams(params, signkey), {\n            \"headers\": {\n                \"User-Agent\": \"Android800-AndroidPhone-12029-56-0-starlive-ctnet(13)\",\n                \"KG-THash\": \"595ff94\",\n                \"KG-FAKE\": userid,\n                \"KG-Rec\": \"1\",\n                \"KG-RC\": \"1\",\n                \"x-router\": \"tracker.kugou.com\"\n            }\n        }));\n        if (body_.status == 1)\n            return body_[\"url\"][0];\n        else if (body_.status == 2)\n            return \"toast://可能是登录过期了。\";\n        else\n            return \"toast://未知错误，无版权？\";\n    },\n\n\n\n    // https://github.com/lxmusics/lx-music-api-server-python/blob/main/modules/kg/lite_signin.py\n    Lite_Signin: function(userid, token, signkey, isjx) {\n        MY_PAGE = 1;\n        const {\n            getJxlist,\n            setJxlist\n        } = $.require('jiexi?rule=歌词适配');\n        let mixsongid = $.require(\"kg?rule=歌词适配\").search(\"0\", \"\", \"free\", \"run\")[\"MixSongID\"];\n        let body = JSON.stringify({\n            \"mixsongid\": Number(mixsongid)\n        });\n\n        let mid  = R(32, \"1234567890\");\n        let date = new Date().getTime();\n        let params = [\n            'userid=' + userid,\n            'token=' + token,\n            'clienttime=' + Math.floor(date / 1000),\n            'appid=3116',\n            'clientver=10518',\n            'mid=' + mid,\n            'uuid=' + R(32),\n            'dfid=-'\n        ];\n        let jxlist, req = JSON.parse(post(\"https://gateway.kugou.com/v2/report/listen_song?\" + getParams(params, signkey, body), {\n            body,\n            headers: {\n                \"User-Agent\": \"Android712-AndroidPhone-10518-18-0-NetMusic-wifi\",\n                \"KG-THash\": \"5ad0291\",\n                \"KG-Rec\": \"1\",\n                \"KG-RC\": \"1\",\n                \"x-router\": \"youth.kugou.com\"\n            }\n        }));\n        let mapJx = (T) => {\n            if (isjx) {\n                jxlist = getJxlist('kg').map(_ => {\n                    if (md5(_.title + _.url) == \"c877ae72b97bc26720ad8b1a39362d47\") {\n                        _.time = date;\n                        _.signin = 0;\n                    }\n                    return _\n                });\n                setJxlist('kg', jxlist);\n                refreshPage();\n            }\n            return \"toast://\" + T;\n        }\n        if (req.status == 1) {\n            return mapJx(\"签到成功\");\n        } else if (req.error_code == 130012) { // 签到过了？\n            return mapJx(\"签到失败：今天已经签到过了？\");\n        } else if (req.error_code == 51002) { // 登录掉了？\n            return mapJx(\"签到失败：token失效了，请重新配置\");\n        } else {\n            return \"toast://签到失败：\" + req.error_msg;\n        }\n    },\n\n\n\n    // Get_Kg_New_Token\n    refresh_token: function(userid, token, appid, signkey) {\n        var appid = appid || \"1005\";\n        var signkey = signkey || \"OIlwieks28dk2k092lksi2UIkp\";\n        [aes_key, aes_iv] = {\n            \"1005\": [\"90b8382a1bb4ccdcf063102053fd75b8\", \"f063102053fd75b8\"],\n            \"3116\": [\"c24f74ca2820225badc01946dba4fdf7\", \"adc01946dba4fdf7\"],\n        }[appid];\n        let CryptoUtil = $.require(\"hiker://assets/crypto-java.js\");\n        let clienttime_ms = new Date().getTime() + \"\";\n        let clienttime = Math.floor(clienttime_ms / 1e3);\n        let p3 = CryptoUtil.AES.encrypt(\n            JSON.stringify({\n                clienttime,\n                token\n            }),\n            CryptoUtil.Data.parseUTF8(aes_key),\n            ({\n                iv: CryptoUtil.Data.parseUTF8(aes_iv),\n                mode: \"AES/CBC/PKCS7Padding\"\n            })\n        ).toHex();\n\n        // dfid, dev, plat, gitversion\n        let body = JSON.stringify({\n            p3,\n            clienttime_ms,\n            t1: \"0\",\n            t2: \"0\",\n            userid,\n        });\n\n        // uuid\n        let params = [\n            \"dfid=-\",\n            \"appid=\" + appid,\n            \"mid=\" + R(32, \"1234567890\"),\n            \"clientver=10597\",\n            \"clienttime=\" + clienttime,\n        ];\n        let _body = JSON.parse(post(\"http://login.user.kugou.com/v4/login_by_token/?\" + getParams(params, signkey, body), {\n            body,\n            headers: {\n                \"User-Agent\": \"Android800-1070-10597-46-0-LOGIN-wifi\",\n                \"KG-THash\": \"5ad0291\",\n                \"KG-Rec\": \"1\",\n                \"KG-RC\": \"1\"\n            }\n        }));\n        try {\n            return _body.data.token;\n        } catch (e) {\n            return _body.error_code;\n        }\n    }\n}"},{"col_type":"movie_3","name":"❹kw","path":"kw","rule":"eval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配')).rule);\nconst this_platform = \"kw\";\nconst pcapi = \"https://www.kuwo.cn/api/www/\";\nconst peapi = \"https://m.kuwo.cn/newh5app/api/mobile/\";\n\nfunction ajax(url) {\n    let putTime = new Date().getTime();\n    if (Number(getMyVar('kw_PutTime', '0')) < putTime) {\n        let e, t, Cookie = String(JSON.parse(fetchPC('https://www.kuwo.cn/favicon.ico?v=1', {\n            withHeaders: true,\n            onlyHeaders: true\n        })).headers['set-cookie'] || \"Hm_Iuvt_cdb524f42f0ce19b169b8072123a4727=2bm5QbPQKPZSRHyFN4pbZnGcNJ4J2DZJ\").split(';')[0];\n        [e, t] = Cookie.split('=');\n        Cookie += \"; BAIDU_RANDOM=\" + t;\n\n\n        // Cookie = \"BAIDU_RANDOM=***\";\n        let Token = function(T) { // PE\n            let C = $.require('hiker://assets/crypto-java.js');\n            T = C.Digest.digest(C.Data.parseUTF8(T), 'SHA-1');\n            return md5(T).toUpperCase();\n        }(t);\n\n\n        // Cookie = \"Hm_Iuvt_***=***\";\n        let Secret = function(e, t) { // PC\n            let n = e.split('').map(c => c.charCodeAt(0)).join('');\n            let r = Math.floor(n.length / 5),\n                o = parseInt(n.charAt(r) + n.charAt(2 * r) + n.charAt(3 * r) + n.charAt(4 * r) + n.charAt(5 * r)),\n                l = Math.ceil(e.length / 2),\n                c = Math.pow(2, 31) - 1;\n            let d = Math.round(1e9 * Math.random()) % 1e8;\n            n += d.toString();\n            while (n.length > 10) {\n                n = (parseInt(n.substring(0, 10)) + parseInt(n.substring(10))).toString();\n            }\n            n = (o * n + l) % c;\n            let f = '';\n            for (let i = 0; i < t.length; i++) {\n                let h = t.charCodeAt(i) ^ Math.floor(n / c * 255);\n                f += ('00' + h.toString(16)).slice(-2);\n                n = (o * n + l) % c;\n            }\n            d = '00000000' + d.toString(16);\n            return f + d.slice(-8);\n        }(e, unescape(t));\n\n\n        // 保存变量 5分钟(可以一直保存\n        putMyVar('kw_Cookie', Cookie);\n        putMyVar('kw_Secret', Secret);\n        putMyVar('kw_Token', Token);\n        putMyVar('kw_PutTime', putTime + 3e5);\n    }\n    url += `httpsStatus=1&reqId=${R(\"randomUUID\")}&plat=web_www&from=`;\n    let getdata = (ajaxerr) => {\n        try {\n            return JSON.parse(fetch(url, {\n                headers: {\n                    'Referer': 'https://kuwo.cn/',\n                    'Cookie': getMyVar('kw_Cookie'),\n                    'Secret': getMyVar('kw_Secret'),\n                    'Token': getMyVar('kw_Token'),\n                }\n            })).data || {};\n        } catch (err) {\n            return ajaxerr < 2 ? getdata(ajaxerr + 1) : \"\";\n        }\n    }\n    return getdata(0);\n}\n\n\nfunction _formatting(_, r2) {\n    let Reg = (k, _) => reg = (_.N_MINFO || \"\").match(new RegExp('bitrate:' + k + ',format:[^,]+,size:([^;]+)'));\n    let name = _.songName || _.name || _.SONGNAME;\n    let singer = _.artist || _.ARTIST;\n    let interval = Hms((_.duration || _.DURATION) * 1000); //_.songTimeMinutes;\n    let songId = _.MUSICRID ? _.MUSICRID.split('_')[1].split('&')[0] : (_.rid || _.id);\n    let albumName = _.album || _.ALBUM;\n    let albumId = _.albumid || _.ALBUMID;\n    let qualitys = [];\n    for (let k of [128, 320, 2000, 4000]) {\n        if (Reg(k, _)) {\n            qualitys.push({\n                type: {\n                    128: \"128k\",\n                    320: \"320k\",\n                    2000: \"flac\",\n                    4000: \"flac24bit\"\n                }[k],\n                size: reg[1].replace(/\\s*mb/i, \" MB\")\n            });\n        }\n    }\n    let picUrl = _.pic || _.img || _.hts_MVPIC;\n    if (!picUrl) {\n        if (_.web_albumpic_short) {\n            picUrl = \"https://img2.kuwo.cn/star/albumcover/\" + _.web_albumpic_short.replace(/^120/, '500');\n        } else {\n            picUrl = fetch('http://artistpicserver.kuwo.cn/pic.web?type=rid_pic&pictype=url&size=500&rid=' + songId);\n        }\n        if (picUrl == \"NO_PIC\" && _.MVPIC) {\n            picUrl = \"https://img4.kuwo.cn/wmvpic/\" + _.MVPIC.replace(/^\\d+/, '500');\n        }\n        if (picUrl == \"NO_PIC\" && _.web_artistpic_short) {\n            picUrl = \"http://img1.kuwo.cn/star/starheads/\" + _.web_artistpic_short.replace(/^120/, '500');\n        }\n    }\n    let content = (_.isListenFee || _.tpay) == 1 ? 1 : 0;\n    Extra({\n        name,\n        singer,\n        interval,\n        songId,\n        albumName,\n        albumId,\n        picUrl,\n        qualitys,\n        content,\n    }, ((typeof r2 === 'object') ? Object.assign(r2, {\n        songName: name,\n        userName: singer,\n        songTime: interval,\n        albumName: albumName || name\n    }) : r2));\n}\n$.exports = {\n    ajax,\n    _formatting,\n    iTag: function() {\n        iTag[\"推荐\"] = {};\n        iTag[\"推荐\"][\"每日推荐\"] = \"rcm/index/playlist?id=rcm\";\n        iTag[\"推荐\"][\"最新精选\"] = \"classify/playlist/getRcmPlayList?order=new\";\n        iTag[\"推荐\"][\"热门精选\"] = \"classify/playlist/getRcmPlayList?order=hot\";\n        ajax(pcapi + \"playlist/getTagList?\").map(_ => {\n            if (_.data.length) {\n                _.name = _.name.replace('流派', '');\n                iTag[_.name] = {};\n                _.data.map(__ =>\n                    iTag[_.name][__.name] = \"classify/playlist/getTagPlayList?id=\" + __.id\n                );\n            }\n        });\n        iTag[\"排行\"] = {};\n        ajax(pcapi + \"bang/bang/bangMenu?\").map(_ => {\n            iTag[\"排行\"][_.name] = _.list.map(_ => Extra({\n                name: _.name,\n                picUrl: _.pic,\n                content: 3,\n                sourceListId: _.sourceid\n            }, 1, 1));\n        });\n        storage0.putMyVar(\"kw_iTag\", iTag);\n    },\n\n\n\n    mv: function(_, t1) {\n        let mvinfo = JSON.parse(fetch(\"http://datacenter.kuwo.cn/d.c?cmkey=plist_pl2012&ft=music&resenc=utf8&ids=\" + t1))[0] || {};\n        let mvhash = mvinfo.mvpayinfo && mvinfo.mvpayinfo.vid || mvinfo.mkvrid;\n        let names = [];\n        let urls = [];\n        if (mvhash) {\n            let _mvurl = \"http://anymatch.kuwo.cn/mobi.s?f=web&type=get_url_by_vid&vid=\" + mvhash + \"&quality=MP4\";\n            let _mvmat = (path) => mvinfo.formats.match('\\\\|MP4' + path);\n            [\n                ['BD', '【蓝光】 1080P'],\n                ['UL', '【超清】 720P'],\n                ['HV', '【高清】 480P'],\n                ['', '【标清】 360P'],\n                ['L', '【流畅】 240P'],\n            ].map([path, name] => {\n                if (_mvmat(path)) {\n                    let _mp4url = fetch(_mvurl + path).match(/url=(\\S+)/);\n                    if (_mp4url && _mp4url[1]) {\n                        urls.push(_mp4url[1].split(\"?\")[0]);\n                        names.push(name);\n                    }\n                }\n            });\n        }\n        return [names, urls];\n    },\n    getLyric: function(_, t1) {\n        let lrc;\n        try {\n            lrc = function(rid, isGetLyricx) {\n                const Buffer = {\n                    from: t => {\n                        let r = t.length;\n                        let e = new Uint8Array(r);\n                        for (let n = 0; n < r; n++)\n                            e[n] = t.charCodeAt(n);\n                        return e\n                    }\n                }\n                const bufkey = Buffer.from('yeelion');\n                const bufkeylen = bufkey.length;\n\n\n                function D_zip(b64Text) { // 解压\n                    let javaImport = new JavaImporter();\n                    javaImport.importPackage(\n                        Packages.java.lang,\n                        Packages.java.io,\n                        Packages.java.util,\n                        Packages.java.util.zip\n                    );\n                    with(javaImport) {\n                        let compressedData = Base64.getDecoder().decode(b64Text);\n                        let bais = new ByteArrayInputStream(compressedData);\n                        let baos = new ByteArrayOutputStream();\n                        let buffer = java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE, 1024);\n                        let iis = new InflaterInputStream(bais);\n                        let len;\n                        while ((len = iis.read(buffer)) != -1) {\n                            baos.write(buffer, 0, len);\n                        }\n                        iis.close();\n                        bais.close();\n                        baos.close();\n                        if (!isGetLyricx) {\n                            return baos.toByteArray();\n                        }\n                        let b64Text2 = String(baos.toByteArray(), \"UTF-8\");\n                        return Base64.getDecoder().decode(b64Text2);\n                    }\n                };\n\n\n                function T_xor(bArr) {\n                    bArr = Array.from(bArr);\n                    let len = bArr.length;\n                    let a = new Uint8Array(len);\n                    let i = 0;\n                    while (i < len) {\n                        let j = 0\n                        while (j < bufkeylen && i < len) {\n                            a[i] = bArr[i] ^ bufkey[j]\n                            i++\n                            j++\n                        }\n                    }\n                    return window0.btoa(String.fromCharCode.apply(null, a));\n                }\n\n\n                let params = \"user=12345,web,web,web&requester=localhost&req=1&rid=MUSIC_\" + rid;\n                if (isGetLyricx) params += \"&lrcx=1\";\n                params = T_xor(Buffer.from(params));\n\n\n                let stream = fetch(\"http://newlyric.kuwo.cn/newlyric.lrc?\" + params, {\n                    toHex: true\n                });\n                if (stream.slice(0, 20) !== \"74703d636f6e74656e74\") {\n                    return \"\";\n                }\n                let lrc, index = stream.indexOf('0d0a0d0a') + 8;\n                stream = D_zip(hexToBase64(stream.slice(index)));\n\n\n                if (isGetLyricx) { // Uint8Array没办法直接转成gbk编码，这里绕一下\n                    lrc = java.util.Base64.getDecoder().decode(T_xor(stream));\n                } else {\n                    lrc = stream;\n                }\n                return java.lang.String(lrc, \"gb18030\");\n            }(t1, true);\n        } catch (lrc_err1) {\n            try { // 备用\n                lrc = ajax([\n                    peapi + \"v1/music/info/\" + t1,\n                    \"http://m.kuwo.cn/newh5/singles/songinfoandlrc\",\n                    pcapi.replace(/(api\\/)/, 'open$1v1/') + \"lyric/getlyric\",\n                ][1] + \"?musicId=\" + t1 + \"&\") || {};\n                lrc = (lrc.lrclist || lrc.lrc || []).map(_ => {\n                    let s = ((_.time - 0) % 60).toFixed(3).padStart(6, '0');\n                    let m = ((_.time - s) / 60).toFixed(0).padStart(2, '0');\n                    return `[${m}:${s}]` + _.lineLyric\n                }).join('\\n');\n            } catch (lrc_err2) {}\n        }\n        return lrc || \"\";\n    },\n    lazy: function(platform, t1, t2, t3) {\n        let title, author, desc, img, time, tags, total, list;\n        let _ = t1;\n        t1 = _.songId || _.sourceListId;\n        switch (String(platform)) {\n            case '0': // 详情\n                if (t2) {\n                    return $.require(\"jiexi?rule=歌词适配\").GetMusicUrl(\"down\", \"kw\", t1, t3, _);\n                }\n                let f = _.qualitys;\n\n                // 链接\n                var url, ii, lrc;\n                switch (ii = t3) {\n                    case '3':\n                        if (ii == 3) {\n                            if (f[3] && f[3].type == 'flac24bit') {\n                                [url, lrc, ii] = $.require(\"jiexi?rule=歌词适配\").GetMusicUrl(\"open\", \"kw\", t1, 3, _, lrc, ii);\n                                if (url) break;\n                            } else ii = 2;\n                        }\n                    case '2':\n                        if (ii == 2) {\n                            if (f[2] && f[2].type == 'flac') {\n                                [url, lrc, ii] = $.require(\"jiexi?rule=歌词适配\").GetMusicUrl(\"open\", \"kw\", t1, 2, _, lrc, ii);\n                                if (url) break;\n                            } else ii = 1;\n                        }\n                    case '1':\n                        if (ii == 1) {\n                            if (f[1] && f[1].type == '320k') {\n                                [url, lrc, ii] = $.require(\"jiexi?rule=歌词适配\").GetMusicUrl(\"open\", \"kw\", t1, 1, _, lrc, ii);\n                                if (url) break;\n                            } else ii = 0;\n                        }\n                    default:\n                        try {\n                            if (_.content == \"1\") {\n                                throw new Error('is vip music');\n                            } // url = fetch(\"https://antiserver.kuwo.cn/anti.s?type=convert_url&format=mp3&rid=\" + t1);\n                            url = ajax([\n                                pcapi.replace(/(api\\/)/, '$1v1/') + \"music/playUrl\",\n                                peapi + \"v2/music/src/\" + t1,\n                            ][0] + \"?mid=\" + t1 + \"&type=music&\").url;\n                            if (!url) {\n                                throw new Error('no get music');\n                            }\n                        } catch (isVipMusic) {\n                            [url, lrc, ii] = $.require(\"jiexi?rule=歌词适配\").GetMusicUrl(\"open\", \"kw\", t1, 0, _, lrc, ii);\n                        }\n                        break;\n                }\n                return [url, lrc, ii];\n                break;\n            case '1': // 首页\n                _ = ajax(pcapi + t1 + \"&pn=\" + MY_PAGE + \"&rn=30&\");\n                list = _.data || _.list;\n                list.map(_ => Extra({\n                    name: _.name,\n                    picUrl: _.img,\n                    content: 2,\n                    sourceListId: _.id,\n                    col_type: t2\n                }, 1));\n                return _.total || ((MY_PAGE - 1) * 30 + list.length);\n                break;\n            case '2': // 发现\n                if (MY_PAGE == 1) { // 只在第一页获取信息\n                    let e = JSON.parse(fetch(\"http://nplserver.kuwo.cn/pl.svc?op=getlistinfo&pid=\" + t1 + \"&pn=0&rn=0&encode=utf8&keyset=pl2012&identity=kuwo&pcmp4=1&vipver=MUSIC_9.0.5.0_W1&newver=1&_=\"));\n                    desc = e.info;\n                    time = $.dateFormat(e.abstime * 1000, 'yyyy-MM-dd');\n                    tags = e.tag;\n                    img = e.pic;\n                }\n\n                // \"https://mobilist.kuwo.cn/list.s?type=songlist&id=\"+ t1+ \"&pn=0&rn=30\";\n                // \"https://kuwo.cn/newh5/playlist/playlistByPage?id=\"+ t1+ \"&pn=0&rn=30\";\n                // \"http://nplserver.kuwo.cn/pl.svc?op=getlistinfo&pid=\"+t1+\"&pn=0&rn=30\" + \"&encode=utf8&keyset=pl2012&identity=kuwo&pcmp4=1&vipver=MUSIC_9.0.5.0_W1&newver=1&_=\";\n                _ = ajax(pcapi + \"playlist/playListInfo?pid=\" + t1 + \"&pn=\" + MY_PAGE + \"&rn=30&\");\n                break;\n            case '3': // 排行\n                if (MY_PAGE == 1) { // 只在第一页获取信息\n                    let E = JSON.parse(fetch(\"http://kbangserver.kuwo.cn/ksong.s?from=pc&fmt=json&pn=0&rn=0&type=bang&data=content&id=\" + t1 + \"&show_copyright_off=0&pcmp4=1&isbang=1&_=\"));\n                    desc = E.info;\n                    time = E.pub;\n                    tags = E.term;\n                }\n\n                _ = ajax(pcapi + \"bang/bang/musicList?bangId=\" + t1 + \"&pn=\" + MY_PAGE + \"&rn=30&\");\n                break;\n            case '4': // 专辑\n                _ = ajax(pcapi + \"album/albumInfo?albumId=\" + t1 + \"&pn=\" + MY_PAGE + \"&rn=30&\");\n                break;\n            case '5': // 歌手\n                _ = ajax(pcapi + \"artist/artistMusic?artistid=\" + t1 + \"&pn=\" + MY_PAGE + \"&rn=30&\");\n                break;\n        }\n\n        title = _.name || _.title || _.album || getPageTitle();\n        author = _.userName || _.uname || _.artist || \"酷我音乐\";\n        desc = desc || _.info || _.albuminfo || \"\";\n        img = String(img || _.img500 || _.pic || MY_PARAMS.img).replace(\"_\\d+.jpg\", \"_700.jpg\");\n        time = time || _.pub || _.abstime || _.releaseDate || \"\";\n        tags = String(tags || _.tag || _.lang || \"\").replace(/\\s*[\\,，]\\s*/gi, \"、\");\n\n        list = Array.from(_.musicList || _.musiclist || _.list || []);\n        let ids = list.map(_ => _.id || _.rid).join(\",\");\n        let list2 = JSON.parse(fetch(\"http://musicpay.kuwo.cn/music.pay?op=query&action=play&ids=\" + ids)).songs;\n        if (t2) return list;\n        list.map((_, i) => {\n            _formatting(Object.assign(_, list2[i]), t3 || {});\n        });\n        return {\n            title,\n            author,\n            desc,\n            img,\n            time,\n            tags,\n            total: _.total || ((MY_PAGE - 1) * 30 + list.length)\n        }\n    },\n\n\n\n    search: function(platform, keyword, isU, run) {\n        let _;\n        if (isU != \"url\") {\n            let list, __ = {\n                lib: (_) => true,\n                paid: (_) => _.tpay == '1',\n                free: (_) => _.tpay == '0',\n                lyric: (_) => true,\n                mv: (_) => true\n            };\n            // surl = (stype) => ajax(pcapi + \"search/search\" + stype + \"BykeyWord?key=\" + keyword + \"&pn=\" + MY_PAGE + \"&rn=30&\").list;\n            let surl2 = (ft, noVipver) => {\n                let p = {\n                    // 必要参数\n                    rformat: \"json\", // 返回格式\n                    encoding: \"utf8\", // 编码方式\n                    ft: ft, // 搜索类型\n                    rn: 30, // 获取30个\n                    pn: MY_PAGE - 1, // 当前页数\n                    all: keyword, // 搜索的关键词\n                    vipver: \"MUSIC_8.0.3.0_BCS75\", // 此参数存在时会返回vip歌曲\n\n                    // 下面是非必要参数\n                    mobi: 1, // APP端？ #限制返回的参数大小\n                    newsearch: 1, // 新搜索数据？\n                    searchapi: 7, // api序号？\n                    issubtitle: 1, // 是否包含关键词？\n                    vermerge: 1, // 未知参数\n                    strategy: 2012,\n                    show_copyright_off: 1,\n                    correct: 1,\n                    cluster: 0,\n                    client: \"kt\",\n                    spPrivilege: 0,\n                    newver: 3\n                    // 还有一些其他参数\n                }\n                if (noVipver) {\n                    delete p.vipver;\n                }\n                if (ft == \"album\") {\n                    p.albumver = 1; // 获取专辑信息\n                } else if (ft == \"lyric\") {\n                    delete p.all;\n                    p.ft = \"music\";\n                    p.lrccontent = keyword;\n                }\n                return JSON.parse(fetch(buildUrl(\"http://search.kuwo.cn/r.s\", p)));\n            }\n            switch (String(platform)) {\n                case '0': // 搜索单曲\n                    // surl('Music').map();\n                    // _ = surl2(\"audio\", \"\");\n                    _ = surl2({\n                        lyric: \"lyric\",\n                        mv: \"video\"\n                    }[isU] || \"music\", isU == 'free');\n                    list = _.abslist || [];\n                    if (isU == 'mv') {\n                        list = function() {\n                            let ids = [];\n                            list.map(_ => {\n                                try {\n                                    let rids = _.MUSICRID.replace(\"MUSIC_\", \"\").split(\"&\");\n                                    rids.map(rid => {\n                                        if (ids.indexOf(rid) == -1) {\n                                            ids.push(rid);\n                                        }\n                                    });\n                                } catch (e) {};\n                            });\n                            return JSON.parse(fetch(\"http://datacenter.kuwo.cn/d.c?cmkey=plist_pl2012&ft=music&resenc=utf8&ids=\" + ids)) || [];\n                        }();\n                    }\n                    let r1 = getMyVar('search_down', '0') == '1' ? 2 : 1;\n                    for (let _ of list) {\n                        if (__[isU](_)) {\n                            if (run == 'run') {\n                                if (!_.SONGNAME.match('片段')) return _;\n                            } else {\n                                _formatting(_, r1);\n                            }\n                        }\n                    }\n                    break;\n                case '1': // 搜索歌单\n                    // surl('PlayList').map();\n                    isU = {\n                        songs: { // 歌单\n                            u: \"playlist\",\n                            c: \"2\"\n                        },\n                        album: { // 专辑\n                            u: \"album\",\n                            c: \"4\"\n                        },\n                        artist: { // 歌手\n                            u: \"artist\",\n                            c: \"5\"\n                        }\n                    }[isU];\n                    _ = surl2(isU.u, 0);\n                    list = _.abslist || _.albumlist || [];\n                    list.map(_ => Extra({\n                        name: _.name || _.ARTIST,\n                        picUrl: _.img || _.pic || _.hts_PICPATH.replace(\"240\", \"500\"),\n                        content: isU.c,\n                        sourceListId: _.playlistid || _.id || _.ARTISTID\n                    }, 1));\n                    break;\n            }\n            return _.TOTAL || ((MY_PAGE - 1) * 30 + list.length);\n        } else { // 搜索 分享链接\n            switch (String(platform)) {\n                case '0': // 搜索单曲\n                    _ = JSON.parse(fetch(\"http://datacenter.kuwo.cn/d.c?cmkey=plist_pl2012&ft=music&resenc=utf8&ids=\" + keyword))[0] || {};\n                    if (run == 'mv') return _;\n                    _formatting(_, 1);\n                    break;\n                case '1': // 搜索歌单\n                    // type=get_album_info #搜索专辑\n                    // \"http://mobilebasedata.kuwo.cn/basedata.s?type=get_songlist_info2&prod=&id=\"+keyword\n                    _ = ajax(pcapi + \"playlist/playListInfo?pid=\" + keyword + \"&pn=1&rn=1&\");\n                    Extra({\n                        name: _.name,\n                        picUrl: _.img,\n                        content: 2,\n                        sourceListId: _.id\n                    }, 1);\n                    break;\n            }\n            return 0;\n        }\n    },\n\n\n\n    des: function(t) {\n        return executeWebRule(\"\", $.toString((t) => {\n            const Buffer = {\n                from: t => {\n                    r = t.length;\n                    e = new Uint8Array(r);\n                    for (n = 0; n < r; n++)\n                        e[n] = t.charCodeAt(n);\n                    return e\n                }\n            }\n            range = t => Array.from(new Array(t).keys());\n            Long = t => {\n                const r = BigInt(t);\n                return {\n                    toString: () => r.toString(),\n                    isNegative: () => r < 0,\n                    not: () => Long(~r),\n                    low: Number(r),\n                    or: t => Long(r | BigInt(t)),\n                    xor: t => Long(r ^ BigInt(t)),\n                    and: t => Long(r & BigInt(t)),\n                    equals: t => r === BigInt(t),\n                    shiftLeft: t => Long(r << BigInt(t)),\n                    shiftRight: t => Long(r >> BigInt(t))\n                }\n            };\n            LongArray = t => t.map(t => Long(t));\n\n\n            arrayE = LongArray([\n                31, 0, 1, 2, 3, 4, -1, -1,\n                3, 4, 5, 6, 7, 8, -1, -1,\n                7, 8, 9, 10, 11, 12, -1, -1,\n                11, 12, 13, 14, 15, 16, -1, -1,\n                15, 16, 17, 18, 19, 20, -1, -1,\n                19, 20, 21, 22, 23, 24, -1, -1,\n                23, 24, 25, 26, 27, 28, -1, -1,\n                27, 28, 29, 30, 31, 30, -1, -1\n            ])\n            arrayIP = LongArray([\n                57, 49, 41, 33, 25, 17, 9, 1,\n                59, 51, 43, 35, 27, 19, 11, 3,\n                61, 53, 45, 37, 29, 21, 13, 5,\n                63, 55, 47, 39, 31, 23, 15, 7,\n                56, 48, 40, 32, 24, 16, 8, 0,\n                58, 50, 42, 34, 26, 18, 10, 2,\n                60, 52, 44, 36, 28, 20, 12, 4,\n                62, 54, 46, 38, 30, 22, 14, 6\n            ])\n            arrayIP_1 = LongArray([\n                39, 7, 47, 15, 55, 23, 63, 31,\n                38, 6, 46, 14, 54, 22, 62, 30,\n                37, 5, 45, 13, 53, 21, 61, 29,\n                36, 4, 44, 12, 52, 20, 60, 28,\n                35, 3, 43, 11, 51, 19, 59, 27,\n                34, 2, 42, 10, 50, 18, 58, 26,\n                33, 1, 41, 9, 49, 17, 57, 25,\n                32, 0, 40, 8, 48, 16, 56, 24\n            ])\n            arrayLs = [\n                1, 1, 2, 2, 2, 2, 2, 2,\n                1, 2, 2, 2, 2, 2, 2, 1\n            ]\n            arrayLsMask = LongArray([0, 1048577, 3145731])\n            arrayMask = range(64).map(t => Math.pow(2, t))\n            arrayMask[63] *= -1\n            arrayP = LongArray([\n                15, 6, 19, 20, 28, 11, 27, 16,\n                0, 14, 22, 25, 4, 17, 30, 9,\n                1, 7, 23, 13, 31, 26, 2, 8,\n                18, 12, 29, 5, 21, 10, 3, 24\n            ])\n            arrayPC_1 = LongArray([\n                56, 48, 40, 32, 24, 16, 8, 0,\n                57, 49, 41, 33, 25, 17, 9, 1,\n                58, 50, 42, 34, 26, 18, 10, 2,\n                59, 51, 43, 35, 62, 54, 46, 38,\n                30, 22, 14, 6, 61, 53, 45, 37,\n                29, 21, 13, 5, 60, 52, 44, 36,\n                28, 20, 12, 4, 27, 19, 11, 3\n            ])\n            arrayPC_2 = LongArray([\n                13, 16, 10, 23, 0, 4, -1, -1,\n                2, 27, 14, 5, 20, 9, -1, -1,\n                22, 18, 11, 3, 25, 7, -1, -1,\n                15, 6, 26, 19, 12, 1, -1, -1,\n                40, 51, 30, 36, 46, 54, -1, -1,\n                29, 39, 50, 44, 32, 47, -1, -1,\n                43, 48, 38, 55, 33, 52, -1, -1,\n                45, 41, 49, 35, 28, 31, -1, -1\n            ])\n            matrixNSBox = [\n                [\n                    14, 4, 3, 15, 2, 13, 5, 3,\n                    13, 14, 6, 9, 11, 2, 0, 5,\n                    4, 1, 10, 12, 15, 6, 9, 10,\n                    1, 8, 12, 7, 8, 11, 7, 0,\n                    0, 15, 10, 5, 14, 4, 9, 10,\n                    7, 8, 12, 3, 13, 1, 3, 6,\n                    15, 12, 6, 11, 2, 9, 5, 0,\n                    4, 2, 11, 14, 1, 7, 8, 13\n                ],\n                [\n                    15, 0, 9, 5, 6, 10, 12, 9,\n                    8, 7, 2, 12, 3, 13, 5, 2,\n                    1, 14, 7, 8, 11, 4, 0, 3,\n                    14, 11, 13, 6, 4, 1, 10, 15,\n                    3, 13, 12, 11, 15, 3, 6, 0,\n                    4, 10, 1, 7, 8, 4, 11, 14,\n                    13, 8, 0, 6, 2, 15, 9, 5,\n                    7, 1, 10, 12, 14, 2, 5, 9\n                ],\n                [\n                    10, 13, 1, 11, 6, 8, 11, 5,\n                    9, 4, 12, 2, 15, 3, 2, 14,\n                    0, 6, 13, 1, 3, 15, 4, 10,\n                    14, 9, 7, 12, 5, 0, 8, 7,\n                    13, 1, 2, 4, 3, 6, 12, 11,\n                    0, 13, 5, 14, 6, 8, 15, 2,\n                    7, 10, 8, 15, 4, 9, 11, 5,\n                    9, 0, 14, 3, 10, 7, 1, 12\n                ],\n                [\n                    7, 10, 1, 15, 0, 12, 11, 5,\n                    14, 9, 8, 3, 9, 7, 4, 8,\n                    13, 6, 2, 1, 6, 11, 12, 2,\n                    3, 0, 5, 14, 10, 13, 15, 4,\n                    13, 3, 4, 9, 6, 10, 1, 12,\n                    11, 0, 2, 5, 0, 13, 14, 2,\n                    8, 15, 7, 4, 15, 1, 10, 7,\n                    5, 6, 12, 11, 3, 8, 9, 14\n                ],\n                [\n                    2, 4, 8, 15, 7, 10, 13, 6,\n                    4, 1, 3, 12, 11, 7, 14, 0,\n                    12, 2, 5, 9, 10, 13, 0, 3,\n                    1, 11, 15, 5, 6, 8, 9, 14,\n                    14, 11, 5, 6, 4, 1, 3, 10,\n                    2, 12, 15, 0, 13, 2, 8, 5,\n                    11, 8, 0, 15, 7, 14, 9, 4,\n                    12, 7, 10, 9, 1, 13, 6, 3\n                ],\n                [\n                    12, 9, 0, 7, 9, 2, 14, 1,\n                    10, 15, 3, 4, 6, 12, 5, 11,\n                    1, 14, 13, 0, 2, 8, 7, 13,\n                    15, 5, 4, 10, 8, 3, 11, 6,\n                    10, 4, 6, 11, 7, 9, 0, 6,\n                    4, 2, 13, 1, 9, 15, 3, 8,\n                    15, 3, 1, 14, 12, 5, 11, 0,\n                    2, 12, 14, 7, 5, 10, 8, 13\n                ],\n                [\n                    4, 1, 3, 10, 15, 12, 5, 0,\n                    2, 11, 9, 6, 8, 7, 6, 9,\n                    11, 4, 12, 15, 0, 3, 10, 5,\n                    14, 13, 7, 8, 13, 14, 1, 2,\n                    13, 6, 14, 9, 4, 1, 2, 14,\n                    11, 13, 5, 0, 1, 10, 8, 3,\n                    0, 11, 3, 5, 9, 4, 15, 2,\n                    7, 8, 12, 15, 10, 7, 6, 12\n                ],\n                [\n                    13, 7, 10, 0, 6, 9, 5, 15,\n                    8, 4, 3, 10, 11, 14, 12, 5,\n                    2, 11, 9, 6, 15, 12, 0, 3,\n                    4, 1, 14, 13, 1, 2, 7, 8,\n                    1, 2, 12, 15, 10, 4, 0, 3,\n                    13, 14, 6, 9, 7, 8, 9, 6,\n                    15, 1, 5, 12, 3, 10, 14, 5,\n                    8, 7, 11, 0, 4, 13, 2, 11\n                ]\n            ]\n            bitTransform = (t, r, e) => {\n                let n = Long(0);\n                return range(r).forEach(r => {\n                    t[r].isNegative() || e.and(arrayMask[t[r].low]).equals(0) || (n = n.or(arrayMask[r]))\n                }), n\n            }\n            DES64 = (t, r) => {\n                e = [],\n                    n = [];\n                f = bitTransform(arrayIP, 64, r);\n                return n[0] = f.and(4294967295),\n                    n[1] = f.and(-4294967296).shiftRight(32),\n                    range(16).forEach(r => {\n                        let f = Long(0);\n                        i = Long(n[1]),\n                            i = bitTransform(arrayE, 64, i).xor(t[r]),\n                            range(8).forEach(t => {\n                                e[t] = i.shiftRight(8 * t).and(255)\n                            }),\n                            range(8).reverse().forEach(t => {\n                                f = f.shiftLeft(4).or(matrixNSBox[t][e[t]])\n                            }),\n                            i = bitTransform(arrayP, 32, f),\n                            o = Long(n[0]),\n                            n[0] = Long(n[1]),\n                            n[1] = o.xor(i)\n                    }),\n                    n.reverse(),\n                    f = n[1].shiftLeft(32).and(-4294967296).or(n[0].and(4294967295)),\n                    f = bitTransform(arrayIP_1, 64, f)\n            }\n            subKeys = (t, r) => {\n                let n = bitTransform(arrayPC_1, 56, t);\n                range(16).forEach(t => {\n                    n = n.and(arrayLsMask[arrayLs[t]]).shiftLeft(28 - arrayLs[t]).or(n.and(arrayLsMask[arrayLs[t]].not()).shiftRight(arrayLs[t])),\n                        r[t] = bitTransform(arrayPC_2, 64, n)\n                })\n            }\n            b = function(t) {\n                const r = Buffer.from(\"ylzsxkwm\");\n                let n = Long(0);\n                range(8).forEach(t => {\n                    n = Long(r[t]).shiftLeft(8 * t).or(n)\n                });\n                const o = Math.floor(t.length / 8),\n                    i = range(16).map(() => Long(0));\n                subKeys(n, i);\n                const f = range(o).map(() => Long(0));\n                range(o).forEach(r => {\n                    range(8).forEach(e => {\n                        f[r] = Long(t[e + 8 * r]).shiftLeft(8 * e).or(f[r])\n                    })\n                });\n                const s = [];\n                range(o).forEach(t => {\n                    s[t] = DES64(i, f[t])\n                });\n                const u = t.slice(8 * o);\n                let h = Long(0);\n                range(t.length % 8).forEach(t => {\n                    h = Long(u[t]).shiftLeft(8 * t).or(h)\n                }), s[o] = DES64(i, h);\n                const a = [];\n                let c = 0;\n                return s.forEach(t => {\n                    range(8).forEach(r => {\n                        a[c] = t.shiftRight(8 * r).and(255).low;\n                        c++\n                    })\n                }), a;\n            }(Buffer.from(t));\n            return window.btoa(String.fromCharCode.apply(null, b));\n        }, t));\n    }\n}"},{"col_type":"movie_3","name":"❺mg","path":"mg","rule":"eval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配')).rule);\nconst this_platform = \"mg\"; // c.musicapp.migu.cn;\nconst this_host = \"https://app.c.nf.migu.cn/MIGUM3.0/v1.0/\";\n\n\nfunction ajax(uri, size, head) {\n    let type1 = /^https?:\\/\\//.test(uri);\n    let type2 = typeof size === 'object';\n    if (type2) {\n        uri = type1 ? uri : \"migu/remoting/\" + uri + \"_tag\";\n        uri = buildUrl(uri, size);\n    } else {\n        uri = type1 ? uri : \"migumusic/h5/\" + uri;\n        if (!type1 && /playlist\\/(list|songsInfo)|search\\/song|\\/home/i.test(uri))\n            uri += \"&pageNum=\" + MY_PAGE + \"&pageSize=\" + (size || 30);\n    }\n    let json = JSON.parse(fetch(type1 ? uri : \"https://m.music.migu.cn/\" + uri, {\n        \"headers\": Object.assign({\n            \"Referer\": \"https://m.music.migu.cn/v4/\",\n            \"User-Agent\": MOBILE_UA,\n            \"By\": md5(MOBILE_UA),\n            \"channel\": \"014000D\",\n        }, head || {})\n    }));\n    return type2 ? json : json.data;\n}\n\n\nfunction ajax2(resourceType, xId, run) {\n    let u, p = {\n        needSimple: \"01\"\n    };\n    switch (resourceType) {\n        case \"D\": // 视频\n        case \"2\": // 歌曲\n        case \"5\": // 专辑(新)\n        case \"2003\": // 专辑(旧)\n            u = \"content/resourceinfo.do\";\n            p[\"resourceType\"] = resourceType;\n            p[\"copyrightId\"] = xId;\n            p[\"resourceId\"] = xId;\n            resourceType = false;\n            break;\n        default:\n            u = resourceType;\n            p = Object.assign(p, xId || {});\n            resourceType = true;\n            break;\n    };\n    let Json = JSON.parse(fetch(buildUrl(this_host + u, p), {\n        timeout: 3000\n    }).replace(/},(}|])/g, '}$1')) || {};\n    if (resourceType) return Json;\n    return Json.resource[0] || {};\n}\n\n\nfunction _formatting(_, r2) {\n    let name = _.songName || _.name;\n    let singer = (_.singers || _.singerList || (_.singer && [_.singer]) || []).map(_ => _.name || _).join(\"&\");\n    let interval = _.duration || _[\"length\"];\n    if (Number(interval)) interval = Hms(interval * 1000);\n    let songId = _.songId;\n    let picUrl = _.img1 || _.img2 || _.img3 || _.landscapImg || _.mediumPic || (_.albumImgs && _.albumImgs[0].img) || \"\";\n    if (picUrl) picUrl = 'https://' + picUrl.split('//')[1];\n    let albumName = (_.album && _.album.albumName) || _.album || \"\";\n    let albumId = _.albumId || (_.album && _.album.albumId) || \"\";\n    let qualitys = [];\n    if (_.fullSong) {\n        for (let k1 of ['fullSong', 'hq', 'sq', 'bit24']) {\n            if (_[k1]) {\n                qualitys.push({\n                    type: {\n                        fullSong: \"128k\",\n                        hq: \"320k\",\n                        sq: \"flac\",\n                        bit24: \"flac24bit\"\n                    }[k1],\n                    size: Size(_[k1].size)\n                });\n            }\n        }\n    } else {\n        let k2 = (_.newRateFormats || _.audioFormats || [{\n            formatType: \"PQ\"\n        }]).filter(_ => /^(PQ|HQ|SQ|ZQ2?4?)$/i.test(_.formatType))\n        for (let k of k2) {\n            qualitys.push({\n                type: {\n                    PQ: \"128k\",\n                    HQ: \"320k\",\n                    SQ: \"flac\",\n                    ZQ: \"flac24bit\",\n                    ZQ24: \"flac24bit\",\n                }[k.formatType],\n                size: Size(k.size || k.androidSize || k.iosSize || k.asize || k.isize)\n            });\n        }\n    }\n    let copyrightId = _.copyrightId;\n    // let contentId = _.contentId;\n    let lrcUrl = _.lrcUrl || _.lyricUrl || (_.ext && _.ext.lrcUrl);\n    let mrcUrl = _.mrcUrl;\n    let trcUrl = _.trcUrl;\n\n    let content = (_.fullSong ? _.fullSong.vipFlag : (_.vipType || _.restrictType)) > 0 ? 1 : 0;\n    Extra({\n        name,\n        singer,\n        interval,\n        songId,\n        albumName,\n        albumId,\n        picUrl,\n        qualitys,\n        copyrightId,\n        lrcUrl,\n        trcUrl,\n        mrcUrl,\n        content,\n    }, ((typeof r2 === 'object') ? Object.assign(r2, {\n        songName: name,\n        userName: singer,\n        songTime: interval,\n        albumName: albumName || name\n    }) : r2));\n}\n$.exports = {\n    _formatting,\n    iTag: function() {\n        iTag[\"推荐\"] = {};\n        iTag[\"推荐\"][\"精选歌单\"] = \"home/songlist?columnId=\";\n        iTag[\"推荐\"][\"热门歌单\"] = \"playlist/list?columnId=38199588\";\n        iTag[\"推荐\"][\"推荐歌单\"] = \"playlist/list?columnId=15127315\";\n        iTag[\"推荐\"][\"最新歌单\"] = \"playlist/list?columnId=15127272&tagId=\";\n        ajax(\"playlist/allTag\").tags.map(_ => {\n            iTag[_.tagName] = {};\n            _.tags.map(__ =>\n                iTag[_.tagName][__.tagName] = iTag[\"推荐\"][\"最新歌单\"] + __.tagId\n            );\n        });\n        iTag[\"排行\"] = {};\n        /* 网页接口没有歌曲大小参数\n        ajax(\"billboard/tree\").map(_ => {\n            if (!/乐·榜/.test(_.columnTitle)) {\n                iTag[\"排行\"][_.columnTitle] = _.billBoardVos.map(_ => Extra({\n                    name: _.columnTitle,\n                    picUrl: 'https:' + _.columnSmallPic,\n                    content: 3,\n                    sourceListId: _.pathName\n                }, 1, 1));\n            }\n        });\n        */\n        iTag[\"排行\"][\"榜单\"] = [];\n        let rawList = ajax2(\"template/rank-list/release\").data.contentItemList;\n        for (let board of rawList) {\n            if (board.template != 'group1') continue\n            for (let item of board.itemList) {\n                if ((item.template != 'row1' && item.template != 'grid1' && !item.actionUrl) || !item.actionUrl.includes('rank-info')) continue\n                let data = item.displayLogId.param;\n                iTag[\"排行\"][\"榜单\"].push(Extra({\n                    name: data.rankName,\n                    picUrl: item.imageUrl,\n                    content: 3,\n                    sourceListId: data.rankId\n                }, 1, 1));\n            }\n        }\n        storage0.putMyVar(\"mg_iTag\", iTag);\n    },\n    mv: function(_, t1) {\n        let mvhost = \"http://freevod.nf.migu.cn:8080\";\n        let mvinfo = ajax2(\"2\", t1).relatedSongs\n            .find(_ => _.resourceType == \"D\") || {};\n        let names = [];\n        let urls = [];\n        /* m3u8\n                let mvhash = mvinfo.productId;\n                mvhost = this_host.replace(\"v1.0/\", \"strategy/mvplayinfo/by-priority/v1.0?canFallback=true&contentId=\" + mvhash + \"&formatType=\");\n                [\"HQ\", \"PQ\"].map(Type => {\n                    let u = JSON.parse(fetch(mvhost + Type)).data;\n                    if (u && u.playUrl) {\n                        names.push({\n                            PQ: \"【标清】 240P\",\n                            HQ: \"【高清】 480P\",\n                        }[Type]);\n                        urls.push(u.playUrl);\n                    }\n                });\n        */\n        let mvhash = mvinfo.copyrightId;\n        if (mvhash) {\n            mvinfo = ajax2(\"D\", mvhash).rateFormats || [];\n            mvinfo.map(_ => {\n                if (_.url && _.formatType != \"UHD\") {\n                    names.push({\n                        LQ: \"【标清】 240P\",\n                        PQ: \"【高清】 480P\",\n                        HQ: \"【超清】 720P\",\n                        SQ: \"【蓝光】 1080P\",\n                        UHD: \"【加密】 ???P\"\n                    }[_.formatType] || \"【未知】 ???P\");\n                    urls.push(mvhost + _.url);\n                }\n            });\n        }\n        return [names.reverse(), urls.reverse()];\n    },\n    getLyric: function(_, t1) {\n        let lrc;\n        try { // urlReg(/\\/songs$/) #获取单曲基础信息\n            lrc = ajax(\"https://music.migu.cn/v3/api/music/audioPlayer/getLyric\", {\n                type: 1, // 1=单曲, 2=专辑, 3=歌单\n                copyrightId: t1\n            }, {\n                Referer: \"https://app.c.nf.migu.cn/\"\n            }).lyric;\n        } catch (err) {}\n        return lrc || \"\";\n    },\n    lazy: function(platform, t1, t2, t3) {\n        let title, author, desc, img, time, tags, total, list;\n        let _ = t1;\n        t1 = _.copyrightId || _.sourceListId;\n        switch (String(platform)) {\n            case '0': // 详情\n                if (t2) {\n                    return $.require(\"jiexi?rule=歌词适配\").GetMusicUrl(\"down\", \"mg\", t1, t3, _);\n                }\n                let f = _.qualitys;\n                // 链接\n                var url, ii, lrc = _.lrcUrl;\n                switch (ii = t3) {\n                    case '3':\n                        if (ii == 3) {\n                            if (f[3] && f[3].type == 'flac24bit') {\n                                [url, lrc, ii] = $.require(\"jiexi?rule=歌词适配\").GetMusicUrl(\"open\", \"mg\", t1, 3, _, lrc, ii);\n                                if (url) break;\n                            } else ii = 2;\n                        }\n                    case '2':\n                        if (ii == 2) {\n                            if (f[2] && f[2].type == 'flac') {\n                                [url, lrc, ii] = $.require(\"jiexi?rule=歌词适配\").GetMusicUrl(\"open\", \"mg\", t1, 2, _, lrc, ii);\n                                log('2: ' + ii + ':' + url);\n                                if (url) break;\n                            } else ii = 1;\n                        }\n                    case '1':\n                        if (ii == 1) {\n                            if (f[1] && f[1].type == '320k') {\n                                [url, lrc, ii] = $.require(\"jiexi?rule=歌词适配\").GetMusicUrl(\"open\", \"mg\", t1, 1, _, lrc, ii);\n                                if (url) break;\n                            } else ii = 0;\n                        }\n                    default:\n                        try {\n                            if (_.content == \"1\") {\n                                throw new Error('is vip music');\n                            }\n                            __ = ajax(\"cms_detail\", {\n                                cpid: t1\n                            }).data || {};\n                            lrc = __.lyricLrc;\n                            url = __.lisQq || __.listenUrl;\n                            if (!url) {\n                                throw new Error('no get purl');\n                            }\n                        } catch (isVipMusic) {\n                            [url, lrc, ii] = $.require(\"jiexi?rule=歌词适配\").GetMusicUrl(\"open\", \"mg\", t1, 0, _, lrc, ii);\n                        }\n                        break;\n                }\n                return [url, lrc, ii];\n                break;\n            case '1': // 首页\n                _ = ajax(uri);\n                list = _.items || _[0].items;\n                list.map(_ => Extra({\n                    name: _.name || _.title || _.playListName,\n                    picUrl: _.img || _.image,\n                    content: 2,\n                    sourceListId: _.id || _.playListId,\n                    col_type: t2\n                }, 1));\n                return _.total || ((MY_PAGE - 1) * 30 + list.length);\n                break;\n            case '2': // 发现\n                _ = ajax(`playlist/info?songListId=${t1}`);\n\n                title = _.playListName;\n                author = _.createUserName || \"咪咕音乐\";\n                desc = _.summary;\n                img = _.image ? \"https://\" + _.image.split(\"//\")[1] : \"\";\n                time = _.updateTime.split(\" \")[0];\n                tags = (_.tagLists || []).map(_ => _.tagName).join(\"、\");\n\n                total = _.contentCount;\n                // _ = ajax(`playlist/songsInfo?palylistId=${t1}`, total);\n                _ = ajax2(\"user/queryMusicListSongs.do\", {\n                    musicListId: t1,\n                    pageNo: MY_PAGE,\n                    pageSize: total\n                });\n                break;\n            case '3': // 排行\n                // _ = ajax(`billboard/home?pathName=${t1}`);\n                _ = ajax2(\"content/querycontentbyId.do\", {\n                    columnId: t1,\n                    needAll: 0\n                }).columnInfo;\n\n                time = String(_.columnUpdateTime || _.updateTime).split(\" \")[0];\n                title = _.name || _.columnTitle;\n                author = \"咪咕音乐\";\n                desc = _.columnDes || \"\";\n                img = _.columnPicUrl || MY_PARAMS.img || \"\";\n                tags = _.type || _.columnSubtitle || \"\";\n\n                // _ = _.songs;\n                total = _.itemTotal || _.contentsCount;\n                break;\n            case '4': // 专辑\n                // _ = ajax2(\"2003\", t1);\n                _ = ajax2(\"content/queryAlbumSong\", {\n                    albumId: t1,\n                    pageNo: MY_PAGE,\n                    pageSize: 30\n                });\n                _ = _.songList.length ? _ : ajax2(\"5\", t1);\n\n                time = _.firstStartDate || \"\";\n                title = _.title || getPageTitle();\n                author = _.singer || \"咪咕音乐\";\n                desc = _.summary || \"\";\n                img = (_.imgItem && _.imgItem[0] && _.imgItem[0].img) || MY_PARAMS.img || \"\";\n                tags = _.tagItems || \"\";\n\n                total = _.totalCount;\n                break;\n            case '5': // 歌手\n                // _ = ajax(\"singer/getSingerDetail?singerId=\"+t1);// sam=111 #同时获取专辑&mv\n                // _ = ajax(\"singer/getSingerSAM?singerId=\" + t1 + \"&pageNo=\" + MY_PAGE + \"&pageSize=30&sam=100\").song || {};\n                _ = ajax2(\"content/singer_songs.do\", {\n                    resourceType: 2,\n                    singerId: t1,\n                    pageNo: MY_PAGE,\n                    pageSize: 30\n                });\n                time = \"\";\n                title = _.singer.singer || getPageTitle();\n                author = _.singer.artistNamePinyin || \"咪咕音乐\";\n                desc = _.singer.summary || \"\";\n                img = (_.singer.imgs && _.singer.imgs[0] && _.singer.imgs[0].img) || MY_PARAMS.img || \"\";\n                tags = \"\";\n                total = _.songNum;\n                break;\n        }\n\n        list = _.items || _.list || _.contents || _.songItems || _.songList || _.songlist || [];\n        if (t2) return list;\n        list.map(_ => {\n            _formatting(_.objectInfo || _, t3 || {});\n        });\n        return {\n            title,\n            author,\n            desc,\n            img,\n            time,\n            tags,\n            total: total || ((MY_PAGE - 1) * 30 + list.length)\n        }\n    },\n\n\n\n    search: function(platform, keyword, isU) {\n        let _;\n        if (isU != \"url\") {\n            let list, __ = {\n                lib: (_) => true,\n                paid: (_) => (_.fullSong ? _.fullSong.vipFlag : _.restrictType) > 0,\n                free: (_) => (_.fullSong ? _.fullSong.vipFlag : _.restrictType) < 1,\n                lyric: (_) => true,\n                mv: (_) => true\n            };\n            let surl_web = (stype, erri) => {\n                try {\n                    return ajax(\"search/\" + stype + \"?text=\" + keyword);\n                } catch (err) {\n                    if (erri < 3) {\n                        return surl_web(stype, erri + 1);\n                    } else {\n                        return [];\n                    }\n                }\n            }\n            let surl_app = (stype, spath) => {\n                let deviceId = '963B7AA0D21511ED807EE5846EC87D20';\n                let timestamp = Date.now().toString();\n                let sign = '6cdc72a439cef99a3418d2a78aa28c73';\n                sign = md5([keyword + sign, deviceId + timestamp].join(\"yyapp2d16148780a1dcc7408e06336b98cfd50\"));\n                let Switch = {\n                    \"song\": 0, // 单曲\n                    \"songList\": 0, // 歌单\n                    \"mvSong\": 0, // 视频\n                    \"lyricSong\": 0, // 歌词\n                    \"album\": 0, // 专辑\n                    \"singer\": 0, // 歌手\n                    \"tagSong\": 0, // 标签\n                    \"bestShow\": 0, // 热门\n                    \"concert\": 0, // 现场\n                };\n                Switch[stype] = 1;\n                return ajax(\"https://jadeite.migu.cn/music_search/v3/search/searchAll\", {\n                    isCorrect: 0,\n                    isCopyright: 1,\n                    searchSwitch: JSON.stringify(Switch),\n                    pageSize: 30,\n                    text: encodeURIComponent(keyword),\n                    pageNo: MY_PAGE,\n                    sort: 0,\n                    sid: \"USS\"\n                }, {\n                    sign,\n                    deviceId,\n                    timestamp,\n                    channel: '0146921',\n                    uiVersion: 'A_music_3.6.1',\n\n                    By: '',\n                    Referer: '',\n                    'User-Agent': 'Mozilla/5.0 (Linux; U; Android 11.0.0; zh-cn; MI 11 Build/OPR1.170623.032) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30',\n                })[(spath || stype) + \"ResultData\"];\n            }\n            switch (String(platform)) {\n                case '0': // 搜索单曲\n                    // _ = surl_web('song', 0);\n                    _ = surl_app({\n                        lyric: \"lyricSong\",\n                        mv: \"mvSong\"\n                    }[isU] || \"song\", isU == \"lyric\" ? \"lyric\" : 0);\n                    list = _.items || _.resultList || _.result;\n                    if (isU == 'mv') {\n                        list = function() {\n                            let cIds = [];\n                            list.map(_ => {\n                                try {\n                                    let a = [];\n                                    for (let p of [\"mvList\", \"relatedSongs\"]) {\n                                        a = _[p] || [];\n                                        for (let b of a) {\n                                            let cId = b.copyrightId;\n                                            if (cIds.indexOf(cId) == -1) {\n                                                cIds.push(cId);\n                                            }\n                                        }\n                                    }\n                                } catch (e) {};\n                            });\n                            let dIds = [];\n                            cIds.map(cId => {\n                                try { // 从网页获取resourceId，没找到其他接口\n                                    let cUrl = \"https://music.migu.cn/v3/video/mv/\" + cId;\n                                    let dId = pdfh(fetch(cUrl, {\n                                        timeout: 3000\n                                    }), \".download&&href\").replace(/^.*\\//, \"\");\n                                    if (dId && dIds.indexOf(dId) == -1) {\n                                        dIds.push(ajax2(\"2\", dId));\n                                    }\n                                } catch (e) {}\n                            });\n                            return dIds;\n                        }();\n                    }\n                    let r1 = getMyVar('search_down', '0') == '1' ? 2 : 1;\n                    list.map(_ => {\n                        if (Array.isArray(_)) {\n                            _.map(_ => {\n                                if (__[isU](_)) _formatting(_, r1);\n                            });\n                        } else {\n                            if (__[isU](_)) _formatting(_, r1);\n                        }\n                    });\n                    break;\n                case '1': // 搜索歌单\n                    // _ = surl_web('songList', 0);\n                    isU = {\n                        songs: { // 歌单\n                            u: \"songList\",\n                            c: \"2\"\n                        },\n                        album: { // 专辑\n                            u: \"album\",\n                            c: \"4\"\n                        },\n                        artist: { // 歌手\n                            u: \"singer\",\n                            c: \"5\"\n                        }\n                    }[isU];\n                    _ = surl_app(isU.u, 0);\n                    list = _.items || _.result;\n                    list.map(_ => Extra({\n                        name: _.name,\n                        picUrl: _.img || _.musicListPicUrl ||\n                            (_.imgItems && _.imgItems[0] && _.imgItems[0].img) ||\n                            (_.singerPicUrl && _.singerPicUrl[0] && _.singerPicUrl[0].img) || \"\",\n                        content: isU.c,\n                        sourceListId: _.id\n                    }, 1));\n                    break;\n            }\n            return _.total || _.totalCount || ((MY_PAGE - 1) * 30 + list.length);\n        } else { // 搜索 分享链接\n            switch (String(platform)) {\n                case '0': // 搜索单曲\n                    _ = ajax2(\"2\", keyword);\n                    if (run == 'mv') return _;\n                    _formatting(_, 1);\n                    break;\n                case '1': // 搜索歌单\n                    _ = ajax(`playlist/info?songListId=${keyword}`);\n                    Extra({\n                        name: _.playListName,\n                        picUrl: (_.image && 'https://' + _.image.split('//')[1]) || \"\",\n                        content: 2,\n                        sourceListId: _.playListId\n                    }, 1);\n                    break;\n            }\n            return 0;\n        }\n    },\n    ajax,\n    ajax2\n}"},{"col_type":"movie_3","name":"❻5s","path":"5s","rule":"eval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配')).rule);\nconst this_platform = \"5s\";\n\n/* \nparams = getParams([\n    \"version=6.6.70\",\n    \"appid=3146\",\n    \"clienttime=\" + Math.ceil(Date.now() / 1000),\n    \"clientver=610850\",\n    \"dfid=-\",\n    \"from=com.sing.client.player\",\n    \"mid=114514\",\n    \"songfields=ID,SN,SK,SW,SS,ST,SI,CT,M,S,ZQ,WO,ZC,HY,YG,CK,D,RQ,DD,E,R,RC,SG,C,CS,LV,LG,SY,UID,PT,SCSR,SC,KM5\",\n    \"token=\",\n    \"userfields=ID,NN,I,YCRQ,FCRQ\",\n    \"uuid=-\"\n], \"UqgPMZpjgRZQ7s8JAuUIP5DQdo5O5NB\")\n*/\n// https://5sapi.kugou.com\n// https://5sservice.kugou.com\n// http://service.5sing.kugou.com\n// http://mobileapi.5sing.kugou.com\nlet ajax = (uri, run) => {\n    if (!uri.match(/https?\\:\\/\\//i)) uri = \"https://5sapi.kugou.com/\" + uri;\n    return JSON.parse(fetch(uri))[run || \"data\"];\n}\nlet getMusicInfo = (uType, t1, t2) => ajax(`song/${uType}?songid=${t1}&songtype=${t2}`);\nlet getSongUrl = (songid, songtype, appid, signkey) => {\n    let host = \"https://5sservice.kugou.com/song/getSongUrl?\";\n    let time = new Date().getTime();\n    let body = \"\";\n    let uuid = R(32);\n    let appid = appid || \"2918\";\n    let signkey = signkey || \"5uytoxQewcvIc1gn1PlNF0T2jbbOzRl5\";\n    let params = [\n        \"clientver=1000\",\n        \"clienttime=\" + time,\n        \"mid=\" + uuid,\n        \"uuid=\" + uuid,\n        \"dfid=-\",\n        \"appid=\" + appid,\n        \"version=6.6.70\",\n        \"songid=\" + songid,\n        \"songtype=\" + songtype,\n    ].sort();\n    params = params.join(\"&\") + \"&signature=\" + md5(signkey + params.join(\"\") + body + signkey);\n    return JSON.parse(fetch(host + params)).data;\n}\n\nfunction _formatting(_, songId, songtype, r2) {\n    var _ = Object.assign(_, getMusicInfo(\"newget\", songId, songtype));\n    let name = _.songName || _.SN;\n    let singer = (_.user && _.user.NN) || \"\";\n    let interval = \"\";\n    let albumName = {\n        yc: \"原唱\",\n        fc: \"翻唱\",\n        bz: \"伴奏\"\n    }[songtype];\n    let albumId = {\n        yc: 1,\n        fc: 2,\n        bz: 3\n    }[songtype]\n    let picUrl = (_.user && _.user.I) || \"\";\n    let qualitys = [];\n    for (let k of ['lq', 'hq', 'sq']) {\n        if (_[k + 'size']) {\n            qualitys.push({\n                type: {\n                    lq: \"128k\",\n                    hq: \"320k\",\n                    sq: \"flac\",\n                }[k],\n                size: Size(_[k + 'size'])\n            });\n        }\n    }\n    Extra({\n        name,\n        singer,\n        interval,\n        songId,\n        albumName,\n        albumId,\n        picUrl,\n        qualitys,\n        lrcUrl: _.dynamicWords,\n\n        content: songtype\n    }, ((typeof r2 === 'object') ? Object.assign(r2, {\n        songName: name,\n        userName: singer,\n        songTime: qualitys[qualitys.length - 1].type,\n        albumName\n    }) : r2));\n}\n$.exports = {\n    _formatting,\n    iTag: function() {\n        iTag[\"推荐\"] = {};\n        iTag[\"推荐\"][\"最热\"] = \"\";\n        iTag[\"推荐\"][\"最新\"] = \"&type=1\";\n        let list = pdfa(fetch(\"http://5sing.kugou.com/gd/gdList\"), \"body&&.r_list_t\");\n        for (let item of list) {\n            let t1 = pdfh(item, \"h3&&Text\");\n            iTag[t1] = {};\n            pdfa(item, \"ul&&li\").map(it => {\n                t2 = pdfh(it, \"a&&Text\");\n                iTag[t1][t2] = t2;\n            });\n        }\n        iTag[\"排行\"] = {};\n        iTag[\"排行\"][\"全部\"] = ajax(\"rank/list\")\n            .map(_ => Extra({\n                name: _.name,\n                picUrl: _.photoBig || _.photo,\n                content: 3,\n                sourceListId: _.id\n            }, 1, 1));\n        iTag[\"排行\"][\"分区\"] = [\"古风\", \"流行\", \"欧美\", \"日语\", \"民谣\", \"动漫/游戏\", \"摇滚\", \"影视\", \"电子\", \"民族\", \"广播剧\", \"HIP-HOP\"]\n            .map(name => Extra({\n                name: name,\n                picUrl: null,\n                content: 3,\n                sourceListId: name\n            }, 1, 1));\n        storage0.putMyVar(\"5s_iTag\", iTag);\n    },\n    mv: function(_, t1) {\n        return [\n            [],\n            []\n        ];\n    },\n    getLyric: function(_, t1) {\n        let lrc;\n        try {\n            // 歌词\n            let t2 = _.albumId;\n            lrc = ajax(`http://service.5sing.kugou.com/song/detail?songId=${t1}&songType=${t2}`).lyrics;\n            if (!lrc) {\n                t2 = _.content;\n                lrc = getMusicInfo(\"newget\", t1, t2).dynamicWords;\n                if (!lrc) {\n                    lrc = ajax(`http://5sing.kugou.com/fm/m/json/lrc?songId=${t1}&songType=${t2}`, \"txt\");\n                }\n            }\n        } catch (err) {}\n        return lrc || \"\";\n    },\n    lazy: function(platform, t1, t2, t3) {\n        let title, author, desc, img, time, tags, total, list;\n        let _ = t1;\n        t1 = _.songId || _.sourceListId;\n        switch (String(platform)) {\n            case '0': // 歌曲详情\n                let url, lrc, q1 = [\"lq\", \"hq\", \"sq\", \"sq\"];\n                let __ = getMusicInfo(\"getSongUrl\", t1, _.content) || getSongUrl(t1, _.content);\n\n                if (t2) { // 下载\n                    url = __[q1[t3] + \"url\"] || __[q1[t3] + \"url_backup\"];\n                    return [url || \"toast://音质不存在\", lrc, t3];\n                }\n                let q2;\n                switch (t3) {\n                    case '3':\n                    case '2':\n                        q2 = [2, 1, 0];\n                        break;\n                    case '1':\n                        q2 = [1, 2, 0];\n                        break;\n                    default:\n                        q2 = [0, 1, 2];\n                        break;\n                }\n                for (let k of q2) {\n                    url = __[q1[k] + \"url\"] || __[q1[k] + \"url_backup\"];\n                    if (url) {\n                        return [url, lrc, k];\n                        break;\n                    }\n                }\n                return [\"toast://无法解析\", lrc, t3];\n                break;\n            case '1': //首页\n                let html = fetch(\"http://5sing.kugou.com/gd/gdList?&tagName=\" + t1 + \"&page=\" + MY_PAGE);\n                list = pdfa(html, \"body&&.album\");\n                for (let item of list) {\n                    let title = pdfh(item, \".jx_name&&Text\");\n                    let img = pdfh(item, \"img&&src\");\n                    let zyid = pdfh(item, \"a,1&&songlistid\");\n                    Extra({\n                        name: title,\n                        picUrl: img,\n                        content: 2,\n                        sourceListId: zyid,\n                        col_type: t2\n                    }, 1);\n                }\n                return (MY_PAGE - 1) * 16 + list.length;\n                break;\n            case '2': // 发现\n                if (MY_PAGE == 1) {\n                    // _ = ajax(\"song/getPlayListSong?id=\" + t1);\n                    _ = ajax(\"song/getSongList?id=\" + t1);\n                    title = _.T;\n                    author = _.user.NN;\n                    desc = _.C;\n                    img = _.P || _.user.I;\n                    time = $.dateFormat(_.CT * 1000, 'yyyy-MM-dd');\n                    tags = _.L;\n                    total = _.E;\n\n                    _ = ajax(\"song/getSongListSong?id=\" + t1);\n                } else _ = [];\n                break;\n            case '3': // 排行\n                if (t1 == \"list25\")\n                    uri = \"songlist/hotsupportranklist?page=\";\n                else if (t1 == \"yc\" || t1 == \"fc\" || t1 == \"list23\")\n                    uri = \"rank/detail?id=\" + t1 + \"&pageindex=\";\n                else\n                    uri = \"rank/stylerank?style=\" + t1 + \"&pageindex=\";\n                _ = ajax(uri + MY_PAGE + \"&pageSize=30\");\n                break;\n        }\n\n        title = title || _.name || getPageTitle();\n        author = author || \"5sing音乐\";\n        desc = desc || _.text || \"\";\n        img = img || _.photoBig || _.photo;\n        time = time || \"\";\n        tags = tags || _.id || \"\";\n        list = _.songs || _;\n\n        if (t2) return list;\n        let I = list.length;\n        list.map((_, i) => {\n            showLoading('加载中　' + (i / I * 100).toFixed(2) + \"%\");\n            if (_.ST === undefined || _.ST > 0) _formatting(_, _.songId || _.ID, _.songKind || _.SK, t3 || {});\n        });\n        hideLoading();\n        return {\n            title,\n            author,\n            desc,\n            img,\n            time,\n            tags,\n            total: total || _.count || ((MY_PAGE - 1) * 30 + list.length)\n        }\n    },\n\n\n\n    search: function(platform, keyword, isU) {\n        let _;\n        if (isU != \"url\") {\n            let list, filter = {\n                lib: 0,\n                yc: 1,\n                fc: 2,\n                bz: 3\n            }[isU];\n            let surl = (stype) => JSON.parse(fetchPC(\"http://search.5sing.kugou.com/home/json?keyword=\" + keyword + \"&sort=1&page=\" + MY_PAGE + \"&filter=\" + filter + \"&type=\" + stype));\n            switch (String(platform)) {\n                case '0': // 搜索单曲\n                    _ = surl('0');\n                    list = _.list || [];\n                    let r1 = getMyVar('search_down', '0') == '1' ? 2 : 1;\n                    list.map(_ => {\n                        _formatting(_, _.songId, _.typeEname, r1);\n                    });\n                    break;\n                case '1': // 搜索歌单\n                    _ = surl('1');\n                    list = _.list || [];\n                    list.map(_ => Extra({\n                        name: _.title,\n                        picUrl: _.pictureUrl,\n                        content: 2,\n                        sourceListId: _.songListId\n                    }, 1));\n                    break;\n            }\n            return _.pageInfo.totalCount;\n        } else { // 搜索 分享链接\n            switch (String(platform)) {\n                case '0': // 搜索单曲\n                    [t1, t2] = keyword.split('#');\n                    _formatting({}, t1, t2, 1);\n                    break;\n                case '1': // 搜索歌单\n                    _ = ajax(\"song/getsonglist?id=\" + keyword);\n                    Extra({\n                        name: _.T,\n                        picUrl: _.P || _.user.l,\n                        content: 2,\n                        sourceListId: _.ID\n                    }, 1);\n                    break;\n            }\n            return 0;\n        }\n    }\n}"},{"col_type":"movie_3","name":"❼my","path":"my","rule":"eval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配')).rule);\nconst this_platform = \"my\";\n\nfunction ajax(path, body, host) {\n    let url = (host || \"https://api\") + \".liumingye.cn/m/api/\" + path;\n    if (!host) {\n        body._t = Date.now() + ''\n        body.token = $.require(\"my?rule=歌词适配\").new_token(body);\n        if (body.quality != undefined)\n            return buildUrl(url, body);\n        body = JSON.stringify(body);\n    }\n    let _ = JSON.parse(post(url, {\n        body: body,\n        headers: {\n            \"User-Agent\": MOBILE_UA,\n            'Origin': 'https://tool.liumingye.cn/',\n        }\n    }));\n    _.data.code = _.code;\n    _.data.msg = _.msg;\n    return _.data;\n}\n\nfunction _formatting(_, r2, r3) {\n    let name = _.name;\n    let singer = _.artist || \"\";\n    if (Array.isArray(singer)) singer = singer.map(_ => _.name).join('&');\n    let interval = (_.time && Hms(_.time * 1000)) || \"\";\n\n    let songId = _.hash || _.id;\n    let albumName = (_.album && _.album.name) || \"\";\n    let albumId = (_.album && _.album.id) || \"\";\n    let picUrl = _.cover || _.pic || (_.album && _.album.pic) || \"\";\n    picUrl = String(picUrl).split(\"@\")[0];\n    let qualitys = [];\n    if (_.quality)\n        for (let k of _.quality) {\n            qualitys.push({\n                type: {\n                    '96': \"128k\",\n                    '128': \"320k\",\n                    '320': \"flac\",\n                    '2000': \"flac24bit\"\n                }[k.name || k],\n                size: Size(),\n                down: (typeof k === 'object')\n            });\n        }\n    let downId = _.hash ? _.id : \"\";\n    let lrcUrl = _.lyric || _.lrc || \"\";\n    let playUrl = _.url || \"\";\n\n\n\n    let urls = [];\n    let names = [];\n    let arr = ['m4a', '128', '320', 'flac'];\n    for (let k in arr) {\n        let K = _['url_' + arr[k]];\n        if (K) {\n            urls.push(K + '#isMusic=true#');\n            names.push(ts[k]);\n        }\n    }\n\n\n    /*\n        if (songId == undefined && urls.length != 0) {\n            let u1 = String(urls[0]);\n            if (u1.includes(\"liumingye.cn\")) {\n                let u3, u2 = u1.split(\"/url/\")[1].split(\"/format/\")[0];\n                [u3, songId] = u2.split(\"/id/\");\n\n            }\n        }\n    */\n\n\n\n\n    if (playUrl && urls.indexOf(playUrl) == -1) {\n        urls.unshift(playUrl + '#isMusic=true#');\n        names.unshift(ts[1]);\n    }\n    Extra({\n        name,\n        singer,\n        interval,\n        songId,\n        albumName,\n        albumId,\n        picUrl,\n        qualitys,\n        downId,\n        lrcUrl,\n        playUrl,\n        content: r3 || \"wy\",\n    }, ((typeof r2 === 'object') ? Object.assign(r2, {\n        songName: name,\n        userName: singer,\n        songTime: interval,\n        albumName: albumName || name\n    }) : r2), 0, (urls.length != 0 && {\n        names,\n        urls,\n        lyric: lrcUrl\n    }));\n}\n$.exports = {\n    _formatting,\n    iTag: function() {\n        /* 不能解析wy歌单了\n                $.require('wy?rule=歌词适配').iTag(1);\n                iTag[\"排行\"][\"全部\"] = $.require('wy?rule=歌词适配').ajax(\"toplist?\").list.map(_ => Extra({\n                    title: _.name,\n                    img: _.coverImgUrl,\n                    content: 3,\n                    zyid: _.id\n                }, 1, 1));\n        */\n        let arr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ#\".split(\"\");\n        arr.unshift(\"推荐\");\n        arr.map((t, i) => {\n            iTag[t] = {};\n            if (t == \"推荐\")\n                iTag[t][\"推荐歌单\"] = \"*\",\n                iTag[t][\"热门歌手\"] = i + \"\",\n                iTag[t][\"下架歌曲\"] = \"gq\",\n                iTag[t][\"饶舌说唱\"] = \"sc\";\n            else\n                iTag[t][\"MyFreeMP3\"] = i + \"\";\n        })\n        storage0.putMyVar(\"my_iTag\", iTag);\n    },\n    mv: function(_, t1) {\n        return [\n            [],\n            []\n        ];\n    },\n    getLyric: function(_, t1) {\n        let lrc;\n        try {\n            lrc = ajax(\"lyric\", {\n                id: _.lrcUrl || t1\n            }).lrc;\n        } catch (err) {}\n        return lrc || \"\";\n    },\n    lazy: function(platform, t1, t2, t3) {\n        let _ = t1;\n        t1 = _.songId || _.sourceListId;\n        switch (String(platform)) {\n            case '0': // 详情\n                function ping(url) {\n                    try {\n                        url = JSON.parse(fetch(url, {\n                            timeout: 5000,\n                            redirect: false,\n                            onlyHeaders: true\n                        })).headers.location[0];\n                        if (url.match(/lanzou.*?\\.com/)) {\n                            url = $.require(\"lanzou?rule=歌词适配\")\n                                .one_url(url, \"\", true);\n                        }\n                        return url;\n                    } catch (fetch_error) {\n                        return false;\n                    }\n                }\n\n                let url = _.playUrl;\n                let lrc = _.lrcUrl;\n                if (!lrc.match(/https?\\:|\\d+\\:\\d+/i)) lrc = \"\";\n                let q1 = [\"128k\", \"320k\", \"flac\", \"flac24bit\"];\n                let q2 = [96, 128, 320, 2000];\n\n                let item = _.qualitys.find(_ => _.type == q1[t3]);\n                if (item) {\n                    url = ping(ajax(\"link\", {\n                        id: item.down ? _.downId : t1,\n                        quality: q2[t3] + ''\n                    }));\n                }\n                if (t2) {\n                    if (item && url) {\n                        return [url, lrc, t3];\n                    } else {\n                        return [\"toast://音质不存在 / 无法解析\", lrc, t3];\n                    }\n                }\n\n                if (url) {\n                    return [url, lrc, item ? t3 : 0];\n                } else {\n                    let q3;\n                    switch (t3) {\n                        case '3':\n                            q3 = [3, 2, 1, 0];\n                            break;\n                        case '2':\n                            q3 = [2, 1, 3, 0];\n                            break;\n                        case '1':\n                        default:\n                            q3 = [1, 2, 3, 0];\n                            break;\n                    }\n                    for (let k of q3) {\n                        item = _.qualitys.find(_ => _.type == q1[k]);\n                        if (item) {\n                            url = ping(ajax(\"link\", {\n                                id: t1,\n                                quality: q2[k] + ''\n                            }));\n                            if (url) {\n                                return [url, lrc, k];\n                                break;\n                            }\n                        }\n                    }\n                    return [\"toast://无法解析\", lrc, t3];\n                }\n                break;\n            case '1': //首页\n                /*\n                                if (!t1.match(/\\?/)) t1 = \"top/playlist?cat=\" + t1 + \"&\";\n                                _ = $.require('wy?rule=歌词适配').ajax(t1);\n                                (_.result || _.playlists).map(_ => Extra({\n                                    title: _.name,\n                                    img: _.coverImgUrl || _.picUrl,\n                                    content: 2,\n                                    zyid: _.id\n                                }, 1));\n                */\n                t3 = t1 === \"*\";\n                if (t3 || t1 === \"gq\" || t1 === \"sc\") {\n                    if (MY_PAGE == 1) {\n                        if (t3) {\n                            _ = ajax(\"home/recommend\", {}),\n                                _.playlist.push({\n                                    name: \"最新上传\",\n                                    pic: \"https://dn-qiniu-avatar.qbox.me/avatar/6ee1ef2b48bf9b3fad60ee42bad6234b\",\n                                    id: \"top/song\"\n                                });\n                        } else { // 留声机\n                            _ = {\n                                list: []\n                            }\n                            fetch(`https://sneer0.github.io/lsj/gn/xj${t1}.lua`).replace(\n                                /{标题=\".+?《(.+?)》\",链接=\"(.+?)\"}/g,\n                                ($0, $1, $2) => _.list.push({\n                                    name: $1,\n                                    id: $2.split(\"/\")[3],\n                                    source: \"lanzou\",\n                                    pic: \"https://txc.gtimg.com/data/374133/2022/0324/9930763e1916693f73174374a1f0b15f.jpeg\"\n                                })\n                            );\n                        }\n                    } else\n                        _ = {};\n                } else\n                    _ = ajax(\"artist/list\", {\n                        initial: t1,\n                        page: MY_PAGE\n                    });\n                list = _.list || _.playlist || [];\n                list.map(_ => Extra({\n                    source: _.source, // lanzou\n                    name: _.name,\n                    picUrl: _.pic || 'hiker://images/rule_type_audio',\n                    content: t3 ? 2 : 3,\n                    sourceListId: _.id,\n                    col_type: t2\n                }, 1));\n                return (MY_PAGE - 1) * 90 + list.length;\n                break;\n            case '2': // 发现\n                if (t1 == \"top/song\") {\n                    _ = ajax(t1, {\n                        page: MY_PAGE\n                    });\n                } else {\n                    if (MY_PAGE == 1) {\n                        if (Number(t1) > -1) {\n                            _ = ajax(\"playlist/info\", {\n                                id: t1\n                            });\n                        } else {\n                            _ = ajax(\"search/playlist\", {\n                                id: t1\n                            });\n                        }\n                    } else\n                        _ = {\n                            list: []\n                        };\n                }\n                break;\n            case '3': // 排行\n                if (MY_PAGE == 1)\n                    _ = ajax(\"artist\", {\n                        id: t1\n                    });\n                else\n                    _ = {\n                        list: []\n                    };\n                break;\n        }\n\n        let title = _.name || getPageTitle();\n        let author = (_.user && _.user.username) || \"MyFreeMP3\";\n        let desc = _.description || _.desc || \"\";\n        let img = _.pic || MY_PARAMS.img || \"\";\n        img = String(img).split(\"@\")[0];\n        let time = _.create_time || \"\";\n        let tags = _.tags || \"\";\n\n        list = _.list;\n        if (t2) return list;\n        list.map(_ => {\n            _formatting(_, t3 || {});\n        });\n        if (list.length == 0 && _.name) {\n            d.push({\n                title: _.name,\n                desc: _.description,\n                url: \"hiker://empty\",\n                col_type: \"text_center_1\"\n            });\n        }\n        return {\n            title,\n            author,\n            desc,\n            img,\n            time,\n            tags,\n            total: _.count || ((MY_PAGE - 1) * 90 + list.length)\n        }\n    },\n\n\n\n    search: function(platform, keyword, stype, isNew) {\n        switch (String(platform)) {\n            case '0': // 搜索单曲\n                let stype = stype || 'wy';\n                let stype2 = {\n                    'wy': 'YQD',\n                    'kw': 'YQB',\n                    'mg': isNew ? 'YQM' : 'migu',\n                    '1t': '1ting',\n                    'db': 'douban',\n                    '5y': 'wusingyc',\n                    '5f': 'wusingfc'\n                }[stype];\n                try {\n                    let _, r1 = getMyVar('search_down', '0') == '1' ? 2 : 1;\n                    if (isNew) {\n                        _ = ajax('search', {\n                            type: stype2,\n                            text: keyword,\n                            page: MY_PAGE,\n                            v: 'beta'\n                        });\n                    } else {\n                        let body = \"text=\" + keyword + \"&page=\" + MY_PAGE + \"&type=\" + stype2;\n                        body = $.require(\"my?rule=歌词适配\").old_encode(body);\n                        _ = ajax('search', body, \"http://api2\");\n                    }\n                    let list = _.list || [];\n                    list.map(_ => _formatting(_, r1, stype));\n                    if (list.length == 0) {\n                        if (_.code == 403) {\n                            d.push({\n                                title: _.msg,\n                                desc: _.code,\n                                url: \"hiker://empty\",\n                                col_type: \"text_center_1\"\n                            });\n                        } else {\n                            d.push({\n                                col_type: \"text_center_1\",\n                                url: \"hiker://empty\",\n                                title: \"~~~什么都没有~~~\"\n                            });\n                        }\n                    }\n\n                    return ((MY_PAGE - 1) * (_.more || 36) + list.length);\n                } catch (e) {\n                    d.push({\n                        title: \"网络异常，搜索失败\",\n                        desc: e.toString(),\n                        url: \"hiker://empty\",\n                        col_type: \"text_center_1\"\n                    });\n                    return 0;\n                }\n                break;\n            case '1': // 搜索歌单\n                $.require(\"wy?rule=歌词适配\").search(1, keyword, 1).map(_ => Extra({\n                    name: _.name,\n                    picUrl: _.coverImgUrl,\n                    content: 2,\n                    sourceListId: \"d\" + _.id\n                }, 1));\n                return 0;\n                break;\n        }\n    },\n\n\n\n    new_token: function(body) {\n        let [t, e, As] = [\n            [\n                \"20241016.\",\n                \"xeLO3Wq54bYyE5q59B1WU0ju26bg5GzZTr7wN40aOYOEZEy9IWm9XU51an5nv2jp\",\n                \"mLIXG/KZejUbq85HWdvlVtpAFrQsR0ciYEDPJwn321zu4=ToxygSM67OkafC9hNB+\"\n            ],\n            [\n                \"20240531.\",\n                \"4b9qrOXu305U5Ex5U1yYv69jZO5EbznZq9nWaY5e5NW2GImw27aEBjL4OgW01Tpy\",\n                \"hQxDsS6geBiG1MTOPZzoHkt8Wyf4AnLU7FqJbp+0N=udc2j/VY9aICrmX3Rvl5KwE\"\n            ],\n            [\n                \"20230327.\",\n                \"yGz4n9XE9xYy2Oj5Ub7E6u9a5p5aIWZYe53Orq5wE5UgnjbWq0410WTvmLBO1Z2N\",\n                \"pW8jg/mke6cO1F4CTuaiswhZfQGzMyq5NJRLPVIvDxlA7=E3YrSUoH0b2BXKn9td+\"\n            ],\n            [\n                \"20221222.\",\n                \"H2huuwXf8wN9Cx5K3lEQkdg4VTCJqIb440QQX95OQye1D092292BI6rgjFgK9mcx\",\n                \"QsVmt4rpqPFJyWcg1Y/SRAuLMTedB375XZNDlOGxj6b2van9=C8UhHKE+wifIkoz0\"\n            ]\n        ][0];\n        e = encodeURIComponent(JSON.stringify(body))\n            .split(\"\").map((t, i) => {\n                return t.charCodeAt(0) ^ e.charCodeAt(i % 64);\n            });\n        let a, b, c, d,\n            v  = 0,\n            tk = \"\",\n            i  = e.length % 3;\n        do {\n            a = e[v++]\n            b = e[v++]\n            c = e[v++]\n            d = a << 16 | b << 8 | c\n            a = d >> 18 & 63\n            b = d >> 12 & 63\n            c = d >> 6 & 63\n            d = d & 63\n            tk += As.charAt(a) + As.charAt(b) + As.charAt(c) + As.charAt(d)\n        } while (v < e.length);\n        return t + md5(i == 0 ? tk : tk.slice(0, i - 3) + '==='.slice(i || 3))\n    },\n\n\n\n    old_encode: function(t2) {\n        let k0 = md5(\"<G6sX,Lk~^2:Y%4Z\");\n        let k1 = md5(k0.substr(16, 32));\n        let k2 = md5(k0.substr(00, 16));\n        let r4 = R(4);\n        k2 += md5(k2 + r4);\n        let t0 = new Date().getTime() / 1000 + 86400 >> 0;\n        let t1 = md5(t2 + k1).substr(0, 16);\n        let t2 = String(t0 + t1 + t2).replace(/[\\u0080-\\uFFFF]/gi, function(x) {\n            let c = x.charCodeAt(0);\n            return String.fromCharCode(\n                c >> 12 | 224,\n                c >> 6 & 63 | 128,\n                c & 63 | 128\n            );\n        });\n        let p = Array.from({\n            length: 256\n        }, (_, i) => i);\n        let [E, I, b] = [\"\", 0, 0];\n        for (let i = 0; i < 256; i++) {\n            let ci = k2[i % 64].charCodeAt(0);\n            I = (I + p[i] + ci) % 256;\n            [p[i], p[I]] = [p[I], p[i]];\n        }\n        for (let i = 0; i < t2.length; i++) {\n            I = (i + 1) % 256;\n            b = (b + p[I]) % 256;\n            [p[I], p[b]] = [p[b], p[I]];\n            E += String.fromCharCode(\n                t2.charCodeAt(i) ^ p[(p[I] + p[b]) % 256]\n            );\n        }\n        let B = window0.btoa(E).replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n        return \"data=\" + r4 + B + \"&v=2\";\n    }\n}"},{"col_type":"movie_3","name":"❽qt","path":"qt","rule":"eval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配')).rule);\nconst this_platform = 'qt';\n\nfunction qianqian(uri, json) {\n    if (!json) return uri.response;\n    json.appid = \"16073360\";\n    json.timestamp = Math.floor(Date.now() / 1e3);\n    let body = Object.keys(json).sort()\n        .map(key => key + '=' + json[key]).join('&');\n    body += \"&sign=\" + md5(body + \"0b50b02fd0d73a9c4c8c3a781c30845f\");\n    let u = \"https://api-qianqian.91q.com\" || \"https://music.91q.com\";\n    return JSON.parse(fetch(u + \"/v1/\" + uri + \"?\" + body)).data;\n}\n\nfunction search(platform, keyword, content, run) {\n    let interval, picUrl, albumName, albumId,\n        total1, total2 = 10,\n        qualitys = [{\n            type: \"128k\",\n            size: Size()\n        }],\n        r1 = getMyVar('search_down', '0') == '1' ? 2 : 1;\n    switch (String(platform)) {\n        case '0':\n            switch (String(content)) {\n                case 'bd': // 千千音乐(百度音乐)\n                    _ = qianqian(\"search\", {\n                        type: 1,\n                        word: keyword,\n                        pageNo: MY_PAGE\n                    });\n                    list = _.typeTrack;\n                    list.map(_ => {\n                        if (!_.isVip) {\n                            qualitys[0].size = Size(_.rateFileInfo['128'].size);\n                            Extra({\n                                name: _.title,\n                                singer: _.artist && _.artist.map(_ => _.name).join('&'),\n                                interval: Hms(_.duration * 1000),\n                                songId: _.id || _.TSID,\n                                albumName: _.albumTitle,\n                                albumId: _.albumAssetCode,\n                                picUrl: _.pic,\n                                // lrcUrl: _.lyric,\n                                qualitys,\n                                content\n                            }, r1);\n                        }\n                    });\n                    total1 = _.total;\n                    total2 = 20;\n                    break;\n\n\n\n                case 'zz': // 种子音乐(★★★★★)\n                    u = 'https://zz123.com';\n                    list = JSON.parse(post(u + '/ajax/', {\n                        body: \"act=search&key=\" + keyword + \"&lang=&page=\" + MY_PAGE\n                    })).data;\n                    for (let _ of list) {\n                        let ptime = String(_.play_time).length == 5 ? \"00:\" : \"\";\n                        let __ = {\n                            name: _.mname,\n                            singer: _.sname,\n                            interval: _.play_time && ptime + _.play_time,\n                            songId: _.id,\n                            albumName,\n                            albumId,\n                            picUrl: _.pic && _.pic.replace(/\\?.*/, ''),\n                            qualitys,\n                            content\n                        };\n                        if (run == 'run') {\n                            return lazy('zz', __, 0, 1);\n                        }\n                        Extra(__, r1);\n                    }\n                    total2 = 50;\n                    break;\n\n\n\n                case 'kz': // slider.kz(★★★★★)\n                    if (MY_PAGE == 1) {\n                        u = \"https://hayqbhgr.slider.kz/\";\n                        list = JSON.parse(fetch(u + \"vk_auth.php?q=\" + keyword))[\"audios\"][\"\"];\n                        for (let _ of list) {\n                            let name, singer;\n                            [singer, name] = _.tit_art.split(' - ');\n                            let __ = {\n                                name,\n                                singer,\n                                interval: Hms(_.duration * 1000),\n                                songId: _.id,\n                                albumName,\n                                albumId,\n                                picUrl: 'https://pics.paypal.com/00/s/NDRmZTNiZjktNDFmZi00ZDM5LWI4OTktZGFmODUxNmU1NWY2/file.JPG',\n                                qualitys,\n                                content,\n                                t2: _.duration,\n                                t3: _.durl,\n                                t4: _.tit_art\n                            };\n                            if (run == 'run') {\n                                return lazy('kz', __, 0, 1)\n                            }\n                            Extra(__, r1);\n                        }\n                    } else {\n                        return 0;\n                    }\n                    break;\n\n\n\n                case 'ni': // 音乐磁场(★★★★★)\n                    u = \"https://www.hifini.com/\";\n                    if (MY_PAGE == 1) htm = \"-1.htm\";\n                    else htm = \"-1-\" + MY_PAGE + \".htm\";\n                    keyword = encodeURIComponent(keyword).replace(/-/g, '_2d').replace(/%/g, '_');\n                    html = fetchCodeByWebView(u + \"search-\" + keyword + htm, {\n                        'blockRules': ['.js', '.css', '.png', '.ico'],\n                        timeout: 5000\n                    });\n                    list = pdfa(html, \"body&&li.media[data-tid]\");\n                    for (let item of list) {\n                        albumName = pdfh(item, \"a,2&&Text\");\n                        albumId = pdfh(item, \"a,2&&href\").replace(/\\D|\\s/g, \"\");\n                        if (!/特供|站务/i.test(albumName)) {\n                            let singer, name = pdfh(item, \"a,1&&Text\").split(\"》\")[0];\n                            [singer, name] = name.split(\"《\");\n                            let __ = {\n                                name,\n                                singer,\n                                interval,\n                                songId: pdfh(item, \"a,1&&href\").replace(/\\D/g, ''),\n                                albumName,\n                                albumId,\n                                picUrl: u + \"view/img/avatar.png\",\n                                qualitys,\n                                content\n                            };\n                            if (run == 'run') {\n                                return lazy('ni', __, 0, 1)\n                            }\n                            Extra(__, r1);\n                        }\n                    }\n                    total2 = 20;\n                    break;\n\n\n\n                case 'g3': // 咕咕咕音乐(★★★★★)\n                    if (MY_PAGE == 1) {\n                        u = \"https://www.gggmusic.com/\";\n                        keyword = encodeURIComponent(keyword).replace(/-/g, '_2d').replace(/%/g, '_');\n                        html = fetch(u + \"search-\" + keyword + \"-1.htm\", {\n                            'blockRules': ['.js', '.css', '.png', '.ico'],\n                            timeout: 5000\n                        });\n                        list = pdfa(html, \"body&&li[data-tid]\");\n                        for (let item of list) {\n                            let singer, name;\n                            [singer, name] = pdfh(item, \"a,1&&Text\").split(\" - \");\n                            let __ = {\n                                name,\n                                singer,\n                                interval,\n                                songId: pdfh(item, \"a,1&&href\").replace(/\\D/g, ''),\n                                albumName,\n                                albumId,\n                                picUrl: u + \"view/img/favicon.ico\",\n                                qualitys,\n                                content\n                            };\n                            if (run == 'run') {\n                                return lazy('g3', __, 0, 1)\n                            }\n                            Extra(__, r1);\n                        }\n                    } else {\n                        return 0;\n                    }\n                    break;\n\n\n\n\n\n                case 'qy': // 趣趣音乐(★★★★★)\n                    u = \"https://www.qqyin.com/\"\n                    list = pdfa(fetch(u + \"?keyword=\" + keyword + \"&page=\" + MY_PAGE), \"body&&a.sp1\");\n                    list = list.map(item => pdfh(item, \"a,0&&href\").match(/\\d+/)[0]).join(\",\");\n                    list = JSON.parse(fetch(u + \"?plugin=xmusic_like&do=playmusic&articleId=\" + list));\n                    for (let _ of list) {\n                        let singer, name;\n                        [name, singer] = (_.name || _.title || _.music).split(\" - \");\n                        let __ = {\n                            name,\n                            singer,\n                            interval,\n                            songId: _.id,\n                            albumName,\n                            albumId,\n                            picUrl: \"http://q.qlogo.cn/g?b=qq&nk=1299490188&s=640\",\n                            qualitys,\n                            content,\n                            playUrl: _.url || _.downlink\n                        };\n                        if (run == 'run') {\n                            return lazy('qy', __, 0, 1)\n                        }\n                        Extra(__, r1);\n                    }\n                    total2 = 50;\n                    break;\n\n\n\n                case 'qk': // 奇酷音乐(★★★★★)\n                    u = 'https://7n33122q45.vicp.fun/';\n                    list = JSON.parse(fetch(u + '/user/Cloud/s.php?page=' + MY_PAGE + '&number=25&name=' + keyword, {\n                        headers: {\n                            \"User-Agent\": \"Apache-HttpClient/UNAVAILABLE (java 1.4)\",\n                            \"Accept-Encoding\": \"identity\",\n                        }\n                    }));\n                    for (let _ of list) {\n                        let singer, name;\n                        [name, singer] = _.music_name.split(\"-\");\n                        let __ = {\n                            name,\n                            singer,\n                            interval,\n                            songId: _.music_id,\n                            albumName,\n                            albumId,\n                            picUrl: u + 'icon.png',\n                            qualitys,\n                            content: '0',\n                            source: 'lanzou'\n                        };\n                        if (run == 'run') {\n                            return $.require(\"lanzou?rule=歌词适配\")\n                                .lazy(\"0\", __, 0, 1);\n                        }\n                        Extra(__, r1);\n                    }\n                    total2 = 25;\n                    break;\n\n\n\n\n\n\n\n\n\n                case 'km':\n                    u = 'https://www.kumeiwp.com/';\n                    list = JSON.parse(fetch(u + '/index/search/data?page=' + MY_PAGE + '&limit=50&word=' + keyword + '&scope=all')).data;\n                    for (let _ of list) {\n                        zyid = _.file_id + '#km';\n                        if (run == 'run') {\n                            return lazy('km', zyid, 0, 1);\n                        }\n                        Extra({\n                            title: pdfh(_.title, 'a,0&&Text'),\n                            img: u + 'favicon.ico',\n                            content: 'km',\n                            zyid\n                        }, r1);\n                    }\n                    break;\n\n\n\n\n\n                case 'bz':\n                    if (MY_PAGE == 1) {\n                        list = pdfa(fetch(\"https://debenzi.com/?s=\" + keyword), \"body&&h2.entry-title\");\n                        for (let item of list) {\n                            zyid = pdfh(item, \"a,0&&href\").replace(/\\D/g, '') + '#bz';\n                            if (run == 'run') {\n                                return lazy('bz', zyid, 0, 1);\n                            }\n                            Extra({\n                                title: pdfh(item, \"a,0&&Text\"),\n                                img: 'https://pic.rmb.bdstatic.com/bjh/39b964b2b087a05c39a56a2e38c04019338.jpeg',\n                                content: 'bz',\n                                zyid\n                            }, r1);\n                        }\n                    }\n                    break;\n\n\n\n                case 'st':\n                    list = pdfa(fetch(`http://www.songtaste.co/dance/search?key=${keyword}&page=${MY_PAGE}`), \"body&&.mlist&&li\");\n                    for (let item of list) {\n                        zyid = pdfh(item, \".td3&&a&&href\").replace(/.*\\//, '') + '#st';\n                        if (run == 'run') {\n                            return lazy('st', zyid, 0, 1);\n                        }\n                        Extra({\n                            title: pdfh(item, \".td3&&Text\"),\n                            img: pdfh(item, \"img&&src\").replace('picdata', 'attachment'),\n                            content: 'st',\n                            zyid\n                        }, r1);\n                    }\n                    break;\n\n\n\n                case 'blm':\n                    list = JSON.parse(fetch(`https://blackblm.bailemi.com/index.php/dance/search?key=${keyword}&page=${MY_PAGE}`)).dancelist;\n                    for (let _ of list) {\n                        url = _.downurl || _.playurl;\n                        if (run == 'run') {\n                            return url\n                        }\n                        if (url && _.name) Extra({\n                            title: _.name + ' - ' + (_.singer || _.up_user),\n                            img: _.cover || _.up_user_logo,\n                            content: 'blm',\n                            zyid: _.songid + '#blm'\n                        }, r1, 0, {\n                            names: [ts[1]],\n                            urls: [url + '#isMusic=true#']\n                        });\n                    }\n                    break;\n\n\n\n                case 'fp':\n                    if (MY_PAGE == 1) {\n                        list = pdfa(fetch(\"https://www.fangpi.net/s/\" + keyword), \"body&&[class=row]\");\n                        for (item of list) {\n                            Extra({\n                                title: pdfh(item, \"div,1&&Text\") + ' - ' + pdfh(item, \"div,2&&Text\"),\n                                img: $.require('image?rule=歌词适配')('fp'),\n                                content: 'fp',\n                                zyid: pdfh(item, \"a,0&&href\").replace(/\\D/g, '') + '#fp'\n                            }, r1);\n                        }\n                    }\n                    break;\n\n\n\n                case 'ht':\n                    if (MY_PAGE == 1) {\n                        list = pdfa(fetch(\"http://m.htqyy.com/search/result?id=\" + keyword), \"body&&li\");\n                        for (item of list) {\n                            Extra({\n                                title: pdfh(item, \"a,0&&Text\") + ' - ' + pdfh(item, \"em,0&&Text\"),\n                                img: pdfh(item, \"img&&src\") + '0@headers={\"referer\":\"http://m.htqyy.com\"}',\n                                content: 'ht',\n                                zyid: pdfh(item, \".play&&data-id\") + '#ht'\n                            }, r1);\n                        }\n                    }\n                    break;\n\n\n\n                case '1t':\n                    JSON.parse(fetch(`https://so.1ting.com/song/json?q=${keyword}&page=${MY_PAGE}&size=30`)).results.map(_ => Extra({\n                        title: _.song_name + ' - ' + _.singer_name,\n                        img: 'https:' + _.album_cover,\n                        content: '1t',\n                        zyid: _.song_id + '#1t'\n                    }, r1));\n                    break;\n\n\n\n                case '9t':\n                    if (MY_PAGE == 1) {\n                        JSON.parse(fetch(`http://new.9sky.com/api/weibo/content/search?content=${keyword}`)).data.song_list.map(_ => {\n                            if (/^N$/i.test(_.is_station)) {\n                                u = \"http://new.9sky.com/api/song/detail?id=\" + _.song_id + \"&is_login=N\";\n                                _ = JSON.parse(fetch(u)).data;\n                                Extra({\n                                    title: _.song_name + ' - ' + _.musician_name,\n                                    img: _.disc_img_url,\n                                    content: '9t',\n                                    zyid: _.song_id + '#9t'\n                                }, r1, 0, {\n                                    names: [ts[1]],\n                                    urls: [_.song_url + '#isMusic=true#'],\n                                    lrc: _.lyric_url || Lrc(_.design_notes)\n                                });\n                            }\n                        });\n                    }\n                    break;\n\n\n\n                case 'ky':\n                    JSON.parse(post('http://api.kuaiyin123.net/q/search', {\n                        body: \"q=\" + keyword + \"&client_v=2.7.1&page=\" + MY_PAGE + \"&platform=Android\",\n                        headers: {\n                            \"client-v\": \"2.7.1\",\n                            \"device-id\": R(16),\n                            \"platform\": \"Android\",\n                            \"User-Agent\": \"okhttp/3.14.4\",\n                            \"Connection\": \"Keep-Alive\",\n                            \"Content-Type\": \"application/x-www-form-urlencoded\"\n                        }\n                    })).data.music_list.rows.map(_ => Extra({\n                        title: _.title + ' - ' + _.user_info.nickname,\n                        img: _.cover,\n                        content: 'ky',\n                        zyid: _.zyid\n                    }, r1, 0, {\n                        names: [ts[1]],\n                        urls: [_.play_url + '#isMusic=true#'],\n                        lyric: _.lrc_url\n                    }));\n                    break;\n\n\n\n                case '5nd':\n                    if (MY_PAGE == 1) {\n                        list = pdfa(fetch(\"http://m.5nd.com/so/s_\" + keyword), \"body&&.list-song&&li\");\n                        for (item of list) {\n                            Extra({\n                                title: pdfh(item, \".song&&Text\") + ' - ' + pdfh(item, \".artist&&Text\"),\n                                img: pdfh(item, \"img&&src\"),\n                                content: '5nd',\n                                zyid: pdfh(item, \"a&&href\").replace(/.*\\/|\\..*/g, '') + '#5nd'\n                            }, r1);\n                        }\n                    }\n                    break;\n\n\n\n                case 'biu':\n                    list = pdfa(fetch(\"https://biu.moe/index.php?m=&c=Song&a=search&data=\" + keyword + \"&p=\" + MY_PAGE), \"body&&tbody&&tr\");\n                    for (item of list) {\n                        biu_sid = pdfh(item, \"a,0&&href\").replace(/\\D+/, \"\");\n                        Extra({\n                            title: pdfh(item, \"a,0&&Html\").replace(/\\s*<span[\\s\\S]+/i, \"\") + ' - ' + pdfh(item, \"a,1&&Text\"),\n                            img: \"https://biu.moe/Song/showCover/sid/\" + biu_sid,\n                            content: 'biu',\n                            zyid: biu_sid + '#biu'\n                        }, r1);\n                    }\n                    break;\n\n\n\n                case 'mus':\n                    list = pdfa(fetch(\"https://skymus.org/tracks/\" + keyword + \"/\" + MY_PAGE), \"body&&.f-table\");\n                    for (item of list) {\n                        Extra({\n                            title: pdfh(item, \".artist-name&&Text\") + ' - ' + pdfh(item, \".track-name&&Text\"),\n                            img: pdfh(item, \"img&&src\").replace(/^(.+)/, 'https:$1') || $.require('image?rule=歌词适配')('mus'),\n                            content: 'mus',\n                            zyid: 'undefined'\n                        }, r1, 0, {\n                            names: [ts[1]],\n                            urls: [\"https:\" + pdfh(item, \".mp3&&href\") + '#isMusic=true#']\n                        });\n                    }\n                    break;\n\n\n\n                case 'jam':\n                    JSON.parse(fetch(\"https://solrcloud.jamendo.com/solr/jamcom?wt=json&rows=30&q=\" + keyword + \"&start=\" + ((MY_PAGE - 1) * 30))).response.docs.map(_ => {\n                        url = \"https://prod-1.storage.jamendo.com/download/track/\" + _.id + \"/mp35\";\n                        Extra({\n                            title: _.name.replace(_.artist_name + ' - ', '') + ' - ' + _.artist_name,\n                            img: \"https://usercontent.jamendo.com/?type=album&id=\" + _.album_id.replace(/\\D/g, '') + \"&width=500&trackid=\" + _.id,\n                            content: 'jam',\n                            zyid: 'undefined'\n                        }, r1, 0, {\n                            names: [ts[1]],\n                            urls: [url + '#isMusic=true#']\n                        });\n                    });\n                    break;\n\n\n\n                case 'jui':\n                    list = eval(post('https://new.myfreemp3juices.cc/api/api_search.php?callback=qianqian', {\n                        body: \"q=\" + keyword + \"&page=\" + MY_PAGE\n                    }));\n                    var u = \"https://nplay.idmp3s.com/stream/\";\n                    var o = \"ABCDEFGHJKMNPQRSTUVWXYZabcdefghjkmnpqrstuvxyz123\";\n\n                    function jui_d(t) {\n                        var e = \"\";\n                        if (0 == t) return o[0];\n                        for (t < 0 && (t *= -1, e += \"-\"); 0 < t;) val = parseInt(t % 48), t = parseInt(t / 48), e += o[val];\n                        return e\n                    }\n                    for (i = 1; i < list.length; i++) {\n                        _ = list[i];\n                        prettyId = jui_d(_.owner_id) + \":\" + jui_d(_.id);\n                        Extra({\n                            title: _.title + ' - ' + _.artist,\n                            img: $.require('image?rule=歌词适配')('jui'),\n                            content: 'jui',\n                            zyid: _.prettyId\n                        }, r1, 0, {\n                            names: [ts[1]],\n                            urls: [u + prettyId + '#isMusic=true#']\n                        });\n                    }\n                    break;\n\n\n\n                case 'y3':\n                    $song_data = [];\n                    song_list = (i, ii) => {\n                        list = $song_data[i].split(\"||\");\n                        for (item of list) {\n                            _ = item.split(\"|\");\n                            if (_[4]) {\n                                url = \"http://ting6.yymp3.net:82/\" + String(_[4]).replace('.wma', '.mp3');\n                                Extra({\n                                    title: _[1] + ' - ' + _[3],\n                                    img: $.require('image?rule=歌词适配')('y3'),\n                                    content: 'y3',\n                                    zyid: _.prettyId\n                                }, r1, 0, {\n                                    names: [ts[1]],\n                                    urls: [url + '#isMusic=true#']\n                                });\n                            }\n                        }\n                    }\n                    eval(fetchPC(\"http://www.yymp3.com/p/getser.aspx?key=\" + keyword + \"&page=\" + MY_PAGE));\n                    break;\n\n\n\n                case '365':\n                    if (MY_PAGE == 1) {\n                        function $365_SearchResult(t) {\n                            return pdfa(\"<body>\" + t + \"</body>\", \"body&&li\");\n                        }\n                        list = eval(\"$365_\" + fetch(\"http://hit.yue365.com/search.asp?rnd=\" + Math.random() + \"&keywords=\" + escape(keyword) + \"&t=1\"));\n                        for (item of list) {\n                            MusicId = pdfh(item, \"a,0&&href\").replace(/.*\\/|\\..*/g, '');\n                            url = \"http://96.ierge.cn/\" + parseInt(MusicId / 30000) + \"/\" + parseInt(MusicId / 2000) + \"/\" + MusicId + \".mp3\";\n                            Extra({\n                                title: pdfh(item, \".name&&Text\") + ' - ' + pdfh(item, \".singer&&Text\"),\n                                img: $.require('image?rule=歌词适配')('365'),\n                                content: '365',\n                                zyid: 'undefined'\n                            }, r1, 0, {\n                                names: [ts[1]],\n                                urls: [url + '#isMusic=true#']\n                            });\n                        }\n                    }\n                    break;\n\n\n\n\n\n\n                case 'dj1':\n                    u = \"http://www.zzzdj.com\";\n                    list = pdfa(fetchPC(u + \"/music/search-\" + keyword + \"?cat_id=0&page=\" + MY_PAGE), \"body&&tbody&&tr\");\n                    for (item of list) {\n                        Extra({\n                            title: item.match(/alt=\"(.+?)\"/)[1],\n                            img: u + item.match(/src=\"(.+?)\"/)[1],\n                            content: 'dj1',\n                            zyid: item.match(/data-id=\"(\\d+)\"/)[1] + '#dj1'\n                        }, r1);\n                    }\n                    break;\n\n\n\n                case 'dj2':\n                    list = pdfa(fetchPC(\"https://www.djuu.com/search?musicname=\" + keyword + \"&list=2&cid=0&page=\" + MY_PAGE), \"body&&.list_musiclist&&tr[class]\");\n                    for (item of list) {\n                        Extra({\n                            title: item.match(/title=\"(.+?)\"/)[1],\n                            img: \"https:\" + item.match(/src=\"(.+?)\"/)[1],\n                            content: 'dj2',\n                            zyid: item.match(/value=\"(\\d+)\"/)[1] + '#dj2'\n                        }, r1);\n                    }\n                    break;\n\n\n\n                case 'dj3':\n                    u = \"http://www.laladj.com\";\n                    list = pdfa(fetchPC(u + \"/search?search=\" + keyword + \"&page=\" + MY_PAGE), \"body&&.list_musiclist&&tr[class]\");\n                    for (item of list) {\n                        Extra({\n                            title: pdfh(item, \".t1&&Text\"),\n                            img: u + item.match(/src=\"(.+?)\"/)[1],\n                            content: 'dj3',\n                            zyid: item.match(/value=\"(\\d+)\"/)[1] + '#dj3'\n                        }, r1);\n                    }\n                    break;\n\n\n\n                case 'dj4':\n                    list = pdfa(fetchPC(\"https://m.ahadj.com/search/?key=\" + keyword + \"&page=\" + MY_PAGE + \".html\"), \"body&&.yinyue_list&&li\");\n                    for (item of list) {\n                        title = pdfh(item, \"h3&&Text\");\n                        url = \"https://st.92ku.com/zwcs/\" + title + \".mp4\";\n                        Extra({\n                            title: title,\n                            img: pdfh(item, \"img&&src\"),\n                            content: 'dj4',\n                            zyid: pdfh(item, \"a,0&&href\").replace(/\\D/g, '') + '#dj4'\n                        }, r1, 0, {\n                            names: [ts[0]],\n                            urls: [url + '#isMusic=true#']\n                        });\n                    }\n                    break;\n\n\n\n                case 'dj5':\n                    u = 'https://www.dj.net/';\n                    _ = post(u + 'search.php?mod=music&formhash=8c964e8a&srchtxt=' + encodeStr(keyword, 'GBK') + '&searchsubmit=yes', {\n                        headers: {\n                            'content-type': 'text/html; charset=gbk',\n                        },\n                        redirect: false,\n                        onlyHeaders: true\n                    });\n                    url = u + JSON.parse(_).headers.location[0] + \"&page=\" + MY_PAGE;\n                    list = pdfa(fetch(url), \"body&&.music-list&&li\");\n                    for (item of list) {\n                        Extra({\n                            title: pdfh(item, \"a,1&&Text\"),\n                            img: u + pdfh(item, \"img&&src\").replace(\"&size=small\", \"\"),\n                            content: 'dj5',\n                            zyid: pdfh(item, \"a,1&&href\").match(/id=(\\d+)/)[1] + '#dj5'\n                        }, r1);\n                    }\n                    break;\n\n\n\n                case 'dj6':\n                    u = 'http://www.36dj.com/e/search/';\n                    _ = post(u + 'index.php', {\n                        body: {\n                            classid: '1,2,3,4',\n                            keyboard: keyword,\n                            submit: '',\n                            show: 'title',\n                            tempid: '1'\n                        },\n                        redirect: false,\n                        onlyHeaders: true\n                    });\n                    u += JSON.parse(_).headers.location[0] + \"&page=\" + (MY_PAGE - 1);\n                    list = pdfa(fetch(u), \"body&&#playlist&&li\");\n                    for (item of list) {\n                        Extra({\n                            title: pdfh(item, \"a,0&&Text\"),\n                            img: $.require('image?rule=歌词适配')('dj6'),\n                            content: 'dj6',\n                            zyid: item.match(/value=\"(\\d+)\"/)[1] + '#dj6'\n                        }, r1);\n                    }\n                    break;\n\n\n\n                case 'dj7':\n                    u = 'https://www.7idj.com/e/search/'\n                    _ = post(u + 'index.php', {\n                        body: {\n                            keyboard: keyword,\n                            show: 'title'\n                        },\n                        redirect: false,\n                        onlyHeaders: true\n                    });\n                    u += JSON.parse(_).headers.location[0] + \"&page=\" + (MY_PAGE - 1);\n                    list = pdfa(fetch(u), \"body&&li[data-id]\");\n                    for (item of list) {\n                        Extra({\n                            title: pdfh(item, \"a,0&&Text\"),\n                            img: $.require('image?rule=歌词适配')('dj7'),\n                            content: 'dj7',\n                            zyid: item.match(/data-id=\"(\\d+)\"/)[1] + '#dj7'\n                        }, r1);\n                    }\n                    break;\n\n\n\n                case 'dj8':\n                    u = 'https://www.dju8.com/';\n                    item = fetchPC(u + 'key/ml_' + encodeStr(keyword, 'GBK') + '_' + MY_PAGE + '.html', {\n                        headers: {\n                            'content-type': 'text/html; charset=gb2312',\n                            'referer': u\n                        }\n                    });\n                    list = pdfa(item, \"body&&#djour&&li[onmouseover]\");\n                    for (item of list) {\n                        Extra({\n                            title: pdfh(item, \"a,0&&Text\"),\n                            img: $.require('image?rule=歌词适配')('dj8'),\n                            content: 'dj8',\n                            zyid: item.match(/value=\"(\\d+)\"/)[1] + '#dj8'\n                        }, r1);\n                    }\n                    break;\n\n\n\n                case 'dj9':\n                    u = 'https://www.djyyy.com/search.php?ac=dj&key=' + keyword + '&pages=' + MY_PAGE;\n                    list = pdfa(fetchPC(u), \"body&&li[data-id] \");\n                    for (item of list) {\n                        Extra({\n                            title: pdfh(item, \"a,0&&Text\"),\n                            img: $.require('image?rule=歌词适配')('dj9'),\n                            content: 'dj9',\n                            zyid: item.match(/data-id=\"(\\d+)\"/)[1] + '#dj9'\n                        }, r1);\n                    }\n                    break;\n\n\n\n\n\n\n                default:\n                    d.push({\n                        title: \"接口错误~\",\n                        url: \"hiker://empty\",\n                        col_type: \"text_center_1\",\n                    });\n                    break;\n            }\n            return total1 || ((MY_PAGE - 1) * total2 + list.length);\n            break;\n        default:\n            d.push({\n                title: \"没有可以搜索歌单的接口~\",\n                url: \"hiker://empty\",\n                col_type: \"text_center_1\",\n            });\n            break;\n    }\n}\n\nfunction lazy(platform, t1, t2, t3) {\n    let _ = t1;\n    t1 = _.songId || _.sourceListId;\n    t2 = t2 && t2 != \"0\";\n    t3 = t3 && t3 != \"0\";\n    switch (String(_.content)) {\n        case 'bd':\n            _ = qianqian(\"song/tracklink\", {\n                TSID: t1\n            });\n            if (t3) return _.path;\n            return [_.path, _.lyric, 0];\n            break;\n\n\n\n        case 'zz':\n            u = 'https://zz123.com';\n            _ = JSON.parse(post(u + '/ajax/', {\n                body: \"act=songinfo&id=\" + t1 + \"&lang=\"\n            })).data;\n            if (t3) return _.mp3;\n            return [_.mp3, _.lrc, 0];\n            break;\n\n\n\n        case 'kz':\n            u = [\n                \"https://hayqbhgr.slider.kz\",\n                t1, _.t2, _.t3, _.t4 + \".mp3\"\n            ].join(\"/\");\n            if (t3) return u;\n            return [u, \"\", 0];\n            break;\n\n\n\n        case 'ni':\n            u = \"https://www.hifini.com/\";\n            /*\n                        item = executeWebRule(u + \"thread-\" + t1 + '.htm', $.toString(() => {\n                            let bodyHTML = String(document.body.innerHTML);\n                            return JSON.stringify([\n                                ap4.music.url,\n                                bodyHTML.replace(/^[\\s\\S]+?<\\/h5>|<h5[^>]*>[\\s\\S]+/gi, \"\")\n                            ]);\n                        }), {\n                            timeout: 3000,\n                            blockRules: ['sign.htm', 'b*.js', '.css', '.jpg', '.png', '.gif', '.svg', '.ico', '.otf', '.woff2']\n                        });\n                        [url, lrc] = JSON.parse(item);\n            */\n            function generateParam(data) { // by 风向\n                let charst = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\n                let xorkey = \"95wwwHiFiNicom27\"; // length = 16\n                let bits = \"\"; // bin xor\n                for (let i = 0; i < data.length; i++) {\n                    let key = xorkey.charCodeAt(i % 16);\n                    let uin = data.charCodeAt(i) ^ key;\n                    bits += uin.toString(2).padStart(8, '0');\n                }\n                while (bits.length % 5) bits += \"0\";\n                let b32t = \"\"; // base 32\n                for (let i = 0; i < bits.length; i += 5) {\n                    let chunk = bits.substring(i, i + 5);\n                    b32t += charst[parseInt(chunk, 2)];\n                }\n                while (b32t.length % 8) b32t += \"=\";\n                return b32t.replace(/=/g, 'HiFiNiYINYUECICHANG');\n            }\n            item = fetchPC(u + \"thread-\" + t1 + '.htm');\n            eval('url = ' + item.match(/url\\: ('.*'\\)?),/i)[1]);\n            url = /^https?/i.test(url) ? url : (u + url);\n            if (t3) return url;\n            lrc = item.split(\"</h5>\")[1].split(\"<h5\")[0];\n            return [url, lrc, 0];\n            break;\n\n\n\n        case 'g3':\n            u = \"https://www.gggmusic.com/\";\n            item = pdfh(fetch(u + \"thread-\" + t1 + \".htm\"), \"div.message.break-all&&Html\");\n            eval(\"url=\" + item.match(/url:\\s*([^\\n,]+)/)[1].replace(\"base64_decode\", \"base64Decode\"));\n            url = /^https?/i.test(url) ? url : (u + url);\n            if (t3) return url;\n            lrc = item.split(\"</h5>\")[1].split(\"<h5\")[0];\n            return [url, lrc, 0];\n            break;\n\n\n\n        case 'qy':\n            u = \"https://www.qqyin.com/?plugin=xmusic_like&do=playmusic&articleId=\" + t1;\n            _ = JSON.parse(fetch(u))[0];\n            url = _.url || _.downlink;\n            lrc = _.lrc || _.lyric;\n            if (t3) return url;\n            return [url, lrc, 0];\n            break;\n\n\n\n\n\n\n\n\n        case 'km':\n            u = \"https://www.kumeiwp.com/file/\" + t1 + \".html\";\n            url = pdfh(fetch(u), \"source,0&&src\");\n            if (t3) return url;\n            if (t2) {\n                return $([ts[1]], 1, '选择下载音质').select((url) => {\n                    return 'download://' + url;\n                }, url);\n            }\n            return JSON.stringify({\n                urls: [url + '#isMusic=true#'],\n                lyric: \"\"\n            });\n            break;\n\n\n\n\n\n\n        case 'bz':\n            item = fetch(\"https://debenzi.com/u/\" + t1 + \"/\");\n            url = pdfh(item, \"audio&&src\");\n            if (t3) return url;\n            if (t2) {\n                return $([ts[1]], 1, '选择下载音质').select((url) => {\n                    return 'download://' + url;\n                }, url);\n            }\n            lrc = pdfh(item, \".entry-content&&Html\").split(\"<strong>歌词：</strong>\")[1];\n            return JSON.stringify({\n                urls: [url + '#isMusic=true#'],\n                lyric: Lrc(lrc)\n            });\n            break;\n\n\n\n        case 'st':\n            item = fetchPC(\"http://www.songtaste.co/song/\" + t1);\n            url = pdfh(item, \"source,0&&src\");\n            if (t3) return url;\n            if (t2) {\n                return $([ts[1]], 1, '选择下载音质').select((url) => {\n                    return 'download://' + url;\n                }, url);\n            }\n            eval(String(item.match(/lrc = `[\\s\\S]*?`;/)[0]));\n            return JSON.stringify({\n                urls: [url + '#isMusic=true#'],\n                lyric: Lrc(lrc)\n            });\n            break;\n\n\n\n        case 'blm':\n            u = 'https://blackblm.bailemi.com/index.php/dance/play/id/' + t1;\n            _ = JSON.parse(fetch(u));\n            url = _.downurl || _.playurl;\n            if (t2) {\n                return $([ts[1]], 1, '选择下载音质').select((url) => {\n                    return 'download://' + url;\n                }, url);\n            }\n            return url + '#isMusic=true#';\n            break;\n\n\n\n        case 'fp':\n            url = JSON.parse(fetch(\"https://www.fangpi.net/api/play_url?id=\" + t1 + \"&json=1\")).data.url;\n            if (t2) {\n                return $([ts[1]], 1, '选择下载音质').select((url) => {\n                    return 'download://' + url;\n                }, url);\n            }\n            return JSON.stringify({\n                urls: [url + '#isMusic=true#'],\n                lyric: \"https://www.fangpi.net/download/lrc/\" + t1\n            });\n            break;\n\n\n\n        case 'ht':\n            u = \"http://m.htqyy.com/play/\" + t1;\n            code = executeWebRule(u, $.toString(() => {\n                return code;\n            }), {\n                blockRules: ['.js', '.css', '.jpg', '.png', '.gif', '.svg', '.ico']\n            });\n            url = \"http://f5.htqyy.com/play9/\" + t1 + \"/mp3/\" + code;\n            if (t2) {\n                return $([ts[1]], 1, '选择下载音质').select((url) => {\n                    return 'download://' + url;\n                }, url);\n            }\n            return JSON.stringify({\n                urls: [url + '#isMusic=true#'],\n                headers: [{\n                    referer: u\n                }]\n            });\n            break;\n\n\n\n        case '1t':\n            u = \"https://www.1ting.com\";\n            path = executeWebRule(`https://h5.1ting.com/song/` + t1, $.toString(() => {\n                return g_song_meta.song_path;\n            }), {\n                blockRules: ['.js', '.css', '.jpg', '.png', '.gif', '.svg', '.ico']\n            });\n            url = u + \"/api/audio?\" + path;\n            if (t2) {\n                return $([ts[1]], 1, '选择下载音质').select((url, head) => {\n                    u = fetch(url, {\n                        headers: {\n                            referer: u\n                        },\n                        redirect: false,\n                        onlyHeaders: true\n                    });\n                    url = JSON.parse(u).headers.location[0];\n                    return 'download://' + url;\n                }, url, u);\n            }\n            lrc = u + \"/touch/api/lyric/\" + t1;\n            lrc = JSON.parse(fetch(lrc)).lyric_content;\n            if (!lrc.match(/\\[\\d+:\\d+/))\n                lrc = Lrc(lrc);\n            return JSON.stringify({\n                urls: [url + '#isMusic=true#'],\n                headers: [{\n                    referer: u\n                }],\n                lyric: lrc\n            });\n            break;\n\n\n\n        case '9t':\n            u = \"http://new.9sky.com/api/song/detail?id=\" + t1 + \"&is_login=N\";\n            _ = JSON.parse(fetch(u)).data;\n            if (t2) {\n                return $([ts[1]], 1, '选择下载音质').select((url) => {\n                    return 'download://' + url;\n                }, _.song_url);\n            }\n            return JSON.stringify({\n                urls: [_.song_url + '#isMusic=true#'],\n                lrc: _.lyric_url || Lrc(_.design_notes)\n            });\n            break;\n\n\n\n        case '5nd':\n            item = fetch(`http://m.5nd.com/ting/${t1}.html`);\n            eval(item.match(/mp3 = .*?;/)[0]);\n            url = 'http://mpge.5nd.com/' + mp3;\n            if (t2) {\n                return $([ts[1]], 1, '选择下载音质').select((url) => {\n                    return 'download://' + url;\n                }, url);\n            }\n            lrc = pdfh(item, \"#lrccont&&Html\").replace(/<\\!--.*?-->|<br\\/?>/gi, '\\n')\n            return JSON.stringify({\n                urls: [url + '#isMusic=true#'],\n                lyric: lrc\n            });\n            break;\n\n\n\n        case 'biu':\n            url = JSON.parse(fetch(\"https://biu.moe/Song/playSID/sid/\" + t1)).urlinfo.url;\n            if (t2) {\n                return $([ts[1]], 1, '选择下载音质').select((url) => {\n                    return 'download://' + url;\n                }, url);\n            }\n            lrc = pdfh(fetch(\"https://biu.moe/s\" + t1), \".am-popup-bd&&Html\").replace(/<(button).*?\\1>|<\\/?br\\/?>/gi, \"\\n\");\n            return JSON.stringify({\n                urls: [url + '#isMusic=true#'],\n                lyric: lrc\n            });\n            break;\n\n\n\n\n\n\n        case 'dj1':\n            item = fetchPC(\"http://www.zzzdj.com/music/info-\" + t1);\n            url = pdfh(item, \"audio&&src\");\n            if (t2) {\n                return $([ts[0]], 1, '选择下载音质').select((url) => {\n                    return 'download://' + url;\n                }, url);\n            }\n            return url + '#isMusic=true#';\n            break;\n\n\n\n        case 'dj2':\n            uri = JSON.parse(fetchPC(\"https://www.djuu.com/wap/play/play?id=\" + t1)).data.listenurl;\n            url = `http://mp4.djuu.com/${uri}.m4a`;\n            if (t2) {\n                return $([ts[0]], 1, '选择下载音质').select((url) => {\n                    return 'download://' + url;\n                }, url);\n            }\n            return url + '#isMusic=true#';\n            break;\n\n\n\n        case 'dj3':\n            url = JSON.parse(fetchPC(\"http://www.laladj.com/index/index/get_cookie\", {\n                \"headers\": {\n                    \"Cookie\": `song_list=think:[{\"id\":\"${t1}\"}];`\n                }\n            })).data[0].path;\n            if (t2) {\n                return $([ts[0]], 1, '选择下载音质').select((url) => {\n                    return 'download://' + url;\n                }, url);\n            }\n            return url + '#isMusic=true#';\n            break;\n\n\n\n        case 'dj4':\n            uri = executeWebRule(\"https://www.ahadj.com/music/\" + t1 + \".html\", $.toString(() => {\n                return danceFilePath;\n            }), {\n                blockRules: ['.js', '.css', '.jpg', '.png', '.gif', '.svg', '.ico']\n            });\n            url = `https://st.92ku.com/` + uri;\n            if (t2) {\n                return $([ts[0]], 1, '选择下载音质').select((url) => {\n                    return 'download://' + url;\n                }, url);\n            }\n            return url + '#isMusic=true#';\n            break;\n\n\n\n        case 'dj5':\n            _ = post('https://m.dj.net/template/zhzh_dzmusic/ajax/?action=geturl', {\n                body: \"id=\" + t1\n            });\n            url = \"https://djnet.src.dj.net:4431/\" + JSON.parse(_).data[0].src;\n            if (t2) {\n                return $([ts[0]], 1, '选择下载音质').select((url) => {\n                    return 'download://' + url;\n                }, url);\n            }\n            return url + '#isMusic=true#';\n            break;\n\n\n\n        case 'dj6':\n            uri = executeWebRule(\"http://www.36dj.com/play/\" + t1 + \".html\", $.toString(() => {\n                return info.playurl;\n            }), {\n                blockRules: ['.js', '.css', '.jpg', '.png', '.gif', '.svg', '.ico', '/e/']\n            });\n            url = `http://tn1.72djapp.cn:8399/` + uri;\n            if (t2) {\n                return $([ts[0]], 1, '选择下载音质').select((url) => {\n                    return 'download://' + url;\n                }, url);\n            }\n            return url + '#isMusic=true#';\n            break;\n\n\n\n        case 'dj7':\n            url = executeWebRule(\"https://www.7idj.com/dj/\" + t1 + \".html\", $.toString(() => {\n                return playurl;\n            }), {\n                blockRules: ['.js', '.css', '.jpg', '.png', '.gif', '.svg', '.ico']\n            });\n            if (t2) {\n                return $([ts[0]], 1, '选择下载音质').select((url) => {\n                    return 'download://' + url;\n                }, url);\n            }\n            return url + '#isMusic=true#';\n            break;\n\n\n\n        case 'dj8':\n            u = 'https://www.dju8.com';\n            item = u + '/ik/z/?' + executeWebRule(u + '/disco/' + t1 + '/', $.toString(() => {\n                return furl;\n            }), {\n                blockRules: ['.js', '.css', '.jpg', '.png', '.gif', '.svg', '.ico']\n            });\n            item = fetchCodeByWebView(item, {\n                blockRules: ['.css', '.jpg', '.png', '.gif', '.svg', '.ico']\n            });\n            url = pdfh(item, \"audio&&src\");\n            if (t2) {\n                return $([ts[0]], 1, '选择下载音质').select((url) => {\n                    return 'download://' + url;\n                }, url);\n            }\n            return url + '#isMusic=true#';\n            break;\n\n\n\n        case 'dj9':\n            url = executeWebRule('https://m.djyyy.com/play/' + t1 + '.html', $.toString(() => {\n                return playurl;\n            }), {\n                blockRules: ['.js', '.css', '.jpg', '.png', '.gif', '.svg', '.ico']\n            });\n            if (t2) {\n                return $([ts[0]], 1, '选择下载音质').select((url) => {\n                    return 'download://' + url;\n                }, url);\n            }\n            return url + '#isMusic=true#';\n            break;\n    }\n}\n$.exports = {\n    mv: function(_, t1) {\n        return [\n            [],\n            []\n        ];\n    },\n    getLyric: function(_, t1) {\n        return \"\";\n    },\n    search,\n    lazy\n}"},{"col_type":"movie_3","name":"③程序首页","path":"home","rule":"js:\neval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配', {})).rule);\naddListener('onRefresh', $.toString(() => {\n    clearMyVar('home_page');\n}));\nlet x5_0 = {\n    col_type: \"x5_webview_single\",\n    url: empty,\n    desc: '0',\n    extra: {\n        canBack: true\n    }\n}\ntry {\n    // MY_PAGE == 1 && (d = [], Loading());\n    iTag = storage0.getMyVar(platform + \"_iTag\");\n    if (iTag == \"\")\n        iTag = {},\n        $.require(platform + '?rule=歌词适配').iTag();\n    let tid = getMyVar('tid', '推荐');\n    let trr = Object.keys(iTag[tid]);\n    let tii = getMyVar('tii', '0');\n    uri = iTag[tid][trr[tii]];\n    let trd = trr[tii];\n\n    themeType = \"home\";\n    eval(JSON.parse(fetch('hiker://page/theme3?rule=歌词适配', {})).rule);\n    let data = getData1(themeType, _X5());\n    if (_X5()) {\n        if (MY_PAGE == 1) {\n            d = [{\n                col_type: \"x5_webview_single\",\n                url: 'https://m.baidu.com',\n                desc: 'screen-133&&float',\n                extra: {\n                    canBack: true,\n                    ua: \"Mozilla/5.0 (Linux; Android 13; Mi 10 Pro Build/TKQ1.221114.001; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/97.0.4692.98 Mobile Safari/537.36 T7/13.34 SearchCraft/3.10.1 (Baidu; P1 13)\"\n                }\n            }];\n            name = \"网站整合\";\n            author = \"Thomas喲\";\n            img = \"hiker://images/rule_type_all\";\n            eval(getData2({\n                data: '#主题切换#__{Rich:true,Strong:true,Color:\"#62a6fb\"}',\n                type: \"scroll_button\"\n            }));\n            d.push({\n                title: Rich(Strong(Color(\"百度一下\"))),\n                url: empty,\n                col_type: \"scroll_button\"\n            });\n            d.push({\n                title: \"网站设置\",\n                url: \"toast://完善中~\",\n                col_type: \"scroll_button\"\n            });\n        } else d = [];\n    } else {\n        d = [x5_0];\n        eval(String(data.map(_ => {\n            return getData2(_);\n        }).join(\"\\n\")));\n    }\n} catch (fetch_error) {\n    d = [x5_0, {\n        title: \"网络异常 / 接口崩溃了\",\n        desc: \"换个接口看看。\",\n        url: $(\"\\n\\n\" + fetch_error + \"\\n\\n\").confirm(() => {\n            return 'hiker://empty';\n        }),\n        col_type: 'text_center_1',\n        extra: {\n            lineVisible: false\n        }\n    }];\n    platforms.slice(1, 8)\n        .filter(title => title != platform)\n        .map(title => {\n            d.push({\n                title: title,\n                col_type: 'icon_2_round',\n                img: $.require('image?rule=歌词适配')(title),\n                url: $('#noLoading#').lazyRule((title) => {\n                    putMyVar('platform', title);\n                    clearMyVar('home_page');\n                    clearMyVar('tid');\n                    clearMyVar('tii');\n                    refreshPage();\n                    return 'hiker://empty';\n                }, title)\n            });\n        });\n}\nMY_PAGE == 1 ? setPreResult(d) : setResult(d);\ndeleteItemByCls('loading_gif');\n\n\n\n\n\n// 小程序没有更新，对解析进行检测。\nif ((getMyVar('Rule_noupdate', '') == '1' || getItem('no_update', '0') == '1') && MY_PAGE == 1) {\n    const {\n        getJxlist,\n        setJxlist\n    } = $.require('jiexi?rule=歌词适配');\n    let kg_list1 = getJxlist('kg');\n    let kg_list2 = kg_list1.map(_ => md5(_.title + _.url));\n    let kg_item1 = kg_list2.indexOf(\"d734c1d339b9a882310fa31725841286\");\n    let kg_item2 = kg_list2.indexOf(\"c877ae72b97bc26720ad8b1a39362d47\");\n\n\n\n    // 清除失效缓存 & 备份收藏数据\n    let timeout = $.require('collection2?rule=歌词适配').getData(\"bak\");\n    if (Number(getMyVar('url_timeout', '0')) < timeout) {\n        let s1 = \"hiker://files/rules/Thomas/gcsp1999/songCache.json\";\n        if (fileExist(s1)) {\n            let s0 = 0;\n            let s2 = JSON.parse(readFile(s1));\n            for (let k1 in s2) {\n                let s3 = s2[k1]; // qq\n                for (let k2 in s3) {\n                    let s4 = s3[k2]; // mid\n                    let s5 = false\n                    for (let k3 of ['128k', '320k', 'flac', 'flac24bit']) {\n                        if (s4[k3]) { // 128k\n                            if (s4[k3].timeout < timeout) {\n                                delete s4[k3];\n                                s0++;\n                            } else {\n                                s5 = true\n                            }\n                        }\n                    }\n                    if (s5) {\n                        s3[k2] = s4;\n                    } else {\n                        delete s3[k2];\n                    }\n                }\n                s2[k1] = s3;\n            }\n            log(\"已删除 失效链接缓存*\" + s0);\n            saveFile(s1, JSON.stringify(s2, 0, 1));\n        }\n        putMyVar('url_timeout', timeout + 6e5);\n    }\n\n\n\n    // kg_token保活\n    function kg_refresh_token(_) {\n        let jiexi_aes = aesDecode('hk6666666109', _.jiexi);\n        [mat, userid, token, appid, signkey] = jiexi_aes.match(/[\\s\\S]+\"(\\d+)\",\\s+\"([^\"]+)\",\\s+\"(\\d*)\",\\s+\"([^\"]*)\"[\\s\\S]*/);\n        let new_token = $.require(\"kg?rule=歌词适配\").refresh_token(userid, token, appid, signkey);\n        if (new_token == 20018) {\n            log(\"kg_refresh_token...\\n\" + _.title + \"：token获取失败，可能是登录掉了，请重新配置\");\n            return _;\n        }\n        log(\"kg_refresh_token...\\n\" + _.title + \"：token获取\" + (new_token ? (\"成功  |  是否更改：\" + (token != new_token)) : \"失败，原因未知\"));\n        _.jiexi = aesEncode('hk6666666109', jiexi_aes.replace(token, new_token || token));\n        return _;\n    }\n    if (kg_item1 != -1 && !getMyVar('kg_item1')) {\n        kg_list1[kg_item1] = kg_refresh_token(kg_list1[kg_item1]);\n    }\n    if (kg_item2 != -1 && !getMyVar('kg_item2')) {\n        kg_list1[kg_item2] = kg_refresh_token(kg_list1[kg_item2]);\n    }\n    if (\n        (kg_item1 != -1 || kg_item2 != -1) &&\n        (!getMyVar('kg_item1') || !getMyVar('kg_item2'))\n    ) {\n        if (kg_item1 != -1) putMyVar('kg_item1', '1');\n        if (kg_item2 != -1) putMyVar('kg_item2', '2');\n        setJxlist('kg', kg_list1);\n    }\n\n\n    // qq_token保活\n    let qq_lite = getJxlist('qq').find(_ => md5(_.title + _.url) == \"e2c1a4bf8d58d1703a5e8109e1f90cc0\");\n    if (qq_lite && !getMyVar('update2')) {\n        putMyVar('update2', '0');\n        if (qq_lite.time + 5.3e8 < timeout) {\n            let cookie = aesDecode('hk6666666109', qq_lite.jiexi).match(/Cookie: \"([^\"]+)/)[1];\n            $.require(\"qq?rule=歌词适配\").refresh_login(cookie);\n        } else {\n            log(\"qq_refresh_token...\\nQQ音乐：六天刷新一次，还没到刷新时间~\");\n        }\n    }\n\n\n\n\n    // 酷狗概念版 每日签到领会员 弹窗提示\n    let kg_lite, time = Number($.dateFormat(timeout, 'yyyyMMdd'));\n    if (getMyVar('update1', getItem('update1', '1')) == '1' && kg_item2 != -1) {\n        kg_lite = kg_list1[kg_item2];\n        if ($.dateFormat(kg_lite.time, 'yyyyMMdd') < time) {\n            confirm({\n                title: '[酷狗概念版] 听歌领会员',\n                content: '每日听歌即可领取1日酷狗概念版VIP',\n                confirm: $.toString((_) => {\n                    let mat = aesDecode('hk6666666109', _.jiexi).match(/\"(\\d+)\",\\s+\"([^\"]+)\",\\s+\"\\d*\",\\s+\"([^\"]*)\"/);\n                    putMyVar('update1', '0');\n                    return $.require(\"kg?rule=歌词适配\").Lite_Signin(mat[1], mat[2], mat[3], true);\n                }, kg_lite),\n                cancel: $.toString((jxlist, i, _, setJxlist) => {\n                    _.time = new Date().getTime();\n                    _.signin = 1;\n                    jxlist[i] = _;\n                    setJxlist('kg', jxlist);\n                    putMyVar('update1', '0');\n                    return \"toast://今日不再提示，请在设置页手动签到\"\n                }, kg_list1, kg_item2, kg_lite, setJxlist)\n            });\n        } else {\n            putMyVar('update1', '0'); // 今天已经签到过了\n        }\n    } else {\n        putMyVar('update1', '0'); // 没有概念版解析 / 不提示\n    }\n}"},{"col_type":"movie_3","name":"⑦规则编辑","path":"ruleEdit","rule":"js:\neval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配', {})).rule);\nlet d = [];\nlet jx_s1 = getMyVar('jx_s1', '0') == '0';\nlet jx_s2 = getMyVar('jx_s2', '0') == '0';\nlet jx_s3 = getMyVar('jx_s2', '0') == '1';\nlet jx_type = getMyVar('jx_type', 'kw');\nlet jx_open = getMyVar('jx_open', '1') == '1';\nlet jx_down = getMyVar('jx_down', '0') == '1';\nlet jx_tid = getMyVar('jx_tid', MY_PARAMS.new ? '基本' : '预览');\nd.push({\n    title: '<span style=\"color:#ff6601\"><b>解析平台</b></span>',\n    url: $(platforms.slice(1, 6).concat(\"qt\").map(title => {\n        if (title == jx_type)\n            title = Rich(Strong(Color(title)));\n        return title\n    }), 2, '选择接口平台').select(() => {\n        if (!input.match(/^‘‘’’/)) {\n            putMyVar('jx_type', input);\n            refreshPage(false);\n        }\n        return 'hiker://empty';\n    }),\n    img: $.require('image?rule=歌词适配')(jx_type),\n    col_type: 'icon_small_3'\n});\nd.push({\n    title: '<span style=\"color:#ff6601\"><b>启用试听</b></span>',\n    url: $('#noLoading#').lazyRule((K, open) => {\n        if (K) {\n            putMyVar('jx_open', open);\n            refreshPage(false);\n            return 'hiker://empty';\n        } else {\n            return $(\"\", \"请输入激活密匙\").input((open) => {\n                if (md5(input) == getMyVar('jx_m1')) {\n                    putMyVar('jx_s1', '0');\n                    putMyVar('jx_open', open);\n                    refreshPage(false);\n                    return 'hiker://empty';\n                }\n                return \"toast://激活失败\";\n            }, open);\n        }\n    }, jx_s1, jx_open ? '0' : '1'),\n    img: 'http://123.56.105.145/tubiao/messy/' + (jx_open ? 55 : 63) + '.svg',\n    col_type: 'icon_small_3'\n});\nd.push({\n    title: '<span style=\"color:#ff6601\"><b>启用下载</b></span>',\n    url: $('#noLoading#').lazyRule((K, down) => {\n        if (K) {\n            putMyVar('jx_down', down);\n            refreshPage(false);\n            return 'hiker://empty';\n        } else {\n            return $(\"\", \"请输入激活密匙\").input((down) => {\n                if (md5(input) == getMyVar('jx_m1')) {\n                    putMyVar('jx_s1', '0');\n                    putMyVar('jx_down', down);\n                    refreshPage(false);\n                    return 'hiker://empty';\n                }\n                return \"toast://激活失败\";\n            }, down);\n        }\n    }, jx_s1, jx_down ? '0' : '1'),\n    img: 'http://123.56.105.145/tubiao/messy/' + (jx_down ? 55 : 63) + '.svg',\n    col_type: 'icon_small_3'\n});\n[\"预览\", \"基本\", \"音质\", \"解析\", \"拓展\"].map(name => {\n    let i = jx_tid == name\n    d.push({\n        title: Rich(Strong(i ? Color(name) : name)),\n        url: $('#noLoading#').lazyRule((tid, tii, feg) => {\n            if (tii) {\n                putMyVar('jx_tid', tid);\n                refreshPage(false);\n            }\n            return 'hiker://empty';\n        }, name, !i, !jx_s2),\n        col_type: 'text_5'\n    });\n});\nswitch (jx_tid) {\n    case '预览':\n        d.push({\n            title: Strong(getMyVar('jx_title')),\n            desc: [\"mp3\", \"hq\", \"sq\", \"hr\", /* \"zq\"*/ ].map(t => getMyVar(\"jx_\" + t) != \"\" ? '★' : '☆').join(\"\"),\n            url: 'hiker://empty',\n            col_type: 'avatar',\n            img: getMyVar('jx_img') || $.require('image?rule=歌词适配')()\n        });\n        d.push({\n            title: getMyVar('jx_desc') + '丨' + getMyVar('jx_url'),\n            url: 'hiker://empty',\n            col_type: 'text_1',\n            extra: {\n                lineVisible: false\n            }\n        });\n        d.push({\n            col_type: 'line_blank'\n        });\n        d.push({\n            title: getMyVar('jx_content', '\\n\\n\\n\\n\\n').replace(/\\n/g, '<br>'),\n            url: 'hiker://empty',\n            col_type: 'rich_text'\n        });\n        d.push({\n            col_type: 'line_blank'\n        });\n        d.push({\n            title: '使用权限',\n            url: $('#noLoading#').lazyRule((K) => {\n                if (K) return 'hiker://empty';\n                return $(\"\", \"请输入密匙\").input(() => {\n                    if (md5(input) == getMyVar('jx_m1')) {\n                        putMyVar('jx_s1', '0');\n                        refreshPage(false);\n                        return \"toast://验证成功\";\n                    }\n                    return \"toast://验证失败\";\n                });\n            }, jx_s1),\n            img: 'http://123.56.105.145/tubiao/messy/' + (jx_s1 ? 55 : 63) + '.svg',\n            col_type: 'icon_2_round',\n        });\n        d.push({\n            title: '编辑权限',\n            url: $('#noLoading#').lazyRule((K) => {\n                if (K) return 'hiker://empty';\n                return $(\"\", \"请输入密匙\").input(() => {\n                    if (md5(input) == getMyVar('jx_m2')) {\n                        putMyVar('jx_s2', '0');\n                        refreshPage(false);\n                        return \"toast://验证成功\";\n                    }\n                    return \"toast://验证失败\";\n                });\n            }, jx_s2),\n            img: 'http://123.56.105.145/tubiao/messy/' + (jx_s2 ? 55 : 63) + '.svg',\n            col_type: 'icon_2_round'\n        });\n        break;\n    case '基本':\n        [\n            ['必填，源标识', 'url'],\n            ['必填，源名称', 'title'],\n            ['选填，源图标', 'img'],\n            ['选填，源分组', 'desc'],\n            ['选填，源注释', 'content']\n        ].map([a, b] => {\n            d.push({\n                desc: a,\n                col_type: 'input',\n                extra: {\n                    defaultValue: getMyVar(\"jx_\" + b),\n                    onChange: `putMyVar(\"jx_${b}\", input)`,\n                    highlight: true\n                }\n            });\n        });\n        break;\n    case '音质':\n        [\n            ['选填，标准音质。例：t2=\"128k\"', 'mp3'],\n            ['选填，高品音质。例：t2=\"320k\"', 'hq'],\n            ['选填，无损音质。例：t2=\"2000k\"', 'sq'],\n            ['选填，高品无损。例：t2=\"4000k\"', 'hr'],\n            // ['选填，立体无损。例：t2=\"20000k\"', 'zq']\n        ].map([a, b] => {\n            let _ = {\n                highlight: true\n            }\n            if (jx_s2 || jx_s3) {\n                _.defaultValue = aesDecode('hk6666666109', getMyVar(\"jx_\" + b));\n                _.onChange = $.toString((name) => {\n                    if (input.trim() != \"\") {\n                        putMyVar(name, getPrivateJS(input.trim()));\n                    } else {\n                        putMyVar(name, \"\");\n                    }\n                }, \"jx_\" + b);\n            } else {\n                _.defaultValue = \"没有权限，请解锁。\"\n            }\n            d.push({\n                desc: a,\n                col_type: 'input',\n                extra: _\n            });\n        });\n        break;\n    case '解析':\n        let _ = {\n            highlight: true,\n            type: \"textarea\",\n            height: 7\n        }\n        if (jx_s2 || jx_s3) {\n            _.defaultValue = aesDecode('hk6666666109', getMyVar(\"jx_jiexi\"));\n            _.onChange = $.toString((name) => {\n                if (input.trim() != \"\") {\n                    putMyVar(name, getPrivateJS(input.trim()));\n                } else {\n                    putMyVar(name, \"\");\n                }\n            }, \"jx_jiexi\");\n        } else {\n            _.defaultValue = \"没有权限，请解锁。\"\n        }\n        d.push({\n            desc: '变量：_ & t1 & musicItem\\n\\n说明：可以从音质那里传变量过来(例: t2)\\n\\n定义url就行，示例：\\nuri = `https://baidu.com?a=${t1}&b=${t2}`;\\nurl = JSON.parse(fetch(uri)).url;',\n            col_type: 'input',\n            extra: _\n        });\n        break;\n    case '拓展':\n        d.push({\n            title: '填写密匙后，可以对音源做一些限制。',\n            desc: '密匙无法追回，填记得住的！',\n            url: 'hiker://empty',\n            col_type: 'text_center_1',\n            extra: {\n                lineVisible: false\n            }\n        });\n        d.push({\n            title: Strong('编辑源的限制'),\n            url: 'hiker://empty',\n            col_type: 'avatar',\n            img: 'hiker://images/home_icon_edit'\n        });\n        d.push({\n            title: '可以看，可以编辑(大爱无疆)',\n            url: $('#noLoading#').lazyRule((K) => {\n                if (K) return 'hiker://empty';\n                return $(\"\", \"请输入密匙\").input(() => {\n                    if (md5(input) == getMyVar('jx_m2')) {\n                        putMyVar('jx_s2', '0');\n                        putMyVar('jx_m2', '');\n                        refreshPage(false);\n                        return \"toast://更改成功\";\n                    }\n                    return \"toast://验证失败\";\n                });\n            }, jx_s2),\n            col_type: 'text_icon',\n            img: 'http://123.56.105.145/tubiao/messy/' + (jx_s2 ? 55 : 63) + '.svg'\n        });\n        d.push({\n            title: '可以看，不能编辑(防止二改)',\n            url: $('#noLoading#').lazyRule((K1, K2) => {\n                if (getMyVar('jx_m2') == \"\") {\n                    return $(\"\", \"请输入密匙\").input(() => {\n                        return $(\"\", \"请确认密匙\").input((input2) => {\n                            if (input == input2) {\n                                putMyVar('jx_s2', '1');\n                                putMyVar('jx_m2', md5(input));\n                                refreshPage(false);\n                                return \"toast://加密成功\";\n                            }\n                            return \"toast://加密失败\";\n                        }, input);\n                    });\n                } else if (K1) {\n                    return $(\"\", \"操作类型：更改密匙\\n请输入原密匙\").input(() => {\n                        if (md5(input) == getMyVar('jx_m2')) {\n                            return $(\"\", \"请输入密匙\").input(() => {\n                                return $(\"\", \"请确认密匙\").input((input2) => {\n                                    if (input == input2) {\n                                        putMyVar('jx_s2', '1');\n                                        putMyVar('jx_m2', md5(input));\n                                        refreshPage(false);\n                                        return \"toast://加密成功\";\n                                    }\n                                    return \"toast://加密失败\";\n                                }, input);\n                            });\n                        }\n                        return \"toast://原密匙验证失败\";\n                    });\n                } else if (K2) {\n                    return $(\"\", \"操作类型：权限降级\\n请输入密匙\").input(() => {\n                        if (md5(input) == getMyVar('jx_m2')) {\n                            putMyVar('jx_s2', '1');\n                            refreshPage(false);\n                            return 'hiker://empty';\n                        }\n                        return \"toast://密匙错误，降级失败\";\n                    });\n                } else {\n                    putMyVar('jx_s2', '1');\n                    refreshPage(false);\n                    return 'hiker://empty';\n                }\n            }, jx_s3, !jx_s2),\n            col_type: 'text_icon',\n            img: 'http://123.56.105.145/tubiao/messy/' + (jx_s2 ? 63 : jx_s3 ? 55 : 63) + '.svg'\n        });\n        d.push({\n            title: '不能看，不能编辑(能用就行)',\n            url: $('#noLoading#').lazyRule((K1, K2) => {\n                if (getMyVar('jx_m2') == \"\") {\n                    return $(\"\", \"请输入密匙\").input(() => {\n                        return $(\"\", \"请确认密匙\").input((input2) => {\n                            if (input == input2) {\n                                putMyVar('jx_s2', '2');\n                                putMyVar('jx_m2', md5(input));\n                                refreshPage(false);\n                                return \"toast://加密成功\";\n                            }\n                            return \"toast://加密失败\";\n                        }, input);\n                    });\n                } else if (K1 && K2) {\n                    return $(\"\", \"操作类型：更改密匙\\n请输入原密匙\").input(() => {\n                        if (md5(input) == getMyVar('jx_m2')) {\n                            return $(\"\", \"请输入密匙\").input(() => {\n                                return $(\"\", \"请确认密匙\").input((input2) => {\n                                    if (input == input2) {\n                                        putMyVar('jx_s2', '2');\n                                        putMyVar('jx_m2', md5(input));\n                                        refreshPage(false);\n                                        return \"toast://加密成功\";\n                                    }\n                                    return \"toast://加密失败\";\n                                }, input);\n                            });\n                        }\n                        return \"toast://原密匙验证失败\";\n                    });\n                } else {\n                    putMyVar('jx_s2', '2');\n                    refreshPage(false);\n                    return 'hiker://empty';\n                }\n            }, !jx_s3, !jx_s2),\n            col_type: 'text_icon',\n            img: 'http://123.56.105.145/tubiao/messy/' + (jx_s2 ? 63 : jx_s3 ? 63 : 55) + '.svg'\n        });\n        d.push({\n            title: Strong('使用源的限制'),\n            url: 'hiker://empty',\n            col_type: 'avatar',\n            img: 'hiker://images/home_icon_code'\n        });\n        d.push({\n            title: '没有验证(不搞花的)',\n            url: $('#noLoading#').lazyRule((K) => {\n                if (K) return 'hiker://empty';\n                return $(\"\", \"请输入密匙\").input(() => {\n                    if (md5(input) == getMyVar('jx_m1')) {\n                        putMyVar('jx_s1', '0');\n                        putMyVar('jx_m1', '');\n                        refreshPage(false);\n                        return \"toast://验证成功\";\n                    }\n                    return \"toast://验证失败\";\n                });\n            }, jx_s1),\n            col_type: 'text_icon',\n            img: 'http://123.56.105.145/tubiao/messy/' + (jx_s1 ? 55 : 63) + '.svg'\n        });\n        d.push({\n            title: '激活验证(验证一下)',\n            url: $('#noLoading#').lazyRule((K) => {\n                if (getMyVar('jx_m1') == \"\") {\n                    return $(\"\", \"请输入密匙\").input(() => {\n                        return $(\"\", \"请确认密匙\").input((input2) => {\n                            if (input == input2) {\n                                putMyVar('jx_s1', '1');\n                                putMyVar('jx_m1', md5(input));\n                                refreshPage(false);\n                                return \"toast://加密成功\";\n                            }\n                            return \"toast://加密失败\";\n                        }, input);\n                    });\n                } else if (K) {\n                    putMyVar('jx_s1', '1');\n                    refreshPage(false);\n                    return 'hiker://empty';\n                } else {\n                    return $(\"\", \"操作类型：更改密匙\\n请输入原密匙\").input(() => {\n                        if (md5(input) == getMyVar('jx_m1')) {\n                            return $(\"\", \"请输入密匙\").input(() => {\n                                return $(\"\", \"请确认密匙\").input((input2) => {\n                                    if (input == input2) {\n                                        putMyVar('jx_s1', '1');\n                                        putMyVar('jx_m1', md5(input));\n                                        refreshPage(false);\n                                        return \"toast://加密成功\";\n                                    }\n                                    return \"toast://加密失败\";\n                                }, input);\n                            });\n                        }\n                        return \"toast://原密匙验证失败\";\n                    });\n                }\n            }, jx_s1),\n            col_type: 'text_icon',\n            img: 'http://123.56.105.145/tubiao/messy/' + (jx_s1 ? 63 : 55) + '.svg'\n        });\n        d.push({\n            title: '时效验证(等待完善)',\n            url: 'hiker://empty',\n            col_type: 'text_icon',\n            img: 'http://123.56.105.145/tubiao/messy/63.svg'\n        });\n        break;\n}\nd.push({\n    title: Rich(Strong(Color('保存并退出'))),\n    desc: '上次编辑：' + $.dateFormat(Number(getMyVar(\"jx_time\")) || new Date().getTime(), 'yyyy-MM-dd hh:mm:ss'),\n    url: $('#noLoading#').lazyRule(() => {\n        if (getMyVar('jx_m2') != \"\") {\n            return $(\"\", \"请输入密匙\").input(() => {\n                if (md5(input) == getMyVar('jx_m2')) {\n                    return $.require(\"jiexi?rule=歌词适配\").setEdit();\n                }\n                return \"toast://验证失败，不支持保存，请左上角手动退出。\";\n            });\n        } else {\n            return $.require(\"jiexi?rule=歌词适配\").setEdit();\n        }\n    }),\n    col_type: 'text_center_1',\n    extra: {\n        lineVisible: false\n    }\n});\nsetResult(d);"},{"col_type":"movie_3","name":"⑥规则列表","path":"ruleList","rule":"js:\neval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配', {})).rule);\nconst {\n    getJxlist,\n    setJxlist\n} = $.require('jiexi?rule=歌词适配');\nlet d = [];\nd.push({\n    title: '新增解析',\n    col_type: 'text_2',\n    url: $('#noLoading#').lazyRule(() => {\n        [\"type\", \"open\", \"down\", \"img\", \"title\", \"desc\", \"url\", \"content\", \"mp3\", \"hq\", \"sq\", \"hr\", \"zq\", \"jiexi\", \"s1\", \"m1\", \"s2\", \"m2\", \"time\", \"tid\", \"uid\"].map(t => {\n            clearMyVar('jx_' + t)\n        });\n        return 'hiker://page/ruleEdit#noHistory##noRecordHistory#?pageTitle=规则编辑&rule=歌词适配'\n    }),\n    extra: {\n        new: 1\n    }\n});\nd.push({\n    title: '分享选中',\n    col_type: 'text_2',\n    url: $('#noLoading#').lazyRule(() => {\n        let zy = storage0.getMyVar(\"jxlist2\", {});\n        let zu = Object.keys(zy);\n        if (zu.length == 0) return \"toast://没有选中解析\";\n        let t1, t2, json = {};\n        if (zu.length == 1) {\n            let _ = zy[zu[0]];\n            if (_.m1 && _.m1 != \"\" && String(_.m1).length == 32) {\n                _.s1 = \"1\";\n                _.open = \"0\";\n                _.down = \"0\";\n            }\n            if (_.m2 && _.m2 != \"\" && String(_.m2).length == 32 && _.s2 == \"0\") {\n                _.s2 = \"2\";\n            }\n            json[_.type] = [_];\n            let t1 = _.type;\n            let t2 = _.title;\n        } else {\n            for (let key of zu) {\n                let _ = zy[key];\n                if (!json[_.type]) {\n                    json[_.type] = [];\n                }\n                if (_.m1 && _.m1 != \"\" && String(_.m1).length == 32) {\n                    _.s1 = \"1\";\n                    _.open = \"0\";\n                    _.down = \"0\";\n                }\n                if (_.m2 && _.m2 != \"\" && String(_.m2).length == 32 && _.s2 == \"0\") {\n                    _.s2 = \"2\";\n                }\n                json[_.type].push(_);\n            };\n        }\n        return $.require(\"jiexi?rule=歌词适配\").getShare(json, true, zu.length, t1, t2);\n    })\n});\nlet jx_platform = getMyVar('jx_platform', 'lib');\nplatforms = platforms.slice(0, 6).concat(\"qt\");\nplatforms.map(platform => {\n    let platform2;\n    if (jx_platform == platform)\n        platform2 = Rich(Strong(Color(platform)));\n    else\n        platform2 = platform;\n    d.push({\n        title: platform2,\n        url: $('#noLoading#').lazyRule((platform) => {\n            if (!platform.match(/^‘‘’’/)) {\n                putMyVar('jx_platform', platform);\n                refreshPage(false);\n            }\n            return 'hiker://empty';\n        }, platform),\n        col_type: 'scroll_button',\n        extra: {\n            longClick: [{\n                title: '删除' + platform.replace('lib', '全部') + '解析',\n                js: $.toString((platform) => {\n                    return $(\"确定删除“\" + platform.replace('lib', '全部') + \"解析”吗？\\n此操作不可逆，请谨慎选择。\").confirm((platform) => {\n                        if (platform == 'lib')\n                            platforms = ['qq', 'wy', 'kg', 'kw', 'mg', 'qt'];\n                        else\n                            platforms = [platform];\n                        for (let platform of platforms) {\n                            deleteFile(\"hiker://files/rules/Thomas/gcsp1999/proxy_api/\" + platform + \".json\");\n                        }\n                        refreshPage(false);\n                        return \"hiker://empty\";\n                    }, platform);\n                }, platform)\n            }, {\n                title: '选中' + platform.replace('lib', '全部') + '解析',\n                js: $.toString((platform) => {\n                    const {\n                        getJxlist,\n                        setJxlist\n                    } = $.require('jiexi?rule=歌词适配');\n                    jxlist2 = storage0.getMyVar(\"jxlist2\", {});\n                    if (platform == 'lib')\n                        platforms = ['qq', 'wy', 'kg', 'kw', 'mg', 'qt'];\n                    else\n                        platforms = [platform];\n                    for (let platform of platforms) {\n                        jxlist = getJxlist(platform);\n                        jxlist.map(_ => {\n                            let m = md5(_.type + ':' + _.title + ':' + _.url);\n                            jxlist2[m] = _;\n                        });\n                    }\n                    storage0.putMyVar(\"jxlist2\", jxlist2);\n                    refreshPage(false);\n                    return \"hiker://empty\";\n                }, platform)\n            }, {\n                title: '取消选中' + platform.replace('lib', '全部') + '解析',\n                js: $.toString((platform) => {\n                    const {\n                        getJxlist,\n                        setJxlist\n                    } = $.require('jiexi?rule=歌词适配');\n                    jxlist2 = storage0.getMyVar(\"jxlist2\", {});\n                    if (platform == 'lib')\n                        platforms = ['qq', 'wy', 'kg', 'kw', 'mg', 'qt'];\n                    else\n                        platforms = [platform];\n                    for (let platform of platforms) {\n                        jxlist = getJxlist(platform);\n                        jxlist.map(_ => {\n                            let m = md5(_.type + ':' + _.title + ':' + _.url);\n                            delete jxlist2[m];\n                        });\n                    }\n                    storage0.putMyVar(\"jxlist2\", jxlist2);\n                    refreshPage(false);\n                    return \"hiker://empty\";\n                }, platform)\n            }]\n        }\n    });\n});\nlet jxlist = [];\nif (jx_platform == \"lib\") {\n    platforms.slice(1).map(platform => {\n        jxlist = jxlist.concat(getJxlist(platform));\n    });\n} else {\n    jxlist = getJxlist(jx_platform);\n}\nif (jxlist.length == 0) {\n    d.push({\n        title: Rich(Strong(Color(\"没有解析\"))),\n        url: 'hiker://empty',\n        col_type: 'text_center_1',\n        extra: {\n            lineVisible: false\n        }\n    });\n} else {\n    jxlist.map(_ => {\n        let d1, d2, i = Object.keys(storage0.getMyVar(\"jxlist2\", {})).indexOf(md5(_.type + ':' + _.title + ':' + _.url)) == -1;\n        d1 = [\"mp3\", \"hq\", \"sq\", \"hr\"].map(t => _[t] ? '★' : '☆').join(\"\");\n        d2 = \"启用下载\"\n        if (_.down == '1') {\n            d1 = Color(d1, \"#2E5D8E\");\n            d2 = \"禁用下载\";\n        }\n        d.push({\n            title: Strong(i ? _.title : Color(_.title)),\n            desc: d1,\n            url: $([\"分享\", \"编辑\", \"删除\", \"移动\"].concat([i ? '选中解析' : '取消选中', d2]), 2, '选择扩展操作').select((type, title, url) => {\n                const {\n                    getJxlist,\n                    setJxlist\n                } = $.require('jiexi?rule=歌词适配');\n                let json, jxlist2, jxlist = getJxlist(type);\n                let zu = jxlist.map(_ => md5(_.type + ':' + _.title + ':' + _.url));\n                let m = md5(type + ':' + title + ':' + url);\n                let i = zu.indexOf(m);\n                let _ = jxlist[i];\n                switch (input) {\n                    case '分享':\n                        if (_.m1 && _.m1 != \"\" && String(_.m1).length == 32) {\n                            _.s1 = \"1\";\n                            _.open = \"0\";\n                            _.down = \"0\";\n                        }\n                        if (_.m2 && _.m2 != \"\" && String(_.m2).length == 32 && _.s2 == \"0\") {\n                            _.s2 = \"2\";\n                        }\n                        json = {};\n                        json[type] = [_];\n                        return $.require(\"jiexi?rule=歌词适配\").getShare(json, true, 1, type, title);\n                        break;\n                    case '编辑':\n                        [\"type\", \"open\", \"down\", \"img\", \"title\", \"desc\", \"url\", \"content\", \"mp3\", \"hq\", \"sq\", \"hr\", \"zq\", \"jiexi\", \"s1\", \"m1\", \"s2\", \"m2\", \"time\", \"tid\", \"uid\"].map(t => {\n                            clearMyVar('jx_' + t)\n                        });\n                        putMyVar('jx_uid', m);\n                        Object.keys(_).map(t => {\n                            putMyVar('jx_' + t, _[t] || \"\");\n                        });\n                        return 'hiker://page/ruleEdit#noHistory##noRecordHistory#?pageTitle=规则编辑&rule=歌词适配';\n                        break;\n                    case '删除':\n                        return $(\"确定删除\" + _.type + \"解析“\" + _.title + '”吗？\\n此操作不可逆，请谨慎选择。').confirm((type, jxlist, i, setJxlist) => {\n                            jxlist.splice(i, 1);\n                            setJxlist(type, jxlist);\n                            refreshPage(false);\n                        }, type, jxlist, i, setJxlist);\n                        break;\n                    case '移动':\n                        jxlist.splice(i, 1);\n                        zu = jxlist.map(_ => _.title);\n                        return $(zu.concat(\"最后面\"), 2, '请选择移动位置').select((type, jxlist, _, zu, setJxlist) => {\n                            let i = zu.indexOf(input);\n                            if (i == -1)\n                                jxlist.push(_);\n                            else\n                                jxlist.splice(i, 0, _);\n                            setJxlist(type, jxlist);\n                            refreshPage(false);\n                        }, type, jxlist, _, zu, setJxlist);\n                        break;\n                    case '选中解析':\n                        jxlist2 = storage0.getMyVar(\"jxlist2\", {});\n                        jxlist2[m] = _;\n                        storage0.putMyVar(\"jxlist2\", jxlist2);\n                        refreshPage(false);\n                        break;\n                    case '取消选中':\n                        jxlist2 = storage0.getMyVar(\"jxlist2\", {});\n                        delete jxlist2[m];\n                        storage0.putMyVar(\"jxlist2\", jxlist2);\n                        refreshPage(false);\n                        break;\n                    case '启用下载':\n                    case '禁用下载':\n                        if (_.s1 == '0') {\n                            _.down = _.down == '1' ? '0' : '1';\n                        } else if (_.down == '0') {\n                            return $(\"\", \"请输入激活密匙\").input((jxlist, i, _, setJxlist) => {\n                                if (md5(input) == _.m1) {\n                                    _.s1 = '0';\n                                    _.open = '1';\n                                    jxlist[i] = _;\n                                    setJxlist(_.type, jxlist);\n                                    refreshPage(false);\n                                    return 'hiker://激活成功，欢迎使用';\n                                }\n                                return \"toast://密匙错误，无法启用\";\n                            }, jxlist, i, _, setJxlist);\n                        } else {\n                            _.down = '0'\n                        }\n                        jxlist[i] = _;\n                        setJxlist(type, jxlist);\n                        refreshPage(false);\n                        break;\n                }\n            }, _.type, _.title, _.url),\n            col_type: 'avatar',\n            img: _.img || $.require('image?rule=歌词适配')()\n        });\n        d.push({\n            title: _.type + '丨' + (_.desc || '未知') + '丨' + _.url,\n            url: $('#noLoading#').lazyRule((type, title, url) => {\n                const {\n                    getJxlist,\n                    setJxlist\n                } = $.require('jiexi?rule=歌词适配');\n                let jxlist = getJxlist(type);\n                let zu = jxlist.map(_ => md5(_.type + ':' + _.title + ':' + _.url));\n                let m = md5(type + ':' + title + ':' + url);\n                let i = zu.indexOf(m);\n                let jx_open = (_) => {\n                    if (_.s1 == '0') {\n                        _.open = _.open == '1' ? '0' : '1';\n                    } else if (_.open == '0') {\n                        return $(\"\", \"请输入激活密匙\").input((jxlist, i, _, setJxlist) => {\n                            if (md5(input) == _.m1) {\n                                _.s1 = '0';\n                                _.open = '1';\n                                jxlist[i] = _;\n                                setJxlist(_.type, jxlist);\n                                refreshPage(false);\n                                return 'hiker://激活成功，欢迎使用';\n                            }\n                            return \"toast://密匙错误，无法启用\";\n                        }, jxlist, i, _, setJxlist);\n                    } else {\n                        _.open = '0'\n                    }\n                    jxlist[i] = _;\n                    setJxlist(type, jxlist);\n                    refreshPage(false);\n                    return 'hiker://empty';\n                }\n                return jx_open(jxlist[i]);\n            }, _.type, _.title, _.url),\n            col_type: 'text_icon',\n            img: 'http://123.56.105.145/tubiao/messy/' + (_.open == '1' ? 55 : 63) + '.svg',\n            extra: {\n                lineVisible: false\n            }\n        });\n    });\n}\nsetResult(d);"},{"col_type":"movie_3","name":"⑧解析处理","path":"jiexi","rule":"function getJxlist(platform, run) {\n    let proxyPath = \"hiker://files/rules/Thomas/gcsp1999/proxy_api/\" + platform + \".json\";\n    if (run) return proxyPath;\n    try {\n        return JSON.parse(readFile(proxyPath));\n    } catch (e) { // !fileExist(proxyPath)\n        saveFile(proxyPath, \"[]\");\n        return [];\n    }\n}\n\nfunction setJxlist(platform, jxlist) {\n    if (Array.isArray(jxlist)) {\n        let proxyPath = \"hiker://files/rules/Thomas/gcsp1999/proxy_api/\" + platform + \".json\";\n        saveFile(proxyPath, JSON.stringify(jxlist, 0, 1));\n        return true;\n    }\n    return false\n}\n\nfunction GetSongCache(_, ii, down) {\n    let s3, s2, s1 = \"hiker://files/rules/Thomas/gcsp1999/songCache.json\";\n    let danmuLRC = \"hiker://files/_cache/gcsp1999/danmuLRC.json\";\n    if (fileExist(s1)) {\n        s2 = JSON.parse(readFile(s1));\n    } else {\n        s2 = {};\n    }\n    let isQt = _.source == \"qt\" ? _.content : _.source;\n    if (!s2[isQt]) {\n        s2[isQt] = {};\n        saveFile(s1, JSON.stringify(s2, 0, 1));\n    }\n    let typeCache = $.require('typeCache?rule=歌词适配').getCache()[\"songinfo\"];\n    if (ii === -1) {\n        ii = Number(typeCache.Quality) || 0;\n        for (; ii >= _.qualitys.length; ii--) {};\n    }\n    // 判断是否存在缓存\n    let timeout = new Date().getTime();\n    let quality = (_.qualitys[ii] || {}).type || '128k';\n    let _songId = _.hash || _.copyrightId || _.songId;\n    let urls, names = [],\n        headers = [];\n    s3 = s2[isQt][_songId] || {};\n    if (!typeCache.isCache || !(s3 &&\n            ((s3.mv &&\n                s3.mv.url &&\n                ss.mv.timeout > timeout) || (\n                s3[quality] &&\n                s3[quality].url &&\n                s3[quality].timeout > timeout\n            ))\n        )) { // 没有缓存链接，获取解析\n        let url = _.playUrl;\n        let lrc = _.lrcUrl || _.trcUrl || _.mrcUrl;\n        if (!url) {\n            if (/^(qq|wy|kg|kw|mg)$/i.test(_.source)) { // 平台接口，按顺序解析\n                let jx_arr = [\"ptProxy\", \"qtProxy\", \"Play_mv\"].sort((a, b) => typeCache[a] - typeCache[b]);\n                for (let jx_key of jx_arr) {\n                    if (!(!url || !url.length || /^toast/i.test(url))) {\n                        break;\n                    } else if (typeCache[jx_key]) { // 启用了\n                        switch (jx_key) {\n                            case 'ptProxy':\n                            default:\n                                [url, lrc, ii] = $.require(_.source + \"?rule=歌词适配\").lazy(0, _, down, ii + \"\");\n                                break;\n                            case 'qtProxy':\n                                [url, lrc, ii] = GetMusicUrl(down ? \"down\" : \"open\", \"qt\", undefined, 0, _, lrc, 0);\n                                break;\n                            case 'Play_mv':\n                                [names, url] = $.require(_.source + \"?rule=歌词适配\").mv(_, _songId);\n                                break;\n                        }\n                    }\n                }\n            } else { // 其他接口，解析两次\n                [url, lrc, ii] = $.require(_.source + \"?rule=歌词适配\").lazy(0, _, down, ii + \"\");\n                if (!url || !url.length || /^toast/i.test(url)) {\n                    [url, lrc, ii] = GetMusicUrl(down ? \"down\" : \"open\", \"qt\", undefined, 0, _, lrc, 0);\n                }\n            }\n        }\n\n\n        // 逻辑混乱的格式化\n        try {\n            url = JSON.parse(url);\n        } catch (no_json) {}\n        if (!Array.isArray(url) && (typeof url === 'object')) {\n            url = url.urls || url.url;\n            names = Array.isArray(url.names) ? url.names : [url.name || \"\"];\n            headers = Array.isArray(url.headers) ? url.headers : [url.header || \"\"];\n            if (!lrc) {\n                lrc = url.lyric || url.lrc;\n            }\n        }\n        urls = Array.isArray(url) ? url : [url];\n        if (urls.length < 2) {\n            url = urls[0];\n            if (!url) return \"toast://无法解析\";\n            if (/^toast/i.test(url)) return url;\n        }\n\n\n\n        // 保存链接到本地\n        url = /\\.(mp4|m3u8)/i.test(urls[0]) ? 60 * 60 : false; // mv直链 #按1小时算吧\n        timeout += (url || { // 歌曲直链的有效时间\n            'qq': 60 * 60 * 22 + 60 * 20, // 22小时又20分钟\n            'kg': 60 * 60 * 24, // 1天\n            'kw': 60 * 60, // 1小时\n            'wy': 60 * 20, // 20分钟\n            'mg': timeout, // 永久链接\n\n            // 不知道具体时效，按10分钟算\n        }[_.source] || (60 * 10)) * 1000;\n        if (url) { // 是视频链接，保存到mv\n            s3.mv = {\n                timeout,\n                names,\n                urls\n            }\n        }\n        if (!s3[quality]) {\n            s3[quality] = {};\n        }\n        s3[quality].url = urls[0];\n        s3[quality].timeout = timeout;\n\n\n\n        // 格式化歌词\n        s3.lyric = String(lrc || s3.lyric || \"\").trim();\n        if (!s3.lyric || (_.source == 'my' && !s3.lyric.match(/^\\s*https?\\:\\/\\/|\\d+\\:\\d+/i))) {\n            s3.lyric = $.require(_.source + \"?rule=歌词适配\").getLyric(_, s3.lyric || _songId);\n        }\n        s3.lyric = String(s3.lyric).replace(/\\<\\/?(br|p)\\/?\\>/gi, \"\\n\")\n            .replace(/^data\\:text\\/plain\\,\\s*|\\<\\s*\\-?\\d+\\s*\\,\\s*\\-?\\d+\\s*\\>/gi, \"\") // 目前不支持逐字歌词\n            .replace(/(\\[\\d+\\:\\d+)\\:(\\d+\\])/gi, \"$1.$2\");\n        if (!s3.lyric.match(/^\\s*https?\\:\\/\\/|\\d+\\:\\d+/i)) { // 不是 标准lrc / lrcurl\n            s3.lyric = $.require(\"lib?rule=歌词适配\").Lrc(s3.lyric, _.interval || 200);\n        }\n        s2[isQt][_songId] = s3;\n        if (typeCache.isCache) saveFile(s1, JSON.stringify(s2, 0, 1));\n    } else {\n        names = (s3.mv && s3.mv.names) || [\"本地直链缓存\"];\n        urls = (s3.mv && s3.mv.urls) || [s3[quality].url];\n    }\n\n\n    // 格式化弹幕lrc\n    danmuLRC = function(lrcText) { // mv链接 在不强制为音频时，调用弹幕\n        if (typeCache.danmuLrc || (!typeCache._Ignore && /\\.(mp4|m3u8)/i.test(urls[0]))) { // 可能是lrc链接\n            if (!lrcText.match(/\\d+\\:\\d+/) && lrcText.match(/^\\s*https?\\:\\/\\//)) {\n                lrcText = fetch(lrcText);\n                s3.lyric = lrcText;\n            }\n            let result = [];\n            String(lrcText).split(/\\n/).map(t => {\n                let mat = String(t).trim().split(/\\]\\s*/);\n                let txt = String(mat.slice(1).join(']'));\n                let tme = mat[0].slice(1).split(':');\n                if (txt.length) {\n                    try {\n                        let minutes = parseInt(tme[0], 10) * 60;\n                        let seconds = tme.slice(1).join(\".\");\n                        minutes += parseFloat(seconds);\n                        result.push({\n                            text: txt,\n                            time: minutes.toFixed(3)\n                        });\n                    } catch (nolrc) {}\n                }\n            });\n            saveFile(danmuLRC, JSON.stringify(result));\n            return danmuLRC;\n        }\n        return \"\";\n    }(s3.lyric);\n\n\n    if (down) { //正在\"下载\"，返回纯链接\n        s3 = 'download://' + s3[quality].url\n    } else {\n        s3 = JSON.stringify({\n            names,\n            urls: urls.map(u => u + (typeCache._Ignore ? '#isMusic=true#' : '') + typeCache.preType + typeCache.noCheck),\n            lyric: s3.lyric,\n            danmu: danmuLRC,\n            headers,\n        });\n    }\n    return s3;\n}\n\nfunction GetMusicUrl(uType, platform, t1, t2, musicItem, lrc, ii) {\n    let Quality = (t2 == ii || uType == \"down\") ? (\"flac24bit\") : ([\"mp3\", \"hq\", \"sq\", \"hr\"][ii || 0] || \"mp3\");\n    let quality = [\"mp3\", \"hq\", \"sq\", \"hr\"][t2 || 0] || \"mp3\";\n    let jxlist  = getJxlist(platform).filter(_ => _[uType] === \"1\" && _.s1 === \"0\" && aesDecode('hk6666666109', _[quality]) && !aesDecode('hk6666666109', _[Quality]));\n    let isPlay  = uType == \"open\" && quality != \"mp3\";\n    if (jxlist.length == 0) {\n        if (isPlay)\n            return [false, lrc, ii - 1];\n        else\n            return [\"toast://没有可用的\" + (uType == \"open\" ? \"试听\" : \"下载\") + \"解析\", lrc, ii];\n    }\n    if (platform == \"qt\") { // 调用其它解析接口\n        let {\n            lazy,\n            search\n        } = $.require(\"qt?rule=歌词适配\");\n        let songName = musicItem.name;\n        let songArtist = musicItem.singer.split(/\\&|、/)[0];\n        MY_PAGE = 1;\n    }\n    for (let _ of jxlist) {\n        try {\n            let url = false;\n            eval(String(aesDecode('hk6666666109', _[quality])));\n            eval(String(aesDecode('hk6666666109', _[\"jiexi\"])));\n            if (url && String(url).length > 19) {\n                return [url, lrc, ii];\n            }\n        } catch (jxError) {\n            // log(error(jxError));\n        }\n    }\n    if (isPlay) return [false, lrc, ii];\n    return [\"toast://解析失败\", lrc, ii];\n}\n$.exports = {\n    getJxlist,\n    setJxlist,\n    GetMusicUrl,\n    GetSongCache,\n    lazy: function(source, _, down, ii) {\n        if (down !== undefined) {\n            down = down ? '1' : '0';\n        } else {\n            down = getMyVar('search_down', '0');\n        }\n        _.qualitys = _.qualitys || [{\n            type: '128k',\n            size: '无法计算'\n        }];\n        if (down == '0') { // 播放\n            return GetSongCache(_, -1, 0);\n        } else { // 下载\n            let arr = _.qualitys.map(_ => {\n                return {\n                    '96k': \"【流畅音质】\",\n                    '128k': \"【标准音质】\",\n                    '320k': \"【高品音质】\",\n                    'flac': \"【无损音质】\",\n                    'flac24bit': \"【高品无损】\"\n                }[_.type] + _.size;\n            });\n            return $(arr, 1, '选择下载音质').select((arr, _) => {\n                let i = arr.indexOf(input);\n                return $.require(\"jiexi?rule=歌词适配\").GetSongCache(_, i, 1);\n            }, arr, _);\n        }\n    },\n    getShare(json, isJx, len, t1, t2, arr, si, key) {\n        return $(getPastes().concat(\"纯文本\").concat(arr || []), 2, '选择分享格式').select((json, isJx, len, t1, t2, si, key) => {\n            let text = base64Encode(JSON.stringify(json));\n            try {\n                if (input == \"批量分享\") {\n                    let json = {\n                        type: 1,\n                        pitch: 0,\n                        si: si,\n                        name: \"\",\n                        data: storage0.getItem(\"data_\" + si)[key]\n                    };\n                    writeFile(\"hiker://files/_cache/gcsp1999/Import.txt\", JSON.stringify(json));\n                    return \"hiker://page/rely2#noHistory##noRecordHistory#?rule=歌词适配\";\n                }\n                if (input == \"复制链接\") {\n                    if (json.source == \"userlist\")\n                        return \"toast://自建歌单无法分享\"\n                    else\n                        return $.require(\"lib?rule=歌词适配\").copyurl(json.source, json.content || \"2\", json.sourceListId);\n                }\n                let desc, type, rely, group;\n                if (input != \"纯文本\") {\n                    text = sharePaste(text, input);\n                    group = \"Paste\";\n                } else group = \"Text\";\n                if (isJx == \"theme\") {\n                    type = \"主题\";\n                    rely = \"3\";\n                } else if (isJx) {\n                    type = \"解析\";\n                    rely = \"1\";\n                } else {\n                    type = \"收藏\";\n                    rely = \"2\";\n                }\n                if (len == 1 && t1 != undefined) {\n                    desc = t1 + type + \"「\" + t2 + \"」\";\n                } else {\n                    desc = \"共「\" + len + \"」条\" + type;\n                }\n                clearMyVar('jxlist2');\n                refreshPage(false);\n                return \"copy://歌词适配\" + type + \"口令，打开海阔即可导入\\n\" + desc + \"￥\" + group + \"￥\" + text + '@import=js:$.require(\"jiexi?rule=歌词适配\").setRule(input,\"' + rely + '\");';\n            } catch (err) {\n                return \"toast://分享失败\";\n            }\n        }, json, isJx, len, t1, t2, si, key);\n    },\n\n\n\n    setRule: function(input, rely) {\n        [tDesc, tType, text] = String(input).split(\"￥\");\n        switch (tType) {\n            case 'Paste':\n                text = parsePaste(text);\n                break;\n            case 'Lanzou':\n                [url, pwd] = text.split(\"##\");\n                let durl = $.require('lanzou?rule=歌词适配').one_url(url, pwd, 1);\n                text = String(fetch(durl));\n                let sp = text.split(\"￥\");\n                if (sp.length == 3) {\n                    text = sp[2].split(\"@\")[0].trim();\n                }\n                break;\n        }\n        rely = rely || \"1\";\n        text = base64Decode(text);\n        // writeFile(\"hiker://files/_cache/gcsp1999/Import.txt\", text);\n        // return \"hiker://page/rely\" + rely + \"#noHistory##noRecordHistory#?rule=歌词适配\";\n        // text = fetch(\"hiker://files/_cache/gcsp1999/Import.txt\");\n        if (rely == \"1\") { // 解析\n            let index  = 0;\n            let index2 = 0;\n            let index3, jxlist,\n                json = JSON.parse(text);\n            for (let key in json) {\n                if (json[key].length != 0) {\n                    index += json[key].length;\n                    jxlist = getJxlist(key);\n                    index3 = jxlist.length;\n                    jxlist = json[key].concat(jxlist);\n                    let map = new Map();\n                    jxlist.forEach(obj => {\n                        let key = obj.title + obj.url;\n                        if (!map.has(key)) {\n                            map.set(key, obj);\n                        } else {\n                            if (obj.time > map.get(key).time) {\n                                map.set(key, obj);\n                            }\n                        }\n                    });\n                    jxlist = Array.from(map.values());\n                    index2 += jxlist.length - index3;\n                    setJxlist(key, jxlist);\n                }\n            }\n            return \"toast://解析导入成功，新增 \" + index2 + \" ，覆盖 \" + (index - index2);\n        } else if (rely == \"2\") { // 收藏\n            const hikerPop = $.require(\"http://123.56.105.145/weisyr/js/hikerPop.js\");\n            let data = JSON.parse(text);\n            let list = data.list;\n            delete data.list;\n            let p1 = \"hiker://files/rules/Thomas/gcsp1999/collection/\";\n            let zy = JSON.parse(readFile(p1 + \"details.json\"));\n            let zu = zy.map(_ => _.name + '\\n' + _.source + '_' + _.sourceListId);\n            let pop = hikerPop.selectCenter({\n                options: zu.concat(list ? '最后面' : '新组'),\n                columns: 2,\n                title: \"请选择资源位置\",\n                // position: 2,\n                click(input) {\n                    if ('新组' == input) {\n                        return $(\"\", \"请输入新组名称\").input((p1, zy, zu, data) => {\n                            if (!input.trim()) return \"toast://组名不能为空\";\n                            let t = new Date().getTime();\n                            let _ = {\n                                name: input,\n                                source: \"userlist\",\n                                sourceListId: t,\n                                locationUpdateTime: t,\n                                picUrl: \"\",\n                                content: \"2\"\n                            }\n                            zu = zu.concat(\"最后面\");\n                            return $(zu, 2, '请选择新组位置').select((p1, zy, zu, data, _) => {\n                                let i = zu.indexOf(input);\n                                zy.splice(i, 0, _);\n                                saveFile(p1 + \"details.json\", JSON.stringify(zy, 0, 1));\n                                saveFile(p1 + _.source + '_' + _.sourceListId + '.json', JSON.stringify([data], 0, 1));\n                                // back(false);\n                                return \"toast://导入歌曲成功\";\n                            }, p1, zy, zu, data, _);\n                        }, p1, zy, zu, data);\n                    }\n                    let i;\n                    if (input == '最后面') {\n                        i = zu.length;\n                    } else {\n                        i = zu.indexOf(input);\n                    }\n                    if (list != undefined) { // 是分组\n                        let p3 = data.source + '_' + data.sourceListId;\n                        let ii = zy.map(_ => _.source + '_' + _.sourceListId).indexOf(p3);\n                        if (ii != -1) {\n                            zy.splice(ii, 1);\n                            if (ii < i) i--;\n                        }\n                        zy.splice(i, 0, data);\n                        saveFile(p1 + \"details.json\", JSON.stringify(zy, 0, 1));\n                        saveFile(p1 + p3 + \".json\", JSON.stringify(list, 0, 1));\n                        // back(false);\n                        return \"toast://导入歌单成功\";\n                    }\n                    let p2 = zu[i].replace(/^[\\S\\s]*\\n/i, \"\") + \".json\";\n                    zy = JSON.parse(readFile(p1 + p2));\n                    zu = zy.map((_, i) => _.name + '\\n' + i + _.source + _.songId);\n                    return $(zu.concat(\"最后面\"), 2, '请选择资源位置').select((p1, p2, zy, zu, data) => {\n                        let i;\n                        if (\"最后面\" == input) {\n                            i = zu.length;\n                        } else {\n                            i = zu.indexOf(input);\n                        }\n                        zy.splice(i, 0, data);\n                        saveFile(p1 + p2, JSON.stringify(zy, 0, 1));\n                        // back(false);\n                        return \"toast://导入歌曲成功\";\n                    }, p1, p2, zy, zu, data);\n                },\n            });\n        } else if (rely == \"3\") { // 主题\n            const newJson = JSON.parse(text);\n            const themeType = newJson.type;\n            eval(JSON.parse(fetch('hiker://page/theme3?rule=歌词适配', {})).rule);\n            let t1 = getData1(themeType, \"rely\");\n            let t2 = newJson.info;\n            let ii = t1.name.indexOf(t2.title);\n            if (ii === -1) { // 新主题\n                ii = t1.data.length;\n                t1.name.push(t2.title);\n            }\n            t1.data[ii] = t2;\n\n            let P1 = newJson.data;\n            let P2 = \"hiker://files/rules/Thomas/gcsp1999/theme/\" + themeType + \"/\";\n            saveFile(P2 + md5(t2.title) + \".json\", JSON.stringify(P1, 0, 2));\n            saveFile(P2 + \"install.json\", JSON.stringify(t1, 0, 2));\n            return \"toast://\" + (themeType == \"home\" ? \"首页\" : \"二级\") + \"主题「\" + t2.title + \"」导入成功\";\n            // back(false);\n        }\n        return \"hiker://empty\";\n    },\n\n\n\n    setEdit: function() {\n        let _ = {\n            type: getMyVar(\"jx_type\", \"kw\"),\n            open: getMyVar(\"jx_open\", \"1\"),\n            down: getMyVar(\"jx_down\", \"0\"),\n\n            img: getMyVar(\"jx_img\", \"\"),\n            title: getMyVar(\"jx_title\", \"\"),\n            desc: getMyVar(\"jx_desc\", \"\"),\n            url: getMyVar(\"jx_url\", \"\"),\n            content: getMyVar(\"jx_content\", \"\"),\n\n            mp3: getMyVar(\"jx_mp3\", \"\"),\n            hq: getMyVar(\"jx_hq\", \"\"),\n            sq: getMyVar(\"jx_sq\", \"\"),\n            hr: getMyVar(\"jx_hr\", \"\"),\n            zq: getMyVar(\"jx_zq\", \"\"),\n            jiexi: getMyVar(\"jx_jiexi\", \"\"),\n\n            s1: getMyVar(\"jx_s1\", \"0\"),\n            m1: getMyVar(\"jx_m1\", \"\"),\n            s2: getMyVar(\"jx_s2\", \"0\"),\n            m2: getMyVar(\"jx_m2\", \"\"),\n            time: new Date().getTime()\n        };\n        if (_.title != \"\" && _.url != \"\") {\n            for (let t in _) {\n                clearMyVar('jx_' + t);\n                if (_[t] == \"\" || _[t] == \"Vfanahs/y0iZxcSL0PJAcQ==\") {\n                    delete _[t];\n                }\n            }\n            let jxlist = getJxlist(_.type);\n            let uids = jxlist.map(__ => md5(__.type + ':' + __.title + ':' + __.url));\n            let i = uids.indexOf(getMyVar('jx_uid', '-1'));\n            if (i == -1) {\n                jxlist.push(_);\n            } else {\n                jxlist.splice(i, 1, _);\n            }\n            clearMyVar('jx_tid');\n            clearMyVar('jx_uid');\n            jxlist = jxlist.filter((obj, index, arr) => {\n                return arr.findIndex(o => md5(obj.title + obj.url) === md5(o.title + o.url)) === index;\n            });\n            setJxlist(_.type, jxlist);\n            return back(true), 'toast://保存成功';\n        } else if (_.title == \"\") {\n            return 'toast://请填写源名称';\n        } else {\n            return 'toast://请填写源标识';\n        }\n    },\n\n\n\n    setEdit2: function(type, run) {\n        let c, _ = {\n            \"s1\": \"0\",\n            \"s2\": \"0\",\n            \"img\": $.require('image?rule=歌词适配')(type),\n            \"type\": String(type).replace(/2$/, \"\"),\n            \"time\": new Date().getTime(),\n            \"open\": \"1\",\n            \"down\": \"1\",\n            \"desc\": \"优选\",\n        }\n        let C0 = String(getMyVar('viprule_c0', '')).trim();\n        let C1 = String(getMyVar('viprule_c1', '')).trim();\n        let C2 = String(getMyVar('viprule_c2', '')).trim();\n        let getkgjiexi = (title, url, userid, token, appid, signkey) => {\n            Object.assign(_, {\n                \"title\": title,\n                \"url\": url,\n                \"mp3\": \"Bt7w+qh9wAdbEKhUmS545w==\",\n                \"hq\": \"hS3drYkp7OI1xKOc2BkfqQ==\",\n                \"sq\": \"PwXrvvzm04ftoCnUWkpJFw==\",\n                \"hr\": \"5/mK9TcZ1i8h/Y9z1NHhzw==\",\n            });\n            _.jiexi = getPrivateJS(`t2 = musicItem.qualitys[t2] || {};\nurl = $.require(\"kg?rule=歌词适配\").GetMusicUrl(\n    t2.hash || t1,\n    ({\n        '128k': '128',\n        '320k': '320',\n        'flac': 'flac',\n        'flac24bit': 'high'\n    })[t2.type] || \"128\",\n    musicItem.album_id || \"0\",\n    musicItem.album_audio_id || \"0\",\n    \"${userid}\",\n    \"${token}\",\n    \"${appid}\",\n    \"${signkey}\"\n);`);\n        };\n        switch (type) {\n            case 'qq':\n                Object.assign(_, {\n                    \"title\": \"QQ音乐\",\n                    \"url\": \"https://u.y.qq.com\",\n                    \"mp3\": \"UVK3kKzrNzvyLkOTj6FmOkmb9Z69AK/YQaseesfs8A8=\",\n                    \"hq\": \"q5AMvpdkKyaRbAyhYqwkgUmb9Z69AK/YQaseesfs8A8=\",\n                    \"sq\": \"xVCpzhaKCCx/ON4plO45uyqgJELdlW8kzLBWRAjwdOE=\",\n                    \"hr\": \"M6aXLrgwhTyDMPmKG1YWqiqgJELdlW8kzLBWRAjwdOE=\",\n                });\n                c = C0.split(/qm_keyst=/i);\n                c0 = (c[1] || c[0]).split(/;|&|\\n/i)[0];\n                c = C1.split(/uin=/i);\n                c1 = (c[1] || c[0]).split(/;|&|\\n/i)[0];\n                if (!c0 || !c1 || !(c0.match('W_X') || c0.match('Q_H_L'))) return \"toast://cookie格式错误\";\n                _.signin = 0;\n                _.jiexi = getPrivateJS(`u = _.url + \\`/cgi-bin/musicu.fcg?data={\"req_0\":{\"module\":\"vkey.GetVkeyServer\",\"method\":\"CgiGetVkey\",\"param\":{\"guid\":\"0\",\"platform\":\"20\",\"filename\":[\"$\\{h+t1+t1+e}\"],\"songmid\":[\"$\\{t1}\"]}}}\\`;\n_ = JSON.parse(fetch(u, {\n    headers: {\n        Cookie: \"qm_keyst=${c0}; uin=${c1}\"\n    }\n})).req_0.data;\nurl = _.midurlinfo[0].purl;\nif (url && url != \"\") url = _.sip[0] + url;`);\n                break;\n            case 'wy':\n                Object.assign(_, {\n                    \"title\": \"网易云音乐\",\n                    \"url\": \"https://music.163.com\",\n                    \"mp3\": \"KfUPg2pbKpIuXxqG11E3EzUXTzIDbXwWZtMIVYqOU64=\",\n                    \"hq\": \"5gbQa6RuVtl2HLIr8GnJAItgw4epRIxW6c6EzG3MxfY=\",\n                    \"sq\": \"cJHBSCeJa46GF7NUJaEUOkRX9IiMDLhZQqz2ti2a6Lc=\",\n                    \"hr\": \"KEJ/xd6vEP3y+ZpM/CbpJ1X2p2obP8tImcXEi9DyQHE=\",\n                });\n                c = C0.split(/MUSIC_[UA]=([^;\\s'\"]+)/i);\n                c0 = c ? c[1] : false;\n                if (!c0) return \"toast://cookie格式错误\";\n                // \"os=magicos; appver=1.0.22; MUSIC_A=\" + c0;\n                _.jiexi = getPrivateJS(`url = $.require(\"wy?rule=歌词适配\").ajax3(\"/api/song/enhance/player/url/v1\", {\n    ids: \\`[\"$\\{t1}\"]\\`,\n    encodeType: \"flac\",\n    immerseType: \"c51\",\n    trialMode: \"23\",\n    level: level\n}, {\n    Cookie: \"os=pc; appver=9.0.25; MUSIC_U=${c0}\"\n}).data[0].url.split(\"?\")[0];`);\n                break;\n            case 'kg':\n                c = C0.split(/userid=/i);\n                c0 = (c[1] || c[0]).split(/;|&|\\n/i)[0];\n                c = C1.split(/token=/i);\n                c1 = (c[1] || c[0]).split(/;|&|\\n/i)[0];\n                if (!c0 || !c1) return \"toast://cookie格式错误\";\n                getkgjiexi(\"酷狗音乐\", \"https://www.kugou.com\", c0, c1, \"\", \"\");\n                break;\n            case 'kg2':\n                c = C0.split(/userid=/i);\n                c0 = (c[1] || c[0]).split(/;|&|\\n/i)[0];\n                c = C1.split(/token=/i);\n                c1 = (c[1] || c[0]).split(/;|&|\\n/i)[0];\n                c = C2.split(/appid=/i);\n                c2 = (c[1] || c[0]).split(/;|&|\\n/i)[0];\n                if (!c0 || !c1) return \"toast://cookie格式错误\";\n                if (md5(c2) != \"78c60c35e590bee8e14bae44bde51277\") return \"toast://signkey错误\";\n                getkgjiexi(\"酷狗概念版\", \"https://gateway.kugou.com\", c0, c1, \"3116\", c2);\n                _.signin = 0;\n                break;\n            case 'kw':\n                Object.assign(_, {\n                    \"title\": \"酷我音乐\",\n                    \"url\": \"http://mobi.kuwo.cn\",\n                    \"mp3\": \"RXlnZNyYIUb13MukIk9RTQ==\",\n                    \"hq\": \"VM+paTFups1aeSon+z0h2g==\",\n                    \"sq\": \"PGAnCQCjuJXzbia+p+0HtQ==\",\n                    // \"hr\": \"tq1pX4T/Y13vTeA3ZfKXnVX2p2obP8tImcXEi9DyQHE=\",\n                    \"hr\": \"37uTQ6Kit6S7c77IHqN1bQ==\",\n                });\n                if (!C0) return \"toast://cookie格式错误\";\n                _.jiexi = getPrivateJS(C0);\n                break;\n            case 'kw2':\n                Object.assign(_, {\n                    \"title\": \"波点音乐\",\n                    \"url\": \"https://bd-api.kuwo.cn\",\n                    \"mp3\": \"loq6enoAvJkagLA86SEiHCB6VjMprvHT8LFvugbufqQ=\",\n                    \"hq\": \"ek/bmU09vXDqPLHrTHDjvSB6VjMprvHT8LFvugbufqQ=\",\n                    \"sq\": \"Pw4VZByAAQoviP7qZoKUuiTyQdldjl+98GDNW8Wvips=\",\n                });\n                c = C0.split(/uid=/i);\n                c0 = (c[1] || c[0]).split(/;|&|\\n/i)[0];\n                c = C1.split(/token=/i);\n                c1 = (c[1] || c[0]).split(/;|&|\\n/i)[0];\n                c = C2.split(/devId=/i);\n                c2 = (c[1] || c[0]).split(/;|&|\\n/i)[0];\n                if (!c0 || !c1 || !c2) return \"toast://cookie格式错误\";\n                _.jiexi = getPrivateJS(`url = JSON.parse(fetch(_.url + \"/api/service/music/downloadInfo/\" + t1 + \"?isMv=0&format=\" + t3 + \"&br=\" + t2 + \"&level=\", {\n    \"headers\": {\n        'User-Agent': 'okhttp/3.10.0',\n        'channel': 'qq',\n        'plat': 'ar',\n        'net': 'wifi',\n        'ver': '3.1.2',\n        'uid': '${c0}',\n        'token': '${c1}',\n        'devId': '${c2}'\n    }\n})).data.url;`);\n                break;\n            case 'mg':\n                Object.assign(_, {\n                    \"title\": \"咪咕音乐\",\n                    \"url\": \"https://m.music.migu.cn\",\n                    \"mp3\": \"hS3drYkp7OI1xKOc2BkfqQ==\",\n                    \"hq\": \"PwXrvvzm04ftoCnUWkpJFw==\",\n                    \"sq\": \"5/mK9TcZ1i8h/Y9z1NHhzw==\",\n                    \"hr\": \"w5lQnyXVahJsYGeUe+pNuw==\",\n                });\n                c = C0.split(/SESSION=/i);\n                c0 = (c[1] || c[0]).split(/;|&|\\n/i)[0];\n                if (!c0) return \"toast://cookie格式错误\";\n                _.jiexi = getPrivateJS(`headers = {\n    headers: {\n        \"Referer\": _.url + \"/v4/\",\n        \"User-Agent\": MOBILE_UA,\n        \"By\": md5(MOBILE_UA),\n        \"Cookie\": \"SESSION=${c0}\"\n    }\n};\nu = _.url + \"/migumusic/h5/play/auth/getSongPlayInfo?type=\" + t2 + \"&copyrightId=\" + t1;\nurl = \"https:\" + JSON.parse(fetch(u, headers)).data.playUrl;`);\n                break;\n        }\n        let jxlist = getJxlist(_.type);\n        jxlist.unshift(_);\n        jxlist = jxlist.filter((obj, index, arr) => {\n            return arr.findIndex(o => md5(obj.title + obj.url) === md5(o.title + o.url)) === index;\n        });\n        setJxlist(_.type, jxlist);\n        if (run) return \"hiker://empty\";\n        return back(true), \"toast://导入成功\";\n    }\n}"},{"col_type":"movie_3","name":"温馨提示","path":"notice","rule":"$.exports = function(col_type) {\n    let f = \"Gray\";\n    let t = false;\n    let arr = [];\n    let up = getMyVar('Rule_noupdate', '');\n    let url, v, run, T;\n    if (up != '1' && getItem('no_update', '0') == '0') {\n        let version = JSON.parse(request(\"hiker://home@歌词适配\")).version;\n        if (up == '') {\n            showLoading('查看小程序是否有新版本…');\n            [url, v, run] = $.require(\"lanzou?rule=歌词适配\").list_one(\"///b03r379hc\", \"gcsp\");\n            /*\n                        if (run == 'true') {\n                            return true;\n                        } else {\n\n                        }\n            */\n            hideLoading();\n        } else {\n            url = false;\n            v = version + 1;\n        }\n        if (version < v) {\n            f = \"red\";\n            t = \"检测到新版更新，点击了解详情。\";\n            T = \"更新内容\";\n            if (up == '') {\n                if (getItem('update0', '1') == '1') confirm({\n                    title: '更新提示',\n                    content: '检测到你的规则版本小于服务器版本，是否立即更新？',\n                    confirm: $.toString((da) => {\n                        f = $.require(\"lanzou?rule=歌词适配\").one_url(da);\n                        putMyVar('Rule_noupdate', '1');\n                        return \"\\u6d77\\u9614\\u89c6\\u754c\\uffe5home_rule_url\\uffe5\" + getPath(f);\n                    }, url)\n                });\n                putMyVar('Rule_noupdate', url);\n            }\n            url = $(\"hiker://empty#noHistory##noRecordHistory#\").rule((up, version) => {\n                return $.require(\"lanzou?rule=歌词适配\").one_info(up, \"gcsp\", version);\n            }, url || up, version);\n            arr.push({\n                title: '程序设置',\n                js: $.toString(() => {\n                    return 'hiker://page/install#noHistory##noRecordHistory##noRefresh#?pageTitle=程序设置';\n                })\n            });\n        } else {\n            putMyVar('Rule_noupdate', '1');\n        }\n    }\n    if (!t) {\n        T = \"程序设置\";\n        url = \"hiker://page/install#noHistory##noRecordHistory##noRefresh#\";\n        let hour = new Date().getHours();\n        if (hour < 5) {\n            t = \"深夜，现在的夜，熬得只是还未改变的习惯\";\n        } else if (hour < 11) {\n            t = \"早安，清晨熹微的阳光， 是你在微笑吗\";\n        } else if (hour < 14) {\n            t = \"午好，伴随着熟悉的乐曲，聆听着动人的旋律\";\n        } else if (hour < 19) {\n            t = \"夕暮，似清风醉晚霞，不经意间盈笑回眸\";\n        } else {\n            t = \"夜晚，一个安静的角落，静静地聆听夜曲\";\n        }\n    }\n    d.push({\n        title: \"““””\" + t.fontcolor(f).small(),\n        col_type: col_type || \"text_center_1\",\n        img: \"hiker://images/logo\",\n        url: url,\n        extra: {\n            pageTitle: T,\n            lineVisible: false,\n            longClick: arr\n        }\n    });\n    return [t, f, T, arr];\n}"},{"col_type":"movie_3","name":"蓝奏调用","path":"lanzou","rule":"js:\nlet head = {\n    headers: {\n        \"upgrade-insecure-requests\": \"1\",\n        \"User-Agent\": \"Mozilla/5.0 (Linux; Android 8.0.0; MI 5s Plus Build/OPR1.170623.032; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/71.0.3578.99 Mobile Safari/537.36\",\n        \"Cookie\": \"down_ip=1\",\n        \"accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\",\n    },\n    method: 'GET'\n};\n\n\nfunction getHost(u, r) {\n    u = String(u || \"\");\n    let cachePath = \"hiker://files/_cache/gcsp1999/lanzouyun_host.txt\";\n    let host = u.match(/([^\\/\\.]+\\.com)\\//i);\n    host = host ? host[1] : fileExist(cachePath) ? readFile(cachePath) : false;\n    if (!host) {\n        let hosts = String(\"abcdefghijklmnopqrstuvwxyz\")\n            .replace(/[rss and zzz]/gi, \"\").split(\"\")\n            .map(x => \"lanzou\" + x + \".com\");\n        if (host) hosts.unshift(host);\n        // host = findReachableIP(hosts); #错误的函数调用\n        host = batchFetch(hosts.map(host => ({\n            url: 'https://www.' + host + '/favicon.ico',\n            options: Object.assign({\n                withHeaders: true,\n                withStatusCode: true,\n                redirect: false,\n                timeout: 2000,\n                onlyHeaders: true\n            }, head)\n        }))).find(_ => JSON.parse(_).statusCode == 200);\n        host = JSON.parse(host || '{\"url\":\"www.lanzoug.com\"}').url.split(\"www.\");\n        host = host[1].split(\"/favicon.ico\")[0];\n        log('蓝奏可用链接: ' + host);\n        saveFile(cachePath, host);\n    }\n    if (r) return host;\n    u = \"/\" + u.split(\"/\").slice(3).join(\"/\");\n    return String(\"https://www.\" + host + u);\n}\n\n\n\nfunction one_url(url, pwd, run, noTp, Html) {\n    try {\n        url = getHost(url);\n        head.headers.referer = url.split(\"?\")[0];\n        let da, html, path, host, k, u, _,\n            isTp = !url.match(\"/tp/\");\n        if (isTp && !noTp) {\n            da = url.replace(/^(.*?\\.com)/, '$1/tp');\n        } else {\n            da = url;\n        }\n        html = String(Html || fetch(da, head));\n        if (html == \"\" && isTp && !noTp) {\n            return one_url(url, pwd, run, true);\n        }\n        try {\n            path = html.match(/link = ['\"]([^\"']+)/i)[1];\n            host = url.match(/^(.*?\\.com\\/)/)[1];\n            return one_url(host + path, pwd, run);\n        } catch (err0) {\n            try {\n                path = html.match(/'(\\?.+?)'/)[1];\n                host = \"https://developer.lanzoug.com\";\n            } catch (err1) {\n                let kdns = 1;\n                eval(html.match(/value\\;([\\s\\S]+?)\\$\\(/i)[1]);\n                eval('body=' + html.match(/[\\s\\S]*?\\s+data :([\\s\\S]*?\\}),\\s+/)[1]);\n                u = String(url).replace(/\\.com.*/, \".com/ajaxm.php\");\n                _ = JSON.parse(post(u, {\n                    headers: head.headers,\n                    body\n                }));\n                path = _.url;\n                host = _.dom;\n            }\n        }\n        u = host + \"/file/\" + path;\n        k = JSON.parse(fetch(u, {\n            redirect: false,\n            onlyHeaders: true\n        })).headers.location;\n        k = Array.isArray(k) ? k[0] : k;\n        if (run) return k;\n        let f = \"hiker://files/cache/_fileSelect_rule.json\";\n        downloadFile(k, f);\n        return f;\n    } catch (err2) {\n        return false;\n    }\n};\n\nfunction list_one(url, pwd, run, pgs, getInfo) {\n    try {\n        let src, body;\n        url = getHost(url);\n        if (pgs > 1) {\n            src = getMyVar('gcsp1999_lanzou_' + md5(url), src);\n        }\n        src = src || fetch(url, head);\n        pgs === 1 && putMyVar('gcsp1999_lanzou_' + md5(url), src);\n        eval(src.match(/var pgs;([\\s\\S]*?pgs.+;)/)[1].replace(/pgs\\s*=/, \"pgs=pgs||\"));\n        eval('body=' + src.match(/data :([\\s\\S]*?\\})/)[1]);\n        url = url.replace(/\\.com.*/, \".com/filemoreajax.php\");\n        let list = JSON.parse(post(url, {\n            headers: head.headers,\n            body\n        })).text;\n\n        if (getInfo) {\n            let Title = pdfh(src, \"title,0&&Text\");\n            let Desc = pdfh(src, \"#info&&.tet&&Text\")\n                .replace(/^话说/, \"\");\n            if (run) {\n                return [list, Title, Desc];\n            }\n        }\n\n        if (run) return list;\n        let _ = list[0];\n        url = url.replace(/filemo.*/, 'tp/' + _.id);\n        let v = _.name_all.match(/\\[(.+)/)[1];\n        [v, run] = v.split(\"]\");\n        return [url, v, run];\n    } catch (no_mat) {}\n    return [\"\", 0, run];\n}\n$.exports = {\n    list_one,\n    one_url,\n    one_info: function(url, pwd, version, isLook) {\n        url = getHost(url);\n        let version = version || \"未知版本\";\n        version = String(version).replace(/(\\d\\d)(\\d\\d)$/, \"-$1-$2\");\n        let item = fetch(url, head);\n        let t = pdfh(item, \".md&&Text\") || pdfh(item, \"title&&Text\");\n        try {\n            t = String(t).split(\"[\")[1].split(\"]\")[0];\n        } catch (err) {}\n        t = String(t).replace(/(\\d\\d)(\\d\\d)$/, \"-$1-$2\");\n        let d = [];\n        d.push({\n            desc: \"<b>““\" + version + \" => \" + t + \"””</b>\",\n            col_type: \"text_center_1\",\n            url: \"hiker://empty\",\n            extra: {\n                lineVisible: false\n            }\n        });\n        d.push({\n            col_type: \"big_big_blank_block\"\n        });\n        d.push({\n            title: pdfh(item, \".mdo&&Html\").replace(/(<\\/span>)?\\s*<span>/gi, \"<br>\"),\n            url: 'hiker://empty',\n            col_type: 'rich_text'\n        });\n        d.push({\n            col_type: \"big_blank_block\"\n        });\n        d.push({\n            title: \"<b>““确定更新””</b>\".big(),\n            col_type: \"text_center_1\",\n            url: $(\"hiker://empty#noHistory##noRecordHistory#\").lazyRule((url, pwd, item, isLook) => {\n                if (getMyVar('Rule_noupdate') == '1' && !isLook) {\n                    return back(true), \"hiker://empty\";\n                }\n                let {\n                    one_url\n                } = $.require(\"hiker://page/lanzou?rule=歌词适配\");\n                let K = one_url(url, pwd, 1, 0, item);\n                if (!K) {\n                    K = one_url(url, pwd, 1);\n                }\n                if (!K) {\n                    K = one_url(url.split(\"?\")[0], pwd, 1);\n                }\n                if (K) {\n                    let f = \"hiker://files/cache/_fileSelect_rule.json\";\n                    downloadFile(K, f);\n                    putMyVar('Rule_noupdate', '1');\n                    return \"\\u6d77\\u9614\\u89c6\\u754c\\uffe5home_rule_url\\uffe5\" + getPath(f);\n                } else {\n                    return \"toast://获取下载链接失败\";\n                }\n            }, url, pwd, item, !!isLook),\n            extra: {\n                lineVisible: false\n            }\n        });\n        setResult(d);\n    },\n    mv: function(_, t1) {\n        return [\n            [],\n            []\n        ];\n    },\n    getLyric: function(_, t1) {\n        return \"\";\n    },\n    lazy: function(platform2, t1, t2, t3) {\n        eval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配', {})).rule);\n        let title, author, desc, img, time, tags, total, list;\n        let _ = t1;\n        t1 = _.songId || _.sourceListId;\n        [t1, pwd] = String(t1).split(\"##\");\n        switch (String(platform2)) {\n            case '0': // 链接\n                let url = one_url(\"///tp/\" + t1, pwd, 1);\n                if (t3 && t3 !== \"0\") return url;\n                return [url, \"\", 0];\n                break;\n            case '1': // 首页\n                return 0;\n                break;\n            case '2': // 发现\n            case '3': // 排行\n                addListener('onClose', $.toString((url) => {\n                    clearMyVar('gcsp1999_lanzou_' + md5(url));\n                }, \"///\" + t1));\n                [list, title, desc] = list_one(\"///\" + t1, pwd, true, MY_PAGE, true);\n                break;\n        }\n        if (t2) return list;\n        if (Array.isArray(list))\n            list.map(_ => {\n                let songName, userName,\n                    _title = _.name_all.replace(/\\s+and\\s+/gi, \"&\").replace(\".\" + _.icon, \"\");\n                [userName, songName] = _title.split(/\\s*\\-\\s*/);\n                songName = songName || userName;\n                userName = (userName || \"\").replaceAll(songName, \"\");\n                Extra({\n                    source: \"lanzou\",\n                    name: songName,\n                    singer: userName,\n                    interval: _.size,\n                    songId: _.id,\n                    albumName: title,\n                    albumId: t1,\n                    picUrl: \"https://7n33122q45.vicp.fun/icon.png\",\n                    qualitys: [{\n                        type: '128k',\n                        size: _.size\n                    }],\n                    content: 0,\n                }, Object.assign(t3 || {}, {\n                    songName,\n                    userName,\n                    songTime: _.size,\n                    albumName: _.id\n                }));\n            });\n        else\n            list = [];\n        return {\n            title,\n            author: \"蓝奏云\",\n            desc,\n            img,\n            time,\n            tags,\n            total: ((MY_PAGE - 1) * 50 + list.length)\n        }\n    }\n}"},{"col_type":"movie_3","name":"程序设置","path":"install","rule":"js:\neval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配', {})).rule);\nlet _ = JSON.parse(request(\"hiker://home@歌词适配\"));\nlet d = [];\nd.push({\n    img: _.icon,\n    col_type: 'pic_1_center',\n    extra: {\n        inheritTitle: false\n    },\n    url: $([\n        \"[酷狗概念版] 听歌领会员\",\n        \"[QQ音乐] 刷新cookie\",\n    ], 1, \"选择扩展操作\").select(() => {\n        for (let i = 0; i < 3; i++) {\n            clearMyVar('viprule_c' + i);\n        }\n        switch (input) {\n            case '[QQ音乐] 刷新cookie':\n                return $(\"hiker://empty#noHistory##noRecordHistory#\").rule((type) => {\n                    let d;\n                    if (getMyVar('back') == '1') {\n                        clearMyVar('back');\n                        back(false);\n                        d = [];\n                    } else {\n                        setPageTitle('刷新cookie');\n                        let _ = $.require('jiexi?rule=歌词适配').getJxlist('qq')\n                            .find(_ => md5(_.title + _.url) == \"e2c1a4bf8d58d1703a5e8109e1f90cc0\");\n                        d = [{\n                            title: '',\n                            desc: '每七天需要刷新一次',\n                            url: 'hiker://empty',\n                            col_type: \"text_center_1\",\n                            extra: {\n                                lineVisible: false\n                            }\n                        }, {\n                            desc: 'cookie 需要包含 qm_keyst 和 uin',\n                            col_type: 'input',\n                            extra: {\n                                type: 'textarea',\n                                highlight: true,\n                                height: 4,\n                                defaultValue: getMyVar('viprule_c0'),\n                                onChange: `putMyVar(\"viprule_c0\", input);`,\n                            }\n                        }];\n                        d.push({\n                            title: \"从解析获取\",\n                            img: \"hiker://images/icon_search6\",\n                            col_type: \"icon_2_round\",\n                            url: $(\"#noHistory##noRecordHistory#\").lazyRule((_) => {\n                                if (_) {\n                                    let cookie;\n                                    if (_.signin == 1) {\n                                        cookie = aesDecode('hk6666666109', _.jiexi).match(/Cookie: \"([^\"]+)/)[1];\n                                        putMyVar('viprule_c0', cookie);\n                                        refreshPage();\n                                        return 'toast://正在调用解析参数';\n                                    } else {\n                                        return $(\"好像还没到刷新时间，确定获取吗？\").confirm((_) => {\n                                            cookie = aesDecode('hk6666666109', _.jiexi).match(/Cookie: \"([^\"]+)/)[1];\n                                            putMyVar('viprule_c0', cookie);\n                                            refreshPage();\n                                            return 'toast://正在调用解析参数';\n                                        }, _)\n                                    }\n                                } else {\n                                    return \"toast://没有QQ音乐的解析\"\n                                }\n                            }, _)\n                        });\n                        d.push({\n                            title: \"确定刷新\",\n                            img: \"hiker://images/icon_menu6\",\n                            col_type: \"icon_2_round\",\n                            url: $(\"#noHistory##noRecordHistory#\").lazyRule((_) => {\n                                let cookie = String(getMyVar('viprule_c0')).trim();\n                                if (cookie && cookie != \"\" && cookie.match(\"qm_keyst=\") && cookie.match(\"uin=\")) {\n                                    let uri = $.require(\"qq?rule=歌词适配\").refresh_login(cookie, 1);\n                                    if (Array.isArray(uri)) {\n                                        return $(\"hiker://empty#noHistory##noRecordHistory#\").rule(([qm_keyst, uin]) => {\n                                            let cookie = `qm_keyst=${qm_keyst}; uin=${uin};`\n                                            setPageTitle('刷新成功');\n                                            let d = [{\n                                                desc: 'cookie刷新成功',\n                                                url: 'hiker://empty',\n                                                col_type: \"text_center_1\",\n                                                extra: {\n                                                    lineVisible: false\n                                                }\n                                            }, {\n                                                title: '<br><h6 style=\"text-align: center;\">' + cookie + \"</h6>\",\n                                                url: 'hiker://empty',\n                                                col_type: \"rich_text\"\n                                            }, {\n                                                title: \"复制cookie\",\n                                                url: $(\"#noHistory##noRecordHistory#\").lazyRule((cookie) => {\n                                                    putMyVar('back', '1');\n                                                    return back(true), \"copy://\" + cookie;\n                                                }, cookie),\n                                                img: \"hiker://images/icon_cloud6\",\n                                                col_type: \"icon_2_round\"\n                                            }, {\n                                                title: \"导入进解析\",\n                                                url: $(\"#noHistory##noRecordHistory#\").lazyRule((key, uin) => {\n                                                    putMyVar('back', '1');\n                                                    putMyVar('viprule_c0', key);\n                                                    putMyVar('viprule_c1', uin);\n                                                    return $.require(\"jiexi?rule=歌词适配\").setEdit2(\"qq\");\n                                                }, qm_keyst, uin),\n                                                img: \"hiker://images/icon_download6\",\n                                                col_type: \"icon_2_round\"\n                                            }];\n                                            setResult(d);\n                                        }, uri);\n                                    } else {\n                                        return uri;\n                                    }\n                                } else {\n                                    return \"toast://cookie格式错误\";\n                                }\n                            }, _),\n                            extra: {\n                                pageTitle: '刷新成功',\n                                lineVisible: false\n                            }\n                        });\n                    }\n                    setResult(d);\n                });\n                break;\n            case '[酷狗概念版] 听歌领会员':\n                return $(\"hiker://empty#noHistory##noRecordHistory#\").rule((type) => {\n                    setPageTitle('听歌领会员');\n                    let _ = $.require('jiexi?rule=歌词适配').getJxlist('kg')\n                        .find(_ => md5(_.title + _.url) == \"c877ae72b97bc26720ad8b1a39362d47\");\n                    let d = [{\n                        desc: '每天只能领取一次',\n                        url: 'hiker://empty',\n                        col_type: \"text_center_1\",\n                        extra: {\n                            lineVisible: false\n                        }\n                    }];\n                    ['userid', 'token', 'signkey'].map((t, i) => {\n                        d.push({\n                            desc: t,\n                            col_type: 'input',\n                            extra: {\n                                type: 'textarea',\n                                highlight: true,\n                                height: 2,\n                                defaultValue: getMyVar('viprule_c' + i),\n                                onChange: `putMyVar(\"viprule_c${i}\", input);`,\n                            }\n                        });\n                    });\n                    d.push({\n                        title: \"从解析获取\",\n                        img: \"hiker://images/icon_search6\",\n                        col_type: \"icon_2_round\",\n                        url: $(\"#noHistory##noRecordHistory#\").lazyRule((_) => {\n                            if (_) {\n                                if (_.signin == 1) {\n                                    let mat = aesDecode('hk6666666109', _.jiexi).match(/\"([^\"]+)\",\\s+\"(.+)\",\\s+\"3116\",\\s+\"(.+)\"/);\n                                    putMyVar('viprule_c0', mat[1]);\n                                    putMyVar('viprule_c1', mat[2]);\n                                    putMyVar('viprule_c2', mat[3]);\n                                    refreshPage();\n                                    return 'toast://正在调用解析参数';\n                                } else {\n                                    return $(\"今天好像已经签到过了，确定获取吗？\").confirm((_) => {\n                                        let mat = aesDecode('hk6666666109', _.jiexi).match(/\"([^\"]+)\",\\s+\"(.+)\",\\s+\"3116\",\\s+\"(.+)\"/);\n                                        putMyVar('viprule_c0', mat[1]);\n                                        putMyVar('viprule_c1', mat[2]);\n                                        putMyVar('viprule_c2', mat[3]);\n                                        refreshPage();\n                                        return 'toast://正在调用解析参数';\n                                    }, _)\n                                }\n                            } else {\n                                return \"toast://没有概念版的解析\"\n                            }\n                        }, _)\n                    });\n                    d.push({\n                        title: \"确定领取\",\n                        img: \"hiker://images/icon_menu6\",\n                        col_type: \"icon_2_round\",\n                        url: $(\"#noHistory##noRecordHistory#\").lazyRule((_) => {\n                            let userid = getMyVar('viprule_c0');\n                            let token = getMyVar('viprule_c1');\n                            let signkey = getMyVar('viprule_c2');\n                            if (md5(signkey) == \"78c60c35e590bee8e14bae44bde51277\") {\n                                let t1 = $.dateFormat(new Date().getTime(), 'yyyyMMdd');\n                                let t2 = $.dateFormat(_.time, 'yyyyMMdd');\n                                let mat = aesDecode('hk6666666109', _.jiexi).match(/\"([^\"]+)\",\\s+\"(.+)\",\\s+\"3116\",\\s+\"(.+)\"/);\n                                let matx = userid == mat[1] && token == mat[2];\n                                if (matx && t1 < t2 && _.signin == 0) {\n                                    return 'toast://今天已经签到过了';\n                                } else {\n                                    return $.require(\"kg?rule=歌词适配\").Lite_Signin(\n                                        userid,\n                                        token,\n                                        signkey,\n                                        matx\n                                    );\n                                }\n                            } else {\n                                return \"toast://signkey错误\";\n                            }\n                        }, _),\n                        extra: {\n                            lineVisible: false\n                        }\n                    });\n                    setResult(d);\n                });\n                break;\n        }\n    })\n});\nd.push({\n    title: \"““””<b>\" + String(_.version).replace(/(\\d\\d)(\\d\\d)$/, \"-$1-$2\").fontcolor(\"red\").small() + \"</b>\",\n    col_type: \"text_center_1\",\n    url: $(\"hiker://empty#noHistory##noRecordHistory#\").rule((version) => {\n        let list = $.require(\"lanzou?rule=歌词适配\")\n            .list_one(\"///b03r379hc\", \"gcsp\", 1)\n            .map(_ => ({\n                col_type: 'text_1',\n                title: \"<b>‘‘\" + (_.name_all.match(version) ? _.name_all + \"’’\" : \"’’\" + _.name_all) + '</b>',\n                desc: \"‘‘’’\" + ('💾 ' + _.icon + '　📥 ' + _.size + '　⏱️ ' + _.time).small(),\n                url: $(\"hiker://empty#noHistory##noRecordHistory#\").rule((up, version) => {\n                    return $.require(\"lanzou?rule=歌词适配\").one_info(up, \"gcsp\", version, 1);\n                }, '///tp/' + _.id, version),\n                extra: {\n                    pageTitle: _.name_all,\n                    inheritTitle: false\n                }\n            }));\n        setResult(list);\n    }, _.version),\n    extra: {\n        pageTitle: '历史版本',\n        lineVisible: false\n    }\n});\nd.push({\n    title: \"““””<b>\" + \"默认设置<br><br><small>小程序默认设置</small>\".fontcolor(\"Gray\") + \"</b>\",\n    col_type: \"card_pic_2\",\n    img: \"hiker://images/home_pic3\",\n    url: $(\"hiker://empty#noHistory##noRecordHistory##noRefresh#\").rule(() => {\n        return $.require('typeCache?rule=歌词适配').getPage1('1');\n    }),\n    extra: {\n        pageTitle: '程序默认配置'\n    }\n});\nlet arr = [\"TGX收藏\", \"高级搜索\", \"沉浸首页\", \"解析管理\", \"程序首页\"];\nd.push({\n    title: \"““””<b>\" + \"主页元素<br><br><small>保存元素到\\\"我的主页\\\"</small>\".fontcolor(\"Gray\") + \"</b>\",\n    col_type: \"card_pic_2\",\n    url: $(arr, 1, '选择要保存的元素').select((arr) => {\n        let t, i, p, u, _ = {\n            \"name\": \"歌词适配\"\n        };\n        [t, i, p, u] = [\n            [\"TGX收藏\", \"rule_type_audio\", \"collection\"],\n            [\"高级搜索\", \"menu_search2\", \"search\"],\n            [\"程序首页\", \"icon\", \"home\"],\n            [\"解析管理\", \"icon_menu6\", \"\", \"hiker://page/ruleList#noHistory##noRecordHistory##noRefresh#?pageTitle=解析管理&rule=歌词适配\"],\n            [\"\", \"icon\", \"\", \"hiker://home@歌词适配\"]\n        ][arr.indexOf(input)];\n        _.title = t || _.name;\n        if (t) _.name += \"_\" + t;\n        _.icon = $.require('image?rule=歌词适配')(i);\n        _.url = u || $('#noLoading#').lazyRule((p) => {\n            return $.require('typeCache?rule=歌词适配').Lazy(p);\n        }, p);\n        return $(\"hiker://empty#noHistory##noRecordHistory#\").rule((password) => {\n            eval(fetch(\"hiker://assets/home.js\"));\n            HikerHome.load(\"import\", password);\n        }, \"海阔视界，我的主页「\" + _.name + \"」元素￥my_home_single￥\" + base64Encode(JSON.stringify(_).replace('\"程序首页', '\"歌词适配')));\n    }, arr),\n    img: \"hiker://images/home_pic1\",\n});\nd.push({\n    title: \"““””<b>\" + \"我是会员<br><br><small>配置会员账号</small>\".fontcolor(\"Gray\") + \"</b>\",\n    col_type: \"card_pic_2\",\n    url: \"hiker://page/viprule#noHistory##noRecordHistory##noRefresh#\",\n    img: \"hiker://images/card_bg\",\n    extra: {\n        pageTitle: '会员配置'\n    }\n});\nd.push({\n    title: \"““””<b>\" + \"支持作者<br><br><small>更新的动力~</small>\".fontcolor(\"Gray\") + \"</b>\",\n    col_type: \"card_pic_2\",\n    url: \"hiker://page/donate#noHistory##noRecordHistory##noRefresh#\",\n    img: \"hiker://images/placeholder\",\n    extra: {\n        pageTitle: '捐赠/支持'\n    }\n});\nd.push({\n    title: \"““””\" + \"<b>反馈Q群：365976134</b>\".fontcolor(\"Gray\").small(),\n    col_type: \"text_center_1\",\n    url: \"http://qm.qq.com/cgi-bin/qm/qr?_wv=1027&k=x8r6m0bYYon_pCgT0BRc1ohwZmkkY61Q&authKey=DpmUioCvx45WjRRBnbRT2DsJ7LL6DNY3uau%2BFKPgR%2FSKz4EgYqUjEU5tJNi%2BkNPl&noverify=0&group_code=365976134\",\n    extra: {\n        lineVisible: false\n    }\n});\nsetResult(d);"},{"col_type":"movie_3","name":"支持作者","path":"donate","rule":"js:\nlet d = [];\nd.push({\n    title: \"捐赠/支持\",\n    desc: \"这个捐赠不能为你带来特权，但您的支持是我更新创作的动力。\",\n    col_type: \"text_center_1\",\n    url: \"toast://感谢您的支持\"\n});\nd.push({\n    col_type: \"pic_1_full\",\n    url: \"https://gitee.com/ThomasYou/haikuo/raw/master/IMG_20240112_081355.png\",\n    pic_url: \"https://gitee.com/ThomasYou/haikuo/raw/master/IMG_20240112_081355.png\"\n});\nd.push({\n    col_type: \"text_center_1\",\n    title: \"““””\" + \"图片加载缓慢请稍等\".small().fontcolor(\"Gray\"),\n    url: \"hiker://empty\",\n    extra: {\n        lineVisible: false\n    }\n});\nsetResult(d);"},{"col_type":"movie_3","name":"会员配置","path":"viprule","rule":"js:\nlet d = [];\nlet _ = {\n    \"qq\": \"QQ音乐\",\n    \"wy\": \"网易云音乐\",\n    \"kg\": \"酷狗音乐\",\n    \"kg2\": \"酷狗概念版\",\n    \"kw\": \"酷我音乐\",\n    \"kw2\": \"波点音乐\",\n    \"mg\": \"咪咕音乐\",\n    \"作者\": \"捐赠专属\",\n}\nlet z = Object.keys(_);\nfor (let p of z) {\n    d.push({\n        title: \"““””<b>\" + _[p].big().fontcolor(\"purple\") + \"</b>\",\n        col_type: \"card_pic_2\",\n        img: $.require('image?rule=歌词适配')(p),\n        extra: {\n            pageTitle: _[p] + '配置'\n        },\n        url: $(\"#noHistory##noRecordHistory#\").lazyRule((type) => {\n            switch (type) {\n                case 'qq':\n                    arr = ['支持从网页登录账号', 'token已改成静默刷新', ['qm_keyst', 'uin']];\n                    break;\n                case 'wy':\n                    arr = ['eapi已支持试听歌曲', '账号会员过期也能解析(限128k)', ['MUSIC_U 或者 MUSIC_A']];\n                    break;\n                case 'kg':\n                    arr = ['不可以抓网页端的cookie', '　', ['userid', 'token']];\n                    break;\n                case 'kg2':\n                    arr = ['已支持每天签到领会员', 'signkey关键词LnT6xp', ['userid', 'token', 'signkey']];\n                    break;\n                case 'kw':\n                    arr = ['自己写js获取',\n                        // 'https://github.com/yhsj0919/music_api/blob/main/lib/api/kuwo/module/song.dart', \n                        'https://github.com/GSQZ/KuwoMusicApi/blob/master/kw/url.js', ['rid传参为：t1\\nbr传参为：t2\\ndes调用：$.require(\"kw?rule=歌词适配\").des(str);']\n                    ];\n                    break;\n                case 'kw2':\n                    arr = ['从APP抓包', '　', ['uid', 'token', 'devid']];\n                    break;\n                case 'mg':\n                    arr = ['从网页登录', '　', ['SESSION']];\n                    break;\n                case '作者':\n                    url = 'toast://邢啊，作者不想收到律师函，暂不支持';\n                    break;\n            }\n            if (type != '作者') {\n                for (let i = 0; i < 3; i++) {\n                    clearMyVar('viprule_c' + i);\n                }\n                url = $(\"hiker://empty#noHistory##noRecordHistory##noRefresh#\").rule((type, [title, desc, cookies]) => {\n                    let d = [{\n                        title: title,\n                        desc: desc,\n                        url: 'hiker://empty',\n                        col_type: \"text_center_1\",\n                        extra: {\n                            lineVisible: false\n                        }\n                    }];\n                    if (type == 'qq') {\n                        d.push({\n                            col_type: \"big_blank_block\"\n                        }, {\n                            col_type: \"big_blank_block\"\n                        }, {\n                            col_type: \"big_blank_block\"\n                        }, {\n                            title: \"““<b>从网页登录</b>””\".small(),\n                            url: $(\"hiker://empty#noHistory##noRecordHistory#\").rule(() => {\n                                addListener(\"onClose\", () => clearMyVar(\"cookie\"));\n                                let durl = \"https://y.qq.com/n/ryqq/toplist/62\";\n                                let d = [];\n                                d.push({\n                                    title: \"““确认登录””\",\n                                    url: $(\"#noLoading#\").lazyRule(() => {\n                                        let cookie = getMyVar(\"cookie\", \"\");\n                                        if (!!(cookie && cookie.includes(\"uin=\") && cookie.includes(\"qqmusic_key=\"))) {\n                                            putMyVar('viprule_c0', cookie);\n                                            putMyVar('viprule_c1', cookie);\n                                            toast(\"解析导入成功\");\n                                            return back(), $.require('jiexi?rule=歌词适配').setEdit2(\"qq\");\n                                            return \"toast://登录成功\";\n                                        }\n                                        return \"toast://没有获取到登录信息\";\n                                    }),\n                                    col_type: \"text_center_1\"\n                                });\n                                d.push({\n                                    col_type: \"x5_webview_single\",\n                                    url: `https://graph.qq.com/oauth2.0/show?which=Login&display=pc&response_type=code&client_id=100497308&redirect_uri=https%3A%2F%2Fy.qq.com%2Fportal%2Fwx_redirect.html%3Flogin_type%3D1%26surl%3D${ encodeURIComponent(durl) }&state=state&display=pc&scope=get_user_info%2Cget_app_friends`,\n                                    desc: \"screen-133&&float\",\n                                    extra: {\n                                        ua: PC_UA,\n                                        js: $.toString((title, durl) => {\n                                            let cookie = \"\";\n                                            setInterval(() => {\n                                                cookie = fba.getCookie(durl);\n                                                fba.putVar(title + \"@cookie\", cookie);\n                                            }, 200);\n                                        }, MY_RULE.title, durl)\n                                    }\n                                });\n                                setResult(d);\n                            }),\n                            col_type: \"text_center_1\",\n                            extra: {\n                                pageTitle: \"登录QQ音乐账号\",\n                                lineVisible: false\n                            }\n                        });\n                    }\n                    cookies.map((t, i) => {\n                        d.push({\n                            desc: t,\n                            col_type: 'input',\n                            extra: {\n                                type: 'textarea',\n                                highlight: true,\n                                height: type == 'kw' ? 7 : 3,\n                                defaultValue: getMyVar('viprule_c' + i),\n                                onChange: `putMyVar(\"viprule_c${i}\", input);`,\n                            }\n                        });\n                    });\n                    d.push({\n                        title: \"““确定导入””\",\n                        col_type: \"text_center_1\",\n                        url: $(\"#noHistory##noRecordHistory#\").lazyRule((type) => {\n                            return $.require(\"jiexi?rule=歌词适配\").setEdit2(type);\n                        }, type),\n                        extra: {\n                            lineVisible: false\n                        }\n                    });\n                    setResult(d);\n                }, type, arr);\n            }\n            return url;\n        }, p),\n        extra: {\n            inheritTitle: false\n        }\n    });\n}\nsetResult(d);"},{"col_type":"movie_3","name":"Ⓣ主题编辑","path":"theme1","rule":"js:\neval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配', {})).rule);\naddListener('onClose', $.toString(() => {\n    log(999)\n    refreshPage();\n}))\nlet d = [];\n\n\n\nthemeType = getMyVar(\"themeType\", \"home\");\neval(JSON.parse(fetch('hiker://page/theme3?rule=歌词适配', {})).rule);\nlet data = getData1(themeType, true);\n\n\n\n\nd.push({\n    title: Rich(Strong(Color(\"编辑\", \"#3399cc\"))),\n    url: 'hiker://empty',\n    img: \"\",\n    col_type: 'text_2'\n});\nd.push({\n    title: Rich(\"<s>预览</s>\"),\n    url: 'toast://完善中~',\n    img: \"\",\n    col_type: 'text_2'\n});\nd.push({\n    title: themeType == \"home\" ? Rich(Strong(Color(\"主页\"))) : \"主页\",\n    url: $(\"#noLoading#\").lazyRule((yn) => {\n        if (yn) {\n            putMyVar(\"themeType\", \"home\");\n            refreshPage();\n        }\n        return \"hiker://empty\";\n    }, themeType == \"page\"),\n    img: \"\",\n    col_type: 'text_4'\n});\nd.push({\n    title: themeType == \"page\" ? Rich(Strong(Color(\"二级\"))) : \"二级\",\n    url: $(\"#noLoading#\").lazyRule((yn) => {\n        if (yn) {\n            putMyVar(\"themeType\", \"page\");\n            refreshPage();\n        }\n        return \"hiker://empty\";\n    }, themeType == \"home\"),\n    img: \"\",\n    col_type: 'text_4'\n});\nd.push({\n    title: Rich(\"<s>搜索</s>\"),\n    url: 'toast://完善中~',\n    img: \"\",\n    col_type: 'text_4'\n});\nd.push({\n    title: Rich(\"<s>收藏</s>\"),\n    url: 'toast://完善中~',\n    img: \"\",\n    col_type: 'text_4'\n});\n\n\nd.push({\n    title: Color(name, \"#20B2AA\"),\n    desc: \"by: \" + (author || \"佚名\"),\n    img: img,\n    url: \"#noLoading#@lazyRule=.js:\" + $.toString((_, name, author, img, index, themeType, data) => {\n        const hikerPop = $.require(\"http://123.56.105.145/weisyr/js/hikerPop.js\");\n        let pop = hikerPop.selectCenterIcon({\n            iconList: _.data,\n            title: \"主题切换\",\n            extraMenu: new hikerPop.IconExtraMenu(() => {\n                pop.dismiss();\n                return $([\"名称\", \"作者\", \"封面\", \"分享\", \"删除\", \"新增\" /*, \"重置\"*/ ], 2, '扩展操作').select((_, name, author, icon, i1, themeType, data) => {\n                    const hikerPop = $.require(\"http://123.56.105.145/weisyr/js/hikerPop.js\");\n                    const path = \"hiker://files/rules/Thomas/gcsp1999/theme/\" + themeType + \"/\";\n                    switch (input) {\n                        case '名称':\n                            pop = hikerPop.inputAutoRow({\n                                hint: \"不建议留空，不支持重复\",\n                                title: \"主题名称\",\n                                defaultValue: name || \"\",\n                                //hideCancel: true,\n                                noAutoSoft: false, //不自动打开输入法\n                                confirm(text) {\n                                    if (!text.trim()) return 'toast://主题名称不建议留空';\n                                    if (text == \"最后面\") return 'toast://主题名称不能是\"最后面\"';\n                                    if (text == name) return 'hiker://empty';\n                                    _.name.splice(i1, 1);\n                                    i2 = _.name.indexOf(text);\n                                    if (i2 != -1) return 'toast://已经有主题叫这个名字了';\n                                    if (_.this == name) _.this = text;\n                                    _.name.splice(i1, 0, text);\n                                    _.data.splice(i1, 1, {\n                                        title: text,\n                                        author: author || \"佚名\",\n                                        icon: icon || \"hiker://images/icon_class\"\n                                    });\n                                    t1 = readFile(path + md5(name) + \".json\");\n                                    deleteFile(path + md5(name) + \".json\");\n                                    saveFile(path + md5(text) + \".json\", t1);\n                                    saveFile(path + \"install.json\", JSON.stringify(_, 0, 2));\n                                    refreshPage();\n                                    return \"hiker://empty\";\n                                },\n                                cancel() {\n                                    return \"hiker://empty\";\n                                }\n                            });\n                            break;\n                        case '作者':\n                            pop = hikerPop.inputAutoRow({\n                                hint: \"不建议留空\",\n                                title: \"主题作者\",\n                                defaultValue: author || \"\",\n                                //hideCancel: true,\n                                noAutoSoft: false, //不自动打开输入法\n                                confirm(text) {\n                                    if (text == author) return 'hiker://empty';\n                                    _.data.splice(i1, 1, {\n                                        title: name,\n                                        author: text || author || \"佚名\",\n                                        icon: icon || \"hiker://images/icon_class\"\n                                    });\n                                    saveFile(path + \"install.json\", JSON.stringify(_, 0, 2));\n                                    refreshPage();\n                                    return \"hiker://empty\";\n                                },\n                                cancel() {\n                                    return \"hiker://empty\";\n                                }\n                            });\n                            break;\n                        case '封面':\n                            pop = hikerPop.inputAutoRow({\n                                hint: \"不建议留空\",\n                                title: \"主题封面\",\n                                defaultValue: icon || \"\",\n                                //hideCancel: true,\n                                noAutoSoft: false, //不自动打开输入法\n                                confirm(text) {\n                                    if (text == icon) return 'hiker://empty';\n                                    _.data.splice(i1, 1, {\n                                        title: name,\n                                        author: author,\n                                        icon: text || icon || \"hiker://images/icon_class\"\n                                    });\n                                    saveFile(path + \"install.json\", JSON.stringify(_, 0, 2));\n                                    refreshPage();\n                                    return \"hiker://empty\";\n                                },\n                                cancel() {\n                                    return \"hiker://empty\";\n                                }\n                            });\n                            break;\n                        case '分享':\n                            let newJson = {\n                                type: themeType,\n                                info: {\n                                    title: name,\n                                    icon: icon || \"\",\n                                    author: author || \"佚名\"\n                                },\n                                data: data\n                            }\n                            return $.require(\"jiexi?rule=歌词适配\").getShare(newJson, \"theme\", 1, (author || \"佚名\") + \"的\", name);\n                            break;\n                        case '删除':\n                            return $(\"确定删除主题 \" + name + \" 吗？\\n此操作不可逆，请谨慎选择。\").confirm((path, name, _, i) => {\n                                _.name.splice(i, 1);\n                                _.data.splice(i, 1);\n                                if (_.name[0] == undefined) return \"toast://至少要保留一个主题吧\";\n                                if (_.this == name) _.this = _.name[0];\n                                deleteFile(path + md5(name) + \".json\");\n                                saveFile(path + \"install.json\", JSON.stringify(_, 0, 2));\n                                refreshPage();\n                                return \"hiker://empty\";\n                            }, path, name, _, i1);\n                            break;\n                        case '新增':\n                            pop = hikerPop.inputTwoRow({\n                                titleHint: \"主题名称\",\n                                titleDefault: \"主题\" + (_.name.length + 1),\n                                urlHint: \"主题作者\",\n                                urlDefault: \"佚名\",\n                                noAutoSoft: true, //不自动打开输入法\n                                title: \"新建主题\",\n                                //hideCancel: true,\n                                confirm(s1, s2) {\n                                    i2 = _.name.indexOf(s1);\n                                    if (i2 != -1) return \"toast://已经有主题叫这个名字了\";\n                                    _.name.push(s1);\n                                    _.data.push({\n                                        title: s1,\n                                        author: s2,\n                                        icon: \"hiker://images/icon_class\"\n                                    });\n                                    saveFile(path + \"install.json\", JSON.stringify(_, 0, 2));\n                                    saveFile(path + md5(s1) + \".json\", \"[]\");\n                                    refreshPage();\n                                    return \"hiker://empty\";\n                                },\n                                cancel() {\n                                    return \"hiker://empty\"\n                                }\n                            });\n                            break;\n                        case '重置':\n                            return $(\"确定重置所有主题吗？\\n此操作不可逆，请谨慎选择。\").confirm((path, _) => {\n                                _.name.map(\n                                    name =>\n                                    deleteFile(path + md5(name) + \".json\")\n                                )\n                                deleteFile(path + \"install.json\");\n                                refreshPage();\n                                return back(true), \"toast://已清除主题缓存，回到程序首页重置。\";\n                            }, path, _);\n                            break;\n\n                    }\n                    return 'hiker://empty';\n                }, _, name, author, img, index, themeType, data);\n            }),\n            columns: 1,\n            position: index,\n            click(a) {\n                _.this = a;\n                saveFile(\"hiker://files/rules/Thomas/gcsp1999/theme/\" + themeType + \"/install.json\", JSON.stringify(_, 0, 2));\n                refreshPage();\n                return \"hiker://empty\";\n            }\n        });\n        return \"hiker://empty\";\n    }, _, name, author, img, index, themeType, data),\n    col_type: 'avatar',\n    extra: {\n        lineVisible: false\n    }\n});\nd.push({\n    col_type: 'line_blank'\n});\n\n\n\nif (data.length == 0) {\n    d.push({\n        title: \"主题元素不存在~\",\n        desc: \"新建元素/删除主题\",\n        url: \"hiker://empty\",\n        col_type: \"text_center_1\"\n    });\n}\ndata.map((_, i) => {\n    d.push({\n        title: (_.open ? \"☑︎\" : \"☒\") + \" \" + _.name,\n        desc: \"翻页: \" + (_.page ? \"☒\" : \"☑︎\") + \"　样式: \" + _.type,\n        url: $([\"移动\", \"编辑\", (_.open ? '禁用' : '启用'), \"删除\"], 1, '选择扩展操作').select((path, _, i) => {\n            if (input == \"编辑\")\n                return \"hiker://page/theme2#noHistory##noRecordHistory#\";\n            let list = JSON.parse(readFile(path) || \"[]\");\n            switch (input) {\n                case '删除':\n                    return $(\"确定删除元素 \" + _.name + \" 吗？\\n此操作不可逆，请谨慎选择。\").confirm((path, list, i) => {\n                        list.splice(i, 1);\n                        saveFile(path, JSON.stringify(list, 0, 2));\n                        refreshPage(false);\n                        return \"hiker://empty\";\n                    }, path, list, i);\n                    break;\n                case '移动':\n                    list.splice(i, 1);\n                    let zu = list.map((_, i) => _.name + '\\n\\n' + i);\n                    return $(zu.concat(\"最后面\"), 2, '请选择资源位置').select((path, _, list, zu) => {\n                        if (\"最后面\" == input) {\n                            list.push(_)\n                        } else {\n                            let i = zu.indexOf(input);\n                            list.splice(i, 0, _);\n                        }\n                        saveFile(path, JSON.stringify(list, 0, 2));\n                        refreshPage(false);\n                        return \"hiker://empty\";\n                    }, path, _, list, zu);\n                    break;\n                case '启用':\n                case '禁用':\n                    _.open = !_.open;\n                    list[i] = _;\n                    saveFile(path, JSON.stringify(list, 0, 2));\n                    refreshPage(false);\n                    return \"hiker://empty\";\n                    break;\n            }\n        }, path, _, i),\n        col_type: 'text_1',\n        extra: {\n            pageTitle: \"元素设置\",\n            __: {\n                path,\n                i\n            },\n            _\n        }\n    });\n});\n\n\n\n\n\n\nd.push({\n    col_type: 'line_blank'\n});\nd.push({\n    title: Rich(\"<s>复原</s>\"),\n    url: 'toast://完善中~',\n    img: \"\",\n    col_type: 'text_2'\n});\nd.push({\n    title: \"新增\",\n    url: \"hiker://page/theme2#noHistory##noRecordHistory#?rule=歌词适配\",\n    img: \"\",\n    col_type: 'text_2',\n    extra: {\n        pageTitle: \"元素设置\",\n        __: {\n            path,\n            i: data.length\n        },\n        _: {\n            open: true,\n            page: true,\n            name: \"\",\n            type: \"\"\n        }\n    }\n});\nsetResult(d);"},{"col_type":"movie_3","name":"Ⓣ元素编辑","path":"theme2","rule":"js:\neval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配', {})).rule);\naddListener('onClose', $.toString(() => {\n    clearMyVar('page');\n    clearMyVar('open');\n    clearMyVar('name');\n    clearMyVar('type');\n    clearMyVar('data');\n}));\nlet d = [];\n/*\nsetPageParams({\n    \n});\n*/\nlet _ = MY_PARAMS._;\nlet path = MY_PARAMS.__.path.match(\"/home\");\nlet page = getMyVar('page', _.page ? \"1\" : \"0\") == \"1\";\nlet open = getMyVar('open', _.open ? \"1\" : \"0\") == \"1\";\nlet name = getMyVar('name', _.name) || \"\";\nlet type = getMyVar('type', _.type) || \"\";\nlet data = getMyVar('data', _.data) || \"\";\n\n\n\n\n\nd.push({\n    title: \"只在一页执行\",\n    url: $('#noLoading#').lazyRule((yn) => {\n        putMyVar(\"page\", yn);\n        refreshPage();\n        return 'hiker://empty';\n    }, page ? \"0\" : \"1\"),\n    img: \"http://123.56.105.145/tubiao/messy/\" + (page ? 55 : 63) + \".svg\",\n    col_type: 'text_icon'\n});\nd.push({\n    title: \"启用主题元素\",\n    url: $('#noLoading#').lazyRule((yn) => {\n        putMyVar(\"open\", yn);\n        refreshPage();\n        return 'hiker://empty';\n    }, open ? \"0\" : \"1\"),\n    img: \"http://123.56.105.145/tubiao/messy/\" + (open ? 55 : 63) + \".svg\",\n    col_type: 'text_icon'\n});\n\n\nd.push({\n    col_type: 'line_blank'\n});\n\n\nd.push({\n    title: name,\n    desc: \"title\",\n    url: $(\"#noLoading#\").lazyRule((t) => {\n        const hikerPop = $.require(\"http://123.56.105.145/weisyr/js/hikerPop.js\");\n        let pop = hikerPop.inputAutoRow({\n            hint: \"不建议留空\",\n            title: \"元素名称\",\n            defaultValue: t || \"\",\n            //hideCancel: true,\n            noAutoSoft: false, //不自动打开输入法\n            confirm(text) {\n                if (t == \"最后面\") return 'toast://名称不能是\"最后面\"';\n                putMyVar(\"name\", text);\n                refreshPage();\n                return \"hiker://empty\";\n            },\n            cancel() {\n                return \"hiker://empty\";\n            }\n        });\n        return \"hiker://empty\";\n    }, name),\n    img: \"\",\n    col_type: 'text_1'\n});\nd.push({\n    title: type,\n    desc: \"col_type\",\n    url: $(\"#noLoading#\").lazyRule(() => {\n        const hikerPop = $.require(\"http://123.56.105.145/weisyr/js/hikerPop.js\");\n        let pop = hikerPop.selectBottom({\n            title: \"请选择显示样式\",\n            options: getColTypes(),\n            columns: 2,\n            height: 0.6, //0-1\n            position: 1,\n            click(a) {\n                putMyVar(\"type\", a);\n                refreshPage();\n                return \"hiker://empty\";\n            },\n            longClick(a) {\n                putMyVar(\"type\", a);\n                refreshPage();\n                return \"hiker://empty\";\n            }\n        });\n        return \"hiker://empty\";\n    }),\n    img: \"\",\n    col_type: 'text_1'\n});\nd.push({\n    desc: path ?\n        '继承数组d，提供变量：$name, $type\\n栗子：\\nd.push({title: \"$name\",desc: \"$type\",url: \"hiker://empty\"});\\n\\n话题模板可以加 __json 扩展\\n栗子：\\n#主要分类_标题#__{title:\"\",desc:\"\",img:\"\",Color:\"#ff6601\",Strong:true,Rich:true,extra:{lineVisible:false}}' : '继承数组d，提供变量：$name, $type, $title, $desc, $img, $author, $time, $tags, $total',\n    col_type: 'input',\n    extra: {\n        highlight: true,\n        type: \"textarea\",\n        height: 7,\n        defaultValue: data,\n        onChange: $.toString(() => {\n            putMyVar(\"data\", input.trim());\n        })\n    }\n});\n\n\n\nd.push({\n    col_type: 'line_blank'\n});\nd.push({\n    title: \"复原\",\n    url: $(\"确定恢复元素为编辑前吗？\\n此操作不可逆，请谨慎选择。\").confirm((_) => {\n        _.page = _.page ? \"1\" : \"0\";\n        _.open = _.open ? \"1\" : \"0\";\n        for (let key in _) {\n            putMyVar(key, _[key]);\n        }\n        refreshPage();\n        return \"hiker://empty\";\n    }, _),\n    img: \"\",\n    col_type: 'text_3'\n});\n\n\nlet arr = path ? [\n    \"#切换接口_聚合#\", \"#切换接口_独立#\",\n    \"#主要分类_聚合#\", \"#主要分类_独立#\",\n    \"#次要分类_聚合#\", \"#次要分类_独立#\",\n    \"#主要分类_标题#\", \"#次要分类_标题#\",\n    \"#分类数据#\",\n] : [\n    \"#置顶标题#\", \"#页面简介#\",\n    \"#播放下载#\", \"#页面数据#\"\n];\nd.push({\n    title: \"模板\",\n    url: $(arr.concat([\n        \"#分割#\",\n        \"#搜索框#\", \"#高级搜索#\",\n        \"#主题切换#\", \"主题编辑\",\n        \"温馨提示\", \"解析管理\",\n        \"TGX收藏\", \"Media\",\n        \"我的收藏\", \"历史浏览\"\n    ]), 2, '选择扩展操作').select(() => {\n        let type, data, open = \"1\",\n            page = \"1\";\n        switch (input) {\n            case '#主题切换#':\n                type = \"avatar\";\n                data = input;\n                break;\n            case '#分割#':\n                type = \"line_blank\";\n                data = input;\n                break;\n            case '#置顶标题#':\n                type = \"movie_1_vertical_pic_blur\";\n                data = input;\n                break;\n            case '#页面简介#':\n                type = \"rich_text\";\n                data = input;\n                break;\n            case '#搜索框#':\n                type = \"input\";\n                data = input;\n                break;\n            case '#高级搜索#':\n            case '#切换接口_独立#':\n            case '#主要分类_独立#':\n            case '#次要分类_独立#':\n                type = \"scroll_button\";\n                data = input;\n                break;\n            case '#播放下载#':\n            case '#切换接口_聚合#':\n            case '#主要分类_聚合#':\n            case '#次要分类_聚合#':\n                type = \"icon_small_3\";\n                data = input;\n                break;\n            case '#主要分类_标题#':\n            case '#次要分类_标题#':\n                type = \"text_center_1\";\n                data = input;\n                break;\n            case '#分类数据#':\n            case '#页面数据#':\n                page = \"0\";\n                type = \"card_pic_3\";\n                data = input;\n                break;\n\n            case \"温馨提示\":\n                type = \"text_center_1\";\n                data = \"// 获取温馨提示时会检测更新\\n$.require('notice?rule=歌词适配')(\\\"$type\\\");\";\n                break;\n            case \"解析管理\":\n                type = \"icon_small_3\";\n                data = \"d.push({\\n    title: Strong(Color(\\\"解析管理\\\", \\\"#ff6601\\\")),\\n    url: \\\"hiker://page/ruleList#noHistory##noRecordHistory##noRefresh#?pageTitle=解析管理&rule=歌词适配\\\",\\n    img: $.require('image?rule=歌词适配')('设置'),\\n    col_type: '$type'\\n});\";\n                break;\n            case \"TGX收藏\":\n                type = \"icon_small_3\";\n                data = \"d.push({\\n    title: Strong(Color(\\\"TGX收藏\\\", \\\"#ff6601\\\")),\\n    url: \\\"hiker://page/collection#noHistory##noRecordHistory##noRefresh#?rule=歌词适配\\\",\\n    img: $.require('image?rule=歌词适配')('收藏'),\\n    col_type: '$type',\\n    extra: {\\n        pageTitle: \\\"TGX收藏\\\",\\n    }\\n});\";\n                break;\n            case \"Media\":\n                type = \"scroll_button\";\n                data = \"d.push({\\n    title: 'Media',\\n    url: 'hiker://localMedia',\\n    img: 'hiker://images/home_download',\\n    col_type: '$type'\\n});\";\n                break\n            case \"我的收藏\":\n                type = \"scroll_button\";\n                data = \"d.push({\\n    title: '我的收藏',\\n    url: 'hiker://collection?rule=歌词适配',\\n    img: 'hiker://images/icon1',\\n    col_type: '$type'\\n});\";\n                break;\n            case \"历史浏览\":\n                type = \"scroll_button\";\n                data = \"d.push({\\n    title: '历史记录',\\n    url: 'hiker://history?rule=歌词适配',\\n    img: 'hiker://images/icon3',\\n    col_type: '$type'\\n});\";\n                break;\n            case \"主题编辑\":\n                type = \"scroll_button\";\n                data = \"d.push({\\n    title: '主题编辑',\\n    url: 'hiker://page/theme1#noHistory##noRecordHistory#?rule=歌词适配',\\n    img: 'hiker://images/icon_class',\\n    col_type: '$type'\\n});\";\n                break;\n        }\n        let _ = {\n            page,\n            open,\n            name: input.replace(/\\#/g, \"\"),\n            type,\n            data\n        }\n        for (let key in _) {\n            putMyVar(key, _[key]);\n        }\n        refreshPage();\n        return \"hiker://empty\";\n    }),\n    img: \"\",\n    col_type: 'text_3'\n});\nd.push({\n    title: \"保存\",\n    url: $('#noLoading#').lazyRule((__, _) => {\n        let list = JSON.parse(readFile(__.path) || \"[]\");\n        list[__.i] = {\n            page: getMyVar('page', _.page ? \"1\" : \"0\") == \"1\",\n            open: getMyVar('open', _.open ? \"1\" : \"0\") == \"1\",\n            name: getMyVar('name', _.name) || \"\",\n            type: getMyVar('type', _.type) || \"\",\n            data: getMyVar('data', _.data) || \"\"\n        }\n        saveFile(__.path, JSON.stringify(list, 0, 2));\n        return back(true), \"hiker://empty\";\n    }, MY_PARAMS.__, MY_PARAMS._),\n    img: \"\",\n    col_type: 'text_3'\n});\n\n\nsetResult(d);"},{"col_type":"movie_3","name":"Ⓣ主题函数","path":"theme3","rule":"js:\neval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配', {})).rule);\nlet setData = (set, themeType) => {\n    name = \"程序默认\";\n    author = \"Thomas喲\";\n    img = JSON.parse(request(\"hiker://home@歌词适配\")).icon;\n    saveFile(set, JSON.stringify({\n        this: name,\n        name: [name],\n        data: [{\n            title: name,\n            author,\n            icon: img\n        }]\n    }));\n    if (themeType == \"home\") {\n        data = [{\n                \"page\": true,\n                \"open\": true,\n                \"name\": \"温馨提示\",\n                \"type\": \"text_center_1\",\n                \"data\": \"// 获取温馨提示时会检测更新\\n$.require('notice?rule=歌词适配')(\\\"$type\\\");\"\n            },\n            {\n                \"page\": true,\n                \"open\": true,\n                \"name\": \"主题切换\",\n                \"type\": \"scroll_button\",\n                \"data\": \"#主题切换#__{Rich:true,Strong:true,Color:\\\"#62a6fb\\\"}\"\n            },\n            {\n                \"page\": true,\n                \"open\": true,\n                \"name\": \"主要分类\",\n                \"type\": \"scroll_button\",\n                \"data\": \"#主要分类_独立#__{Color:true,Strong:true,Rich:true}\"\n            },\n            {\n                \"open\": true,\n                \"page\": true,\n                \"name\": \"空\",\n                \"type\": \"line_blank\",\n                \"data\": \"#分割#\"\n            },\n            {\n                \"open\": true,\n                \"page\": true,\n                \"name\": \"空\",\n                \"type\": \"line_blank\",\n                \"data\": \"#分割#\"\n            },\n            {\n                \"open\": true,\n                \"page\": true,\n                \"name\": \"切换接口\",\n                \"type\": \"icon_small_3\",\n                \"data\": \"#切换接口_聚合#__{Color:'#ff6601',Strong:true,Rich:false}\"\n            },\n            {\n                \"open\": true,\n                \"page\": true,\n                \"name\": \"TGX收藏\",\n                \"type\": \"icon_small_3\",\n                \"data\": \"d.push({\\n    title: Strong(Color(\\\"TGX收藏\\\", \\\"#ff6601\\\")),\\n    url: $('#noLoading#').lazyRule(() => {\\n        return $.require('typeCache?rule=歌词适配').Lazy(\\\"collection\\\");\\n    }),\\n    img: $.require('image?rule=歌词适配')('收藏'),\\n    col_type: 'icon_small_3',\\n    extra: {\\n        pageTitle: \\\"TGX收藏\\\",\\n    }\\n});\"\n            },\n            {\n                \"page\": true,\n                \"open\": true,\n                \"name\": \"解析管理\",\n                \"type\": \"icon_small_3\",\n                \"data\": \"d.push({\\n    title: Strong(Color(\\\"解析管理\\\", \\\"#ff6601\\\")),\\n    url: \\\"hiker://page/ruleList#noHistory##noRecordHistory##noRefresh#?pageTitle=解析管理&rule=歌词适配\\\",\\n    img: $.require('image?rule=歌词适配')('设置'),\\n    col_type: '$type'\\n});\"\n            },\n            {\n                \"open\": true,\n                \"page\": true,\n                \"name\": \"搜索框\",\n                \"type\": \"input\",\n                \"data\": \"#搜索框#\"\n            },\n            {\n                \"open\": true,\n                \"page\": true,\n                \"name\": \"我的收藏\",\n                \"type\": \"scroll_button\",\n                \"data\": \"d.push({\\n    title: '我的收藏',\\n    url: 'hiker://collection?rule=歌词适配',\\n    img: 'hiker://images/icon1',\\n    col_type: 'scroll_button'\\n});\"\n            },\n            {\n                \"open\": true,\n                \"page\": true,\n                \"name\": \"历史浏览\",\n                \"type\": \"scroll_button\",\n                \"data\": \"d.push({\\n    title: '历史记录',\\n    url: 'hiker://history?rule=歌词适配',\\n    img: 'hiker://images/icon3',\\n    col_type: 'scroll_button'\\n});\"\n            },\n            {\n                \"open\": true,\n                \"page\": true,\n                \"name\": \"高级搜索\",\n                \"type\": \"scroll_button\",\n                \"data\": \"#高级搜索#\"\n            },\n            {\n                \"open\": true,\n                \"page\": true,\n                \"name\": \"Media\",\n                \"type\": \"scroll_button\",\n                \"data\": \"d.push({\\n    title: 'Media',\\n    url: 'hiker://localMedia',\\n    img: 'hiker://images/home_download',\\n    col_type: 'scroll_button'\\n});\"\n            },\n            {\n                \"open\": true,\n                \"page\": true,\n                \"name\": \"空\",\n                \"type\": \"line_blank\",\n                \"data\": \"#分割#\"\n            },\n            {\n                \"open\": true,\n                \"page\": true,\n                \"name\": \"标题\",\n                \"type\": \"text_center_1\",\n                \"data\": \"#主要分类_标题#__{Color:'#ff6601',Strong:true,Rich:true,extra:{lineVisible:false}}\"\n            },\n            {\n                \"open\": true,\n                \"page\": true,\n                \"name\": \"次要分类\",\n                \"type\": \"scroll_button\",\n                \"data\": \"#次要分类_独立#__{Color:true,Strong:true,Rich:true}\"\n            },\n            {\n                \"open\": true,\n                \"page\": true,\n                \"name\": \"分隔\",\n                \"type\": \"blank_block\",\n                \"data\": \"#分割#\"\n            },\n            {\n                \"page\": true,\n                \"open\": true,\n                \"name\": \"加载动画\",\n                \"type\": \"pic_1_center\",\n                \"data\": \"Loading();\"\n            },\n            {\n                \"open\": true,\n                \"page\": false,\n                \"name\": \"分类数据\",\n                \"type\": \"card_pic_3\",\n                \"data\": \"#分类数据#\"\n            }\n        ];\n    } else {\n        data = [{\n            \"page\": true,\n            \"open\": true,\n            \"name\": \"主题切换\",\n            \"type\": \"pic_1_full\",\n            \"data\": \"#主题切换#__{img:\\\"http://123.56.105.145/weisyr/img/TopImg0.png\\\",extra:{inheritTitle:false}}\"\n        }, {\n            \"open\": true,\n            \"page\": false,\n            \"name\": \"页面数据\",\n            \"type\": \"card_pic_3\",\n            \"data\": \"#页面数据#\"\n        }];\n    }\n    // log(data);\n    saveFile(p + md5(name) + \".json\", JSON.stringify(data, 0, 2));\n    return true;\n}\nlet getData1 = (themeType, run) => {\n    p = \"hiker://files/rules/Thomas/gcsp1999/theme/\" + themeType + \"/\";\n    set = p + \"install.json\";\n    if (!fileExist(set)) {\n        setData(set, themeType)\n    }\n    _ = JSON.parse(readFile(set));\n    if (run == \"rely\") return _;\n    name = _.this;\n    index = _.name.indexOf(name);\n    author = _.data[index].author;\n    img = _.data[index].icon;\n    path = p + md5(name) + \".json\";\n    let data = JSON.parse(readFile(path) || \"[]\");\n    if (run) return data;\n    if (data.length == 0) {\n        data = [{\n            open: true,\n            page: true,\n            type: \"avatar\",\n            data: \"#主题切换#\"\n        }]\n    }\n    return data.filter(_ => _.open && (!_.page || MY_PAGE == 1));\n};\nlet getData2 = (_, i) => {\n    _.data = String(_.data || \"\");\n    let t, __ = _.data.match(/__\\s*(\\{[\\S+\\s]*\\})/i);\n    if (__) eval(\"__ = \" + __[1]);\n    else __ = {};\n    let getT1 = (t, _) => {\n        t = __.Color ? Color(t, __.Color != true ? __.Color : \"\") : t;\n        t = __.Strong ? Strong(t) : t;\n        t = __.Rich ? Rich(t) : t;\n        return t.replace(/\"/g, \"\\\\\\\"\").replace(/`/g, \"\\\\\\`\");\n    }\n    let getT2 = (t) => {\n        t = __.Color ? `Color(${t}, \"${__.Color != true ? __.Color : \"\"}\")` : t\n        t = __.Strong ? `Strong(${t})` : t;\n        return __.Rich ? `Rich(${t})` : t;\n    }\n    switch (_.data.replace(/__[\\S\\s]*/gi, \"\")) {\n        case '#主题切换#':\n            return `d.push({\n    title: ${getT2(`'${__.title||''}'||name`)},\n    desc: author,\n    img: \"${__.img||\"\"}\" || img,\n    col_type: \"${_.type}\",\n    url: $(\"#noLoading#\").lazyRule((_, index, set) => {\n        const hikerPop = $.require(\"http://123.56.105.145/weisyr/js/hikerPop.js\");\n        let iconList = [];\n        if(/theme\\\\/home/i.test(set))\n        iconList.push({\n            \"title\": \"网站整合\",\n            \"icon\": \"hiker://images/rule_type_all\"\n        });\n        _.data.map((_, i) => {\n            iconList.push({\n                title: _.title + '\\\\n\\\\n#i=' + i + '#',\n                icon: _.icon\n            });\n        });\n        let pop = hikerPop.selectCenterIcon({\n            iconList,\n            title: \"主题切换\",\n            extraMenu: new hikerPop.IconExtraMenu(() => {\n                pop.dismiss();\n                return \"hiker://page/theme1#noHistory##noRecordHistory#?pageTitle=主题编辑&rule=歌词适配\";\n            }),\n            columns: 1,\n            position: index,\n            click(a) {\n                let x5 = a == \"网站整合\" ? 1 : 0;\n                putMyVar(\"x5_webview_single\", x5 + \"\");\n                if (!x5) {\n                    _.this = a.split(\"\\\\n\\\\n#i=\")[0];\n                    saveFile(set, JSON.stringify(_, 0, 2));\n                }\n                refreshPage();\n                return \"hiker://empty\";\n            }\n        });\n        return \"hiker://empty\";\n    }, _, _X5(index, set), set),\n    extra: ${JSON.stringify(__.extra||{})}\n});`;\n            break;\n\n\n\n\n\n\n\n\n        case '#置顶标题#':\n            return `d.push({\n    title: '$title',\n    desc: Rich(Color('author：$author\\\\ntime：$time\\\\ntags：$tags', '#006699').small()),\n    img: '$img',\n    col_type: '${_.type}',\n    url: $([{\n        title: \"我的收藏\",\n        icon: \"hiker://images/icon_download\"\n    }, {\n        title: \"历史浏览\",\n        icon: \"hiker://images/icon_his\"\n    }, {\n        title: \"程序设置\",\n        icon: \"hiker://images/rule_type_other\"\n    }, {\n        title: \"本地歌曲\",\n        icon: \"hiker://images/rule_type_audio\"\n    }, {\n        title: \"解析管理\",\n        icon: \"hiker://images/icon_xiutan\"\n    }, {\n        title: \"高级搜索\",\n        icon: \"hiker://images/icon_find\"\n    }, {\n        \"title\": \"收藏歌单\",\n        \"icon\": \"hiker://images/rule_type_comics\"\n    }, {\n        \"title\": \"复制链接\",\n        \"icon\": \"hiker://images/rule_type_all\"\n    }], 2, '选择页面').select((_, __) => {\n        let u = 'hiker://empty';\n        switch (input) {\n            case '我的收藏':\n                u = 'hiker://collection?rule=歌词适配';\n                break;\n            case '历史浏览':\n                u = 'hiker://history?rule=歌词适配';\n                break;\n            case '本地歌曲':\n                u = 'hiker://localMedia';\n                break;\n            case '程序设置':\n                u = 'hiker://page/install#noHistory##noRecordHistory##noRefresh#?pageTitle=程序设置&rule=歌词适配';\n                break;\n            case '解析管理':\n                u = 'hiker://page/ruleList#noHistory##noRecordHistory##noRefresh#?pageTitle=解析管理&rule=歌词适配';\n                break;\n            case '高级搜索':\n                clearMyVar('s_platform');\n                clearMyVar('s_t3');\n                clearMyVar('s_t4');\n                if (__.back) {\n                    return back(false), u;\n                }\n                u = $.require('typeCache?rule=歌词适配').Lazy(\"search\");\n                break;\n            case '收藏歌单':\n                return $.require('collection2?rule=歌词适配').logData(_, 1);\n                break;\n            case '复制链接':\n                if (_.source.match(/qq|wy|kg|kw|mg|5s/) && (_.content != 3 || _.source == 'wy'))\n                    return $.require('lib?rule=歌词适配').copyurl(_.source, _.content, _.sourceListId);\n                else\n                    u = \"toast://无法拼接在线链接~\";\n                break;\n        }\n        return u;\n    }, c, MY_PARAMS),\n    extra: {\n        gradient: true\n    }\n});`;\n            break;\n        case '#页面简介#':\n            return `let desc1 = String(\"$desc\").trim()\n        .replace(/\\\\n/g, \"<br>\").replace(/<(br|p)>\\\\s*/gi, \"<$1>　　\")\n        .replace(/'/g, \"&apos;\").replace(/\"/g, \"\\\\&quot;\");\nlet desc2 = desc1.replace(/<br>[\\\\s\\\\S]+/, \"\").slice(0, 24) + \"…\";\nlet desc3 = $(\"#noLoading#\").lazyRule((dc, sdc, m) => {\n    let show = getMyVar(m, \"0\");\n    let title = findItem(m).title;\n    let re = /(<\\\\/a>　　)[\\\\s\\\\S]*/i;\n    if (show == \"1\") {\n        updateItem(m, {\n            title: title.replace(re, \"$1\" + sdc)\n        });\n        putMyVar(m, \"0\");\n    } else {\n        updateItem(m, {\n            title: title.replace(re, \"$1\" + dc)\n        });\n        putMyVar(m, \"1\");\n    }\n    return \"hiker://empty\";\n}, desc1, desc2, id + \":page:desc\");\nd.push({\n    url: \"hiker://empty\",\n    col_type: '${_.type}',\n    extra: {\n        \"id\": id + \":page:desc\",\n        \"lineSpacing\": 6,\n        \"textSize\": 15\n    },\n    title: '<a href=\\\\'' + desc3 + '\\\\'>' +\n        Strong(Color(\"❖ 简介<br>\", \"#098AC1\")) +\n        '</a>　　' + desc2\n}, {\n    col_type: 'big_blank_block'\n});`;\n            break;\n        case '#播放下载#':\n            return `let is_down = getMyVar('search_down', '0') == '1';\nd.push({\n    title: ${getT2(\"is_down ? '下载歌曲' : '播放歌曲'\")},\n    desc: '${__.desc||''}',\n    img: '${__.img||''}' || 'http://123.56.105.145/tubiao/more/' + (is_down ? 22 : 40) + '.png',\n    url: $(\"#noLoading#\").lazyRule((id) => {\n        let is_down = getMyVar('search_down', '0') == '1';\n        let title, img = 'http://123.56.105.145/tubiao/more/';\n        if (is_down) {\n            title = '${getT1('播放歌曲')}';\n            img += '40';\n        } else {\n            title = '${getT1('下载歌曲')}';\n            img += '22';\n        }\n        img += '.png';\n        putMyVar('search_down', is_down ? '0' : '1');\n        updateItem(id + ':page:down', {\n            title,\n            img\n        });\n        let list = findItemsByCls(id + ':addlist') || [];\n        for (let it of list) {\n            let extra_url = it.url;\n            let url = it.extra.url;\n            it.extra.url = extra_url;\n            updateItem(it.extra.id, {\n                extra: it.extra,\n                url\n            });\n        }\n        return \"hiker://empty\";\n    }, id),\n    col_type: \"${_.type}\",\n    extra: Object.assign({\n        id: id + ':page:down'\n    }, ${JSON.stringify(__.extra||{})})\n});`;\n            break;\n\n\n\n        case '#分割#':\n        case '#主要分类_标题#':\n        case '#次要分类_标题#':\n            return `d.push({\n    title: \"${getT1(_.data.match(\"主要分类\")?tid:_.data.match(\"次要分类\")?trd:(__.title||_.name) )}\",\n    desc: '${__.desc||\"\"}',\n    img: '${__.img||\"\"}',\n    col_type: '${_.type}',\n    url: 'hiker://empty',\n    extra: ${JSON.stringify(__.extra||{})}\n});`\n            break;\n        case '#搜索框#':\n            return `d.push({\n    title: \"${getT1(__.title||'🔍')}\",\n    desc: '${__.desc||'搜索关键词 / 平台链接'}',\n    img: '${__.img||\"\"}',\n    url: $.toString((s_platform) => {\n        if (input.trim()) {\n            putMyVar('s_platform', s_platform);\n            putMyVar('s_t2', input);\n        } else {\n            clearMyVar('s_platform');\n        }\n        clearMyVar('s_t3');\n        clearMyVar('s_t4');\n        clearMyVar('search_page');\n        return $.require('typeCache?rule=歌词适配').Lazy(\"search\");\n    }, platform),\n    col_type: \"input\",\n    extra: Object.assign({\n        id: id + \":search1\",\n        pageTitle: \"高级搜索\",\n        defaultValue: getMyVar(\"s_t2\"),\n        onChange: \"putMyVar('s_t2', input)\"\n    }, ${JSON.stringify(__.extra||{})})\n});`\n            break;\n        case '#高级搜索#':\n            return `d.push({\n    title: \"${getT1(__.title||'高级搜索')}\",\n    desc: \"${__.desc||\"\"}\",\n    url: $('#noLoading#').lazyRule(() => {\n        clearMyVar('search_page');\n        clearMyVar('s_platform');\n        clearMyVar('s_t3');\n        clearMyVar('s_t4');\n        return $.require('typeCache?rule=歌词适配').Lazy(\"search\");\n    }),\n    img: \"${__.img||'hiker://images/icon2'}\",\n    col_type: '${_.type}',\n    extra: Object.assign({\n        pageTitle: \"高级搜索\",\n    }, ${JSON.stringify(__.extra||{})})\n});`\n            break;\n        case '#切换接口_聚合#':\n            return `d.push({\n    title: \"${getT1(__.title||\"切换接口\")}\",\n    desc: \"${__.desc||\"\"}\",\n    url: $(platforms.slice(0, 8).map(title => {\n        if (title == platform)\n            title = Rich(Strong(Color(title)));\n        return title;\n    }), 2, '选择接口平台').select(() => {\n        if (!input.match(/^‘‘’’|<strong>|<font>/i)) {\n            putMyVar('platform', input);\n            clearMyVar('home_page');\n            clearMyVar('tid');\n            clearMyVar('tii');\n            refreshPage()\n        }\n        return 'hiker://empty';\n    }),\n    img: \"${__.img||''}\"||$.require('image?rule=歌词适配')(platform),\n    col_type: '${_.type}',\n    extra: ${JSON.stringify(__.extra||{})}\n});`\n            break;\n        case '#切换接口_独立#':\n            return `platforms.slice(0, 8).map((name, ii) => {\n    d.push({\n        title: platform == name ? ${getT2(\"name\")} : name,\n        desc: \"${__.desc||\"\"}\",\n        url: $('#noLoading#').lazyRule((tid) => {\n            putMyVar('platform', tid);\n            clearMyVar('home_page');\n            clearMyVar('tid');\n            clearMyVar('tii');\n            refreshPage();\n            return 'hiker://empty';\n        }, name),\n        img: \"${__.img||''}\"||$.require('image?rule=歌词适配')(platform),\n        col_type: '${_.type}',\n        extra: ${JSON.stringify(__.extra||{})}\n    });\n});`;\n            break;\n        case '#主要分类_聚合#':\n            return `d.push({\n    title: \"${getT1(__.title||\"大类切换\")}\",\n    desc: \"${__.desc||\"\"}\",\n    url: $(Object.keys(iTag).map(title => {\n        if (title == tid)\n            title = Rich(Strong(Color(title)));\n        return title\n    }), 2, '主要分类选择').select(() => {\n        clearMyVar('home_page');\n            putMyVar('tid', input);\n            clearMyVar('tii');\n            refreshPage();\n        return 'hiker://empty';\n    }),\n    img: \"${__.img||''}\"||$.require('image?rule=歌词适配')(platform),\n    col_type: '${_.type}',\n    extra: ${JSON.stringify(__.extra||{})}\n});`;\n            break;\n        case '#主要分类_独立#':\n            return `Object.keys(iTag).map((name, ii) => {\n    d.push({\n        title: tid == name ? ${getT2(\"name\")} : name,\n        url: $('#noLoading#').lazyRule((tid) => {\n            clearMyVar('home_page');\n            putMyVar('tid', tid);\n            clearMyVar('tii');\n            refreshPage();\n            return 'hiker://empty';\n        }, name),\n        col_type: '${_.type}',\n        desc: \"${__.desc||\"\"}\",\n        img: \"${__.img||''}\",\n        extra: ${JSON.stringify(__.extra||{})}\n    });\n});`;\n            break;\n        case '#次要分类_聚合#':\n            return `d.push({\n    title: \"${getT1(__.title||\"小类切换\")}\",\n    desc: \"${__.desc||\"\"}\",\n    url: $(trr.map((title,ii) => {\n        if (ii == tii)\n            title = Rich(Strong(Color(title)));\n        return title\n    }), 2, '次要分类选择').select((trr) => {\n        let tii = trr.indexOf(input);\n        if(tii!=-1){\n        clearMyVar('home_page');\n            putMyVar('tii', tii);\n            refreshPage(false);\n            }\n        return 'hiker://empty';\n    },trr),\n    img: \"${__.img||''}\"||$.require('image?rule=歌词适配')(platform),\n    col_type: '${_.type}',\n    extra: ${JSON.stringify(__.extra||{})}\n});`;\n            break;\n        case '#次要分类_独立#':\n            return `trr.map((name, ii) => {\n    d.push({\n        title: tii == ii ? ${getT2(\"name\")} : name,\n        url: $('#noLoading#').lazyRule((tii) => {\n            clearMyVar('home_page');\n            putMyVar('tii', tii);\n            refreshPage(false);\n            return 'hiker://empty';\n        }, ii),\n        img: \"${__.img||''}\"||$.require('image?rule=歌词适配')(platform),\n    col_type: '${_.type}',\n    desc: \"${__.desc||\"\"}\",\n    extra: ${JSON.stringify(__.extra||{})}\n    });\n});`\n            break;\n        case '#分类数据#':\n            return `if (!Array.isArray(uri)) {\n    if (MY_PAGE == 1 || getMyVar('home_page', '0') == '0') {\n        let pageSize = platform == \"my\" ? 90 : (platform == \"5s\" ? 16 : 30);\n        let total = $.require(platform + \"?rule=歌词适配\").lazy(1, {sourceListId:uri}, \"${_.type}\");\n        if (total < MY_PAGE * pageSize) {\n            putMyVar('home_page', '1');\n            d.push({\n                title: \"““””\" + '我是有底线的'.fontcolor('Gray').small(),\n                url: 'hiker://empty',\n                col_type: 'text_center_1',\n                extra: {\n                    lineVisible: false\n                }\n            });\n        } else {\n            clearMyVar('home_page');\n        }\n    }\n} else d = d.concat(uri);`\n            break;\n\n        case '#页面数据#':\n            _shuju = i;\n            return `if (MY_PAGE == 1 || getMyVar('home_page', '0') == '0') {\n    let pageSize = 30;\n    if ((a == \"wy\" && b != \"5\") || (a == \"5s\" && b == \"2\")) {\n        pageSize = 9999;\n    } else if (a == \"my\") {\n        pageSize = 90;\n    } else if (a == \"lanzou\") {\n        pageSize = 50;\n    }\n    ___ = $.require(a + \"?rule=歌词适配\").lazy(b, c, false, ${JSON.stringify({\n        title: __.title,\n        desc: __.desc,\n        col_type: _.type\n      })});\n    total = ___.total;\n    if (total < MY_PAGE * pageSize) {\n        putMyVar('home_page', '1');\n        d.push({\n            title: \"““””\" + '我是有底线的'.fontcolor('Gray').small(),\n            url: 'hiker://empty',\n            col_type: 'text_center_1',\n            extra: {\n                lineVisible: false\n            }\n        });\n    } else {\n        clearMyVar('home_page');\n    }\n}`\n            break;\n    }\n    return _.data.replace(/\\$type/gi, _.type).replace(/\\$name/gi, _.name);\n}\n$.exports = {\n    setData,\n    getData1,\n    getData2,\n    lazy: function(a, b, c) {\n        eval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配', {})).rule);\n        if (MY_PAGE == 1) d = [], Loading();\n        let ___, total, data;\n        themeType = \"page\";\n        _shuju = false;\n        d = [];\n        data = getData1(themeType).map((_, i) => getData2(_, i));\n        if (_shuju !== false) {\n            eval(String(data[_shuju]));\n            data.splice(_shuju, 1);\n            _shuju = d;\n            d = [];\n        }\n        data = String(data.join(\"\\n\"));\n        if (Array.isArray(_shuju)) {\n            eval(Rich(data, ___));\n            d = d.concat(_shuju);\n        } else eval(data);\n        MY_PAGE == 1 ? setPreResult(d) : setResult(d);\n        deleteItemByCls('loading_gif');\n    },\n    clickJs: function(p1, p2, i) {\n        return $([\n            \"修改名称\", \"修改歌手\",\n            \"修改专辑\", \"更改排序\",\n            \"修改封面\", \"切换分组\",\n            \"修改音质\", \"修改时长\",\n        ], 2, '选择要变更的事件').select((p1, p2, i) => {\n            let zy = JSON.parse(readFile(p1 + p2));\n            let zu = zy.map((_, i) => _.name + '\\n' + i + _.source + _.songId);\n            switch (input) {\n                case '修改名称':\n                case '修改封面':\n                case '修改歌手':\n                case '修改专辑':\n                case '修改时长':\n                case '修改音质':\n                    [type, text] = {\n                        \"修改名称\": ['name', '请输入新的名称'],\n                        \"修改歌手\": ['singer', '请输入新的歌手'],\n                        \"修改专辑\": ['albumName', '请输入新的专辑'],\n                        \"修改封面\": ['picUrl', '请输入正确的封面地址'],\n                        \"修改时长\": ['interval', '请输入新的时长'],\n                        \"修改音质\": ['qualitys', '请输入新的音质'],\n                    }[input];\n                    let isArr = input == \"修改音质\";\n                    return $(isArr ? JSON.stringify(zy[i][type], 0, 1) : zy[i][type], text).input((zy, i, type, path, isArr) => {\n                        try {\n                            if (type == 'name' && !input.trim()) return \"toast://资源名不建议为空\";\n                            input = isArr ? JSON.parse(input) : input;\n                            if (isArr && !Array.isArray(input)) {\n                                return \"toast://字符串不是json数组\";\n                            }\n                            zy[i][type] = input\n                            saveFile(path, JSON.stringify(zy, 0, 1));\n                            refreshPage(false);\n                            return \"toast://修改参数成功\";\n                        } catch (put_err) {\n                            return \"toast://\" + (isArr ? \"不是正确的json字符串\" : \"未知错误\");\n                        }\n                    }, zy, i, type, p1 + p2, isArr);\n                    break;\n                case '更改排序':\n                    let data1 = zy[i];\n                    zy.splice(i, 1);\n                    zu.splice(i, 1);\n                    return $(zu.concat(\"最后面\"), 2, '请选择资源位置').select((path, zy, zu, data) => {\n                        let i;\n                        if (\"最后面\" == input) {\n                            i = zu.length;\n                        } else {\n                            i = zu.indexOf(input);\n                        }\n                        zy.splice(i, 0, data);\n                        saveFile(path, JSON.stringify(zy, 0, 1));\n                        refreshPage(false);\n                        return \"toast://更改排序成功\";\n                    }, p1 + p2, zy, zu, data1);\n                    break;\n\n                case '切换分组':\n                    let data2 = zy[i];\n                    zu = JSON.parse(readFile(p1 + \"details.json\"))\n                        .map(_ => _.name + '\\n' + _.source + '_' + _.sourceListId);\n                    zy.splice(i, 1);\n                    return $(zu.concat('新组'), 2, '请选择资源位置').select((zu, zy1, p1, p2, data) => {\n                        if ('新组' == input) {\n                            return $(\"\", \"请输入新组名称\").input((zy1, p1, p2, data) => {\n                                if (!input.trim()) return \"toast://组名不能为空\";\n                                let t = new Date().getTime();\n                                let _ = {\n                                    name: input,\n                                    source: \"userlist\",\n                                    sourceListId: t,\n                                    locationUpdateTime: t,\n                                    picUrl: \"\",\n                                    content: \"2\"\n                                }\n                                zy = JSON.parse(readFile(p1 + \"details.json\"));\n                                zu = zy.map(_ => _.name + '\\n' + _.source + '_' + _.sourceListId).concat(\"最后面\");\n                                return $(zu, 2, '请选择新组位置').select((zy1, zy, zu, p1, p2, _, data) => {\n                                    let i = zu.indexOf(input);\n                                    zy.splice(i, 0, _);\n                                    saveFile(p1 + p2, JSON.stringify(zy1, 0, 1));\n                                    saveFile(p1 + \"details.json\", JSON.stringify(zy, 0, 1));\n                                    saveFile(p1 + _.source + '_' + _.sourceListId + '.json', JSON.stringify([data], 0, 1));\n                                    refreshPage(false);\n                                    return \"toast://分组切换成功\";\n                                }, zy1, zy, zu, p1, p2, _, data);\n                            }, zy1, p1, p2, data);\n                        }\n                        let i = zu.indexOf(input);\n                        let p3 = zu[i].replace(/^[\\S\\s]*\\n/i, \"\") + \".json\";\n                        zy = JSON.parse(readFile(p1 + p3));\n                        zu = zy.map((_, i) => _.name + '\\n' + i + _.source + _.songId);\n                        return $(zu.concat(\"最后面\"), 2, '请选择资源位置').select((p1, p2, p3, zy1, zy, zu, data) => {\n                            let i;\n                            if (\"最后面\" == input) {\n                                i = zu.length;\n                            } else {\n                                i = zu.indexOf(input);\n                            }\n                            zy.splice(i, 0, data);\n                            saveFile(p1 + p2, JSON.stringify(zy1, 0, 1));\n                            saveFile(p1 + p3, JSON.stringify(zy, 0, 1));\n                            refreshPage(false);\n                            return \"toast://切换分组成功\";\n                        }, p1, p2, p3, zy1, zy, zu, data);\n                    }, zu, zy, p1, p2, data2);\n                    break;\n            }\n        }, p1, p2, i);\n    }\n}"},{"col_type":"movie_3","name":"Ⓛ落雪歌单","path":"GZIP","rule":"js:\nconst Byte = java.lang.Byte;\nconst Base64 = java.util.Base64;\nconst javaString = java.lang.String;\nconst StringBuffer = java.lang.StringBuffer;\nconst newInstance = java.lang.reflect.Array.newInstance;\n\nconst GZIPInputStream = java.util.zip.GZIPInputStream;\nconst GZIPOutputStream = java.util.zip.GZIPOutputStream;\nconst ByteArrayInputStream = java.io.ByteArrayInputStream;\nconst ByteArrayOutputStream = java.io.ByteArrayOutputStream;\n\nfunction zip(path, text) {\n    // gzip压缩\n    let baseStr = new javaString(text);\n    let baos = new ByteArrayOutputStream();\n    let gzos = new GZIPOutputStream(baos);\n    gzos.write(baseStr.getBytes(\"UTF-8\"));\n    gzos.close(); // 关闭压缩流\n    baos.close();\n\n    // 转换为Hex\n    let data = baos.toByteArray();\n    let strBuffer = new StringBuffer();\n    for (let i = 0; i < data.length; i++) {\n        strBuffer.append(javaString.format(\"%02x\", Byte(data[i])));\n    }\n\n    // 保存到路劲\n    writeHexFile(\n        path,\n        String(strBuffer.toString())\n    );\n    return true;\n}\n\nfunction unzip(path) {\n    // 文件转换成byte\n    let text = hexToBase64(fetch(path, {\n        toHex: true\n    }));\n    let compressedData = Base64.getDecoder().decode(text);\n\n    // gzip解压\n    let bais = new ByteArrayInputStream(compressedData);\n    let baos = new ByteArrayOutputStream();\n    let buffer = new newInstance(Byte.TYPE, 1024);\n    let gis = new GZIPInputStream(bais);\n    let len;\n    while ((len = gis.read(buffer)) != -1) {\n        baos.write(buffer, 0, len);\n    }\n    gis.close();\n    bais.close();\n    baos.close();\n\n    // 返回字符串\n    let decompressedString = new javaString(baos.toByteArray(), \"UTF-8\");\n    return String(decompressedString);\n}\n\n$.exports = {\n    zip,\n    unzip\n}"},{"col_type":"movie_3","name":"设置函数","path":"typeCache","rule":"eval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配', {})).rule);\nlet d = [];\n\nfunction line(c, i, t) {\n    d.push({\n        col_type: c || 'line_blank',\n        title: t ? Strong(t).small() : '',\n        img: $.require('image?rule=歌词适配')(i),\n        url: 'hiker://empty'\n    });\n}\n\nfunction getCache(_run, _data) {\n    let cachePath = \"hiker://files/rules/Thomas/gcsp1999/typeCache.json\";\n    if (_run) return cachePath;\n    try {\n        if (typeof _data === 'object') {\n            throw new Error('_data is object');\n        }\n        return JSON.parse(readFile(cachePath));\n    } catch (e) { // !fileExist(cachePath)\n        _data = _data || {\n            search: {\n                Refresh: \"\",\n                Theme_i: \"\",\n                Params_: \"p=fypage&\"\n            },\n            collection: {\n                Refresh: \"\",\n                Theme_i: \"\",\n                Params_: \"\"\n            },\n            home: {\n                Refresh: \"\",\n                Theme_i: \"\",\n                Params_: \"p=fypage&\"\n            },\n            songinfo: {\n                isCache: true,\n                preType: \"\",\n                noCheck: \"\",\n                ptProxy: 1, // 平台解析\n                qtProxy: 2, // 扩展解析\n                Play_mv: 3, // mv解析\n                Quality: \"0\", // 播放音质\n                _Ignore: true,\n                danmuLrc: false,\n            }\n        };\n        saveFile(cachePath, JSON.stringify(_data));\n        return _data;\n    }\n}\n\nfunction setCache(_type, _key, _value) {\n    let cacheInfo = getCache();\n\n    if (_value !== undefined)\n        cacheInfo[_type][_key] = _value;\n    else if (typeof _key === 'object')\n        cacheInfo[_type] = _key;\n    else\n        return false;\n\n    getCache(false, cacheInfo);\n    return (_value !== undefined ? refreshPage(false) : back(false)), 'hiker://empty';\n}\n\nfunction getPage1(install_i) {\n    let s_i = getMyVar(\"install_i\", install_i || \"0\");\n    line('pic_1_full', 'top');\n    [\n        [\"基础设置\", \"icon_ua\"],\n        [\"音频播放\", \"icon_xiutan\"],\n        [\"扩展推荐\", \"icon_offline\"]\n    ].map(([title, img], i) => {\n        d.push({\n            title: Rich(Strong(s_i == i ? Color(title) : title)),\n            img: $.require('image?rule=歌词适配')(img),\n            col_type: 'text_3',\n            url: $('#noLoading#').lazyRule((i) => {\n                putMyVar('install_i', i);\n                refreshPage(false);\n                return 'hiker://empty';\n            }, String(i))\n        });\n    });\n    line();\n    if (s_i == \"0\") {\n        line('avatar', 'menu_now2', '弹窗提示');\n        let uN = getItem('no_update', '0') == '1';\n        d.push({\n            title: '<b>不再检测更新</b>',\n            col_type: 'text_icon',\n            url: $('#noLoading#').lazyRule((u0) => {\n                setItem('no_update', u0);\n                refreshPage(false);\n                return 'hiker://empty';\n            }, uN ? '0' : '1'),\n            img: 'http://123.56.105.145/tubiao/messy/' + (uN ? 55 : 63) + '.svg'\n        });\n        let u0 = getItem('update0', '1') == '1';\n        d.push({\n            title: '<b>弹窗提示更新</b>',\n            col_type: 'text_icon',\n            url: $('#noLoading#').lazyRule((u0) => {\n                setItem('update0', u0);\n                refreshPage(false);\n                return 'hiker://empty';\n            }, u0 ? '0' : '1'),\n            img: 'http://123.56.105.145/tubiao/messy/' + (u0 ? 55 : 63) + '.svg'\n        });\n        let u1 = getItem('update1', '1') == '1';\n        d.push({\n            title: '<b>kg概念版签到</b>',\n            col_type: 'text_icon',\n            url: $('#noLoading#').lazyRule((u1) => {\n                setItem('update1', u1);\n                refreshPage(false);\n                return 'hiker://empty';\n            }, u1 ? '0' : '1'),\n            img: 'http://123.56.105.145/tubiao/messy/' + (u1 ? 55 : 63) + '.svg'\n        });\n\n\n        line();\n        line('avatar', 'menu_book2', '页面标识');\n        [\n            [\"TGX收藏\", \"collection\"],\n            [\"高级搜索\", \"search\"],\n            [\"程序首页\", \"home\"]\n        ].map([a, b] => {\n            d.push({\n                title: '<b>' + a + '</b>',\n                col_type: 'text_icon',\n                url: $('hiker://empty#noHistory##noRecordHistory##noRefresh#').rule((_type) => {\n                    return $.require('typeCache?rule=歌词适配').getPage2(_type);\n                }, b),\n                img: 'http://123.56.105.145/tubiao/system/10.png'\n            });\n        });\n\n\n        line();\n        line('avatar', 'menu_rules2', '默认主页');\n        let platform = getItem('platform', 'kw');\n        platforms.slice(0, 8).map(title => {\n            d.push({\n                title: title == platform ? Rich(Strong(Color(title))) : title,\n                col_type: 'text_4',\n                url: $('#noLoading#').lazyRule((title) => {\n                    setItem('platform', title);\n                    refreshPage(false);\n                    return 'hiker://empty';\n                }, title)\n            });\n        });\n        line(\"big_blank_block\");\n\n\n        line();\n        line('avatar', 'menu_search2', '默认搜索');\n        let s_platform = getItem('s_platform', 'kw');\n        platforms.slice(1, 6).map(title => {\n            d.push({\n                title: title == s_platform ? Rich(Strong(Color(title))) : title,\n                col_type: 'text_5',\n                url: $('#noLoading#').lazyRule((title) => {\n                    setItem('s_platform', title);\n                    refreshPage(false);\n                    return 'hiker://empty';\n                }, title)\n            });\n        });\n        line(\"big_blank_block\");\n        line(\"blank_block\");\n    } else if (s_i == \"1\") {\n        let songinfo = getCache()[\"songinfo\"];\n        line('avatar', 'code', '基础设置');\n        [\n            [\"音频直链缓存\", \"isCache\", songinfo.isCache, false, true],\n            [\"获取链接信息\", \"noCheck\", songinfo.noCheck == \"\", \"#checkMetadata=false#\", \"\"],\n            [\"强制识别音频\", \"_Ignore\", songinfo._Ignore, false, true],\n            [\"开启弹幕歌词\", \"danmuLrc\", songinfo.danmuLrc, false, true],\n        ].map([a, b, c, e, f] => {\n            d.push({\n                title: Strong(a),\n                img: 'http://123.56.105.145/tubiao/messy/' + (c ? 55 : 63) + '.svg',\n                col_type: 'text_icon',\n                url: $('#noLoading#').lazyRule((a, b, c) => {\n                    return $.require('typeCache?rule=歌词适配').setCache(a, b, c);\n                }, \"songinfo\", b, c ? e : f)\n            });\n        });\n\n\n\n        line();\n        line('avatar', 'icon_ai_big', '解析设置');\n        [\n            [\"启用平台解析\", \"ptProxy\", \"qtProxy\", \"Play_mv\"],\n            [\"启用扩展解析\", \"qtProxy\", \"ptProxy\", \"Play_mv\"],\n            [\"启用视频解析\", \"Play_mv\", \"ptProxy\", \"qtProxy\"],\n        ].map([e, a, b, c] => {\n            let arr = ['messy/63.svg', 'system/30.png', 'system/32.png', 'system/31.png', ];\n            let brr = [\"禁用解析\", \"优先使用\", \"其次调用\", \"最后选择\"]\n            d.push({\n                title: Strong(e),\n                img: 'http://123.56.105.145/tubiao/' + arr[songinfo[a]],\n                col_type: 'text_icon',\n                url: $(brr, 1, '选择页面').select((arr, _, a, b, c) => {\n                    let setCache = $.require('typeCache?rule=歌词适配').setCache;\n                    let i = arr.indexOf(input);\n                    let p = \"songinfo\";\n                    let d = _[a]\n                    setCache(p, a, i);\n                    if (!i || d == i) {\n\n                    } else if (_[b] == i) {\n                        setCache(p, b, d);\n                    } else if (_[c] == i) {\n                        setCache(p, c, d);\n                    }\n                    return 'hiker://empty';\n                }, brr, songinfo, a, b, c),\n            });\n        });\n\n\n\n        line();\n        line('avatar', 'backup', '预加载');\n        [\n            [\"软件默认\", \"\"],\n            [\"强制模式\", \"#pre#\"],\n            [\"无需加载\", \"#noPre#\"],\n        ].map([title, i] => {\n            d.push({\n                title: Strong(title),\n                img: 'http://123.56.105.145/tubiao/messy/' + (songinfo.preType == i ? 55 : 63) + '.svg',\n                col_type: 'text_icon',\n                url: $('#noLoading#').lazyRule((a, b, c) => {\n                    return $.require('typeCache?rule=歌词适配').setCache(a, b, c);\n                }, \"songinfo\", \"preType\", i)\n            });\n        });\n\n\n        line();\n        line('avatar', 'icon_menu6', '播放音质');\n        ts.slice(1, 5).map((title, i) => {\n            d.push({\n                title: Strong(title).replace(/【|】/g, \"\"),\n                img: 'http://123.56.105.145/tubiao/messy/' + (songinfo.Quality == i ? 55 : 63) + '.svg',\n                col_type: 'text_icon',\n                url: $('#noLoading#').lazyRule((a, b, c) => {\n                    return $.require('typeCache?rule=歌词适配').setCache(a, b, c);\n                }, \"songinfo\", \"Quality\", String(i))\n            });\n        });\n    } else {\n        line('avatar', 'rule_type_audio', '精选站点');\n        d.push({\n            title: '<b>slider.kz</b>',\n            col_type: 'text_icon',\n            url: 'https://hayqbhgr.slider.kz/#noHistory#',\n            img: 'http://123.56.105.145/tubiao/system/10.png'\n        });\n        d.push({\n            title: '<b>lucida.to</b>',\n            col_type: 'text_icon',\n            url: 'https://lucida.to/#noHistory#',\n            img: 'http://123.56.105.145/tubiao/system/10.png'\n        });\n        d.push({\n            title: '<b>柠乐</b>',\n            col_type: 'text_icon',\n            url: 'http://43.140.245.243:1080/music/#noHistory#',\n            img: 'http://123.56.105.145/tubiao/system/10.png'\n        });\n        d.push({\n            title: '<b>轻听</b>',\n            col_type: 'text_icon',\n            url: 'https://music.gdstudio.xyz/#noHistory#',\n            img: 'http://123.56.105.145/tubiao/system/10.png'\n        });\n        d.push({\n            title: '<b>赫歌</b>',\n            col_type: 'text_icon',\n            url: 'https://music.wjhe.top/#noHistory#',\n            img: 'http://123.56.105.145/tubiao/system/10.png'\n        });\n        d.push({\n            title: '<b>种子</b>',\n            col_type: 'text_icon',\n            url: 'https://zz123.com/#noHistory#',\n            img: 'http://123.56.105.145/tubiao/system/10.png'\n        });\n        d.push({\n            title: '<b>六音</b>',\n            col_type: 'text_icon',\n            url: 'https://flac.one/#noHistory#',\n            img: 'http://123.56.105.145/tubiao/system/10.png'\n        });\n        d.push({\n            title: '<b>果核</b>',\n            col_type: 'text_icon',\n            url: 'https://ghyinyue.com/#noHistory#',\n            img: 'http://123.56.105.145/tubiao/system/10.png'\n        });\n\n\n\n        line();\n        d.push({\n            title: '<b>LX Music</b>'.small(),\n            url: 'https://docs.lxmusic.top/#noHistory#',\n            img: 'https://docs.lxmusic.top/logo.svg',\n            col_type: 'avatar',\n        });\n        d.push({\n            title: '<b>六音</b>',\n            col_type: 'text_icon',\n            url: $('#noLoading#').lazyRule((url) => {\n                return $(\"点击确定跳转网址\\n\" + url).confirm((url) => {\n                    return url;\n                }, url);\n            }, \"https://www.sixyin.com/7645.html\"),\n            img: 'http://123.56.105.145/tubiao/system/10.png'\n        });\n        d.push({\n            title: '<b>梓澄</b>',\n            col_type: 'text_icon',\n            url: $('#noLoading#').lazyRule((url) => {\n                return $(\"点击确定跳转网址\\n提取码：lxmusic\").confirm((url) => {\n                    return url;\n                }, url);\n            }, \"https://wwp.lanzouq.com/b02fq9w8d\"),\n            img: 'http://123.56.105.145/tubiao/system/10.png'\n        });\n        d.push({\n            title: '<b>Lerd</b>',\n            col_type: 'text_icon',\n            url: $('#noLoading#').lazyRule((url) => {\n                return $(\"点击确定复制链接\\n\" + url).confirm((url) => {\n                    return \"copy://\" + url;\n                }, url);\n            }, \"https://cdn-img.gitcode.com/be/ab/b8e415a889b23f9b40b1b0b73952ef90668abdadad03a46374722711e8e193b3.js\"),\n            img: 'http://123.56.105.145/tubiao/system/10.png'\n        });\n        d.push({\n            title: '<b>iKun</b>',\n            col_type: 'text_icon',\n            url: $('#noLoading#').lazyRule((url) => {\n                return $(\"点击确定复制链接\\n\" + url).confirm((url) => {\n                    return \"copy://\" + url;\n                }, url);\n            }, \"https://lxmusic.ikunshare.com/script\"),\n            img: 'http://123.56.105.145/tubiao/system/10.png'\n        });\n        d.push({\n            title: '<b>挥杯劝</b>',\n            col_type: 'text_icon',\n            url: $('#noLoading#').lazyRule((url) => {\n                return $(\"点击确定复制链接\\n\" + url).confirm((url) => {\n                    return \"copy://\" + url;\n                }, url);\n            }, \"https://raw.niuma666bet.buzz/Huibq/keep-alive/master/render_api.js\"),\n            img: 'http://123.56.105.145/tubiao/system/10.png'\n        });\n\n\n\n        line();\n        d.push({\n            title: '<b>MusicFree</b>'.small(),\n            url: 'https://gitee.com/maotoumao/MusicFree#noHistory#',\n            img: 'https://i1.hdslb.com/bfs/face/ec98b6458cdc8fdde2a72f705151b0e81cadff71.jpg',\n            col_type: 'avatar',\n        });\n        d.push({\n            title: '<b>官方</b>',\n            col_type: 'text_icon',\n            url: $('#noLoading#').lazyRule((url) => {\n                return $(\"点击确定复制链接\\n\" + url).confirm((url) => {\n                    return \"copy://\" + url;\n                }, url);\n            }, \"https://gitee.com/maotoumao/MusicFreePlugins/raw/master/plugins.json\"),\n            img: 'http://123.56.105.145/tubiao/system/10.png'\n        });\n        d.push({\n            title: '<b>作者</b>',\n            col_type: 'text_icon',\n            url: $('#noLoading#').lazyRule((url) => {\n                return $(\"点击确定复制链接\\n\" + url).confirm((url) => {\n                    return \"copy://\" + url;\n                }, url);\n            }, \"https://gitee.com/ThomasYou/musicfree/raw/master/dist/plugins.json\"),\n            img: 'http://123.56.105.145/tubiao/system/10.png'\n        });\n        d.push({\n            title: '<b>速悦</b>',\n            col_type: 'text_icon',\n            url: $('#noLoading#').lazyRule((url) => {\n                return $(\"点击确定复制链接\\n\" + url).confirm((url) => {\n                    return \"copy://\" + url;\n                }, url);\n            }, \"http://adad23u.appinstall.life/dist/_plugins/plugins.json\"),\n            img: 'http://123.56.105.145/tubiao/system/10.png'\n        });\n        d.push({\n            title: '<b>iKun</b>',\n            col_type: 'text_icon',\n            url: $('#noLoading#').lazyRule((url) => {\n                return $(\"点击确定复制链接\\n\" + url).confirm((url) => {\n                    return \"copy://\" + url;\n                }, url);\n            }, \"https://mf.ikunshare.com/plugins.json\" /*\"https://gitee.com/ikun0014/musicfree/raw/master/plugins.json\"*/ ),\n            img: 'http://123.56.105.145/tubiao/system/10.png'\n        });\n        d.push({\n            title: '<b>挥杯劝</b>',\n            col_type: 'text_icon',\n            url: $('#noLoading#').lazyRule((url) => {\n                return $(\"点击确定复制链接\\n\" + url).confirm((url) => {\n                    return \"copy://\" + url;\n                }, url);\n            }, \"https://raw.niuma666bet.buzz/Huibq/keep-alive/master/Music_Free/myPlugins.json\"),\n            img: 'http://123.56.105.145/tubiao/system/10.png'\n        });\n    }\n    line();\n    setResult(d);\n}\n\nfunction getPage2(_type) {\n    let _ = getCache()[_type];\n    let _R = _.Refresh != \"\";\n    line();\n    line('avatar', 'code', '页面');\n    d.push({\n        title: Strong(\"禁止刷新\"),\n        col_type: 'text_icon',\n        url: $('#noLoading#').lazyRule((a, b, c) => {\n            return $.require('typeCache?rule=歌词适配').setCache(a, b, c);\n        }, _type, 'Refresh', _R ? '' : '#noRefresh#'),\n        img: 'http://123.56.105.145/tubiao/messy/' + (_R ? 55 : 63) + '.svg'\n    });\n\n\n    line();\n    line('avatar', 'backup', '样式');\n    [\n        [\"程序默认\", \"\"],\n        [\"全屏显示\", \"#fullTheme#\"],\n        [\"沉浸体验\", \"#immersiveTheme#\"],\n        [\"游戏模式\", \"#gameTheme#\"],\n    ].map([a, b] => {\n        d.push({\n            title: Strong(a),\n            col_type: 'text_icon',\n            url: $('#noLoading#').lazyRule((a, b, c) => {\n                return $.require('typeCache?rule=歌词适配').setCache(a, b, c);\n            }, _type, 'Theme_i', b),\n            img: 'http://123.56.105.145/tubiao/messy/' + (_.Theme_i == b ? 55 : 63) + '.svg'\n        });\n    });\n    line();\n\n\n    d.push({\n        col_type: 'text_center_1',\n        title: Rich(Strong(Color(\"退出\"))),\n        url: $('#noLoading#').lazyRule(() => {\n            return back(false), 'hiker://empty';\n        })\n    });\n    setResult(d);\n}\n$.exports = {\n    Lazy: function(platform) {\n        let _ = getCache()[platform];\n        let u = \"hiker://page/\" + platform + \"#noHistory##noRecordHistory#\";\n        let t = \"pageTitle=\" + {\n            collection: \"TGX收藏\",\n            search: \"高级搜索\",\n            home: \"歌词适配\"\n        }[platform];\n        return u + _.Refresh + _.Theme_i + \"?\" + _.Params_ + t + \"&rule=歌词适配\";\n    },\n    getCache,\n    setCache,\n    getPage1,\n    getPage2\n}"},{"col_type":"movie_3","name":"收藏函数","path":"collection2","rule":"function getData(isPageHome) {\n    let data, path, set, zu, t;\n    path = \"hiker://files/rules/Thomas/gcsp1999/collection/\";\n    set = path + \"details.json\";\n    t = new Date().getTime();\n\n\n    // 歌单信息备份\n    if (isPageHome == \"bak\") {\n        if (getMyVar('file_bak_date', '0') == '0') {\n            try {\n                saveFile(set + \".bak\", readFile(set));\n                putMyVar('file_bak_date', '1');\n                log('[歌单信息备份] 成功');\n            } catch (bak_err) {\n                log('[歌单信息备份] 失败，原因：' + bak_err);\n            }\n        }\n        return t;\n    }\n\n\n    try { // !fileExist(set) #可能会出错，使用try函数\n        data = JSON.parse(readFile(set));\n        if (isPageHome && data.length === 0) {\n            deleteFile(set);\n            return getData();\n        }\n    } catch (no_fileExist) {\n        data = function(t) {\n            let _ = {\n                name: \"我的收藏\",\n                source: \"userlist\",\n                sourceListId: t,\n                locationUpdateTime: t,\n                picUrl: JSON.parse(request(\"hiker://home@歌词适配\")).icon,\n                content: \"2\",\n                // author: \"佚名\",\n                // desc: \"值得收藏的歌曲\",\n                // tags: \"好听\"\n            }\n            saveFile(set, JSON.stringify([_]));\n            saveFile(path + _.source + '_' + _.sourceListId + \".json\", \"[]\");\n            return [_];\n        }(t);\n    }\n    zu = data.map(_ => Object.assign({\n        icon: _.picUrl,\n        id: _.source + '_' + _.sourceListId,\n        title: _.name + '\\n' + _.source + '_' + _.sourceListId\n    }, _));\n    return [path, set, data, zu];\n}\n\nfunction yunData(newData) {\n    a = newData.source;\n    b = newData.content;\n    c = newData;\n    d = [];\n    e = 0;\n    MY_PAGE = 1;\n    MY_PARAMS = {\n        img: newData.picUrl\n    };\n    pageSize = 30;\n    if (a == \"wy\" || (b == \"2\" &&  a == \"5s\")) {\n        pageSize = 9999;\n    } else if (a == \"my\") {\n        pageSize = 90;\n    } else if (a == \"lanzou\") {\n        pageSize = 50;\n    }\n    do {\n        try {\n            showLoading('获取页面数据__' + MY_PAGE);\n            let total = $.require(a + \"?rule=歌词适配\").lazy(b, c, false).total;\n            if (total < MY_PAGE * pageSize) {\n                break;\n            }\n        } catch (err) {\n            // error(err);\n            if (e > 3) {\n                break;\n            } else {\n                e++;\n            }\n        }\n    } while (MY_PAGE++);\n    hideLoading();\n    return d.map(_ => {\n        delete _.title;\n        delete _.desc;\n        delete _.url;\n        delete _.img;\n        delete _.pic_url;\n        delete _.col_type;\n        delete _.extra;\n        return _;\n    });\n}\n\n$.exports = {\n    getData,\n    yunData,\n    logData: function(newData, si, name) {\n        if (newData.songId == \"undefined\")\n            return \"toast://不支持收藏~\";\n        let data, path, set, zu;\n        [path, set, data, zu] = getData();\n        return $(zu.concat({\n            title: si ? \"最后面\" : \"新分组\"\n        }), 2, si ? \"选择位置\" : \"选择分组\").select((data, zu, newData, si, set, path) => {\n            if (input == \"新分组\") {\n                const hikerPop = $.require(\"http://123.56.105.145/weisyr/js/hikerPop.js\");\n                let pop = hikerPop.inputTwoRow({\n                    titleHint: \"新组名称\",\n                    titleDefault: \"\",\n                    urlHint: \"新组封面\",\n                    urlDefault: \"\",\n                    noAutoSoft: true, //不自动打开输入法\n                    title: \"新组信息\",\n                    //hideCancel: true,\n                    confirm(name, picUrl) {\n                        if (!name.trim()) return \"toast://组名不能为空\";\n                        let t = new Date().getTime();\n                        let _ = {\n                            name,\n                            source: \"userlist\",\n                            sourceListId: t,\n                            locationUpdateTime: t,\n                            picUrl,\n                            content: \"2\"\n                        }\n                        return $(zu.concat({\n                            title: \"最后面\"\n                        }), 2, '请选择新组位置').select((set, path, data, zu, newData, _) => {\n                            let i = zu.map(_ => _.title).indexOf(input);\n                            if (i == -1) i = zu.length;\n                            data.splice(i, 0, _);\n                            saveFile(set, JSON.stringify(data, 0, 1));\n                            saveFile(path + _.source + '_' + _.sourceListId + \".json\", JSON.stringify([newData], 0, 1));\n                            return \"toast://新组创建成功\";\n                        }, set, path, data, zu, newData, _);\n                    },\n                    cancel() {\n                        return \"hiker://empty\";\n                        // return \"toast://你取消了\";\n                    }\n                });\n                return \"hiker://empty\";\n            }\n\n            let i = zu.map(_ => _.title).indexOf(input);\n            if (si) { // 歌单\n                let d = [];\n                let c = newData;\n                if (c.source != \"userlist\" && c.sourceListId) {\n                    d = $.require('collection2?rule=歌词适配').yunData(c);\n                }\n                newData.locationUpdateTime = new Date().getTime();\n                if (i == -1) i = zu.length;\n                data.splice(i, 0, newData);\n                saveFile(set, JSON.stringify(data, 0, 1));\n                saveFile(path + c.source + '_' + c.sourceListId + \".json\", JSON.stringify(d, 0, 1));\n                return \"toast://歌单收藏成功\";\n            } else { // 歌曲\n                path += data[i].source + '_' + data[i].sourceListId + \".json\";\n                zy = JSON.parse(readFile(path));\n                zu = zy.map((_, i) => {\n                    return _.name + '\\n' + i + _.source + _.songId;\n                }).concat(\"最后面\");\n                return $(zu, 2, \"选择位置\").select((path, zy, zu, newData) => {\n                    let i = zu.indexOf(input);\n                    zy.splice(i, 0, newData);\n                    saveFile(path, JSON.stringify(zy, 0, 1));\n                    return \"toast://歌曲收藏成功\";\n                }, path, zy, zu, newData);\n            }\n        }, data, zu, newData, si, set, path);\n    },\n    setData: function(input, i) {\n        let data, list, path, set, u = \"hiker://empty\";\n        [path, set, data, list] = getData();\n        switch (input) {\n            case '删除分组':\n                return $(\"确定删除分组 \" + data[i].name + \" 吗？\\n此操作不可逆，谨慎选择。\").confirm((path, set, data, i) => {\n                    let _ = data[i];\n                    data.splice(i, 1);\n                    let l = data.length;\n                    deleteFile(path + _.source + '_' + _.sourceListId + \".json\");\n                    if (l != 0) {\n                        if (i >= l) setItem(\"ci_1\", (l - 1) + \"\");\n                        saveFile(set, JSON.stringify(data, 0, 1));\n                    } else {\n                        setItem(\"ci_1\", \"0\");\n                        deleteFile(set);\n                    }\n                    refreshPage();\n                    return \"hiker://empty\";\n                }, path, set, data, i);\n                break;\n            case '分享分组':\n                let Json = data[i];\n                Json.list = JSON.parse(readFile(path + Json.source + '_' + Json.sourceListId + \".json\"));\n                return $.require(\"jiexi?rule=歌词适配\").getShare(Json, false, Json.list.length, \"歌单\", Json.name, [\"复制链接\"]);\n                break;\n            case '新增分组':\n                const hikerPop = $.require(\"http://123.56.105.145/weisyr/js/hikerPop.js\");\n                hikerPop.inputTwoRow({\n                    titleHint: \"新组名称\",\n                    titleDefault: \"\",\n                    urlHint: \"新组封面\",\n                    urlDefault: \"\",\n                    noAutoSoft: true, //不自动打开输入法\n                    title: \"新组信息\",\n                    //hideCancel: true,\n                    confirm(name, picUrl) {\n                        if (!name.trim()) return \"toast://组名不能为空\";\n                        let t = new Date().getTime();\n                        let _ = {\n                            name,\n                            source: \"userlist\",\n                            sourceListId: t,\n                            locationUpdateTime: t,\n                            picUrl,\n                            content: \"2\"\n                        }\n                        return $(list.concat({\n                            title: \"最后面\"\n                        }), 2, '请选择新组位置').select((set, path, data, zu, _) => {\n                            let i = zu.map(_ => _.title).indexOf(input);\n                            if (i == -1) i = zu.length;\n                            data.splice(i, 0, _);\n                            saveFile(set, JSON.stringify(data, 0, 1));\n                            saveFile(path + _.source + '_' + _.sourceListId + \".json\", \"[]\");\n                            refreshPage();\n                            return \"toast://新组创建成功\";\n                        }, set, path, data, list, _);\n                    },\n                    cancel() {\n                        return \"hiker://empty\";\n                        // return \"toast://你取消了\";\n                    }\n                });\n                break;\n            case '修改封面':\n                return $(data[i].picUrl, \"填写正确的封面链接\").input((set, data, i) => {\n                    data[i].picUrl = input;\n                    saveFile(set, JSON.stringify(data, 0, 1));\n                    refreshPage();\n                    return \"toast://修改成功\";\n                }, set, data, i);\n                break;\n            case '修改名称':\n                return $(data[i].name, \"分组名称\").input((set, data, i) => {\n                    data[i].name = input;\n                    saveFile(set, JSON.stringify(data, 0, 1));\n                    refreshPage();\n                    return \"toast://修改成功\";\n                }, set, data, i);\n                break;\n            case '合并分组':\n                list.splice(i, 1);\n                return $(list, 2, '合并分组到').select((path, set, data, list, i1) => {\n                    let i2 = list.map(_ => _.title).indexOf(input);\n                    let l2 = list[i2];\n                    let l1 = data[i1];\n                    delete l2.icon;\n                    delete l2.id;\n                    delete l2.title;\n                    let p1 = path + l1.source + '_' + l1.sourceListId + '.json';\n                    let p2 = path + l2.source + '_' + l2.sourceListId + '.json';\n                    let a1 = JSON.parse(readFile(p1));\n                    let a2 = JSON.parse(readFile(p2));\n                    if (l1.source != \"userlist\" && l2.source == \"userlist\") {\n                        l2.sourceListId = l1.sourceListId;\n                        l2.source = l1.source;\n                        deleteFile(p2);\n                        path = p1;\n                    } else {\n                        deleteFile(p1);\n                        path = p2;\n                    }\n                    data.splice(i1, 1);\n                    data.splice(i2, 1, l2);\n                    saveFile(set, JSON.stringify(data, 0, 1));\n                    saveFile(path, JSON.stringify(a2.concat(a1), 0, 1));\n                    refreshPage();\n                    return \"toast://合并成功\";\n                }, path, set, data, list, i);\n                break;\n            case '更改排序':\n                list.splice(i, 1);\n                return $(list.concat({\n                    title: '最后面'\n                }), 2, '分组移动到').select((set, data, list, i1) => {\n                    let i2\n                    if (input == '最后面') {\n                        i2 = list.length;\n                    } else {\n                        i2 = list.map(_ => _.title).indexOf(input);\n                    }\n                    let i3 = data[i1];\n                    data.splice(i1, 1);\n                    data.splice(i2, 0, i3);\n                    setItem(\"ci_1\", i2 + \"\");\n                    saveFile(set, JSON.stringify(data, 0, 1));\n                    refreshPage();\n                    return \"toast://更改成功\";\n                }, set, data, list, i);\n                break;\n            case '更新资源':\n                if (data[i].source == \"userlist\")\n                    return \"toast://自建分组无法更新\";\n                return $(\"这将会把 \" + data[i].name + \" 内的歌曲替换成在线列表的歌曲，你确定要更新吗？\").confirm((path, newData) => {\n                    let c = newData;\n                    let d = $.require('collection2?rule=歌词适配').yunData(c);\n                    saveFile(path + c.source + '_' + c.sourceListId + \".json\", JSON.stringify(d, 0, 1));\n                    refreshPage();\n                    return \"toast://歌单更新成功\";\n                }, path, data[i]);\n                break;\n            case '二级页面':\n                return $('hiker://empty#noHistory##noRecordHistory#').rule((path, _) => {\n                    setPageTitle('TGX收藏 - ' + _.name);\n                    setPagePicUrl(_.picUrl);\n                    eval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配', {})).rule);\n                    let d = [];\n                    try {\n                        path += _.source + '_' + _.sourceListId + '.json';\n                        JSON.parse(readFile(path)).map(_ => Extra(_));\n                        if (d.length === 0) d.push({\n                            col_type: \"text_center_1\",\n                            url: \"hiker://empty\",\n                            title: \"““””\" + \"~~~这个分组什么都没有~~~\".fontcolor(\"Gray\")\n                        });\n                    } catch (err) {\n                        d.push({\n                            title: \"TGX收藏 - 获取错误\",\n                            desc: \"分组 「\" + _.name + \"」 不存在？\",\n                            url: \"hiker://empty\",\n                            col_type: \"text_center_1\"\n                        });\n                    }\n                    setResult(d);\n                }, path, data[i]);\n                break;\n        }\n        return u;\n    }\n}"}],"title":"歌词适配","author":"Thomas喲","version":20250104,"type":"music","url":"hiker://empty?p=fypage","col_type":"card_pic_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\n$.require('home?rule=歌词适配');","searchFind":"js:\nsetResult([{\n    title: \"搜索 => \" + MY_KEYWORD,\n    desc: '通过\"高级搜索\"页面搜索',\n    url: $('#noLoading#').lazyRule((s_t2) => {\n        if (getMyVar('s_platform', 'lib') == 'lib')\n            putMyVar('s_platform', getItem('s_platform', 'kw'));\n        putMyVar('s_t2', s_t2);\n        clearMyVar('search_page');\n        return $.require('typeCache?rule=歌词适配').Lazy(\"search\");\n    }, MY_KEYWORD),\n    extra: {\n        pageTitle: \"高级搜索\"\n    }\n}]);","search_url":"hiker://empty?s=**","group":"③音乐","detail_col_type":"text_1","detail_find_rule":"","sdetail_col_type":"card_pic_3","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"①通用函数\",\"path\":\"lib\",\"rule\":\"addListener('onClose', $.toString(() => {\\n    clearMyVar('addlist');\\n    clearMyVar('addpitch');\\n    clearMyVar('home_page');\\n    clearMyVar('search_down');\\n}));\\nconst empty = 'hiker://empty?p=fypage';\\nconst Color = (test, color) => {\\n    return String(test).fontcolor(color || '#FA7298');\\n}\\nconst Strong = (test) => {\\n    return '<strong>' + test + '</strong>';\\n}\\nconst Rich = (test, ___) => {\\n    test = String(test).replace(/<\\\\/?em[^>]*>/gi, '')\\n        .replace(/&(lt|gt|nbsp|amp|quot);/gi, ($0, $1) => ({\\n            'lt': '<',\\n            'gt': '>',\\n            'nbsp': ' ',\\n            'amp': '&',\\n            'quot': '\\\"'\\n        }[$1.toLowerCase()]));\\n    if (test == \\\"\\\") {\\n        return \\\"\\\";\\n    }\\n    if (typeof ___ === 'object') {\\n        for (let key in ___) {\\n            ___[key] = String(___[key] || \\\"\\\")\\n                .replace(/\\\\n|(<|\\\\s+)br\\\\s*\\\\/?\\\\s*>/gi, '\\\\\\\\n')\\n                .replace(/\\\\r/g, '\\\\\\\\r')\\n                .replace(/\\\\f/g, '\\\\\\\\f')\\n                .replace(/\\\\t/g, '\\\\\\\\t')\\n                .replace(/\\\\\\\"/g, '\\\\\\\\\\\"')\\n                .replace(/\\\\'/g, \\\"\\\\\\\\'\\\")\\n                .replace(/\\\\`/g, '\\\\\\\\`');\\n        }\\n        return String(test)\\n            .replace(/\\\\$title/gi, ___.title || getPageTitle())\\n            .replace(/\\\\$desc/gi, ___.desc || \\\"暂无简介\\\")\\n            .replace(/\\\\$author/gi, ___.author || \\\"佚名\\\")\\n            .replace(/\\\\$img/gi, ___.img || MY_PARAMS.img || MY_RULE.icon)\\n            .replace(/\\\\$time/gi, ___.time || \\\"未知\\\")\\n            .replace(/\\\\$tags/gi, String(___.tags || \\\"\\\").replace(/^(\\\\s*、?)*$/, \\\"\\\") || \\\"无\\\")\\n            .replace(/\\\\$total/gi, ___.total || \\\"x\\\");\\n    } else {\\n        return \\\"‘‘’’\\\" + String(test)\\n            .replace(/\\\\\\\\n|(<|\\\\s+)br\\\\s*\\\\/?\\\\s*>/gi, '\\\\n')\\n            .replace(/\\\\\\\\r/g, '\\\\r')\\n            .replace(/\\\\\\\\f/g, '\\\\f')\\n            .replace(/\\\\\\\\t/g, '\\\\t');\\n    }\\n}\\nconst R = (x, z) => {\\n    let t, z = z || \\\"1234567890abcdef\\\";\\n    if (x == \\\"randomUUID\\\") {\\n        t = [R(8), R(4), R(4), R(4), R(12)].join(\\\"-\\\");\\n    } else {\\n        t = \\\"\\\";\\n        for (let i = 0; i < x; i++) {\\n            t += z[Math.floor(Math.random() * z.length)];\\n        }\\n    }\\n    return t\\n}\\nconst Size = size => {\\n    if (!size) return '无法计算';\\n    let units = ['B', 'KB', 'MB', 'GB'];\\n    let i = 0;\\n    while (size >= 1024) {\\n        size /= 1024;\\n        i++;\\n    }\\n    size = i ? size.toFixed(2) : size;\\n    return `${size} ${units[i]}`;\\n}\\nconst Loading = () => {\\n    d.push({\\n        url: \\\"toast://加载中...\\\",\\n        img: \\\"http://123.56.105.145/weisyr/img/Loading1.gif\\\",\\n        col_type: \\\"pic_1_center\\\",\\n        extra: {\\n            cls: \\\"loading_gif\\\"\\n        }\\n    });\\n    setPreResult(d);\\n};\\nlet Lrc = (lrc, time) => {\\n    let time = String(time || 200);\\n    if (time.match(/\\\\d+\\\\:\\\\d+/)) {\\n        time = function(time) {\\n            let sp = time.split(\\\":\\\");\\n            let l3 = sp.length == 3;\\n            let h = l3 ? sp[0] : sp[3] || 0;\\n            let m = l3 ? sp[1] : sp[0] || 0;\\n            let s = l3 ? sp[2] : sp[1] || 0;\\n            return (h * 60 * 60) + (m * 60) + s;\\n        }(time.replace(/^\\\\s*0+\\\\:/gi, \\\"\\\"));\\n    } else if (time.match(/\\\\D/)) {\\n        time = 200;\\n    }\\n    time = Number(time) || 200;\\n    let n = String(lrc).replace(/\\\\s*((\\\\n|(\\\\u003c|<)\\\\/?(br|p)\\\\/?(\\\\u003e|>))\\\\s*)+\\\\s*/gi, '\\\\n').trim().split(/\\\\n/);\\n    return n.map((lineLyric, i) => {\\n        let itime = i / n.length * time;\\n        let s = ((itime - 0) % 60).toFixed(3).padStart(6, '0');\\n        let m = ((itime - s) / 60).toFixed(0).padStart(2, '0');\\n        return `[${m}:${s}]` + lineLyric;\\n    }).join('\\\\n');\\n}\\nlet Hms = (second) => {\\n    let t_Arr = $.dateFormat(second, 'hh:mm:ss').split(':');\\n    if ((t_Arr[0] -= 8) < 10) t_Arr[0] = '0' + t_Arr[0];\\n    return t_Arr.join(\\\":\\\");\\n}\\n\\nlet id = \\\"gcsp1999\\\";\\nlet platforms = [\\\"lib\\\", \\\"qq\\\", \\\"wy\\\", \\\"kg\\\", \\\"kw\\\", \\\"mg\\\", \\\"5s\\\", \\\"my\\\", \\\"qt\\\"];\\nlet platform = getMyVar('platform', getItem('platform', 'kw'));\\nif (platform == 'lib') {\\n    let newArr = platforms.slice(1, 8);\\n    let randomIndex = Math.floor(Math.random() * newArr.length);\\n    platform = newArr[randomIndex];\\n    putMyVar('platform', platform);\\n}\\nlet ts = [\\\"【流畅音质】\\\", \\\"【标准音质】\\\", \\\"【高品音质】\\\", \\\"【无损音质】\\\", \\\"【高品无损】\\\", \\\"【立体无损】\\\"];\\nlet qts = [\\\"lib\\\", \\\"bd\\\", \\\"zz\\\", \\\"kz\\\", \\\"ni\\\", \\\"g3\\\", \\\"qy\\\", \\\"qk\\\", /*\\\"km\\\",  \\\"bz\\\", \\\"st\\\", \\\"blm\\\",  \\\"fp\\\", \\\"ht\\\", \\\"1t\\\", \\\"9t\\\", \\\"ky\\\", \\\"5nd\\\", \\\"biu\\\", \\\"mus\\\", \\\"jam\\\", \\\"jui\\\", \\\"y3\\\", \\\"365\\\", \\\"dj1\\\", \\\"dj2\\\", \\\"dj3\\\", \\\"dj4\\\", \\\"dj5\\\", \\\"dj6\\\", \\\"dj7\\\", \\\"dj8\\\", \\\"dj9\\\"*/ ];\\n\\n\\n\\n\\n\\nconst Lazy = (platform, t1, t2, t3) => {\\n    if (t1 > 1)\\n        return $(empty + \\\"#immersiveTheme#\\\" /*+\\\"#background#\\\"*/ ).rule((a, b, c) => {\\n            // return $.require(a + \\\"?rule=歌词适配\\\").lazy(b, c, 0);\\n            return $.require(\\\"theme3?rule=歌词适配\\\").lazy(a, b, c);\\n        }, platform, t1, t2);\\n    else\\n        return $(\\\"#noHistory##noRecordHistory#\\\").lazyRule((a, b, c) => {\\n            return $.require(\\\"jiexi?rule=歌词适配\\\").lazy(a, b, c);\\n        }, platform, t2, t3);\\n}\\nconst Extra = (_, r1, r2, r3) => {\\n    if (r1) {\\n        _.name = Rich(_.name).replace(/^‘‘’’|\\\\s*\\\\-?\\\\s*$/gi, \\\"\\\");\\n        _.picUrl = String(_.picUrl || \\\"\\\").replace(/{size}/gi, '480');\\n        _.content = _.content + '';\\n        if (!_.source) _.source = this_platform;\\n    }\\n    let r4, t1 = Number(String(_.content).replace(/^(\\\\d?\\\\D\\\\d?)+$/, '0')) < 2 ? 0 : 1;\\n    if (r1) {\\n        if (!t1) {\\n            _.songId = _.songId + '';\\n        } else {\\n            _.sourceListId = (_.sourceListId || new Date().getTime()) + '';\\n        }\\n    }\\n    delete _.col_type;\\n    let zyid = _.hash || _.copyrightId || _.songId || _.sourceListId;\\n    let extra = {\\n        inheritTitle: false,\\n        cls: id + ':addlist',\\n        img: _.picUrl,\\n        id: [_.source, String(zyid).replace(\\\"undefined\\\", Math.random()), _.content].join(\\\"$\\\"),\\n        longClick: [{\\n                title: \\\"★ 收藏\\\" + (t1 ? '歌单' : '单曲') + \\\" ★\\\",\\n                js: $.toString((t1, _) => {\\n                    return $.require(\\\"collection2?rule=歌词适配\\\").logData(_, t1);\\n                }, t1, _)\\n            }\\n            /*, {\\n                        title: \\\"★ 批量收藏 ★\\\",\\n                        js: $.toString((clsId, si) => {\\n                            let json = {\\n                                type: 0,\\n                                pitch: 0,\\n                                si: si,\\n                                name: \\\"\\\",\\n                                data: findItemsByCls(clsId)\\n                            }\\n                            writeFile(\\\"hiker://files/_cache/gcsp1999/Import.txt\\\", JSON.stringify(json));\\n                            return \\\"hiker://page/rely2#noHistory##noRecordHistory#?rule=歌词适配\\\";\\n                        }, id + ':addlist', t1)\\n                    }*/\\n        ]\\n    };\\n    if (/mg|5s/i.test(_.source) ? (_.content != 3) : /qq|wy|kg|kw/i.test(_.source)) {\\n        extra.longClick.push({\\n            title: \\\"✩ 复制链接 ✩\\\",\\n            js: $.toString((a, b, c) => {\\n                return $.require(\\\"lib?rule=歌词适配\\\").copyurl(a, b, c);\\n            }, _.source, _.content, zyid)\\n        });\\n        if (!/5s/i.test(_.source) && (_.content < 2 || _.content == \\\"undefined\\\")) {\\n            extra.longClick.push({\\n                title: \\\"✩ 播放视频 ✩\\\",\\n                js: $.toString((a, b) => {\\n                    return $(\\\"#noHistory##noRecordHistory#\\\").lazyRule((a, b, c) => {\\n                        [names, urls] = $.require(a + \\\"?rule=歌词适配\\\").mv({}, b);\\n                        if (urls.length)\\n                            return JSON.stringify({\\n                                names,\\n                                urls\\n                            });\\n                        else\\n                            return \\\"toast://这个歌曲没有mv\\\";\\n                    }, a, b);\\n                }, _.source, zyid)\\n            });\\n        }\\n    }\\n\\n    if (r3) {\\n        r4 = $(r3.names, 1, '选择下载音质').select((names, urls) => {\\n            let i = names.indexOf(input);\\n            return 'download://' + urls[i];\\n        }, r3.names, r3.urls);\\n        if (r1 == 2) {\\n            _.url = r4;\\n            extra.url = r3;\\n        } else {\\n            _.url = r3;\\n            extra.url = r4;\\n        }\\n        extra.longClick.unshift({\\n            title: \\\"★ 下载歌曲 ★\\\",\\n            js: $.toString((names, urls) => {\\n                return $(names, 1, '选择下载音质').select((names, urls) => {\\n                    let i = names.indexOf(input);\\n                    return 'download://' + urls[i];\\n                }, names, urls);\\n            }, r3.names, r3.urls)\\n        });\\n    } else {\\n        if (!t1) {\\n            extra.longClick.unshift({\\n                title: \\\"★ 下载歌曲 ★\\\",\\n                js: $.toString((url) => {\\n                    return url;\\n                }, Lazy(_.source, _.content, _, 1))\\n            });\\n            extra.url = Lazy(_.source, _.content, _, r1 != 2);\\n        }\\n        _.url = Lazy(_.source, _.content, _, r1 == 2);\\n    }\\n    if (typeof r1 === 'object') {\\n        /*\\n        let is_down = getMyVar('search_down', '0') == '1'\\n        if (is_down) {\\n            is_donwn = _.url;\\n            _.url = extra.url;\\n            extra.url = is_down;\\n            // is_down = true;\\n        }\\n        */\\n        _.title = String(r1.title || \\\"$songName - $userName\\\")\\n            .replace(/\\\\$songName/gi, r1.songName || \\\"\\\")\\n            .replace(/\\\\$userName/gi, r1.userName || \\\"\\\")\\n            .replace(/\\\\$songTime/gi, r1.songTime || \\\"\\\")\\n            .replace(/\\\\$albumName/gi, r1.albumName || \\\"\\\")\\n            .replace(/\\\\s*\\\\-?\\\\s*$/gi, \\\"\\\").replace(/^\\\\s*$/gi, _.title);\\n        _.desc = String(r1.desc || \\\"$songTime\\\\n$albumName\\\")\\n            .replace(/\\\\$songName/gi, r1.songName || \\\"\\\")\\n            .replace(/\\\\$userName/gi, r1.userName || \\\"\\\")\\n            .replace(/\\\\$songTime/gi, r1.songTime || \\\"\\\")\\n            .replace(/\\\\$albumName/gi, r1.albumName || \\\"\\\")\\n            .replace(/\\\\s*\\\\-?\\\\s*$/gi, \\\"\\\").replace(/^\\\\s*$/gi, _.desc);\\n        _.col_type = r1.col_type;\\n    }\\n    _.title = Rich(_.title || _.name + ((_.singer && ' - ' + _.singer) || \\\"\\\"))\\n        .replace(/^‘‘’’|\\\\s*\\\\-?\\\\s*$/gi, \\\"\\\")\\n        .replace(\\\"　-　\\\".small().small().sub(), \\\"\\\")\\n        .replace(\\\"　-　\\\", \\\"&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;&nbsp;&nbsp;&nbsp;\\\");\\n    _.pic_url = _.picUrl;\\n    _.col_type = _.col_type || 'card_pic_3';\\n    _.extra = extra;\\n    if (r2) return _;\\n    d.push(_);\\n}\\n\\n\\n\\n\\nfunction _X5(index, set) {\\n    let _x5 = getMyVar(\\\"x5_webview_single\\\", \\\"0\\\") == \\\"1\\\";\\n    let _set = String(set || \\\"\\\");\\n    if (_set.match(\\\"theme/home\\\"))\\n        return _x5 ? 0 : index + 1;\\n    else if (_set.match(\\\"theme/page\\\"))\\n        return index;\\n    else\\n        return _x5;\\n}\\n$.exports = {\\n    Lrc,\\n    copyurl: function(A, B, C) {\\n        switch (A) {\\n            case 'qq':\\n                switch (B) {\\n                    case '2':\\n                        // url = 'https://i.y.qq.com/n2/m/share/details/taoge.html?id=' + C;\\n                        url = 'https://i2.y.qq.com/n3/other/pages/share/personalized_playlist_v2/index.html?id=' + C\\n                        break;\\n                    case '3':\\n                        url = 'https://i.y.qq.com/n2/m/share/details/toplist.html?id=' + C;\\n                        break;\\n                    case '4':\\n                        url = 'https://i.y.qq.com/n2/m/share/details/album.html?albummid=' + C;\\n                        break;\\n                    case '5':\\n                        url = 'https://i.y.qq.com/n2/m/share/profile_v2/index.html?singermid=' + C;\\n                        break;\\n                    default:\\n                        url = 'https://i.y.qq.com/v8/playsong.html?songmid=' + C;\\n                        break;\\n                }\\n                break;\\n            case 'wy':\\n                switch (B) {\\n                    case '2':\\n                    case '3':\\n                        if (/#djradio/.test(C))\\n                            url = 'https://y.music.163.com/m/radio?id=' + C\\n                        else\\n                            url = 'https://y.music.163.com/m/playlist?id=' + C;\\n                        break;\\n                    case '4':\\n                        url = 'https://y.music.163.com/m/album?id=' + C;\\n                        break;\\n                    case '5':\\n                        url = 'https://y.music.163.com/m/artist?id=' + C;\\n                        break;\\n                    default:\\n                        url = 'https://y.music.163.com/m/song?id=' + C;\\n                        break;\\n                }\\n                break;\\n            case 'kg':\\n                switch (B) {\\n                    case '2':\\n                        if (C.match(/gcid_/))\\n                            url = \\\"https://m.kugou.com/songlist/\\\" + C + \\\"/\\\";\\n                        else if (C.match(/collection_/))\\n                            // url = 'https://activity.kugou.com/share/v-a00a45b0/index.html?cType=0&global_specialid=' + C;\\n                            url = 'https://www.kugou.com/yy/special/single/' + C + '.html';\\n                        else\\n                            url = 'https://m.kugou.com/weibo/?share_type=special&id=' + C;\\n                        break;\\n                    case '3':\\n                        url = 'https://m.kugou.com/rank/info/' + C;\\n                        break;\\n                    case '4':\\n                        url = 'https://m.kugou.com/album/info/' + C;\\n                        break;\\n                    case '5':\\n                        url = 'https://m.kugou.com/singer/info/' + C;\\n                        break;\\n                    default:\\n                        url = 'https://m.kugou.com/weibo/?hash=' + C;\\n                        break;\\n                }\\n                break;\\n            case 'kw':\\n                switch (B) {\\n                    case '2':\\n                        url = 'https://m.kuwo.cn/newh5app/playlist_detail/' + C;\\n                        break;\\n                    case '3':\\n                        url = 'https://h5app.kuwo.cn/2000003/rank.html?id=' + C;\\n                        break;\\n                    case '4':\\n                        url = 'https://m.kuwo.cn/newh5app/album_detail/' + C;\\n                        break;\\n                    case '5':\\n                        url = 'https://m.kuwo.cn/newh5app/singers/' + C;\\n                        break;\\n                    default:\\n                        url = 'https://m.kuwo.cn/newh5app/play_detail/' + C;\\n                        break;\\n                }\\n                break;\\n            case 'mg':\\n                switch (B) {\\n                    case '2':\\n                        url = 'https://m.music.migu.cn/v3/music/playlist/' + C;\\n                        break;\\n                    case '3':\\n                        url = 'https://m.music.migu.cn/v4/music/top/' + C;\\n                        break;\\n                    case '4':\\n                        url = 'https://m.music.migu.cn/v3/music/album/' + C;\\n                        break;\\n                    case '5':\\n                        url = 'https://m.music.migu.cn/v3/music/artist/' + C;\\n                        break;\\n                    default:\\n                        url = 'https://m.music.migu.cn/v3/music/song/' + C;\\n                        break;\\n                }\\n                break;\\n            case '5s':\\n                switch (B) {\\n                    case '2':\\n                        url = 'http://5sing.kugou.com/topic/share/songlist/#/?id=' + C;\\n                        break;\\n                    default:\\n                        url = 'http://5sing.kugou.com/topic/share/song/#/?songid=' + C + '&songtype=' + B;\\n                        break;\\n                }\\n                break;\\n        }\\n        return \\\"copy://\\\" + url;\\n    },\\n\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"②图片链接\",\"path\":\"image\",\"rule\":\"$.exports = function(_type) {\\n    switch (_type = String(_type || 'rule_type_audio')) {\\n        case 'qq':\\n            return 'https://android-artworks.25pp.com/fs08/2023/12/21/0/2_b7596a6777b7c62d06094bfb8d5bcfdd_con_130x130.png';\\n            break;\\n        case 'wy':\\n            return 'https://android-artworks.25pp.com/fs08/2024/01/09/0/110_9d8058e8404df856e99876c7c975a0e5_con_130x130.png';\\n            break;\\n        case 'kg':\\n            return 'https://android-artworks.25pp.com/fs08/2024/01/02/3/110_4f951d42ac0dd576a53db81621be2f53_con_130x130.png';\\n            break;\\n        case 'kg2':\\n            return 'https://android-artworks.25pp.com/fs08/2023/12/28/4/110_45806680cf32dd6fed6323442b6ce9d9_con_130x130.png';\\n            break;\\n        case 'kw':\\n            return 'https://android-artworks.25pp.com/fs08/2023/12/28/2/110_9ff45ea0adf6502febdcc384df355269_con_130x130.png';\\n            break;\\n        case 'kw2':\\n            return 'https://android-artworks.25pp.com/fs08/2024/01/10/6/110_4dc628341a3da688cb59eda7372f59a6_con_130x130.png';\\n            break;\\n        case 'mg':\\n            return 'https://android-artworks.25pp.com/fs08/2024/01/03/4/110_224ce9429814216b17fb3ad9e9a10472_con_130x130.png';\\n            break;\\n        case '5s':\\n            return 'https://android-artworks.25pp.com/fs08/2023/12/28/0/110_c5c4af47f60f916f88c30110018e3a64_con_130x130.png';\\n            break;\\n        case '设置':\\n            return 'http://123.56.105.145/tubiao/messy/30.svg';\\n            break;\\n        case '收藏':\\n            return 'http://123.56.105.145/tubiao/more/129.png';\\n            break;\\n        case '作者':\\n            return 'http://q.qlogo.cn/g?b=qq&nk=1585568865&s=140';\\n            break;\\n        case 'top':\\n            return 'http://123.56.105.145/weisyr/img/TopImg0.png';\\n            break;\\n        case 'add':\\n            return 'https://cdn.icon-icons.com/icons2/37/PNG/512/addproperty_a%C3%B1adir_3625.png';\\n            break;\\n        case 'icon':\\n            return JSON.parse(request(\\\"hiker://home@歌词适配\\\")).icon;\\n            break;\\n        case 'my':\\n            _type = \\\"rule_type_audio\\\";\\n        default:\\n            if (!/https?\\\\:\\\\/\\\\//i.test(_type)) {\\n                _type = 'hiker://images/' + _type\\n            }\\n            return _type;\\n            break;\\n    }\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"❶qq\",\"path\":\"qq\",\"rule\":\"eval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配')).rule);\\nconst this_platform = \\\"qq\\\";\\nconst headers = {\\n    \\\"Referer\\\": \\\"https://y.qq.com/\\\",\\n    \\\"User-Agent\\\": \\\"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)\\\",\\n    \\\"Cookie\\\": \\\"qm_keyst=Q_H_L_5FBMRs-uicpIQo8Ymt3v0w1f0DAyJwQMdLJPVKmmOQZRQZkuz8AfB1Q; uin=948168827;\\\"\\n}\\n\\n\\nfunction getComm() {\\n    let ct = 11;\\n    let cv = 948168827; // 0\\n    return { // 基础信息\\n        \\\"cv\\\": cv,\\n        \\\"ct\\\": ct,\\n        \\\"format\\\": \\\"json\\\",\\n        \\\"inCharset\\\": \\\"utf-8\\\",\\n        \\\"outCharset\\\": \\\"utf-8\\\",\\n        \\\"notice\\\": 0,\\n        \\\"platform\\\": \\\"yqq.json\\\", // wk_v15.json, h5\\n        \\\"needNewCode\\\": 1,\\n        \\\"uin\\\": cv,\\n        \\\"g_tk_new_20200303\\\": cv,\\n        \\\"g_tk\\\": cv,\\n\\n\\n        // APP信息相关？\\n        \\\"tmeAppID\\\": \\\"qqmusiclight\\\", // qqmusic\\n        \\\"nettype\\\": 'NETWORK_WIFI', // 网络状态？\\n        \\\"tmeLoginType\\\": \\\"2\\\", // 1-微信，2-QQ？\\n        \\\"devicelevel\\\": \\\"31\\\", // 装置等级？\\n        \\\"os_ver\\\": ct, // 系统版本\\n        \\\"v\\\": cv,\\n\\n\\n        // 账号信息相关？\\n        \\\"qq\\\": cv, // qq号\\n        \\\"authst\\\": \\\"\\\", // 未知\\n        \\\"tmeLoginMethod\\\": \\\"1\\\",\\n        \\\"fPersonality\\\": \\\"0\\\",\\n        \\\"phonetype\\\": '0',\\n    }\\n};\\n\\n\\nfunction webSign(postBody, signType, _webcgikey) {\\n    let sign = \\\"\\\";\\n    let run = {\\n        _: new Date().getTime() + \\\"\\\",\\n        _webcgikey\\n    }\\n\\n    function pickId(h, a) {\\n        return a.map(function(i) {\\n            return h[i] || \\\"\\\"\\n        }).join('');\\n    }\\n    switch (signType) {\\n\\n\\n        case 'zza':\\n            sign = R(16) + md5('CJBPACrRuNy7' + postBody);\\n            break;\\n\\n\\n        case 'zzb':\\n            sign = function(hash) {\\n                let t = pickId(hash, [21,  4, 9, 26, 16, 20, 27, 30]);\\n                let e = pickId(hash, [18, 11, 3,  2,  1,  7,  6, 25]);\\n\\n                let c = function(b) {\\n                    let zd = '0123456789ABCDEF'.split('').reduce((acc, v, i) => (acc[v] = i, acc), {});\\n                    let ol = [212, 45, 80, 68, 195, 163, 163, 203, 157, 220, 254, 91, 204, 79, 104, 6];\\n                    return b.match(/../g).map((v, i) => (zd[v[0]] * 16 ^ zd[v[1]]) ^ ol[i]);\\n                }(hash);\\n                return t + window0.btoa(String.fromCharCode.apply(null, c)) + e;\\n            }(md5(postBody).toUpperCase());\\n            break;\\n\\n\\n        case 'zzc':\\n            sign = function(T) {\\n                let C = $.require('hiker://assets/crypto-java.js');\\n                let hash = C.Digest.digest(C.Data.parseUTF8(T), 'SHA-1');\\n                let t = pickId(hash, [23, 14,  6, 36, 16, 40, 7, 19]);\\n                let e = pickId(hash, [16,  1, 32, 12, 19, 27, 8,  5]);\\n\\n                let c = [89, 39, 179, 150, 218, 82, 58, 252, 177, 52, 186, 123, 120, 64, 242, 133, 143, 161, 121, 179].map(function(value, i) {\\n                    let index = hash.slice(i * 2, i * 2 + 2);\\n                    return value ^ parseInt(index, 16);\\n                });\\n                return t + window0.btoa(String.fromCharCode.apply(null, c)) + e;\\n            }(postBody);\\n            break;\\n\\n\\n        default:\\n            return run;\\n            break;\\n    }\\n    delete run._webcgikey;\\n    run.sign = String(signType + sign).toLowerCase().replace(/[\\\\\\\\\\\\/+=]/g, '');\\n    return run;\\n}\\n\\n\\nfunction ajax(data, headerx, signType, run) {\\n    let body = function(body) {\\n        if (data.req_1 != undefined) {\\n            body = Object.assign(data, body);\\n        } else {\\n            body.data = data;\\n        }\\n        return JSON.stringify(body)\\n    }({\\n        comm: getComm()\\n    });\\n    let url = buildUrl( // https://u6.kuwo.cn/cgi-bin/\\n        \\\"https://u6.y.qq.com/cgi-bin/\\\" + [\\n            \\\"musicu.fcg\\\", // 不校验sign\\n            \\\"musics.fcg\\\", // 校验sign\\n        ][/zz[abc]/i.test(signType) ? 1 : 0],\\n        webSign(body, signType, data.method)\\n    );\\n    body = JSON.parse(post(url, {\\n        headers: Object.assign(headers, headerx || {}),\\n        body\\n    })) || {};\\n    if (!data.req_1) {\\n        body = body.data || {};\\n    }\\n    if (run) return body;\\n    return body.data || {};\\n}\\n\\n\\nfunction ajax2(path, data, meta) {\\n    let params = Object.assign({\\n        loginUin: 0,\\n        hostUin: 0,\\n        format: \\\"json\\\",\\n        inCharset: \\\"utf8\\\",\\n        outCharset: \\\"utf-8\\\",\\n        notice: 0,\\n        platform: \\\"wk_v15.json\\\",\\n        needNewCode: 0,\\n\\n        // pcachetime: new Date().getTime(),\\n        new_format: 1,\\n        json: 1,\\n        utf8: 1,\\n    }, data || {});\\n    // params.data = JSON.stringify(data);\\n    return JSON.parse(fetch(\\n        buildUrl(\\\"https://c.y.qq.com/\\\" + path, params),\\n        Object.assign({\\n            headers\\n        }, meta || {})\\n    )) || {};\\n}\\n\\n\\nfunction _formatting(_, r2) {\\n    let f = _.file || {};\\n    let name = _.name || _.songname || _.mvname || _.title;\\n    let singer = (_.singer && _.singer.map(_ => _.name).join('&')) || _.singername || \\\"\\\";\\n    let interval = Hms((_.interval || _.duration) * 1000);\\n\\n    let songId = _.mid || _.songmid;\\n    let albumName = _.albumname || (_.album && _.album.name);\\n    let albumId = _.albummid || (_.album && _.album.mid) || \\\"\\\";\\n    let picUrl = (albumId && `T002 _ ${albumId}`) || (_.vs && _.vs[1] && `T062 _ ${_.vs[1]}`) || \\\"\\\";\\n    if (picUrl != \\\"\\\") picUrl = \\\"https://y.gtimg.cn/music/photo_new/\\\" + picUrl.replace(\\\" _ \\\", \\\"R500x500M000\\\") + \\\".jpg\\\";\\n    let qualitys = [];\\n    for (let k of ['128mp3', '320mp3', 'flac', 'hires']) {\\n        if (f['size_' + k]) {\\n            qualitys.push({\\n                type: {\\n                    '128mp3': \\\"128k\\\",\\n                    '320mp3': \\\"320k\\\",\\n                    'flac': \\\"flac\\\",\\n                    'hires': \\\"flac24bit\\\"\\n                }[k],\\n                size: Size(f['size_' + k])\\n            });\\n        }\\n    }\\n    let strMediaMid = f.media_mid;\\n    let albumMid = _.album && _.album.mid;\\n    Extra({\\n        name,\\n        singer,\\n        interval,\\n        songId,\\n        albumName,\\n        albumId,\\n        picUrl,\\n        qualitys,\\n        id: _.id || _.songid,\\n        strMediaMid,\\n        albumMid,\\n\\n        content: _.pay.payplay || _.pay.pay_play || \\\"0\\\",\\n    }, ((typeof r2 === 'object') ? Object.assign(r2, {\\n        songName: name,\\n        userName: singer,\\n        songTime: interval,\\n        albumName: albumName || name\\n    }) : r2));\\n}\\n\\n\\nfunction getCdns() {\\n    return ajax({\\n        \\\"module\\\": \\\"music.audioCdnDispatch.cdnDispatch\\\",\\n        \\\"method\\\": \\\"GetCdnDispatch\\\",\\n        \\\"param\\\": {\\n            \\\"guid\\\": \\\"0\\\",\\n            \\\"uid\\\": \\\"0\\\",\\n            \\\"use_new_domain\\\": 1,\\n            \\\"use_ipv6\\\": 1\\n        }\\n    });\\n}\\n$.exports = {\\n    ajax,\\n    ajax2,\\n    getCdns,\\n    _formatting,\\n    iTag: function() {\\n        /*\\n        ajax2(\\\"splcloud/fcgi-bin/fcg_get_diss_tag_conf.fcg\\\", {}).data.categories.map(_ => {\\n            let name = _.categoryGroupName.replace('热门', '推荐');\\n            iTag[name] = {};\\n            _.items.map(_ => {\\n                if (_.categoryName == '全部')\\n                    iTag[name][\\\"最新\\\"] = _.categoryId + \\\"&sortId=2\\\";\\n                iTag[name][_.categoryName] = _.categoryId;\\n            });\\n        });\\n        ajax({\\n            module: \\\"playlist.PlaylistAllCategoriesServer\\\",\\n            method: \\\"get_all_categories\\\",\\n            param: {}\\n        }).v_group;\\n        */\\n        ajax({\\n            module: \\\"music.playlist.PlaylistSquare\\\",\\n            method: \\\"GetAllTag\\\",\\n            param: {}\\n        }).v_group.map(_ => {\\n            if (_.group_id) {\\n                let name = _.group_name.replace('热门', '推荐');\\n                iTag[name] = {};\\n                if (name == '推荐') {\\n                    iTag[name]['推荐'] = 'rec';\\n                }\\n                _.v_item.map(_ => {\\n                    iTag[name][_.name.replace(\\\"歌单\\\", \\\"\\\")] = _.id;\\n                });\\n                if (name == '推荐') {\\n                    iTag[name]['最新'] = 'new';\\n                    iTag[name]['最热'] = 'hot';\\n                    iTag[name]['免费'] = 3418;\\n                }\\n            }\\n        });\\n        iTag[\\\"排行\\\"] = {};\\n        ajax({\\n            module: \\\"musicToplist.ToplistInfoServer\\\",\\n            method: \\\"GetAll\\\",\\n            param: {}\\n        }).group.map(_ => {\\n            iTag[\\\"排行\\\"][_.groupName] = [];\\n            _.toplist.map(__ => {\\n                if (__.title != \\\"MV榜\\\") {\\n                    iTag[\\\"排行\\\"][_.groupName].push(Extra({\\n                        name: __.title,\\n                        sourceListId: __.topId,\\n                        picUrl: __.headPicUrl || __.frontPicUrl,\\n                        content: 3,\\n                    }, 1, 1))\\n                }\\n            });\\n        });\\n        storage0.putMyVar(\\\"qq_iTag\\\", iTag);\\n    },\\n\\n    mv: function(_, t1) {\\n        let mvhash = $.require(\\\"qq?rule=歌词适配\\\").search(0, t1, 'url', 'mv');\\n        mvhash = mvhash.mv && mvhash.mv.vid;\\n        let names = [];\\n        let urls = [];\\n        if (mvhash) {\\n            let mvinfo = ajax({\\n                module: \\\"gosrf.Stream.MvUrlProxy\\\", // music.stream.MvUrlProxy\\n                method: \\\"GetMvUrls\\\",\\n                param: {\\n                    \\\"vids\\\": [mvhash],\\n                    \\\"request_type\\\": 10003,\\n                    \\\"videoformat\\\": 1,\\n                    \\\"filetype\\\": 30,\\n                    \\\"format\\\": 265,\\n                    \\\"use_new_domain\\\": 1,\\n                    // \\\"addrtype\\\":3,\\n                    // \\\"maxFiletype\\\":60,\\n                }\\n            })[mvhash][\\\"mp4\\\"].filter(_ => _.freeflow_url && _.freeflow_url.length);\\n            [\\n                '【标清】 240P',\\n                '【高清】 480P',\\n                '【超清】 720P',\\n                '【蓝光】 1080P',\\n                '【未知】 2000P',\\n                '【未知】 4000P',\\n            ].map((name, path) => {\\n                let mp4url = mvinfo[path] && mvinfo[path][\\\"freeflow_url\\\"][0];\\n                if (mp4url) {\\n                    names.push(name);\\n                    urls.push(mp4url);\\n                }\\n            });\\n        }\\n        return [names.reverse(), urls.reverse()];\\n    },\\n    getLyric: function(_, t1) {\\n        let lrc;\\n        for (let lType of [\\\"new\\\", \\\"yqq\\\"]) {\\n            try {\\n                lrc = ajax2(\\\"lyric/fcgi-bin/fcg_query_lyric_\\\" + lType + \\\".fcg\\\", {\\n                    nobase64: 1,\\n                    songmid: t1\\n                }).lyric;\\n                if (!lrc.match(/\\\\[\\\\d+\\\\:\\\\d+/)) {\\n                    lrc = Lrc(lrc, _.interval);\\n                }\\n                if (lrc) break;\\n            } catch (err) {}\\n        }\\n        return lrc || \\\"\\\";\\n    },\\n    lazy: function(platform, t1, t2, t3) {\\n        let title, author, desc, img, time, tags, total, list, u;\\n        let _ = t1;\\n        t1 = _.songId || _.sourceListId;\\n        switch (String(platform)) {\\n            case '0': // 详情\\n                if (t2) {\\n                    return $.require(\\\"jiexi?rule=歌词适配\\\").GetMusicUrl(\\\"down\\\", \\\"qq\\\", t1, t3, _);\\n                }\\n                let f = _.qualitys;\\n                // 链接\\n                var url, ii, lrc;\\n                switch (ii = t3) {\\n                    case '3':\\n                        if (ii == 3) {\\n                            if (f[3] && f[3].type == 'flac24bit') {\\n                                [url, lrc, ii] = $.require(\\\"jiexi?rule=歌词适配\\\").GetMusicUrl(\\\"open\\\", \\\"qq\\\", t1, 3, _, lrc, ii);\\n                                if (url) break;\\n                            } else ii = 2;\\n                        }\\n                    case '2':\\n                        if (ii == 2) {\\n                            if (f[2] && f[2].type == 'flac') {\\n                                [url, lrc, ii] = $.require(\\\"jiexi?rule=歌词适配\\\").GetMusicUrl(\\\"open\\\", \\\"qq\\\", t1, 2, _, lrc, ii);\\n                                if (url) break;\\n                            } else ii = 1;\\n                        }\\n                    case '1':\\n                        if (ii == 1) {\\n                            if (f[1] && f[1].type == '320k') {\\n                                [url, lrc, ii] = $.require(\\\"jiexi?rule=歌词适配\\\").GetMusicUrl(\\\"open\\\", \\\"qq\\\", t1, 1, _, lrc, ii);\\n                                if (url) break;\\n                            } else ii = 0;\\n                        }\\n                    default:\\n                        try {\\n                            if (_.content == \\\"1\\\") {\\n                                throw new Error('is vip music');\\n                            }\\n                            let __ = ajax({\\n                                module: \\\"vkey.GetVkeyServer\\\", // music.vkey.GetVkey\\n                                method: \\\"CgiGetVkey\\\", // GetUrl\\n                                param: {\\n                                    \\\"guid\\\": \\\"0\\\",\\n                                    \\\"platform\\\": \\\"20\\\",\\n                                    \\\"filename\\\": [\\\"M500\\\" + t1 + t1 + \\\".mp3\\\"],\\n                                    \\\"songmid\\\": [t1],\\n\\n                                    // \\\"uin\\\": \\\"\\\",\\n                                    // \\\"loginflag\\\": 1\\n                                }\\n                            });\\n                            url = __.midurlinfo[0].purl;\\n                            if (url && url != \\\"\\\") {\\n                                url = __.sip[0] + url;\\n                            } else {\\n                                throw new Error('no get purl');\\n                            }\\n                        } catch (isVipMusic) {\\n                            [url, lrc, ii] = $.require(\\\"jiexi?rule=歌词适配\\\").GetMusicUrl(\\\"open\\\", \\\"qq\\\", t1, 0, _, lrc, ii);\\n                        }\\n                        break;\\n                }\\n                return [url, lrc, ii];\\n                break;\\n            case '1': // 首页\\n                /*\\n                _ = ajax2(\\\"splcloud/fcgi-bin/fcg_get_diss_by_tag.fcg\\\", {\\n                    categoryId: t1,\\n                    sin: ((MY_PAGE - 1) * 30),\\n                    ein: ((MY_PAGE * 30) - 1)\\n                }).data;\\n                */\\n                if (t1 == 'rec') { // 推荐\\n                    _ = ajax({\\n                        module: \\\"music.playlist.PlaylistSquare\\\",\\n                        method: \\\"GetRecommendWhole\\\",\\n                        param: {\\n                            IsReqFeed: true,\\n                            FeedReq: {\\n                                From: (MY_PAGE - 1) * 30,\\n                                Size: 30\\n                            }\\n                        }\\n                    }, {\\n                        Cookie: \\\"\\\"\\n                    });\\n                } else if (t1 == 9527) { // ai\\n                    _ = ajax({\\n                        module: 'music.playlist.AiPlCategory',\\n                        method: 'get_ai_category_content',\\n                        param: {\\n                            category_id: 9527,\\n                            size: 30,\\n                            page: (MY_PAGE - 1),\\n                            use_page: MY_PAGE\\n                        }\\n                    });\\n                } else if (t1 == 'new' || t1 == 'hot') { // 最新/最热\\n                    _ = ajax({\\n                        module: 'playlist.PlayListPlazaServer',\\n                        method: 'get_playlist_by_tag',\\n                        param: {\\n                            id: 10000000,\\n                            sin: (MY_PAGE - 1) * 30,\\n                            size: 30,\\n                            order: t1 == 'new' ? 2 : 5,\\n                            cur_page: MY_PAGE\\n                        }\\n                    });\\n                } else {\\n                    _ = ajax({\\n                        module: 'playlist.PlayListCategoryServer',\\n                        method: 'get_category_content',\\n                        param: {\\n                            titleid: +t1,\\n                            caller: '0',\\n                            category_id: +t1,\\n                            size: 30,\\n                            page: MY_PAGE - 1,\\n                            use_page: 1,\\n                        }\\n                    });\\n                }\\n                _ = _.FeedRsp || _.content || _;\\n                list = _.list || _.List || _.v_item || _.v_playlist;\\n                list.map(_ => {\\n                    _ = _.Playlist ? _.Playlist.basic : _.basic || _;\\n                    Extra({\\n                        name: _.dissname || _.title,\\n                        picUrl: _.imgurl || _.cover_url_big || _.cover_url_medium || _.cover_url_small || (_.cover && (_.cover.big_url || _.cover.medium_url || _.cover.small_url)),\\n                        content: 2,\\n                        sourceListId: _.dissid || _.tid,\\n                        col_type: t2\\n                    }, 1);\\n                });\\n                return _.sum || _.total || _.total_cnt || _.FromLimit || ((MY_PAGE - 1) * 30 + list.length);\\n                break;\\n            case '2': // 发现\\n                /*\\n                _ = ajax2(\\\"qzone/fcg-bin/fcg_ucc_getcdinfo_byids_cp.fcg\\\", {\\n                    type: 1,\\n                    onlysong: 0,\\n                    disstid: t1,\\n                }).cdlist[0];\\n                */\\n                _ = ajax({\\n                    module: \\\"music.srfDissInfo.aiDissInfo\\\",\\n                    method: \\\"uniform_get_Dissinfo\\\",\\n                    param: {\\n                        \\\"disstid\\\": +t1,\\n                        \\\"enc_host_uin\\\": \\\"\\\",\\n                        \\\"tag\\\": 1,\\n                        \\\"userinfo\\\": 1,\\n                        \\\"song_begin\\\": (MY_PAGE - 1) * 30,\\n                        \\\"song_num\\\": 30,\\n                        // \\\"orderlist\\\": 1,\\n                        // \\\"onlysonglist\\\": 0,\\n                    }\\n                });\\n\\n                title = _.dissname || _.dirinfo.title;\\n                author = _.nickname || _.dirinfo.host_nick;\\n                desc = _.desc || _.dirinfo.desc;\\n                img = _.logo || _.dirinfo.picurl;\\n                time = $.dateFormat((_.ctime || _.dirinfo.ctime) * 1000, 'yyyy-MM-dd');\\n                tags = (_.tags || (_.dirinfo && _.dirinfo.tag) || []).map(_ => _.name).join(\\\"、\\\").replace(/、{2,}/g, \\\"、\\\");\\n\\n                total = _.songnum || _.total_song_num || _.dirinfo.songnum;\\n                list = _.songlist;\\n                if (list.length == total) total = 1;\\n                break;\\n            case '3': // 排行\\n                _ = ajax({\\n                    module: \\\"musicToplist.ToplistInfoServer\\\",\\n                    method: \\\"GetDetail\\\",\\n                    param: {\\n                        \\\"topId\\\": +t1,\\n                        \\\"offset\\\": (MY_PAGE - 1) * 30,\\n                        \\\"num\\\": 30,\\n                        \\\"period\\\": \\\"\\\"\\n                    },\\n                });\\n\\n                title = _.data.title;\\n                author = \\\"QQ音乐\\\";\\n                desc = _.data.intro;\\n                img = _.data.mbHeadPicUrl;\\n                time = _.data.updateTime;\\n                tags = _.data.title;\\n\\n                total = _.data.totalNum;\\n                list = _.songInfoList;\\n                break;\\n            case '4': // 专辑\\n                _ = ajax({\\n                    req_1: {\\n                        module: \\\"music.musichallAlbum.AlbumInfoServer\\\",\\n                        method: \\\"GetAlbumDetail\\\",\\n                        param: {\\n                            \\\"albumMid\\\": t1\\n                        }\\n                    },\\n                    req_2: {\\n                        module: \\\"music.musichallAlbum.AlbumSongList\\\",\\n                        method: \\\"GetAlbumSongList\\\",\\n                        param: {\\n                            \\\"albumMid\\\": t1,\\n                            \\\"order\\\": 2,\\n                            \\\"begin\\\": 0,\\n                            \\\"num\\\": -1\\n                        },\\n                    }\\n                }, {}, \\\"noSign\\\", true);\\n                let req_1 = _.req_1.data;\\n                _ = _.req_2.data;\\n\\n                title = req_1.basicInfo.albumName;\\n                author = req_1.singer.singerList.map(_ => _.name || _.transName).join(\\\"&\\\");\\n                desc = req_1.basicInfo.desc;\\n                img = `https://y.gtimg.cn/music/photo_new/T002R300x300M000${t1}.jpg`;\\n                time = req_1.basicInfo.publishDate;\\n                tags = [req_1.basicInfo.language, req_1.basicInfo.albumType];\\n                (req_1.basicInfo.genres || []).map(_ => {\\n                    if (_.name) tags.push(_.name);\\n                });\\n                (req_1.basicInfo.award || []).map(_ => {\\n                    if (_.name) tags.push(_.name);\\n                });\\n\\n                total = _.totalNum;\\n                list = _.songList.map(_ => _.songInfo);\\n                break;\\n            case '5': // 作者\\n                _ = ajax({\\n                    req_1: {\\n                        module: \\\"music.musichallSinger.SingerInfoInter\\\",\\n                        method: \\\"GetSingerDetail\\\",\\n                        param: {\\n                            \\\"singer_mids\\\": [t1],\\n                            \\\"ex_singer\\\": 1,\\n                            \\\"wiki_singer\\\": 1,\\n                            \\\"group_singer\\\": 0,\\n                            \\\"pic\\\": 1,\\n                            \\\"photos\\\": 0\\n                        }\\n                    },\\n                    req_2: {\\n                        module: \\\"musichall.song_list_server\\\",\\n                        method: \\\"GetSingerSongList\\\",\\n                        param: {\\n                            \\\"singerMid\\\": t1,\\n                            \\\"order\\\": 1,\\n                            \\\"begin\\\": (MY_PAGE - 1) * 30,\\n                            \\\"num\\\": 30\\n                        }\\n                    }\\n                }, {}, \\\"noSign\\\", true);\\n                try {\\n                    let singer = _.req_1.data.singer_list[0] || {};\\n                    title = singer.basic_info.name;\\n                    author = singer.ex_info.foreign_name;\\n                    desc = singer.ex_info.desc;\\n                    img = singer.pic.pic;\\n                    time = singer.ex_info.birthday;\\n                    tags = singer.group_list;\\n                } catch (e) {};\\n                _ = _.req_2.data;\\n                total = _.totalNum;\\n                list = _.songList.map(_ => _.songInfo);\\n                break;\\n        }\\n        if (t2) return list;\\n        list.map(_ => _formatting(_, t3 || {}));\\n        return {\\n            title,\\n            author,\\n            desc,\\n            img,\\n            time,\\n            tags,\\n            total: total || ((MY_PAGE - 1) * 30 + list.length)\\n        }\\n    },\\n\\n\\n\\n    search: function(platform, keyword, isU, run) {\\n        let _;\\n        if (isU != \\\"url\\\") {\\n            let list, __ = {\\n                lib: (_) => true,\\n                paid: (_) => _.pay.pay_play == '1',\\n                free: (_) => _.pay.pay_play == '0',\\n                lyric: (_) => true,\\n                mv: (_) => true\\n            }\\n            let surl = (stype) => ajax({\\n                module: \\\"music.search.SearchCgiService\\\",\\n                method: \\\"DoSearchForQQMusicLite\\\", // DoSearchForQQMusicDesktop\\n                param: {\\n                    // \\\"remoteplace\\\": \\\"txt.yqq.top\\\", // txt.mqq.all\\n                    // \\\"searchid\\\": R(17,\\\"1234567890\\\"),\\n                    \\\"query\\\": keyword,\\n                    \\\"search_type\\\": stype,\\n                    \\\"num_per_page\\\": 30,\\n                    \\\"page_num\\\": MY_PAGE,\\n                    \\\"nqc_flag\\\": 0,\\n                    \\\"grp\\\": 1\\n                }\\n            });\\n            switch (String(platform)) {\\n                case '0': // 搜索单曲\\n                    _ = surl({\\n                        mv: 4,\\n                        lyric: 7\\n                    }[isU] || 0);\\n                    if (isU == 'mv') { // 搜索mv\\n                        list = _.body.item_mv || [];\\n\\n                        // 通过vid获取歌曲id\\n                        let vidtoids = function(vidlist) {\\n                            let ids = [];\\n                            let types = [];\\n                            let modify_stamp = ajax({\\n                                module: \\\"video.VideoDataServer\\\",\\n                                method: \\\"get_video_info_batch\\\",\\n                                param: {\\n                                    \\\"vidlist\\\": vidlist,\\n                                    \\\"required\\\": [\\\"related_songs\\\"]\\n                                }\\n                            });\\n                            vidlist.map(vid => {\\n                                let arr = modify_stamp[vid].related_songs || [];\\n                                for (let id of arr) {\\n                                    if (id && ids.indexOf(id) == -1) {\\n                                        ids.push(id);\\n                                        types.push(0);\\n                                    }\\n                                }\\n                            });\\n                            return {\\n                                \\\"ids\\\": ids,\\n                                \\\"mids\\\": [],\\n                                \\\"types\\\": types,\\n                                \\\"modify_stamp\\\": types,\\n                                \\\"ctx\\\": 0,\\n                                \\\"client\\\": 1,\\n                            };\\n                        }(list.map(_ => _.vid));\\n\\n                        // 通过歌曲id获取歌曲信息\\n                        list = ajax({\\n                            module: \\\"music.trackInfo.UniformRuleCtrl\\\",\\n                            method: \\\"CgiGetTrackInfo\\\",\\n                            param: vidtoids\\n                        }).tracks || [];\\n                    } else {\\n                        list = _.body.item_song || [];\\n                    }\\n                    let r1 = getMyVar('search_down', '0') == '1' ? 2 : 1;\\n                    list.map(_ => {\\n                        if (__[isU](_)) _formatting(_, r1);\\n                    });\\n                    break;\\n                case '1': // 搜索歌单\\n                    isU = {\\n                        songs: {\\n                            u: 3,\\n                            c: 2,\\n                            p: \\\"item_songlist\\\"\\n                        },\\n                        album: {\\n                            u: 2,\\n                            c: 4,\\n                            p: \\\"item_album\\\"\\n                        },\\n                        artist: {\\n                            u: 1,\\n                            c: 5,\\n                            p: \\\"singer\\\"\\n                        }\\n                    }[isU];\\n                    _ = surl(isU.u);\\n                    list = _.body[isU.p] || [];\\n                    list.map(_ => Extra({\\n                        name: _.dissname || _.name || _.singerName,\\n                        picUrl: _.logo || _.pic || _.singerPic,\\n                        sourceListId: _.dissid || _.albummid || _.singerMID,\\n                        content: isU.c,\\n                    }, 1));\\n                    break;\\n            }\\n            return _.meta.sum || ((MY_PAGE - 1) * 30 + list.length);\\n        } else { // 搜索 分享链接\\n            switch (String(platform)) {\\n                case '0': // 搜索单曲\\n                    _ = ajax({\\n                        module: 'music.pf_song_detail_svr',\\n                        method: 'get_song_detail_yqq',\\n                        param: {\\n                            song_mid: keyword\\n                        }\\n                    }).track_info;\\n                    if (run == 'mv') return _;\\n                    _formatting(_, 1);\\n                    break;\\n                case '1': // 搜索歌单\\n                    _ = ajax({\\n                        module: \\\"music.srfDissInfo.aiDissInfo\\\",\\n                        method: \\\"uniform_get_Dissinfo\\\",\\n                        param: {\\n                            disstid: +keyword,\\n                            song_num: 1,\\n                        }\\n                    }).dirinfo;\\n                    Extra({\\n                        name: _.title,\\n                        picUrl: _.picurl,\\n                        content: 2,\\n                        sourceListId: _.id\\n                    }, 1);\\n                    break;\\n            }\\n            return 0;\\n        }\\n    },\\n\\n\\n\\n    refresh_login: function(cookie, run) {\\n        let _, c, C = String(cookie).trim();\\n        c = C.split(/qm_keyst=/i);\\n        let key = (c[1] || c[0]).split(\\\";\\\")[0];\\n        c = C.split(/uin=/i);\\n        let uin = (c[1] || c[0]).split(\\\";\\\")[0];\\n        if (key.startsWith('W_X')) {\\n            _ = {\\n                module: \\\"music.login.LoginServer\\\",\\n                method: \\\"Login\\\",\\n                param: {\\n                    \\\"code\\\": \\\"\\\",\\n                    \\\"openid\\\": \\\"\\\",\\n                    \\\"refresh_token\\\": \\\"\\\",\\n                    \\\"str_musicid\\\": String(uin),\\n                    \\\"musickey\\\": key,\\n                    \\\"unionid\\\": \\\"\\\",\\n                    \\\"refresh_key\\\": \\\"\\\",\\n                    \\\"loginMode\\\": 2\\n                }\\n            }\\n        } else {\\n            _ = {\\n                module: 'QQConnectLogin.LoginServer',\\n                method: 'QQLogin',\\n                param: {\\n                    'expired_in': 7776000,\\n                    'musicid': Number(uin),\\n                    'musickey': key\\n                }\\n            }\\n        }\\n        _ = ajax(_, {\\n            Cookie: \\\"qm_keyst=\\\" + key + \\\"; uin=\\\" + uin\\n        }, 'zzc', true);\\n        if (_.code == 0) {\\n            let key2 = _.data.musickey;\\n            if (run) return [key2, uin];\\n            log(\\\"qq_refresh_token...\\\\nQQ音乐：token获取成功  |  是否更改：\\\" + (key != key2));\\n            putMyVar('viprule_c0', key2);\\n            putMyVar('viprule_c1', uin);\\n            return $.require('jiexi?rule=歌词适配').setEdit2(\\\"qq\\\");\\n        } else if (_.code == 1000) {\\n            log(\\\"qq_refresh_token...\\\\nQQ音乐：token获取失败  |  失败原因：token过期\\\");\\n            return \\\"toast://token过期，请重新配置\\\";\\n        } else if (_.code == 10006) {\\n            log(\\\"qq_refresh_token...\\\\nQQ音乐：token获取失败  |  失败原因：参数错误？\\\");\\n            return \\\"toast://参数错误\\\";\\n        } else {\\n            log(\\\"qq_refresh_token...\\\\nQQ音乐：token获取失败  |  失败原因：未知错误\\\");\\n            return \\\"toast://刷新失败\\\";\\n        }\\n    },\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"⑤TGX收藏\",\"path\":\"collection\",\"rule\":\"js:\\neval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配', {})).rule);\\nlet data, path, set, zu, i, ZY, zy, d;\\n[path, set, data, zu] = $.require('collection2?rule=歌词适配').getData(true);\\nif ((i = getItem(\\\"ci_1\\\", \\\"0\\\")) >= zu.length) i = 0;\\nzy = JSON.parse(readFile(path + (ZY = zu[i]).id + \\\".json\\\"));\\n\\n\\n\\nd = [{\\n    col_type: 'pic_1_full',\\n    img: $.require('image?rule=歌词适配')(\\\"top\\\"),\\n    url: $([{\\n        title: \\\"我的收藏\\\",\\n        icon: \\\"hiker://images/icon_download\\\"\\n    }, {\\n        title: \\\"历史浏览\\\",\\n        icon: \\\"hiker://images/icon_his\\\"\\n    }, {\\n        title: \\\"程序设置\\\",\\n        icon: \\\"hiker://images/rule_type_other\\\"\\n    }, {\\n        title: \\\"本地歌曲\\\",\\n        icon: \\\"hiker://images/rule_type_audio\\\"\\n    }, {\\n        title: \\\"解析管理\\\",\\n        icon: \\\"hiker://images/icon_xiutan\\\"\\n    }, {\\n        title: \\\"高级搜索\\\",\\n        icon: \\\"hiker://images/icon_find\\\"\\n    }], 2, '选择页面').select((_) => {\\n        let u = 'hiker://empty';\\n        switch (input) {\\n            case '我的收藏':\\n                u = 'hiker://collection?rule=歌词适配';\\n                break;\\n            case '历史浏览':\\n                u = 'hiker://history?rule=歌词适配';\\n                break;\\n            case '本地歌曲':\\n                u = 'hiker://localMedia';\\n                break;\\n            case '程序设置':\\n                u = 'hiker://page/install#noHistory##noRecordHistory##noRefresh#?pageTitle=程序设置&rule=歌词适配';\\n                break;\\n            case '解析管理':\\n                u = 'hiker://page/ruleList#noHistory##noRecordHistory##noRefresh#?pageTitle=解析管理&rule=歌词适配';\\n                break;\\n            case '高级搜索':\\n                clearMyVar('s_platform');\\n                clearMyVar('s_t3');\\n                clearMyVar('s_t4');\\n                if (_.back) {\\n                    return back(false), u;\\n                }\\n                u = \\\"hiker://page/search#noHistory##noRecordHistory#?p=fypage&pageTitle=高级搜索&rule=歌词适配\\\";\\n                break;\\n        }\\n        return u;\\n    }, MY_PARAMS),\\n    extra: {\\n        back: true,\\n        inheritTitle: false\\n    }\\n}];\\n\\n\\n\\nlet is_down = getMyVar('search_down', '0') == '1';\\nd.push({\\n    title: Strong(is_down ? '下载歌曲' : '播放歌曲'),\\n    url: $(\\\"#noLoading#\\\").lazyRule((id) => {\\n        let is_down = getMyVar('search_down', '0') == '1';\\n        let title, img = 'http://123.56.105.145/tubiao/more/';\\n        if (is_down) {\\n            title = '<strong>播放歌曲</strong>';\\n            img += '40';\\n        } else {\\n            title = '<strong>下载歌曲</strong>';\\n            img += '22';\\n        }\\n        img += '.png';\\n        putMyVar('search_down', is_down ? '0' : '1');\\n        updateItem(id + ':collection:down', {\\n            title,\\n            img\\n        });\\n        let list = findItemsByCls(id + ':addlist') || [];\\n        for (let it of list) {\\n            let extra_url = it.url;\\n            let url = it.extra.url;\\n            it.extra.url = extra_url;\\n            updateItem(it.extra.id, {\\n                extra: it.extra,\\n                url\\n            });\\n        }\\n        return \\\"hiker://empty\\\";\\n    }, id),\\n    col_type: \\\"icon_small_3\\\",\\n    img: \\\"http://123.56.105.145/tubiao/more/40.png\\\",\\n    extra: {\\n        id: id + ':collection:down'\\n    }\\n});\\nd.push({\\n    title: Strong(\\\"导入歌单\\\"),\\n    col_type: \\\"icon_small_3\\\",\\n    img: \\\"http://123.56.105.145/tubiao/unframed/459.png\\\",\\n    url: \\\"fileSelect://\\\" + $.toString(() => {\\n        if (!input) return \\\"toast://没有地址\\\";\\n        path = \\\"hiker://files/rules/Thomas/gcsp1999/collection/\\\";\\n        _ = $.require(\\\"GZIP\\\").unzip(\\\"file://\\\" + input),\\n            _ = JSON.parse(_.replace(/(\\\"source\\\"\\\\:\\\")tx\\\"/gi, '$1qq\\\"'));\\n        if (_.type == \\\"playListPart_v2\\\")\\n            _.data = [_.data];\\n        let l1 = JSON.parse(readFile(path + \\\"details.json\\\"));\\n        let l2 = l1.map(_ => _.source + _.sourceListId);\\n        let l3 = _.data.map(_ => {\\n            let __ = {\\n                name: _.name,\\n                source: _.source || _.id.split(\\\"_\\\")[0],\\n                sourceListId: _.sourceListId || _.id.split(\\\"_\\\")[1],\\n                locationUpdateTime: _.locationUpdateTime || new Date().getTime(),\\n                picUrl: _.picUrl || \\\"https://docs.lxmusic.top/logo.svg\\\",\\n                content: \\\"2\\\",\\n                // author: _.author || \\\"佚名\\\",\\n                // desc: _.desc || \\\"值得分享的歌曲\\\",\\n                // tags: _.tags || \\\"好听\\\"\\n            };\\n            if (__.source == \\\"kg\\\" || __.source == \\\"kw\\\") {\\n                let sourceListId = __.sourceListId.replace(/^(id|digest\\\\-8_)_(\\\\d+)$/i, \\\"$2\\\");\\n                if (__.source == \\\"kg\\\" && sourceListId.match(/https?\\\\:\\\\/\\\\//i)) {\\n                    let ListIdmatch = sourceListId.match(/(\\\\/special\\\\/single\\\\/|share_type=special&id=|global_specialid=|\\\\/songlist\\\\/|global_collection_id=)([^\\\\.\\\\&\\\\/\\\\?]+)/i);\\n                    sourceListId = ListIdmatch && ListIdmatch[2] || sourceListId;\\n                }\\n                __.sourceListId = sourceListId;\\n            };\\n            let i1 = l2.indexOf(__.source + __.sourceListId);\\n            if (i1 != -1) {\\n                l1.splice(i1, 1);\\n                l2.splice(i1, 1);\\n            }\\n            let list = _.list.map(_ => {\\n                let meta = _.meta;\\n                delete _.id;\\n                delete _.meta;\\n                delete meta._qualitys;\\n                meta.qualitys = meta.qualitys.filter(_ => /^(128k|320k|flac|flac24bit)$/i.test(_.type));\\n                if (_.interval.length == 5) {\\n                    _.interval = \\\"00:\\\" + _.interval;\\n                }\\n                return Object.assign(_, meta);\\n            });\\n            saveFile(\\n                path + __.source + '_' + __.sourceListId + \\\".json\\\",\\n                JSON.stringify(list, 0, 1)\\n            );\\n            return __;\\n        });\\n        saveFile(\\n            path + \\\"details.json\\\",\\n            JSON.stringify(l1.concat(l3), 0, 1)\\n        );\\n        refreshPage();\\n        return \\\"toast://导入成功\\\";\\n    })\\n});\\nd.push({\\n    title: Strong(\\\"样式切换\\\"),\\n    url: $(\\\"#noLoading#\\\").lazyRule((id) => {\\n        const hikerPop = $.require(\\\"http://123.56.105.145/weisyr/js/hikerPop.js\\\");\\n\\n        function up(a) {\\n            let list = findItemsByCls(id + ':addlist') || [];\\n            for (let it of list) {\\n                updateItem(it.extra.id, {\\n                    col_type: a\\n                });\\n            }\\n            return \\\"hiker://empty\\\";\\n        }\\n        let pop = hikerPop.selectBottom({\\n            title: \\\"请选择显示样式\\\",\\n            options: getColTypes(),\\n            columns: 2,\\n            height: 0.6, //0-1\\n            position: 1,\\n            click(a) {\\n                return up(a)\\n            },\\n            longClick(a) {\\n                return up(a)\\n            }\\n        });\\n        return \\\"hiker://empty\\\";\\n    }, id),\\n    col_type: \\\"icon_small_3\\\",\\n    img: \\\"http://123.56.105.145/tubiao/red/35.png\\\"\\n});\\nd.push({\\n    url: \\\"hiker://empty\\\",\\n    col_type: \\\"line_blank\\\",\\n});\\nd.push({\\n    url: \\\"hiker://empty\\\",\\n    col_type: \\\"line_blank\\\",\\n});\\n\\n\\n\\n\\n\\nlet options = [\\\"删除分组\\\", \\\"分享分组\\\", \\\"新增分组\\\", \\\"修改封面\\\", \\\"修改名称\\\", \\\"合并分组\\\", \\\"更改排序\\\", \\\"更新资源\\\", \\\"二级页面\\\"];\\nd.push({\\n    title: Strong(ZY.name),\\n    desc: \\\"共\\\" + zy.length + \\\"首音乐\\\",\\n    col_type: \\\"avatar\\\",\\n    img: \\\"hiker://images/icon_menu6\\\",\\n    url: $(\\\"#noLoading#\\\").lazyRule((options, i) => {\\n        options.splice(1, 0, \\\"切换样式\\\");\\n        const hikerPop = $.require(\\\"http://123.56.105.145/weisyr/js/hikerPop.js\\\");\\n        [path, set, data, list] = $.require('collection2?rule=歌词适配').getData();\\n        let spen = Number(getMyVar(\\\"ci_2\\\", \\\"2\\\"));\\n        let inputBox;\\n        let pop = hikerPop.selectBottomResIcon({\\n            iconList: list,\\n            columns: spen,\\n            title: \\\"切换分组\\\",\\n            noAutoDismiss: false,\\n            position: 20,\\n            toPosition: 20,\\n            position: i,\\n            click(a) {\\n                let ii = list.map(_ => _.title).indexOf(a.title);\\n                setItem(\\\"ci_1\\\", ii + \\\"\\\");\\n                refreshPage();\\n                return \\\"hiker://empty\\\";\\n            },\\n            menuClick(manage) {\\n                hikerPop.selectCenter({\\n                    options,\\n                    columns: 2,\\n                    title: \\\"扩展操作\\\",\\n                    click(input) {\\n                        if (input == '切换样式') {\\n                            spen = spen == 2 ? 1 : 2;\\n                            putMyVar(\\\"ci_2\\\", spen + \\\"\\\");\\n                            manage.changeColumns(spen);\\n                            hikerPop.runOnNewThread(() => {\\n                                java.lang.Thread.sleep(120);\\n                                manage.scrollToPosition(20, true);\\n                            });\\n                            return \\\"hiker://empty\\\";\\n                        } else {\\n                            pop.dismiss();\\n                            return $.require('collection2?rule=歌词适配').setData(input, i);\\n                        }\\n                    },\\n                });\\n\\n            }\\n        });\\n        return \\\"hiker://empty\\\";\\n    }, options, i),\\n    extra: {\\n        longClick: options.map(title => ({\\n            title,\\n            js: $.toString((input, i) => {\\n                return $.require('collection2?rule=歌词适配').setData(input, i);\\n            }, title, i)\\n        }))\\n    }\\n});\\nd.push({\\n    url: \\\"hiker://empty\\\",\\n    col_type: \\\"line\\\",\\n});\\n\\n\\n\\n// 分组数据\\nif (zy.length == 0) {\\n    d.push({\\n        col_type: \\\"text_center_1\\\",\\n        url: \\\"hiker://empty\\\",\\n        title: \\\"““””\\\" + \\\"~~~什么都没有~~~\\\".fontcolor(\\\"Gray\\\")\\n    });\\n} else {\\n    zy.map((_, i) => {\\n        let __ = Extra(_, {\\n            title: Rich(\\\"$songName\\\" + (\\\"　-　$userName\\\").small().small().sub()),\\n            desc: \\\"📼 $songTime\\\\n📀 $albumName\\\",\\n            col_type: \\\"text_1\\\",\\n\\n            songName: _.name,\\n            userName: _.singer,\\n            songTime: _.interval || _.qualitys[_.qualitys.length - 1].type,\\n            albumName: _.albumName || _.name\\n        }, 1);\\n        __.extra.longClick[1].title = \\\"复制\\\";\\n        __.extra.longClick.splice(1, 0, {\\n            title: \\\"修改\\\",\\n            js: $.toString((p1, p2, i) => {\\n                return $.require(\\\"theme3?rule=歌词适配\\\").clickJs(p1, p2, i);\\n            }, path, ZY.id + \\\".json\\\", i)\\n        }, {\\n            title: \\\"分享\\\",\\n            js: $.toString((p1, p2, i) => {\\n                let json = JSON.parse(readFile(p1 + p2))[i];\\n                return $.require(\\\"jiexi?rule=歌词适配\\\").getShare(json, false, 1, \\\"歌曲\\\", json.name + ' - ' + json.singer);\\n            }, path, ZY.id + \\\".json\\\", i)\\n        }, {\\n            title: \\\"删除\\\",\\n            js: $.toString((path, i, name) => {\\n                return $(\\\"确定删除 \\\" + name + \\\" 吗？\\\").confirm((path, i) => {\\n                    let zy = JSON.parse(readFile(path));\\n                    zy.splice(i, 1);\\n                    saveFile(path, JSON.stringify(zy, 0, 1));\\n                    refreshPage(false);\\n                    return \\\"toast://歌曲删除成功\\\";\\n                }, path, i)\\n            }, path + ZY.id + \\\".json\\\", i, _.name)\\n        });\\n        d.push(__);\\n    });\\n}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"④高级搜索\",\"path\":\"search\",\"rule\":\"js:\\neval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配', {})).rule);\\n// MY_PAGE == 1 && (d = [], Loading());\\nlet history = storage0.getItem(\\\"searchHistory\\\", []);\\nlet s_platform = getMyVar('s_platform', 'lib')\\nlet s_t1 = getMyVar('s_t1', getItem('s_t1', '0'))\\nlet s_t2 = getMyVar('s_t2', '').replace(/^[\\\\s\\\\S]*?(https?\\\\:\\\\/\\\\/[^\\\\n\\\\r]+)[\\\\s\\\\S]*/i, '$1').split(/\\\\s+\\\\@QQ音乐/i)[0];\\nlet s_t3 = getMyVar('s_t3', 'lib');\\nlet s_t4, tabs, regid, is_down,\\n    isU = /https?\\\\:\\\\/\\\\//.test(s_t2),\\n    isP = MY_PAGE == 1;\\n\\n\\n\\nif (s_platform == 'lib') { // 搜索推荐\\n    s_t3 = getMyVar('s_t3', 'kw');\\n    tabs = ['kw', 'kg'];\\n} else if (s_t1 == '0') { // 搜索单曲\\n    switch (s_platform) {\\n        case '5s':\\n            tabs = ['lib', 'yc', 'fc', 'bz'];\\n            break;\\n        case 'my':\\n            s_t4 = getMyVar('s_t4', '1') == '1';\\n            s_t3 = getMyVar('s_t3', 'wy');\\n            if (!s_t3.match(/wy|kw|mg/) && s_t4)\\n                s_t3 = 'wy';\\n            tabs = [\\\"wy\\\", \\\"kw\\\", \\\"mg\\\", \\\"1t\\\", \\\"db\\\", \\\"5y\\\", \\\"5f\\\"].slice(0, s_t4 ? 3 : 7);\\n            break;\\n        case 'qt':\\n            s_t3 = getMyVar('s_t3', 'bd');\\n            tabs = qts.slice(1);\\n            break;\\n        default:\\n            if (s_t3 == 'kw' || s_t3 == 'kg') {\\n                s_t3 = 'lib';\\n            }\\n            tabs = ['lib', 'paid', 'free', 'lyric', 'mv'];\\n            break;\\n    }\\n} else { // 搜索歌单\\n    switch (s_platform) {\\n        case '5s':\\n        case 'my':\\n        case 'qt':\\n            tabs = ['lib'];\\n            s_t3 = getMyVar('s_t3', 'lib');\\n            break;\\n        default:\\n            tabs = ['songs', 'album', 'artist'];\\n            s_t3 = getMyVar('s_t3', 'songs');\\n            break;\\n    }\\n}\\n\\n\\nif (isP) {\\n    if (isU) {\\n        let s_t2_1, regs = [\\n            [\\\"qq\\\", /y\\\\.qq\\\\.com|(music|wx\\\\.y)\\\\.gtimg\\\\.cn/i, /.*(\\\\/details\\\\/.*id=|\\\\/playlist\\\\/|playlist_v2.*?[\\\\?&]id=)(\\\\d+)/i, /[\\\\/\\\\?\\\\&]song(Detail\\\\/|mid\\\\=|\\\\/)([a-z0-9]+)/i],\\n            [\\\"wy\\\", /music\\\\.163\\\\.com|163cn\\\\.tv/i, /\\\\/(playlist|d?j?radio)(\\\\/|.*?[\\\\?\\\\&]id=)(\\\\d+)/i, /(song|program)(.*?[\\\\?\\\\&]id=|\\\\/)(\\\\d+)/i],\\n            [\\\"kw\\\", /kuwo\\\\.cn/i, /(\\\\/playlist(_detail)?\\\\/|[\\\\?\\\\&]pid=)(\\\\d+)/i, /(\\\\/yinyue\\\\/|\\\\/play_detail\\\\/|[\\\\?\\\\&][mr]?id=(MUSIC_)?)(\\\\d+)/i],\\n            [\\\"mg\\\", /migu\\\\.cn/i, /\\\\/playlist\\\\/(.*id=)?(\\\\d+)/i, /\\\\/song\\\\/(.*id=)?([a-z0-9]+)/i],\\n            [\\\"5s\\\", /5sing\\\\./i, /.*(songlist.*id=)([a-z0-9]+)/i, /.*(\\\\?song.*?=|\\\\/)([a-z0-9]+)(\\\\&song.*?=|\\\\/|\\\\-)([a-z0-9]+)/i],\\n            [\\\"kg\\\", /kugou\\\\./i, /(\\\\/special\\\\/single\\\\/|share_type=special&id=|global_specialid=|\\\\/songlist\\\\/|global_collection_id=|^[^(\\\\/share)]+[&\\\\?]id=)([^\\\\.\\\\&\\\\/\\\\?]+)/i, /(hash=)([a-z0-9]+)/i],\\n        ];\\n        try {\\n            s_t2_1 = !/antiserver.kuwo.cn/i.test(s_t2) && JSON.parse(fetch(s_t2, {\\n                redirect: false,\\n                onlyHeaders: true,\\n                timeout: 5000\\n            })).headers.location || \\\"\\\";\\n            s_t2 = s_t2_1[0].split(\\\"/\\\").length > 4 ? s_t2_1[0] : s_t2;\\n        } catch (noFetch) {};\\n        s_t2_1 = false;\\n        for (let mat of regs) {\\n            let reg1, reg2, reg3;\\n            [platform, reg1, reg2, reg3] = mat;\\n            if (s_t2.match(reg1)) {\\n                s_t2_1 = true;\\n                try {\\n                    s_platform = platform;\\n                    if (reg2 && (mat = s_t2.match(reg2))) {\\n                        s_t1 = '1';\\n                        regid = mat[3] || mat[2];\\n                    } else if (reg3 && (mat = s_t2.match(reg3))) {\\n                        s_t1 = '0';\\n                        if (platform == '5s') {\\n                            regid = mat[2];\\n                            if (regid.match(/\\\\D/))\\n                                regid = mat[4] + '#' + regid;\\n                            else\\n                                regid += '#' + mat[4];\\n                        } else {\\n                            regid = mat[3] || mat[2];\\n                        }\\n                    }\\n                } catch (err) {}\\n                break;\\n            }\\n        }\\n\\n        if (s_t2_1 && (!regid || (regid.match(/gcid_/) && !regid.match(/collection_/)))) { // 正则未匹配\\n            try {\\n                [s_platform, s_t1, regid] = JSON.parse(executeWebRule(s_t2, $.toString((regs, platform, s_t1) => {\\n                    let isReg = (reg, i) => {\\n                        try {\\n                            return window.location.href.match(reg)[i];\\n                        } catch (matErr) {\\n                            return false;\\n                        }\\n                    }\\n                    try {\\n                        Run = [\\\"qq\\\", \\\"0\\\", window.__ssrFirstPageData__.songList[0].mid];\\n                    } catch (err0) {\\n                        try {\\n                            Run = [\\\"qq\\\", \\\"1\\\", firstPageData.taogeData.id];\\n                        } catch (err1) {\\n                            try {\\n                                try {\\n                                    phpParam = dataFromSmarty[0];\\n                                } catch (isKgpe) {}\\n                                specialid = phpParam.specialid || phpParam.global_collection_id;\\n                                if (specialid) {\\n                                    Run = [\\\"kg\\\", \\\"1\\\", specialid];\\n                                } else {\\n                                    Run = [\\\"kg\\\", \\\"0\\\", phpParam.hash];\\n                                }\\n                            } catch (err2) {\\n                                try { // 好像是这样拼的(大概\\n                                    if ((listid = isReg(/listid=(\\\\d+)/i, 1)) && (uid = isReg(/uid=(\\\\d+)/i, 1))) {\\n                                        Run = [\\\"kg\\\", \\\"1\\\", \\\"collection_3_\\\" + uid + \\\"_\\\" + listid + \\\"_0\\\"];\\n                                    } else {\\n                                        phpParam = (window.$output ? window.$output.info : nData).listinfo;\\n                                        Run = [\\\"kg\\\", \\\"1\\\", phpParam.specialid || phpParam.global_collection_id];\\n                                    }\\n                                } catch (err3) {\\n                                    Run = [platform, s_t1, \\\"\\\"];\\n                                }\\n                            }\\n                        }\\n                    }\\n                    return JSON.stringify(Run);\\n                }, regs, platform, s_t1), {\\n                    blockRules: ['.js', '.css', '.jpg', '.png', '.gif', '.svg', '.ico'],\\n                    timeout: 8000\\n                }));\\n            } catch (webErr) {}\\n        }\\n\\n        if (s_platform == \\\"wy\\\" && s_t2.match(/d?j?radio|program/))\\n            s_t4 = \\\"4\\\";\\n        s_t2 = String(regid || \\\"\\\");\\n    } else if (s_t2.trim()) {\\n        // 搜索内容是纯数字，看看是不是酷狗码\\n        let kucode = Number(s_t2);\\n        if (kucode) {\\n            kucode = JSON.parse(fetch('http://t.kugou.com/command/', {\\n                method: 'POST',\\n                headers: {\\n                    'KG-RC': '1',\\n                    'KG-THash': 'network_super_call.cpp:3676261689:379',\\n                    'User-Agent': '',\\n                },\\n                body: {\\n                    appid: 1001,\\n                    clientver: 9020,\\n                    mid: '21511157a05844bd085308bc76ef3343',\\n                    clienttime: 640612895,\\n                    key: '36164c4015e704673c588ee202b9ecb8',\\n                    data: kucode\\n                },\\n            }));\\n            // 是酷狗码\\n            if (kucode.status == 1) {\\n                kucode = kucode.data;\\n                s_platform = \\\"kg\\\";\\n                s_t3 = \\\"url\\\";\\n                isU = true;\\n                let kuinfo = kucode.info;\\n\\n                // type 1单曲，2歌单，3电台，4酷狗码，5别人的播放队列\\n                if (kuinfo.type == 1) {\\n                    s_t1 = regid = \\\"0\\\";\\n                    s_t2 = kucode.list.hash;\\n                } else {\\n                    if (kuinfo.global_collection_id || (kuinfo.userid && kuinfo.id)) {\\n                        s_t1 = \\\"1\\\";\\n                        s_t2 = kuinfo.global_collection_id || (\\\"collection_3_\\\" + kuinfo.userid + \\\"_\\\" + kuinfo.id + \\\"_0\\\");\\n                    } else {\\n                        s_t1 = \\\"2\\\";\\n                        s_t2 = JSON.stringify({\\n                            id: kuinfo.id,\\n                            type: 3,\\n                            userid: kuinfo.userid,\\n                            collect_type: kuinfo.collect_type,\\n                            page: 1,\\n                            pagesize: kuinfo.count,\\n                        });\\n                    }\\n                }\\n                regid = kucode && s_t2;\\n            } else { // 不是酷狗码\\n                kucode = 0;\\n            }\\n        }\\n        if (!kucode) {\\n            let ii = history.indexOf(s_t2);\\n            if (ii > -1) {\\n                history.splice(ii, 1);\\n            }\\n            if (history.length > 20) {\\n                history.splice(history.length - 1, 1);\\n            }\\n            history.unshift(s_t2);\\n            storage0.setItem(\\\"searchHistory\\\", history);\\n        }\\n    }\\n    if (s_platform == \\\"wy\\\") tabs.push(\\\"boke\\\");\\n\\n    d = [{\\n        col_type: 'pic_1_full',\\n        title: '0',\\n        img: $.require('image?rule=歌词适配')(\\\"top\\\"),\\n        url: $('#noLoading#').lazyRule((_) => {\\n            if (_.back)\\n                return back(true), 'hiker://empty';\\n            else\\n                return \\\"hiker://page/collection#noHistory##noRecordHistory##noRefresh##gameTheme#?rule=歌词适配\\\";\\n        }, MY_PARAMS),\\n        extra: {\\n            pageTitle: \\\"TGX收藏\\\",\\n            back: 1\\n        }\\n    }, {\\n        title: Strong(\\\"搜索\\\" + (s_t1 === '0' ? \\\"单曲\\\" : \\\"歌单\\\")),\\n        url: $('#noLoading#').lazyRule((s_t1) => {\\n            putMyVar('s_t1', s_t1);\\n            clearMyVar('s_t3');\\n            refreshPage();\\n            clearMyVar('search_page');\\n            return 'hiker://empty';\\n        }, s_t1 === '0' ? '1' : '0'),\\n        col_type: \\\"icon_small_3\\\",\\n        img: \\\"hiker://images/icon_xiutan\\\"\\n    }, {\\n        title: Strong(\\\"我的收藏\\\"),\\n        url: \\\"hiker://collection?rule=歌词适配\\\",\\n        col_type: \\\"icon_small_3\\\",\\n        img: \\\"hiker://images/icon_download\\\"\\n    }, {\\n        title: Strong(\\\"历史记录\\\"),\\n        url: \\\"hiker://history?rule=歌词适配\\\",\\n        col_type: \\\"icon_small_3\\\",\\n        img: \\\"hiker://images/icon_his\\\"\\n    }];\\n    d.push({\\n        title: '🔍',\\n        desc: '搜索关键词 / 平台链接',\\n        url: $.toString((s_platform) => {\\n            s_t2 = input.trim();\\n            if (s_t2 != \\\"\\\") {\\n                putMyVar('s_t2', s_t2);\\n                if (s_platform == 'lib')\\n                    putMyVar('s_platform', getItem('s_platform', 'kw'));\\n                clearMyVar('search_page');\\n                refreshPage(false);\\n            }\\n            return 'hiker://empty';\\n        }, s_platform),\\n        col_type: \\\"input\\\",\\n        extra: {\\n            id: id + \\\":search\\\",\\n            defaultValue: getMyVar(\\\"s_t2\\\"),\\n            onChange: \\\"putMyVar('s_t2',input)\\\",\\n            /* 不好用\\n            $.toString((id) => {\\n                            input = String(input).trim();\\n                            if (getMyVar(\\\"s_t2\\\") != input) {\\n                                putMyVar('s_t2', input);\\n                                deleteItemByCls(id + ':cmd:key');\\n                                if (input && input != \\\"\\\" && !/https?:\\\\/\\\\//.test(input)) {\\n                                    u = \\\"http://msearchcdn.kugou.com/new/app/i/search.php?cmd=302&keyword=\\\" + input;\\n                                    d = JSON.parse(fetch(u)).data\\n                                        .map(_ => {\\n                                            return {\\n                                                title: _.keyword,\\n                                                col_type: 'scroll_button',\\n                                                url: $(\\\"#noLoading#\\\").lazyRule((id, key) => {\\n                                                    let extra = findItem(id+\\\":search\\\").extra;\\n                                                    extra.defaultValue = key;\\n                                                    updateItem({\\n                                                        extra: extra\\n                                                    });\\n                                                    return \\\"hiker://empty\\\";\\n                                                }, id, _.keyword),\\n                                                extra: {\\n                                                    cls: id + ':cmd:key'\\n                                                }\\n                                            }\\n                                        });\\n                                    addItemAfter(id + ':search', d);\\n                                }\\n                            }\\n                        }, id)\\n          */\\n        }\\n    });\\n    d.push({\\n        col_type: 'blank_block'\\n    });\\n    platforms.map(platform => {\\n        if (s_platform == platform)\\n            platform = Rich(Strong(Color(platform)));\\n        d.push({\\n            title: platform,\\n            url: $('#noLoading#').lazyRule((platform) => {\\n                if (!platform.match(/^‘‘’’/)) {\\n                    clearMyVar('search_page');\\n                    putMyVar('s_platform', platform);\\n                    clearMyVar('s_t3');\\n                    clearMyVar('s_t4');\\n                    refreshPage(false);\\n                }\\n                return 'hiker://empty';\\n            }, platform),\\n            col_type: 'scroll_button'\\n        });\\n    });\\n    d.push({\\n        col_type: 'blank_block'\\n    });\\n    if (s_t1 == '0' && s_platform == 'my') {\\n        d.push({\\n            title: Rich(Strong(Color(s_t4 ? '新' : '旧', '#3399cc'))),\\n            url: $('#noLoading#').lazyRule((s_t4) => {\\n                clearMyVar('search_page');\\n                putMyVar('s_t4', s_t4);\\n                refreshPage(false);\\n                return 'hiker://empty';\\n            }, s_t4 ? '0' : '1'),\\n            col_type: 'scroll_button'\\n        });\\n    }\\n    tabs.map(name => {\\n        d.push({\\n            title: s_t3 == name ? Rich(Strong(Color(name))) : name,\\n            url: $('#noLoading#').lazyRule((tid) => {\\n                clearMyVar('search_page');\\n                putMyVar('s_t3', tid);\\n                refreshPage(false);\\n                return 'hiker://empty';\\n            }, name),\\n            col_type: 'scroll_button'\\n        });\\n    });\\n    d.push({\\n        col_type: 'line_blank'\\n    }, {\\n        col_type: 'line_blank'\\n    });\\n    Loading();\\n    if (isU) {\\n        if (!regid) d.push({\\n            title: \\\"链接格式未收录\\\",\\n            url: \\\"hiker://empty\\\",\\n            col_type: \\\"text_center_1\\\",\\n        });\\n        else s_t3 = \\\"url\\\";\\n    }\\n} else d = [];\\n\\n\\n\\nif (s_platform != \\\"lib\\\" && !/^\\\\s*$/.test(s_t2)) {\\n    if (s_t2.trim() && (!isU || isP)) {\\n        if (isU)\\n            setPageTitle('高级搜索 - ' + s_platform + (s_t1 == '2' ? '酷狗码' + s_t2 : (s_t1 == '1' ? '歌单' : '单曲')));\\n        else\\n            setPageTitle('高级搜索 - ' + s_t2 + '#' + MY_PAGE);\\n        if (isP && !isU && s_t1 == '0') {\\n            is_down = getMyVar('search_down', '0') == '1'\\n            d.push({\\n                title: is_down ? '<b>📥 下载</b>' : '<b>🎵 播放</b>',\\n                img: 'http://123.56.105.145/tubiao/more/' + (is_down ? 22 : 40) + '.png',\\n                url: $(\\\"#noLoading#\\\").lazyRule((id) => {\\n                    let is_down = getMyVar('search_down', '0') == '1';\\n                    let title, img = 'http://123.56.105.145/tubiao/more/';\\n                    if (is_down) {\\n                        title = '<b>🎵 播放</b>';\\n                        img += '40';\\n                    } else {\\n                        title = '<b>📥 下载</b>';\\n                        img += '22';\\n                    }\\n                    img += '.png';\\n                    putMyVar('search_down', is_down ? '0' : '1');\\n                    updateItem(id + ':yiyan', {\\n                        title,\\n                        img\\n                    });\\n                    let list = findItemsByCls(id + ':addlist') || [];\\n                    for (let it of list) {\\n                        let extra_url = it.url;\\n                        let url = it.extra.url;\\n                        it.extra.url = extra_url;\\n                        updateItem(it.extra.id, {\\n                            extra: it.extra,\\n                            url\\n                        });\\n                    }\\n                    return \\\"hiker://empty\\\";\\n                }, id),\\n                col_type: \\\"text_icon\\\",\\n                extra: {\\n                    id: id + ':yiyan'\\n                }\\n            });\\n        } else if (isP) {\\n            // is_down = fetch('https://v1.hitokoto.cn/?encode=text');\\n            is_down = fetch('https://tenapi.cn/v2/yiyan', {\\n                timeout: 3000\\n            });\\n            d.push({\\n                title: '<b>📚 ' + is_down + '</b>',\\n                img: 'hiker://images/icon4',\\n                url: $(\\\"#noLoading#\\\").lazyRule((id) => {\\n                    let is_down = fetch('https://tenapi.cn/v2/yiyan', {\\n                        timeout: 3000\\n                    });\\n                    updateItem(id, {\\n                        title: '<b>📚 ' + is_down + '</b>',\\n                        extra: {\\n                            id: id,\\n                            longClick: [{\\n                                title: \\\"复制: \\\" + is_down,\\n                                js: $.toString((t) => {\\n                                    return \\\"copy://\\\" + t\\n                                }, is_down)\\n                            }]\\n                        }\\n                    });\\n                    return \\\"hiker://empty\\\";\\n                }, id + \\\":search_down\\\"),\\n                col_type: \\\"text_icon\\\",\\n                extra: {\\n                    id: id + \\\":search_down\\\",\\n                    longClick: [{\\n                        title: \\\"复制: \\\" + is_down,\\n                        js: $.toString((t) => {\\n                            return \\\"copy://\\\" + t\\n                        }, is_down)\\n                    }]\\n                }\\n            });\\n        }\\n        if (isP || getMyVar('search_page', '0') == '0' || s_platform.match(/my|qt/)) {\\n            let pageSize = s_platform == \\\"5s\\\" ? (s_t1 == '0' ? 10 : 15) : 30;\\n            let total = $.require(s_platform + \\\"?rule=歌词适配\\\").search(s_t1, s_t2, s_t3, s_t4);\\n            if (total < MY_PAGE * pageSize) {\\n                putMyVar('search_page', '1');\\n                d.push({\\n                    title: \\\"““””\\\" + '我是有底线的'.fontcolor('Gray').small(),\\n                    url: 'hiker://empty',\\n                    col_type: 'text_center_1',\\n                    extra: {\\n                        lineVisible: false\\n                    }\\n                });\\n            } else {\\n                clearMyVar('search_page');\\n            }\\n        }\\n    }\\n} else if (isP && !isU) {\\n    setPageTitle('高级搜索');\\n    d.push({\\n        title: '<span style=\\\"color:#ff6601\\\"><b>历史搜索</b></span>',\\n        pic_url: \\\"hiker://images/icon_find\\\",\\n        col_type: \\\"avatar\\\",\\n        url: $(\\\"确定清除全部搜索记录？\\\").confirm((id) => {\\n            clearItem(\\\"searchHistory\\\");\\n            deleteItemByCls(id + \\\":key\\\");\\n            addItemAfter(id + \\\":searchHistory\\\", {\\n                col_type: \\\"text_center_1\\\",\\n                url: \\\"hiker://empty\\\",\\n                title: \\\"““””\\\" + \\\"~~~什么都没有哦~~~\\\".fontcolor(\\\"Gray\\\"),\\n                extra: {\\n                    cls: id + \\\":key\\\",\\n                    lineVisible: false\\n                }\\n            });\\n        }, id),\\n        extra: {\\n            id: id + \\\":searchHistory\\\",\\n        }\\n    });\\n    if (history.length === 0) d.push({\\n        col_type: \\\"text_center_1\\\",\\n        url: \\\"hiker://empty\\\",\\n        title: \\\"““””\\\" + \\\"~~~什么都没有哦~~~\\\".fontcolor(\\\"Gray\\\"),\\n        extra: {\\n            cls: id + \\\":key\\\",\\n            lineVisible: false\\n        }\\n    });\\n    else history.map((key, i) => {\\n        d.push({\\n            title: key,\\n            url: $(\\\"#noLoading#\\\").lazyRule((s_platform, key) => {\\n                if (true) {\\n                    if (s_platform == 'lib') putMyVar('s_platform', getItem('s_platform', 'kw'));\\n                    clearMyVar('search_page');\\n                    putMyVar('s_t2', key);\\n                    // clearMyVar('s_t3');\\n                    refreshPage(false);\\n                } else {\\n                    let extra = findItem(\\\"gcsp1999:search\\\").extra;\\n                    extra.defaultValue = key;\\n                    updateItem({\\n                        extra: extra\\n                    });\\n                }\\n                return \\\"hiker://empty\\\";\\n            }, s_platform, key),\\n            col_type: \\\"flex_button\\\",\\n            extra: {\\n                id: id + \\\":key:\\\" + key,\\n                cls: id + \\\":key\\\",\\n                longClick: [{\\n                    title: \\\"删除关键词:\\\" + key,\\n                    js: $.toString((id, key) => {\\n                        let history = storage0.getItem(\\\"searchHistory\\\", []);\\n                        let ii = history.indexOf(key);\\n                        history.splice(ii, 1);\\n                        storage0.setItem(\\\"searchHistory\\\", history);\\n                        deleteItem(id + \\\":key:\\\" + key);\\n                        if (history.length === 0) addItemAfter(id + \\\":searchHistory\\\", {\\n                            col_type: \\\"text_center_1\\\",\\n                            url: \\\"hiker://empty\\\",\\n                            title: \\\"““””\\\" + \\\"~~~什么都没有哦~~~\\\".fontcolor(\\\"Gray\\\"),\\n                            extra: {\\n                                cls: id + \\\":key\\\",\\n                                lineVisible: false\\n                            }\\n                        });\\n                    }, id, key)\\n                }]\\n            }\\n        });\\n    });\\n    Resou = (id, s_platform, platform, resou) => {\\n        let D = [];\\n        resou.map(name => {\\n            D.push({\\n                title: name,\\n                url: $('#noLoading#').lazyRule((s_platform, platform, keyword) => {\\n                    if (s_platform == 'lib') putMyVar('s_platform', platform);\\n                    clearMyVar('search_page');\\n                    putMyVar('s_t1', '0');\\n                    putMyVar('s_t2', keyword);\\n                    // clearMyVar('s_t3');\\n                    refreshPage(false);\\n                    return \\\"hiker://empty\\\";\\n                }, s_platform, platform, name),\\n                col_type: 'flex_button',\\n                extra: {\\n                    cls: id + ':resou:key'\\n                }\\n            });\\n        });\\n        return D;\\n    };\\n    d.push({\\n        col_type: 'line_blank'\\n    }, {\\n        title: '<span style=\\\"color:#ff6601\\\"><b>大家都在搜</b></span>',\\n        url: $('#noLoading#').lazyRule((id, s_platform, platform, Resou) => {\\n            deleteItemByCls(id + ':resou:key');\\n            let srec;\\n            if (platform != 'kg') {\\n                srec = [];\\n                JSON.parse(fetch(\\\"http://searchrec.kuwo.cn/srec.s?searchrecapi=0&id=0\\\")).abslist.map(ablist => {\\n                    ablist.map(_ => {\\n                        srec.push(_.word)\\n                    })\\n                })\\n            } else {\\n                MY_PAGE = 1;\\n                srec = $.require(\\\"kg?rule=歌词适配\\\").search(\\\"0\\\", \\\"\\\", \\\"lib\\\", \\\"srec\\\").map(_ => _.OriSongName);\\n            }\\n            addItemAfter(id + ':resou', Resou(id, s_platform, platform, srec));\\n            return \\\"hiker://empty\\\";\\n        }, id, s_platform, s_t3, Resou),\\n        col_type: \\\"avatar\\\",\\n        pic_url: \\\"hiker://images/rule_type_comics\\\",\\n        extra: {\\n            id: id + \\\":resou\\\"\\n        }\\n    });\\n    let srec = storage0.getMyVar(s_t3 + \\\"_srec\\\");\\n    if (srec == \\\"\\\") {\\n        if (s_t3 != \\\"kg\\\") {\\n            srec = fetch('http://hotword.kuwo.cn/hotword.s?encoding=utf8&tabid=1').split(/\\\\n/).map(text => text.trim().replace(/^TEXT=|(\\\\s+\\\\d+){2}$/gi, ''));\\n            JSON.parse(fetch('http://searchrecterm.kuwo.cn/recterm.s?encoding=utf8&version=1')).content.map(_ => srec.push(_.query_word));\\n        } else {\\n            srec = [];\\n            srec_t = fetch(\\\"http://gateway.kugou.com/api/v3/search/hot_tab?signature=ee44edb9d7155821412d220bcaf509dd&appid=1005&clientver=10026&plat=0\\\", {\\n                \\\"headers\\\": {\\n                    \\\"dfid\\\": \\\"-\\\",\\n                    \\\"mid\\\": R(32, \\\"1234567890\\\"),\\n                    \\\"clienttime\\\": new Date().getTime() + \\\"\\\",\\n                    \\\"x-router\\\": \\\"msearch.kugou.com\\\"\\n                }\\n            });\\n\\n            JSON.parse(srec_t).data.list.map(_ => {\\n                r = _.name == \\\"综艺热搜\\\";\\n                _.keywords.map(_ => {\\n                    srec.push(r ? _.keyword.split(\\\" \\\")[0] : _.keyword);\\n                });\\n            });\\n\\n        }\\n        srec = srec.filter((a, b, c) => c.indexOf(a) === b && a.trim() !== \\\"\\\");\\n        storage0.putMyVar(s_t3 + \\\"_srec\\\", srec);\\n    }\\n    d = d.concat(Resou(id, s_platform, s_t3, srec));\\n}\\n\\nMY_PAGE == 1 ? setPreResult(d) : setResult(d);\\ndeleteItemByCls('loading_gif');\"},{\"col_type\":\"movie_3\",\"name\":\"❷wy\",\"path\":\"wy\",\"rule\":\"eval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配')).rule);\\nconst this_platform = \\\"wy\\\";\\nconst this_host = \\\"https://interface.music.163.com/\\\";\\nconst headers = {\\n    \\\"Secret\\\": \\\"5pa55qC86Z+z5LmQ54mb6YC8\\\",\\n    \\\"User-Agent\\\": \\\"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.0.0 Safari/537.36\\\",\\n    \\\"Cookie\\\": \\\"os=pc; appver=9.0.25; MUSIC_U=0034B44F9926BE9F1DD236BFB146E0FEB27696AD0802E2DD8D8062B036AD87CEEEB49D3141C00C103A8B110C944E6DFA2909843C098EB2515B513BC1AA0A7974866D653BEA27F81BF15700FB398CB95ABE260EDA0E71900A46296E8E9C069B6C6A3509D1FDE9F41DCEF55B07BEE0990EE13F8A461098536FF86896E76892551CC5B8C6C2063E605639146CEF24D2904725876F53C57B442653EA13ACFE9F2653B512A23BABE01680F2E953AF4BE1602B38B39B38B1D6D5C50E1F84AAF323D841A717DECDF9E0834EF1703C1D4A37DE7DB3AC49FA2A2C397B3418C34FAF191ED064E4F266D94A281B0C08947F339929EE1896350C37FE1E007D32BE2E0C1970DD2161A0D87F4A95CEA5B111289EC1064555149DBEEFBF73A1397D5B24EB5B429D81C8CBDB2A7DF61BECFAB3DBA3BD165167\\\"\\n}\\n\\n\\nfunction _formatting(_, r2) {\\n    let name = _.name || _.songname;\\n    let singer = _.ar && _.ar.map(_ => _.name).join('&') || \\\"\\\";\\n    let interval = Hms(_.dt);\\n    let songId = _.id;\\n    let albumName = _.al && _.al.name;\\n    let albumId = (_.al && _.al.id) || \\\"\\\";\\n    let picUrl = (_.al && _.al.picUrl) || \\\"\\\";\\n    let qualitys = [];\\n    for (let k of ['l', 'h', 'sq', 'hr']) {\\n        if (_[k] || (k == 'l' && _[k = 'm'])) {\\n            qualitys.push({\\n                type: {\\n                    'm': \\\"128k\\\",\\n                    'l': \\\"128k\\\", //192k\\n                    'h': \\\"320k\\\",\\n                    'sq': \\\"flac\\\",\\n                    'hr': \\\"flac24bit\\\"\\n                }[k],\\n                size: Size(_[k].size)\\n            });\\n        }\\n    }\\n\\n    let content = ((_.fee == 0 || _.fee == 8) && (_.privilege ? (_.privilege.st > -1) : 1)) ? 0 : 1;\\n    Extra({\\n        name,\\n        singer,\\n        interval,\\n        songId,\\n        albumName,\\n        albumId,\\n        picUrl,\\n        qualitys,\\n        content,\\n    }, ((typeof r2 === 'object') ? Object.assign(r2, {\\n        songName: name,\\n        userName: singer,\\n        songTime: interval,\\n        albumName: albumName || name\\n    }) : r2));\\n}\\n\\n\\n//  web - weapi\\nfunction ajax2(path, json, head) {\\n    let CryptoUtil = $.require(\\\"hiker://assets/crypto-java.js\\\");\\n    let str_key = CryptoUtil.Data.parseUTF8(\\\"0CoJUm6Qyw8W8jud\\\");\\n    let str_iv = CryptoUtil.Data.parseUTF8(\\\"0102030405060708\\\");\\n    let aes = word => CryptoUtil.AES.encrypt(word, str_key, {\\n        mode: \\\"AES/CBC/PKCS7Padding\\\",\\n        iv: str_iv\\n    }).toBase64(_base64.NO_WRAP);\\n    let params = aes(aes(JSON.stringify(json)));\\n    return JSON.parse(postPC(path.replace(/^(\\\\/api)?\\\\//i, this_host + \\\"weapi/\\\"), {\\n        body: {\\n            params: params,\\n            encSecKey: \\\"bf50d0bcf56833b06d8d1219496a452a1d860fd58a14c0aafba3e770104ca77dc6856cb310ed3309039e6865081be4ddc2df52663373b20b70ac25b4d0c6ca466daef6b50174e93536e2d580c49e70649ad1936584899e85722eb83ceddfb4f56c1172fca5e60592d0e6ee3e8e02be1fe6e53f285b0389162d8e6ddc553857cd\\\"\\n        },\\n        headers: Object.assign(headers, head || {})\\n    }));\\n}\\n\\n\\n//  app - eapi\\nfunction ajax3(path, json, head) {\\n    let CryptoUtil = $.require(\\\"hiker://assets/crypto-java.js\\\");\\n    let params = [path, JSON.stringify(json || {})];\\n    params.push(md5(\\n        \\\"nobody\\\" +\\n        params.join(\\\"use\\\") +\\n        \\\"md5forencrypt\\\"\\n    ));\\n    return JSON.parse(postPC(path.replace(\\\"/\\\", this_host + \\\"e\\\"), {\\n        body: {\\n            params: CryptoUtil.AES.encrypt(\\n                params.join(\\\"-36cd479b6b5-\\\"),\\n                CryptoUtil.Data.parseUTF8(\\\"e82ckenh8dichen8\\\"), {\\n                    mode: \\\"AES/ECB/PKCS7Padding\\\",\\n                }\\n            ).toHex()\\n        },\\n        headers: Object.assign(headers, head || {})\\n    }));\\n}\\n$.exports = {\\n    _formatting,\\n    iTag: function(run) {\\n        iTag[\\\"推荐\\\"] = {};\\n        iTag[\\\"推荐\\\"][\\\"随机\\\"] = \\\"personalized?\\\";\\n        iTag[\\\"推荐\\\"][\\\"推荐\\\"] = \\\"_SPECIAL_CLOUD_VILLAGE_PLAYLIST\\\";\\n        iTag[\\\"推荐\\\"][\\\"官方\\\"] = \\\"官方\\\";\\n        iTag[\\\"推荐\\\"][\\\"雷达\\\"] = \\\"_RADAR\\\";\\n        iTag[\\\"推荐\\\"][\\\"新热\\\"] = \\\"_NEW_SONG_AND_ALBUM\\\";\\n        iTag[\\\"推荐\\\"][\\\"原创\\\"] = \\\"_SPECIAL_ORIGIN_SONG_LOCATION\\\";\\n        iTag[\\\"推荐\\\"][\\\"心情\\\"] = \\\"_FEELING_PLAYLIST_LOCATION\\\";\\n        iTag[\\\"推荐\\\"][\\\"场景\\\"] = \\\"_SCENE_PLAYLIST_LOCATION\\\";\\n        iTag[\\\"推荐\\\"][\\\"影视\\\"] = \\\"_FIRM_PLAYLIST\\\";\\n        iTag[\\\"推荐\\\"][\\\"奖项\\\"] = \\\"_AWARDS_PLAYLIST\\\";\\n        iTag[\\\"推荐\\\"][\\\"专属\\\"] = \\\"_COMBINATION\\\";\\n        iTag[\\\"推荐\\\"][\\\"全部\\\"] = \\\"全部歌单\\\";\\n        let Arr = [\\\"语种\\\", \\\"风格\\\", \\\"场景\\\", \\\"情感\\\", \\\"主题\\\"];\\n        for (let key of Arr) iTag[key] = {};\\n        // #代理接口已失效#  Sub = ajax(\\\"playlist/catlist\\\").sub;\\n        //  Sub = ajax2(\\\"/api/playlist/catalogue\\\", {}).sub;\\n        let Sub = ajax3(\\\"/api/playlist/catalogue/v1\\\", {}).sub;\\n        Sub.map(_ =>\\n            iTag[Arr[_.category]][_.name] = _.name\\n        );\\n\\n\\n        iTag[\\\"播客\\\"] = {};\\n        iTag[\\\"播客\\\"][\\\"精选播客\\\"] = \\\"_PODCAST_MUSIC_RADIO\\\";\\n        let Bok = ajax3(\\\"/api/podcast/ranklist/square/ranklist/get/v2\\\", {\\n            \\\"ranklistSquareId\\\": \\\"1\\\"\\n        }).data;\\n        Bok.map(_ => {\\n            iTag[\\\"播客\\\"][_.name] = (_.resourceId || _.chartType) + \\\"#b#\\\" + (_.resourceId && \\\"/category\\\" || \\\"\\\");\\n        });\\n        iTag[\\\"播客\\\"][\\\"热门节目\\\"] = \\\"_PODCAST_RADIO_PROGRAM\\\";\\n        iTag[\\\"播客\\\"][\\\"电音风暴\\\"] = \\\"_PODCAST_ALBUM_COVER\\\";\\n\\n\\n        iTag[\\\"排行\\\"] = {};\\n        /* #代理接口已失效#\\n                iTag[\\\"排行\\\"][\\\"全部\\\"] = ajax(\\\"toplist?\\\").list.map(_ => Extra({\\n                    title: _.name,\\n                    img: _.coverImgUrl,\\n                    content: 3,\\n                    zyid: _.id\\n                }, 1, 1));\\n        */\\n        let Top = ajax3(\\\"/api/toplist/detail/v2\\\").data;\\n        Top.map(_ => {\\n            if (_.list && _.list.length) {\\n                let name = _.name.replace(/榜单?/, \\\"\\\");\\n                iTag[\\\"排行\\\"][name] = [];\\n                _.list.map(_ => {\\n                    if (_.id != 0) {\\n                        iTag[\\\"排行\\\"][name].push(Extra({\\n                            name: _.name,\\n                            picUrl: _.coverUrl,\\n                            content: 3,\\n                            sourceListId: _.id\\n                        }, 1, 1));\\n                    }\\n                });\\n            }\\n        });\\n        if (run) return true;\\n        storage0.putMyVar(\\\"wy_iTag\\\", iTag);\\n    },\\n    mv: function(_, t1) {\\n        // search(0, t1, \\\"url\\\", \\\"mv\\\").mv + \\\"\\\";\\n        let mvhash = ajax2(\\\"/api/v3/song/detail\\\", {\\n            c: `[{\\\"id\\\":\\\"${t1}\\\"}]`\\n        }).songs[0].mv;\\n        let names = [];\\n        let urls = [];\\n        if (mvhash) {\\n            let mvinfo = ajax3(\\\"/api/mv/detail\\\", {\\n                \\\"id\\\": mvhash + \\\"\\\"\\n            }).data.brs;\\n            [\\n                ['1080', '【蓝光】 '],\\n                ['720', '【超清】 '],\\n                ['480', '【高清】 '],\\n                ['240', '【标清】 '],\\n            ].map([path, name] => {\\n                if (mvinfo[path]) {\\n                    names.push(name + path + 'P');\\n                    urls.push(mvinfo[path]);\\n                }\\n            });\\n        }\\n        return [names, urls];\\n\\n    },\\n    getLyric: function(_, t1) {\\n        let lrc;\\n        try {\\n            lrc = ajax2(\\\"/api/song/lyric\\\", {\\n                id: t1,\\n                lv: -1,\\n                kv: -1,\\n                tv: -1\\n            }).lrc.lyric;\\n        } catch (err_1) {\\n            try {\\n                lrc = ajax3(\\\"/api/song/lyric/v1\\\", {\\n                    \\\"id\\\": t1,\\n                    \\\"cp\\\": \\\"false\\\",\\n                    \\\"lv\\\": \\\"0\\\",\\n                    \\\"tv\\\": \\\"0\\\",\\n                    \\\"kv\\\": \\\"0\\\",\\n                    \\\"rv\\\": \\\"0\\\",\\n                    \\\"yv\\\": \\\"0\\\",\\n                    \\\"ytv\\\": \\\"0\\\",\\n                    \\\"yrv\\\": \\\"0\\\"\\n                }).lrc.lyric;\\n            } catch (err_2) {}\\n        }\\n        return lrc || \\\"\\\";\\n    },\\n    lazy: function(platform, t1, t2, t3) {\\n        let title, author, desc, img, time, tags, total, list;\\n        let _ = t1;\\n        t1 = _.songId || _.sourceListId;\\n        switch (String(platform)) {\\n            case '0': // 详情\\n                if (t2) {\\n                    return $.require(\\\"jiexi?rule=歌词适配\\\").GetMusicUrl(\\\"down\\\", \\\"wy\\\", t1, t3, _);\\n                }\\n                let url, lrc, ii, f = _.qualitys;\\n                switch (ii = t3) {\\n                    case '3':\\n                        if (ii == 3) {\\n                            if (f[3] && f[3].type == 'flac24bit') {\\n                                [url, lrc, ii] = $.require(\\\"jiexi?rule=歌词适配\\\").GetMusicUrl(\\\"open\\\", \\\"wy\\\", t1, 3, _, lrc, ii);\\n                                if (url) break;\\n                            } else ii = 2;\\n                        }\\n                    case '2':\\n                        if (ii == 2) {\\n                            if (f[2] && f[2].type == 'flac') {\\n                                [url, lrc, ii] = $.require(\\\"jiexi?rule=歌词适配\\\").GetMusicUrl(\\\"open\\\", \\\"wy\\\", t1, 2, _, lrc, ii);\\n                                if (url) break;\\n                            } else ii = 1;\\n                        }\\n                    default:\\n                        let iii = ii > 0 ? 1 : 0;\\n                        do {\\n                            if (_.content === '0') { // 免费歌曲\\n                                url = ajax3(\\\"/api/song/enhance/player/url/v1\\\", {\\n                                    ids: `[\\\"${t1}\\\"]`,\\n                                    level: iii > 0 ? \\\"exhigh\\\" : \\\"standard\\\",\\n                                    trialMode: \\\"23\\\", // 试听\\n                                    immerseType: \\\"c51\\\",\\n                                    encodeType: \\\"flac\\\",\\n                                }).data;\\n                                if (url && url[0]) { //  320k / 128k\\n                                    if (url[0].url)\\n                                        url = url[0].url.split(\\\"?\\\")[0];\\n                                    else if (url[0].code == 404)\\n                                        url = \\\"toast://无版权歌曲，无法解析\\\";\\n                                    else\\n                                        url = false;\\n                                }\\n                                if (!url && !iii) { //  128k\\n                                    url = `http://music.163.com/song/media/outer/url?id=${t1}.mp3`;\\n                                }\\n                            }\\n                            if (!url && (((f[ii] && f[ii].type == '320k') && ii == 1) || iii == 0)) {\\n                                [url, lrc, ii] = $.require(\\\"jiexi?rule=歌词适配\\\").GetMusicUrl(\\\"open\\\", \\\"wy\\\", t1, iii, _, lrc, ii);\\n                            }\\n                            if (url) break;\\n                            iii -= 1;\\n                        } while (iii > -1);\\n                        break;\\n                }\\n                return [url, lrc, ii];\\n                break;\\n            case '1': //首页\\n                // #代理接口已失效#  _ = ajax(t1.match(\\\"?\\\") ? t1 : \\\"top/playlist?cat=\\\" + t1 + \\\"&\\\");\\n                if (t1 == \\\"personalized?\\\") {\\n                    _ = ajax3(\\\"/api/personalized/playlist\\\", {\\n                        // limit: 12\\n                    }, {\\n                        Cookie: \\\"\\\"\\n                    });\\n                } else if (/^_[A-Z]+/.test(t1)) {\\n                    _ = ajax3(\\\"/api/link/page/rcmd/resource/show\\\", {\\n                        \\\"pageCode\\\": \\\"HOME_RECOMMEND_PAGE\\\",\\n                        \\\"isFirstScreen\\\": \\\"false\\\",\\n                        \\\"cursor\\\": \\\"6\\\",\\n                        \\\"refresh\\\": \\\"true\\\",\\n                        \\\"blockCodeOrderList\\\": `[\\\"PAGE_RECOMMEND${t1}\\\"]`\\n                    }).data.blocks[0].dslData;\\n                    if (/_PODCAST/.test(t1)) { // 播客相关\\n                        _.resources = [];\\n                        if (_.djPrograms) {\\n                            _.djPrograms.map(__ => {\\n                                if (__ = __.radio) {\\n                                    __.id += \\\"#djradio\\\";\\n                                    _.resources.push(__);\\n                                }\\n                            });\\n                        } else {\\n                            (_.home_podcast_rcmd_list_ufzcn4oyj8 || _.home_podcast_rcmd_list_k8rlwn9uv1 || _).items.map(__ => {\\n                                __.items.map(__ => {\\n                                    if (__ = __.djProgram) {\\n                                        __ = __.radio;\\n                                        __.id += \\\"#djradio\\\";\\n                                        _.resources.push(__);\\n                                    }\\n                                });\\n                            });\\n                        }\\n                    } else {\\n                        _ = (_.home_page_common_playlist_module_d1r94fwj80 || _.home_page_scene_playlist_module_w5rp24j0x2 || _.home_page_scene_playlist_module_rsoa9pd6fn || _).blockResource;\\n                    }\\n                } else if (/#b#/.test(t1)) {\\n                    t1 = t1.split(\\\"#b#\\\");\\n                    _ = ajax3(\\\"/api/charts/voicelist\\\" + (t1[1] || \\\"\\\"), {\\n                        \\\"categoryId\\\": t1[0],\\n                        \\\"chartType\\\": t1[0]\\n                    });\\n                    _.resources = _.data.map(_ => {\\n                        let __ = _.voicelistMetaVO;\\n                        __.id += \\\"#djradio\\\";\\n                        return __;\\n                    });\\n                } else {\\n                    _ = ajax2(\\\"/api/playlist/list\\\", {\\n                        cat: t1 || \\\"全部\\\",\\n                        order: \\\"hot\\\",\\n                        limit: 30,\\n                        offset: (MY_PAGE - 1) * 30,\\n                        total: true,\\n                        csrf_token: \\\"\\\",\\n                    });\\n                }\\n                list = _.result || _.playlists || _.resources || [];\\n                list.map(_ => Extra({\\n                    name: _.name || _.title,\\n                    picUrl: _.coverImgUrl || _.picUrl || _.coverImg,\\n                    content: 2,\\n                    sourceListId: _.id || _.resourceId,\\n                    col_type: t2\\n                }, 1));\\n                // if (t1 == \\\"personalized?\\\") return 0;\\n                return _.total || ((MY_PAGE - 1) * 30 + list.length);\\n                break;\\n            case '2': // 发现\\n            case '3': // 排行\\n                if (MY_PAGE == 1) {\\n                    if (t1.match(\\\"#djradio\\\")) { // 是 播客 链接\\n                        _ = ajax3(\\\"/api/v4/dj/program/byradio\\\", {\\n                            \\\"page\\\": \\\"{\\\\\\\"size\\\\\\\":0}\\\",\\n                            \\\"radioId\\\": t1.replace(\\\"#djradio\\\", \\\"\\\")\\n                        }).data;\\n\\n                        let e = _.extInfo.radioData;\\n                        title = e.name;\\n                        author = e.dj && e.dj.nickname ? e.dj.nickname : \\\"网易云音乐\\\";\\n                        desc = e.desc;\\n                        img = e.picUrl;\\n                        time = $.dateFormat(e.lastProgramCreateTime, 'yyyy-MM-dd');\\n                        tags = e.category;\\n\\n                        total = _.page.size;\\n                        list = _.records.map(_ => {\\n                            let a = _.mainSong;\\n                            let it = {\\n                                id: a.id,\\n                                name: a.name || _.name,\\n                                ar: a.artists || [{\\n                                    name: _.dj.nickname\\n                                }],\\n                                al: {\\n                                    id: (_.radio && _.radio.id) || \\\"\\\",\\n                                    name: (_.radio && _.radio.name) || \\\"\\\",\\n                                    picUrl: _.coverUrl || (a.album && a.album.picUrl) || \\\"\\\"\\n                                },\\n                                dt: a.duration || _.duration,\\n                                fee: _.programFeeType,\\n                                h: a.hMusic,\\n                                l: a.lMusic,\\n                                m: a.mMusic\\n                            }\\n                            if (it.al.id) it.al.id += \\\"#djradio\\\";\\n                            return it;\\n                        });\\n                    } else {\\n                        _ = ajax3(\\\"/api/v6/playlist/detail\\\", {\\n                            n: 99999,\\n                            id: t1\\n                        }).playlist;\\n                        title = _.name;\\n                        author = _.creator && _.creator.nickname ? _.creator.nickname : \\\"网易云音乐\\\";\\n                        desc = _.description;\\n                        img = _.coverImgUrl;\\n                        time = $.dateFormat(_.updateTime, 'yyyy-MM-dd');\\n                        tags = (_.tags || []).join(\\\"、\\\");\\n\\n                        total = _.trackCount;\\n                        list = _.tracks || [];\\n                    }\\n                } else\\n                    list = [];\\n                break;\\n            case '4': // 专辑\\n                if (MY_PAGE == 1) {\\n                    _ = ajax2(\\\"/api/v1/album/\\\" + t1, {});\\n                    title = _.album.name;\\n                    author = _.album.artist.name;\\n                    desc = _.album.description;\\n                    img = _.album.picUrl;\\n                    time = $.dateFormat(_.album.publishTime, 'yyyy-MM-dd');\\n                    tags = (_.album.awardTags || []).join(\\\"、\\\");\\n\\n                    total = _.album.size;\\n                    list = _.songs || [];\\n                } else\\n                    list = [];\\n                break;\\n            case '5': // 歌手\\n                _ = ajax2(\\\"/api/v2/artist/songs\\\", {\\n                    \\\"id\\\": t1,\\n                    \\\"limit\\\": \\\"30\\\",\\n                    \\\"offset\\\": (MY_PAGE - 1) * 30,\\n                    \\\"private_cloud\\\": \\\"true\\\",\\n                    \\\"work_type\\\": \\\"5\\\",\\n                    \\\"order\\\": \\\"hot\\\"\\n                });\\n                total = _.total;\\n                list = _.songs || [];\\n                break;\\n        }\\n        if (t2) return list;\\n\\n        list.map(_ => _formatting(_, t3 || {}));\\n        return {\\n            title,\\n            author,\\n            desc,\\n            img,\\n            time,\\n            tags,\\n            total: total || ((MY_PAGE - 1) * 30 + list.length)\\n        }\\n    },\\n    search: function(platform, keyword, isU, run) {\\n        let _, getr = (_) => {\\n            let al = _.program || _;\\n            let ar = _.anchor || _.dj;\\n            let at = _.radio;\\n            _ = _.mainSong;\\n            let r = {\\n                id: _.id,\\n                name: _.name || al.name || at.name,\\n                ar: _.artists || [{\\n                    name: ar.nickname || \\\"\\\"\\n                }],\\n                al: {\\n                    id: (at.id) || \\\"\\\",\\n                    name: (at.name) || \\\"\\\",\\n                    picUrl: al.coverUrl || (_.album && _.album.picUrl) || at.picUrl || ar.avatarUrl || \\\"\\\"\\n                },\\n                fee: 0,\\n                dt: _.duration || al.duration,\\n                l: _.lMusic,\\n                m: _.mMusic,\\n                h: _.hMusic,\\n                sq: _.sqMusic,\\n                hr: _.hrMusic\\n            }\\n            if (r.al.id) r.al.id += \\\"#djradio\\\";\\n            return r;\\n        }\\n        if (isU != \\\"url\\\") {\\n            let list, __ = {\\n                lib: (_) => true,\\n                paid: (_) => ((_.fee == 0 || _.fee == 8) && (_.privilege ? (_.privilege.st > -1) : 1)) ? 0 : 1,\\n                free: (_) => ((_.fee == 0 || _.fee == 8) && (_.privilege ? (_.privilege.st > -1) : 1)) ? 1 : 0,\\n                lyric: (_) => true,\\n                mv: (_) => true,\\n                boke: (_) => true\\n            };\\n            /*\\n                        let surl = (stype) => _ = ajax2(\\\"/api/search/get\\\", {\\n                            s: keyword,\\n                            limit: 30,\\n                            offset: (MY_PAGE - 1) * 30,\\n                            type: stype,\\n                            strategy: 5,\\n                            queryCorrect: true\\n                        }).result;\\n            */\\n            let surl = (stype, v1) => {\\n                _ = ajax3(\\\"/api\\\" + v1 + \\\"/search/\\\" + (/\\\\//.test(stype) ? stype : (stype + \\\"/get\\\")), {\\n                    \\\"filterCode\\\": \\\"-1\\\",\\n                    \\\"offset\\\": ((MY_PAGE - 1) * 30) + \\\"\\\",\\n                    \\\"limit\\\": \\\"30\\\",\\n                    \\\"channel\\\": \\\"typing\\\",\\n                    \\\"keyword\\\": keyword,\\n                    \\\"scene\\\": \\\"normal\\\",\\n                    \\\"s\\\": keyword,\\n                });\\n                _ = _.data || _.result;\\n                return _;\\n            }\\n            let isB = isU == \\\"boke\\\";\\n            switch (String(platform)) {\\n                case '0': // 搜索单曲\\n                    // list = surl(1).songs;\\n                    list = surl({\\n                        lyric: \\\"resource/lyric\\\",\\n                        boke: \\\"voice\\\",\\n                        mv: \\\"mlog\\\"\\n                    }[isU] || \\\"song\\\", \\\"\\\").resources || [];\\n                    if (isU == 'mv') {\\n                        list = function() {\\n                            let c = [];\\n                            list.map(_ => {\\n                                try {\\n                                    let songId = _.baseInfo.resource.mlogExtVO.song.id;\\n                                    if (c.indexOf(songId) == -1) {\\n                                        c.push({\\n                                            id: songId\\n                                        });\\n                                    }\\n                                } catch (e) {}\\n                            });\\n                            let __ = ajax2(\\\"/api/v3/song/detail\\\", {\\n                                c: JSON.stringify(c)\\n                            });\\n                            return __.songs.map((___, i) => {\\n                                let a = ___ || __.privileges[i];\\n                                a.privilege = __.privileges[i];\\n                                return a;\\n                            });\\n                        }();\\n                    }\\n                    if (isU === 1) return list;\\n                    let r1 = getMyVar('search_down', '0') == '1' ? 2 : 1;\\n                    list.map(_ => {\\n                        _ = _.baseInfo || _.song || _;\\n                        if (isB) {\\n                            _ = getr(_);\\n                        }\\n                        if (__[isU](_)) _formatting(_, r1);\\n                    });\\n                    break;\\n                case '1': // 搜索歌单\\n                    // list = surl(1000).playlists;\\n                    isU = {\\n                        songs: {\\n                            u: \\\"playlist\\\",\\n                            c: \\\"2\\\"\\n                        },\\n                        album: {\\n                            u: \\\"album\\\",\\n                            c: \\\"4\\\",\\n                            v: 1\\n                        },\\n                        artist: {\\n                            u: \\\"artist\\\",\\n                            c: \\\"5\\\",\\n                            v: 1\\n                        },\\n                        boke: {\\n                            u: \\\"voicelist\\\",\\n                            c: \\\"2\\\"\\n                        }\\n                    }[isU];\\n                    list = surl(isU.u, isU.v ? \\\"/v1\\\" : \\\"\\\");\\n                    list = list.resources || list.albums || list.artists || [];\\n                    // if (isU === 1) return list;\\n                    list.map(_ => {\\n                        _ = _.baseInfo || _;\\n                        if (isB) {\\n                            _.id += \\\"#djradio\\\";\\n                        }\\n                        Extra({\\n                            name: _.name,\\n                            picUrl: _.coverImgUrl || _.picUrl,\\n                            content: isU.c,\\n                            sourceListId: _.id\\n                        }, 1);\\n                    });\\n                    break;\\n            }\\n            return _.songCount || _.playlistCount || _.albumCount || _.totalCount || ((MY_PAGE - 1) * 30 + list.length);\\n        } else { // 搜索 分享链接\\n            switch (String(platform)) {\\n                case '0': // 搜索单曲\\n                    let a;\\n                    if (run == 4) { // 是 播客 链接\\n                        _ = ajax2(\\\"/api/dj/program/detail/static/get\\\", {\\n                            id: keyword\\n                        }).data;\\n                        a = getr(_);\\n                    } else {\\n                        _ = ajax2(\\\"/api/v3/song/detail\\\", {\\n                            c: `[{\\\"id\\\":\\\"${keyword}\\\"}]`\\n                        });\\n                        a = _.songs[0] || _.privileges[0];\\n                        a.privilege = _.privileges[0];\\n                    }\\n                    if (run == 'mv') return a;\\n                    _formatting(a, 1);\\n                    break;\\n                case '1': // 搜索歌单\\n                    if (run == 4) // 是 播客 链接\\n                        _ = ajax3(\\\"/api/djradio/v3/get\\\", {\\n                            id: keyword\\n                        }).data, _.id += \\\"#djradio\\\";\\n                    else\\n                        _ = ajax3(\\\"/api/v6/playlist/detail\\\", {\\n                            n: 0,\\n                            id: keyword\\n                        }).playlist;;\\n                    Extra({\\n                        name: _.name,\\n                        picUrl: _.coverImgUrl || _.picUrl,\\n                        content: 2,\\n                        sourceListId: _.id\\n                    }, 1);\\n                    /* MyFreeMP3 歌单解析崩了，不显示\\n                                        Extra({\\n                                            name: _.name,\\n                                            picUrl: _.coverImgUrl,\\n                                            content: 2,\\n                                            sourceListId: \\\"d\\\" + _.id,\\n                                            source: 'my'\\n                                        }, 1);\\n                    */\\n                    break;\\n            }\\n            return 0;\\n        }\\n    },\\n    ajax: function(path) {\\n        if (!path.match(/^https?:\\\\/\\\\//)) { // 代理接口\\n            if (path == \\\"personalized?\\\") path += \\\"limit=12\\\";\\n            else if (path.match(/\\\\?/)) path += \\\"limit=30&offset=\\\" + ((MY_PAGE - 1) * 30);\\n            path = \\\"https://pl-fe.cn/cloud-music-api/\\\" + path;\\n        }\\n        return JSON.parse(fetch(path, {\\n            headers\\n        }));\\n    },\\n    ajax2,\\n    ajax3\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"❸kg\",\"path\":\"kg\",\"rule\":\"eval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配')).rule);\\nconst this_platform = \\\"kg\\\";\\n\\nfunction getParams(params, signkey, body, noSign) {\\n    if (noSign) return params.sort().join(\\\"&\\\");\\n    body = body || \\\"\\\";\\n    params = params.sort();\\n    return params.join(\\\"&\\\") + \\\"&signature=\\\" + md5(signkey + params.join(\\\"\\\") + body + signkey);\\n}\\n\\nfunction webSign(url, params, path) {\\n    let mid = new Date().getTime() + \\\"\\\";\\n    params = [\\n        \\\"dfid=-\\\",\\n        \\\"mid=\\\" + mid,\\n        \\\"uuid=\\\" + mid,\\n        \\\"appid=1058\\\",\\n        \\\"srcappid=2919\\\",\\n        \\\"clientver=1000\\\",\\n        \\\"clienttime=\\\" + mid,\\n        \\\"pagesize=30\\\",\\n        \\\"page=\\\" + MY_PAGE,\\n        \\\"userid=440908392\\\",\\n        \\\"token=f7524337c1ae877929a1497cf3d5d37e5c4cb8073fc298e492a67babc376a9d4\\\",\\n        // \\\"callback=callback123\\\",\\n        // \\\"bitrate=0\\\",\\n        // \\\"isfuzzy=0\\\",\\n        // \\\"inputtype=0\\\",\\n        // \\\"iscorrection=1\\\",\\n        // \\\"privilege_filter=0\\\",\\n        // \\\"platid=4\\\",\\n        // \\\"plat=0\\\",\\n        // \\\"filter=10\\\",\\n        // \\\"format=jsonp\\\",\\n        // \\\"version=8000\\\",\\n    ].concat(params);\\n    return JSON.parse(fetch(url + \\\"?\\\" + getParams(params, \\\"NVPh5oo715z5DIWAeQlhMDsWXXQV4hwt\\\"), {\\n        'headers': {\\n            'dfid': '-',\\n            'mid': mid,\\n            'clienttime': mid,\\n            \\\"User-Agent\\\": \\\"Android712-AndroidPhone-10518-18-0-NetMusic-wifi\\\",\\n            \\\"KG-FAKE\\\": \\\"440908392\\\", // userid\\n            \\\"KG-THash\\\": \\\"3e5ec6b\\\",\\n            \\\"KG-Tid\\\": \\\"1\\\",\\n            \\\"KG-Rec\\\": \\\"1\\\",\\n            \\\"KG-RC\\\": \\\"1\\\",\\n            \\\"KG-RF\\\": \\\"00869891\\\"\\n        }\\n    }))[path || \\\"data\\\"] || {};\\n}\\n\\n\\nfunction _formatting(_, r2) {\\n    let name, singer;\\n    let interval = Hms((_.info && _.info.duration) || (_.duration * 1000));\\n    let songId = _.audio_id || _.id;\\n    let albumName = _.albumname || _.remark || \\\"\\\";\\n    let albumId = _.album_id || \\\"\\\";\\n    let picUrl = _.album_sizable_cover || (_.info && _.info.image) || \\\"\\\";\\n    let hash = _.hash.toUpperCase();\\n    let album_audio_id = _.album_audio_id;\\n    let content = (_.privilege == 0 || _.privilege == 8) ? 0 : 1;\\n\\n    let qualitys = _.relate_goods || [];\\n    if (qualitys.length == 0) {\\n        for (let k of ['', '320', 'sq', 'hign']) {\\n            if (_[k + 'filesize']) {\\n                qualitys.push({\\n                    type: {\\n                        '': \\\"128k\\\",\\n                        '320': \\\"320k\\\",\\n                        'sq': \\\"flac\\\",\\n                        'high': \\\"flac24bit\\\"\\n                    }[k],\\n                    size: Size(_[k + 'filesize']),\\n                    hash: _[k + 'hash'].toUpperCase()\\n                });\\n            }\\n        }\\n        if (qualitys.length == 0) {\\n            qualitys.push({\\n                type: \\\"128k\\\",\\n                size: Size(),\\n                hash: _.hash.toUpperCase()\\n            });\\n        }\\n    } else {\\n        _ = qualitys[0];\\n        qualitys = qualitys.slice(0, 4).filter(_ => /^(128|320|flac|high)$/i.test(_.quality))\\n            .map(_ => {\\n                return {\\n                    type: {\\n                        '128': '128k',\\n                        '320': '320k',\\n                        'flac': 'flac',\\n                        'high': 'flac24bit'\\n                    }[_.quality],\\n                    size: Size(_.info.filesize),\\n                    hash: _.hash.toUpperCase()\\n                }\\n            });\\n    }\\n    [singer, name] = String(_.filename || _.name).split(' - ');\\n\\n    Extra({\\n        name,\\n        singer,\\n        interval,\\n        songId,\\n        albumName,\\n        albumId,\\n        picUrl,\\n        qualitys,\\n        hash,\\n        album_audio_id,\\n        content,\\n    }, ((typeof r2 === 'object') ? Object.assign(r2, {\\n        songName: name,\\n        userName: singer,\\n        songTime: interval,\\n        albumName: albumName || name\\n    }) : r2));\\n}\\n$.exports = {\\n    webSign,\\n    getParams,\\n    _formatting,\\n    iTag: function() {\\n        let _ = JSON.parse(fetch(\\\"http://www2.kugou.kugou.com/yueku/v9/special/getSpecial?is_smarty=1\\\")).data;\\n        iTag[\\\"推荐\\\"] = {\\n            随机: \\\"recommend\\\",\\n            最新: \\\"\\\"\\n        };\\n        let its = _.hotTag.data;\\n        for (let i in its) {\\n            let it = its[i];\\n            iTag[\\\"推荐\\\"][it.special_name] = it.special_id;\\n        }\\n        _ = _.tagids;\\n        for (let name in _) {\\n            iTag[name] = {};\\n            _[name].data.map(\\n                _ => iTag[name][_.name] = _.id\\n            );\\n        }\\n        iTag[\\\"排行\\\"] = {};\\n        JSON.parse(fetch('http://mobilecdnbj.kugou.com/api/v3/rank/list')).data.info.map(_ => {\\n            name = [null, \\\"推荐\\\", \\\"新歌\\\", \\\"特色\\\", \\\"全球\\\", \\\"曲风\\\"][_.classify];\\n            if (!iTag[\\\"排行\\\"][name]) iTag[\\\"排行\\\"][name] = [];\\n            iTag[\\\"排行\\\"][name].push(Extra({\\n                name: _.rankname,\\n                picUrl: _.imgurl,\\n                content: 3,\\n                sourceListId: _.rankid,\\n            }, 1, 1));\\n        });\\n        storage0.putMyVar(\\\"kg_iTag\\\", iTag);\\n    },\\n    mv: function(_, t1) {\\n        MY_PAGE = 1;\\n        let mvhash = webSign(\\\"http://mobilecdnbj.kugou.com/api/v3/song/info\\\", [\\n            \\\"hash=\\\" + t1\\n        ]).mvhash;\\n        let names = [];\\n        let urls = [];\\n        if (mvhash) {\\n            // http://mobilecdnbj.kugou.com/api/v3/mv/detail?mvhash=\\n            let mvinfo = webSign([\\n                \\\"http://trackermv.kugou.com/interface/index\\\",\\n                \\\"https://m.kugou.com/app/i/mv.php\\\",\\n            ][0], [\\n                \\\"cmd=100\\\",\\n                \\\"hash=\\\" + mvhash,\\n                \\\"key=\\\" + md5(mvhash + \\\"kugoumvcloud\\\"),\\n                \\\"ismp3=1\\\",\\n                \\\"ext=mp4\\\"\\n            ], \\\"mvdata\\\");\\n            [\\n                ['rq', '【蓝光】 1080P'],\\n                ['sq', '【超清】 720P'],\\n                ['hd', '【高清】 480P'],\\n                ['sd', '【标清】 240P'],\\n                ['le', '【标清】 240P'],\\n            ].map([path, name] => {\\n                let __ = mvinfo[path];\\n                if (__ && __.downurl) {\\n                    names.push(name);\\n                    urls.push(__.downurl);\\n                }\\n            });\\n        }\\n        return [names, urls];\\n    },\\n    getLyric: function(_, t1) {\\n        let lrc;\\n        try {\\n            lrc = fetch(\\\"http://m.kugou.com/app/i/krc.php?cmd=100&timelength=999999&hash=\\\" + t1);\\n            if (!lrc) {\\n                throw new Error('no get lrc_1');\\n            }\\n        } catch (getlrc_err_1) {\\n            try {\\n                let u = \\\"http://krcs.kugou.com/search?ver=1&man=yes&client=mobi&keyword=&duration=&hash=\\\" + t1 + \\\"&album_audio_id=\\\";\\n                let __ = JSON.parse(fetch(u)).candidates[0];\\n                if (__ && __.id && __.accesskey) {\\n                    u = \\\"http://lyrics.kugou.com/download?ver=1&client=pc&id=\\\" + __.id + \\\"&accesskey=\\\" + __.accesskey + \\\"&fmt=lrc&charset=utf8\\\";\\n                    lrc = base64Decode(JSON.parse(fetch(u)).content);\\n                } else {\\n                    throw new Error('no get lrc_2');\\n                }\\n            } catch (getlrc_err_2) {\\n                try {\\n                    MY_PAGE = 1;\\n                    /*  20240225  这个接口不能用了\\n                               lrc = webSign(\\\"https://wwwapi.kugou.com/yy/index.php\\\", [\\n                                    \\\"r=play/getdata\\\",\\n                                    \\\"hash=\\\" + _.hash,\\n                                    \\\"album_id=\\\" + _.album_audio_id,\\n                                    \\\"platid=4\\\"\\n                                ]).lyrics;\\n                    */\\n                    _ = webSign(\\\"https://m.kugou.com/api/v1/song/get_song_info_v2\\\", [\\n                        \\\"cmd=playInfo\\\",\\n                        \\\"hash=\\\" + t1,\\n                        \\\"album_id=\\\",\\n                        \\\"album_audio_id=\\\",\\n                        // \\\"appid=3358\\\",\\n                        // \\\"source_id=\\\",\\n                        // \\\"from=\\\"\\n                    ]);\\n                    lrc = webSign(\\\"https://m3ws.kugou.com/api/v1/krc/get_lyrics\\\", [\\n                        \\\"keyword=\\\" + _.fileName,\\n                        \\\"hash=\\\" + _.hash,\\n                        \\\"timelength=\\\" + ((_.timeLength || _.duration) * 1000)\\n                    ]).lrc;\\n                } catch (getlrc_err_3) {}\\n            }\\n        }\\n        return lrc || \\\"\\\";\\n    },\\n    lazy: function(platform, t1, t2, t3) {\\n        let title, author, desc, img, time, tags, total, list;\\n        let _ = t1;\\n        t1 = _.hash || _.sourceListId;\\n        switch (String(platform)) {\\n            case '0': // 详情\\n                if (t2) {\\n                    return $.require(\\\"jiexi?rule=歌词适配\\\").GetMusicUrl(\\\"down\\\", \\\"kg\\\", t1, t3, _);\\n                }\\n                let f = _.qualitys;\\n\\n                // 链接\\n                var url, ii, lrc;\\n                switch (ii = t3) {\\n                    case '3':\\n                        if (ii == 3) {\\n                            if (f[3] && f[3].type == 'flac24bit') {\\n                                [url, lrc, ii] = $.require(\\\"jiexi?rule=歌词适配\\\").GetMusicUrl(\\\"open\\\", \\\"kg\\\", t1, 3, _, lrc, ii);\\n                                if (url) break;\\n                            } else ii = 2;\\n                        }\\n                    case '2':\\n                        if (ii == 2) {\\n                            if (f[2] && f[2].type == 'flac') {\\n                                [url, lrc, ii] = $.require(\\\"jiexi?rule=歌词适配\\\").GetMusicUrl(\\\"open\\\", \\\"kg\\\", t1, 2, _, lrc, ii);\\n                                if (url) break;\\n                            } else ii = 1;\\n                        }\\n                    case '1':\\n                        if (ii == 1) {\\n                            if (f[1] && f[1].type == '320k') {\\n                                [url, lrc, ii] = $.require(\\\"jiexi?rule=歌词适配\\\").GetMusicUrl(\\\"open\\\", \\\"kg\\\", t1, 1, _, lrc, ii);\\n                                if (url) break;\\n                            } else ii = 0;\\n                        }\\n                    default:\\n                        if (_.content === '0') {\\n                            // url = JSON.parse(fetch(\\\"https://m.kugou.com/app/i/getSongInfo.php?cmd=playInfo&hash=\\\" + t1)).url;\\n                            url = $.require(\\\"kg?rule=歌词适配\\\").GetMusicUrl(t1, '128', _.album_id, _.album_audio_id);\\n                        } else {\\n                            [url, lrc, ii] = $.require(\\\"jiexi?rule=歌词适配\\\").GetMusicUrl(\\\"open\\\", \\\"kg\\\", t1, 0, _, lrc, ii);\\n                        }\\n                        break;\\n                }\\n                return [url, lrc, ii];\\n                break;\\n            case '1': // 首页\\n                if (t1 == \\\"recommend\\\")\\n                    list = JSON.parse(fetch(\\\"http://everydayrec.service.kugou.com/guess_special_recommend\\\", {\\n                        method: 'post',\\n                        headers: {\\n                            'User-Agent': 'KuGou2012-8275-web_browser_event_handler'\\n                        },\\n                        body: {\\n                            appid: 1001,\\n                            clienttime: 1566798337219,\\n                            clientver: 8275,\\n                            key: 'f1f93580115bb106680d2375f8032d96',\\n                            mid: '21511157a05844bd085308bc76ef3343',\\n                            platform: 'pc',\\n                            userid: '262643156',\\n                            return_min: 6,\\n                            return_max: 15,\\n                        }\\n                    })).data.special_list;\\n                else\\n                    list = JSON.parse(fetch(\\\"http://www2.kugou.kugou.com/yueku/v9/special/getSpecial?is_ajax=1&cdn=cdn&t=5&pagesize=30&c=\\\" + t1 + \\\"&p=\\\" + MY_PAGE)).special_db;\\n                list.map(_ => Extra({\\n                    name: _.specialname,\\n                    picUrl: _.img || _.flexible_cover,\\n                    content: 2,\\n                    sourceListId: _.specialid,\\n                    col_type: t2\\n                }, 1));\\n                return (MY_PAGE - 1) * 30 + list.length;\\n                break;\\n            case '2': // 发现\\n                /*\\n                if (MY_PAGE == 1 && !t1.match(/_/)) {\\n                    _ = executeWebRule(`http://www2.kugou.kugou.com/yueku/v9/special/single/${t1}-5-99999.html?json=true`, $.toString(() => {\\n                        return JSON.stringify(global.data, 0, 2);\\n                    }), {\\n                        blockRules: ['.js', '.css', '.jpg', '.png', '.gif', '.svg', '.ico']\\n                    });\\n                    list = JSON.parse(_);\\n                } else list = [];\\n                \\n                webSign(\\\"https://pubsongscdn.kugou.com/v2/get_other_list_file\\\", [\\n                    \\\"module=playlist\\\", // CloudMusic\\n                    \\\"need_sort=1\\\",\\n                    \\\"area_code=1\\\",\\n                    \\\"type=0\\\",\\n                    'global_specialid=' + t1,\\n                    'specialid=' + t1\\n                ]);\\n                */\\n                u = \\\"https://mobiles.kugou.com/api/v5/special/\\\";\\n\\n                title = getPageTitle();\\n                author = \\\"酷狗音乐\\\";\\n                desc = \\\"\\\";\\n                img = \\\"\\\";\\n                time = \\\"\\\";\\n                tags = \\\"\\\";\\n                if (MY_PAGE == 1) { // 只在第一页获取信息\\n                    let e = webSign(u + \\\"info_v2\\\", ['global_specialid=' + t1, 'specialid=' + t1]);\\n                    title = e.specialname;\\n                    author = e.nickname;\\n                    desc = e.intro;\\n                    img = e.imgurl.replace(\\\"{size}\\\", \\\"480\\\");\\n                    time = e.publishtime.split(\\\" \\\")[0];\\n                    tags = (e.tags || []).map(_ => _.tagname).join(\\\"、\\\");\\n                }\\n                _ = webSign(u + \\\"song_v2\\\", ['global_specialid=' + t1, 'specialid=' + t1]);\\n                total = _.total;\\n                list = _.info;\\n                break;\\n            case '3': // 排行\\n                _ = JSON.parse(fetch(`http://mobilecdnbj.kugou.com/api/v3/rank/song?pagesize=30&page=${MY_PAGE}&rankid=${t1}`)).data;\\n                total = _.total;\\n                list = _.info;\\n                break;\\n            case '4': // 专辑\\n                _ = webSign(\\\"https://m3ws.kugou.com/api/v1/album/info\\\", [\\\"albumid=\\\" + t1, \\\"version=1000\\\", \\\"plat=5\\\"]);\\n\\n                title = _.albumname;\\n                author = _.singer;\\n                desc = _.intro;\\n                img = _.img400 || _.img;\\n                time = _.publish_date;\\n                tags = \\\"\\\";\\n\\n                total = _.songcount;\\n                list = _.list;\\n                if (total == list.length) total = 1;\\n                break;\\n            case '5': // 歌手\\n                title = getPageTitle();\\n                author = \\\"酷狗音乐\\\";\\n                desc = \\\"\\\";\\n                img = \\\"\\\";\\n                time = \\\"\\\";\\n                tags = \\\"\\\";\\n                if (MY_PAGE == 1) { // 只在第一页获取信息\\n                    let e2 = webSign(\\\"https://gateway.kugou.com/mobilecdn/api/v3/singer/info\\\", [\\\"singerid=\\\" + t1, \\\"with_listener_index=1\\\"]);\\n                    title = e2.singername;\\n                    author = e2.singername;\\n                    desc = e2.intro;\\n                    img = e2.imgurl.replace(\\\"{size}\\\", \\\"480\\\");\\n                }\\n                _ = webSign('https://gateway.kugou.com/openapi/kmr/v1/author/audios', [\\\"author_id=\\\" + t1]);\\n\\n                total = _.total;\\n                list = (_.songs || []).map(_ => _.audio_info);\\n                break;\\n        }\\n\\n        // 接口没办法获取hires属性，再获取一次list2\\n        let list2 = $.require(\\\"kg?rule=歌词适配\\\").ajax(list);\\n        list = list.map((_, i) => Object.assign(list2[i], _));\\n\\n        if (t2) return list;\\n        list.map(_ => _formatting(_, t3 || {}));\\n        return {\\n            title,\\n            author,\\n            desc,\\n            img,\\n            time,\\n            tags,\\n            total: total || ((MY_PAGE - 1) * 30 + list.length)\\n        }\\n    },\\n\\n\\n\\n    search: function(platform, keyword, isU, run) {\\n        let _;\\n        if (platform == \\\"2\\\") {\\n            /*\\n                        _ = JSON.parse(fetch(\\\"http://www2.kugou.kugou.com/apps/kucodeAndShare/app/\\\", {\\n                            method: 'POST',\\n                            headers: {\\n                                'KG-RC': '1',\\n                                'KG-THash': 'network_super_call.cpp:3676261689:379',\\n                                'User-Agent': '',\\n                            },\\n                            body: {\\n                                appid: 1001,\\n                                clientver: 10112, // 9020\\n                                mid: \\\"70a02aad1ce4648e7dca77f2afa7b182\\\", // 21511157a05844bd085308bc76ef3343\\n                                clienttime: 722219501, // 640612895\\n                                key: \\\"381d7062030e8a5a94cfbe50bfe65433\\\", // 36164c4015e704673c588ee202b9ecb8\\n                                data: JSON.parse(keyword)\\n                            }\\n                        }));\\n            */\\n            d.push({\\n                title: \\\"酷狗码格式未收录\\\",\\n                url: \\\"hiker://empty\\\",\\n                col_type: \\\"text_center_1\\\",\\n            });\\n            return 0;\\n        } else if (isU != \\\"url\\\") {\\n            let list, __ = {\\n                lib: (_) => true,\\n                paid: (_) => (_.privilege != 0 && _.privilege != 8),\\n                free: (_) => (_.privilege == 0 || _.privilege == 8),\\n                lyric: (_) => true,\\n                mv: (_) => true\\n            };\\n            // surl = (stype) => JSON.parse(fetch(`http://mobilecdn.kugou.com/api/v3/search/${stype}?format=json&keyword=${keyword}&page=${MY_PAGE}&pagesize=30`)).data.info;\\n            let surl2 = (v, s, p) => {\\n                let url = \\\"https://gateway.kugou.com/complexsearch/\\\" + v + \\\"/search/\\\" + s;\\n                return webSign(url, [\\\"keyword=\\\" + keyword, p]);\\n            }\\n            switch (String(platform)) {\\n                case '0': // 搜索单曲 #platform=AndroidFilter\\n                    if (isU == 'free') {\\n                        _ = surl2(\\\"v3\\\", \\\"song\\\", \\\"\\\");\\n                        if (run == 'run') return _.lists[0];\\n                    } else if (isU == 'mv' || isU == 'lyric') {\\n                        _ = surl2(\\\"v1\\\", isU, \\\"platform=WebFilter\\\");\\n                        if (run == 'run') return _.lists[0];\\n                    } else {\\n                        // list = surl('song');\\n                        _ = surl2(\\\"v3\\\", \\\"song\\\", \\\"platform=WebFilter\\\");\\n                        if (run == 'srec') return _.lists;\\n                    }\\n                    list = $.require(\\\"kg?rule=歌词适配\\\").ajax(_.lists, isU == 'mv') || [];\\n                    let r1 = getMyVar('search_down', '0') == '1' ? 2 : 1;\\n                    list.map(_ => {\\n                        if (__[isU](_)) _formatting(_, r1);\\n                    });\\n                    break;\\n                case '1': // 搜索歌单\\n                    // list = surl('special');\\n                    // searchsong=1 #搜索包含这首歌的歌单\\n                    isU = {\\n                        songs: { // 歌单\\n                            u: \\\"special\\\",\\n                            c: \\\"2\\\"\\n                        },\\n                        album: { // 专辑\\n                            u: \\\"album\\\",\\n                            c: \\\"4\\\"\\n                        },\\n                        artist: { // 歌手\\n                            u: \\\"author\\\",\\n                            c: \\\"5\\\"\\n                        },\\n                        伴奏: \\\"accsong\\\", // v4\\n                        小说: \\\"novel\\\", // v1\\n                    }[isU];\\n                    _ = surl2(\\\"v1\\\", isU.u, \\\"searchsong=1\\\");\\n                    list = _.lists;\\n                    list.map(_ => Extra({\\n                        name: _.specialname || _.albumname || _.title || _.AuthorName,\\n                        picUrl: _.imgurl || _.img || _.Avatar,\\n                        content: isU.c,\\n                        sourceListId: _.specialid || _.albumid || _.AuthorId\\n                    }, 1));\\n                    break;\\n            }\\n            return _.total || ((MY_PAGE - 1) * 30 + list.length);\\n        } else { // 搜索 分享链接\\n            switch (String(platform)) {\\n                case '0': // 搜索单曲\\n                    _ = $.require(\\\"kg?rule=歌词适配\\\").ajax([{\\n                        hash: keyword\\n                    }])[0];\\n                    if (run == 'mv') return _;\\n                    _formatting(_, 1);\\n                    break;\\n                case '1': // 搜索歌单\\n                    _ = webSign(\\\"https://mobiles.kugou.com/api/v5/special/info_v2\\\", [\\\"specialid=\\\" + keyword, \\\"global_specialid=\\\" + keyword]);\\n                    if (_ === null && Number(keyword)) {\\n                        _ = executeWebRule(`http://www2.kugou.kugou.com/yueku/v9/special/single/${keyword}-5-99999.html?json=true`, $.toString(() => {\\n                            return JSON.stringify(global);\\n                        }), {\\n                            blockRules: ['.js', '.css', '.jpg', '.png', '.gif', '.svg', '.ico']\\n                        });\\n                        _ = JSON.parse(_);\\n                    }\\n                    Extra({\\n                        name: _.specialname || _.name,\\n                        picUrl: _.imgurl || _.pic,\\n                        content: 2,\\n                        sourceListId: (_.specialid || _.global_specialid || _.id) + \\\"\\\"\\n                    }, 1);\\n                    break;\\n            }\\n            return 0;\\n        }\\n    },\\n\\n\\n\\n    ajax: function ajax(resource, isFilter) {\\n        let list, headers = {\\n            'KG-THash': '13a3164',\\n            'KG-RC': '1',\\n            'KG-Fake': '0',\\n            'KG-RF': '00869891',\\n            'User-Agent': 'Android712-AndroidPhone-11451-376-0-FeeCacheUpdate-wifi'\\n        };\\n        let _get = hash => ({\\n            \\\"id\\\": 0,\\n            \\\"type\\\": \\\"audio\\\",\\n            \\\"hash\\\": hash,\\n            // album_audio_id: 0,\\n            // album_id: \\\"0\\\",\\n            // name: _.filename.replace(\\\".mp3\\\", \\\"\\\"),\\n            // page_id: 0,\\n        });\\n        if (isFilter) {\\n            list = new Map();\\n            resource.forEach(obj => {\\n                let key = obj.hash || obj.FileHash;\\n                if (!list.has(key)) {\\n                    list.set(key, _get(key));\\n                }\\n            });\\n            list = Array.from(list.values());\\n        } else {\\n            list = resource.map(_ => _get(_.hash || _.FileHash));\\n        }\\n        if (true) {\\n            headers[\\\"x-router\\\"] = \\\"media.store.kugou.com\\\";\\n            let body = JSON.stringify({\\n                \\\"relate\\\": 1,\\n                \\\"userid\\\": \\\"2626431536\\\",\\n                \\\"vip\\\": 1, // 0\\n                \\\"token\\\": \\\"\\\",\\n                // \\\"userid\\\": \\\"0\\\",\\n                \\\"appid\\\": 1001,\\n                \\\"behavior\\\": \\\"play\\\",\\n                \\\"area_code\\\": \\\"1\\\",\\n                \\\"clientver\\\": \\\"8990\\\", // 10112\\n                \\\"need_hash_offset\\\": 1,\\n                \\\"resource\\\": list,\\n                // \\\"dfid\\\": \\\"-\\\",\\n                // \\\"mid\\\": R(32),\\n            });\\n            return JSON.parse(post([\\n                \\\"http://media.store.kugou.com/v1/get_res_privilege\\\",\\n                \\\"https://gateway.kugou.com/v2/get_res_privilege/lite\\\"\\n            ][1], {\\n                body,\\n                headers\\n            })).data;\\n        } else {\\n            headers['x-router'] = 'kmr.service.kugou.com';\\n            let data = {\\n                area_code: '1',\\n                show_privilege: 1,\\n                show_album_info: '1',\\n                is_publish: '',\\n                appid: 1005,\\n                clientver: 11451,\\n                mid: '1',\\n                dfid: '-',\\n                clienttime: Date.now(),\\n                key: 'OIlwieks28dk2k092lksi2UIkp',\\n                fields: 'album_info,author_name,audio_info,ori_audio_name,base,songname',\\n            }\\n            let tasks = []\\n            while (list.length) {\\n                tasks.push(Object.assign({\\n                    data: list.slice(0, 100)\\n                }, data))\\n                if (list.length < 100) break\\n                list = list.slice(100)\\n            }\\n            list = [];\\n            tasks.map(body => {\\n                let t = JSON.parse(post('http://gateway.kugou.com/v2/album_audio/audio', {\\n                    body,\\n                    headers\\n                })).data.map(t => t[0]);\\n                list = list.concat(t);\\n            });\\n            return list;\\n        }\\n    },\\n\\n\\n\\n    GetMusicUrl: function(hash, quality, album_id, album_audio_id, userid, token, appid, signkey) {\\n        var mid  = R(32);\\n        var date = new Date().getTime();\\n        var hash = String(hash).toLowerCase();\\n        var quality = quality || \\\"128\\\";\\n        var album_id = album_id || \\\"\\\";\\n        var album_audio_id = album_audio_id || \\\"\\\";\\n        var userid = userid || \\\"440908392\\\";\\n        var token = token || \\\"f7524337c1ae877929a1497cf3d5d37e5c4cb8073fc298e492a67babc376a9d4\\\";\\n        var appid = appid || \\\"1005\\\";\\n        var signkey = signkey || \\\"OIlwieks28dk2k092lksi2UIkp\\\";\\n        var params = [\\n            'quality=' + quality,\\n            'hash=' + hash,\\n            'mid=' + mid,\\n            'appid=' + appid,\\n            'userid=' + userid,\\n            'key=' + md5(hash + \\\"57ae12eb6890223e355ccfcb74edf70d\\\" + appid + mid + userid),\\n            'album_id=' + album_id,\\n            'album_audio_id=' + album_audio_id,\\n            'clienttime=' + Math.floor(date / 1000),\\n            'open_time=' + $.dateFormat(date, 'yyyyMMdd'),\\n            'token=' + token,\\n            'area_code=1',\\n            'module=',\\n            'ssa_flag=is_fromtrack',\\n            'clientver=12029', //10518\\n            'vipType=6',\\n            'ptype=0',\\n            'auth=',\\n            'mtype=0',\\n            'behavior=play',\\n            'pid=2',\\n            'dfid=-',\\n            'pidversion=3001',\\n            'secret=' + R(32),\\n            // 'behavior=play',\\n            // 'version=9209',\\n            // 'cmd=26',\\n        ];\\n        // body_ = \\\"http://trackercdngz.kugou.com/i/v2/?\\\" + params.join(\\\"&\\\");\\n        var body_ = JSON.parse(fetch(\\\"https://gateway.kugou.com/v5/url?\\\" + getParams(params, signkey), {\\n            \\\"headers\\\": {\\n                \\\"User-Agent\\\": \\\"Android800-AndroidPhone-12029-56-0-starlive-ctnet(13)\\\",\\n                \\\"KG-THash\\\": \\\"595ff94\\\",\\n                \\\"KG-FAKE\\\": userid,\\n                \\\"KG-Rec\\\": \\\"1\\\",\\n                \\\"KG-RC\\\": \\\"1\\\",\\n                \\\"x-router\\\": \\\"tracker.kugou.com\\\"\\n            }\\n        }));\\n        if (body_.status == 1)\\n            return body_[\\\"url\\\"][0];\\n        else if (body_.status == 2)\\n            return \\\"toast://可能是登录过期了。\\\";\\n        else\\n            return \\\"toast://未知错误，无版权？\\\";\\n    },\\n\\n\\n\\n    // https://github.com/lxmusics/lx-music-api-server-python/blob/main/modules/kg/lite_signin.py\\n    Lite_Signin: function(userid, token, signkey, isjx) {\\n        MY_PAGE = 1;\\n        const {\\n            getJxlist,\\n            setJxlist\\n        } = $.require('jiexi?rule=歌词适配');\\n        let mixsongid = $.require(\\\"kg?rule=歌词适配\\\").search(\\\"0\\\", \\\"\\\", \\\"free\\\", \\\"run\\\")[\\\"MixSongID\\\"];\\n        let body = JSON.stringify({\\n            \\\"mixsongid\\\": Number(mixsongid)\\n        });\\n\\n        let mid  = R(32, \\\"1234567890\\\");\\n        let date = new Date().getTime();\\n        let params = [\\n            'userid=' + userid,\\n            'token=' + token,\\n            'clienttime=' + Math.floor(date / 1000),\\n            'appid=3116',\\n            'clientver=10518',\\n            'mid=' + mid,\\n            'uuid=' + R(32),\\n            'dfid=-'\\n        ];\\n        let jxlist, req = JSON.parse(post(\\\"https://gateway.kugou.com/v2/report/listen_song?\\\" + getParams(params, signkey, body), {\\n            body,\\n            headers: {\\n                \\\"User-Agent\\\": \\\"Android712-AndroidPhone-10518-18-0-NetMusic-wifi\\\",\\n                \\\"KG-THash\\\": \\\"5ad0291\\\",\\n                \\\"KG-Rec\\\": \\\"1\\\",\\n                \\\"KG-RC\\\": \\\"1\\\",\\n                \\\"x-router\\\": \\\"youth.kugou.com\\\"\\n            }\\n        }));\\n        let mapJx = (T) => {\\n            if (isjx) {\\n                jxlist = getJxlist('kg').map(_ => {\\n                    if (md5(_.title + _.url) == \\\"c877ae72b97bc26720ad8b1a39362d47\\\") {\\n                        _.time = date;\\n                        _.signin = 0;\\n                    }\\n                    return _\\n                });\\n                setJxlist('kg', jxlist);\\n                refreshPage();\\n            }\\n            return \\\"toast://\\\" + T;\\n        }\\n        if (req.status == 1) {\\n            return mapJx(\\\"签到成功\\\");\\n        } else if (req.error_code == 130012) { // 签到过了？\\n            return mapJx(\\\"签到失败：今天已经签到过了？\\\");\\n        } else if (req.error_code == 51002) { // 登录掉了？\\n            return mapJx(\\\"签到失败：token失效了，请重新配置\\\");\\n        } else {\\n            return \\\"toast://签到失败：\\\" + req.error_msg;\\n        }\\n    },\\n\\n\\n\\n    // Get_Kg_New_Token\\n    refresh_token: function(userid, token, appid, signkey) {\\n        var appid = appid || \\\"1005\\\";\\n        var signkey = signkey || \\\"OIlwieks28dk2k092lksi2UIkp\\\";\\n        [aes_key, aes_iv] = {\\n            \\\"1005\\\": [\\\"90b8382a1bb4ccdcf063102053fd75b8\\\", \\\"f063102053fd75b8\\\"],\\n            \\\"3116\\\": [\\\"c24f74ca2820225badc01946dba4fdf7\\\", \\\"adc01946dba4fdf7\\\"],\\n        }[appid];\\n        let CryptoUtil = $.require(\\\"hiker://assets/crypto-java.js\\\");\\n        let clienttime_ms = new Date().getTime() + \\\"\\\";\\n        let clienttime = Math.floor(clienttime_ms / 1e3);\\n        let p3 = CryptoUtil.AES.encrypt(\\n            JSON.stringify({\\n                clienttime,\\n                token\\n            }),\\n            CryptoUtil.Data.parseUTF8(aes_key),\\n            ({\\n                iv: CryptoUtil.Data.parseUTF8(aes_iv),\\n                mode: \\\"AES/CBC/PKCS7Padding\\\"\\n            })\\n        ).toHex();\\n\\n        // dfid, dev, plat, gitversion\\n        let body = JSON.stringify({\\n            p3,\\n            clienttime_ms,\\n            t1: \\\"0\\\",\\n            t2: \\\"0\\\",\\n            userid,\\n        });\\n\\n        // uuid\\n        let params = [\\n            \\\"dfid=-\\\",\\n            \\\"appid=\\\" + appid,\\n            \\\"mid=\\\" + R(32, \\\"1234567890\\\"),\\n            \\\"clientver=10597\\\",\\n            \\\"clienttime=\\\" + clienttime,\\n        ];\\n        let _body = JSON.parse(post(\\\"http://login.user.kugou.com/v4/login_by_token/?\\\" + getParams(params, signkey, body), {\\n            body,\\n            headers: {\\n                \\\"User-Agent\\\": \\\"Android800-1070-10597-46-0-LOGIN-wifi\\\",\\n                \\\"KG-THash\\\": \\\"5ad0291\\\",\\n                \\\"KG-Rec\\\": \\\"1\\\",\\n                \\\"KG-RC\\\": \\\"1\\\"\\n            }\\n        }));\\n        try {\\n            return _body.data.token;\\n        } catch (e) {\\n            return _body.error_code;\\n        }\\n    }\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"❹kw\",\"path\":\"kw\",\"rule\":\"eval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配')).rule);\\nconst this_platform = \\\"kw\\\";\\nconst pcapi = \\\"https://www.kuwo.cn/api/www/\\\";\\nconst peapi = \\\"https://m.kuwo.cn/newh5app/api/mobile/\\\";\\n\\nfunction ajax(url) {\\n    let putTime = new Date().getTime();\\n    if (Number(getMyVar('kw_PutTime', '0')) < putTime) {\\n        let e, t, Cookie = String(JSON.parse(fetchPC('https://www.kuwo.cn/favicon.ico?v=1', {\\n            withHeaders: true,\\n            onlyHeaders: true\\n        })).headers['set-cookie'] || \\\"Hm_Iuvt_cdb524f42f0ce19b169b8072123a4727=2bm5QbPQKPZSRHyFN4pbZnGcNJ4J2DZJ\\\").split(';')[0];\\n        [e, t] = Cookie.split('=');\\n        Cookie += \\\"; BAIDU_RANDOM=\\\" + t;\\n\\n\\n        // Cookie = \\\"BAIDU_RANDOM=***\\\";\\n        let Token = function(T) { // PE\\n            let C = $.require('hiker://assets/crypto-java.js');\\n            T = C.Digest.digest(C.Data.parseUTF8(T), 'SHA-1');\\n            return md5(T).toUpperCase();\\n        }(t);\\n\\n\\n        // Cookie = \\\"Hm_Iuvt_***=***\\\";\\n        let Secret = function(e, t) { // PC\\n            let n = e.split('').map(c => c.charCodeAt(0)).join('');\\n            let r = Math.floor(n.length / 5),\\n                o = parseInt(n.charAt(r) + n.charAt(2 * r) + n.charAt(3 * r) + n.charAt(4 * r) + n.charAt(5 * r)),\\n                l = Math.ceil(e.length / 2),\\n                c = Math.pow(2, 31) - 1;\\n            let d = Math.round(1e9 * Math.random()) % 1e8;\\n            n += d.toString();\\n            while (n.length > 10) {\\n                n = (parseInt(n.substring(0, 10)) + parseInt(n.substring(10))).toString();\\n            }\\n            n = (o * n + l) % c;\\n            let f = '';\\n            for (let i = 0; i < t.length; i++) {\\n                let h = t.charCodeAt(i) ^ Math.floor(n / c * 255);\\n                f += ('00' + h.toString(16)).slice(-2);\\n                n = (o * n + l) % c;\\n            }\\n            d = '00000000' + d.toString(16);\\n            return f + d.slice(-8);\\n        }(e, unescape(t));\\n\\n\\n        // 保存变量 5分钟(可以一直保存\\n        putMyVar('kw_Cookie', Cookie);\\n        putMyVar('kw_Secret', Secret);\\n        putMyVar('kw_Token', Token);\\n        putMyVar('kw_PutTime', putTime + 3e5);\\n    }\\n    url += `httpsStatus=1&reqId=${R(\\\"randomUUID\\\")}&plat=web_www&from=`;\\n    let getdata = (ajaxerr) => {\\n        try {\\n            return JSON.parse(fetch(url, {\\n                headers: {\\n                    'Referer': 'https://kuwo.cn/',\\n                    'Cookie': getMyVar('kw_Cookie'),\\n                    'Secret': getMyVar('kw_Secret'),\\n                    'Token': getMyVar('kw_Token'),\\n                }\\n            })).data || {};\\n        } catch (err) {\\n            return ajaxerr < 2 ? getdata(ajaxerr + 1) : \\\"\\\";\\n        }\\n    }\\n    return getdata(0);\\n}\\n\\n\\nfunction _formatting(_, r2) {\\n    let Reg = (k, _) => reg = (_.N_MINFO || \\\"\\\").match(new RegExp('bitrate:' + k + ',format:[^,]+,size:([^;]+)'));\\n    let name = _.songName || _.name || _.SONGNAME;\\n    let singer = _.artist || _.ARTIST;\\n    let interval = Hms((_.duration || _.DURATION) * 1000); //_.songTimeMinutes;\\n    let songId = _.MUSICRID ? _.MUSICRID.split('_')[1].split('&')[0] : (_.rid || _.id);\\n    let albumName = _.album || _.ALBUM;\\n    let albumId = _.albumid || _.ALBUMID;\\n    let qualitys = [];\\n    for (let k of [128, 320, 2000, 4000]) {\\n        if (Reg(k, _)) {\\n            qualitys.push({\\n                type: {\\n                    128: \\\"128k\\\",\\n                    320: \\\"320k\\\",\\n                    2000: \\\"flac\\\",\\n                    4000: \\\"flac24bit\\\"\\n                }[k],\\n                size: reg[1].replace(/\\\\s*mb/i, \\\" MB\\\")\\n            });\\n        }\\n    }\\n    let picUrl = _.pic || _.img || _.hts_MVPIC;\\n    if (!picUrl) {\\n        if (_.web_albumpic_short) {\\n            picUrl = \\\"https://img2.kuwo.cn/star/albumcover/\\\" + _.web_albumpic_short.replace(/^120/, '500');\\n        } else {\\n            picUrl = fetch('http://artistpicserver.kuwo.cn/pic.web?type=rid_pic&pictype=url&size=500&rid=' + songId);\\n        }\\n        if (picUrl == \\\"NO_PIC\\\" && _.MVPIC) {\\n            picUrl = \\\"https://img4.kuwo.cn/wmvpic/\\\" + _.MVPIC.replace(/^\\\\d+/, '500');\\n        }\\n        if (picUrl == \\\"NO_PIC\\\" && _.web_artistpic_short) {\\n            picUrl = \\\"http://img1.kuwo.cn/star/starheads/\\\" + _.web_artistpic_short.replace(/^120/, '500');\\n        }\\n    }\\n    let content = (_.isListenFee || _.tpay) == 1 ? 1 : 0;\\n    Extra({\\n        name,\\n        singer,\\n        interval,\\n        songId,\\n        albumName,\\n        albumId,\\n        picUrl,\\n        qualitys,\\n        content,\\n    }, ((typeof r2 === 'object') ? Object.assign(r2, {\\n        songName: name,\\n        userName: singer,\\n        songTime: interval,\\n        albumName: albumName || name\\n    }) : r2));\\n}\\n$.exports = {\\n    ajax,\\n    _formatting,\\n    iTag: function() {\\n        iTag[\\\"推荐\\\"] = {};\\n        iTag[\\\"推荐\\\"][\\\"每日推荐\\\"] = \\\"rcm/index/playlist?id=rcm\\\";\\n        iTag[\\\"推荐\\\"][\\\"最新精选\\\"] = \\\"classify/playlist/getRcmPlayList?order=new\\\";\\n        iTag[\\\"推荐\\\"][\\\"热门精选\\\"] = \\\"classify/playlist/getRcmPlayList?order=hot\\\";\\n        ajax(pcapi + \\\"playlist/getTagList?\\\").map(_ => {\\n            if (_.data.length) {\\n                _.name = _.name.replace('流派', '');\\n                iTag[_.name] = {};\\n                _.data.map(__ =>\\n                    iTag[_.name][__.name] = \\\"classify/playlist/getTagPlayList?id=\\\" + __.id\\n                );\\n            }\\n        });\\n        iTag[\\\"排行\\\"] = {};\\n        ajax(pcapi + \\\"bang/bang/bangMenu?\\\").map(_ => {\\n            iTag[\\\"排行\\\"][_.name] = _.list.map(_ => Extra({\\n                name: _.name,\\n                picUrl: _.pic,\\n                content: 3,\\n                sourceListId: _.sourceid\\n            }, 1, 1));\\n        });\\n        storage0.putMyVar(\\\"kw_iTag\\\", iTag);\\n    },\\n\\n\\n\\n    mv: function(_, t1) {\\n        let mvinfo = JSON.parse(fetch(\\\"http://datacenter.kuwo.cn/d.c?cmkey=plist_pl2012&ft=music&resenc=utf8&ids=\\\" + t1))[0] || {};\\n        let mvhash = mvinfo.mvpayinfo && mvinfo.mvpayinfo.vid || mvinfo.mkvrid;\\n        let names = [];\\n        let urls = [];\\n        if (mvhash) {\\n            let _mvurl = \\\"http://anymatch.kuwo.cn/mobi.s?f=web&type=get_url_by_vid&vid=\\\" + mvhash + \\\"&quality=MP4\\\";\\n            let _mvmat = (path) => mvinfo.formats.match('\\\\\\\\|MP4' + path);\\n            [\\n                ['BD', '【蓝光】 1080P'],\\n                ['UL', '【超清】 720P'],\\n                ['HV', '【高清】 480P'],\\n                ['', '【标清】 360P'],\\n                ['L', '【流畅】 240P'],\\n            ].map([path, name] => {\\n                if (_mvmat(path)) {\\n                    let _mp4url = fetch(_mvurl + path).match(/url=(\\\\S+)/);\\n                    if (_mp4url && _mp4url[1]) {\\n                        urls.push(_mp4url[1].split(\\\"?\\\")[0]);\\n                        names.push(name);\\n                    }\\n                }\\n            });\\n        }\\n        return [names, urls];\\n    },\\n    getLyric: function(_, t1) {\\n        let lrc;\\n        try {\\n            lrc = function(rid, isGetLyricx) {\\n                const Buffer = {\\n                    from: t => {\\n                        let r = t.length;\\n                        let e = new Uint8Array(r);\\n                        for (let n = 0; n < r; n++)\\n                            e[n] = t.charCodeAt(n);\\n                        return e\\n                    }\\n                }\\n                const bufkey = Buffer.from('yeelion');\\n                const bufkeylen = bufkey.length;\\n\\n\\n                function D_zip(b64Text) { // 解压\\n                    let javaImport = new JavaImporter();\\n                    javaImport.importPackage(\\n                        Packages.java.lang,\\n                        Packages.java.io,\\n                        Packages.java.util,\\n                        Packages.java.util.zip\\n                    );\\n                    with(javaImport) {\\n                        let compressedData = Base64.getDecoder().decode(b64Text);\\n                        let bais = new ByteArrayInputStream(compressedData);\\n                        let baos = new ByteArrayOutputStream();\\n                        let buffer = java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE, 1024);\\n                        let iis = new InflaterInputStream(bais);\\n                        let len;\\n                        while ((len = iis.read(buffer)) != -1) {\\n                            baos.write(buffer, 0, len);\\n                        }\\n                        iis.close();\\n                        bais.close();\\n                        baos.close();\\n                        if (!isGetLyricx) {\\n                            return baos.toByteArray();\\n                        }\\n                        let b64Text2 = String(baos.toByteArray(), \\\"UTF-8\\\");\\n                        return Base64.getDecoder().decode(b64Text2);\\n                    }\\n                };\\n\\n\\n                function T_xor(bArr) {\\n                    bArr = Array.from(bArr);\\n                    let len = bArr.length;\\n                    let a = new Uint8Array(len);\\n                    let i = 0;\\n                    while (i < len) {\\n                        let j = 0\\n                        while (j < bufkeylen && i < len) {\\n                            a[i] = bArr[i] ^ bufkey[j]\\n                            i++\\n                            j++\\n                        }\\n                    }\\n                    return window0.btoa(String.fromCharCode.apply(null, a));\\n                }\\n\\n\\n                let params = \\\"user=12345,web,web,web&requester=localhost&req=1&rid=MUSIC_\\\" + rid;\\n                if (isGetLyricx) params += \\\"&lrcx=1\\\";\\n                params = T_xor(Buffer.from(params));\\n\\n\\n                let stream = fetch(\\\"http://newlyric.kuwo.cn/newlyric.lrc?\\\" + params, {\\n                    toHex: true\\n                });\\n                if (stream.slice(0, 20) !== \\\"74703d636f6e74656e74\\\") {\\n                    return \\\"\\\";\\n                }\\n                let lrc, index = stream.indexOf('0d0a0d0a') + 8;\\n                stream = D_zip(hexToBase64(stream.slice(index)));\\n\\n\\n                if (isGetLyricx) { // Uint8Array没办法直接转成gbk编码，这里绕一下\\n                    lrc = java.util.Base64.getDecoder().decode(T_xor(stream));\\n                } else {\\n                    lrc = stream;\\n                }\\n                return java.lang.String(lrc, \\\"gb18030\\\");\\n            }(t1, true);\\n        } catch (lrc_err1) {\\n            try { // 备用\\n                lrc = ajax([\\n                    peapi + \\\"v1/music/info/\\\" + t1,\\n                    \\\"http://m.kuwo.cn/newh5/singles/songinfoandlrc\\\",\\n                    pcapi.replace(/(api\\\\/)/, 'open$1v1/') + \\\"lyric/getlyric\\\",\\n                ][1] + \\\"?musicId=\\\" + t1 + \\\"&\\\") || {};\\n                lrc = (lrc.lrclist || lrc.lrc || []).map(_ => {\\n                    let s = ((_.time - 0) % 60).toFixed(3).padStart(6, '0');\\n                    let m = ((_.time - s) / 60).toFixed(0).padStart(2, '0');\\n                    return `[${m}:${s}]` + _.lineLyric\\n                }).join('\\\\n');\\n            } catch (lrc_err2) {}\\n        }\\n        return lrc || \\\"\\\";\\n    },\\n    lazy: function(platform, t1, t2, t3) {\\n        let title, author, desc, img, time, tags, total, list;\\n        let _ = t1;\\n        t1 = _.songId || _.sourceListId;\\n        switch (String(platform)) {\\n            case '0': // 详情\\n                if (t2) {\\n                    return $.require(\\\"jiexi?rule=歌词适配\\\").GetMusicUrl(\\\"down\\\", \\\"kw\\\", t1, t3, _);\\n                }\\n                let f = _.qualitys;\\n\\n                // 链接\\n                var url, ii, lrc;\\n                switch (ii = t3) {\\n                    case '3':\\n                        if (ii == 3) {\\n                            if (f[3] && f[3].type == 'flac24bit') {\\n                                [url, lrc, ii] = $.require(\\\"jiexi?rule=歌词适配\\\").GetMusicUrl(\\\"open\\\", \\\"kw\\\", t1, 3, _, lrc, ii);\\n                                if (url) break;\\n                            } else ii = 2;\\n                        }\\n                    case '2':\\n                        if (ii == 2) {\\n                            if (f[2] && f[2].type == 'flac') {\\n                                [url, lrc, ii] = $.require(\\\"jiexi?rule=歌词适配\\\").GetMusicUrl(\\\"open\\\", \\\"kw\\\", t1, 2, _, lrc, ii);\\n                                if (url) break;\\n                            } else ii = 1;\\n                        }\\n                    case '1':\\n                        if (ii == 1) {\\n                            if (f[1] && f[1].type == '320k') {\\n                                [url, lrc, ii] = $.require(\\\"jiexi?rule=歌词适配\\\").GetMusicUrl(\\\"open\\\", \\\"kw\\\", t1, 1, _, lrc, ii);\\n                                if (url) break;\\n                            } else ii = 0;\\n                        }\\n                    default:\\n                        try {\\n                            if (_.content == \\\"1\\\") {\\n                                throw new Error('is vip music');\\n                            } // url = fetch(\\\"https://antiserver.kuwo.cn/anti.s?type=convert_url&format=mp3&rid=\\\" + t1);\\n                            url = ajax([\\n                                pcapi.replace(/(api\\\\/)/, '$1v1/') + \\\"music/playUrl\\\",\\n                                peapi + \\\"v2/music/src/\\\" + t1,\\n                            ][0] + \\\"?mid=\\\" + t1 + \\\"&type=music&\\\").url;\\n                            if (!url) {\\n                                throw new Error('no get music');\\n                            }\\n                        } catch (isVipMusic) {\\n                            [url, lrc, ii] = $.require(\\\"jiexi?rule=歌词适配\\\").GetMusicUrl(\\\"open\\\", \\\"kw\\\", t1, 0, _, lrc, ii);\\n                        }\\n                        break;\\n                }\\n                return [url, lrc, ii];\\n                break;\\n            case '1': // 首页\\n                _ = ajax(pcapi + t1 + \\\"&pn=\\\" + MY_PAGE + \\\"&rn=30&\\\");\\n                list = _.data || _.list;\\n                list.map(_ => Extra({\\n                    name: _.name,\\n                    picUrl: _.img,\\n                    content: 2,\\n                    sourceListId: _.id,\\n                    col_type: t2\\n                }, 1));\\n                return _.total || ((MY_PAGE - 1) * 30 + list.length);\\n                break;\\n            case '2': // 发现\\n                if (MY_PAGE == 1) { // 只在第一页获取信息\\n                    let e = JSON.parse(fetch(\\\"http://nplserver.kuwo.cn/pl.svc?op=getlistinfo&pid=\\\" + t1 + \\\"&pn=0&rn=0&encode=utf8&keyset=pl2012&identity=kuwo&pcmp4=1&vipver=MUSIC_9.0.5.0_W1&newver=1&_=\\\"));\\n                    desc = e.info;\\n                    time = $.dateFormat(e.abstime * 1000, 'yyyy-MM-dd');\\n                    tags = e.tag;\\n                    img = e.pic;\\n                }\\n\\n                // \\\"https://mobilist.kuwo.cn/list.s?type=songlist&id=\\\"+ t1+ \\\"&pn=0&rn=30\\\";\\n                // \\\"https://kuwo.cn/newh5/playlist/playlistByPage?id=\\\"+ t1+ \\\"&pn=0&rn=30\\\";\\n                // \\\"http://nplserver.kuwo.cn/pl.svc?op=getlistinfo&pid=\\\"+t1+\\\"&pn=0&rn=30\\\" + \\\"&encode=utf8&keyset=pl2012&identity=kuwo&pcmp4=1&vipver=MUSIC_9.0.5.0_W1&newver=1&_=\\\";\\n                _ = ajax(pcapi + \\\"playlist/playListInfo?pid=\\\" + t1 + \\\"&pn=\\\" + MY_PAGE + \\\"&rn=30&\\\");\\n                break;\\n            case '3': // 排行\\n                if (MY_PAGE == 1) { // 只在第一页获取信息\\n                    let E = JSON.parse(fetch(\\\"http://kbangserver.kuwo.cn/ksong.s?from=pc&fmt=json&pn=0&rn=0&type=bang&data=content&id=\\\" + t1 + \\\"&show_copyright_off=0&pcmp4=1&isbang=1&_=\\\"));\\n                    desc = E.info;\\n                    time = E.pub;\\n                    tags = E.term;\\n                }\\n\\n                _ = ajax(pcapi + \\\"bang/bang/musicList?bangId=\\\" + t1 + \\\"&pn=\\\" + MY_PAGE + \\\"&rn=30&\\\");\\n                break;\\n            case '4': // 专辑\\n                _ = ajax(pcapi + \\\"album/albumInfo?albumId=\\\" + t1 + \\\"&pn=\\\" + MY_PAGE + \\\"&rn=30&\\\");\\n                break;\\n            case '5': // 歌手\\n                _ = ajax(pcapi + \\\"artist/artistMusic?artistid=\\\" + t1 + \\\"&pn=\\\" + MY_PAGE + \\\"&rn=30&\\\");\\n                break;\\n        }\\n\\n        title = _.name || _.title || _.album || getPageTitle();\\n        author = _.userName || _.uname || _.artist || \\\"酷我音乐\\\";\\n        desc = desc || _.info || _.albuminfo || \\\"\\\";\\n        img = String(img || _.img500 || _.pic || MY_PARAMS.img).replace(\\\"_\\\\d+.jpg\\\", \\\"_700.jpg\\\");\\n        time = time || _.pub || _.abstime || _.releaseDate || \\\"\\\";\\n        tags = String(tags || _.tag || _.lang || \\\"\\\").replace(/\\\\s*[\\\\,，]\\\\s*/gi, \\\"、\\\");\\n\\n        list = Array.from(_.musicList || _.musiclist || _.list || []);\\n        let ids = list.map(_ => _.id || _.rid).join(\\\",\\\");\\n        let list2 = JSON.parse(fetch(\\\"http://musicpay.kuwo.cn/music.pay?op=query&action=play&ids=\\\" + ids)).songs;\\n        if (t2) return list;\\n        list.map((_, i) => {\\n            _formatting(Object.assign(_, list2[i]), t3 || {});\\n        });\\n        return {\\n            title,\\n            author,\\n            desc,\\n            img,\\n            time,\\n            tags,\\n            total: _.total || ((MY_PAGE - 1) * 30 + list.length)\\n        }\\n    },\\n\\n\\n\\n    search: function(platform, keyword, isU, run) {\\n        let _;\\n        if (isU != \\\"url\\\") {\\n            let list, __ = {\\n                lib: (_) => true,\\n                paid: (_) => _.tpay == '1',\\n                free: (_) => _.tpay == '0',\\n                lyric: (_) => true,\\n                mv: (_) => true\\n            };\\n            // surl = (stype) => ajax(pcapi + \\\"search/search\\\" + stype + \\\"BykeyWord?key=\\\" + keyword + \\\"&pn=\\\" + MY_PAGE + \\\"&rn=30&\\\").list;\\n            let surl2 = (ft, noVipver) => {\\n                let p = {\\n                    // 必要参数\\n                    rformat: \\\"json\\\", // 返回格式\\n                    encoding: \\\"utf8\\\", // 编码方式\\n                    ft: ft, // 搜索类型\\n                    rn: 30, // 获取30个\\n                    pn: MY_PAGE - 1, // 当前页数\\n                    all: keyword, // 搜索的关键词\\n                    vipver: \\\"MUSIC_8.0.3.0_BCS75\\\", // 此参数存在时会返回vip歌曲\\n\\n                    // 下面是非必要参数\\n                    mobi: 1, // APP端？ #限制返回的参数大小\\n                    newsearch: 1, // 新搜索数据？\\n                    searchapi: 7, // api序号？\\n                    issubtitle: 1, // 是否包含关键词？\\n                    vermerge: 1, // 未知参数\\n                    strategy: 2012,\\n                    show_copyright_off: 1,\\n                    correct: 1,\\n                    cluster: 0,\\n                    client: \\\"kt\\\",\\n                    spPrivilege: 0,\\n                    newver: 3\\n                    // 还有一些其他参数\\n                }\\n                if (noVipver) {\\n                    delete p.vipver;\\n                }\\n                if (ft == \\\"album\\\") {\\n                    p.albumver = 1; // 获取专辑信息\\n                } else if (ft == \\\"lyric\\\") {\\n                    delete p.all;\\n                    p.ft = \\\"music\\\";\\n                    p.lrccontent = keyword;\\n                }\\n                return JSON.parse(fetch(buildUrl(\\\"http://search.kuwo.cn/r.s\\\", p)));\\n            }\\n            switch (String(platform)) {\\n                case '0': // 搜索单曲\\n                    // surl('Music').map();\\n                    // _ = surl2(\\\"audio\\\", \\\"\\\");\\n                    _ = surl2({\\n                        lyric: \\\"lyric\\\",\\n                        mv: \\\"video\\\"\\n                    }[isU] || \\\"music\\\", isU == 'free');\\n                    list = _.abslist || [];\\n                    if (isU == 'mv') {\\n                        list = function() {\\n                            let ids = [];\\n                            list.map(_ => {\\n                                try {\\n                                    let rids = _.MUSICRID.replace(\\\"MUSIC_\\\", \\\"\\\").split(\\\"&\\\");\\n                                    rids.map(rid => {\\n                                        if (ids.indexOf(rid) == -1) {\\n                                            ids.push(rid);\\n                                        }\\n                                    });\\n                                } catch (e) {};\\n                            });\\n                            return JSON.parse(fetch(\\\"http://datacenter.kuwo.cn/d.c?cmkey=plist_pl2012&ft=music&resenc=utf8&ids=\\\" + ids)) || [];\\n                        }();\\n                    }\\n                    let r1 = getMyVar('search_down', '0') == '1' ? 2 : 1;\\n                    for (let _ of list) {\\n                        if (__[isU](_)) {\\n                            if (run == 'run') {\\n                                if (!_.SONGNAME.match('片段')) return _;\\n                            } else {\\n                                _formatting(_, r1);\\n                            }\\n                        }\\n                    }\\n                    break;\\n                case '1': // 搜索歌单\\n                    // surl('PlayList').map();\\n                    isU = {\\n                        songs: { // 歌单\\n                            u: \\\"playlist\\\",\\n                            c: \\\"2\\\"\\n                        },\\n                        album: { // 专辑\\n                            u: \\\"album\\\",\\n                            c: \\\"4\\\"\\n                        },\\n                        artist: { // 歌手\\n                            u: \\\"artist\\\",\\n                            c: \\\"5\\\"\\n                        }\\n                    }[isU];\\n                    _ = surl2(isU.u, 0);\\n                    list = _.abslist || _.albumlist || [];\\n                    list.map(_ => Extra({\\n                        name: _.name || _.ARTIST,\\n                        picUrl: _.img || _.pic || _.hts_PICPATH.replace(\\\"240\\\", \\\"500\\\"),\\n                        content: isU.c,\\n                        sourceListId: _.playlistid || _.id || _.ARTISTID\\n                    }, 1));\\n                    break;\\n            }\\n            return _.TOTAL || ((MY_PAGE - 1) * 30 + list.length);\\n        } else { // 搜索 分享链接\\n            switch (String(platform)) {\\n                case '0': // 搜索单曲\\n                    _ = JSON.parse(fetch(\\\"http://datacenter.kuwo.cn/d.c?cmkey=plist_pl2012&ft=music&resenc=utf8&ids=\\\" + keyword))[0] || {};\\n                    if (run == 'mv') return _;\\n                    _formatting(_, 1);\\n                    break;\\n                case '1': // 搜索歌单\\n                    // type=get_album_info #搜索专辑\\n                    // \\\"http://mobilebasedata.kuwo.cn/basedata.s?type=get_songlist_info2&prod=&id=\\\"+keyword\\n                    _ = ajax(pcapi + \\\"playlist/playListInfo?pid=\\\" + keyword + \\\"&pn=1&rn=1&\\\");\\n                    Extra({\\n                        name: _.name,\\n                        picUrl: _.img,\\n                        content: 2,\\n                        sourceListId: _.id\\n                    }, 1);\\n                    break;\\n            }\\n            return 0;\\n        }\\n    },\\n\\n\\n\\n    des: function(t) {\\n        return executeWebRule(\\\"\\\", $.toString((t) => {\\n            const Buffer = {\\n                from: t => {\\n                    r = t.length;\\n                    e = new Uint8Array(r);\\n                    for (n = 0; n < r; n++)\\n                        e[n] = t.charCodeAt(n);\\n                    return e\\n                }\\n            }\\n            range = t => Array.from(new Array(t).keys());\\n            Long = t => {\\n                const r = BigInt(t);\\n                return {\\n                    toString: () => r.toString(),\\n                    isNegative: () => r < 0,\\n                    not: () => Long(~r),\\n                    low: Number(r),\\n                    or: t => Long(r | BigInt(t)),\\n                    xor: t => Long(r ^ BigInt(t)),\\n                    and: t => Long(r & BigInt(t)),\\n                    equals: t => r === BigInt(t),\\n                    shiftLeft: t => Long(r << BigInt(t)),\\n                    shiftRight: t => Long(r >> BigInt(t))\\n                }\\n            };\\n            LongArray = t => t.map(t => Long(t));\\n\\n\\n            arrayE = LongArray([\\n                31, 0, 1, 2, 3, 4, -1, -1,\\n                3, 4, 5, 6, 7, 8, -1, -1,\\n                7, 8, 9, 10, 11, 12, -1, -1,\\n                11, 12, 13, 14, 15, 16, -1, -1,\\n                15, 16, 17, 18, 19, 20, -1, -1,\\n                19, 20, 21, 22, 23, 24, -1, -1,\\n                23, 24, 25, 26, 27, 28, -1, -1,\\n                27, 28, 29, 30, 31, 30, -1, -1\\n            ])\\n            arrayIP = LongArray([\\n                57, 49, 41, 33, 25, 17, 9, 1,\\n                59, 51, 43, 35, 27, 19, 11, 3,\\n                61, 53, 45, 37, 29, 21, 13, 5,\\n                63, 55, 47, 39, 31, 23, 15, 7,\\n                56, 48, 40, 32, 24, 16, 8, 0,\\n                58, 50, 42, 34, 26, 18, 10, 2,\\n                60, 52, 44, 36, 28, 20, 12, 4,\\n                62, 54, 46, 38, 30, 22, 14, 6\\n            ])\\n            arrayIP_1 = LongArray([\\n                39, 7, 47, 15, 55, 23, 63, 31,\\n                38, 6, 46, 14, 54, 22, 62, 30,\\n                37, 5, 45, 13, 53, 21, 61, 29,\\n                36, 4, 44, 12, 52, 20, 60, 28,\\n                35, 3, 43, 11, 51, 19, 59, 27,\\n                34, 2, 42, 10, 50, 18, 58, 26,\\n                33, 1, 41, 9, 49, 17, 57, 25,\\n                32, 0, 40, 8, 48, 16, 56, 24\\n            ])\\n            arrayLs = [\\n                1, 1, 2, 2, 2, 2, 2, 2,\\n                1, 2, 2, 2, 2, 2, 2, 1\\n            ]\\n            arrayLsMask = LongArray([0, 1048577, 3145731])\\n            arrayMask = range(64).map(t => Math.pow(2, t))\\n            arrayMask[63] *= -1\\n            arrayP = LongArray([\\n                15, 6, 19, 20, 28, 11, 27, 16,\\n                0, 14, 22, 25, 4, 17, 30, 9,\\n                1, 7, 23, 13, 31, 26, 2, 8,\\n                18, 12, 29, 5, 21, 10, 3, 24\\n            ])\\n            arrayPC_1 = LongArray([\\n                56, 48, 40, 32, 24, 16, 8, 0,\\n                57, 49, 41, 33, 25, 17, 9, 1,\\n                58, 50, 42, 34, 26, 18, 10, 2,\\n                59, 51, 43, 35, 62, 54, 46, 38,\\n                30, 22, 14, 6, 61, 53, 45, 37,\\n                29, 21, 13, 5, 60, 52, 44, 36,\\n                28, 20, 12, 4, 27, 19, 11, 3\\n            ])\\n            arrayPC_2 = LongArray([\\n                13, 16, 10, 23, 0, 4, -1, -1,\\n                2, 27, 14, 5, 20, 9, -1, -1,\\n                22, 18, 11, 3, 25, 7, -1, -1,\\n                15, 6, 26, 19, 12, 1, -1, -1,\\n                40, 51, 30, 36, 46, 54, -1, -1,\\n                29, 39, 50, 44, 32, 47, -1, -1,\\n                43, 48, 38, 55, 33, 52, -1, -1,\\n                45, 41, 49, 35, 28, 31, -1, -1\\n            ])\\n            matrixNSBox = [\\n                [\\n                    14, 4, 3, 15, 2, 13, 5, 3,\\n                    13, 14, 6, 9, 11, 2, 0, 5,\\n                    4, 1, 10, 12, 15, 6, 9, 10,\\n                    1, 8, 12, 7, 8, 11, 7, 0,\\n                    0, 15, 10, 5, 14, 4, 9, 10,\\n                    7, 8, 12, 3, 13, 1, 3, 6,\\n                    15, 12, 6, 11, 2, 9, 5, 0,\\n                    4, 2, 11, 14, 1, 7, 8, 13\\n                ],\\n                [\\n                    15, 0, 9, 5, 6, 10, 12, 9,\\n                    8, 7, 2, 12, 3, 13, 5, 2,\\n                    1, 14, 7, 8, 11, 4, 0, 3,\\n                    14, 11, 13, 6, 4, 1, 10, 15,\\n                    3, 13, 12, 11, 15, 3, 6, 0,\\n                    4, 10, 1, 7, 8, 4, 11, 14,\\n                    13, 8, 0, 6, 2, 15, 9, 5,\\n                    7, 1, 10, 12, 14, 2, 5, 9\\n                ],\\n                [\\n                    10, 13, 1, 11, 6, 8, 11, 5,\\n                    9, 4, 12, 2, 15, 3, 2, 14,\\n                    0, 6, 13, 1, 3, 15, 4, 10,\\n                    14, 9, 7, 12, 5, 0, 8, 7,\\n                    13, 1, 2, 4, 3, 6, 12, 11,\\n                    0, 13, 5, 14, 6, 8, 15, 2,\\n                    7, 10, 8, 15, 4, 9, 11, 5,\\n                    9, 0, 14, 3, 10, 7, 1, 12\\n                ],\\n                [\\n                    7, 10, 1, 15, 0, 12, 11, 5,\\n                    14, 9, 8, 3, 9, 7, 4, 8,\\n                    13, 6, 2, 1, 6, 11, 12, 2,\\n                    3, 0, 5, 14, 10, 13, 15, 4,\\n                    13, 3, 4, 9, 6, 10, 1, 12,\\n                    11, 0, 2, 5, 0, 13, 14, 2,\\n                    8, 15, 7, 4, 15, 1, 10, 7,\\n                    5, 6, 12, 11, 3, 8, 9, 14\\n                ],\\n                [\\n                    2, 4, 8, 15, 7, 10, 13, 6,\\n                    4, 1, 3, 12, 11, 7, 14, 0,\\n                    12, 2, 5, 9, 10, 13, 0, 3,\\n                    1, 11, 15, 5, 6, 8, 9, 14,\\n                    14, 11, 5, 6, 4, 1, 3, 10,\\n                    2, 12, 15, 0, 13, 2, 8, 5,\\n                    11, 8, 0, 15, 7, 14, 9, 4,\\n                    12, 7, 10, 9, 1, 13, 6, 3\\n                ],\\n                [\\n                    12, 9, 0, 7, 9, 2, 14, 1,\\n                    10, 15, 3, 4, 6, 12, 5, 11,\\n                    1, 14, 13, 0, 2, 8, 7, 13,\\n                    15, 5, 4, 10, 8, 3, 11, 6,\\n                    10, 4, 6, 11, 7, 9, 0, 6,\\n                    4, 2, 13, 1, 9, 15, 3, 8,\\n                    15, 3, 1, 14, 12, 5, 11, 0,\\n                    2, 12, 14, 7, 5, 10, 8, 13\\n                ],\\n                [\\n                    4, 1, 3, 10, 15, 12, 5, 0,\\n                    2, 11, 9, 6, 8, 7, 6, 9,\\n                    11, 4, 12, 15, 0, 3, 10, 5,\\n                    14, 13, 7, 8, 13, 14, 1, 2,\\n                    13, 6, 14, 9, 4, 1, 2, 14,\\n                    11, 13, 5, 0, 1, 10, 8, 3,\\n                    0, 11, 3, 5, 9, 4, 15, 2,\\n                    7, 8, 12, 15, 10, 7, 6, 12\\n                ],\\n                [\\n                    13, 7, 10, 0, 6, 9, 5, 15,\\n                    8, 4, 3, 10, 11, 14, 12, 5,\\n                    2, 11, 9, 6, 15, 12, 0, 3,\\n                    4, 1, 14, 13, 1, 2, 7, 8,\\n                    1, 2, 12, 15, 10, 4, 0, 3,\\n                    13, 14, 6, 9, 7, 8, 9, 6,\\n                    15, 1, 5, 12, 3, 10, 14, 5,\\n                    8, 7, 11, 0, 4, 13, 2, 11\\n                ]\\n            ]\\n            bitTransform = (t, r, e) => {\\n                let n = Long(0);\\n                return range(r).forEach(r => {\\n                    t[r].isNegative() || e.and(arrayMask[t[r].low]).equals(0) || (n = n.or(arrayMask[r]))\\n                }), n\\n            }\\n            DES64 = (t, r) => {\\n                e = [],\\n                    n = [];\\n                f = bitTransform(arrayIP, 64, r);\\n                return n[0] = f.and(4294967295),\\n                    n[1] = f.and(-4294967296).shiftRight(32),\\n                    range(16).forEach(r => {\\n                        let f = Long(0);\\n                        i = Long(n[1]),\\n                            i = bitTransform(arrayE, 64, i).xor(t[r]),\\n                            range(8).forEach(t => {\\n                                e[t] = i.shiftRight(8 * t).and(255)\\n                            }),\\n                            range(8).reverse().forEach(t => {\\n                                f = f.shiftLeft(4).or(matrixNSBox[t][e[t]])\\n                            }),\\n                            i = bitTransform(arrayP, 32, f),\\n                            o = Long(n[0]),\\n                            n[0] = Long(n[1]),\\n                            n[1] = o.xor(i)\\n                    }),\\n                    n.reverse(),\\n                    f = n[1].shiftLeft(32).and(-4294967296).or(n[0].and(4294967295)),\\n                    f = bitTransform(arrayIP_1, 64, f)\\n            }\\n            subKeys = (t, r) => {\\n                let n = bitTransform(arrayPC_1, 56, t);\\n                range(16).forEach(t => {\\n                    n = n.and(arrayLsMask[arrayLs[t]]).shiftLeft(28 - arrayLs[t]).or(n.and(arrayLsMask[arrayLs[t]].not()).shiftRight(arrayLs[t])),\\n                        r[t] = bitTransform(arrayPC_2, 64, n)\\n                })\\n            }\\n            b = function(t) {\\n                const r = Buffer.from(\\\"ylzsxkwm\\\");\\n                let n = Long(0);\\n                range(8).forEach(t => {\\n                    n = Long(r[t]).shiftLeft(8 * t).or(n)\\n                });\\n                const o = Math.floor(t.length / 8),\\n                    i = range(16).map(() => Long(0));\\n                subKeys(n, i);\\n                const f = range(o).map(() => Long(0));\\n                range(o).forEach(r => {\\n                    range(8).forEach(e => {\\n                        f[r] = Long(t[e + 8 * r]).shiftLeft(8 * e).or(f[r])\\n                    })\\n                });\\n                const s = [];\\n                range(o).forEach(t => {\\n                    s[t] = DES64(i, f[t])\\n                });\\n                const u = t.slice(8 * o);\\n                let h = Long(0);\\n                range(t.length % 8).forEach(t => {\\n                    h = Long(u[t]).shiftLeft(8 * t).or(h)\\n                }), s[o] = DES64(i, h);\\n                const a = [];\\n                let c = 0;\\n                return s.forEach(t => {\\n                    range(8).forEach(r => {\\n                        a[c] = t.shiftRight(8 * r).and(255).low;\\n                        c++\\n                    })\\n                }), a;\\n            }(Buffer.from(t));\\n            return window.btoa(String.fromCharCode.apply(null, b));\\n        }, t));\\n    }\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"❺mg\",\"path\":\"mg\",\"rule\":\"eval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配')).rule);\\nconst this_platform = \\\"mg\\\"; // c.musicapp.migu.cn;\\nconst this_host = \\\"https://app.c.nf.migu.cn/MIGUM3.0/v1.0/\\\";\\n\\n\\nfunction ajax(uri, size, head) {\\n    let type1 = /^https?:\\\\/\\\\//.test(uri);\\n    let type2 = typeof size === 'object';\\n    if (type2) {\\n        uri = type1 ? uri : \\\"migu/remoting/\\\" + uri + \\\"_tag\\\";\\n        uri = buildUrl(uri, size);\\n    } else {\\n        uri = type1 ? uri : \\\"migumusic/h5/\\\" + uri;\\n        if (!type1 && /playlist\\\\/(list|songsInfo)|search\\\\/song|\\\\/home/i.test(uri))\\n            uri += \\\"&pageNum=\\\" + MY_PAGE + \\\"&pageSize=\\\" + (size || 30);\\n    }\\n    let json = JSON.parse(fetch(type1 ? uri : \\\"https://m.music.migu.cn/\\\" + uri, {\\n        \\\"headers\\\": Object.assign({\\n            \\\"Referer\\\": \\\"https://m.music.migu.cn/v4/\\\",\\n            \\\"User-Agent\\\": MOBILE_UA,\\n            \\\"By\\\": md5(MOBILE_UA),\\n            \\\"channel\\\": \\\"014000D\\\",\\n        }, head || {})\\n    }));\\n    return type2 ? json : json.data;\\n}\\n\\n\\nfunction ajax2(resourceType, xId, run) {\\n    let u, p = {\\n        needSimple: \\\"01\\\"\\n    };\\n    switch (resourceType) {\\n        case \\\"D\\\": // 视频\\n        case \\\"2\\\": // 歌曲\\n        case \\\"5\\\": // 专辑(新)\\n        case \\\"2003\\\": // 专辑(旧)\\n            u = \\\"content/resourceinfo.do\\\";\\n            p[\\\"resourceType\\\"] = resourceType;\\n            p[\\\"copyrightId\\\"] = xId;\\n            p[\\\"resourceId\\\"] = xId;\\n            resourceType = false;\\n            break;\\n        default:\\n            u = resourceType;\\n            p = Object.assign(p, xId || {});\\n            resourceType = true;\\n            break;\\n    };\\n    let Json = JSON.parse(fetch(buildUrl(this_host + u, p), {\\n        timeout: 3000\\n    }).replace(/},(}|])/g, '}$1')) || {};\\n    if (resourceType) return Json;\\n    return Json.resource[0] || {};\\n}\\n\\n\\nfunction _formatting(_, r2) {\\n    let name = _.songName || _.name;\\n    let singer = (_.singers || _.singerList || (_.singer && [_.singer]) || []).map(_ => _.name || _).join(\\\"&\\\");\\n    let interval = _.duration || _[\\\"length\\\"];\\n    if (Number(interval)) interval = Hms(interval * 1000);\\n    let songId = _.songId;\\n    let picUrl = _.img1 || _.img2 || _.img3 || _.landscapImg || _.mediumPic || (_.albumImgs && _.albumImgs[0].img) || \\\"\\\";\\n    if (picUrl) picUrl = 'https://' + picUrl.split('//')[1];\\n    let albumName = (_.album && _.album.albumName) || _.album || \\\"\\\";\\n    let albumId = _.albumId || (_.album && _.album.albumId) || \\\"\\\";\\n    let qualitys = [];\\n    if (_.fullSong) {\\n        for (let k1 of ['fullSong', 'hq', 'sq', 'bit24']) {\\n            if (_[k1]) {\\n                qualitys.push({\\n                    type: {\\n                        fullSong: \\\"128k\\\",\\n                        hq: \\\"320k\\\",\\n                        sq: \\\"flac\\\",\\n                        bit24: \\\"flac24bit\\\"\\n                    }[k1],\\n                    size: Size(_[k1].size)\\n                });\\n            }\\n        }\\n    } else {\\n        let k2 = (_.newRateFormats || _.audioFormats || [{\\n            formatType: \\\"PQ\\\"\\n        }]).filter(_ => /^(PQ|HQ|SQ|ZQ2?4?)$/i.test(_.formatType))\\n        for (let k of k2) {\\n            qualitys.push({\\n                type: {\\n                    PQ: \\\"128k\\\",\\n                    HQ: \\\"320k\\\",\\n                    SQ: \\\"flac\\\",\\n                    ZQ: \\\"flac24bit\\\",\\n                    ZQ24: \\\"flac24bit\\\",\\n                }[k.formatType],\\n                size: Size(k.size || k.androidSize || k.iosSize || k.asize || k.isize)\\n            });\\n        }\\n    }\\n    let copyrightId = _.copyrightId;\\n    // let contentId = _.contentId;\\n    let lrcUrl = _.lrcUrl || _.lyricUrl || (_.ext && _.ext.lrcUrl);\\n    let mrcUrl = _.mrcUrl;\\n    let trcUrl = _.trcUrl;\\n\\n    let content = (_.fullSong ? _.fullSong.vipFlag : (_.vipType || _.restrictType)) > 0 ? 1 : 0;\\n    Extra({\\n        name,\\n        singer,\\n        interval,\\n        songId,\\n        albumName,\\n        albumId,\\n        picUrl,\\n        qualitys,\\n        copyrightId,\\n        lrcUrl,\\n        trcUrl,\\n        mrcUrl,\\n        content,\\n    }, ((typeof r2 === 'object') ? Object.assign(r2, {\\n        songName: name,\\n        userName: singer,\\n        songTime: interval,\\n        albumName: albumName || name\\n    }) : r2));\\n}\\n$.exports = {\\n    _formatting,\\n    iTag: function() {\\n        iTag[\\\"推荐\\\"] = {};\\n        iTag[\\\"推荐\\\"][\\\"精选歌单\\\"] = \\\"home/songlist?columnId=\\\";\\n        iTag[\\\"推荐\\\"][\\\"热门歌单\\\"] = \\\"playlist/list?columnId=38199588\\\";\\n        iTag[\\\"推荐\\\"][\\\"推荐歌单\\\"] = \\\"playlist/list?columnId=15127315\\\";\\n        iTag[\\\"推荐\\\"][\\\"最新歌单\\\"] = \\\"playlist/list?columnId=15127272&tagId=\\\";\\n        ajax(\\\"playlist/allTag\\\").tags.map(_ => {\\n            iTag[_.tagName] = {};\\n            _.tags.map(__ =>\\n                iTag[_.tagName][__.tagName] = iTag[\\\"推荐\\\"][\\\"最新歌单\\\"] + __.tagId\\n            );\\n        });\\n        iTag[\\\"排行\\\"] = {};\\n        /* 网页接口没有歌曲大小参数\\n        ajax(\\\"billboard/tree\\\").map(_ => {\\n            if (!/乐·榜/.test(_.columnTitle)) {\\n                iTag[\\\"排行\\\"][_.columnTitle] = _.billBoardVos.map(_ => Extra({\\n                    name: _.columnTitle,\\n                    picUrl: 'https:' + _.columnSmallPic,\\n                    content: 3,\\n                    sourceListId: _.pathName\\n                }, 1, 1));\\n            }\\n        });\\n        */\\n        iTag[\\\"排行\\\"][\\\"榜单\\\"] = [];\\n        let rawList = ajax2(\\\"template/rank-list/release\\\").data.contentItemList;\\n        for (let board of rawList) {\\n            if (board.template != 'group1') continue\\n            for (let item of board.itemList) {\\n                if ((item.template != 'row1' && item.template != 'grid1' && !item.actionUrl) || !item.actionUrl.includes('rank-info')) continue\\n                let data = item.displayLogId.param;\\n                iTag[\\\"排行\\\"][\\\"榜单\\\"].push(Extra({\\n                    name: data.rankName,\\n                    picUrl: item.imageUrl,\\n                    content: 3,\\n                    sourceListId: data.rankId\\n                }, 1, 1));\\n            }\\n        }\\n        storage0.putMyVar(\\\"mg_iTag\\\", iTag);\\n    },\\n    mv: function(_, t1) {\\n        let mvhost = \\\"http://freevod.nf.migu.cn:8080\\\";\\n        let mvinfo = ajax2(\\\"2\\\", t1).relatedSongs\\n            .find(_ => _.resourceType == \\\"D\\\") || {};\\n        let names = [];\\n        let urls = [];\\n        /* m3u8\\n                let mvhash = mvinfo.productId;\\n                mvhost = this_host.replace(\\\"v1.0/\\\", \\\"strategy/mvplayinfo/by-priority/v1.0?canFallback=true&contentId=\\\" + mvhash + \\\"&formatType=\\\");\\n                [\\\"HQ\\\", \\\"PQ\\\"].map(Type => {\\n                    let u = JSON.parse(fetch(mvhost + Type)).data;\\n                    if (u && u.playUrl) {\\n                        names.push({\\n                            PQ: \\\"【标清】 240P\\\",\\n                            HQ: \\\"【高清】 480P\\\",\\n                        }[Type]);\\n                        urls.push(u.playUrl);\\n                    }\\n                });\\n        */\\n        let mvhash = mvinfo.copyrightId;\\n        if (mvhash) {\\n            mvinfo = ajax2(\\\"D\\\", mvhash).rateFormats || [];\\n            mvinfo.map(_ => {\\n                if (_.url && _.formatType != \\\"UHD\\\") {\\n                    names.push({\\n                        LQ: \\\"【标清】 240P\\\",\\n                        PQ: \\\"【高清】 480P\\\",\\n                        HQ: \\\"【超清】 720P\\\",\\n                        SQ: \\\"【蓝光】 1080P\\\",\\n                        UHD: \\\"【加密】 ???P\\\"\\n                    }[_.formatType] || \\\"【未知】 ???P\\\");\\n                    urls.push(mvhost + _.url);\\n                }\\n            });\\n        }\\n        return [names.reverse(), urls.reverse()];\\n    },\\n    getLyric: function(_, t1) {\\n        let lrc;\\n        try { // urlReg(/\\\\/songs$/) #获取单曲基础信息\\n            lrc = ajax(\\\"https://music.migu.cn/v3/api/music/audioPlayer/getLyric\\\", {\\n                type: 1, // 1=单曲, 2=专辑, 3=歌单\\n                copyrightId: t1\\n            }, {\\n                Referer: \\\"https://app.c.nf.migu.cn/\\\"\\n            }).lyric;\\n        } catch (err) {}\\n        return lrc || \\\"\\\";\\n    },\\n    lazy: function(platform, t1, t2, t3) {\\n        let title, author, desc, img, time, tags, total, list;\\n        let _ = t1;\\n        t1 = _.copyrightId || _.sourceListId;\\n        switch (String(platform)) {\\n            case '0': // 详情\\n                if (t2) {\\n                    return $.require(\\\"jiexi?rule=歌词适配\\\").GetMusicUrl(\\\"down\\\", \\\"mg\\\", t1, t3, _);\\n                }\\n                let f = _.qualitys;\\n                // 链接\\n                var url, ii, lrc = _.lrcUrl;\\n                switch (ii = t3) {\\n                    case '3':\\n                        if (ii == 3) {\\n                            if (f[3] && f[3].type == 'flac24bit') {\\n                                [url, lrc, ii] = $.require(\\\"jiexi?rule=歌词适配\\\").GetMusicUrl(\\\"open\\\", \\\"mg\\\", t1, 3, _, lrc, ii);\\n                                if (url) break;\\n                            } else ii = 2;\\n                        }\\n                    case '2':\\n                        if (ii == 2) {\\n                            if (f[2] && f[2].type == 'flac') {\\n                                [url, lrc, ii] = $.require(\\\"jiexi?rule=歌词适配\\\").GetMusicUrl(\\\"open\\\", \\\"mg\\\", t1, 2, _, lrc, ii);\\n                                log('2: ' + ii + ':' + url);\\n                                if (url) break;\\n                            } else ii = 1;\\n                        }\\n                    case '1':\\n                        if (ii == 1) {\\n                            if (f[1] && f[1].type == '320k') {\\n                                [url, lrc, ii] = $.require(\\\"jiexi?rule=歌词适配\\\").GetMusicUrl(\\\"open\\\", \\\"mg\\\", t1, 1, _, lrc, ii);\\n                                if (url) break;\\n                            } else ii = 0;\\n                        }\\n                    default:\\n                        try {\\n                            if (_.content == \\\"1\\\") {\\n                                throw new Error('is vip music');\\n                            }\\n                            __ = ajax(\\\"cms_detail\\\", {\\n                                cpid: t1\\n                            }).data || {};\\n                            lrc = __.lyricLrc;\\n                            url = __.lisQq || __.listenUrl;\\n                            if (!url) {\\n                                throw new Error('no get purl');\\n                            }\\n                        } catch (isVipMusic) {\\n                            [url, lrc, ii] = $.require(\\\"jiexi?rule=歌词适配\\\").GetMusicUrl(\\\"open\\\", \\\"mg\\\", t1, 0, _, lrc, ii);\\n                        }\\n                        break;\\n                }\\n                return [url, lrc, ii];\\n                break;\\n            case '1': // 首页\\n                _ = ajax(uri);\\n                list = _.items || _[0].items;\\n                list.map(_ => Extra({\\n                    name: _.name || _.title || _.playListName,\\n                    picUrl: _.img || _.image,\\n                    content: 2,\\n                    sourceListId: _.id || _.playListId,\\n                    col_type: t2\\n                }, 1));\\n                return _.total || ((MY_PAGE - 1) * 30 + list.length);\\n                break;\\n            case '2': // 发现\\n                _ = ajax(`playlist/info?songListId=${t1}`);\\n\\n                title = _.playListName;\\n                author = _.createUserName || \\\"咪咕音乐\\\";\\n                desc = _.summary;\\n                img = _.image ? \\\"https://\\\" + _.image.split(\\\"//\\\")[1] : \\\"\\\";\\n                time = _.updateTime.split(\\\" \\\")[0];\\n                tags = (_.tagLists || []).map(_ => _.tagName).join(\\\"、\\\");\\n\\n                total = _.contentCount;\\n                // _ = ajax(`playlist/songsInfo?palylistId=${t1}`, total);\\n                _ = ajax2(\\\"user/queryMusicListSongs.do\\\", {\\n                    musicListId: t1,\\n                    pageNo: MY_PAGE,\\n                    pageSize: total\\n                });\\n                break;\\n            case '3': // 排行\\n                // _ = ajax(`billboard/home?pathName=${t1}`);\\n                _ = ajax2(\\\"content/querycontentbyId.do\\\", {\\n                    columnId: t1,\\n                    needAll: 0\\n                }).columnInfo;\\n\\n                time = String(_.columnUpdateTime || _.updateTime).split(\\\" \\\")[0];\\n                title = _.name || _.columnTitle;\\n                author = \\\"咪咕音乐\\\";\\n                desc = _.columnDes || \\\"\\\";\\n                img = _.columnPicUrl || MY_PARAMS.img || \\\"\\\";\\n                tags = _.type || _.columnSubtitle || \\\"\\\";\\n\\n                // _ = _.songs;\\n                total = _.itemTotal || _.contentsCount;\\n                break;\\n            case '4': // 专辑\\n                // _ = ajax2(\\\"2003\\\", t1);\\n                _ = ajax2(\\\"content/queryAlbumSong\\\", {\\n                    albumId: t1,\\n                    pageNo: MY_PAGE,\\n                    pageSize: 30\\n                });\\n                _ = _.songList.length ? _ : ajax2(\\\"5\\\", t1);\\n\\n                time = _.firstStartDate || \\\"\\\";\\n                title = _.title || getPageTitle();\\n                author = _.singer || \\\"咪咕音乐\\\";\\n                desc = _.summary || \\\"\\\";\\n                img = (_.imgItem && _.imgItem[0] && _.imgItem[0].img) || MY_PARAMS.img || \\\"\\\";\\n                tags = _.tagItems || \\\"\\\";\\n\\n                total = _.totalCount;\\n                break;\\n            case '5': // 歌手\\n                // _ = ajax(\\\"singer/getSingerDetail?singerId=\\\"+t1);// sam=111 #同时获取专辑&mv\\n                // _ = ajax(\\\"singer/getSingerSAM?singerId=\\\" + t1 + \\\"&pageNo=\\\" + MY_PAGE + \\\"&pageSize=30&sam=100\\\").song || {};\\n                _ = ajax2(\\\"content/singer_songs.do\\\", {\\n                    resourceType: 2,\\n                    singerId: t1,\\n                    pageNo: MY_PAGE,\\n                    pageSize: 30\\n                });\\n                time = \\\"\\\";\\n                title = _.singer.singer || getPageTitle();\\n                author = _.singer.artistNamePinyin || \\\"咪咕音乐\\\";\\n                desc = _.singer.summary || \\\"\\\";\\n                img = (_.singer.imgs && _.singer.imgs[0] && _.singer.imgs[0].img) || MY_PARAMS.img || \\\"\\\";\\n                tags = \\\"\\\";\\n                total = _.songNum;\\n                break;\\n        }\\n\\n        list = _.items || _.list || _.contents || _.songItems || _.songList || _.songlist || [];\\n        if (t2) return list;\\n        list.map(_ => {\\n            _formatting(_.objectInfo || _, t3 || {});\\n        });\\n        return {\\n            title,\\n            author,\\n            desc,\\n            img,\\n            time,\\n            tags,\\n            total: total || ((MY_PAGE - 1) * 30 + list.length)\\n        }\\n    },\\n\\n\\n\\n    search: function(platform, keyword, isU) {\\n        let _;\\n        if (isU != \\\"url\\\") {\\n            let list, __ = {\\n                lib: (_) => true,\\n                paid: (_) => (_.fullSong ? _.fullSong.vipFlag : _.restrictType) > 0,\\n                free: (_) => (_.fullSong ? _.fullSong.vipFlag : _.restrictType) < 1,\\n                lyric: (_) => true,\\n                mv: (_) => true\\n            };\\n            let surl_web = (stype, erri) => {\\n                try {\\n                    return ajax(\\\"search/\\\" + stype + \\\"?text=\\\" + keyword);\\n                } catch (err) {\\n                    if (erri < 3) {\\n                        return surl_web(stype, erri + 1);\\n                    } else {\\n                        return [];\\n                    }\\n                }\\n            }\\n            let surl_app = (stype, spath) => {\\n                let deviceId = '963B7AA0D21511ED807EE5846EC87D20';\\n                let timestamp = Date.now().toString();\\n                let sign = '6cdc72a439cef99a3418d2a78aa28c73';\\n                sign = md5([keyword + sign, deviceId + timestamp].join(\\\"yyapp2d16148780a1dcc7408e06336b98cfd50\\\"));\\n                let Switch = {\\n                    \\\"song\\\": 0, // 单曲\\n                    \\\"songList\\\": 0, // 歌单\\n                    \\\"mvSong\\\": 0, // 视频\\n                    \\\"lyricSong\\\": 0, // 歌词\\n                    \\\"album\\\": 0, // 专辑\\n                    \\\"singer\\\": 0, // 歌手\\n                    \\\"tagSong\\\": 0, // 标签\\n                    \\\"bestShow\\\": 0, // 热门\\n                    \\\"concert\\\": 0, // 现场\\n                };\\n                Switch[stype] = 1;\\n                return ajax(\\\"https://jadeite.migu.cn/music_search/v3/search/searchAll\\\", {\\n                    isCorrect: 0,\\n                    isCopyright: 1,\\n                    searchSwitch: JSON.stringify(Switch),\\n                    pageSize: 30,\\n                    text: encodeURIComponent(keyword),\\n                    pageNo: MY_PAGE,\\n                    sort: 0,\\n                    sid: \\\"USS\\\"\\n                }, {\\n                    sign,\\n                    deviceId,\\n                    timestamp,\\n                    channel: '0146921',\\n                    uiVersion: 'A_music_3.6.1',\\n\\n                    By: '',\\n                    Referer: '',\\n                    'User-Agent': 'Mozilla/5.0 (Linux; U; Android 11.0.0; zh-cn; MI 11 Build/OPR1.170623.032) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30',\\n                })[(spath || stype) + \\\"ResultData\\\"];\\n            }\\n            switch (String(platform)) {\\n                case '0': // 搜索单曲\\n                    // _ = surl_web('song', 0);\\n                    _ = surl_app({\\n                        lyric: \\\"lyricSong\\\",\\n                        mv: \\\"mvSong\\\"\\n                    }[isU] || \\\"song\\\", isU == \\\"lyric\\\" ? \\\"lyric\\\" : 0);\\n                    list = _.items || _.resultList || _.result;\\n                    if (isU == 'mv') {\\n                        list = function() {\\n                            let cIds = [];\\n                            list.map(_ => {\\n                                try {\\n                                    let a = [];\\n                                    for (let p of [\\\"mvList\\\", \\\"relatedSongs\\\"]) {\\n                                        a = _[p] || [];\\n                                        for (let b of a) {\\n                                            let cId = b.copyrightId;\\n                                            if (cIds.indexOf(cId) == -1) {\\n                                                cIds.push(cId);\\n                                            }\\n                                        }\\n                                    }\\n                                } catch (e) {};\\n                            });\\n                            let dIds = [];\\n                            cIds.map(cId => {\\n                                try { // 从网页获取resourceId，没找到其他接口\\n                                    let cUrl = \\\"https://music.migu.cn/v3/video/mv/\\\" + cId;\\n                                    let dId = pdfh(fetch(cUrl, {\\n                                        timeout: 3000\\n                                    }), \\\".download&&href\\\").replace(/^.*\\\\//, \\\"\\\");\\n                                    if (dId && dIds.indexOf(dId) == -1) {\\n                                        dIds.push(ajax2(\\\"2\\\", dId));\\n                                    }\\n                                } catch (e) {}\\n                            });\\n                            return dIds;\\n                        }();\\n                    }\\n                    let r1 = getMyVar('search_down', '0') == '1' ? 2 : 1;\\n                    list.map(_ => {\\n                        if (Array.isArray(_)) {\\n                            _.map(_ => {\\n                                if (__[isU](_)) _formatting(_, r1);\\n                            });\\n                        } else {\\n                            if (__[isU](_)) _formatting(_, r1);\\n                        }\\n                    });\\n                    break;\\n                case '1': // 搜索歌单\\n                    // _ = surl_web('songList', 0);\\n                    isU = {\\n                        songs: { // 歌单\\n                            u: \\\"songList\\\",\\n                            c: \\\"2\\\"\\n                        },\\n                        album: { // 专辑\\n                            u: \\\"album\\\",\\n                            c: \\\"4\\\"\\n                        },\\n                        artist: { // 歌手\\n                            u: \\\"singer\\\",\\n                            c: \\\"5\\\"\\n                        }\\n                    }[isU];\\n                    _ = surl_app(isU.u, 0);\\n                    list = _.items || _.result;\\n                    list.map(_ => Extra({\\n                        name: _.name,\\n                        picUrl: _.img || _.musicListPicUrl ||\\n                            (_.imgItems && _.imgItems[0] && _.imgItems[0].img) ||\\n                            (_.singerPicUrl && _.singerPicUrl[0] && _.singerPicUrl[0].img) || \\\"\\\",\\n                        content: isU.c,\\n                        sourceListId: _.id\\n                    }, 1));\\n                    break;\\n            }\\n            return _.total || _.totalCount || ((MY_PAGE - 1) * 30 + list.length);\\n        } else { // 搜索 分享链接\\n            switch (String(platform)) {\\n                case '0': // 搜索单曲\\n                    _ = ajax2(\\\"2\\\", keyword);\\n                    if (run == 'mv') return _;\\n                    _formatting(_, 1);\\n                    break;\\n                case '1': // 搜索歌单\\n                    _ = ajax(`playlist/info?songListId=${keyword}`);\\n                    Extra({\\n                        name: _.playListName,\\n                        picUrl: (_.image && 'https://' + _.image.split('//')[1]) || \\\"\\\",\\n                        content: 2,\\n                        sourceListId: _.playListId\\n                    }, 1);\\n                    break;\\n            }\\n            return 0;\\n        }\\n    },\\n    ajax,\\n    ajax2\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"❻5s\",\"path\":\"5s\",\"rule\":\"eval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配')).rule);\\nconst this_platform = \\\"5s\\\";\\n\\n/* \\nparams = getParams([\\n    \\\"version=6.6.70\\\",\\n    \\\"appid=3146\\\",\\n    \\\"clienttime=\\\" + Math.ceil(Date.now() / 1000),\\n    \\\"clientver=610850\\\",\\n    \\\"dfid=-\\\",\\n    \\\"from=com.sing.client.player\\\",\\n    \\\"mid=114514\\\",\\n    \\\"songfields=ID,SN,SK,SW,SS,ST,SI,CT,M,S,ZQ,WO,ZC,HY,YG,CK,D,RQ,DD,E,R,RC,SG,C,CS,LV,LG,SY,UID,PT,SCSR,SC,KM5\\\",\\n    \\\"token=\\\",\\n    \\\"userfields=ID,NN,I,YCRQ,FCRQ\\\",\\n    \\\"uuid=-\\\"\\n], \\\"UqgPMZpjgRZQ7s8JAuUIP5DQdo5O5NB\\\")\\n*/\\n// https://5sapi.kugou.com\\n// https://5sservice.kugou.com\\n// http://service.5sing.kugou.com\\n// http://mobileapi.5sing.kugou.com\\nlet ajax = (uri, run) => {\\n    if (!uri.match(/https?\\\\:\\\\/\\\\//i)) uri = \\\"https://5sapi.kugou.com/\\\" + uri;\\n    return JSON.parse(fetch(uri))[run || \\\"data\\\"];\\n}\\nlet getMusicInfo = (uType, t1, t2) => ajax(`song/${uType}?songid=${t1}&songtype=${t2}`);\\nlet getSongUrl = (songid, songtype, appid, signkey) => {\\n    let host = \\\"https://5sservice.kugou.com/song/getSongUrl?\\\";\\n    let time = new Date().getTime();\\n    let body = \\\"\\\";\\n    let uuid = R(32);\\n    let appid = appid || \\\"2918\\\";\\n    let signkey = signkey || \\\"5uytoxQewcvIc1gn1PlNF0T2jbbOzRl5\\\";\\n    let params = [\\n        \\\"clientver=1000\\\",\\n        \\\"clienttime=\\\" + time,\\n        \\\"mid=\\\" + uuid,\\n        \\\"uuid=\\\" + uuid,\\n        \\\"dfid=-\\\",\\n        \\\"appid=\\\" + appid,\\n        \\\"version=6.6.70\\\",\\n        \\\"songid=\\\" + songid,\\n        \\\"songtype=\\\" + songtype,\\n    ].sort();\\n    params = params.join(\\\"&\\\") + \\\"&signature=\\\" + md5(signkey + params.join(\\\"\\\") + body + signkey);\\n    return JSON.parse(fetch(host + params)).data;\\n}\\n\\nfunction _formatting(_, songId, songtype, r2) {\\n    var _ = Object.assign(_, getMusicInfo(\\\"newget\\\", songId, songtype));\\n    let name = _.songName || _.SN;\\n    let singer = (_.user && _.user.NN) || \\\"\\\";\\n    let interval = \\\"\\\";\\n    let albumName = {\\n        yc: \\\"原唱\\\",\\n        fc: \\\"翻唱\\\",\\n        bz: \\\"伴奏\\\"\\n    }[songtype];\\n    let albumId = {\\n        yc: 1,\\n        fc: 2,\\n        bz: 3\\n    }[songtype]\\n    let picUrl = (_.user && _.user.I) || \\\"\\\";\\n    let qualitys = [];\\n    for (let k of ['lq', 'hq', 'sq']) {\\n        if (_[k + 'size']) {\\n            qualitys.push({\\n                type: {\\n                    lq: \\\"128k\\\",\\n                    hq: \\\"320k\\\",\\n                    sq: \\\"flac\\\",\\n                }[k],\\n                size: Size(_[k + 'size'])\\n            });\\n        }\\n    }\\n    Extra({\\n        name,\\n        singer,\\n        interval,\\n        songId,\\n        albumName,\\n        albumId,\\n        picUrl,\\n        qualitys,\\n        lrcUrl: _.dynamicWords,\\n\\n        content: songtype\\n    }, ((typeof r2 === 'object') ? Object.assign(r2, {\\n        songName: name,\\n        userName: singer,\\n        songTime: qualitys[qualitys.length - 1].type,\\n        albumName\\n    }) : r2));\\n}\\n$.exports = {\\n    _formatting,\\n    iTag: function() {\\n        iTag[\\\"推荐\\\"] = {};\\n        iTag[\\\"推荐\\\"][\\\"最热\\\"] = \\\"\\\";\\n        iTag[\\\"推荐\\\"][\\\"最新\\\"] = \\\"&type=1\\\";\\n        let list = pdfa(fetch(\\\"http://5sing.kugou.com/gd/gdList\\\"), \\\"body&&.r_list_t\\\");\\n        for (let item of list) {\\n            let t1 = pdfh(item, \\\"h3&&Text\\\");\\n            iTag[t1] = {};\\n            pdfa(item, \\\"ul&&li\\\").map(it => {\\n                t2 = pdfh(it, \\\"a&&Text\\\");\\n                iTag[t1][t2] = t2;\\n            });\\n        }\\n        iTag[\\\"排行\\\"] = {};\\n        iTag[\\\"排行\\\"][\\\"全部\\\"] = ajax(\\\"rank/list\\\")\\n            .map(_ => Extra({\\n                name: _.name,\\n                picUrl: _.photoBig || _.photo,\\n                content: 3,\\n                sourceListId: _.id\\n            }, 1, 1));\\n        iTag[\\\"排行\\\"][\\\"分区\\\"] = [\\\"古风\\\", \\\"流行\\\", \\\"欧美\\\", \\\"日语\\\", \\\"民谣\\\", \\\"动漫/游戏\\\", \\\"摇滚\\\", \\\"影视\\\", \\\"电子\\\", \\\"民族\\\", \\\"广播剧\\\", \\\"HIP-HOP\\\"]\\n            .map(name => Extra({\\n                name: name,\\n                picUrl: null,\\n                content: 3,\\n                sourceListId: name\\n            }, 1, 1));\\n        storage0.putMyVar(\\\"5s_iTag\\\", iTag);\\n    },\\n    mv: function(_, t1) {\\n        return [\\n            [],\\n            []\\n        ];\\n    },\\n    getLyric: function(_, t1) {\\n        let lrc;\\n        try {\\n            // 歌词\\n            let t2 = _.albumId;\\n            lrc = ajax(`http://service.5sing.kugou.com/song/detail?songId=${t1}&songType=${t2}`).lyrics;\\n            if (!lrc) {\\n                t2 = _.content;\\n                lrc = getMusicInfo(\\\"newget\\\", t1, t2).dynamicWords;\\n                if (!lrc) {\\n                    lrc = ajax(`http://5sing.kugou.com/fm/m/json/lrc?songId=${t1}&songType=${t2}`, \\\"txt\\\");\\n                }\\n            }\\n        } catch (err) {}\\n        return lrc || \\\"\\\";\\n    },\\n    lazy: function(platform, t1, t2, t3) {\\n        let title, author, desc, img, time, tags, total, list;\\n        let _ = t1;\\n        t1 = _.songId || _.sourceListId;\\n        switch (String(platform)) {\\n            case '0': // 歌曲详情\\n                let url, lrc, q1 = [\\\"lq\\\", \\\"hq\\\", \\\"sq\\\", \\\"sq\\\"];\\n                let __ = getMusicInfo(\\\"getSongUrl\\\", t1, _.content) || getSongUrl(t1, _.content);\\n\\n                if (t2) { // 下载\\n                    url = __[q1[t3] + \\\"url\\\"] || __[q1[t3] + \\\"url_backup\\\"];\\n                    return [url || \\\"toast://音质不存在\\\", lrc, t3];\\n                }\\n                let q2;\\n                switch (t3) {\\n                    case '3':\\n                    case '2':\\n                        q2 = [2, 1, 0];\\n                        break;\\n                    case '1':\\n                        q2 = [1, 2, 0];\\n                        break;\\n                    default:\\n                        q2 = [0, 1, 2];\\n                        break;\\n                }\\n                for (let k of q2) {\\n                    url = __[q1[k] + \\\"url\\\"] || __[q1[k] + \\\"url_backup\\\"];\\n                    if (url) {\\n                        return [url, lrc, k];\\n                        break;\\n                    }\\n                }\\n                return [\\\"toast://无法解析\\\", lrc, t3];\\n                break;\\n            case '1': //首页\\n                let html = fetch(\\\"http://5sing.kugou.com/gd/gdList?&tagName=\\\" + t1 + \\\"&page=\\\" + MY_PAGE);\\n                list = pdfa(html, \\\"body&&.album\\\");\\n                for (let item of list) {\\n                    let title = pdfh(item, \\\".jx_name&&Text\\\");\\n                    let img = pdfh(item, \\\"img&&src\\\");\\n                    let zyid = pdfh(item, \\\"a,1&&songlistid\\\");\\n                    Extra({\\n                        name: title,\\n                        picUrl: img,\\n                        content: 2,\\n                        sourceListId: zyid,\\n                        col_type: t2\\n                    }, 1);\\n                }\\n                return (MY_PAGE - 1) * 16 + list.length;\\n                break;\\n            case '2': // 发现\\n                if (MY_PAGE == 1) {\\n                    // _ = ajax(\\\"song/getPlayListSong?id=\\\" + t1);\\n                    _ = ajax(\\\"song/getSongList?id=\\\" + t1);\\n                    title = _.T;\\n                    author = _.user.NN;\\n                    desc = _.C;\\n                    img = _.P || _.user.I;\\n                    time = $.dateFormat(_.CT * 1000, 'yyyy-MM-dd');\\n                    tags = _.L;\\n                    total = _.E;\\n\\n                    _ = ajax(\\\"song/getSongListSong?id=\\\" + t1);\\n                } else _ = [];\\n                break;\\n            case '3': // 排行\\n                if (t1 == \\\"list25\\\")\\n                    uri = \\\"songlist/hotsupportranklist?page=\\\";\\n                else if (t1 == \\\"yc\\\" || t1 == \\\"fc\\\" || t1 == \\\"list23\\\")\\n                    uri = \\\"rank/detail?id=\\\" + t1 + \\\"&pageindex=\\\";\\n                else\\n                    uri = \\\"rank/stylerank?style=\\\" + t1 + \\\"&pageindex=\\\";\\n                _ = ajax(uri + MY_PAGE + \\\"&pageSize=30\\\");\\n                break;\\n        }\\n\\n        title = title || _.name || getPageTitle();\\n        author = author || \\\"5sing音乐\\\";\\n        desc = desc || _.text || \\\"\\\";\\n        img = img || _.photoBig || _.photo;\\n        time = time || \\\"\\\";\\n        tags = tags || _.id || \\\"\\\";\\n        list = _.songs || _;\\n\\n        if (t2) return list;\\n        let I = list.length;\\n        list.map((_, i) => {\\n            showLoading('加载中　' + (i / I * 100).toFixed(2) + \\\"%\\\");\\n            if (_.ST === undefined || _.ST > 0) _formatting(_, _.songId || _.ID, _.songKind || _.SK, t3 || {});\\n        });\\n        hideLoading();\\n        return {\\n            title,\\n            author,\\n            desc,\\n            img,\\n            time,\\n            tags,\\n            total: total || _.count || ((MY_PAGE - 1) * 30 + list.length)\\n        }\\n    },\\n\\n\\n\\n    search: function(platform, keyword, isU) {\\n        let _;\\n        if (isU != \\\"url\\\") {\\n            let list, filter = {\\n                lib: 0,\\n                yc: 1,\\n                fc: 2,\\n                bz: 3\\n            }[isU];\\n            let surl = (stype) => JSON.parse(fetchPC(\\\"http://search.5sing.kugou.com/home/json?keyword=\\\" + keyword + \\\"&sort=1&page=\\\" + MY_PAGE + \\\"&filter=\\\" + filter + \\\"&type=\\\" + stype));\\n            switch (String(platform)) {\\n                case '0': // 搜索单曲\\n                    _ = surl('0');\\n                    list = _.list || [];\\n                    let r1 = getMyVar('search_down', '0') == '1' ? 2 : 1;\\n                    list.map(_ => {\\n                        _formatting(_, _.songId, _.typeEname, r1);\\n                    });\\n                    break;\\n                case '1': // 搜索歌单\\n                    _ = surl('1');\\n                    list = _.list || [];\\n                    list.map(_ => Extra({\\n                        name: _.title,\\n                        picUrl: _.pictureUrl,\\n                        content: 2,\\n                        sourceListId: _.songListId\\n                    }, 1));\\n                    break;\\n            }\\n            return _.pageInfo.totalCount;\\n        } else { // 搜索 分享链接\\n            switch (String(platform)) {\\n                case '0': // 搜索单曲\\n                    [t1, t2] = keyword.split('#');\\n                    _formatting({}, t1, t2, 1);\\n                    break;\\n                case '1': // 搜索歌单\\n                    _ = ajax(\\\"song/getsonglist?id=\\\" + keyword);\\n                    Extra({\\n                        name: _.T,\\n                        picUrl: _.P || _.user.l,\\n                        content: 2,\\n                        sourceListId: _.ID\\n                    }, 1);\\n                    break;\\n            }\\n            return 0;\\n        }\\n    }\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"❼my\",\"path\":\"my\",\"rule\":\"eval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配')).rule);\\nconst this_platform = \\\"my\\\";\\n\\nfunction ajax(path, body, host) {\\n    let url = (host || \\\"https://api\\\") + \\\".liumingye.cn/m/api/\\\" + path;\\n    if (!host) {\\n        body._t = Date.now() + ''\\n        body.token = $.require(\\\"my?rule=歌词适配\\\").new_token(body);\\n        if (body.quality != undefined)\\n            return buildUrl(url, body);\\n        body = JSON.stringify(body);\\n    }\\n    let _ = JSON.parse(post(url, {\\n        body: body,\\n        headers: {\\n            \\\"User-Agent\\\": MOBILE_UA,\\n            'Origin': 'https://tool.liumingye.cn/',\\n        }\\n    }));\\n    _.data.code = _.code;\\n    _.data.msg = _.msg;\\n    return _.data;\\n}\\n\\nfunction _formatting(_, r2, r3) {\\n    let name = _.name;\\n    let singer = _.artist || \\\"\\\";\\n    if (Array.isArray(singer)) singer = singer.map(_ => _.name).join('&');\\n    let interval = (_.time && Hms(_.time * 1000)) || \\\"\\\";\\n\\n    let songId = _.hash || _.id;\\n    let albumName = (_.album && _.album.name) || \\\"\\\";\\n    let albumId = (_.album && _.album.id) || \\\"\\\";\\n    let picUrl = _.cover || _.pic || (_.album && _.album.pic) || \\\"\\\";\\n    picUrl = String(picUrl).split(\\\"@\\\")[0];\\n    let qualitys = [];\\n    if (_.quality)\\n        for (let k of _.quality) {\\n            qualitys.push({\\n                type: {\\n                    '96': \\\"128k\\\",\\n                    '128': \\\"320k\\\",\\n                    '320': \\\"flac\\\",\\n                    '2000': \\\"flac24bit\\\"\\n                }[k.name || k],\\n                size: Size(),\\n                down: (typeof k === 'object')\\n            });\\n        }\\n    let downId = _.hash ? _.id : \\\"\\\";\\n    let lrcUrl = _.lyric || _.lrc || \\\"\\\";\\n    let playUrl = _.url || \\\"\\\";\\n\\n\\n\\n    let urls = [];\\n    let names = [];\\n    let arr = ['m4a', '128', '320', 'flac'];\\n    for (let k in arr) {\\n        let K = _['url_' + arr[k]];\\n        if (K) {\\n            urls.push(K + '#isMusic=true#');\\n            names.push(ts[k]);\\n        }\\n    }\\n\\n\\n    /*\\n        if (songId == undefined && urls.length != 0) {\\n            let u1 = String(urls[0]);\\n            if (u1.includes(\\\"liumingye.cn\\\")) {\\n                let u3, u2 = u1.split(\\\"/url/\\\")[1].split(\\\"/format/\\\")[0];\\n                [u3, songId] = u2.split(\\\"/id/\\\");\\n\\n            }\\n        }\\n    */\\n\\n\\n\\n\\n    if (playUrl && urls.indexOf(playUrl) == -1) {\\n        urls.unshift(playUrl + '#isMusic=true#');\\n        names.unshift(ts[1]);\\n    }\\n    Extra({\\n        name,\\n        singer,\\n        interval,\\n        songId,\\n        albumName,\\n        albumId,\\n        picUrl,\\n        qualitys,\\n        downId,\\n        lrcUrl,\\n        playUrl,\\n        content: r3 || \\\"wy\\\",\\n    }, ((typeof r2 === 'object') ? Object.assign(r2, {\\n        songName: name,\\n        userName: singer,\\n        songTime: interval,\\n        albumName: albumName || name\\n    }) : r2), 0, (urls.length != 0 && {\\n        names,\\n        urls,\\n        lyric: lrcUrl\\n    }));\\n}\\n$.exports = {\\n    _formatting,\\n    iTag: function() {\\n        /* 不能解析wy歌单了\\n                $.require('wy?rule=歌词适配').iTag(1);\\n                iTag[\\\"排行\\\"][\\\"全部\\\"] = $.require('wy?rule=歌词适配').ajax(\\\"toplist?\\\").list.map(_ => Extra({\\n                    title: _.name,\\n                    img: _.coverImgUrl,\\n                    content: 3,\\n                    zyid: _.id\\n                }, 1, 1));\\n        */\\n        let arr = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZ#\\\".split(\\\"\\\");\\n        arr.unshift(\\\"推荐\\\");\\n        arr.map((t, i) => {\\n            iTag[t] = {};\\n            if (t == \\\"推荐\\\")\\n                iTag[t][\\\"推荐歌单\\\"] = \\\"*\\\",\\n                iTag[t][\\\"热门歌手\\\"] = i + \\\"\\\",\\n                iTag[t][\\\"下架歌曲\\\"] = \\\"gq\\\",\\n                iTag[t][\\\"饶舌说唱\\\"] = \\\"sc\\\";\\n            else\\n                iTag[t][\\\"MyFreeMP3\\\"] = i + \\\"\\\";\\n        })\\n        storage0.putMyVar(\\\"my_iTag\\\", iTag);\\n    },\\n    mv: function(_, t1) {\\n        return [\\n            [],\\n            []\\n        ];\\n    },\\n    getLyric: function(_, t1) {\\n        let lrc;\\n        try {\\n            lrc = ajax(\\\"lyric\\\", {\\n                id: _.lrcUrl || t1\\n            }).lrc;\\n        } catch (err) {}\\n        return lrc || \\\"\\\";\\n    },\\n    lazy: function(platform, t1, t2, t3) {\\n        let _ = t1;\\n        t1 = _.songId || _.sourceListId;\\n        switch (String(platform)) {\\n            case '0': // 详情\\n                function ping(url) {\\n                    try {\\n                        url = JSON.parse(fetch(url, {\\n                            timeout: 5000,\\n                            redirect: false,\\n                            onlyHeaders: true\\n                        })).headers.location[0];\\n                        if (url.match(/lanzou.*?\\\\.com/)) {\\n                            url = $.require(\\\"lanzou?rule=歌词适配\\\")\\n                                .one_url(url, \\\"\\\", true);\\n                        }\\n                        return url;\\n                    } catch (fetch_error) {\\n                        return false;\\n                    }\\n                }\\n\\n                let url = _.playUrl;\\n                let lrc = _.lrcUrl;\\n                if (!lrc.match(/https?\\\\:|\\\\d+\\\\:\\\\d+/i)) lrc = \\\"\\\";\\n                let q1 = [\\\"128k\\\", \\\"320k\\\", \\\"flac\\\", \\\"flac24bit\\\"];\\n                let q2 = [96, 128, 320, 2000];\\n\\n                let item = _.qualitys.find(_ => _.type == q1[t3]);\\n                if (item) {\\n                    url = ping(ajax(\\\"link\\\", {\\n                        id: item.down ? _.downId : t1,\\n                        quality: q2[t3] + ''\\n                    }));\\n                }\\n                if (t2) {\\n                    if (item && url) {\\n                        return [url, lrc, t3];\\n                    } else {\\n                        return [\\\"toast://音质不存在 / 无法解析\\\", lrc, t3];\\n                    }\\n                }\\n\\n                if (url) {\\n                    return [url, lrc, item ? t3 : 0];\\n                } else {\\n                    let q3;\\n                    switch (t3) {\\n                        case '3':\\n                            q3 = [3, 2, 1, 0];\\n                            break;\\n                        case '2':\\n                            q3 = [2, 1, 3, 0];\\n                            break;\\n                        case '1':\\n                        default:\\n                            q3 = [1, 2, 3, 0];\\n                            break;\\n                    }\\n                    for (let k of q3) {\\n                        item = _.qualitys.find(_ => _.type == q1[k]);\\n                        if (item) {\\n                            url = ping(ajax(\\\"link\\\", {\\n                                id: t1,\\n                                quality: q2[k] + ''\\n                            }));\\n                            if (url) {\\n                                return [url, lrc, k];\\n                                break;\\n                            }\\n                        }\\n                    }\\n                    return [\\\"toast://无法解析\\\", lrc, t3];\\n                }\\n                break;\\n            case '1': //首页\\n                /*\\n                                if (!t1.match(/\\\\?/)) t1 = \\\"top/playlist?cat=\\\" + t1 + \\\"&\\\";\\n                                _ = $.require('wy?rule=歌词适配').ajax(t1);\\n                                (_.result || _.playlists).map(_ => Extra({\\n                                    title: _.name,\\n                                    img: _.coverImgUrl || _.picUrl,\\n                                    content: 2,\\n                                    zyid: _.id\\n                                }, 1));\\n                */\\n                t3 = t1 === \\\"*\\\";\\n                if (t3 || t1 === \\\"gq\\\" || t1 === \\\"sc\\\") {\\n                    if (MY_PAGE == 1) {\\n                        if (t3) {\\n                            _ = ajax(\\\"home/recommend\\\", {}),\\n                                _.playlist.push({\\n                                    name: \\\"最新上传\\\",\\n                                    pic: \\\"https://dn-qiniu-avatar.qbox.me/avatar/6ee1ef2b48bf9b3fad60ee42bad6234b\\\",\\n                                    id: \\\"top/song\\\"\\n                                });\\n                        } else { // 留声机\\n                            _ = {\\n                                list: []\\n                            }\\n                            fetch(`https://sneer0.github.io/lsj/gn/xj${t1}.lua`).replace(\\n                                /{标题=\\\".+?《(.+?)》\\\",链接=\\\"(.+?)\\\"}/g,\\n                                ($0, $1, $2) => _.list.push({\\n                                    name: $1,\\n                                    id: $2.split(\\\"/\\\")[3],\\n                                    source: \\\"lanzou\\\",\\n                                    pic: \\\"https://txc.gtimg.com/data/374133/2022/0324/9930763e1916693f73174374a1f0b15f.jpeg\\\"\\n                                })\\n                            );\\n                        }\\n                    } else\\n                        _ = {};\\n                } else\\n                    _ = ajax(\\\"artist/list\\\", {\\n                        initial: t1,\\n                        page: MY_PAGE\\n                    });\\n                list = _.list || _.playlist || [];\\n                list.map(_ => Extra({\\n                    source: _.source, // lanzou\\n                    name: _.name,\\n                    picUrl: _.pic || 'hiker://images/rule_type_audio',\\n                    content: t3 ? 2 : 3,\\n                    sourceListId: _.id,\\n                    col_type: t2\\n                }, 1));\\n                return (MY_PAGE - 1) * 90 + list.length;\\n                break;\\n            case '2': // 发现\\n                if (t1 == \\\"top/song\\\") {\\n                    _ = ajax(t1, {\\n                        page: MY_PAGE\\n                    });\\n                } else {\\n                    if (MY_PAGE == 1) {\\n                        if (Number(t1) > -1) {\\n                            _ = ajax(\\\"playlist/info\\\", {\\n                                id: t1\\n                            });\\n                        } else {\\n                            _ = ajax(\\\"search/playlist\\\", {\\n                                id: t1\\n                            });\\n                        }\\n                    } else\\n                        _ = {\\n                            list: []\\n                        };\\n                }\\n                break;\\n            case '3': // 排行\\n                if (MY_PAGE == 1)\\n                    _ = ajax(\\\"artist\\\", {\\n                        id: t1\\n                    });\\n                else\\n                    _ = {\\n                        list: []\\n                    };\\n                break;\\n        }\\n\\n        let title = _.name || getPageTitle();\\n        let author = (_.user && _.user.username) || \\\"MyFreeMP3\\\";\\n        let desc = _.description || _.desc || \\\"\\\";\\n        let img = _.pic || MY_PARAMS.img || \\\"\\\";\\n        img = String(img).split(\\\"@\\\")[0];\\n        let time = _.create_time || \\\"\\\";\\n        let tags = _.tags || \\\"\\\";\\n\\n        list = _.list;\\n        if (t2) return list;\\n        list.map(_ => {\\n            _formatting(_, t3 || {});\\n        });\\n        if (list.length == 0 && _.name) {\\n            d.push({\\n                title: _.name,\\n                desc: _.description,\\n                url: \\\"hiker://empty\\\",\\n                col_type: \\\"text_center_1\\\"\\n            });\\n        }\\n        return {\\n            title,\\n            author,\\n            desc,\\n            img,\\n            time,\\n            tags,\\n            total: _.count || ((MY_PAGE - 1) * 90 + list.length)\\n        }\\n    },\\n\\n\\n\\n    search: function(platform, keyword, stype, isNew) {\\n        switch (String(platform)) {\\n            case '0': // 搜索单曲\\n                let stype = stype || 'wy';\\n                let stype2 = {\\n                    'wy': 'YQD',\\n                    'kw': 'YQB',\\n                    'mg': isNew ? 'YQM' : 'migu',\\n                    '1t': '1ting',\\n                    'db': 'douban',\\n                    '5y': 'wusingyc',\\n                    '5f': 'wusingfc'\\n                }[stype];\\n                try {\\n                    let _, r1 = getMyVar('search_down', '0') == '1' ? 2 : 1;\\n                    if (isNew) {\\n                        _ = ajax('search', {\\n                            type: stype2,\\n                            text: keyword,\\n                            page: MY_PAGE,\\n                            v: 'beta'\\n                        });\\n                    } else {\\n                        let body = \\\"text=\\\" + keyword + \\\"&page=\\\" + MY_PAGE + \\\"&type=\\\" + stype2;\\n                        body = $.require(\\\"my?rule=歌词适配\\\").old_encode(body);\\n                        _ = ajax('search', body, \\\"http://api2\\\");\\n                    }\\n                    let list = _.list || [];\\n                    list.map(_ => _formatting(_, r1, stype));\\n                    if (list.length == 0) {\\n                        if (_.code == 403) {\\n                            d.push({\\n                                title: _.msg,\\n                                desc: _.code,\\n                                url: \\\"hiker://empty\\\",\\n                                col_type: \\\"text_center_1\\\"\\n                            });\\n                        } else {\\n                            d.push({\\n                                col_type: \\\"text_center_1\\\",\\n                                url: \\\"hiker://empty\\\",\\n                                title: \\\"~~~什么都没有~~~\\\"\\n                            });\\n                        }\\n                    }\\n\\n                    return ((MY_PAGE - 1) * (_.more || 36) + list.length);\\n                } catch (e) {\\n                    d.push({\\n                        title: \\\"网络异常，搜索失败\\\",\\n                        desc: e.toString(),\\n                        url: \\\"hiker://empty\\\",\\n                        col_type: \\\"text_center_1\\\"\\n                    });\\n                    return 0;\\n                }\\n                break;\\n            case '1': // 搜索歌单\\n                $.require(\\\"wy?rule=歌词适配\\\").search(1, keyword, 1).map(_ => Extra({\\n                    name: _.name,\\n                    picUrl: _.coverImgUrl,\\n                    content: 2,\\n                    sourceListId: \\\"d\\\" + _.id\\n                }, 1));\\n                return 0;\\n                break;\\n        }\\n    },\\n\\n\\n\\n    new_token: function(body) {\\n        let [t, e, As] = [\\n            [\\n                \\\"20241016.\\\",\\n                \\\"xeLO3Wq54bYyE5q59B1WU0ju26bg5GzZTr7wN40aOYOEZEy9IWm9XU51an5nv2jp\\\",\\n                \\\"mLIXG/KZejUbq85HWdvlVtpAFrQsR0ciYEDPJwn321zu4=ToxygSM67OkafC9hNB+\\\"\\n            ],\\n            [\\n                \\\"20240531.\\\",\\n                \\\"4b9qrOXu305U5Ex5U1yYv69jZO5EbznZq9nWaY5e5NW2GImw27aEBjL4OgW01Tpy\\\",\\n                \\\"hQxDsS6geBiG1MTOPZzoHkt8Wyf4AnLU7FqJbp+0N=udc2j/VY9aICrmX3Rvl5KwE\\\"\\n            ],\\n            [\\n                \\\"20230327.\\\",\\n                \\\"yGz4n9XE9xYy2Oj5Ub7E6u9a5p5aIWZYe53Orq5wE5UgnjbWq0410WTvmLBO1Z2N\\\",\\n                \\\"pW8jg/mke6cO1F4CTuaiswhZfQGzMyq5NJRLPVIvDxlA7=E3YrSUoH0b2BXKn9td+\\\"\\n            ],\\n            [\\n                \\\"20221222.\\\",\\n                \\\"H2huuwXf8wN9Cx5K3lEQkdg4VTCJqIb440QQX95OQye1D092292BI6rgjFgK9mcx\\\",\\n                \\\"QsVmt4rpqPFJyWcg1Y/SRAuLMTedB375XZNDlOGxj6b2van9=C8UhHKE+wifIkoz0\\\"\\n            ]\\n        ][0];\\n        e = encodeURIComponent(JSON.stringify(body))\\n            .split(\\\"\\\").map((t, i) => {\\n                return t.charCodeAt(0) ^ e.charCodeAt(i % 64);\\n            });\\n        let a, b, c, d,\\n            v  = 0,\\n            tk = \\\"\\\",\\n            i  = e.length % 3;\\n        do {\\n            a = e[v++]\\n            b = e[v++]\\n            c = e[v++]\\n            d = a << 16 | b << 8 | c\\n            a = d >> 18 & 63\\n            b = d >> 12 & 63\\n            c = d >> 6 & 63\\n            d = d & 63\\n            tk += As.charAt(a) + As.charAt(b) + As.charAt(c) + As.charAt(d)\\n        } while (v < e.length);\\n        return t + md5(i == 0 ? tk : tk.slice(0, i - 3) + '==='.slice(i || 3))\\n    },\\n\\n\\n\\n    old_encode: function(t2) {\\n        let k0 = md5(\\\"<G6sX,Lk~^2:Y%4Z\\\");\\n        let k1 = md5(k0.substr(16, 32));\\n        let k2 = md5(k0.substr(00, 16));\\n        let r4 = R(4);\\n        k2 += md5(k2 + r4);\\n        let t0 = new Date().getTime() / 1000 + 86400 >> 0;\\n        let t1 = md5(t2 + k1).substr(0, 16);\\n        let t2 = String(t0 + t1 + t2).replace(/[\\\\u0080-\\\\uFFFF]/gi, function(x) {\\n            let c = x.charCodeAt(0);\\n            return String.fromCharCode(\\n                c >> 12 | 224,\\n                c >> 6 & 63 | 128,\\n                c & 63 | 128\\n            );\\n        });\\n        let p = Array.from({\\n            length: 256\\n        }, (_, i) => i);\\n        let [E, I, b] = [\\\"\\\", 0, 0];\\n        for (let i = 0; i < 256; i++) {\\n            let ci = k2[i % 64].charCodeAt(0);\\n            I = (I + p[i] + ci) % 256;\\n            [p[i], p[I]] = [p[I], p[i]];\\n        }\\n        for (let i = 0; i < t2.length; i++) {\\n            I = (i + 1) % 256;\\n            b = (b + p[I]) % 256;\\n            [p[I], p[b]] = [p[b], p[I]];\\n            E += String.fromCharCode(\\n                t2.charCodeAt(i) ^ p[(p[I] + p[b]) % 256]\\n            );\\n        }\\n        let B = window0.btoa(E).replace(/\\\\+/g, \\\"-\\\").replace(/\\\\//g, \\\"_\\\");\\n        return \\\"data=\\\" + r4 + B + \\\"&v=2\\\";\\n    }\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"❽qt\",\"path\":\"qt\",\"rule\":\"eval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配')).rule);\\nconst this_platform = 'qt';\\n\\nfunction qianqian(uri, json) {\\n    if (!json) return uri.response;\\n    json.appid = \\\"16073360\\\";\\n    json.timestamp = Math.floor(Date.now() / 1e3);\\n    let body = Object.keys(json).sort()\\n        .map(key => key + '=' + json[key]).join('&');\\n    body += \\\"&sign=\\\" + md5(body + \\\"0b50b02fd0d73a9c4c8c3a781c30845f\\\");\\n    let u = \\\"https://api-qianqian.91q.com\\\" || \\\"https://music.91q.com\\\";\\n    return JSON.parse(fetch(u + \\\"/v1/\\\" + uri + \\\"?\\\" + body)).data;\\n}\\n\\nfunction search(platform, keyword, content, run) {\\n    let interval, picUrl, albumName, albumId,\\n        total1, total2 = 10,\\n        qualitys = [{\\n            type: \\\"128k\\\",\\n            size: Size()\\n        }],\\n        r1 = getMyVar('search_down', '0') == '1' ? 2 : 1;\\n    switch (String(platform)) {\\n        case '0':\\n            switch (String(content)) {\\n                case 'bd': // 千千音乐(百度音乐)\\n                    _ = qianqian(\\\"search\\\", {\\n                        type: 1,\\n                        word: keyword,\\n                        pageNo: MY_PAGE\\n                    });\\n                    list = _.typeTrack;\\n                    list.map(_ => {\\n                        if (!_.isVip) {\\n                            qualitys[0].size = Size(_.rateFileInfo['128'].size);\\n                            Extra({\\n                                name: _.title,\\n                                singer: _.artist && _.artist.map(_ => _.name).join('&'),\\n                                interval: Hms(_.duration * 1000),\\n                                songId: _.id || _.TSID,\\n                                albumName: _.albumTitle,\\n                                albumId: _.albumAssetCode,\\n                                picUrl: _.pic,\\n                                // lrcUrl: _.lyric,\\n                                qualitys,\\n                                content\\n                            }, r1);\\n                        }\\n                    });\\n                    total1 = _.total;\\n                    total2 = 20;\\n                    break;\\n\\n\\n\\n                case 'zz': // 种子音乐(★★★★★)\\n                    u = 'https://zz123.com';\\n                    list = JSON.parse(post(u + '/ajax/', {\\n                        body: \\\"act=search&key=\\\" + keyword + \\\"&lang=&page=\\\" + MY_PAGE\\n                    })).data;\\n                    for (let _ of list) {\\n                        let ptime = String(_.play_time).length == 5 ? \\\"00:\\\" : \\\"\\\";\\n                        let __ = {\\n                            name: _.mname,\\n                            singer: _.sname,\\n                            interval: _.play_time && ptime + _.play_time,\\n                            songId: _.id,\\n                            albumName,\\n                            albumId,\\n                            picUrl: _.pic && _.pic.replace(/\\\\?.*/, ''),\\n                            qualitys,\\n                            content\\n                        };\\n                        if (run == 'run') {\\n                            return lazy('zz', __, 0, 1);\\n                        }\\n                        Extra(__, r1);\\n                    }\\n                    total2 = 50;\\n                    break;\\n\\n\\n\\n                case 'kz': // slider.kz(★★★★★)\\n                    if (MY_PAGE == 1) {\\n                        u = \\\"https://hayqbhgr.slider.kz/\\\";\\n                        list = JSON.parse(fetch(u + \\\"vk_auth.php?q=\\\" + keyword))[\\\"audios\\\"][\\\"\\\"];\\n                        for (let _ of list) {\\n                            let name, singer;\\n                            [singer, name] = _.tit_art.split(' - ');\\n                            let __ = {\\n                                name,\\n                                singer,\\n                                interval: Hms(_.duration * 1000),\\n                                songId: _.id,\\n                                albumName,\\n                                albumId,\\n                                picUrl: 'https://pics.paypal.com/00/s/NDRmZTNiZjktNDFmZi00ZDM5LWI4OTktZGFmODUxNmU1NWY2/file.JPG',\\n                                qualitys,\\n                                content,\\n                                t2: _.duration,\\n                                t3: _.durl,\\n                                t4: _.tit_art\\n                            };\\n                            if (run == 'run') {\\n                                return lazy('kz', __, 0, 1)\\n                            }\\n                            Extra(__, r1);\\n                        }\\n                    } else {\\n                        return 0;\\n                    }\\n                    break;\\n\\n\\n\\n                case 'ni': // 音乐磁场(★★★★★)\\n                    u = \\\"https://www.hifini.com/\\\";\\n                    if (MY_PAGE == 1) htm = \\\"-1.htm\\\";\\n                    else htm = \\\"-1-\\\" + MY_PAGE + \\\".htm\\\";\\n                    keyword = encodeURIComponent(keyword).replace(/-/g, '_2d').replace(/%/g, '_');\\n                    html = fetchCodeByWebView(u + \\\"search-\\\" + keyword + htm, {\\n                        'blockRules': ['.js', '.css', '.png', '.ico'],\\n                        timeout: 5000\\n                    });\\n                    list = pdfa(html, \\\"body&&li.media[data-tid]\\\");\\n                    for (let item of list) {\\n                        albumName = pdfh(item, \\\"a,2&&Text\\\");\\n                        albumId = pdfh(item, \\\"a,2&&href\\\").replace(/\\\\D|\\\\s/g, \\\"\\\");\\n                        if (!/特供|站务/i.test(albumName)) {\\n                            let singer, name = pdfh(item, \\\"a,1&&Text\\\").split(\\\"》\\\")[0];\\n                            [singer, name] = name.split(\\\"《\\\");\\n                            let __ = {\\n                                name,\\n                                singer,\\n                                interval,\\n                                songId: pdfh(item, \\\"a,1&&href\\\").replace(/\\\\D/g, ''),\\n                                albumName,\\n                                albumId,\\n                                picUrl: u + \\\"view/img/avatar.png\\\",\\n                                qualitys,\\n                                content\\n                            };\\n                            if (run == 'run') {\\n                                return lazy('ni', __, 0, 1)\\n                            }\\n                            Extra(__, r1);\\n                        }\\n                    }\\n                    total2 = 20;\\n                    break;\\n\\n\\n\\n                case 'g3': // 咕咕咕音乐(★★★★★)\\n                    if (MY_PAGE == 1) {\\n                        u = \\\"https://www.gggmusic.com/\\\";\\n                        keyword = encodeURIComponent(keyword).replace(/-/g, '_2d').replace(/%/g, '_');\\n                        html = fetch(u + \\\"search-\\\" + keyword + \\\"-1.htm\\\", {\\n                            'blockRules': ['.js', '.css', '.png', '.ico'],\\n                            timeout: 5000\\n                        });\\n                        list = pdfa(html, \\\"body&&li[data-tid]\\\");\\n                        for (let item of list) {\\n                            let singer, name;\\n                            [singer, name] = pdfh(item, \\\"a,1&&Text\\\").split(\\\" - \\\");\\n                            let __ = {\\n                                name,\\n                                singer,\\n                                interval,\\n                                songId: pdfh(item, \\\"a,1&&href\\\").replace(/\\\\D/g, ''),\\n                                albumName,\\n                                albumId,\\n                                picUrl: u + \\\"view/img/favicon.ico\\\",\\n                                qualitys,\\n                                content\\n                            };\\n                            if (run == 'run') {\\n                                return lazy('g3', __, 0, 1)\\n                            }\\n                            Extra(__, r1);\\n                        }\\n                    } else {\\n                        return 0;\\n                    }\\n                    break;\\n\\n\\n\\n\\n\\n                case 'qy': // 趣趣音乐(★★★★★)\\n                    u = \\\"https://www.qqyin.com/\\\"\\n                    list = pdfa(fetch(u + \\\"?keyword=\\\" + keyword + \\\"&page=\\\" + MY_PAGE), \\\"body&&a.sp1\\\");\\n                    list = list.map(item => pdfh(item, \\\"a,0&&href\\\").match(/\\\\d+/)[0]).join(\\\",\\\");\\n                    list = JSON.parse(fetch(u + \\\"?plugin=xmusic_like&do=playmusic&articleId=\\\" + list));\\n                    for (let _ of list) {\\n                        let singer, name;\\n                        [name, singer] = (_.name || _.title || _.music).split(\\\" - \\\");\\n                        let __ = {\\n                            name,\\n                            singer,\\n                            interval,\\n                            songId: _.id,\\n                            albumName,\\n                            albumId,\\n                            picUrl: \\\"http://q.qlogo.cn/g?b=qq&nk=1299490188&s=640\\\",\\n                            qualitys,\\n                            content,\\n                            playUrl: _.url || _.downlink\\n                        };\\n                        if (run == 'run') {\\n                            return lazy('qy', __, 0, 1)\\n                        }\\n                        Extra(__, r1);\\n                    }\\n                    total2 = 50;\\n                    break;\\n\\n\\n\\n                case 'qk': // 奇酷音乐(★★★★★)\\n                    u = 'https://7n33122q45.vicp.fun/';\\n                    list = JSON.parse(fetch(u + '/user/Cloud/s.php?page=' + MY_PAGE + '&number=25&name=' + keyword, {\\n                        headers: {\\n                            \\\"User-Agent\\\": \\\"Apache-HttpClient/UNAVAILABLE (java 1.4)\\\",\\n                            \\\"Accept-Encoding\\\": \\\"identity\\\",\\n                        }\\n                    }));\\n                    for (let _ of list) {\\n                        let singer, name;\\n                        [name, singer] = _.music_name.split(\\\"-\\\");\\n                        let __ = {\\n                            name,\\n                            singer,\\n                            interval,\\n                            songId: _.music_id,\\n                            albumName,\\n                            albumId,\\n                            picUrl: u + 'icon.png',\\n                            qualitys,\\n                            content: '0',\\n                            source: 'lanzou'\\n                        };\\n                        if (run == 'run') {\\n                            return $.require(\\\"lanzou?rule=歌词适配\\\")\\n                                .lazy(\\\"0\\\", __, 0, 1);\\n                        }\\n                        Extra(__, r1);\\n                    }\\n                    total2 = 25;\\n                    break;\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n                case 'km':\\n                    u = 'https://www.kumeiwp.com/';\\n                    list = JSON.parse(fetch(u + '/index/search/data?page=' + MY_PAGE + '&limit=50&word=' + keyword + '&scope=all')).data;\\n                    for (let _ of list) {\\n                        zyid = _.file_id + '#km';\\n                        if (run == 'run') {\\n                            return lazy('km', zyid, 0, 1);\\n                        }\\n                        Extra({\\n                            title: pdfh(_.title, 'a,0&&Text'),\\n                            img: u + 'favicon.ico',\\n                            content: 'km',\\n                            zyid\\n                        }, r1);\\n                    }\\n                    break;\\n\\n\\n\\n\\n\\n                case 'bz':\\n                    if (MY_PAGE == 1) {\\n                        list = pdfa(fetch(\\\"https://debenzi.com/?s=\\\" + keyword), \\\"body&&h2.entry-title\\\");\\n                        for (let item of list) {\\n                            zyid = pdfh(item, \\\"a,0&&href\\\").replace(/\\\\D/g, '') + '#bz';\\n                            if (run == 'run') {\\n                                return lazy('bz', zyid, 0, 1);\\n                            }\\n                            Extra({\\n                                title: pdfh(item, \\\"a,0&&Text\\\"),\\n                                img: 'https://pic.rmb.bdstatic.com/bjh/39b964b2b087a05c39a56a2e38c04019338.jpeg',\\n                                content: 'bz',\\n                                zyid\\n                            }, r1);\\n                        }\\n                    }\\n                    break;\\n\\n\\n\\n                case 'st':\\n                    list = pdfa(fetch(`http://www.songtaste.co/dance/search?key=${keyword}&page=${MY_PAGE}`), \\\"body&&.mlist&&li\\\");\\n                    for (let item of list) {\\n                        zyid = pdfh(item, \\\".td3&&a&&href\\\").replace(/.*\\\\//, '') + '#st';\\n                        if (run == 'run') {\\n                            return lazy('st', zyid, 0, 1);\\n                        }\\n                        Extra({\\n                            title: pdfh(item, \\\".td3&&Text\\\"),\\n                            img: pdfh(item, \\\"img&&src\\\").replace('picdata', 'attachment'),\\n                            content: 'st',\\n                            zyid\\n                        }, r1);\\n                    }\\n                    break;\\n\\n\\n\\n                case 'blm':\\n                    list = JSON.parse(fetch(`https://blackblm.bailemi.com/index.php/dance/search?key=${keyword}&page=${MY_PAGE}`)).dancelist;\\n                    for (let _ of list) {\\n                        url = _.downurl || _.playurl;\\n                        if (run == 'run') {\\n                            return url\\n                        }\\n                        if (url && _.name) Extra({\\n                            title: _.name + ' - ' + (_.singer || _.up_user),\\n                            img: _.cover || _.up_user_logo,\\n                            content: 'blm',\\n                            zyid: _.songid + '#blm'\\n                        }, r1, 0, {\\n                            names: [ts[1]],\\n                            urls: [url + '#isMusic=true#']\\n                        });\\n                    }\\n                    break;\\n\\n\\n\\n                case 'fp':\\n                    if (MY_PAGE == 1) {\\n                        list = pdfa(fetch(\\\"https://www.fangpi.net/s/\\\" + keyword), \\\"body&&[class=row]\\\");\\n                        for (item of list) {\\n                            Extra({\\n                                title: pdfh(item, \\\"div,1&&Text\\\") + ' - ' + pdfh(item, \\\"div,2&&Text\\\"),\\n                                img: $.require('image?rule=歌词适配')('fp'),\\n                                content: 'fp',\\n                                zyid: pdfh(item, \\\"a,0&&href\\\").replace(/\\\\D/g, '') + '#fp'\\n                            }, r1);\\n                        }\\n                    }\\n                    break;\\n\\n\\n\\n                case 'ht':\\n                    if (MY_PAGE == 1) {\\n                        list = pdfa(fetch(\\\"http://m.htqyy.com/search/result?id=\\\" + keyword), \\\"body&&li\\\");\\n                        for (item of list) {\\n                            Extra({\\n                                title: pdfh(item, \\\"a,0&&Text\\\") + ' - ' + pdfh(item, \\\"em,0&&Text\\\"),\\n                                img: pdfh(item, \\\"img&&src\\\") + '0@headers={\\\"referer\\\":\\\"http://m.htqyy.com\\\"}',\\n                                content: 'ht',\\n                                zyid: pdfh(item, \\\".play&&data-id\\\") + '#ht'\\n                            }, r1);\\n                        }\\n                    }\\n                    break;\\n\\n\\n\\n                case '1t':\\n                    JSON.parse(fetch(`https://so.1ting.com/song/json?q=${keyword}&page=${MY_PAGE}&size=30`)).results.map(_ => Extra({\\n                        title: _.song_name + ' - ' + _.singer_name,\\n                        img: 'https:' + _.album_cover,\\n                        content: '1t',\\n                        zyid: _.song_id + '#1t'\\n                    }, r1));\\n                    break;\\n\\n\\n\\n                case '9t':\\n                    if (MY_PAGE == 1) {\\n                        JSON.parse(fetch(`http://new.9sky.com/api/weibo/content/search?content=${keyword}`)).data.song_list.map(_ => {\\n                            if (/^N$/i.test(_.is_station)) {\\n                                u = \\\"http://new.9sky.com/api/song/detail?id=\\\" + _.song_id + \\\"&is_login=N\\\";\\n                                _ = JSON.parse(fetch(u)).data;\\n                                Extra({\\n                                    title: _.song_name + ' - ' + _.musician_name,\\n                                    img: _.disc_img_url,\\n                                    content: '9t',\\n                                    zyid: _.song_id + '#9t'\\n                                }, r1, 0, {\\n                                    names: [ts[1]],\\n                                    urls: [_.song_url + '#isMusic=true#'],\\n                                    lrc: _.lyric_url || Lrc(_.design_notes)\\n                                });\\n                            }\\n                        });\\n                    }\\n                    break;\\n\\n\\n\\n                case 'ky':\\n                    JSON.parse(post('http://api.kuaiyin123.net/q/search', {\\n                        body: \\\"q=\\\" + keyword + \\\"&client_v=2.7.1&page=\\\" + MY_PAGE + \\\"&platform=Android\\\",\\n                        headers: {\\n                            \\\"client-v\\\": \\\"2.7.1\\\",\\n                            \\\"device-id\\\": R(16),\\n                            \\\"platform\\\": \\\"Android\\\",\\n                            \\\"User-Agent\\\": \\\"okhttp/3.14.4\\\",\\n                            \\\"Connection\\\": \\\"Keep-Alive\\\",\\n                            \\\"Content-Type\\\": \\\"application/x-www-form-urlencoded\\\"\\n                        }\\n                    })).data.music_list.rows.map(_ => Extra({\\n                        title: _.title + ' - ' + _.user_info.nickname,\\n                        img: _.cover,\\n                        content: 'ky',\\n                        zyid: _.zyid\\n                    }, r1, 0, {\\n                        names: [ts[1]],\\n                        urls: [_.play_url + '#isMusic=true#'],\\n                        lyric: _.lrc_url\\n                    }));\\n                    break;\\n\\n\\n\\n                case '5nd':\\n                    if (MY_PAGE == 1) {\\n                        list = pdfa(fetch(\\\"http://m.5nd.com/so/s_\\\" + keyword), \\\"body&&.list-song&&li\\\");\\n                        for (item of list) {\\n                            Extra({\\n                                title: pdfh(item, \\\".song&&Text\\\") + ' - ' + pdfh(item, \\\".artist&&Text\\\"),\\n                                img: pdfh(item, \\\"img&&src\\\"),\\n                                content: '5nd',\\n                                zyid: pdfh(item, \\\"a&&href\\\").replace(/.*\\\\/|\\\\..*/g, '') + '#5nd'\\n                            }, r1);\\n                        }\\n                    }\\n                    break;\\n\\n\\n\\n                case 'biu':\\n                    list = pdfa(fetch(\\\"https://biu.moe/index.php?m=&c=Song&a=search&data=\\\" + keyword + \\\"&p=\\\" + MY_PAGE), \\\"body&&tbody&&tr\\\");\\n                    for (item of list) {\\n                        biu_sid = pdfh(item, \\\"a,0&&href\\\").replace(/\\\\D+/, \\\"\\\");\\n                        Extra({\\n                            title: pdfh(item, \\\"a,0&&Html\\\").replace(/\\\\s*<span[\\\\s\\\\S]+/i, \\\"\\\") + ' - ' + pdfh(item, \\\"a,1&&Text\\\"),\\n                            img: \\\"https://biu.moe/Song/showCover/sid/\\\" + biu_sid,\\n                            content: 'biu',\\n                            zyid: biu_sid + '#biu'\\n                        }, r1);\\n                    }\\n                    break;\\n\\n\\n\\n                case 'mus':\\n                    list = pdfa(fetch(\\\"https://skymus.org/tracks/\\\" + keyword + \\\"/\\\" + MY_PAGE), \\\"body&&.f-table\\\");\\n                    for (item of list) {\\n                        Extra({\\n                            title: pdfh(item, \\\".artist-name&&Text\\\") + ' - ' + pdfh(item, \\\".track-name&&Text\\\"),\\n                            img: pdfh(item, \\\"img&&src\\\").replace(/^(.+)/, 'https:$1') || $.require('image?rule=歌词适配')('mus'),\\n                            content: 'mus',\\n                            zyid: 'undefined'\\n                        }, r1, 0, {\\n                            names: [ts[1]],\\n                            urls: [\\\"https:\\\" + pdfh(item, \\\".mp3&&href\\\") + '#isMusic=true#']\\n                        });\\n                    }\\n                    break;\\n\\n\\n\\n                case 'jam':\\n                    JSON.parse(fetch(\\\"https://solrcloud.jamendo.com/solr/jamcom?wt=json&rows=30&q=\\\" + keyword + \\\"&start=\\\" + ((MY_PAGE - 1) * 30))).response.docs.map(_ => {\\n                        url = \\\"https://prod-1.storage.jamendo.com/download/track/\\\" + _.id + \\\"/mp35\\\";\\n                        Extra({\\n                            title: _.name.replace(_.artist_name + ' - ', '') + ' - ' + _.artist_name,\\n                            img: \\\"https://usercontent.jamendo.com/?type=album&id=\\\" + _.album_id.replace(/\\\\D/g, '') + \\\"&width=500&trackid=\\\" + _.id,\\n                            content: 'jam',\\n                            zyid: 'undefined'\\n                        }, r1, 0, {\\n                            names: [ts[1]],\\n                            urls: [url + '#isMusic=true#']\\n                        });\\n                    });\\n                    break;\\n\\n\\n\\n                case 'jui':\\n                    list = eval(post('https://new.myfreemp3juices.cc/api/api_search.php?callback=qianqian', {\\n                        body: \\\"q=\\\" + keyword + \\\"&page=\\\" + MY_PAGE\\n                    }));\\n                    var u = \\\"https://nplay.idmp3s.com/stream/\\\";\\n                    var o = \\\"ABCDEFGHJKMNPQRSTUVWXYZabcdefghjkmnpqrstuvxyz123\\\";\\n\\n                    function jui_d(t) {\\n                        var e = \\\"\\\";\\n                        if (0 == t) return o[0];\\n                        for (t < 0 && (t *= -1, e += \\\"-\\\"); 0 < t;) val = parseInt(t % 48), t = parseInt(t / 48), e += o[val];\\n                        return e\\n                    }\\n                    for (i = 1; i < list.length; i++) {\\n                        _ = list[i];\\n                        prettyId = jui_d(_.owner_id) + \\\":\\\" + jui_d(_.id);\\n                        Extra({\\n                            title: _.title + ' - ' + _.artist,\\n                            img: $.require('image?rule=歌词适配')('jui'),\\n                            content: 'jui',\\n                            zyid: _.prettyId\\n                        }, r1, 0, {\\n                            names: [ts[1]],\\n                            urls: [u + prettyId + '#isMusic=true#']\\n                        });\\n                    }\\n                    break;\\n\\n\\n\\n                case 'y3':\\n                    $song_data = [];\\n                    song_list = (i, ii) => {\\n                        list = $song_data[i].split(\\\"||\\\");\\n                        for (item of list) {\\n                            _ = item.split(\\\"|\\\");\\n                            if (_[4]) {\\n                                url = \\\"http://ting6.yymp3.net:82/\\\" + String(_[4]).replace('.wma', '.mp3');\\n                                Extra({\\n                                    title: _[1] + ' - ' + _[3],\\n                                    img: $.require('image?rule=歌词适配')('y3'),\\n                                    content: 'y3',\\n                                    zyid: _.prettyId\\n                                }, r1, 0, {\\n                                    names: [ts[1]],\\n                                    urls: [url + '#isMusic=true#']\\n                                });\\n                            }\\n                        }\\n                    }\\n                    eval(fetchPC(\\\"http://www.yymp3.com/p/getser.aspx?key=\\\" + keyword + \\\"&page=\\\" + MY_PAGE));\\n                    break;\\n\\n\\n\\n                case '365':\\n                    if (MY_PAGE == 1) {\\n                        function $365_SearchResult(t) {\\n                            return pdfa(\\\"<body>\\\" + t + \\\"</body>\\\", \\\"body&&li\\\");\\n                        }\\n                        list = eval(\\\"$365_\\\" + fetch(\\\"http://hit.yue365.com/search.asp?rnd=\\\" + Math.random() + \\\"&keywords=\\\" + escape(keyword) + \\\"&t=1\\\"));\\n                        for (item of list) {\\n                            MusicId = pdfh(item, \\\"a,0&&href\\\").replace(/.*\\\\/|\\\\..*/g, '');\\n                            url = \\\"http://96.ierge.cn/\\\" + parseInt(MusicId / 30000) + \\\"/\\\" + parseInt(MusicId / 2000) + \\\"/\\\" + MusicId + \\\".mp3\\\";\\n                            Extra({\\n                                title: pdfh(item, \\\".name&&Text\\\") + ' - ' + pdfh(item, \\\".singer&&Text\\\"),\\n                                img: $.require('image?rule=歌词适配')('365'),\\n                                content: '365',\\n                                zyid: 'undefined'\\n                            }, r1, 0, {\\n                                names: [ts[1]],\\n                                urls: [url + '#isMusic=true#']\\n                            });\\n                        }\\n                    }\\n                    break;\\n\\n\\n\\n\\n\\n\\n                case 'dj1':\\n                    u = \\\"http://www.zzzdj.com\\\";\\n                    list = pdfa(fetchPC(u + \\\"/music/search-\\\" + keyword + \\\"?cat_id=0&page=\\\" + MY_PAGE), \\\"body&&tbody&&tr\\\");\\n                    for (item of list) {\\n                        Extra({\\n                            title: item.match(/alt=\\\"(.+?)\\\"/)[1],\\n                            img: u + item.match(/src=\\\"(.+?)\\\"/)[1],\\n                            content: 'dj1',\\n                            zyid: item.match(/data-id=\\\"(\\\\d+)\\\"/)[1] + '#dj1'\\n                        }, r1);\\n                    }\\n                    break;\\n\\n\\n\\n                case 'dj2':\\n                    list = pdfa(fetchPC(\\\"https://www.djuu.com/search?musicname=\\\" + keyword + \\\"&list=2&cid=0&page=\\\" + MY_PAGE), \\\"body&&.list_musiclist&&tr[class]\\\");\\n                    for (item of list) {\\n                        Extra({\\n                            title: item.match(/title=\\\"(.+?)\\\"/)[1],\\n                            img: \\\"https:\\\" + item.match(/src=\\\"(.+?)\\\"/)[1],\\n                            content: 'dj2',\\n                            zyid: item.match(/value=\\\"(\\\\d+)\\\"/)[1] + '#dj2'\\n                        }, r1);\\n                    }\\n                    break;\\n\\n\\n\\n                case 'dj3':\\n                    u = \\\"http://www.laladj.com\\\";\\n                    list = pdfa(fetchPC(u + \\\"/search?search=\\\" + keyword + \\\"&page=\\\" + MY_PAGE), \\\"body&&.list_musiclist&&tr[class]\\\");\\n                    for (item of list) {\\n                        Extra({\\n                            title: pdfh(item, \\\".t1&&Text\\\"),\\n                            img: u + item.match(/src=\\\"(.+?)\\\"/)[1],\\n                            content: 'dj3',\\n                            zyid: item.match(/value=\\\"(\\\\d+)\\\"/)[1] + '#dj3'\\n                        }, r1);\\n                    }\\n                    break;\\n\\n\\n\\n                case 'dj4':\\n                    list = pdfa(fetchPC(\\\"https://m.ahadj.com/search/?key=\\\" + keyword + \\\"&page=\\\" + MY_PAGE + \\\".html\\\"), \\\"body&&.yinyue_list&&li\\\");\\n                    for (item of list) {\\n                        title = pdfh(item, \\\"h3&&Text\\\");\\n                        url = \\\"https://st.92ku.com/zwcs/\\\" + title + \\\".mp4\\\";\\n                        Extra({\\n                            title: title,\\n                            img: pdfh(item, \\\"img&&src\\\"),\\n                            content: 'dj4',\\n                            zyid: pdfh(item, \\\"a,0&&href\\\").replace(/\\\\D/g, '') + '#dj4'\\n                        }, r1, 0, {\\n                            names: [ts[0]],\\n                            urls: [url + '#isMusic=true#']\\n                        });\\n                    }\\n                    break;\\n\\n\\n\\n                case 'dj5':\\n                    u = 'https://www.dj.net/';\\n                    _ = post(u + 'search.php?mod=music&formhash=8c964e8a&srchtxt=' + encodeStr(keyword, 'GBK') + '&searchsubmit=yes', {\\n                        headers: {\\n                            'content-type': 'text/html; charset=gbk',\\n                        },\\n                        redirect: false,\\n                        onlyHeaders: true\\n                    });\\n                    url = u + JSON.parse(_).headers.location[0] + \\\"&page=\\\" + MY_PAGE;\\n                    list = pdfa(fetch(url), \\\"body&&.music-list&&li\\\");\\n                    for (item of list) {\\n                        Extra({\\n                            title: pdfh(item, \\\"a,1&&Text\\\"),\\n                            img: u + pdfh(item, \\\"img&&src\\\").replace(\\\"&size=small\\\", \\\"\\\"),\\n                            content: 'dj5',\\n                            zyid: pdfh(item, \\\"a,1&&href\\\").match(/id=(\\\\d+)/)[1] + '#dj5'\\n                        }, r1);\\n                    }\\n                    break;\\n\\n\\n\\n                case 'dj6':\\n                    u = 'http://www.36dj.com/e/search/';\\n                    _ = post(u + 'index.php', {\\n                        body: {\\n                            classid: '1,2,3,4',\\n                            keyboard: keyword,\\n                            submit: '',\\n                            show: 'title',\\n                            tempid: '1'\\n                        },\\n                        redirect: false,\\n                        onlyHeaders: true\\n                    });\\n                    u += JSON.parse(_).headers.location[0] + \\\"&page=\\\" + (MY_PAGE - 1);\\n                    list = pdfa(fetch(u), \\\"body&&#playlist&&li\\\");\\n                    for (item of list) {\\n                        Extra({\\n                            title: pdfh(item, \\\"a,0&&Text\\\"),\\n                            img: $.require('image?rule=歌词适配')('dj6'),\\n                            content: 'dj6',\\n                            zyid: item.match(/value=\\\"(\\\\d+)\\\"/)[1] + '#dj6'\\n                        }, r1);\\n                    }\\n                    break;\\n\\n\\n\\n                case 'dj7':\\n                    u = 'https://www.7idj.com/e/search/'\\n                    _ = post(u + 'index.php', {\\n                        body: {\\n                            keyboard: keyword,\\n                            show: 'title'\\n                        },\\n                        redirect: false,\\n                        onlyHeaders: true\\n                    });\\n                    u += JSON.parse(_).headers.location[0] + \\\"&page=\\\" + (MY_PAGE - 1);\\n                    list = pdfa(fetch(u), \\\"body&&li[data-id]\\\");\\n                    for (item of list) {\\n                        Extra({\\n                            title: pdfh(item, \\\"a,0&&Text\\\"),\\n                            img: $.require('image?rule=歌词适配')('dj7'),\\n                            content: 'dj7',\\n                            zyid: item.match(/data-id=\\\"(\\\\d+)\\\"/)[1] + '#dj7'\\n                        }, r1);\\n                    }\\n                    break;\\n\\n\\n\\n                case 'dj8':\\n                    u = 'https://www.dju8.com/';\\n                    item = fetchPC(u + 'key/ml_' + encodeStr(keyword, 'GBK') + '_' + MY_PAGE + '.html', {\\n                        headers: {\\n                            'content-type': 'text/html; charset=gb2312',\\n                            'referer': u\\n                        }\\n                    });\\n                    list = pdfa(item, \\\"body&&#djour&&li[onmouseover]\\\");\\n                    for (item of list) {\\n                        Extra({\\n                            title: pdfh(item, \\\"a,0&&Text\\\"),\\n                            img: $.require('image?rule=歌词适配')('dj8'),\\n                            content: 'dj8',\\n                            zyid: item.match(/value=\\\"(\\\\d+)\\\"/)[1] + '#dj8'\\n                        }, r1);\\n                    }\\n                    break;\\n\\n\\n\\n                case 'dj9':\\n                    u = 'https://www.djyyy.com/search.php?ac=dj&key=' + keyword + '&pages=' + MY_PAGE;\\n                    list = pdfa(fetchPC(u), \\\"body&&li[data-id] \\\");\\n                    for (item of list) {\\n                        Extra({\\n                            title: pdfh(item, \\\"a,0&&Text\\\"),\\n                            img: $.require('image?rule=歌词适配')('dj9'),\\n                            content: 'dj9',\\n                            zyid: item.match(/data-id=\\\"(\\\\d+)\\\"/)[1] + '#dj9'\\n                        }, r1);\\n                    }\\n                    break;\\n\\n\\n\\n\\n\\n\\n                default:\\n                    d.push({\\n                        title: \\\"接口错误~\\\",\\n                        url: \\\"hiker://empty\\\",\\n                        col_type: \\\"text_center_1\\\",\\n                    });\\n                    break;\\n            }\\n            return total1 || ((MY_PAGE - 1) * total2 + list.length);\\n            break;\\n        default:\\n            d.push({\\n                title: \\\"没有可以搜索歌单的接口~\\\",\\n                url: \\\"hiker://empty\\\",\\n                col_type: \\\"text_center_1\\\",\\n            });\\n            break;\\n    }\\n}\\n\\nfunction lazy(platform, t1, t2, t3) {\\n    let _ = t1;\\n    t1 = _.songId || _.sourceListId;\\n    t2 = t2 && t2 != \\\"0\\\";\\n    t3 = t3 && t3 != \\\"0\\\";\\n    switch (String(_.content)) {\\n        case 'bd':\\n            _ = qianqian(\\\"song/tracklink\\\", {\\n                TSID: t1\\n            });\\n            if (t3) return _.path;\\n            return [_.path, _.lyric, 0];\\n            break;\\n\\n\\n\\n        case 'zz':\\n            u = 'https://zz123.com';\\n            _ = JSON.parse(post(u + '/ajax/', {\\n                body: \\\"act=songinfo&id=\\\" + t1 + \\\"&lang=\\\"\\n            })).data;\\n            if (t3) return _.mp3;\\n            return [_.mp3, _.lrc, 0];\\n            break;\\n\\n\\n\\n        case 'kz':\\n            u = [\\n                \\\"https://hayqbhgr.slider.kz\\\",\\n                t1, _.t2, _.t3, _.t4 + \\\".mp3\\\"\\n            ].join(\\\"/\\\");\\n            if (t3) return u;\\n            return [u, \\\"\\\", 0];\\n            break;\\n\\n\\n\\n        case 'ni':\\n            u = \\\"https://www.hifini.com/\\\";\\n            /*\\n                        item = executeWebRule(u + \\\"thread-\\\" + t1 + '.htm', $.toString(() => {\\n                            let bodyHTML = String(document.body.innerHTML);\\n                            return JSON.stringify([\\n                                ap4.music.url,\\n                                bodyHTML.replace(/^[\\\\s\\\\S]+?<\\\\/h5>|<h5[^>]*>[\\\\s\\\\S]+/gi, \\\"\\\")\\n                            ]);\\n                        }), {\\n                            timeout: 3000,\\n                            blockRules: ['sign.htm', 'b*.js', '.css', '.jpg', '.png', '.gif', '.svg', '.ico', '.otf', '.woff2']\\n                        });\\n                        [url, lrc] = JSON.parse(item);\\n            */\\n            function generateParam(data) { // by 风向\\n                let charst = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\\\";\\n                let xorkey = \\\"95wwwHiFiNicom27\\\"; // length = 16\\n                let bits = \\\"\\\"; // bin xor\\n                for (let i = 0; i < data.length; i++) {\\n                    let key = xorkey.charCodeAt(i % 16);\\n                    let uin = data.charCodeAt(i) ^ key;\\n                    bits += uin.toString(2).padStart(8, '0');\\n                }\\n                while (bits.length % 5) bits += \\\"0\\\";\\n                let b32t = \\\"\\\"; // base 32\\n                for (let i = 0; i < bits.length; i += 5) {\\n                    let chunk = bits.substring(i, i + 5);\\n                    b32t += charst[parseInt(chunk, 2)];\\n                }\\n                while (b32t.length % 8) b32t += \\\"=\\\";\\n                return b32t.replace(/=/g, 'HiFiNiYINYUECICHANG');\\n            }\\n            item = fetchPC(u + \\\"thread-\\\" + t1 + '.htm');\\n            eval('url = ' + item.match(/url\\\\: ('.*'\\\\)?),/i)[1]);\\n            url = /^https?/i.test(url) ? url : (u + url);\\n            if (t3) return url;\\n            lrc = item.split(\\\"</h5>\\\")[1].split(\\\"<h5\\\")[0];\\n            return [url, lrc, 0];\\n            break;\\n\\n\\n\\n        case 'g3':\\n            u = \\\"https://www.gggmusic.com/\\\";\\n            item = pdfh(fetch(u + \\\"thread-\\\" + t1 + \\\".htm\\\"), \\\"div.message.break-all&&Html\\\");\\n            eval(\\\"url=\\\" + item.match(/url:\\\\s*([^\\\\n,]+)/)[1].replace(\\\"base64_decode\\\", \\\"base64Decode\\\"));\\n            url = /^https?/i.test(url) ? url : (u + url);\\n            if (t3) return url;\\n            lrc = item.split(\\\"</h5>\\\")[1].split(\\\"<h5\\\")[0];\\n            return [url, lrc, 0];\\n            break;\\n\\n\\n\\n        case 'qy':\\n            u = \\\"https://www.qqyin.com/?plugin=xmusic_like&do=playmusic&articleId=\\\" + t1;\\n            _ = JSON.parse(fetch(u))[0];\\n            url = _.url || _.downlink;\\n            lrc = _.lrc || _.lyric;\\n            if (t3) return url;\\n            return [url, lrc, 0];\\n            break;\\n\\n\\n\\n\\n\\n\\n\\n\\n        case 'km':\\n            u = \\\"https://www.kumeiwp.com/file/\\\" + t1 + \\\".html\\\";\\n            url = pdfh(fetch(u), \\\"source,0&&src\\\");\\n            if (t3) return url;\\n            if (t2) {\\n                return $([ts[1]], 1, '选择下载音质').select((url) => {\\n                    return 'download://' + url;\\n                }, url);\\n            }\\n            return JSON.stringify({\\n                urls: [url + '#isMusic=true#'],\\n                lyric: \\\"\\\"\\n            });\\n            break;\\n\\n\\n\\n\\n\\n\\n        case 'bz':\\n            item = fetch(\\\"https://debenzi.com/u/\\\" + t1 + \\\"/\\\");\\n            url = pdfh(item, \\\"audio&&src\\\");\\n            if (t3) return url;\\n            if (t2) {\\n                return $([ts[1]], 1, '选择下载音质').select((url) => {\\n                    return 'download://' + url;\\n                }, url);\\n            }\\n            lrc = pdfh(item, \\\".entry-content&&Html\\\").split(\\\"<strong>歌词：</strong>\\\")[1];\\n            return JSON.stringify({\\n                urls: [url + '#isMusic=true#'],\\n                lyric: Lrc(lrc)\\n            });\\n            break;\\n\\n\\n\\n        case 'st':\\n            item = fetchPC(\\\"http://www.songtaste.co/song/\\\" + t1);\\n            url = pdfh(item, \\\"source,0&&src\\\");\\n            if (t3) return url;\\n            if (t2) {\\n                return $([ts[1]], 1, '选择下载音质').select((url) => {\\n                    return 'download://' + url;\\n                }, url);\\n            }\\n            eval(String(item.match(/lrc = `[\\\\s\\\\S]*?`;/)[0]));\\n            return JSON.stringify({\\n                urls: [url + '#isMusic=true#'],\\n                lyric: Lrc(lrc)\\n            });\\n            break;\\n\\n\\n\\n        case 'blm':\\n            u = 'https://blackblm.bailemi.com/index.php/dance/play/id/' + t1;\\n            _ = JSON.parse(fetch(u));\\n            url = _.downurl || _.playurl;\\n            if (t2) {\\n                return $([ts[1]], 1, '选择下载音质').select((url) => {\\n                    return 'download://' + url;\\n                }, url);\\n            }\\n            return url + '#isMusic=true#';\\n            break;\\n\\n\\n\\n        case 'fp':\\n            url = JSON.parse(fetch(\\\"https://www.fangpi.net/api/play_url?id=\\\" + t1 + \\\"&json=1\\\")).data.url;\\n            if (t2) {\\n                return $([ts[1]], 1, '选择下载音质').select((url) => {\\n                    return 'download://' + url;\\n                }, url);\\n            }\\n            return JSON.stringify({\\n                urls: [url + '#isMusic=true#'],\\n                lyric: \\\"https://www.fangpi.net/download/lrc/\\\" + t1\\n            });\\n            break;\\n\\n\\n\\n        case 'ht':\\n            u = \\\"http://m.htqyy.com/play/\\\" + t1;\\n            code = executeWebRule(u, $.toString(() => {\\n                return code;\\n            }), {\\n                blockRules: ['.js', '.css', '.jpg', '.png', '.gif', '.svg', '.ico']\\n            });\\n            url = \\\"http://f5.htqyy.com/play9/\\\" + t1 + \\\"/mp3/\\\" + code;\\n            if (t2) {\\n                return $([ts[1]], 1, '选择下载音质').select((url) => {\\n                    return 'download://' + url;\\n                }, url);\\n            }\\n            return JSON.stringify({\\n                urls: [url + '#isMusic=true#'],\\n                headers: [{\\n                    referer: u\\n                }]\\n            });\\n            break;\\n\\n\\n\\n        case '1t':\\n            u = \\\"https://www.1ting.com\\\";\\n            path = executeWebRule(`https://h5.1ting.com/song/` + t1, $.toString(() => {\\n                return g_song_meta.song_path;\\n            }), {\\n                blockRules: ['.js', '.css', '.jpg', '.png', '.gif', '.svg', '.ico']\\n            });\\n            url = u + \\\"/api/audio?\\\" + path;\\n            if (t2) {\\n                return $([ts[1]], 1, '选择下载音质').select((url, head) => {\\n                    u = fetch(url, {\\n                        headers: {\\n                            referer: u\\n                        },\\n                        redirect: false,\\n                        onlyHeaders: true\\n                    });\\n                    url = JSON.parse(u).headers.location[0];\\n                    return 'download://' + url;\\n                }, url, u);\\n            }\\n            lrc = u + \\\"/touch/api/lyric/\\\" + t1;\\n            lrc = JSON.parse(fetch(lrc)).lyric_content;\\n            if (!lrc.match(/\\\\[\\\\d+:\\\\d+/))\\n                lrc = Lrc(lrc);\\n            return JSON.stringify({\\n                urls: [url + '#isMusic=true#'],\\n                headers: [{\\n                    referer: u\\n                }],\\n                lyric: lrc\\n            });\\n            break;\\n\\n\\n\\n        case '9t':\\n            u = \\\"http://new.9sky.com/api/song/detail?id=\\\" + t1 + \\\"&is_login=N\\\";\\n            _ = JSON.parse(fetch(u)).data;\\n            if (t2) {\\n                return $([ts[1]], 1, '选择下载音质').select((url) => {\\n                    return 'download://' + url;\\n                }, _.song_url);\\n            }\\n            return JSON.stringify({\\n                urls: [_.song_url + '#isMusic=true#'],\\n                lrc: _.lyric_url || Lrc(_.design_notes)\\n            });\\n            break;\\n\\n\\n\\n        case '5nd':\\n            item = fetch(`http://m.5nd.com/ting/${t1}.html`);\\n            eval(item.match(/mp3 = .*?;/)[0]);\\n            url = 'http://mpge.5nd.com/' + mp3;\\n            if (t2) {\\n                return $([ts[1]], 1, '选择下载音质').select((url) => {\\n                    return 'download://' + url;\\n                }, url);\\n            }\\n            lrc = pdfh(item, \\\"#lrccont&&Html\\\").replace(/<\\\\!--.*?-->|<br\\\\/?>/gi, '\\\\n')\\n            return JSON.stringify({\\n                urls: [url + '#isMusic=true#'],\\n                lyric: lrc\\n            });\\n            break;\\n\\n\\n\\n        case 'biu':\\n            url = JSON.parse(fetch(\\\"https://biu.moe/Song/playSID/sid/\\\" + t1)).urlinfo.url;\\n            if (t2) {\\n                return $([ts[1]], 1, '选择下载音质').select((url) => {\\n                    return 'download://' + url;\\n                }, url);\\n            }\\n            lrc = pdfh(fetch(\\\"https://biu.moe/s\\\" + t1), \\\".am-popup-bd&&Html\\\").replace(/<(button).*?\\\\1>|<\\\\/?br\\\\/?>/gi, \\\"\\\\n\\\");\\n            return JSON.stringify({\\n                urls: [url + '#isMusic=true#'],\\n                lyric: lrc\\n            });\\n            break;\\n\\n\\n\\n\\n\\n\\n        case 'dj1':\\n            item = fetchPC(\\\"http://www.zzzdj.com/music/info-\\\" + t1);\\n            url = pdfh(item, \\\"audio&&src\\\");\\n            if (t2) {\\n                return $([ts[0]], 1, '选择下载音质').select((url) => {\\n                    return 'download://' + url;\\n                }, url);\\n            }\\n            return url + '#isMusic=true#';\\n            break;\\n\\n\\n\\n        case 'dj2':\\n            uri = JSON.parse(fetchPC(\\\"https://www.djuu.com/wap/play/play?id=\\\" + t1)).data.listenurl;\\n            url = `http://mp4.djuu.com/${uri}.m4a`;\\n            if (t2) {\\n                return $([ts[0]], 1, '选择下载音质').select((url) => {\\n                    return 'download://' + url;\\n                }, url);\\n            }\\n            return url + '#isMusic=true#';\\n            break;\\n\\n\\n\\n        case 'dj3':\\n            url = JSON.parse(fetchPC(\\\"http://www.laladj.com/index/index/get_cookie\\\", {\\n                \\\"headers\\\": {\\n                    \\\"Cookie\\\": `song_list=think:[{\\\"id\\\":\\\"${t1}\\\"}];`\\n                }\\n            })).data[0].path;\\n            if (t2) {\\n                return $([ts[0]], 1, '选择下载音质').select((url) => {\\n                    return 'download://' + url;\\n                }, url);\\n            }\\n            return url + '#isMusic=true#';\\n            break;\\n\\n\\n\\n        case 'dj4':\\n            uri = executeWebRule(\\\"https://www.ahadj.com/music/\\\" + t1 + \\\".html\\\", $.toString(() => {\\n                return danceFilePath;\\n            }), {\\n                blockRules: ['.js', '.css', '.jpg', '.png', '.gif', '.svg', '.ico']\\n            });\\n            url = `https://st.92ku.com/` + uri;\\n            if (t2) {\\n                return $([ts[0]], 1, '选择下载音质').select((url) => {\\n                    return 'download://' + url;\\n                }, url);\\n            }\\n            return url + '#isMusic=true#';\\n            break;\\n\\n\\n\\n        case 'dj5':\\n            _ = post('https://m.dj.net/template/zhzh_dzmusic/ajax/?action=geturl', {\\n                body: \\\"id=\\\" + t1\\n            });\\n            url = \\\"https://djnet.src.dj.net:4431/\\\" + JSON.parse(_).data[0].src;\\n            if (t2) {\\n                return $([ts[0]], 1, '选择下载音质').select((url) => {\\n                    return 'download://' + url;\\n                }, url);\\n            }\\n            return url + '#isMusic=true#';\\n            break;\\n\\n\\n\\n        case 'dj6':\\n            uri = executeWebRule(\\\"http://www.36dj.com/play/\\\" + t1 + \\\".html\\\", $.toString(() => {\\n                return info.playurl;\\n            }), {\\n                blockRules: ['.js', '.css', '.jpg', '.png', '.gif', '.svg', '.ico', '/e/']\\n            });\\n            url = `http://tn1.72djapp.cn:8399/` + uri;\\n            if (t2) {\\n                return $([ts[0]], 1, '选择下载音质').select((url) => {\\n                    return 'download://' + url;\\n                }, url);\\n            }\\n            return url + '#isMusic=true#';\\n            break;\\n\\n\\n\\n        case 'dj7':\\n            url = executeWebRule(\\\"https://www.7idj.com/dj/\\\" + t1 + \\\".html\\\", $.toString(() => {\\n                return playurl;\\n            }), {\\n                blockRules: ['.js', '.css', '.jpg', '.png', '.gif', '.svg', '.ico']\\n            });\\n            if (t2) {\\n                return $([ts[0]], 1, '选择下载音质').select((url) => {\\n                    return 'download://' + url;\\n                }, url);\\n            }\\n            return url + '#isMusic=true#';\\n            break;\\n\\n\\n\\n        case 'dj8':\\n            u = 'https://www.dju8.com';\\n            item = u + '/ik/z/?' + executeWebRule(u + '/disco/' + t1 + '/', $.toString(() => {\\n                return furl;\\n            }), {\\n                blockRules: ['.js', '.css', '.jpg', '.png', '.gif', '.svg', '.ico']\\n            });\\n            item = fetchCodeByWebView(item, {\\n                blockRules: ['.css', '.jpg', '.png', '.gif', '.svg', '.ico']\\n            });\\n            url = pdfh(item, \\\"audio&&src\\\");\\n            if (t2) {\\n                return $([ts[0]], 1, '选择下载音质').select((url) => {\\n                    return 'download://' + url;\\n                }, url);\\n            }\\n            return url + '#isMusic=true#';\\n            break;\\n\\n\\n\\n        case 'dj9':\\n            url = executeWebRule('https://m.djyyy.com/play/' + t1 + '.html', $.toString(() => {\\n                return playurl;\\n            }), {\\n                blockRules: ['.js', '.css', '.jpg', '.png', '.gif', '.svg', '.ico']\\n            });\\n            if (t2) {\\n                return $([ts[0]], 1, '选择下载音质').select((url) => {\\n                    return 'download://' + url;\\n                }, url);\\n            }\\n            return url + '#isMusic=true#';\\n            break;\\n    }\\n}\\n$.exports = {\\n    mv: function(_, t1) {\\n        return [\\n            [],\\n            []\\n        ];\\n    },\\n    getLyric: function(_, t1) {\\n        return \\\"\\\";\\n    },\\n    search,\\n    lazy\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"③程序首页\",\"path\":\"home\",\"rule\":\"js:\\neval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配', {})).rule);\\naddListener('onRefresh', $.toString(() => {\\n    clearMyVar('home_page');\\n}));\\nlet x5_0 = {\\n    col_type: \\\"x5_webview_single\\\",\\n    url: empty,\\n    desc: '0',\\n    extra: {\\n        canBack: true\\n    }\\n}\\ntry {\\n    // MY_PAGE == 1 && (d = [], Loading());\\n    iTag = storage0.getMyVar(platform + \\\"_iTag\\\");\\n    if (iTag == \\\"\\\")\\n        iTag = {},\\n        $.require(platform + '?rule=歌词适配').iTag();\\n    let tid = getMyVar('tid', '推荐');\\n    let trr = Object.keys(iTag[tid]);\\n    let tii = getMyVar('tii', '0');\\n    uri = iTag[tid][trr[tii]];\\n    let trd = trr[tii];\\n\\n    themeType = \\\"home\\\";\\n    eval(JSON.parse(fetch('hiker://page/theme3?rule=歌词适配', {})).rule);\\n    let data = getData1(themeType, _X5());\\n    if (_X5()) {\\n        if (MY_PAGE == 1) {\\n            d = [{\\n                col_type: \\\"x5_webview_single\\\",\\n                url: 'https://m.baidu.com',\\n                desc: 'screen-133&&float',\\n                extra: {\\n                    canBack: true,\\n                    ua: \\\"Mozilla/5.0 (Linux; Android 13; Mi 10 Pro Build/TKQ1.221114.001; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/97.0.4692.98 Mobile Safari/537.36 T7/13.34 SearchCraft/3.10.1 (Baidu; P1 13)\\\"\\n                }\\n            }];\\n            name = \\\"网站整合\\\";\\n            author = \\\"Thomas喲\\\";\\n            img = \\\"hiker://images/rule_type_all\\\";\\n            eval(getData2({\\n                data: '#主题切换#__{Rich:true,Strong:true,Color:\\\"#62a6fb\\\"}',\\n                type: \\\"scroll_button\\\"\\n            }));\\n            d.push({\\n                title: Rich(Strong(Color(\\\"百度一下\\\"))),\\n                url: empty,\\n                col_type: \\\"scroll_button\\\"\\n            });\\n            d.push({\\n                title: \\\"网站设置\\\",\\n                url: \\\"toast://完善中~\\\",\\n                col_type: \\\"scroll_button\\\"\\n            });\\n        } else d = [];\\n    } else {\\n        d = [x5_0];\\n        eval(String(data.map(_ => {\\n            return getData2(_);\\n        }).join(\\\"\\\\n\\\")));\\n    }\\n} catch (fetch_error) {\\n    d = [x5_0, {\\n        title: \\\"网络异常 / 接口崩溃了\\\",\\n        desc: \\\"换个接口看看。\\\",\\n        url: $(\\\"\\\\n\\\\n\\\" + fetch_error + \\\"\\\\n\\\\n\\\").confirm(() => {\\n            return 'hiker://empty';\\n        }),\\n        col_type: 'text_center_1',\\n        extra: {\\n            lineVisible: false\\n        }\\n    }];\\n    platforms.slice(1, 8)\\n        .filter(title => title != platform)\\n        .map(title => {\\n            d.push({\\n                title: title,\\n                col_type: 'icon_2_round',\\n                img: $.require('image?rule=歌词适配')(title),\\n                url: $('#noLoading#').lazyRule((title) => {\\n                    putMyVar('platform', title);\\n                    clearMyVar('home_page');\\n                    clearMyVar('tid');\\n                    clearMyVar('tii');\\n                    refreshPage();\\n                    return 'hiker://empty';\\n                }, title)\\n            });\\n        });\\n}\\nMY_PAGE == 1 ? setPreResult(d) : setResult(d);\\ndeleteItemByCls('loading_gif');\\n\\n\\n\\n\\n\\n// 小程序没有更新，对解析进行检测。\\nif ((getMyVar('Rule_noupdate', '') == '1' || getItem('no_update', '0') == '1') && MY_PAGE == 1) {\\n    const {\\n        getJxlist,\\n        setJxlist\\n    } = $.require('jiexi?rule=歌词适配');\\n    let kg_list1 = getJxlist('kg');\\n    let kg_list2 = kg_list1.map(_ => md5(_.title + _.url));\\n    let kg_item1 = kg_list2.indexOf(\\\"d734c1d339b9a882310fa31725841286\\\");\\n    let kg_item2 = kg_list2.indexOf(\\\"c877ae72b97bc26720ad8b1a39362d47\\\");\\n\\n\\n\\n    // 清除失效缓存 & 备份收藏数据\\n    let timeout = $.require('collection2?rule=歌词适配').getData(\\\"bak\\\");\\n    if (Number(getMyVar('url_timeout', '0')) < timeout) {\\n        let s1 = \\\"hiker://files/rules/Thomas/gcsp1999/songCache.json\\\";\\n        if (fileExist(s1)) {\\n            let s0 = 0;\\n            let s2 = JSON.parse(readFile(s1));\\n            for (let k1 in s2) {\\n                let s3 = s2[k1]; // qq\\n                for (let k2 in s3) {\\n                    let s4 = s3[k2]; // mid\\n                    let s5 = false\\n                    for (let k3 of ['128k', '320k', 'flac', 'flac24bit']) {\\n                        if (s4[k3]) { // 128k\\n                            if (s4[k3].timeout < timeout) {\\n                                delete s4[k3];\\n                                s0++;\\n                            } else {\\n                                s5 = true\\n                            }\\n                        }\\n                    }\\n                    if (s5) {\\n                        s3[k2] = s4;\\n                    } else {\\n                        delete s3[k2];\\n                    }\\n                }\\n                s2[k1] = s3;\\n            }\\n            log(\\\"已删除 失效链接缓存*\\\" + s0);\\n            saveFile(s1, JSON.stringify(s2, 0, 1));\\n        }\\n        putMyVar('url_timeout', timeout + 6e5);\\n    }\\n\\n\\n\\n    // kg_token保活\\n    function kg_refresh_token(_) {\\n        let jiexi_aes = aesDecode('hk6666666109', _.jiexi);\\n        [mat, userid, token, appid, signkey] = jiexi_aes.match(/[\\\\s\\\\S]+\\\"(\\\\d+)\\\",\\\\s+\\\"([^\\\"]+)\\\",\\\\s+\\\"(\\\\d*)\\\",\\\\s+\\\"([^\\\"]*)\\\"[\\\\s\\\\S]*/);\\n        let new_token = $.require(\\\"kg?rule=歌词适配\\\").refresh_token(userid, token, appid, signkey);\\n        if (new_token == 20018) {\\n            log(\\\"kg_refresh_token...\\\\n\\\" + _.title + \\\"：token获取失败，可能是登录掉了，请重新配置\\\");\\n            return _;\\n        }\\n        log(\\\"kg_refresh_token...\\\\n\\\" + _.title + \\\"：token获取\\\" + (new_token ? (\\\"成功  |  是否更改：\\\" + (token != new_token)) : \\\"失败，原因未知\\\"));\\n        _.jiexi = aesEncode('hk6666666109', jiexi_aes.replace(token, new_token || token));\\n        return _;\\n    }\\n    if (kg_item1 != -1 && !getMyVar('kg_item1')) {\\n        kg_list1[kg_item1] = kg_refresh_token(kg_list1[kg_item1]);\\n    }\\n    if (kg_item2 != -1 && !getMyVar('kg_item2')) {\\n        kg_list1[kg_item2] = kg_refresh_token(kg_list1[kg_item2]);\\n    }\\n    if (\\n        (kg_item1 != -1 || kg_item2 != -1) &&\\n        (!getMyVar('kg_item1') || !getMyVar('kg_item2'))\\n    ) {\\n        if (kg_item1 != -1) putMyVar('kg_item1', '1');\\n        if (kg_item2 != -1) putMyVar('kg_item2', '2');\\n        setJxlist('kg', kg_list1);\\n    }\\n\\n\\n    // qq_token保活\\n    let qq_lite = getJxlist('qq').find(_ => md5(_.title + _.url) == \\\"e2c1a4bf8d58d1703a5e8109e1f90cc0\\\");\\n    if (qq_lite && !getMyVar('update2')) {\\n        putMyVar('update2', '0');\\n        if (qq_lite.time + 5.3e8 < timeout) {\\n            let cookie = aesDecode('hk6666666109', qq_lite.jiexi).match(/Cookie: \\\"([^\\\"]+)/)[1];\\n            $.require(\\\"qq?rule=歌词适配\\\").refresh_login(cookie);\\n        } else {\\n            log(\\\"qq_refresh_token...\\\\nQQ音乐：六天刷新一次，还没到刷新时间~\\\");\\n        }\\n    }\\n\\n\\n\\n\\n    // 酷狗概念版 每日签到领会员 弹窗提示\\n    let kg_lite, time = Number($.dateFormat(timeout, 'yyyyMMdd'));\\n    if (getMyVar('update1', getItem('update1', '1')) == '1' && kg_item2 != -1) {\\n        kg_lite = kg_list1[kg_item2];\\n        if ($.dateFormat(kg_lite.time, 'yyyyMMdd') < time) {\\n            confirm({\\n                title: '[酷狗概念版] 听歌领会员',\\n                content: '每日听歌即可领取1日酷狗概念版VIP',\\n                confirm: $.toString((_) => {\\n                    let mat = aesDecode('hk6666666109', _.jiexi).match(/\\\"(\\\\d+)\\\",\\\\s+\\\"([^\\\"]+)\\\",\\\\s+\\\"\\\\d*\\\",\\\\s+\\\"([^\\\"]*)\\\"/);\\n                    putMyVar('update1', '0');\\n                    return $.require(\\\"kg?rule=歌词适配\\\").Lite_Signin(mat[1], mat[2], mat[3], true);\\n                }, kg_lite),\\n                cancel: $.toString((jxlist, i, _, setJxlist) => {\\n                    _.time = new Date().getTime();\\n                    _.signin = 1;\\n                    jxlist[i] = _;\\n                    setJxlist('kg', jxlist);\\n                    putMyVar('update1', '0');\\n                    return \\\"toast://今日不再提示，请在设置页手动签到\\\"\\n                }, kg_list1, kg_item2, kg_lite, setJxlist)\\n            });\\n        } else {\\n            putMyVar('update1', '0'); // 今天已经签到过了\\n        }\\n    } else {\\n        putMyVar('update1', '0'); // 没有概念版解析 / 不提示\\n    }\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"⑦规则编辑\",\"path\":\"ruleEdit\",\"rule\":\"js:\\neval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配', {})).rule);\\nlet d = [];\\nlet jx_s1 = getMyVar('jx_s1', '0') == '0';\\nlet jx_s2 = getMyVar('jx_s2', '0') == '0';\\nlet jx_s3 = getMyVar('jx_s2', '0') == '1';\\nlet jx_type = getMyVar('jx_type', 'kw');\\nlet jx_open = getMyVar('jx_open', '1') == '1';\\nlet jx_down = getMyVar('jx_down', '0') == '1';\\nlet jx_tid = getMyVar('jx_tid', MY_PARAMS.new ? '基本' : '预览');\\nd.push({\\n    title: '<span style=\\\"color:#ff6601\\\"><b>解析平台</b></span>',\\n    url: $(platforms.slice(1, 6).concat(\\\"qt\\\").map(title => {\\n        if (title == jx_type)\\n            title = Rich(Strong(Color(title)));\\n        return title\\n    }), 2, '选择接口平台').select(() => {\\n        if (!input.match(/^‘‘’’/)) {\\n            putMyVar('jx_type', input);\\n            refreshPage(false);\\n        }\\n        return 'hiker://empty';\\n    }),\\n    img: $.require('image?rule=歌词适配')(jx_type),\\n    col_type: 'icon_small_3'\\n});\\nd.push({\\n    title: '<span style=\\\"color:#ff6601\\\"><b>启用试听</b></span>',\\n    url: $('#noLoading#').lazyRule((K, open) => {\\n        if (K) {\\n            putMyVar('jx_open', open);\\n            refreshPage(false);\\n            return 'hiker://empty';\\n        } else {\\n            return $(\\\"\\\", \\\"请输入激活密匙\\\").input((open) => {\\n                if (md5(input) == getMyVar('jx_m1')) {\\n                    putMyVar('jx_s1', '0');\\n                    putMyVar('jx_open', open);\\n                    refreshPage(false);\\n                    return 'hiker://empty';\\n                }\\n                return \\\"toast://激活失败\\\";\\n            }, open);\\n        }\\n    }, jx_s1, jx_open ? '0' : '1'),\\n    img: 'http://123.56.105.145/tubiao/messy/' + (jx_open ? 55 : 63) + '.svg',\\n    col_type: 'icon_small_3'\\n});\\nd.push({\\n    title: '<span style=\\\"color:#ff6601\\\"><b>启用下载</b></span>',\\n    url: $('#noLoading#').lazyRule((K, down) => {\\n        if (K) {\\n            putMyVar('jx_down', down);\\n            refreshPage(false);\\n            return 'hiker://empty';\\n        } else {\\n            return $(\\\"\\\", \\\"请输入激活密匙\\\").input((down) => {\\n                if (md5(input) == getMyVar('jx_m1')) {\\n                    putMyVar('jx_s1', '0');\\n                    putMyVar('jx_down', down);\\n                    refreshPage(false);\\n                    return 'hiker://empty';\\n                }\\n                return \\\"toast://激活失败\\\";\\n            }, down);\\n        }\\n    }, jx_s1, jx_down ? '0' : '1'),\\n    img: 'http://123.56.105.145/tubiao/messy/' + (jx_down ? 55 : 63) + '.svg',\\n    col_type: 'icon_small_3'\\n});\\n[\\\"预览\\\", \\\"基本\\\", \\\"音质\\\", \\\"解析\\\", \\\"拓展\\\"].map(name => {\\n    let i = jx_tid == name\\n    d.push({\\n        title: Rich(Strong(i ? Color(name) : name)),\\n        url: $('#noLoading#').lazyRule((tid, tii, feg) => {\\n            if (tii) {\\n                putMyVar('jx_tid', tid);\\n                refreshPage(false);\\n            }\\n            return 'hiker://empty';\\n        }, name, !i, !jx_s2),\\n        col_type: 'text_5'\\n    });\\n});\\nswitch (jx_tid) {\\n    case '预览':\\n        d.push({\\n            title: Strong(getMyVar('jx_title')),\\n            desc: [\\\"mp3\\\", \\\"hq\\\", \\\"sq\\\", \\\"hr\\\", /* \\\"zq\\\"*/ ].map(t => getMyVar(\\\"jx_\\\" + t) != \\\"\\\" ? '★' : '☆').join(\\\"\\\"),\\n            url: 'hiker://empty',\\n            col_type: 'avatar',\\n            img: getMyVar('jx_img') || $.require('image?rule=歌词适配')()\\n        });\\n        d.push({\\n            title: getMyVar('jx_desc') + '丨' + getMyVar('jx_url'),\\n            url: 'hiker://empty',\\n            col_type: 'text_1',\\n            extra: {\\n                lineVisible: false\\n            }\\n        });\\n        d.push({\\n            col_type: 'line_blank'\\n        });\\n        d.push({\\n            title: getMyVar('jx_content', '\\\\n\\\\n\\\\n\\\\n\\\\n').replace(/\\\\n/g, '<br>'),\\n            url: 'hiker://empty',\\n            col_type: 'rich_text'\\n        });\\n        d.push({\\n            col_type: 'line_blank'\\n        });\\n        d.push({\\n            title: '使用权限',\\n            url: $('#noLoading#').lazyRule((K) => {\\n                if (K) return 'hiker://empty';\\n                return $(\\\"\\\", \\\"请输入密匙\\\").input(() => {\\n                    if (md5(input) == getMyVar('jx_m1')) {\\n                        putMyVar('jx_s1', '0');\\n                        refreshPage(false);\\n                        return \\\"toast://验证成功\\\";\\n                    }\\n                    return \\\"toast://验证失败\\\";\\n                });\\n            }, jx_s1),\\n            img: 'http://123.56.105.145/tubiao/messy/' + (jx_s1 ? 55 : 63) + '.svg',\\n            col_type: 'icon_2_round',\\n        });\\n        d.push({\\n            title: '编辑权限',\\n            url: $('#noLoading#').lazyRule((K) => {\\n                if (K) return 'hiker://empty';\\n                return $(\\\"\\\", \\\"请输入密匙\\\").input(() => {\\n                    if (md5(input) == getMyVar('jx_m2')) {\\n                        putMyVar('jx_s2', '0');\\n                        refreshPage(false);\\n                        return \\\"toast://验证成功\\\";\\n                    }\\n                    return \\\"toast://验证失败\\\";\\n                });\\n            }, jx_s2),\\n            img: 'http://123.56.105.145/tubiao/messy/' + (jx_s2 ? 55 : 63) + '.svg',\\n            col_type: 'icon_2_round'\\n        });\\n        break;\\n    case '基本':\\n        [\\n            ['必填，源标识', 'url'],\\n            ['必填，源名称', 'title'],\\n            ['选填，源图标', 'img'],\\n            ['选填，源分组', 'desc'],\\n            ['选填，源注释', 'content']\\n        ].map([a, b] => {\\n            d.push({\\n                desc: a,\\n                col_type: 'input',\\n                extra: {\\n                    defaultValue: getMyVar(\\\"jx_\\\" + b),\\n                    onChange: `putMyVar(\\\"jx_${b}\\\", input)`,\\n                    highlight: true\\n                }\\n            });\\n        });\\n        break;\\n    case '音质':\\n        [\\n            ['选填，标准音质。例：t2=\\\"128k\\\"', 'mp3'],\\n            ['选填，高品音质。例：t2=\\\"320k\\\"', 'hq'],\\n            ['选填，无损音质。例：t2=\\\"2000k\\\"', 'sq'],\\n            ['选填，高品无损。例：t2=\\\"4000k\\\"', 'hr'],\\n            // ['选填，立体无损。例：t2=\\\"20000k\\\"', 'zq']\\n        ].map([a, b] => {\\n            let _ = {\\n                highlight: true\\n            }\\n            if (jx_s2 || jx_s3) {\\n                _.defaultValue = aesDecode('hk6666666109', getMyVar(\\\"jx_\\\" + b));\\n                _.onChange = $.toString((name) => {\\n                    if (input.trim() != \\\"\\\") {\\n                        putMyVar(name, getPrivateJS(input.trim()));\\n                    } else {\\n                        putMyVar(name, \\\"\\\");\\n                    }\\n                }, \\\"jx_\\\" + b);\\n            } else {\\n                _.defaultValue = \\\"没有权限，请解锁。\\\"\\n            }\\n            d.push({\\n                desc: a,\\n                col_type: 'input',\\n                extra: _\\n            });\\n        });\\n        break;\\n    case '解析':\\n        let _ = {\\n            highlight: true,\\n            type: \\\"textarea\\\",\\n            height: 7\\n        }\\n        if (jx_s2 || jx_s3) {\\n            _.defaultValue = aesDecode('hk6666666109', getMyVar(\\\"jx_jiexi\\\"));\\n            _.onChange = $.toString((name) => {\\n                if (input.trim() != \\\"\\\") {\\n                    putMyVar(name, getPrivateJS(input.trim()));\\n                } else {\\n                    putMyVar(name, \\\"\\\");\\n                }\\n            }, \\\"jx_jiexi\\\");\\n        } else {\\n            _.defaultValue = \\\"没有权限，请解锁。\\\"\\n        }\\n        d.push({\\n            desc: '变量：_ & t1 & musicItem\\\\n\\\\n说明：可以从音质那里传变量过来(例: t2)\\\\n\\\\n定义url就行，示例：\\\\nuri = `https://baidu.com?a=${t1}&b=${t2}`;\\\\nurl = JSON.parse(fetch(uri)).url;',\\n            col_type: 'input',\\n            extra: _\\n        });\\n        break;\\n    case '拓展':\\n        d.push({\\n            title: '填写密匙后，可以对音源做一些限制。',\\n            desc: '密匙无法追回，填记得住的！',\\n            url: 'hiker://empty',\\n            col_type: 'text_center_1',\\n            extra: {\\n                lineVisible: false\\n            }\\n        });\\n        d.push({\\n            title: Strong('编辑源的限制'),\\n            url: 'hiker://empty',\\n            col_type: 'avatar',\\n            img: 'hiker://images/home_icon_edit'\\n        });\\n        d.push({\\n            title: '可以看，可以编辑(大爱无疆)',\\n            url: $('#noLoading#').lazyRule((K) => {\\n                if (K) return 'hiker://empty';\\n                return $(\\\"\\\", \\\"请输入密匙\\\").input(() => {\\n                    if (md5(input) == getMyVar('jx_m2')) {\\n                        putMyVar('jx_s2', '0');\\n                        putMyVar('jx_m2', '');\\n                        refreshPage(false);\\n                        return \\\"toast://更改成功\\\";\\n                    }\\n                    return \\\"toast://验证失败\\\";\\n                });\\n            }, jx_s2),\\n            col_type: 'text_icon',\\n            img: 'http://123.56.105.145/tubiao/messy/' + (jx_s2 ? 55 : 63) + '.svg'\\n        });\\n        d.push({\\n            title: '可以看，不能编辑(防止二改)',\\n            url: $('#noLoading#').lazyRule((K1, K2) => {\\n                if (getMyVar('jx_m2') == \\\"\\\") {\\n                    return $(\\\"\\\", \\\"请输入密匙\\\").input(() => {\\n                        return $(\\\"\\\", \\\"请确认密匙\\\").input((input2) => {\\n                            if (input == input2) {\\n                                putMyVar('jx_s2', '1');\\n                                putMyVar('jx_m2', md5(input));\\n                                refreshPage(false);\\n                                return \\\"toast://加密成功\\\";\\n                            }\\n                            return \\\"toast://加密失败\\\";\\n                        }, input);\\n                    });\\n                } else if (K1) {\\n                    return $(\\\"\\\", \\\"操作类型：更改密匙\\\\n请输入原密匙\\\").input(() => {\\n                        if (md5(input) == getMyVar('jx_m2')) {\\n                            return $(\\\"\\\", \\\"请输入密匙\\\").input(() => {\\n                                return $(\\\"\\\", \\\"请确认密匙\\\").input((input2) => {\\n                                    if (input == input2) {\\n                                        putMyVar('jx_s2', '1');\\n                                        putMyVar('jx_m2', md5(input));\\n                                        refreshPage(false);\\n                                        return \\\"toast://加密成功\\\";\\n                                    }\\n                                    return \\\"toast://加密失败\\\";\\n                                }, input);\\n                            });\\n                        }\\n                        return \\\"toast://原密匙验证失败\\\";\\n                    });\\n                } else if (K2) {\\n                    return $(\\\"\\\", \\\"操作类型：权限降级\\\\n请输入密匙\\\").input(() => {\\n                        if (md5(input) == getMyVar('jx_m2')) {\\n                            putMyVar('jx_s2', '1');\\n                            refreshPage(false);\\n                            return 'hiker://empty';\\n                        }\\n                        return \\\"toast://密匙错误，降级失败\\\";\\n                    });\\n                } else {\\n                    putMyVar('jx_s2', '1');\\n                    refreshPage(false);\\n                    return 'hiker://empty';\\n                }\\n            }, jx_s3, !jx_s2),\\n            col_type: 'text_icon',\\n            img: 'http://123.56.105.145/tubiao/messy/' + (jx_s2 ? 63 : jx_s3 ? 55 : 63) + '.svg'\\n        });\\n        d.push({\\n            title: '不能看，不能编辑(能用就行)',\\n            url: $('#noLoading#').lazyRule((K1, K2) => {\\n                if (getMyVar('jx_m2') == \\\"\\\") {\\n                    return $(\\\"\\\", \\\"请输入密匙\\\").input(() => {\\n                        return $(\\\"\\\", \\\"请确认密匙\\\").input((input2) => {\\n                            if (input == input2) {\\n                                putMyVar('jx_s2', '2');\\n                                putMyVar('jx_m2', md5(input));\\n                                refreshPage(false);\\n                                return \\\"toast://加密成功\\\";\\n                            }\\n                            return \\\"toast://加密失败\\\";\\n                        }, input);\\n                    });\\n                } else if (K1 && K2) {\\n                    return $(\\\"\\\", \\\"操作类型：更改密匙\\\\n请输入原密匙\\\").input(() => {\\n                        if (md5(input) == getMyVar('jx_m2')) {\\n                            return $(\\\"\\\", \\\"请输入密匙\\\").input(() => {\\n                                return $(\\\"\\\", \\\"请确认密匙\\\").input((input2) => {\\n                                    if (input == input2) {\\n                                        putMyVar('jx_s2', '2');\\n                                        putMyVar('jx_m2', md5(input));\\n                                        refreshPage(false);\\n                                        return \\\"toast://加密成功\\\";\\n                                    }\\n                                    return \\\"toast://加密失败\\\";\\n                                }, input);\\n                            });\\n                        }\\n                        return \\\"toast://原密匙验证失败\\\";\\n                    });\\n                } else {\\n                    putMyVar('jx_s2', '2');\\n                    refreshPage(false);\\n                    return 'hiker://empty';\\n                }\\n            }, !jx_s3, !jx_s2),\\n            col_type: 'text_icon',\\n            img: 'http://123.56.105.145/tubiao/messy/' + (jx_s2 ? 63 : jx_s3 ? 63 : 55) + '.svg'\\n        });\\n        d.push({\\n            title: Strong('使用源的限制'),\\n            url: 'hiker://empty',\\n            col_type: 'avatar',\\n            img: 'hiker://images/home_icon_code'\\n        });\\n        d.push({\\n            title: '没有验证(不搞花的)',\\n            url: $('#noLoading#').lazyRule((K) => {\\n                if (K) return 'hiker://empty';\\n                return $(\\\"\\\", \\\"请输入密匙\\\").input(() => {\\n                    if (md5(input) == getMyVar('jx_m1')) {\\n                        putMyVar('jx_s1', '0');\\n                        putMyVar('jx_m1', '');\\n                        refreshPage(false);\\n                        return \\\"toast://验证成功\\\";\\n                    }\\n                    return \\\"toast://验证失败\\\";\\n                });\\n            }, jx_s1),\\n            col_type: 'text_icon',\\n            img: 'http://123.56.105.145/tubiao/messy/' + (jx_s1 ? 55 : 63) + '.svg'\\n        });\\n        d.push({\\n            title: '激活验证(验证一下)',\\n            url: $('#noLoading#').lazyRule((K) => {\\n                if (getMyVar('jx_m1') == \\\"\\\") {\\n                    return $(\\\"\\\", \\\"请输入密匙\\\").input(() => {\\n                        return $(\\\"\\\", \\\"请确认密匙\\\").input((input2) => {\\n                            if (input == input2) {\\n                                putMyVar('jx_s1', '1');\\n                                putMyVar('jx_m1', md5(input));\\n                                refreshPage(false);\\n                                return \\\"toast://加密成功\\\";\\n                            }\\n                            return \\\"toast://加密失败\\\";\\n                        }, input);\\n                    });\\n                } else if (K) {\\n                    putMyVar('jx_s1', '1');\\n                    refreshPage(false);\\n                    return 'hiker://empty';\\n                } else {\\n                    return $(\\\"\\\", \\\"操作类型：更改密匙\\\\n请输入原密匙\\\").input(() => {\\n                        if (md5(input) == getMyVar('jx_m1')) {\\n                            return $(\\\"\\\", \\\"请输入密匙\\\").input(() => {\\n                                return $(\\\"\\\", \\\"请确认密匙\\\").input((input2) => {\\n                                    if (input == input2) {\\n                                        putMyVar('jx_s1', '1');\\n                                        putMyVar('jx_m1', md5(input));\\n                                        refreshPage(false);\\n                                        return \\\"toast://加密成功\\\";\\n                                    }\\n                                    return \\\"toast://加密失败\\\";\\n                                }, input);\\n                            });\\n                        }\\n                        return \\\"toast://原密匙验证失败\\\";\\n                    });\\n                }\\n            }, jx_s1),\\n            col_type: 'text_icon',\\n            img: 'http://123.56.105.145/tubiao/messy/' + (jx_s1 ? 63 : 55) + '.svg'\\n        });\\n        d.push({\\n            title: '时效验证(等待完善)',\\n            url: 'hiker://empty',\\n            col_type: 'text_icon',\\n            img: 'http://123.56.105.145/tubiao/messy/63.svg'\\n        });\\n        break;\\n}\\nd.push({\\n    title: Rich(Strong(Color('保存并退出'))),\\n    desc: '上次编辑：' + $.dateFormat(Number(getMyVar(\\\"jx_time\\\")) || new Date().getTime(), 'yyyy-MM-dd hh:mm:ss'),\\n    url: $('#noLoading#').lazyRule(() => {\\n        if (getMyVar('jx_m2') != \\\"\\\") {\\n            return $(\\\"\\\", \\\"请输入密匙\\\").input(() => {\\n                if (md5(input) == getMyVar('jx_m2')) {\\n                    return $.require(\\\"jiexi?rule=歌词适配\\\").setEdit();\\n                }\\n                return \\\"toast://验证失败，不支持保存，请左上角手动退出。\\\";\\n            });\\n        } else {\\n            return $.require(\\\"jiexi?rule=歌词适配\\\").setEdit();\\n        }\\n    }),\\n    col_type: 'text_center_1',\\n    extra: {\\n        lineVisible: false\\n    }\\n});\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"⑥规则列表\",\"path\":\"ruleList\",\"rule\":\"js:\\neval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配', {})).rule);\\nconst {\\n    getJxlist,\\n    setJxlist\\n} = $.require('jiexi?rule=歌词适配');\\nlet d = [];\\nd.push({\\n    title: '新增解析',\\n    col_type: 'text_2',\\n    url: $('#noLoading#').lazyRule(() => {\\n        [\\\"type\\\", \\\"open\\\", \\\"down\\\", \\\"img\\\", \\\"title\\\", \\\"desc\\\", \\\"url\\\", \\\"content\\\", \\\"mp3\\\", \\\"hq\\\", \\\"sq\\\", \\\"hr\\\", \\\"zq\\\", \\\"jiexi\\\", \\\"s1\\\", \\\"m1\\\", \\\"s2\\\", \\\"m2\\\", \\\"time\\\", \\\"tid\\\", \\\"uid\\\"].map(t => {\\n            clearMyVar('jx_' + t)\\n        });\\n        return 'hiker://page/ruleEdit#noHistory##noRecordHistory#?pageTitle=规则编辑&rule=歌词适配'\\n    }),\\n    extra: {\\n        new: 1\\n    }\\n});\\nd.push({\\n    title: '分享选中',\\n    col_type: 'text_2',\\n    url: $('#noLoading#').lazyRule(() => {\\n        let zy = storage0.getMyVar(\\\"jxlist2\\\", {});\\n        let zu = Object.keys(zy);\\n        if (zu.length == 0) return \\\"toast://没有选中解析\\\";\\n        let t1, t2, json = {};\\n        if (zu.length == 1) {\\n            let _ = zy[zu[0]];\\n            if (_.m1 && _.m1 != \\\"\\\" && String(_.m1).length == 32) {\\n                _.s1 = \\\"1\\\";\\n                _.open = \\\"0\\\";\\n                _.down = \\\"0\\\";\\n            }\\n            if (_.m2 && _.m2 != \\\"\\\" && String(_.m2).length == 32 && _.s2 == \\\"0\\\") {\\n                _.s2 = \\\"2\\\";\\n            }\\n            json[_.type] = [_];\\n            let t1 = _.type;\\n            let t2 = _.title;\\n        } else {\\n            for (let key of zu) {\\n                let _ = zy[key];\\n                if (!json[_.type]) {\\n                    json[_.type] = [];\\n                }\\n                if (_.m1 && _.m1 != \\\"\\\" && String(_.m1).length == 32) {\\n                    _.s1 = \\\"1\\\";\\n                    _.open = \\\"0\\\";\\n                    _.down = \\\"0\\\";\\n                }\\n                if (_.m2 && _.m2 != \\\"\\\" && String(_.m2).length == 32 && _.s2 == \\\"0\\\") {\\n                    _.s2 = \\\"2\\\";\\n                }\\n                json[_.type].push(_);\\n            };\\n        }\\n        return $.require(\\\"jiexi?rule=歌词适配\\\").getShare(json, true, zu.length, t1, t2);\\n    })\\n});\\nlet jx_platform = getMyVar('jx_platform', 'lib');\\nplatforms = platforms.slice(0, 6).concat(\\\"qt\\\");\\nplatforms.map(platform => {\\n    let platform2;\\n    if (jx_platform == platform)\\n        platform2 = Rich(Strong(Color(platform)));\\n    else\\n        platform2 = platform;\\n    d.push({\\n        title: platform2,\\n        url: $('#noLoading#').lazyRule((platform) => {\\n            if (!platform.match(/^‘‘’’/)) {\\n                putMyVar('jx_platform', platform);\\n                refreshPage(false);\\n            }\\n            return 'hiker://empty';\\n        }, platform),\\n        col_type: 'scroll_button',\\n        extra: {\\n            longClick: [{\\n                title: '删除' + platform.replace('lib', '全部') + '解析',\\n                js: $.toString((platform) => {\\n                    return $(\\\"确定删除“\\\" + platform.replace('lib', '全部') + \\\"解析”吗？\\\\n此操作不可逆，请谨慎选择。\\\").confirm((platform) => {\\n                        if (platform == 'lib')\\n                            platforms = ['qq', 'wy', 'kg', 'kw', 'mg', 'qt'];\\n                        else\\n                            platforms = [platform];\\n                        for (let platform of platforms) {\\n                            deleteFile(\\\"hiker://files/rules/Thomas/gcsp1999/proxy_api/\\\" + platform + \\\".json\\\");\\n                        }\\n                        refreshPage(false);\\n                        return \\\"hiker://empty\\\";\\n                    }, platform);\\n                }, platform)\\n            }, {\\n                title: '选中' + platform.replace('lib', '全部') + '解析',\\n                js: $.toString((platform) => {\\n                    const {\\n                        getJxlist,\\n                        setJxlist\\n                    } = $.require('jiexi?rule=歌词适配');\\n                    jxlist2 = storage0.getMyVar(\\\"jxlist2\\\", {});\\n                    if (platform == 'lib')\\n                        platforms = ['qq', 'wy', 'kg', 'kw', 'mg', 'qt'];\\n                    else\\n                        platforms = [platform];\\n                    for (let platform of platforms) {\\n                        jxlist = getJxlist(platform);\\n                        jxlist.map(_ => {\\n                            let m = md5(_.type + ':' + _.title + ':' + _.url);\\n                            jxlist2[m] = _;\\n                        });\\n                    }\\n                    storage0.putMyVar(\\\"jxlist2\\\", jxlist2);\\n                    refreshPage(false);\\n                    return \\\"hiker://empty\\\";\\n                }, platform)\\n            }, {\\n                title: '取消选中' + platform.replace('lib', '全部') + '解析',\\n                js: $.toString((platform) => {\\n                    const {\\n                        getJxlist,\\n                        setJxlist\\n                    } = $.require('jiexi?rule=歌词适配');\\n                    jxlist2 = storage0.getMyVar(\\\"jxlist2\\\", {});\\n                    if (platform == 'lib')\\n                        platforms = ['qq', 'wy', 'kg', 'kw', 'mg', 'qt'];\\n                    else\\n                        platforms = [platform];\\n                    for (let platform of platforms) {\\n                        jxlist = getJxlist(platform);\\n                        jxlist.map(_ => {\\n                            let m = md5(_.type + ':' + _.title + ':' + _.url);\\n                            delete jxlist2[m];\\n                        });\\n                    }\\n                    storage0.putMyVar(\\\"jxlist2\\\", jxlist2);\\n                    refreshPage(false);\\n                    return \\\"hiker://empty\\\";\\n                }, platform)\\n            }]\\n        }\\n    });\\n});\\nlet jxlist = [];\\nif (jx_platform == \\\"lib\\\") {\\n    platforms.slice(1).map(platform => {\\n        jxlist = jxlist.concat(getJxlist(platform));\\n    });\\n} else {\\n    jxlist = getJxlist(jx_platform);\\n}\\nif (jxlist.length == 0) {\\n    d.push({\\n        title: Rich(Strong(Color(\\\"没有解析\\\"))),\\n        url: 'hiker://empty',\\n        col_type: 'text_center_1',\\n        extra: {\\n            lineVisible: false\\n        }\\n    });\\n} else {\\n    jxlist.map(_ => {\\n        let d1, d2, i = Object.keys(storage0.getMyVar(\\\"jxlist2\\\", {})).indexOf(md5(_.type + ':' + _.title + ':' + _.url)) == -1;\\n        d1 = [\\\"mp3\\\", \\\"hq\\\", \\\"sq\\\", \\\"hr\\\"].map(t => _[t] ? '★' : '☆').join(\\\"\\\");\\n        d2 = \\\"启用下载\\\"\\n        if (_.down == '1') {\\n            d1 = Color(d1, \\\"#2E5D8E\\\");\\n            d2 = \\\"禁用下载\\\";\\n        }\\n        d.push({\\n            title: Strong(i ? _.title : Color(_.title)),\\n            desc: d1,\\n            url: $([\\\"分享\\\", \\\"编辑\\\", \\\"删除\\\", \\\"移动\\\"].concat([i ? '选中解析' : '取消选中', d2]), 2, '选择扩展操作').select((type, title, url) => {\\n                const {\\n                    getJxlist,\\n                    setJxlist\\n                } = $.require('jiexi?rule=歌词适配');\\n                let json, jxlist2, jxlist = getJxlist(type);\\n                let zu = jxlist.map(_ => md5(_.type + ':' + _.title + ':' + _.url));\\n                let m = md5(type + ':' + title + ':' + url);\\n                let i = zu.indexOf(m);\\n                let _ = jxlist[i];\\n                switch (input) {\\n                    case '分享':\\n                        if (_.m1 && _.m1 != \\\"\\\" && String(_.m1).length == 32) {\\n                            _.s1 = \\\"1\\\";\\n                            _.open = \\\"0\\\";\\n                            _.down = \\\"0\\\";\\n                        }\\n                        if (_.m2 && _.m2 != \\\"\\\" && String(_.m2).length == 32 && _.s2 == \\\"0\\\") {\\n                            _.s2 = \\\"2\\\";\\n                        }\\n                        json = {};\\n                        json[type] = [_];\\n                        return $.require(\\\"jiexi?rule=歌词适配\\\").getShare(json, true, 1, type, title);\\n                        break;\\n                    case '编辑':\\n                        [\\\"type\\\", \\\"open\\\", \\\"down\\\", \\\"img\\\", \\\"title\\\", \\\"desc\\\", \\\"url\\\", \\\"content\\\", \\\"mp3\\\", \\\"hq\\\", \\\"sq\\\", \\\"hr\\\", \\\"zq\\\", \\\"jiexi\\\", \\\"s1\\\", \\\"m1\\\", \\\"s2\\\", \\\"m2\\\", \\\"time\\\", \\\"tid\\\", \\\"uid\\\"].map(t => {\\n                            clearMyVar('jx_' + t)\\n                        });\\n                        putMyVar('jx_uid', m);\\n                        Object.keys(_).map(t => {\\n                            putMyVar('jx_' + t, _[t] || \\\"\\\");\\n                        });\\n                        return 'hiker://page/ruleEdit#noHistory##noRecordHistory#?pageTitle=规则编辑&rule=歌词适配';\\n                        break;\\n                    case '删除':\\n                        return $(\\\"确定删除\\\" + _.type + \\\"解析“\\\" + _.title + '”吗？\\\\n此操作不可逆，请谨慎选择。').confirm((type, jxlist, i, setJxlist) => {\\n                            jxlist.splice(i, 1);\\n                            setJxlist(type, jxlist);\\n                            refreshPage(false);\\n                        }, type, jxlist, i, setJxlist);\\n                        break;\\n                    case '移动':\\n                        jxlist.splice(i, 1);\\n                        zu = jxlist.map(_ => _.title);\\n                        return $(zu.concat(\\\"最后面\\\"), 2, '请选择移动位置').select((type, jxlist, _, zu, setJxlist) => {\\n                            let i = zu.indexOf(input);\\n                            if (i == -1)\\n                                jxlist.push(_);\\n                            else\\n                                jxlist.splice(i, 0, _);\\n                            setJxlist(type, jxlist);\\n                            refreshPage(false);\\n                        }, type, jxlist, _, zu, setJxlist);\\n                        break;\\n                    case '选中解析':\\n                        jxlist2 = storage0.getMyVar(\\\"jxlist2\\\", {});\\n                        jxlist2[m] = _;\\n                        storage0.putMyVar(\\\"jxlist2\\\", jxlist2);\\n                        refreshPage(false);\\n                        break;\\n                    case '取消选中':\\n                        jxlist2 = storage0.getMyVar(\\\"jxlist2\\\", {});\\n                        delete jxlist2[m];\\n                        storage0.putMyVar(\\\"jxlist2\\\", jxlist2);\\n                        refreshPage(false);\\n                        break;\\n                    case '启用下载':\\n                    case '禁用下载':\\n                        if (_.s1 == '0') {\\n                            _.down = _.down == '1' ? '0' : '1';\\n                        } else if (_.down == '0') {\\n                            return $(\\\"\\\", \\\"请输入激活密匙\\\").input((jxlist, i, _, setJxlist) => {\\n                                if (md5(input) == _.m1) {\\n                                    _.s1 = '0';\\n                                    _.open = '1';\\n                                    jxlist[i] = _;\\n                                    setJxlist(_.type, jxlist);\\n                                    refreshPage(false);\\n                                    return 'hiker://激活成功，欢迎使用';\\n                                }\\n                                return \\\"toast://密匙错误，无法启用\\\";\\n                            }, jxlist, i, _, setJxlist);\\n                        } else {\\n                            _.down = '0'\\n                        }\\n                        jxlist[i] = _;\\n                        setJxlist(type, jxlist);\\n                        refreshPage(false);\\n                        break;\\n                }\\n            }, _.type, _.title, _.url),\\n            col_type: 'avatar',\\n            img: _.img || $.require('image?rule=歌词适配')()\\n        });\\n        d.push({\\n            title: _.type + '丨' + (_.desc || '未知') + '丨' + _.url,\\n            url: $('#noLoading#').lazyRule((type, title, url) => {\\n                const {\\n                    getJxlist,\\n                    setJxlist\\n                } = $.require('jiexi?rule=歌词适配');\\n                let jxlist = getJxlist(type);\\n                let zu = jxlist.map(_ => md5(_.type + ':' + _.title + ':' + _.url));\\n                let m = md5(type + ':' + title + ':' + url);\\n                let i = zu.indexOf(m);\\n                let jx_open = (_) => {\\n                    if (_.s1 == '0') {\\n                        _.open = _.open == '1' ? '0' : '1';\\n                    } else if (_.open == '0') {\\n                        return $(\\\"\\\", \\\"请输入激活密匙\\\").input((jxlist, i, _, setJxlist) => {\\n                            if (md5(input) == _.m1) {\\n                                _.s1 = '0';\\n                                _.open = '1';\\n                                jxlist[i] = _;\\n                                setJxlist(_.type, jxlist);\\n                                refreshPage(false);\\n                                return 'hiker://激活成功，欢迎使用';\\n                            }\\n                            return \\\"toast://密匙错误，无法启用\\\";\\n                        }, jxlist, i, _, setJxlist);\\n                    } else {\\n                        _.open = '0'\\n                    }\\n                    jxlist[i] = _;\\n                    setJxlist(type, jxlist);\\n                    refreshPage(false);\\n                    return 'hiker://empty';\\n                }\\n                return jx_open(jxlist[i]);\\n            }, _.type, _.title, _.url),\\n            col_type: 'text_icon',\\n            img: 'http://123.56.105.145/tubiao/messy/' + (_.open == '1' ? 55 : 63) + '.svg',\\n            extra: {\\n                lineVisible: false\\n            }\\n        });\\n    });\\n}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"⑧解析处理\",\"path\":\"jiexi\",\"rule\":\"function getJxlist(platform, run) {\\n    let proxyPath = \\\"hiker://files/rules/Thomas/gcsp1999/proxy_api/\\\" + platform + \\\".json\\\";\\n    if (run) return proxyPath;\\n    try {\\n        return JSON.parse(readFile(proxyPath));\\n    } catch (e) { // !fileExist(proxyPath)\\n        saveFile(proxyPath, \\\"[]\\\");\\n        return [];\\n    }\\n}\\n\\nfunction setJxlist(platform, jxlist) {\\n    if (Array.isArray(jxlist)) {\\n        let proxyPath = \\\"hiker://files/rules/Thomas/gcsp1999/proxy_api/\\\" + platform + \\\".json\\\";\\n        saveFile(proxyPath, JSON.stringify(jxlist, 0, 1));\\n        return true;\\n    }\\n    return false\\n}\\n\\nfunction GetSongCache(_, ii, down) {\\n    let s3, s2, s1 = \\\"hiker://files/rules/Thomas/gcsp1999/songCache.json\\\";\\n    let danmuLRC = \\\"hiker://files/_cache/gcsp1999/danmuLRC.json\\\";\\n    if (fileExist(s1)) {\\n        s2 = JSON.parse(readFile(s1));\\n    } else {\\n        s2 = {};\\n    }\\n    let isQt = _.source == \\\"qt\\\" ? _.content : _.source;\\n    if (!s2[isQt]) {\\n        s2[isQt] = {};\\n        saveFile(s1, JSON.stringify(s2, 0, 1));\\n    }\\n    let typeCache = $.require('typeCache?rule=歌词适配').getCache()[\\\"songinfo\\\"];\\n    if (ii === -1) {\\n        ii = Number(typeCache.Quality) || 0;\\n        for (; ii >= _.qualitys.length; ii--) {};\\n    }\\n    // 判断是否存在缓存\\n    let timeout = new Date().getTime();\\n    let quality = (_.qualitys[ii] || {}).type || '128k';\\n    let _songId = _.hash || _.copyrightId || _.songId;\\n    let urls, names = [],\\n        headers = [];\\n    s3 = s2[isQt][_songId] || {};\\n    if (!typeCache.isCache || !(s3 &&\\n            ((s3.mv &&\\n                s3.mv.url &&\\n                ss.mv.timeout > timeout) || (\\n                s3[quality] &&\\n                s3[quality].url &&\\n                s3[quality].timeout > timeout\\n            ))\\n        )) { // 没有缓存链接，获取解析\\n        let url = _.playUrl;\\n        let lrc = _.lrcUrl || _.trcUrl || _.mrcUrl;\\n        if (!url) {\\n            if (/^(qq|wy|kg|kw|mg)$/i.test(_.source)) { // 平台接口，按顺序解析\\n                let jx_arr = [\\\"ptProxy\\\", \\\"qtProxy\\\", \\\"Play_mv\\\"].sort((a, b) => typeCache[a] - typeCache[b]);\\n                for (let jx_key of jx_arr) {\\n                    if (!(!url || !url.length || /^toast/i.test(url))) {\\n                        break;\\n                    } else if (typeCache[jx_key]) { // 启用了\\n                        switch (jx_key) {\\n                            case 'ptProxy':\\n                            default:\\n                                [url, lrc, ii] = $.require(_.source + \\\"?rule=歌词适配\\\").lazy(0, _, down, ii + \\\"\\\");\\n                                break;\\n                            case 'qtProxy':\\n                                [url, lrc, ii] = GetMusicUrl(down ? \\\"down\\\" : \\\"open\\\", \\\"qt\\\", undefined, 0, _, lrc, 0);\\n                                break;\\n                            case 'Play_mv':\\n                                [names, url] = $.require(_.source + \\\"?rule=歌词适配\\\").mv(_, _songId);\\n                                break;\\n                        }\\n                    }\\n                }\\n            } else { // 其他接口，解析两次\\n                [url, lrc, ii] = $.require(_.source + \\\"?rule=歌词适配\\\").lazy(0, _, down, ii + \\\"\\\");\\n                if (!url || !url.length || /^toast/i.test(url)) {\\n                    [url, lrc, ii] = GetMusicUrl(down ? \\\"down\\\" : \\\"open\\\", \\\"qt\\\", undefined, 0, _, lrc, 0);\\n                }\\n            }\\n        }\\n\\n\\n        // 逻辑混乱的格式化\\n        try {\\n            url = JSON.parse(url);\\n        } catch (no_json) {}\\n        if (!Array.isArray(url) && (typeof url === 'object')) {\\n            url = url.urls || url.url;\\n            names = Array.isArray(url.names) ? url.names : [url.name || \\\"\\\"];\\n            headers = Array.isArray(url.headers) ? url.headers : [url.header || \\\"\\\"];\\n            if (!lrc) {\\n                lrc = url.lyric || url.lrc;\\n            }\\n        }\\n        urls = Array.isArray(url) ? url : [url];\\n        if (urls.length < 2) {\\n            url = urls[0];\\n            if (!url) return \\\"toast://无法解析\\\";\\n            if (/^toast/i.test(url)) return url;\\n        }\\n\\n\\n\\n        // 保存链接到本地\\n        url = /\\\\.(mp4|m3u8)/i.test(urls[0]) ? 60 * 60 : false; // mv直链 #按1小时算吧\\n        timeout += (url || { // 歌曲直链的有效时间\\n            'qq': 60 * 60 * 22 + 60 * 20, // 22小时又20分钟\\n            'kg': 60 * 60 * 24, // 1天\\n            'kw': 60 * 60, // 1小时\\n            'wy': 60 * 20, // 20分钟\\n            'mg': timeout, // 永久链接\\n\\n            // 不知道具体时效，按10分钟算\\n        }[_.source] || (60 * 10)) * 1000;\\n        if (url) { // 是视频链接，保存到mv\\n            s3.mv = {\\n                timeout,\\n                names,\\n                urls\\n            }\\n        }\\n        if (!s3[quality]) {\\n            s3[quality] = {};\\n        }\\n        s3[quality].url = urls[0];\\n        s3[quality].timeout = timeout;\\n\\n\\n\\n        // 格式化歌词\\n        s3.lyric = String(lrc || s3.lyric || \\\"\\\").trim();\\n        if (!s3.lyric || (_.source == 'my' && !s3.lyric.match(/^\\\\s*https?\\\\:\\\\/\\\\/|\\\\d+\\\\:\\\\d+/i))) {\\n            s3.lyric = $.require(_.source + \\\"?rule=歌词适配\\\").getLyric(_, s3.lyric || _songId);\\n        }\\n        s3.lyric = String(s3.lyric).replace(/\\\\<\\\\/?(br|p)\\\\/?\\\\>/gi, \\\"\\\\n\\\")\\n            .replace(/^data\\\\:text\\\\/plain\\\\,\\\\s*|\\\\<\\\\s*\\\\-?\\\\d+\\\\s*\\\\,\\\\s*\\\\-?\\\\d+\\\\s*\\\\>/gi, \\\"\\\") // 目前不支持逐字歌词\\n            .replace(/(\\\\[\\\\d+\\\\:\\\\d+)\\\\:(\\\\d+\\\\])/gi, \\\"$1.$2\\\");\\n        if (!s3.lyric.match(/^\\\\s*https?\\\\:\\\\/\\\\/|\\\\d+\\\\:\\\\d+/i)) { // 不是 标准lrc / lrcurl\\n            s3.lyric = $.require(\\\"lib?rule=歌词适配\\\").Lrc(s3.lyric, _.interval || 200);\\n        }\\n        s2[isQt][_songId] = s3;\\n        if (typeCache.isCache) saveFile(s1, JSON.stringify(s2, 0, 1));\\n    } else {\\n        names = (s3.mv && s3.mv.names) || [\\\"本地直链缓存\\\"];\\n        urls = (s3.mv && s3.mv.urls) || [s3[quality].url];\\n    }\\n\\n\\n    // 格式化弹幕lrc\\n    danmuLRC = function(lrcText) { // mv链接 在不强制为音频时，调用弹幕\\n        if (typeCache.danmuLrc || (!typeCache._Ignore && /\\\\.(mp4|m3u8)/i.test(urls[0]))) { // 可能是lrc链接\\n            if (!lrcText.match(/\\\\d+\\\\:\\\\d+/) && lrcText.match(/^\\\\s*https?\\\\:\\\\/\\\\//)) {\\n                lrcText = fetch(lrcText);\\n                s3.lyric = lrcText;\\n            }\\n            let result = [];\\n            String(lrcText).split(/\\\\n/).map(t => {\\n                let mat = String(t).trim().split(/\\\\]\\\\s*/);\\n                let txt = String(mat.slice(1).join(']'));\\n                let tme = mat[0].slice(1).split(':');\\n                if (txt.length) {\\n                    try {\\n                        let minutes = parseInt(tme[0], 10) * 60;\\n                        let seconds = tme.slice(1).join(\\\".\\\");\\n                        minutes += parseFloat(seconds);\\n                        result.push({\\n                            text: txt,\\n                            time: minutes.toFixed(3)\\n                        });\\n                    } catch (nolrc) {}\\n                }\\n            });\\n            saveFile(danmuLRC, JSON.stringify(result));\\n            return danmuLRC;\\n        }\\n        return \\\"\\\";\\n    }(s3.lyric);\\n\\n\\n    if (down) { //正在\\\"下载\\\"，返回纯链接\\n        s3 = 'download://' + s3[quality].url\\n    } else {\\n        s3 = JSON.stringify({\\n            names,\\n            urls: urls.map(u => u + (typeCache._Ignore ? '#isMusic=true#' : '') + typeCache.preType + typeCache.noCheck),\\n            lyric: s3.lyric,\\n            danmu: danmuLRC,\\n            headers,\\n        });\\n    }\\n    return s3;\\n}\\n\\nfunction GetMusicUrl(uType, platform, t1, t2, musicItem, lrc, ii) {\\n    let Quality = (t2 == ii || uType == \\\"down\\\") ? (\\\"flac24bit\\\") : ([\\\"mp3\\\", \\\"hq\\\", \\\"sq\\\", \\\"hr\\\"][ii || 0] || \\\"mp3\\\");\\n    let quality = [\\\"mp3\\\", \\\"hq\\\", \\\"sq\\\", \\\"hr\\\"][t2 || 0] || \\\"mp3\\\";\\n    let jxlist  = getJxlist(platform).filter(_ => _[uType] === \\\"1\\\" && _.s1 === \\\"0\\\" && aesDecode('hk6666666109', _[quality]) && !aesDecode('hk6666666109', _[Quality]));\\n    let isPlay  = uType == \\\"open\\\" && quality != \\\"mp3\\\";\\n    if (jxlist.length == 0) {\\n        if (isPlay)\\n            return [false, lrc, ii - 1];\\n        else\\n            return [\\\"toast://没有可用的\\\" + (uType == \\\"open\\\" ? \\\"试听\\\" : \\\"下载\\\") + \\\"解析\\\", lrc, ii];\\n    }\\n    if (platform == \\\"qt\\\") { // 调用其它解析接口\\n        let {\\n            lazy,\\n            search\\n        } = $.require(\\\"qt?rule=歌词适配\\\");\\n        let songName = musicItem.name;\\n        let songArtist = musicItem.singer.split(/\\\\&|、/)[0];\\n        MY_PAGE = 1;\\n    }\\n    for (let _ of jxlist) {\\n        try {\\n            let url = false;\\n            eval(String(aesDecode('hk6666666109', _[quality])));\\n            eval(String(aesDecode('hk6666666109', _[\\\"jiexi\\\"])));\\n            if (url && String(url).length > 19) {\\n                return [url, lrc, ii];\\n            }\\n        } catch (jxError) {\\n            // log(error(jxError));\\n        }\\n    }\\n    if (isPlay) return [false, lrc, ii];\\n    return [\\\"toast://解析失败\\\", lrc, ii];\\n}\\n$.exports = {\\n    getJxlist,\\n    setJxlist,\\n    GetMusicUrl,\\n    GetSongCache,\\n    lazy: function(source, _, down, ii) {\\n        if (down !== undefined) {\\n            down = down ? '1' : '0';\\n        } else {\\n            down = getMyVar('search_down', '0');\\n        }\\n        _.qualitys = _.qualitys || [{\\n            type: '128k',\\n            size: '无法计算'\\n        }];\\n        if (down == '0') { // 播放\\n            return GetSongCache(_, -1, 0);\\n        } else { // 下载\\n            let arr = _.qualitys.map(_ => {\\n                return {\\n                    '96k': \\\"【流畅音质】\\\",\\n                    '128k': \\\"【标准音质】\\\",\\n                    '320k': \\\"【高品音质】\\\",\\n                    'flac': \\\"【无损音质】\\\",\\n                    'flac24bit': \\\"【高品无损】\\\"\\n                }[_.type] + _.size;\\n            });\\n            return $(arr, 1, '选择下载音质').select((arr, _) => {\\n                let i = arr.indexOf(input);\\n                return $.require(\\\"jiexi?rule=歌词适配\\\").GetSongCache(_, i, 1);\\n            }, arr, _);\\n        }\\n    },\\n    getShare(json, isJx, len, t1, t2, arr, si, key) {\\n        return $(getPastes().concat(\\\"纯文本\\\").concat(arr || []), 2, '选择分享格式').select((json, isJx, len, t1, t2, si, key) => {\\n            let text = base64Encode(JSON.stringify(json));\\n            try {\\n                if (input == \\\"批量分享\\\") {\\n                    let json = {\\n                        type: 1,\\n                        pitch: 0,\\n                        si: si,\\n                        name: \\\"\\\",\\n                        data: storage0.getItem(\\\"data_\\\" + si)[key]\\n                    };\\n                    writeFile(\\\"hiker://files/_cache/gcsp1999/Import.txt\\\", JSON.stringify(json));\\n                    return \\\"hiker://page/rely2#noHistory##noRecordHistory#?rule=歌词适配\\\";\\n                }\\n                if (input == \\\"复制链接\\\") {\\n                    if (json.source == \\\"userlist\\\")\\n                        return \\\"toast://自建歌单无法分享\\\"\\n                    else\\n                        return $.require(\\\"lib?rule=歌词适配\\\").copyurl(json.source, json.content || \\\"2\\\", json.sourceListId);\\n                }\\n                let desc, type, rely, group;\\n                if (input != \\\"纯文本\\\") {\\n                    text = sharePaste(text, input);\\n                    group = \\\"Paste\\\";\\n                } else group = \\\"Text\\\";\\n                if (isJx == \\\"theme\\\") {\\n                    type = \\\"主题\\\";\\n                    rely = \\\"3\\\";\\n                } else if (isJx) {\\n                    type = \\\"解析\\\";\\n                    rely = \\\"1\\\";\\n                } else {\\n                    type = \\\"收藏\\\";\\n                    rely = \\\"2\\\";\\n                }\\n                if (len == 1 && t1 != undefined) {\\n                    desc = t1 + type + \\\"「\\\" + t2 + \\\"」\\\";\\n                } else {\\n                    desc = \\\"共「\\\" + len + \\\"」条\\\" + type;\\n                }\\n                clearMyVar('jxlist2');\\n                refreshPage(false);\\n                return \\\"copy://歌词适配\\\" + type + \\\"口令，打开海阔即可导入\\\\n\\\" + desc + \\\"￥\\\" + group + \\\"￥\\\" + text + '@import=js:$.require(\\\"jiexi?rule=歌词适配\\\").setRule(input,\\\"' + rely + '\\\");';\\n            } catch (err) {\\n                return \\\"toast://分享失败\\\";\\n            }\\n        }, json, isJx, len, t1, t2, si, key);\\n    },\\n\\n\\n\\n    setRule: function(input, rely) {\\n        [tDesc, tType, text] = String(input).split(\\\"￥\\\");\\n        switch (tType) {\\n            case 'Paste':\\n                text = parsePaste(text);\\n                break;\\n            case 'Lanzou':\\n                [url, pwd] = text.split(\\\"##\\\");\\n                let durl = $.require('lanzou?rule=歌词适配').one_url(url, pwd, 1);\\n                text = String(fetch(durl));\\n                let sp = text.split(\\\"￥\\\");\\n                if (sp.length == 3) {\\n                    text = sp[2].split(\\\"@\\\")[0].trim();\\n                }\\n                break;\\n        }\\n        rely = rely || \\\"1\\\";\\n        text = base64Decode(text);\\n        // writeFile(\\\"hiker://files/_cache/gcsp1999/Import.txt\\\", text);\\n        // return \\\"hiker://page/rely\\\" + rely + \\\"#noHistory##noRecordHistory#?rule=歌词适配\\\";\\n        // text = fetch(\\\"hiker://files/_cache/gcsp1999/Import.txt\\\");\\n        if (rely == \\\"1\\\") { // 解析\\n            let index  = 0;\\n            let index2 = 0;\\n            let index3, jxlist,\\n                json = JSON.parse(text);\\n            for (let key in json) {\\n                if (json[key].length != 0) {\\n                    index += json[key].length;\\n                    jxlist = getJxlist(key);\\n                    index3 = jxlist.length;\\n                    jxlist = json[key].concat(jxlist);\\n                    let map = new Map();\\n                    jxlist.forEach(obj => {\\n                        let key = obj.title + obj.url;\\n                        if (!map.has(key)) {\\n                            map.set(key, obj);\\n                        } else {\\n                            if (obj.time > map.get(key).time) {\\n                                map.set(key, obj);\\n                            }\\n                        }\\n                    });\\n                    jxlist = Array.from(map.values());\\n                    index2 += jxlist.length - index3;\\n                    setJxlist(key, jxlist);\\n                }\\n            }\\n            return \\\"toast://解析导入成功，新增 \\\" + index2 + \\\" ，覆盖 \\\" + (index - index2);\\n        } else if (rely == \\\"2\\\") { // 收藏\\n            const hikerPop = $.require(\\\"http://123.56.105.145/weisyr/js/hikerPop.js\\\");\\n            let data = JSON.parse(text);\\n            let list = data.list;\\n            delete data.list;\\n            let p1 = \\\"hiker://files/rules/Thomas/gcsp1999/collection/\\\";\\n            let zy = JSON.parse(readFile(p1 + \\\"details.json\\\"));\\n            let zu = zy.map(_ => _.name + '\\\\n' + _.source + '_' + _.sourceListId);\\n            let pop = hikerPop.selectCenter({\\n                options: zu.concat(list ? '最后面' : '新组'),\\n                columns: 2,\\n                title: \\\"请选择资源位置\\\",\\n                // position: 2,\\n                click(input) {\\n                    if ('新组' == input) {\\n                        return $(\\\"\\\", \\\"请输入新组名称\\\").input((p1, zy, zu, data) => {\\n                            if (!input.trim()) return \\\"toast://组名不能为空\\\";\\n                            let t = new Date().getTime();\\n                            let _ = {\\n                                name: input,\\n                                source: \\\"userlist\\\",\\n                                sourceListId: t,\\n                                locationUpdateTime: t,\\n                                picUrl: \\\"\\\",\\n                                content: \\\"2\\\"\\n                            }\\n                            zu = zu.concat(\\\"最后面\\\");\\n                            return $(zu, 2, '请选择新组位置').select((p1, zy, zu, data, _) => {\\n                                let i = zu.indexOf(input);\\n                                zy.splice(i, 0, _);\\n                                saveFile(p1 + \\\"details.json\\\", JSON.stringify(zy, 0, 1));\\n                                saveFile(p1 + _.source + '_' + _.sourceListId + '.json', JSON.stringify([data], 0, 1));\\n                                // back(false);\\n                                return \\\"toast://导入歌曲成功\\\";\\n                            }, p1, zy, zu, data, _);\\n                        }, p1, zy, zu, data);\\n                    }\\n                    let i;\\n                    if (input == '最后面') {\\n                        i = zu.length;\\n                    } else {\\n                        i = zu.indexOf(input);\\n                    }\\n                    if (list != undefined) { // 是分组\\n                        let p3 = data.source + '_' + data.sourceListId;\\n                        let ii = zy.map(_ => _.source + '_' + _.sourceListId).indexOf(p3);\\n                        if (ii != -1) {\\n                            zy.splice(ii, 1);\\n                            if (ii < i) i--;\\n                        }\\n                        zy.splice(i, 0, data);\\n                        saveFile(p1 + \\\"details.json\\\", JSON.stringify(zy, 0, 1));\\n                        saveFile(p1 + p3 + \\\".json\\\", JSON.stringify(list, 0, 1));\\n                        // back(false);\\n                        return \\\"toast://导入歌单成功\\\";\\n                    }\\n                    let p2 = zu[i].replace(/^[\\\\S\\\\s]*\\\\n/i, \\\"\\\") + \\\".json\\\";\\n                    zy = JSON.parse(readFile(p1 + p2));\\n                    zu = zy.map((_, i) => _.name + '\\\\n' + i + _.source + _.songId);\\n                    return $(zu.concat(\\\"最后面\\\"), 2, '请选择资源位置').select((p1, p2, zy, zu, data) => {\\n                        let i;\\n                        if (\\\"最后面\\\" == input) {\\n                            i = zu.length;\\n                        } else {\\n                            i = zu.indexOf(input);\\n                        }\\n                        zy.splice(i, 0, data);\\n                        saveFile(p1 + p2, JSON.stringify(zy, 0, 1));\\n                        // back(false);\\n                        return \\\"toast://导入歌曲成功\\\";\\n                    }, p1, p2, zy, zu, data);\\n                },\\n            });\\n        } else if (rely == \\\"3\\\") { // 主题\\n            const newJson = JSON.parse(text);\\n            const themeType = newJson.type;\\n            eval(JSON.parse(fetch('hiker://page/theme3?rule=歌词适配', {})).rule);\\n            let t1 = getData1(themeType, \\\"rely\\\");\\n            let t2 = newJson.info;\\n            let ii = t1.name.indexOf(t2.title);\\n            if (ii === -1) { // 新主题\\n                ii = t1.data.length;\\n                t1.name.push(t2.title);\\n            }\\n            t1.data[ii] = t2;\\n\\n            let P1 = newJson.data;\\n            let P2 = \\\"hiker://files/rules/Thomas/gcsp1999/theme/\\\" + themeType + \\\"/\\\";\\n            saveFile(P2 + md5(t2.title) + \\\".json\\\", JSON.stringify(P1, 0, 2));\\n            saveFile(P2 + \\\"install.json\\\", JSON.stringify(t1, 0, 2));\\n            return \\\"toast://\\\" + (themeType == \\\"home\\\" ? \\\"首页\\\" : \\\"二级\\\") + \\\"主题「\\\" + t2.title + \\\"」导入成功\\\";\\n            // back(false);\\n        }\\n        return \\\"hiker://empty\\\";\\n    },\\n\\n\\n\\n    setEdit: function() {\\n        let _ = {\\n            type: getMyVar(\\\"jx_type\\\", \\\"kw\\\"),\\n            open: getMyVar(\\\"jx_open\\\", \\\"1\\\"),\\n            down: getMyVar(\\\"jx_down\\\", \\\"0\\\"),\\n\\n            img: getMyVar(\\\"jx_img\\\", \\\"\\\"),\\n            title: getMyVar(\\\"jx_title\\\", \\\"\\\"),\\n            desc: getMyVar(\\\"jx_desc\\\", \\\"\\\"),\\n            url: getMyVar(\\\"jx_url\\\", \\\"\\\"),\\n            content: getMyVar(\\\"jx_content\\\", \\\"\\\"),\\n\\n            mp3: getMyVar(\\\"jx_mp3\\\", \\\"\\\"),\\n            hq: getMyVar(\\\"jx_hq\\\", \\\"\\\"),\\n            sq: getMyVar(\\\"jx_sq\\\", \\\"\\\"),\\n            hr: getMyVar(\\\"jx_hr\\\", \\\"\\\"),\\n            zq: getMyVar(\\\"jx_zq\\\", \\\"\\\"),\\n            jiexi: getMyVar(\\\"jx_jiexi\\\", \\\"\\\"),\\n\\n            s1: getMyVar(\\\"jx_s1\\\", \\\"0\\\"),\\n            m1: getMyVar(\\\"jx_m1\\\", \\\"\\\"),\\n            s2: getMyVar(\\\"jx_s2\\\", \\\"0\\\"),\\n            m2: getMyVar(\\\"jx_m2\\\", \\\"\\\"),\\n            time: new Date().getTime()\\n        };\\n        if (_.title != \\\"\\\" && _.url != \\\"\\\") {\\n            for (let t in _) {\\n                clearMyVar('jx_' + t);\\n                if (_[t] == \\\"\\\" || _[t] == \\\"Vfanahs/y0iZxcSL0PJAcQ==\\\") {\\n                    delete _[t];\\n                }\\n            }\\n            let jxlist = getJxlist(_.type);\\n            let uids = jxlist.map(__ => md5(__.type + ':' + __.title + ':' + __.url));\\n            let i = uids.indexOf(getMyVar('jx_uid', '-1'));\\n            if (i == -1) {\\n                jxlist.push(_);\\n            } else {\\n                jxlist.splice(i, 1, _);\\n            }\\n            clearMyVar('jx_tid');\\n            clearMyVar('jx_uid');\\n            jxlist = jxlist.filter((obj, index, arr) => {\\n                return arr.findIndex(o => md5(obj.title + obj.url) === md5(o.title + o.url)) === index;\\n            });\\n            setJxlist(_.type, jxlist);\\n            return back(true), 'toast://保存成功';\\n        } else if (_.title == \\\"\\\") {\\n            return 'toast://请填写源名称';\\n        } else {\\n            return 'toast://请填写源标识';\\n        }\\n    },\\n\\n\\n\\n    setEdit2: function(type, run) {\\n        let c, _ = {\\n            \\\"s1\\\": \\\"0\\\",\\n            \\\"s2\\\": \\\"0\\\",\\n            \\\"img\\\": $.require('image?rule=歌词适配')(type),\\n            \\\"type\\\": String(type).replace(/2$/, \\\"\\\"),\\n            \\\"time\\\": new Date().getTime(),\\n            \\\"open\\\": \\\"1\\\",\\n            \\\"down\\\": \\\"1\\\",\\n            \\\"desc\\\": \\\"优选\\\",\\n        }\\n        let C0 = String(getMyVar('viprule_c0', '')).trim();\\n        let C1 = String(getMyVar('viprule_c1', '')).trim();\\n        let C2 = String(getMyVar('viprule_c2', '')).trim();\\n        let getkgjiexi = (title, url, userid, token, appid, signkey) => {\\n            Object.assign(_, {\\n                \\\"title\\\": title,\\n                \\\"url\\\": url,\\n                \\\"mp3\\\": \\\"Bt7w+qh9wAdbEKhUmS545w==\\\",\\n                \\\"hq\\\": \\\"hS3drYkp7OI1xKOc2BkfqQ==\\\",\\n                \\\"sq\\\": \\\"PwXrvvzm04ftoCnUWkpJFw==\\\",\\n                \\\"hr\\\": \\\"5/mK9TcZ1i8h/Y9z1NHhzw==\\\",\\n            });\\n            _.jiexi = getPrivateJS(`t2 = musicItem.qualitys[t2] || {};\\nurl = $.require(\\\"kg?rule=歌词适配\\\").GetMusicUrl(\\n    t2.hash || t1,\\n    ({\\n        '128k': '128',\\n        '320k': '320',\\n        'flac': 'flac',\\n        'flac24bit': 'high'\\n    })[t2.type] || \\\"128\\\",\\n    musicItem.album_id || \\\"0\\\",\\n    musicItem.album_audio_id || \\\"0\\\",\\n    \\\"${userid}\\\",\\n    \\\"${token}\\\",\\n    \\\"${appid}\\\",\\n    \\\"${signkey}\\\"\\n);`);\\n        };\\n        switch (type) {\\n            case 'qq':\\n                Object.assign(_, {\\n                    \\\"title\\\": \\\"QQ音乐\\\",\\n                    \\\"url\\\": \\\"https://u.y.qq.com\\\",\\n                    \\\"mp3\\\": \\\"UVK3kKzrNzvyLkOTj6FmOkmb9Z69AK/YQaseesfs8A8=\\\",\\n                    \\\"hq\\\": \\\"q5AMvpdkKyaRbAyhYqwkgUmb9Z69AK/YQaseesfs8A8=\\\",\\n                    \\\"sq\\\": \\\"xVCpzhaKCCx/ON4plO45uyqgJELdlW8kzLBWRAjwdOE=\\\",\\n                    \\\"hr\\\": \\\"M6aXLrgwhTyDMPmKG1YWqiqgJELdlW8kzLBWRAjwdOE=\\\",\\n                });\\n                c = C0.split(/qm_keyst=/i);\\n                c0 = (c[1] || c[0]).split(/;|&|\\\\n/i)[0];\\n                c = C1.split(/uin=/i);\\n                c1 = (c[1] || c[0]).split(/;|&|\\\\n/i)[0];\\n                if (!c0 || !c1 || !(c0.match('W_X') || c0.match('Q_H_L'))) return \\\"toast://cookie格式错误\\\";\\n                _.signin = 0;\\n                _.jiexi = getPrivateJS(`u = _.url + \\\\`/cgi-bin/musicu.fcg?data={\\\"req_0\\\":{\\\"module\\\":\\\"vkey.GetVkeyServer\\\",\\\"method\\\":\\\"CgiGetVkey\\\",\\\"param\\\":{\\\"guid\\\":\\\"0\\\",\\\"platform\\\":\\\"20\\\",\\\"filename\\\":[\\\"$\\\\{h+t1+t1+e}\\\"],\\\"songmid\\\":[\\\"$\\\\{t1}\\\"]}}}\\\\`;\\n_ = JSON.parse(fetch(u, {\\n    headers: {\\n        Cookie: \\\"qm_keyst=${c0}; uin=${c1}\\\"\\n    }\\n})).req_0.data;\\nurl = _.midurlinfo[0].purl;\\nif (url && url != \\\"\\\") url = _.sip[0] + url;`);\\n                break;\\n            case 'wy':\\n                Object.assign(_, {\\n                    \\\"title\\\": \\\"网易云音乐\\\",\\n                    \\\"url\\\": \\\"https://music.163.com\\\",\\n                    \\\"mp3\\\": \\\"KfUPg2pbKpIuXxqG11E3EzUXTzIDbXwWZtMIVYqOU64=\\\",\\n                    \\\"hq\\\": \\\"5gbQa6RuVtl2HLIr8GnJAItgw4epRIxW6c6EzG3MxfY=\\\",\\n                    \\\"sq\\\": \\\"cJHBSCeJa46GF7NUJaEUOkRX9IiMDLhZQqz2ti2a6Lc=\\\",\\n                    \\\"hr\\\": \\\"KEJ/xd6vEP3y+ZpM/CbpJ1X2p2obP8tImcXEi9DyQHE=\\\",\\n                });\\n                c = C0.split(/MUSIC_[UA]=([^;\\\\s'\\\"]+)/i);\\n                c0 = c ? c[1] : false;\\n                if (!c0) return \\\"toast://cookie格式错误\\\";\\n                // \\\"os=magicos; appver=1.0.22; MUSIC_A=\\\" + c0;\\n                _.jiexi = getPrivateJS(`url = $.require(\\\"wy?rule=歌词适配\\\").ajax3(\\\"/api/song/enhance/player/url/v1\\\", {\\n    ids: \\\\`[\\\"$\\\\{t1}\\\"]\\\\`,\\n    encodeType: \\\"flac\\\",\\n    immerseType: \\\"c51\\\",\\n    trialMode: \\\"23\\\",\\n    level: level\\n}, {\\n    Cookie: \\\"os=pc; appver=9.0.25; MUSIC_U=${c0}\\\"\\n}).data[0].url.split(\\\"?\\\")[0];`);\\n                break;\\n            case 'kg':\\n                c = C0.split(/userid=/i);\\n                c0 = (c[1] || c[0]).split(/;|&|\\\\n/i)[0];\\n                c = C1.split(/token=/i);\\n                c1 = (c[1] || c[0]).split(/;|&|\\\\n/i)[0];\\n                if (!c0 || !c1) return \\\"toast://cookie格式错误\\\";\\n                getkgjiexi(\\\"酷狗音乐\\\", \\\"https://www.kugou.com\\\", c0, c1, \\\"\\\", \\\"\\\");\\n                break;\\n            case 'kg2':\\n                c = C0.split(/userid=/i);\\n                c0 = (c[1] || c[0]).split(/;|&|\\\\n/i)[0];\\n                c = C1.split(/token=/i);\\n                c1 = (c[1] || c[0]).split(/;|&|\\\\n/i)[0];\\n                c = C2.split(/appid=/i);\\n                c2 = (c[1] || c[0]).split(/;|&|\\\\n/i)[0];\\n                if (!c0 || !c1) return \\\"toast://cookie格式错误\\\";\\n                if (md5(c2) != \\\"78c60c35e590bee8e14bae44bde51277\\\") return \\\"toast://signkey错误\\\";\\n                getkgjiexi(\\\"酷狗概念版\\\", \\\"https://gateway.kugou.com\\\", c0, c1, \\\"3116\\\", c2);\\n                _.signin = 0;\\n                break;\\n            case 'kw':\\n                Object.assign(_, {\\n                    \\\"title\\\": \\\"酷我音乐\\\",\\n                    \\\"url\\\": \\\"http://mobi.kuwo.cn\\\",\\n                    \\\"mp3\\\": \\\"RXlnZNyYIUb13MukIk9RTQ==\\\",\\n                    \\\"hq\\\": \\\"VM+paTFups1aeSon+z0h2g==\\\",\\n                    \\\"sq\\\": \\\"PGAnCQCjuJXzbia+p+0HtQ==\\\",\\n                    // \\\"hr\\\": \\\"tq1pX4T/Y13vTeA3ZfKXnVX2p2obP8tImcXEi9DyQHE=\\\",\\n                    \\\"hr\\\": \\\"37uTQ6Kit6S7c77IHqN1bQ==\\\",\\n                });\\n                if (!C0) return \\\"toast://cookie格式错误\\\";\\n                _.jiexi = getPrivateJS(C0);\\n                break;\\n            case 'kw2':\\n                Object.assign(_, {\\n                    \\\"title\\\": \\\"波点音乐\\\",\\n                    \\\"url\\\": \\\"https://bd-api.kuwo.cn\\\",\\n                    \\\"mp3\\\": \\\"loq6enoAvJkagLA86SEiHCB6VjMprvHT8LFvugbufqQ=\\\",\\n                    \\\"hq\\\": \\\"ek/bmU09vXDqPLHrTHDjvSB6VjMprvHT8LFvugbufqQ=\\\",\\n                    \\\"sq\\\": \\\"Pw4VZByAAQoviP7qZoKUuiTyQdldjl+98GDNW8Wvips=\\\",\\n                });\\n                c = C0.split(/uid=/i);\\n                c0 = (c[1] || c[0]).split(/;|&|\\\\n/i)[0];\\n                c = C1.split(/token=/i);\\n                c1 = (c[1] || c[0]).split(/;|&|\\\\n/i)[0];\\n                c = C2.split(/devId=/i);\\n                c2 = (c[1] || c[0]).split(/;|&|\\\\n/i)[0];\\n                if (!c0 || !c1 || !c2) return \\\"toast://cookie格式错误\\\";\\n                _.jiexi = getPrivateJS(`url = JSON.parse(fetch(_.url + \\\"/api/service/music/downloadInfo/\\\" + t1 + \\\"?isMv=0&format=\\\" + t3 + \\\"&br=\\\" + t2 + \\\"&level=\\\", {\\n    \\\"headers\\\": {\\n        'User-Agent': 'okhttp/3.10.0',\\n        'channel': 'qq',\\n        'plat': 'ar',\\n        'net': 'wifi',\\n        'ver': '3.1.2',\\n        'uid': '${c0}',\\n        'token': '${c1}',\\n        'devId': '${c2}'\\n    }\\n})).data.url;`);\\n                break;\\n            case 'mg':\\n                Object.assign(_, {\\n                    \\\"title\\\": \\\"咪咕音乐\\\",\\n                    \\\"url\\\": \\\"https://m.music.migu.cn\\\",\\n                    \\\"mp3\\\": \\\"hS3drYkp7OI1xKOc2BkfqQ==\\\",\\n                    \\\"hq\\\": \\\"PwXrvvzm04ftoCnUWkpJFw==\\\",\\n                    \\\"sq\\\": \\\"5/mK9TcZ1i8h/Y9z1NHhzw==\\\",\\n                    \\\"hr\\\": \\\"w5lQnyXVahJsYGeUe+pNuw==\\\",\\n                });\\n                c = C0.split(/SESSION=/i);\\n                c0 = (c[1] || c[0]).split(/;|&|\\\\n/i)[0];\\n                if (!c0) return \\\"toast://cookie格式错误\\\";\\n                _.jiexi = getPrivateJS(`headers = {\\n    headers: {\\n        \\\"Referer\\\": _.url + \\\"/v4/\\\",\\n        \\\"User-Agent\\\": MOBILE_UA,\\n        \\\"By\\\": md5(MOBILE_UA),\\n        \\\"Cookie\\\": \\\"SESSION=${c0}\\\"\\n    }\\n};\\nu = _.url + \\\"/migumusic/h5/play/auth/getSongPlayInfo?type=\\\" + t2 + \\\"&copyrightId=\\\" + t1;\\nurl = \\\"https:\\\" + JSON.parse(fetch(u, headers)).data.playUrl;`);\\n                break;\\n        }\\n        let jxlist = getJxlist(_.type);\\n        jxlist.unshift(_);\\n        jxlist = jxlist.filter((obj, index, arr) => {\\n            return arr.findIndex(o => md5(obj.title + obj.url) === md5(o.title + o.url)) === index;\\n        });\\n        setJxlist(_.type, jxlist);\\n        if (run) return \\\"hiker://empty\\\";\\n        return back(true), \\\"toast://导入成功\\\";\\n    }\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"温馨提示\",\"path\":\"notice\",\"rule\":\"$.exports = function(col_type) {\\n    let f = \\\"Gray\\\";\\n    let t = false;\\n    let arr = [];\\n    let up = getMyVar('Rule_noupdate', '');\\n    let url, v, run, T;\\n    if (up != '1' && getItem('no_update', '0') == '0') {\\n        let version = JSON.parse(request(\\\"hiker://home@歌词适配\\\")).version;\\n        if (up == '') {\\n            showLoading('查看小程序是否有新版本…');\\n            [url, v, run] = $.require(\\\"lanzou?rule=歌词适配\\\").list_one(\\\"///b03r379hc\\\", \\\"gcsp\\\");\\n            /*\\n                        if (run == 'true') {\\n                            return true;\\n                        } else {\\n\\n                        }\\n            */\\n            hideLoading();\\n        } else {\\n            url = false;\\n            v = version + 1;\\n        }\\n        if (version < v) {\\n            f = \\\"red\\\";\\n            t = \\\"检测到新版更新，点击了解详情。\\\";\\n            T = \\\"更新内容\\\";\\n            if (up == '') {\\n                if (getItem('update0', '1') == '1') confirm({\\n                    title: '更新提示',\\n                    content: '检测到你的规则版本小于服务器版本，是否立即更新？',\\n                    confirm: $.toString((da) => {\\n                        f = $.require(\\\"lanzou?rule=歌词适配\\\").one_url(da);\\n                        putMyVar('Rule_noupdate', '1');\\n                        return \\\"\\\\u6d77\\\\u9614\\\\u89c6\\\\u754c\\\\uffe5home_rule_url\\\\uffe5\\\" + getPath(f);\\n                    }, url)\\n                });\\n                putMyVar('Rule_noupdate', url);\\n            }\\n            url = $(\\\"hiker://empty#noHistory##noRecordHistory#\\\").rule((up, version) => {\\n                return $.require(\\\"lanzou?rule=歌词适配\\\").one_info(up, \\\"gcsp\\\", version);\\n            }, url || up, version);\\n            arr.push({\\n                title: '程序设置',\\n                js: $.toString(() => {\\n                    return 'hiker://page/install#noHistory##noRecordHistory##noRefresh#?pageTitle=程序设置';\\n                })\\n            });\\n        } else {\\n            putMyVar('Rule_noupdate', '1');\\n        }\\n    }\\n    if (!t) {\\n        T = \\\"程序设置\\\";\\n        url = \\\"hiker://page/install#noHistory##noRecordHistory##noRefresh#\\\";\\n        let hour = new Date().getHours();\\n        if (hour < 5) {\\n            t = \\\"深夜，现在的夜，熬得只是还未改变的习惯\\\";\\n        } else if (hour < 11) {\\n            t = \\\"早安，清晨熹微的阳光， 是你在微笑吗\\\";\\n        } else if (hour < 14) {\\n            t = \\\"午好，伴随着熟悉的乐曲，聆听着动人的旋律\\\";\\n        } else if (hour < 19) {\\n            t = \\\"夕暮，似清风醉晚霞，不经意间盈笑回眸\\\";\\n        } else {\\n            t = \\\"夜晚，一个安静的角落，静静地聆听夜曲\\\";\\n        }\\n    }\\n    d.push({\\n        title: \\\"““””\\\" + t.fontcolor(f).small(),\\n        col_type: col_type || \\\"text_center_1\\\",\\n        img: \\\"hiker://images/logo\\\",\\n        url: url,\\n        extra: {\\n            pageTitle: T,\\n            lineVisible: false,\\n            longClick: arr\\n        }\\n    });\\n    return [t, f, T, arr];\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"蓝奏调用\",\"path\":\"lanzou\",\"rule\":\"js:\\nlet head = {\\n    headers: {\\n        \\\"upgrade-insecure-requests\\\": \\\"1\\\",\\n        \\\"User-Agent\\\": \\\"Mozilla/5.0 (Linux; Android 8.0.0; MI 5s Plus Build/OPR1.170623.032; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/71.0.3578.99 Mobile Safari/537.36\\\",\\n        \\\"Cookie\\\": \\\"down_ip=1\\\",\\n        \\\"accept\\\": \\\"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\\\",\\n    },\\n    method: 'GET'\\n};\\n\\n\\nfunction getHost(u, r) {\\n    u = String(u || \\\"\\\");\\n    let cachePath = \\\"hiker://files/_cache/gcsp1999/lanzouyun_host.txt\\\";\\n    let host = u.match(/([^\\\\/\\\\.]+\\\\.com)\\\\//i);\\n    host = host ? host[1] : fileExist(cachePath) ? readFile(cachePath) : false;\\n    if (!host) {\\n        let hosts = String(\\\"abcdefghijklmnopqrstuvwxyz\\\")\\n            .replace(/[rss and zzz]/gi, \\\"\\\").split(\\\"\\\")\\n            .map(x => \\\"lanzou\\\" + x + \\\".com\\\");\\n        if (host) hosts.unshift(host);\\n        // host = findReachableIP(hosts); #错误的函数调用\\n        host = batchFetch(hosts.map(host => ({\\n            url: 'https://www.' + host + '/favicon.ico',\\n            options: Object.assign({\\n                withHeaders: true,\\n                withStatusCode: true,\\n                redirect: false,\\n                timeout: 2000,\\n                onlyHeaders: true\\n            }, head)\\n        }))).find(_ => JSON.parse(_).statusCode == 200);\\n        host = JSON.parse(host || '{\\\"url\\\":\\\"www.lanzoug.com\\\"}').url.split(\\\"www.\\\");\\n        host = host[1].split(\\\"/favicon.ico\\\")[0];\\n        log('蓝奏可用链接: ' + host);\\n        saveFile(cachePath, host);\\n    }\\n    if (r) return host;\\n    u = \\\"/\\\" + u.split(\\\"/\\\").slice(3).join(\\\"/\\\");\\n    return String(\\\"https://www.\\\" + host + u);\\n}\\n\\n\\n\\nfunction one_url(url, pwd, run, noTp, Html) {\\n    try {\\n        url = getHost(url);\\n        head.headers.referer = url.split(\\\"?\\\")[0];\\n        let da, html, path, host, k, u, _,\\n            isTp = !url.match(\\\"/tp/\\\");\\n        if (isTp && !noTp) {\\n            da = url.replace(/^(.*?\\\\.com)/, '$1/tp');\\n        } else {\\n            da = url;\\n        }\\n        html = String(Html || fetch(da, head));\\n        if (html == \\\"\\\" && isTp && !noTp) {\\n            return one_url(url, pwd, run, true);\\n        }\\n        try {\\n            path = html.match(/link = ['\\\"]([^\\\"']+)/i)[1];\\n            host = url.match(/^(.*?\\\\.com\\\\/)/)[1];\\n            return one_url(host + path, pwd, run);\\n        } catch (err0) {\\n            try {\\n                path = html.match(/'(\\\\?.+?)'/)[1];\\n                host = \\\"https://developer.lanzoug.com\\\";\\n            } catch (err1) {\\n                let kdns = 1;\\n                eval(html.match(/value\\\\;([\\\\s\\\\S]+?)\\\\$\\\\(/i)[1]);\\n                eval('body=' + html.match(/[\\\\s\\\\S]*?\\\\s+data :([\\\\s\\\\S]*?\\\\}),\\\\s+/)[1]);\\n                u = String(url).replace(/\\\\.com.*/, \\\".com/ajaxm.php\\\");\\n                _ = JSON.parse(post(u, {\\n                    headers: head.headers,\\n                    body\\n                }));\\n                path = _.url;\\n                host = _.dom;\\n            }\\n        }\\n        u = host + \\\"/file/\\\" + path;\\n        k = JSON.parse(fetch(u, {\\n            redirect: false,\\n            onlyHeaders: true\\n        })).headers.location;\\n        k = Array.isArray(k) ? k[0] : k;\\n        if (run) return k;\\n        let f = \\\"hiker://files/cache/_fileSelect_rule.json\\\";\\n        downloadFile(k, f);\\n        return f;\\n    } catch (err2) {\\n        return false;\\n    }\\n};\\n\\nfunction list_one(url, pwd, run, pgs, getInfo) {\\n    try {\\n        let src, body;\\n        url = getHost(url);\\n        if (pgs > 1) {\\n            src = getMyVar('gcsp1999_lanzou_' + md5(url), src);\\n        }\\n        src = src || fetch(url, head);\\n        pgs === 1 && putMyVar('gcsp1999_lanzou_' + md5(url), src);\\n        eval(src.match(/var pgs;([\\\\s\\\\S]*?pgs.+;)/)[1].replace(/pgs\\\\s*=/, \\\"pgs=pgs||\\\"));\\n        eval('body=' + src.match(/data :([\\\\s\\\\S]*?\\\\})/)[1]);\\n        url = url.replace(/\\\\.com.*/, \\\".com/filemoreajax.php\\\");\\n        let list = JSON.parse(post(url, {\\n            headers: head.headers,\\n            body\\n        })).text;\\n\\n        if (getInfo) {\\n            let Title = pdfh(src, \\\"title,0&&Text\\\");\\n            let Desc = pdfh(src, \\\"#info&&.tet&&Text\\\")\\n                .replace(/^话说/, \\\"\\\");\\n            if (run) {\\n                return [list, Title, Desc];\\n            }\\n        }\\n\\n        if (run) return list;\\n        let _ = list[0];\\n        url = url.replace(/filemo.*/, 'tp/' + _.id);\\n        let v = _.name_all.match(/\\\\[(.+)/)[1];\\n        [v, run] = v.split(\\\"]\\\");\\n        return [url, v, run];\\n    } catch (no_mat) {}\\n    return [\\\"\\\", 0, run];\\n}\\n$.exports = {\\n    list_one,\\n    one_url,\\n    one_info: function(url, pwd, version, isLook) {\\n        url = getHost(url);\\n        let version = version || \\\"未知版本\\\";\\n        version = String(version).replace(/(\\\\d\\\\d)(\\\\d\\\\d)$/, \\\"-$1-$2\\\");\\n        let item = fetch(url, head);\\n        let t = pdfh(item, \\\".md&&Text\\\") || pdfh(item, \\\"title&&Text\\\");\\n        try {\\n            t = String(t).split(\\\"[\\\")[1].split(\\\"]\\\")[0];\\n        } catch (err) {}\\n        t = String(t).replace(/(\\\\d\\\\d)(\\\\d\\\\d)$/, \\\"-$1-$2\\\");\\n        let d = [];\\n        d.push({\\n            desc: \\\"<b>““\\\" + version + \\\" => \\\" + t + \\\"””</b>\\\",\\n            col_type: \\\"text_center_1\\\",\\n            url: \\\"hiker://empty\\\",\\n            extra: {\\n                lineVisible: false\\n            }\\n        });\\n        d.push({\\n            col_type: \\\"big_big_blank_block\\\"\\n        });\\n        d.push({\\n            title: pdfh(item, \\\".mdo&&Html\\\").replace(/(<\\\\/span>)?\\\\s*<span>/gi, \\\"<br>\\\"),\\n            url: 'hiker://empty',\\n            col_type: 'rich_text'\\n        });\\n        d.push({\\n            col_type: \\\"big_blank_block\\\"\\n        });\\n        d.push({\\n            title: \\\"<b>““确定更新””</b>\\\".big(),\\n            col_type: \\\"text_center_1\\\",\\n            url: $(\\\"hiker://empty#noHistory##noRecordHistory#\\\").lazyRule((url, pwd, item, isLook) => {\\n                if (getMyVar('Rule_noupdate') == '1' && !isLook) {\\n                    return back(true), \\\"hiker://empty\\\";\\n                }\\n                let {\\n                    one_url\\n                } = $.require(\\\"hiker://page/lanzou?rule=歌词适配\\\");\\n                let K = one_url(url, pwd, 1, 0, item);\\n                if (!K) {\\n                    K = one_url(url, pwd, 1);\\n                }\\n                if (!K) {\\n                    K = one_url(url.split(\\\"?\\\")[0], pwd, 1);\\n                }\\n                if (K) {\\n                    let f = \\\"hiker://files/cache/_fileSelect_rule.json\\\";\\n                    downloadFile(K, f);\\n                    putMyVar('Rule_noupdate', '1');\\n                    return \\\"\\\\u6d77\\\\u9614\\\\u89c6\\\\u754c\\\\uffe5home_rule_url\\\\uffe5\\\" + getPath(f);\\n                } else {\\n                    return \\\"toast://获取下载链接失败\\\";\\n                }\\n            }, url, pwd, item, !!isLook),\\n            extra: {\\n                lineVisible: false\\n            }\\n        });\\n        setResult(d);\\n    },\\n    mv: function(_, t1) {\\n        return [\\n            [],\\n            []\\n        ];\\n    },\\n    getLyric: function(_, t1) {\\n        return \\\"\\\";\\n    },\\n    lazy: function(platform2, t1, t2, t3) {\\n        eval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配', {})).rule);\\n        let title, author, desc, img, time, tags, total, list;\\n        let _ = t1;\\n        t1 = _.songId || _.sourceListId;\\n        [t1, pwd] = String(t1).split(\\\"##\\\");\\n        switch (String(platform2)) {\\n            case '0': // 链接\\n                let url = one_url(\\\"///tp/\\\" + t1, pwd, 1);\\n                if (t3 && t3 !== \\\"0\\\") return url;\\n                return [url, \\\"\\\", 0];\\n                break;\\n            case '1': // 首页\\n                return 0;\\n                break;\\n            case '2': // 发现\\n            case '3': // 排行\\n                addListener('onClose', $.toString((url) => {\\n                    clearMyVar('gcsp1999_lanzou_' + md5(url));\\n                }, \\\"///\\\" + t1));\\n                [list, title, desc] = list_one(\\\"///\\\" + t1, pwd, true, MY_PAGE, true);\\n                break;\\n        }\\n        if (t2) return list;\\n        if (Array.isArray(list))\\n            list.map(_ => {\\n                let songName, userName,\\n                    _title = _.name_all.replace(/\\\\s+and\\\\s+/gi, \\\"&\\\").replace(\\\".\\\" + _.icon, \\\"\\\");\\n                [userName, songName] = _title.split(/\\\\s*\\\\-\\\\s*/);\\n                songName = songName || userName;\\n                userName = (userName || \\\"\\\").replaceAll(songName, \\\"\\\");\\n                Extra({\\n                    source: \\\"lanzou\\\",\\n                    name: songName,\\n                    singer: userName,\\n                    interval: _.size,\\n                    songId: _.id,\\n                    albumName: title,\\n                    albumId: t1,\\n                    picUrl: \\\"https://7n33122q45.vicp.fun/icon.png\\\",\\n                    qualitys: [{\\n                        type: '128k',\\n                        size: _.size\\n                    }],\\n                    content: 0,\\n                }, Object.assign(t3 || {}, {\\n                    songName,\\n                    userName,\\n                    songTime: _.size,\\n                    albumName: _.id\\n                }));\\n            });\\n        else\\n            list = [];\\n        return {\\n            title,\\n            author: \\\"蓝奏云\\\",\\n            desc,\\n            img,\\n            time,\\n            tags,\\n            total: ((MY_PAGE - 1) * 50 + list.length)\\n        }\\n    }\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"程序设置\",\"path\":\"install\",\"rule\":\"js:\\neval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配', {})).rule);\\nlet _ = JSON.parse(request(\\\"hiker://home@歌词适配\\\"));\\nlet d = [];\\nd.push({\\n    img: _.icon,\\n    col_type: 'pic_1_center',\\n    extra: {\\n        inheritTitle: false\\n    },\\n    url: $([\\n        \\\"[酷狗概念版] 听歌领会员\\\",\\n        \\\"[QQ音乐] 刷新cookie\\\",\\n    ], 1, \\\"选择扩展操作\\\").select(() => {\\n        for (let i = 0; i < 3; i++) {\\n            clearMyVar('viprule_c' + i);\\n        }\\n        switch (input) {\\n            case '[QQ音乐] 刷新cookie':\\n                return $(\\\"hiker://empty#noHistory##noRecordHistory#\\\").rule((type) => {\\n                    let d;\\n                    if (getMyVar('back') == '1') {\\n                        clearMyVar('back');\\n                        back(false);\\n                        d = [];\\n                    } else {\\n                        setPageTitle('刷新cookie');\\n                        let _ = $.require('jiexi?rule=歌词适配').getJxlist('qq')\\n                            .find(_ => md5(_.title + _.url) == \\\"e2c1a4bf8d58d1703a5e8109e1f90cc0\\\");\\n                        d = [{\\n                            title: '',\\n                            desc: '每七天需要刷新一次',\\n                            url: 'hiker://empty',\\n                            col_type: \\\"text_center_1\\\",\\n                            extra: {\\n                                lineVisible: false\\n                            }\\n                        }, {\\n                            desc: 'cookie 需要包含 qm_keyst 和 uin',\\n                            col_type: 'input',\\n                            extra: {\\n                                type: 'textarea',\\n                                highlight: true,\\n                                height: 4,\\n                                defaultValue: getMyVar('viprule_c0'),\\n                                onChange: `putMyVar(\\\"viprule_c0\\\", input);`,\\n                            }\\n                        }];\\n                        d.push({\\n                            title: \\\"从解析获取\\\",\\n                            img: \\\"hiker://images/icon_search6\\\",\\n                            col_type: \\\"icon_2_round\\\",\\n                            url: $(\\\"#noHistory##noRecordHistory#\\\").lazyRule((_) => {\\n                                if (_) {\\n                                    let cookie;\\n                                    if (_.signin == 1) {\\n                                        cookie = aesDecode('hk6666666109', _.jiexi).match(/Cookie: \\\"([^\\\"]+)/)[1];\\n                                        putMyVar('viprule_c0', cookie);\\n                                        refreshPage();\\n                                        return 'toast://正在调用解析参数';\\n                                    } else {\\n                                        return $(\\\"好像还没到刷新时间，确定获取吗？\\\").confirm((_) => {\\n                                            cookie = aesDecode('hk6666666109', _.jiexi).match(/Cookie: \\\"([^\\\"]+)/)[1];\\n                                            putMyVar('viprule_c0', cookie);\\n                                            refreshPage();\\n                                            return 'toast://正在调用解析参数';\\n                                        }, _)\\n                                    }\\n                                } else {\\n                                    return \\\"toast://没有QQ音乐的解析\\\"\\n                                }\\n                            }, _)\\n                        });\\n                        d.push({\\n                            title: \\\"确定刷新\\\",\\n                            img: \\\"hiker://images/icon_menu6\\\",\\n                            col_type: \\\"icon_2_round\\\",\\n                            url: $(\\\"#noHistory##noRecordHistory#\\\").lazyRule((_) => {\\n                                let cookie = String(getMyVar('viprule_c0')).trim();\\n                                if (cookie && cookie != \\\"\\\" && cookie.match(\\\"qm_keyst=\\\") && cookie.match(\\\"uin=\\\")) {\\n                                    let uri = $.require(\\\"qq?rule=歌词适配\\\").refresh_login(cookie, 1);\\n                                    if (Array.isArray(uri)) {\\n                                        return $(\\\"hiker://empty#noHistory##noRecordHistory#\\\").rule(([qm_keyst, uin]) => {\\n                                            let cookie = `qm_keyst=${qm_keyst}; uin=${uin};`\\n                                            setPageTitle('刷新成功');\\n                                            let d = [{\\n                                                desc: 'cookie刷新成功',\\n                                                url: 'hiker://empty',\\n                                                col_type: \\\"text_center_1\\\",\\n                                                extra: {\\n                                                    lineVisible: false\\n                                                }\\n                                            }, {\\n                                                title: '<br><h6 style=\\\"text-align: center;\\\">' + cookie + \\\"</h6>\\\",\\n                                                url: 'hiker://empty',\\n                                                col_type: \\\"rich_text\\\"\\n                                            }, {\\n                                                title: \\\"复制cookie\\\",\\n                                                url: $(\\\"#noHistory##noRecordHistory#\\\").lazyRule((cookie) => {\\n                                                    putMyVar('back', '1');\\n                                                    return back(true), \\\"copy://\\\" + cookie;\\n                                                }, cookie),\\n                                                img: \\\"hiker://images/icon_cloud6\\\",\\n                                                col_type: \\\"icon_2_round\\\"\\n                                            }, {\\n                                                title: \\\"导入进解析\\\",\\n                                                url: $(\\\"#noHistory##noRecordHistory#\\\").lazyRule((key, uin) => {\\n                                                    putMyVar('back', '1');\\n                                                    putMyVar('viprule_c0', key);\\n                                                    putMyVar('viprule_c1', uin);\\n                                                    return $.require(\\\"jiexi?rule=歌词适配\\\").setEdit2(\\\"qq\\\");\\n                                                }, qm_keyst, uin),\\n                                                img: \\\"hiker://images/icon_download6\\\",\\n                                                col_type: \\\"icon_2_round\\\"\\n                                            }];\\n                                            setResult(d);\\n                                        }, uri);\\n                                    } else {\\n                                        return uri;\\n                                    }\\n                                } else {\\n                                    return \\\"toast://cookie格式错误\\\";\\n                                }\\n                            }, _),\\n                            extra: {\\n                                pageTitle: '刷新成功',\\n                                lineVisible: false\\n                            }\\n                        });\\n                    }\\n                    setResult(d);\\n                });\\n                break;\\n            case '[酷狗概念版] 听歌领会员':\\n                return $(\\\"hiker://empty#noHistory##noRecordHistory#\\\").rule((type) => {\\n                    setPageTitle('听歌领会员');\\n                    let _ = $.require('jiexi?rule=歌词适配').getJxlist('kg')\\n                        .find(_ => md5(_.title + _.url) == \\\"c877ae72b97bc26720ad8b1a39362d47\\\");\\n                    let d = [{\\n                        desc: '每天只能领取一次',\\n                        url: 'hiker://empty',\\n                        col_type: \\\"text_center_1\\\",\\n                        extra: {\\n                            lineVisible: false\\n                        }\\n                    }];\\n                    ['userid', 'token', 'signkey'].map((t, i) => {\\n                        d.push({\\n                            desc: t,\\n                            col_type: 'input',\\n                            extra: {\\n                                type: 'textarea',\\n                                highlight: true,\\n                                height: 2,\\n                                defaultValue: getMyVar('viprule_c' + i),\\n                                onChange: `putMyVar(\\\"viprule_c${i}\\\", input);`,\\n                            }\\n                        });\\n                    });\\n                    d.push({\\n                        title: \\\"从解析获取\\\",\\n                        img: \\\"hiker://images/icon_search6\\\",\\n                        col_type: \\\"icon_2_round\\\",\\n                        url: $(\\\"#noHistory##noRecordHistory#\\\").lazyRule((_) => {\\n                            if (_) {\\n                                if (_.signin == 1) {\\n                                    let mat = aesDecode('hk6666666109', _.jiexi).match(/\\\"([^\\\"]+)\\\",\\\\s+\\\"(.+)\\\",\\\\s+\\\"3116\\\",\\\\s+\\\"(.+)\\\"/);\\n                                    putMyVar('viprule_c0', mat[1]);\\n                                    putMyVar('viprule_c1', mat[2]);\\n                                    putMyVar('viprule_c2', mat[3]);\\n                                    refreshPage();\\n                                    return 'toast://正在调用解析参数';\\n                                } else {\\n                                    return $(\\\"今天好像已经签到过了，确定获取吗？\\\").confirm((_) => {\\n                                        let mat = aesDecode('hk6666666109', _.jiexi).match(/\\\"([^\\\"]+)\\\",\\\\s+\\\"(.+)\\\",\\\\s+\\\"3116\\\",\\\\s+\\\"(.+)\\\"/);\\n                                        putMyVar('viprule_c0', mat[1]);\\n                                        putMyVar('viprule_c1', mat[2]);\\n                                        putMyVar('viprule_c2', mat[3]);\\n                                        refreshPage();\\n                                        return 'toast://正在调用解析参数';\\n                                    }, _)\\n                                }\\n                            } else {\\n                                return \\\"toast://没有概念版的解析\\\"\\n                            }\\n                        }, _)\\n                    });\\n                    d.push({\\n                        title: \\\"确定领取\\\",\\n                        img: \\\"hiker://images/icon_menu6\\\",\\n                        col_type: \\\"icon_2_round\\\",\\n                        url: $(\\\"#noHistory##noRecordHistory#\\\").lazyRule((_) => {\\n                            let userid = getMyVar('viprule_c0');\\n                            let token = getMyVar('viprule_c1');\\n                            let signkey = getMyVar('viprule_c2');\\n                            if (md5(signkey) == \\\"78c60c35e590bee8e14bae44bde51277\\\") {\\n                                let t1 = $.dateFormat(new Date().getTime(), 'yyyyMMdd');\\n                                let t2 = $.dateFormat(_.time, 'yyyyMMdd');\\n                                let mat = aesDecode('hk6666666109', _.jiexi).match(/\\\"([^\\\"]+)\\\",\\\\s+\\\"(.+)\\\",\\\\s+\\\"3116\\\",\\\\s+\\\"(.+)\\\"/);\\n                                let matx = userid == mat[1] && token == mat[2];\\n                                if (matx && t1 < t2 && _.signin == 0) {\\n                                    return 'toast://今天已经签到过了';\\n                                } else {\\n                                    return $.require(\\\"kg?rule=歌词适配\\\").Lite_Signin(\\n                                        userid,\\n                                        token,\\n                                        signkey,\\n                                        matx\\n                                    );\\n                                }\\n                            } else {\\n                                return \\\"toast://signkey错误\\\";\\n                            }\\n                        }, _),\\n                        extra: {\\n                            lineVisible: false\\n                        }\\n                    });\\n                    setResult(d);\\n                });\\n                break;\\n        }\\n    })\\n});\\nd.push({\\n    title: \\\"““””<b>\\\" + String(_.version).replace(/(\\\\d\\\\d)(\\\\d\\\\d)$/, \\\"-$1-$2\\\").fontcolor(\\\"red\\\").small() + \\\"</b>\\\",\\n    col_type: \\\"text_center_1\\\",\\n    url: $(\\\"hiker://empty#noHistory##noRecordHistory#\\\").rule((version) => {\\n        let list = $.require(\\\"lanzou?rule=歌词适配\\\")\\n            .list_one(\\\"///b03r379hc\\\", \\\"gcsp\\\", 1)\\n            .map(_ => ({\\n                col_type: 'text_1',\\n                title: \\\"<b>‘‘\\\" + (_.name_all.match(version) ? _.name_all + \\\"’’\\\" : \\\"’’\\\" + _.name_all) + '</b>',\\n                desc: \\\"‘‘’’\\\" + ('💾 ' + _.icon + '　📥 ' + _.size + '　⏱️ ' + _.time).small(),\\n                url: $(\\\"hiker://empty#noHistory##noRecordHistory#\\\").rule((up, version) => {\\n                    return $.require(\\\"lanzou?rule=歌词适配\\\").one_info(up, \\\"gcsp\\\", version, 1);\\n                }, '///tp/' + _.id, version),\\n                extra: {\\n                    pageTitle: _.name_all,\\n                    inheritTitle: false\\n                }\\n            }));\\n        setResult(list);\\n    }, _.version),\\n    extra: {\\n        pageTitle: '历史版本',\\n        lineVisible: false\\n    }\\n});\\nd.push({\\n    title: \\\"““””<b>\\\" + \\\"默认设置<br><br><small>小程序默认设置</small>\\\".fontcolor(\\\"Gray\\\") + \\\"</b>\\\",\\n    col_type: \\\"card_pic_2\\\",\\n    img: \\\"hiker://images/home_pic3\\\",\\n    url: $(\\\"hiker://empty#noHistory##noRecordHistory##noRefresh#\\\").rule(() => {\\n        return $.require('typeCache?rule=歌词适配').getPage1('1');\\n    }),\\n    extra: {\\n        pageTitle: '程序默认配置'\\n    }\\n});\\nlet arr = [\\\"TGX收藏\\\", \\\"高级搜索\\\", \\\"沉浸首页\\\", \\\"解析管理\\\", \\\"程序首页\\\"];\\nd.push({\\n    title: \\\"““””<b>\\\" + \\\"主页元素<br><br><small>保存元素到\\\\\\\"我的主页\\\\\\\"</small>\\\".fontcolor(\\\"Gray\\\") + \\\"</b>\\\",\\n    col_type: \\\"card_pic_2\\\",\\n    url: $(arr, 1, '选择要保存的元素').select((arr) => {\\n        let t, i, p, u, _ = {\\n            \\\"name\\\": \\\"歌词适配\\\"\\n        };\\n        [t, i, p, u] = [\\n            [\\\"TGX收藏\\\", \\\"rule_type_audio\\\", \\\"collection\\\"],\\n            [\\\"高级搜索\\\", \\\"menu_search2\\\", \\\"search\\\"],\\n            [\\\"程序首页\\\", \\\"icon\\\", \\\"home\\\"],\\n            [\\\"解析管理\\\", \\\"icon_menu6\\\", \\\"\\\", \\\"hiker://page/ruleList#noHistory##noRecordHistory##noRefresh#?pageTitle=解析管理&rule=歌词适配\\\"],\\n            [\\\"\\\", \\\"icon\\\", \\\"\\\", \\\"hiker://home@歌词适配\\\"]\\n        ][arr.indexOf(input)];\\n        _.title = t || _.name;\\n        if (t) _.name += \\\"_\\\" + t;\\n        _.icon = $.require('image?rule=歌词适配')(i);\\n        _.url = u || $('#noLoading#').lazyRule((p) => {\\n            return $.require('typeCache?rule=歌词适配').Lazy(p);\\n        }, p);\\n        return $(\\\"hiker://empty#noHistory##noRecordHistory#\\\").rule((password) => {\\n            eval(fetch(\\\"hiker://assets/home.js\\\"));\\n            HikerHome.load(\\\"import\\\", password);\\n        }, \\\"海阔视界，我的主页「\\\" + _.name + \\\"」元素￥my_home_single￥\\\" + base64Encode(JSON.stringify(_).replace('\\\"程序首页', '\\\"歌词适配')));\\n    }, arr),\\n    img: \\\"hiker://images/home_pic1\\\",\\n});\\nd.push({\\n    title: \\\"““””<b>\\\" + \\\"我是会员<br><br><small>配置会员账号</small>\\\".fontcolor(\\\"Gray\\\") + \\\"</b>\\\",\\n    col_type: \\\"card_pic_2\\\",\\n    url: \\\"hiker://page/viprule#noHistory##noRecordHistory##noRefresh#\\\",\\n    img: \\\"hiker://images/card_bg\\\",\\n    extra: {\\n        pageTitle: '会员配置'\\n    }\\n});\\nd.push({\\n    title: \\\"““””<b>\\\" + \\\"支持作者<br><br><small>更新的动力~</small>\\\".fontcolor(\\\"Gray\\\") + \\\"</b>\\\",\\n    col_type: \\\"card_pic_2\\\",\\n    url: \\\"hiker://page/donate#noHistory##noRecordHistory##noRefresh#\\\",\\n    img: \\\"hiker://images/placeholder\\\",\\n    extra: {\\n        pageTitle: '捐赠/支持'\\n    }\\n});\\nd.push({\\n    title: \\\"““””\\\" + \\\"<b>反馈Q群：365976134</b>\\\".fontcolor(\\\"Gray\\\").small(),\\n    col_type: \\\"text_center_1\\\",\\n    url: \\\"http://qm.qq.com/cgi-bin/qm/qr?_wv=1027&k=x8r6m0bYYon_pCgT0BRc1ohwZmkkY61Q&authKey=DpmUioCvx45WjRRBnbRT2DsJ7LL6DNY3uau%2BFKPgR%2FSKz4EgYqUjEU5tJNi%2BkNPl&noverify=0&group_code=365976134\\\",\\n    extra: {\\n        lineVisible: false\\n    }\\n});\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"支持作者\",\"path\":\"donate\",\"rule\":\"js:\\nlet d = [];\\nd.push({\\n    title: \\\"捐赠/支持\\\",\\n    desc: \\\"这个捐赠不能为你带来特权，但您的支持是我更新创作的动力。\\\",\\n    col_type: \\\"text_center_1\\\",\\n    url: \\\"toast://感谢您的支持\\\"\\n});\\nd.push({\\n    col_type: \\\"pic_1_full\\\",\\n    url: \\\"https://gitee.com/ThomasYou/haikuo/raw/master/IMG_20240112_081355.png\\\",\\n    pic_url: \\\"https://gitee.com/ThomasYou/haikuo/raw/master/IMG_20240112_081355.png\\\"\\n});\\nd.push({\\n    col_type: \\\"text_center_1\\\",\\n    title: \\\"““””\\\" + \\\"图片加载缓慢请稍等\\\".small().fontcolor(\\\"Gray\\\"),\\n    url: \\\"hiker://empty\\\",\\n    extra: {\\n        lineVisible: false\\n    }\\n});\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"会员配置\",\"path\":\"viprule\",\"rule\":\"js:\\nlet d = [];\\nlet _ = {\\n    \\\"qq\\\": \\\"QQ音乐\\\",\\n    \\\"wy\\\": \\\"网易云音乐\\\",\\n    \\\"kg\\\": \\\"酷狗音乐\\\",\\n    \\\"kg2\\\": \\\"酷狗概念版\\\",\\n    \\\"kw\\\": \\\"酷我音乐\\\",\\n    \\\"kw2\\\": \\\"波点音乐\\\",\\n    \\\"mg\\\": \\\"咪咕音乐\\\",\\n    \\\"作者\\\": \\\"捐赠专属\\\",\\n}\\nlet z = Object.keys(_);\\nfor (let p of z) {\\n    d.push({\\n        title: \\\"““””<b>\\\" + _[p].big().fontcolor(\\\"purple\\\") + \\\"</b>\\\",\\n        col_type: \\\"card_pic_2\\\",\\n        img: $.require('image?rule=歌词适配')(p),\\n        extra: {\\n            pageTitle: _[p] + '配置'\\n        },\\n        url: $(\\\"#noHistory##noRecordHistory#\\\").lazyRule((type) => {\\n            switch (type) {\\n                case 'qq':\\n                    arr = ['支持从网页登录账号', 'token已改成静默刷新', ['qm_keyst', 'uin']];\\n                    break;\\n                case 'wy':\\n                    arr = ['eapi已支持试听歌曲', '账号会员过期也能解析(限128k)', ['MUSIC_U 或者 MUSIC_A']];\\n                    break;\\n                case 'kg':\\n                    arr = ['不可以抓网页端的cookie', '　', ['userid', 'token']];\\n                    break;\\n                case 'kg2':\\n                    arr = ['已支持每天签到领会员', 'signkey关键词LnT6xp', ['userid', 'token', 'signkey']];\\n                    break;\\n                case 'kw':\\n                    arr = ['自己写js获取',\\n                        // 'https://github.com/yhsj0919/music_api/blob/main/lib/api/kuwo/module/song.dart', \\n                        'https://github.com/GSQZ/KuwoMusicApi/blob/master/kw/url.js', ['rid传参为：t1\\\\nbr传参为：t2\\\\ndes调用：$.require(\\\"kw?rule=歌词适配\\\").des(str);']\\n                    ];\\n                    break;\\n                case 'kw2':\\n                    arr = ['从APP抓包', '　', ['uid', 'token', 'devid']];\\n                    break;\\n                case 'mg':\\n                    arr = ['从网页登录', '　', ['SESSION']];\\n                    break;\\n                case '作者':\\n                    url = 'toast://邢啊，作者不想收到律师函，暂不支持';\\n                    break;\\n            }\\n            if (type != '作者') {\\n                for (let i = 0; i < 3; i++) {\\n                    clearMyVar('viprule_c' + i);\\n                }\\n                url = $(\\\"hiker://empty#noHistory##noRecordHistory##noRefresh#\\\").rule((type, [title, desc, cookies]) => {\\n                    let d = [{\\n                        title: title,\\n                        desc: desc,\\n                        url: 'hiker://empty',\\n                        col_type: \\\"text_center_1\\\",\\n                        extra: {\\n                            lineVisible: false\\n                        }\\n                    }];\\n                    if (type == 'qq') {\\n                        d.push({\\n                            col_type: \\\"big_blank_block\\\"\\n                        }, {\\n                            col_type: \\\"big_blank_block\\\"\\n                        }, {\\n                            col_type: \\\"big_blank_block\\\"\\n                        }, {\\n                            title: \\\"““<b>从网页登录</b>””\\\".small(),\\n                            url: $(\\\"hiker://empty#noHistory##noRecordHistory#\\\").rule(() => {\\n                                addListener(\\\"onClose\\\", () => clearMyVar(\\\"cookie\\\"));\\n                                let durl = \\\"https://y.qq.com/n/ryqq/toplist/62\\\";\\n                                let d = [];\\n                                d.push({\\n                                    title: \\\"““确认登录””\\\",\\n                                    url: $(\\\"#noLoading#\\\").lazyRule(() => {\\n                                        let cookie = getMyVar(\\\"cookie\\\", \\\"\\\");\\n                                        if (!!(cookie && cookie.includes(\\\"uin=\\\") && cookie.includes(\\\"qqmusic_key=\\\"))) {\\n                                            putMyVar('viprule_c0', cookie);\\n                                            putMyVar('viprule_c1', cookie);\\n                                            toast(\\\"解析导入成功\\\");\\n                                            return back(), $.require('jiexi?rule=歌词适配').setEdit2(\\\"qq\\\");\\n                                            return \\\"toast://登录成功\\\";\\n                                        }\\n                                        return \\\"toast://没有获取到登录信息\\\";\\n                                    }),\\n                                    col_type: \\\"text_center_1\\\"\\n                                });\\n                                d.push({\\n                                    col_type: \\\"x5_webview_single\\\",\\n                                    url: `https://graph.qq.com/oauth2.0/show?which=Login&display=pc&response_type=code&client_id=100497308&redirect_uri=https%3A%2F%2Fy.qq.com%2Fportal%2Fwx_redirect.html%3Flogin_type%3D1%26surl%3D${ encodeURIComponent(durl) }&state=state&display=pc&scope=get_user_info%2Cget_app_friends`,\\n                                    desc: \\\"screen-133&&float\\\",\\n                                    extra: {\\n                                        ua: PC_UA,\\n                                        js: $.toString((title, durl) => {\\n                                            let cookie = \\\"\\\";\\n                                            setInterval(() => {\\n                                                cookie = fba.getCookie(durl);\\n                                                fba.putVar(title + \\\"@cookie\\\", cookie);\\n                                            }, 200);\\n                                        }, MY_RULE.title, durl)\\n                                    }\\n                                });\\n                                setResult(d);\\n                            }),\\n                            col_type: \\\"text_center_1\\\",\\n                            extra: {\\n                                pageTitle: \\\"登录QQ音乐账号\\\",\\n                                lineVisible: false\\n                            }\\n                        });\\n                    }\\n                    cookies.map((t, i) => {\\n                        d.push({\\n                            desc: t,\\n                            col_type: 'input',\\n                            extra: {\\n                                type: 'textarea',\\n                                highlight: true,\\n                                height: type == 'kw' ? 7 : 3,\\n                                defaultValue: getMyVar('viprule_c' + i),\\n                                onChange: `putMyVar(\\\"viprule_c${i}\\\", input);`,\\n                            }\\n                        });\\n                    });\\n                    d.push({\\n                        title: \\\"““确定导入””\\\",\\n                        col_type: \\\"text_center_1\\\",\\n                        url: $(\\\"#noHistory##noRecordHistory#\\\").lazyRule((type) => {\\n                            return $.require(\\\"jiexi?rule=歌词适配\\\").setEdit2(type);\\n                        }, type),\\n                        extra: {\\n                            lineVisible: false\\n                        }\\n                    });\\n                    setResult(d);\\n                }, type, arr);\\n            }\\n            return url;\\n        }, p),\\n        extra: {\\n            inheritTitle: false\\n        }\\n    });\\n}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"Ⓣ主题编辑\",\"path\":\"theme1\",\"rule\":\"js:\\neval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配', {})).rule);\\naddListener('onClose', $.toString(() => {\\n    log(999)\\n    refreshPage();\\n}))\\nlet d = [];\\n\\n\\n\\nthemeType = getMyVar(\\\"themeType\\\", \\\"home\\\");\\neval(JSON.parse(fetch('hiker://page/theme3?rule=歌词适配', {})).rule);\\nlet data = getData1(themeType, true);\\n\\n\\n\\n\\nd.push({\\n    title: Rich(Strong(Color(\\\"编辑\\\", \\\"#3399cc\\\"))),\\n    url: 'hiker://empty',\\n    img: \\\"\\\",\\n    col_type: 'text_2'\\n});\\nd.push({\\n    title: Rich(\\\"<s>预览</s>\\\"),\\n    url: 'toast://完善中~',\\n    img: \\\"\\\",\\n    col_type: 'text_2'\\n});\\nd.push({\\n    title: themeType == \\\"home\\\" ? Rich(Strong(Color(\\\"主页\\\"))) : \\\"主页\\\",\\n    url: $(\\\"#noLoading#\\\").lazyRule((yn) => {\\n        if (yn) {\\n            putMyVar(\\\"themeType\\\", \\\"home\\\");\\n            refreshPage();\\n        }\\n        return \\\"hiker://empty\\\";\\n    }, themeType == \\\"page\\\"),\\n    img: \\\"\\\",\\n    col_type: 'text_4'\\n});\\nd.push({\\n    title: themeType == \\\"page\\\" ? Rich(Strong(Color(\\\"二级\\\"))) : \\\"二级\\\",\\n    url: $(\\\"#noLoading#\\\").lazyRule((yn) => {\\n        if (yn) {\\n            putMyVar(\\\"themeType\\\", \\\"page\\\");\\n            refreshPage();\\n        }\\n        return \\\"hiker://empty\\\";\\n    }, themeType == \\\"home\\\"),\\n    img: \\\"\\\",\\n    col_type: 'text_4'\\n});\\nd.push({\\n    title: Rich(\\\"<s>搜索</s>\\\"),\\n    url: 'toast://完善中~',\\n    img: \\\"\\\",\\n    col_type: 'text_4'\\n});\\nd.push({\\n    title: Rich(\\\"<s>收藏</s>\\\"),\\n    url: 'toast://完善中~',\\n    img: \\\"\\\",\\n    col_type: 'text_4'\\n});\\n\\n\\nd.push({\\n    title: Color(name, \\\"#20B2AA\\\"),\\n    desc: \\\"by: \\\" + (author || \\\"佚名\\\"),\\n    img: img,\\n    url: \\\"#noLoading#@lazyRule=.js:\\\" + $.toString((_, name, author, img, index, themeType, data) => {\\n        const hikerPop = $.require(\\\"http://123.56.105.145/weisyr/js/hikerPop.js\\\");\\n        let pop = hikerPop.selectCenterIcon({\\n            iconList: _.data,\\n            title: \\\"主题切换\\\",\\n            extraMenu: new hikerPop.IconExtraMenu(() => {\\n                pop.dismiss();\\n                return $([\\\"名称\\\", \\\"作者\\\", \\\"封面\\\", \\\"分享\\\", \\\"删除\\\", \\\"新增\\\" /*, \\\"重置\\\"*/ ], 2, '扩展操作').select((_, name, author, icon, i1, themeType, data) => {\\n                    const hikerPop = $.require(\\\"http://123.56.105.145/weisyr/js/hikerPop.js\\\");\\n                    const path = \\\"hiker://files/rules/Thomas/gcsp1999/theme/\\\" + themeType + \\\"/\\\";\\n                    switch (input) {\\n                        case '名称':\\n                            pop = hikerPop.inputAutoRow({\\n                                hint: \\\"不建议留空，不支持重复\\\",\\n                                title: \\\"主题名称\\\",\\n                                defaultValue: name || \\\"\\\",\\n                                //hideCancel: true,\\n                                noAutoSoft: false, //不自动打开输入法\\n                                confirm(text) {\\n                                    if (!text.trim()) return 'toast://主题名称不建议留空';\\n                                    if (text == \\\"最后面\\\") return 'toast://主题名称不能是\\\"最后面\\\"';\\n                                    if (text == name) return 'hiker://empty';\\n                                    _.name.splice(i1, 1);\\n                                    i2 = _.name.indexOf(text);\\n                                    if (i2 != -1) return 'toast://已经有主题叫这个名字了';\\n                                    if (_.this == name) _.this = text;\\n                                    _.name.splice(i1, 0, text);\\n                                    _.data.splice(i1, 1, {\\n                                        title: text,\\n                                        author: author || \\\"佚名\\\",\\n                                        icon: icon || \\\"hiker://images/icon_class\\\"\\n                                    });\\n                                    t1 = readFile(path + md5(name) + \\\".json\\\");\\n                                    deleteFile(path + md5(name) + \\\".json\\\");\\n                                    saveFile(path + md5(text) + \\\".json\\\", t1);\\n                                    saveFile(path + \\\"install.json\\\", JSON.stringify(_, 0, 2));\\n                                    refreshPage();\\n                                    return \\\"hiker://empty\\\";\\n                                },\\n                                cancel() {\\n                                    return \\\"hiker://empty\\\";\\n                                }\\n                            });\\n                            break;\\n                        case '作者':\\n                            pop = hikerPop.inputAutoRow({\\n                                hint: \\\"不建议留空\\\",\\n                                title: \\\"主题作者\\\",\\n                                defaultValue: author || \\\"\\\",\\n                                //hideCancel: true,\\n                                noAutoSoft: false, //不自动打开输入法\\n                                confirm(text) {\\n                                    if (text == author) return 'hiker://empty';\\n                                    _.data.splice(i1, 1, {\\n                                        title: name,\\n                                        author: text || author || \\\"佚名\\\",\\n                                        icon: icon || \\\"hiker://images/icon_class\\\"\\n                                    });\\n                                    saveFile(path + \\\"install.json\\\", JSON.stringify(_, 0, 2));\\n                                    refreshPage();\\n                                    return \\\"hiker://empty\\\";\\n                                },\\n                                cancel() {\\n                                    return \\\"hiker://empty\\\";\\n                                }\\n                            });\\n                            break;\\n                        case '封面':\\n                            pop = hikerPop.inputAutoRow({\\n                                hint: \\\"不建议留空\\\",\\n                                title: \\\"主题封面\\\",\\n                                defaultValue: icon || \\\"\\\",\\n                                //hideCancel: true,\\n                                noAutoSoft: false, //不自动打开输入法\\n                                confirm(text) {\\n                                    if (text == icon) return 'hiker://empty';\\n                                    _.data.splice(i1, 1, {\\n                                        title: name,\\n                                        author: author,\\n                                        icon: text || icon || \\\"hiker://images/icon_class\\\"\\n                                    });\\n                                    saveFile(path + \\\"install.json\\\", JSON.stringify(_, 0, 2));\\n                                    refreshPage();\\n                                    return \\\"hiker://empty\\\";\\n                                },\\n                                cancel() {\\n                                    return \\\"hiker://empty\\\";\\n                                }\\n                            });\\n                            break;\\n                        case '分享':\\n                            let newJson = {\\n                                type: themeType,\\n                                info: {\\n                                    title: name,\\n                                    icon: icon || \\\"\\\",\\n                                    author: author || \\\"佚名\\\"\\n                                },\\n                                data: data\\n                            }\\n                            return $.require(\\\"jiexi?rule=歌词适配\\\").getShare(newJson, \\\"theme\\\", 1, (author || \\\"佚名\\\") + \\\"的\\\", name);\\n                            break;\\n                        case '删除':\\n                            return $(\\\"确定删除主题 \\\" + name + \\\" 吗？\\\\n此操作不可逆，请谨慎选择。\\\").confirm((path, name, _, i) => {\\n                                _.name.splice(i, 1);\\n                                _.data.splice(i, 1);\\n                                if (_.name[0] == undefined) return \\\"toast://至少要保留一个主题吧\\\";\\n                                if (_.this == name) _.this = _.name[0];\\n                                deleteFile(path + md5(name) + \\\".json\\\");\\n                                saveFile(path + \\\"install.json\\\", JSON.stringify(_, 0, 2));\\n                                refreshPage();\\n                                return \\\"hiker://empty\\\";\\n                            }, path, name, _, i1);\\n                            break;\\n                        case '新增':\\n                            pop = hikerPop.inputTwoRow({\\n                                titleHint: \\\"主题名称\\\",\\n                                titleDefault: \\\"主题\\\" + (_.name.length + 1),\\n                                urlHint: \\\"主题作者\\\",\\n                                urlDefault: \\\"佚名\\\",\\n                                noAutoSoft: true, //不自动打开输入法\\n                                title: \\\"新建主题\\\",\\n                                //hideCancel: true,\\n                                confirm(s1, s2) {\\n                                    i2 = _.name.indexOf(s1);\\n                                    if (i2 != -1) return \\\"toast://已经有主题叫这个名字了\\\";\\n                                    _.name.push(s1);\\n                                    _.data.push({\\n                                        title: s1,\\n                                        author: s2,\\n                                        icon: \\\"hiker://images/icon_class\\\"\\n                                    });\\n                                    saveFile(path + \\\"install.json\\\", JSON.stringify(_, 0, 2));\\n                                    saveFile(path + md5(s1) + \\\".json\\\", \\\"[]\\\");\\n                                    refreshPage();\\n                                    return \\\"hiker://empty\\\";\\n                                },\\n                                cancel() {\\n                                    return \\\"hiker://empty\\\"\\n                                }\\n                            });\\n                            break;\\n                        case '重置':\\n                            return $(\\\"确定重置所有主题吗？\\\\n此操作不可逆，请谨慎选择。\\\").confirm((path, _) => {\\n                                _.name.map(\\n                                    name =>\\n                                    deleteFile(path + md5(name) + \\\".json\\\")\\n                                )\\n                                deleteFile(path + \\\"install.json\\\");\\n                                refreshPage();\\n                                return back(true), \\\"toast://已清除主题缓存，回到程序首页重置。\\\";\\n                            }, path, _);\\n                            break;\\n\\n                    }\\n                    return 'hiker://empty';\\n                }, _, name, author, img, index, themeType, data);\\n            }),\\n            columns: 1,\\n            position: index,\\n            click(a) {\\n                _.this = a;\\n                saveFile(\\\"hiker://files/rules/Thomas/gcsp1999/theme/\\\" + themeType + \\\"/install.json\\\", JSON.stringify(_, 0, 2));\\n                refreshPage();\\n                return \\\"hiker://empty\\\";\\n            }\\n        });\\n        return \\\"hiker://empty\\\";\\n    }, _, name, author, img, index, themeType, data),\\n    col_type: 'avatar',\\n    extra: {\\n        lineVisible: false\\n    }\\n});\\nd.push({\\n    col_type: 'line_blank'\\n});\\n\\n\\n\\nif (data.length == 0) {\\n    d.push({\\n        title: \\\"主题元素不存在~\\\",\\n        desc: \\\"新建元素/删除主题\\\",\\n        url: \\\"hiker://empty\\\",\\n        col_type: \\\"text_center_1\\\"\\n    });\\n}\\ndata.map((_, i) => {\\n    d.push({\\n        title: (_.open ? \\\"☑︎\\\" : \\\"☒\\\") + \\\" \\\" + _.name,\\n        desc: \\\"翻页: \\\" + (_.page ? \\\"☒\\\" : \\\"☑︎\\\") + \\\"　样式: \\\" + _.type,\\n        url: $([\\\"移动\\\", \\\"编辑\\\", (_.open ? '禁用' : '启用'), \\\"删除\\\"], 1, '选择扩展操作').select((path, _, i) => {\\n            if (input == \\\"编辑\\\")\\n                return \\\"hiker://page/theme2#noHistory##noRecordHistory#\\\";\\n            let list = JSON.parse(readFile(path) || \\\"[]\\\");\\n            switch (input) {\\n                case '删除':\\n                    return $(\\\"确定删除元素 \\\" + _.name + \\\" 吗？\\\\n此操作不可逆，请谨慎选择。\\\").confirm((path, list, i) => {\\n                        list.splice(i, 1);\\n                        saveFile(path, JSON.stringify(list, 0, 2));\\n                        refreshPage(false);\\n                        return \\\"hiker://empty\\\";\\n                    }, path, list, i);\\n                    break;\\n                case '移动':\\n                    list.splice(i, 1);\\n                    let zu = list.map((_, i) => _.name + '\\\\n\\\\n' + i);\\n                    return $(zu.concat(\\\"最后面\\\"), 2, '请选择资源位置').select((path, _, list, zu) => {\\n                        if (\\\"最后面\\\" == input) {\\n                            list.push(_)\\n                        } else {\\n                            let i = zu.indexOf(input);\\n                            list.splice(i, 0, _);\\n                        }\\n                        saveFile(path, JSON.stringify(list, 0, 2));\\n                        refreshPage(false);\\n                        return \\\"hiker://empty\\\";\\n                    }, path, _, list, zu);\\n                    break;\\n                case '启用':\\n                case '禁用':\\n                    _.open = !_.open;\\n                    list[i] = _;\\n                    saveFile(path, JSON.stringify(list, 0, 2));\\n                    refreshPage(false);\\n                    return \\\"hiker://empty\\\";\\n                    break;\\n            }\\n        }, path, _, i),\\n        col_type: 'text_1',\\n        extra: {\\n            pageTitle: \\\"元素设置\\\",\\n            __: {\\n                path,\\n                i\\n            },\\n            _\\n        }\\n    });\\n});\\n\\n\\n\\n\\n\\n\\nd.push({\\n    col_type: 'line_blank'\\n});\\nd.push({\\n    title: Rich(\\\"<s>复原</s>\\\"),\\n    url: 'toast://完善中~',\\n    img: \\\"\\\",\\n    col_type: 'text_2'\\n});\\nd.push({\\n    title: \\\"新增\\\",\\n    url: \\\"hiker://page/theme2#noHistory##noRecordHistory#?rule=歌词适配\\\",\\n    img: \\\"\\\",\\n    col_type: 'text_2',\\n    extra: {\\n        pageTitle: \\\"元素设置\\\",\\n        __: {\\n            path,\\n            i: data.length\\n        },\\n        _: {\\n            open: true,\\n            page: true,\\n            name: \\\"\\\",\\n            type: \\\"\\\"\\n        }\\n    }\\n});\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"Ⓣ元素编辑\",\"path\":\"theme2\",\"rule\":\"js:\\neval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配', {})).rule);\\naddListener('onClose', $.toString(() => {\\n    clearMyVar('page');\\n    clearMyVar('open');\\n    clearMyVar('name');\\n    clearMyVar('type');\\n    clearMyVar('data');\\n}));\\nlet d = [];\\n/*\\nsetPageParams({\\n    \\n});\\n*/\\nlet _ = MY_PARAMS._;\\nlet path = MY_PARAMS.__.path.match(\\\"/home\\\");\\nlet page = getMyVar('page', _.page ? \\\"1\\\" : \\\"0\\\") == \\\"1\\\";\\nlet open = getMyVar('open', _.open ? \\\"1\\\" : \\\"0\\\") == \\\"1\\\";\\nlet name = getMyVar('name', _.name) || \\\"\\\";\\nlet type = getMyVar('type', _.type) || \\\"\\\";\\nlet data = getMyVar('data', _.data) || \\\"\\\";\\n\\n\\n\\n\\n\\nd.push({\\n    title: \\\"只在一页执行\\\",\\n    url: $('#noLoading#').lazyRule((yn) => {\\n        putMyVar(\\\"page\\\", yn);\\n        refreshPage();\\n        return 'hiker://empty';\\n    }, page ? \\\"0\\\" : \\\"1\\\"),\\n    img: \\\"http://123.56.105.145/tubiao/messy/\\\" + (page ? 55 : 63) + \\\".svg\\\",\\n    col_type: 'text_icon'\\n});\\nd.push({\\n    title: \\\"启用主题元素\\\",\\n    url: $('#noLoading#').lazyRule((yn) => {\\n        putMyVar(\\\"open\\\", yn);\\n        refreshPage();\\n        return 'hiker://empty';\\n    }, open ? \\\"0\\\" : \\\"1\\\"),\\n    img: \\\"http://123.56.105.145/tubiao/messy/\\\" + (open ? 55 : 63) + \\\".svg\\\",\\n    col_type: 'text_icon'\\n});\\n\\n\\nd.push({\\n    col_type: 'line_blank'\\n});\\n\\n\\nd.push({\\n    title: name,\\n    desc: \\\"title\\\",\\n    url: $(\\\"#noLoading#\\\").lazyRule((t) => {\\n        const hikerPop = $.require(\\\"http://123.56.105.145/weisyr/js/hikerPop.js\\\");\\n        let pop = hikerPop.inputAutoRow({\\n            hint: \\\"不建议留空\\\",\\n            title: \\\"元素名称\\\",\\n            defaultValue: t || \\\"\\\",\\n            //hideCancel: true,\\n            noAutoSoft: false, //不自动打开输入法\\n            confirm(text) {\\n                if (t == \\\"最后面\\\") return 'toast://名称不能是\\\"最后面\\\"';\\n                putMyVar(\\\"name\\\", text);\\n                refreshPage();\\n                return \\\"hiker://empty\\\";\\n            },\\n            cancel() {\\n                return \\\"hiker://empty\\\";\\n            }\\n        });\\n        return \\\"hiker://empty\\\";\\n    }, name),\\n    img: \\\"\\\",\\n    col_type: 'text_1'\\n});\\nd.push({\\n    title: type,\\n    desc: \\\"col_type\\\",\\n    url: $(\\\"#noLoading#\\\").lazyRule(() => {\\n        const hikerPop = $.require(\\\"http://123.56.105.145/weisyr/js/hikerPop.js\\\");\\n        let pop = hikerPop.selectBottom({\\n            title: \\\"请选择显示样式\\\",\\n            options: getColTypes(),\\n            columns: 2,\\n            height: 0.6, //0-1\\n            position: 1,\\n            click(a) {\\n                putMyVar(\\\"type\\\", a);\\n                refreshPage();\\n                return \\\"hiker://empty\\\";\\n            },\\n            longClick(a) {\\n                putMyVar(\\\"type\\\", a);\\n                refreshPage();\\n                return \\\"hiker://empty\\\";\\n            }\\n        });\\n        return \\\"hiker://empty\\\";\\n    }),\\n    img: \\\"\\\",\\n    col_type: 'text_1'\\n});\\nd.push({\\n    desc: path ?\\n        '继承数组d，提供变量：$name, $type\\\\n栗子：\\\\nd.push({title: \\\"$name\\\",desc: \\\"$type\\\",url: \\\"hiker://empty\\\"});\\\\n\\\\n话题模板可以加 __json 扩展\\\\n栗子：\\\\n#主要分类_标题#__{title:\\\"\\\",desc:\\\"\\\",img:\\\"\\\",Color:\\\"#ff6601\\\",Strong:true,Rich:true,extra:{lineVisible:false}}' : '继承数组d，提供变量：$name, $type, $title, $desc, $img, $author, $time, $tags, $total',\\n    col_type: 'input',\\n    extra: {\\n        highlight: true,\\n        type: \\\"textarea\\\",\\n        height: 7,\\n        defaultValue: data,\\n        onChange: $.toString(() => {\\n            putMyVar(\\\"data\\\", input.trim());\\n        })\\n    }\\n});\\n\\n\\n\\nd.push({\\n    col_type: 'line_blank'\\n});\\nd.push({\\n    title: \\\"复原\\\",\\n    url: $(\\\"确定恢复元素为编辑前吗？\\\\n此操作不可逆，请谨慎选择。\\\").confirm((_) => {\\n        _.page = _.page ? \\\"1\\\" : \\\"0\\\";\\n        _.open = _.open ? \\\"1\\\" : \\\"0\\\";\\n        for (let key in _) {\\n            putMyVar(key, _[key]);\\n        }\\n        refreshPage();\\n        return \\\"hiker://empty\\\";\\n    }, _),\\n    img: \\\"\\\",\\n    col_type: 'text_3'\\n});\\n\\n\\nlet arr = path ? [\\n    \\\"#切换接口_聚合#\\\", \\\"#切换接口_独立#\\\",\\n    \\\"#主要分类_聚合#\\\", \\\"#主要分类_独立#\\\",\\n    \\\"#次要分类_聚合#\\\", \\\"#次要分类_独立#\\\",\\n    \\\"#主要分类_标题#\\\", \\\"#次要分类_标题#\\\",\\n    \\\"#分类数据#\\\",\\n] : [\\n    \\\"#置顶标题#\\\", \\\"#页面简介#\\\",\\n    \\\"#播放下载#\\\", \\\"#页面数据#\\\"\\n];\\nd.push({\\n    title: \\\"模板\\\",\\n    url: $(arr.concat([\\n        \\\"#分割#\\\",\\n        \\\"#搜索框#\\\", \\\"#高级搜索#\\\",\\n        \\\"#主题切换#\\\", \\\"主题编辑\\\",\\n        \\\"温馨提示\\\", \\\"解析管理\\\",\\n        \\\"TGX收藏\\\", \\\"Media\\\",\\n        \\\"我的收藏\\\", \\\"历史浏览\\\"\\n    ]), 2, '选择扩展操作').select(() => {\\n        let type, data, open = \\\"1\\\",\\n            page = \\\"1\\\";\\n        switch (input) {\\n            case '#主题切换#':\\n                type = \\\"avatar\\\";\\n                data = input;\\n                break;\\n            case '#分割#':\\n                type = \\\"line_blank\\\";\\n                data = input;\\n                break;\\n            case '#置顶标题#':\\n                type = \\\"movie_1_vertical_pic_blur\\\";\\n                data = input;\\n                break;\\n            case '#页面简介#':\\n                type = \\\"rich_text\\\";\\n                data = input;\\n                break;\\n            case '#搜索框#':\\n                type = \\\"input\\\";\\n                data = input;\\n                break;\\n            case '#高级搜索#':\\n            case '#切换接口_独立#':\\n            case '#主要分类_独立#':\\n            case '#次要分类_独立#':\\n                type = \\\"scroll_button\\\";\\n                data = input;\\n                break;\\n            case '#播放下载#':\\n            case '#切换接口_聚合#':\\n            case '#主要分类_聚合#':\\n            case '#次要分类_聚合#':\\n                type = \\\"icon_small_3\\\";\\n                data = input;\\n                break;\\n            case '#主要分类_标题#':\\n            case '#次要分类_标题#':\\n                type = \\\"text_center_1\\\";\\n                data = input;\\n                break;\\n            case '#分类数据#':\\n            case '#页面数据#':\\n                page = \\\"0\\\";\\n                type = \\\"card_pic_3\\\";\\n                data = input;\\n                break;\\n\\n            case \\\"温馨提示\\\":\\n                type = \\\"text_center_1\\\";\\n                data = \\\"// 获取温馨提示时会检测更新\\\\n$.require('notice?rule=歌词适配')(\\\\\\\"$type\\\\\\\");\\\";\\n                break;\\n            case \\\"解析管理\\\":\\n                type = \\\"icon_small_3\\\";\\n                data = \\\"d.push({\\\\n    title: Strong(Color(\\\\\\\"解析管理\\\\\\\", \\\\\\\"#ff6601\\\\\\\")),\\\\n    url: \\\\\\\"hiker://page/ruleList#noHistory##noRecordHistory##noRefresh#?pageTitle=解析管理&rule=歌词适配\\\\\\\",\\\\n    img: $.require('image?rule=歌词适配')('设置'),\\\\n    col_type: '$type'\\\\n});\\\";\\n                break;\\n            case \\\"TGX收藏\\\":\\n                type = \\\"icon_small_3\\\";\\n                data = \\\"d.push({\\\\n    title: Strong(Color(\\\\\\\"TGX收藏\\\\\\\", \\\\\\\"#ff6601\\\\\\\")),\\\\n    url: \\\\\\\"hiker://page/collection#noHistory##noRecordHistory##noRefresh#?rule=歌词适配\\\\\\\",\\\\n    img: $.require('image?rule=歌词适配')('收藏'),\\\\n    col_type: '$type',\\\\n    extra: {\\\\n        pageTitle: \\\\\\\"TGX收藏\\\\\\\",\\\\n    }\\\\n});\\\";\\n                break;\\n            case \\\"Media\\\":\\n                type = \\\"scroll_button\\\";\\n                data = \\\"d.push({\\\\n    title: 'Media',\\\\n    url: 'hiker://localMedia',\\\\n    img: 'hiker://images/home_download',\\\\n    col_type: '$type'\\\\n});\\\";\\n                break\\n            case \\\"我的收藏\\\":\\n                type = \\\"scroll_button\\\";\\n                data = \\\"d.push({\\\\n    title: '我的收藏',\\\\n    url: 'hiker://collection?rule=歌词适配',\\\\n    img: 'hiker://images/icon1',\\\\n    col_type: '$type'\\\\n});\\\";\\n                break;\\n            case \\\"历史浏览\\\":\\n                type = \\\"scroll_button\\\";\\n                data = \\\"d.push({\\\\n    title: '历史记录',\\\\n    url: 'hiker://history?rule=歌词适配',\\\\n    img: 'hiker://images/icon3',\\\\n    col_type: '$type'\\\\n});\\\";\\n                break;\\n            case \\\"主题编辑\\\":\\n                type = \\\"scroll_button\\\";\\n                data = \\\"d.push({\\\\n    title: '主题编辑',\\\\n    url: 'hiker://page/theme1#noHistory##noRecordHistory#?rule=歌词适配',\\\\n    img: 'hiker://images/icon_class',\\\\n    col_type: '$type'\\\\n});\\\";\\n                break;\\n        }\\n        let _ = {\\n            page,\\n            open,\\n            name: input.replace(/\\\\#/g, \\\"\\\"),\\n            type,\\n            data\\n        }\\n        for (let key in _) {\\n            putMyVar(key, _[key]);\\n        }\\n        refreshPage();\\n        return \\\"hiker://empty\\\";\\n    }),\\n    img: \\\"\\\",\\n    col_type: 'text_3'\\n});\\nd.push({\\n    title: \\\"保存\\\",\\n    url: $('#noLoading#').lazyRule((__, _) => {\\n        let list = JSON.parse(readFile(__.path) || \\\"[]\\\");\\n        list[__.i] = {\\n            page: getMyVar('page', _.page ? \\\"1\\\" : \\\"0\\\") == \\\"1\\\",\\n            open: getMyVar('open', _.open ? \\\"1\\\" : \\\"0\\\") == \\\"1\\\",\\n            name: getMyVar('name', _.name) || \\\"\\\",\\n            type: getMyVar('type', _.type) || \\\"\\\",\\n            data: getMyVar('data', _.data) || \\\"\\\"\\n        }\\n        saveFile(__.path, JSON.stringify(list, 0, 2));\\n        return back(true), \\\"hiker://empty\\\";\\n    }, MY_PARAMS.__, MY_PARAMS._),\\n    img: \\\"\\\",\\n    col_type: 'text_3'\\n});\\n\\n\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"Ⓣ主题函数\",\"path\":\"theme3\",\"rule\":\"js:\\neval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配', {})).rule);\\nlet setData = (set, themeType) => {\\n    name = \\\"程序默认\\\";\\n    author = \\\"Thomas喲\\\";\\n    img = JSON.parse(request(\\\"hiker://home@歌词适配\\\")).icon;\\n    saveFile(set, JSON.stringify({\\n        this: name,\\n        name: [name],\\n        data: [{\\n            title: name,\\n            author,\\n            icon: img\\n        }]\\n    }));\\n    if (themeType == \\\"home\\\") {\\n        data = [{\\n                \\\"page\\\": true,\\n                \\\"open\\\": true,\\n                \\\"name\\\": \\\"温馨提示\\\",\\n                \\\"type\\\": \\\"text_center_1\\\",\\n                \\\"data\\\": \\\"// 获取温馨提示时会检测更新\\\\n$.require('notice?rule=歌词适配')(\\\\\\\"$type\\\\\\\");\\\"\\n            },\\n            {\\n                \\\"page\\\": true,\\n                \\\"open\\\": true,\\n                \\\"name\\\": \\\"主题切换\\\",\\n                \\\"type\\\": \\\"scroll_button\\\",\\n                \\\"data\\\": \\\"#主题切换#__{Rich:true,Strong:true,Color:\\\\\\\"#62a6fb\\\\\\\"}\\\"\\n            },\\n            {\\n                \\\"page\\\": true,\\n                \\\"open\\\": true,\\n                \\\"name\\\": \\\"主要分类\\\",\\n                \\\"type\\\": \\\"scroll_button\\\",\\n                \\\"data\\\": \\\"#主要分类_独立#__{Color:true,Strong:true,Rich:true}\\\"\\n            },\\n            {\\n                \\\"open\\\": true,\\n                \\\"page\\\": true,\\n                \\\"name\\\": \\\"空\\\",\\n                \\\"type\\\": \\\"line_blank\\\",\\n                \\\"data\\\": \\\"#分割#\\\"\\n            },\\n            {\\n                \\\"open\\\": true,\\n                \\\"page\\\": true,\\n                \\\"name\\\": \\\"空\\\",\\n                \\\"type\\\": \\\"line_blank\\\",\\n                \\\"data\\\": \\\"#分割#\\\"\\n            },\\n            {\\n                \\\"open\\\": true,\\n                \\\"page\\\": true,\\n                \\\"name\\\": \\\"切换接口\\\",\\n                \\\"type\\\": \\\"icon_small_3\\\",\\n                \\\"data\\\": \\\"#切换接口_聚合#__{Color:'#ff6601',Strong:true,Rich:false}\\\"\\n            },\\n            {\\n                \\\"open\\\": true,\\n                \\\"page\\\": true,\\n                \\\"name\\\": \\\"TGX收藏\\\",\\n                \\\"type\\\": \\\"icon_small_3\\\",\\n                \\\"data\\\": \\\"d.push({\\\\n    title: Strong(Color(\\\\\\\"TGX收藏\\\\\\\", \\\\\\\"#ff6601\\\\\\\")),\\\\n    url: $('#noLoading#').lazyRule(() => {\\\\n        return $.require('typeCache?rule=歌词适配').Lazy(\\\\\\\"collection\\\\\\\");\\\\n    }),\\\\n    img: $.require('image?rule=歌词适配')('收藏'),\\\\n    col_type: 'icon_small_3',\\\\n    extra: {\\\\n        pageTitle: \\\\\\\"TGX收藏\\\\\\\",\\\\n    }\\\\n});\\\"\\n            },\\n            {\\n                \\\"page\\\": true,\\n                \\\"open\\\": true,\\n                \\\"name\\\": \\\"解析管理\\\",\\n                \\\"type\\\": \\\"icon_small_3\\\",\\n                \\\"data\\\": \\\"d.push({\\\\n    title: Strong(Color(\\\\\\\"解析管理\\\\\\\", \\\\\\\"#ff6601\\\\\\\")),\\\\n    url: \\\\\\\"hiker://page/ruleList#noHistory##noRecordHistory##noRefresh#?pageTitle=解析管理&rule=歌词适配\\\\\\\",\\\\n    img: $.require('image?rule=歌词适配')('设置'),\\\\n    col_type: '$type'\\\\n});\\\"\\n            },\\n            {\\n                \\\"open\\\": true,\\n                \\\"page\\\": true,\\n                \\\"name\\\": \\\"搜索框\\\",\\n                \\\"type\\\": \\\"input\\\",\\n                \\\"data\\\": \\\"#搜索框#\\\"\\n            },\\n            {\\n                \\\"open\\\": true,\\n                \\\"page\\\": true,\\n                \\\"name\\\": \\\"我的收藏\\\",\\n                \\\"type\\\": \\\"scroll_button\\\",\\n                \\\"data\\\": \\\"d.push({\\\\n    title: '我的收藏',\\\\n    url: 'hiker://collection?rule=歌词适配',\\\\n    img: 'hiker://images/icon1',\\\\n    col_type: 'scroll_button'\\\\n});\\\"\\n            },\\n            {\\n                \\\"open\\\": true,\\n                \\\"page\\\": true,\\n                \\\"name\\\": \\\"历史浏览\\\",\\n                \\\"type\\\": \\\"scroll_button\\\",\\n                \\\"data\\\": \\\"d.push({\\\\n    title: '历史记录',\\\\n    url: 'hiker://history?rule=歌词适配',\\\\n    img: 'hiker://images/icon3',\\\\n    col_type: 'scroll_button'\\\\n});\\\"\\n            },\\n            {\\n                \\\"open\\\": true,\\n                \\\"page\\\": true,\\n                \\\"name\\\": \\\"高级搜索\\\",\\n                \\\"type\\\": \\\"scroll_button\\\",\\n                \\\"data\\\": \\\"#高级搜索#\\\"\\n            },\\n            {\\n                \\\"open\\\": true,\\n                \\\"page\\\": true,\\n                \\\"name\\\": \\\"Media\\\",\\n                \\\"type\\\": \\\"scroll_button\\\",\\n                \\\"data\\\": \\\"d.push({\\\\n    title: 'Media',\\\\n    url: 'hiker://localMedia',\\\\n    img: 'hiker://images/home_download',\\\\n    col_type: 'scroll_button'\\\\n});\\\"\\n            },\\n            {\\n                \\\"open\\\": true,\\n                \\\"page\\\": true,\\n                \\\"name\\\": \\\"空\\\",\\n                \\\"type\\\": \\\"line_blank\\\",\\n                \\\"data\\\": \\\"#分割#\\\"\\n            },\\n            {\\n                \\\"open\\\": true,\\n                \\\"page\\\": true,\\n                \\\"name\\\": \\\"标题\\\",\\n                \\\"type\\\": \\\"text_center_1\\\",\\n                \\\"data\\\": \\\"#主要分类_标题#__{Color:'#ff6601',Strong:true,Rich:true,extra:{lineVisible:false}}\\\"\\n            },\\n            {\\n                \\\"open\\\": true,\\n                \\\"page\\\": true,\\n                \\\"name\\\": \\\"次要分类\\\",\\n                \\\"type\\\": \\\"scroll_button\\\",\\n                \\\"data\\\": \\\"#次要分类_独立#__{Color:true,Strong:true,Rich:true}\\\"\\n            },\\n            {\\n                \\\"open\\\": true,\\n                \\\"page\\\": true,\\n                \\\"name\\\": \\\"分隔\\\",\\n                \\\"type\\\": \\\"blank_block\\\",\\n                \\\"data\\\": \\\"#分割#\\\"\\n            },\\n            {\\n                \\\"page\\\": true,\\n                \\\"open\\\": true,\\n                \\\"name\\\": \\\"加载动画\\\",\\n                \\\"type\\\": \\\"pic_1_center\\\",\\n                \\\"data\\\": \\\"Loading();\\\"\\n            },\\n            {\\n                \\\"open\\\": true,\\n                \\\"page\\\": false,\\n                \\\"name\\\": \\\"分类数据\\\",\\n                \\\"type\\\": \\\"card_pic_3\\\",\\n                \\\"data\\\": \\\"#分类数据#\\\"\\n            }\\n        ];\\n    } else {\\n        data = [{\\n            \\\"page\\\": true,\\n            \\\"open\\\": true,\\n            \\\"name\\\": \\\"主题切换\\\",\\n            \\\"type\\\": \\\"pic_1_full\\\",\\n            \\\"data\\\": \\\"#主题切换#__{img:\\\\\\\"http://123.56.105.145/weisyr/img/TopImg0.png\\\\\\\",extra:{inheritTitle:false}}\\\"\\n        }, {\\n            \\\"open\\\": true,\\n            \\\"page\\\": false,\\n            \\\"name\\\": \\\"页面数据\\\",\\n            \\\"type\\\": \\\"card_pic_3\\\",\\n            \\\"data\\\": \\\"#页面数据#\\\"\\n        }];\\n    }\\n    // log(data);\\n    saveFile(p + md5(name) + \\\".json\\\", JSON.stringify(data, 0, 2));\\n    return true;\\n}\\nlet getData1 = (themeType, run) => {\\n    p = \\\"hiker://files/rules/Thomas/gcsp1999/theme/\\\" + themeType + \\\"/\\\";\\n    set = p + \\\"install.json\\\";\\n    if (!fileExist(set)) {\\n        setData(set, themeType)\\n    }\\n    _ = JSON.parse(readFile(set));\\n    if (run == \\\"rely\\\") return _;\\n    name = _.this;\\n    index = _.name.indexOf(name);\\n    author = _.data[index].author;\\n    img = _.data[index].icon;\\n    path = p + md5(name) + \\\".json\\\";\\n    let data = JSON.parse(readFile(path) || \\\"[]\\\");\\n    if (run) return data;\\n    if (data.length == 0) {\\n        data = [{\\n            open: true,\\n            page: true,\\n            type: \\\"avatar\\\",\\n            data: \\\"#主题切换#\\\"\\n        }]\\n    }\\n    return data.filter(_ => _.open && (!_.page || MY_PAGE == 1));\\n};\\nlet getData2 = (_, i) => {\\n    _.data = String(_.data || \\\"\\\");\\n    let t, __ = _.data.match(/__\\\\s*(\\\\{[\\\\S+\\\\s]*\\\\})/i);\\n    if (__) eval(\\\"__ = \\\" + __[1]);\\n    else __ = {};\\n    let getT1 = (t, _) => {\\n        t = __.Color ? Color(t, __.Color != true ? __.Color : \\\"\\\") : t;\\n        t = __.Strong ? Strong(t) : t;\\n        t = __.Rich ? Rich(t) : t;\\n        return t.replace(/\\\"/g, \\\"\\\\\\\\\\\\\\\"\\\").replace(/`/g, \\\"\\\\\\\\\\\\`\\\");\\n    }\\n    let getT2 = (t) => {\\n        t = __.Color ? `Color(${t}, \\\"${__.Color != true ? __.Color : \\\"\\\"}\\\")` : t\\n        t = __.Strong ? `Strong(${t})` : t;\\n        return __.Rich ? `Rich(${t})` : t;\\n    }\\n    switch (_.data.replace(/__[\\\\S\\\\s]*/gi, \\\"\\\")) {\\n        case '#主题切换#':\\n            return `d.push({\\n    title: ${getT2(`'${__.title||''}'||name`)},\\n    desc: author,\\n    img: \\\"${__.img||\\\"\\\"}\\\" || img,\\n    col_type: \\\"${_.type}\\\",\\n    url: $(\\\"#noLoading#\\\").lazyRule((_, index, set) => {\\n        const hikerPop = $.require(\\\"http://123.56.105.145/weisyr/js/hikerPop.js\\\");\\n        let iconList = [];\\n        if(/theme\\\\\\\\/home/i.test(set))\\n        iconList.push({\\n            \\\"title\\\": \\\"网站整合\\\",\\n            \\\"icon\\\": \\\"hiker://images/rule_type_all\\\"\\n        });\\n        _.data.map((_, i) => {\\n            iconList.push({\\n                title: _.title + '\\\\\\\\n\\\\\\\\n#i=' + i + '#',\\n                icon: _.icon\\n            });\\n        });\\n        let pop = hikerPop.selectCenterIcon({\\n            iconList,\\n            title: \\\"主题切换\\\",\\n            extraMenu: new hikerPop.IconExtraMenu(() => {\\n                pop.dismiss();\\n                return \\\"hiker://page/theme1#noHistory##noRecordHistory#?pageTitle=主题编辑&rule=歌词适配\\\";\\n            }),\\n            columns: 1,\\n            position: index,\\n            click(a) {\\n                let x5 = a == \\\"网站整合\\\" ? 1 : 0;\\n                putMyVar(\\\"x5_webview_single\\\", x5 + \\\"\\\");\\n                if (!x5) {\\n                    _.this = a.split(\\\"\\\\\\\\n\\\\\\\\n#i=\\\")[0];\\n                    saveFile(set, JSON.stringify(_, 0, 2));\\n                }\\n                refreshPage();\\n                return \\\"hiker://empty\\\";\\n            }\\n        });\\n        return \\\"hiker://empty\\\";\\n    }, _, _X5(index, set), set),\\n    extra: ${JSON.stringify(__.extra||{})}\\n});`;\\n            break;\\n\\n\\n\\n\\n\\n\\n\\n\\n        case '#置顶标题#':\\n            return `d.push({\\n    title: '$title',\\n    desc: Rich(Color('author：$author\\\\\\\\ntime：$time\\\\\\\\ntags：$tags', '#006699').small()),\\n    img: '$img',\\n    col_type: '${_.type}',\\n    url: $([{\\n        title: \\\"我的收藏\\\",\\n        icon: \\\"hiker://images/icon_download\\\"\\n    }, {\\n        title: \\\"历史浏览\\\",\\n        icon: \\\"hiker://images/icon_his\\\"\\n    }, {\\n        title: \\\"程序设置\\\",\\n        icon: \\\"hiker://images/rule_type_other\\\"\\n    }, {\\n        title: \\\"本地歌曲\\\",\\n        icon: \\\"hiker://images/rule_type_audio\\\"\\n    }, {\\n        title: \\\"解析管理\\\",\\n        icon: \\\"hiker://images/icon_xiutan\\\"\\n    }, {\\n        title: \\\"高级搜索\\\",\\n        icon: \\\"hiker://images/icon_find\\\"\\n    }, {\\n        \\\"title\\\": \\\"收藏歌单\\\",\\n        \\\"icon\\\": \\\"hiker://images/rule_type_comics\\\"\\n    }, {\\n        \\\"title\\\": \\\"复制链接\\\",\\n        \\\"icon\\\": \\\"hiker://images/rule_type_all\\\"\\n    }], 2, '选择页面').select((_, __) => {\\n        let u = 'hiker://empty';\\n        switch (input) {\\n            case '我的收藏':\\n                u = 'hiker://collection?rule=歌词适配';\\n                break;\\n            case '历史浏览':\\n                u = 'hiker://history?rule=歌词适配';\\n                break;\\n            case '本地歌曲':\\n                u = 'hiker://localMedia';\\n                break;\\n            case '程序设置':\\n                u = 'hiker://page/install#noHistory##noRecordHistory##noRefresh#?pageTitle=程序设置&rule=歌词适配';\\n                break;\\n            case '解析管理':\\n                u = 'hiker://page/ruleList#noHistory##noRecordHistory##noRefresh#?pageTitle=解析管理&rule=歌词适配';\\n                break;\\n            case '高级搜索':\\n                clearMyVar('s_platform');\\n                clearMyVar('s_t3');\\n                clearMyVar('s_t4');\\n                if (__.back) {\\n                    return back(false), u;\\n                }\\n                u = $.require('typeCache?rule=歌词适配').Lazy(\\\"search\\\");\\n                break;\\n            case '收藏歌单':\\n                return $.require('collection2?rule=歌词适配').logData(_, 1);\\n                break;\\n            case '复制链接':\\n                if (_.source.match(/qq|wy|kg|kw|mg|5s/) && (_.content != 3 || _.source == 'wy'))\\n                    return $.require('lib?rule=歌词适配').copyurl(_.source, _.content, _.sourceListId);\\n                else\\n                    u = \\\"toast://无法拼接在线链接~\\\";\\n                break;\\n        }\\n        return u;\\n    }, c, MY_PARAMS),\\n    extra: {\\n        gradient: true\\n    }\\n});`;\\n            break;\\n        case '#页面简介#':\\n            return `let desc1 = String(\\\"$desc\\\").trim()\\n        .replace(/\\\\\\\\n/g, \\\"<br>\\\").replace(/<(br|p)>\\\\\\\\s*/gi, \\\"<$1>　　\\\")\\n        .replace(/'/g, \\\"&apos;\\\").replace(/\\\"/g, \\\"\\\\\\\\&quot;\\\");\\nlet desc2 = desc1.replace(/<br>[\\\\\\\\s\\\\\\\\S]+/, \\\"\\\").slice(0, 24) + \\\"…\\\";\\nlet desc3 = $(\\\"#noLoading#\\\").lazyRule((dc, sdc, m) => {\\n    let show = getMyVar(m, \\\"0\\\");\\n    let title = findItem(m).title;\\n    let re = /(<\\\\\\\\/a>　　)[\\\\\\\\s\\\\\\\\S]*/i;\\n    if (show == \\\"1\\\") {\\n        updateItem(m, {\\n            title: title.replace(re, \\\"$1\\\" + sdc)\\n        });\\n        putMyVar(m, \\\"0\\\");\\n    } else {\\n        updateItem(m, {\\n            title: title.replace(re, \\\"$1\\\" + dc)\\n        });\\n        putMyVar(m, \\\"1\\\");\\n    }\\n    return \\\"hiker://empty\\\";\\n}, desc1, desc2, id + \\\":page:desc\\\");\\nd.push({\\n    url: \\\"hiker://empty\\\",\\n    col_type: '${_.type}',\\n    extra: {\\n        \\\"id\\\": id + \\\":page:desc\\\",\\n        \\\"lineSpacing\\\": 6,\\n        \\\"textSize\\\": 15\\n    },\\n    title: '<a href=\\\\\\\\'' + desc3 + '\\\\\\\\'>' +\\n        Strong(Color(\\\"❖ 简介<br>\\\", \\\"#098AC1\\\")) +\\n        '</a>　　' + desc2\\n}, {\\n    col_type: 'big_blank_block'\\n});`;\\n            break;\\n        case '#播放下载#':\\n            return `let is_down = getMyVar('search_down', '0') == '1';\\nd.push({\\n    title: ${getT2(\\\"is_down ? '下载歌曲' : '播放歌曲'\\\")},\\n    desc: '${__.desc||''}',\\n    img: '${__.img||''}' || 'http://123.56.105.145/tubiao/more/' + (is_down ? 22 : 40) + '.png',\\n    url: $(\\\"#noLoading#\\\").lazyRule((id) => {\\n        let is_down = getMyVar('search_down', '0') == '1';\\n        let title, img = 'http://123.56.105.145/tubiao/more/';\\n        if (is_down) {\\n            title = '${getT1('播放歌曲')}';\\n            img += '40';\\n        } else {\\n            title = '${getT1('下载歌曲')}';\\n            img += '22';\\n        }\\n        img += '.png';\\n        putMyVar('search_down', is_down ? '0' : '1');\\n        updateItem(id + ':page:down', {\\n            title,\\n            img\\n        });\\n        let list = findItemsByCls(id + ':addlist') || [];\\n        for (let it of list) {\\n            let extra_url = it.url;\\n            let url = it.extra.url;\\n            it.extra.url = extra_url;\\n            updateItem(it.extra.id, {\\n                extra: it.extra,\\n                url\\n            });\\n        }\\n        return \\\"hiker://empty\\\";\\n    }, id),\\n    col_type: \\\"${_.type}\\\",\\n    extra: Object.assign({\\n        id: id + ':page:down'\\n    }, ${JSON.stringify(__.extra||{})})\\n});`;\\n            break;\\n\\n\\n\\n        case '#分割#':\\n        case '#主要分类_标题#':\\n        case '#次要分类_标题#':\\n            return `d.push({\\n    title: \\\"${getT1(_.data.match(\\\"主要分类\\\")?tid:_.data.match(\\\"次要分类\\\")?trd:(__.title||_.name) )}\\\",\\n    desc: '${__.desc||\\\"\\\"}',\\n    img: '${__.img||\\\"\\\"}',\\n    col_type: '${_.type}',\\n    url: 'hiker://empty',\\n    extra: ${JSON.stringify(__.extra||{})}\\n});`\\n            break;\\n        case '#搜索框#':\\n            return `d.push({\\n    title: \\\"${getT1(__.title||'🔍')}\\\",\\n    desc: '${__.desc||'搜索关键词 / 平台链接'}',\\n    img: '${__.img||\\\"\\\"}',\\n    url: $.toString((s_platform) => {\\n        if (input.trim()) {\\n            putMyVar('s_platform', s_platform);\\n            putMyVar('s_t2', input);\\n        } else {\\n            clearMyVar('s_platform');\\n        }\\n        clearMyVar('s_t3');\\n        clearMyVar('s_t4');\\n        clearMyVar('search_page');\\n        return $.require('typeCache?rule=歌词适配').Lazy(\\\"search\\\");\\n    }, platform),\\n    col_type: \\\"input\\\",\\n    extra: Object.assign({\\n        id: id + \\\":search1\\\",\\n        pageTitle: \\\"高级搜索\\\",\\n        defaultValue: getMyVar(\\\"s_t2\\\"),\\n        onChange: \\\"putMyVar('s_t2', input)\\\"\\n    }, ${JSON.stringify(__.extra||{})})\\n});`\\n            break;\\n        case '#高级搜索#':\\n            return `d.push({\\n    title: \\\"${getT1(__.title||'高级搜索')}\\\",\\n    desc: \\\"${__.desc||\\\"\\\"}\\\",\\n    url: $('#noLoading#').lazyRule(() => {\\n        clearMyVar('search_page');\\n        clearMyVar('s_platform');\\n        clearMyVar('s_t3');\\n        clearMyVar('s_t4');\\n        return $.require('typeCache?rule=歌词适配').Lazy(\\\"search\\\");\\n    }),\\n    img: \\\"${__.img||'hiker://images/icon2'}\\\",\\n    col_type: '${_.type}',\\n    extra: Object.assign({\\n        pageTitle: \\\"高级搜索\\\",\\n    }, ${JSON.stringify(__.extra||{})})\\n});`\\n            break;\\n        case '#切换接口_聚合#':\\n            return `d.push({\\n    title: \\\"${getT1(__.title||\\\"切换接口\\\")}\\\",\\n    desc: \\\"${__.desc||\\\"\\\"}\\\",\\n    url: $(platforms.slice(0, 8).map(title => {\\n        if (title == platform)\\n            title = Rich(Strong(Color(title)));\\n        return title;\\n    }), 2, '选择接口平台').select(() => {\\n        if (!input.match(/^‘‘’’|<strong>|<font>/i)) {\\n            putMyVar('platform', input);\\n            clearMyVar('home_page');\\n            clearMyVar('tid');\\n            clearMyVar('tii');\\n            refreshPage()\\n        }\\n        return 'hiker://empty';\\n    }),\\n    img: \\\"${__.img||''}\\\"||$.require('image?rule=歌词适配')(platform),\\n    col_type: '${_.type}',\\n    extra: ${JSON.stringify(__.extra||{})}\\n});`\\n            break;\\n        case '#切换接口_独立#':\\n            return `platforms.slice(0, 8).map((name, ii) => {\\n    d.push({\\n        title: platform == name ? ${getT2(\\\"name\\\")} : name,\\n        desc: \\\"${__.desc||\\\"\\\"}\\\",\\n        url: $('#noLoading#').lazyRule((tid) => {\\n            putMyVar('platform', tid);\\n            clearMyVar('home_page');\\n            clearMyVar('tid');\\n            clearMyVar('tii');\\n            refreshPage();\\n            return 'hiker://empty';\\n        }, name),\\n        img: \\\"${__.img||''}\\\"||$.require('image?rule=歌词适配')(platform),\\n        col_type: '${_.type}',\\n        extra: ${JSON.stringify(__.extra||{})}\\n    });\\n});`;\\n            break;\\n        case '#主要分类_聚合#':\\n            return `d.push({\\n    title: \\\"${getT1(__.title||\\\"大类切换\\\")}\\\",\\n    desc: \\\"${__.desc||\\\"\\\"}\\\",\\n    url: $(Object.keys(iTag).map(title => {\\n        if (title == tid)\\n            title = Rich(Strong(Color(title)));\\n        return title\\n    }), 2, '主要分类选择').select(() => {\\n        clearMyVar('home_page');\\n            putMyVar('tid', input);\\n            clearMyVar('tii');\\n            refreshPage();\\n        return 'hiker://empty';\\n    }),\\n    img: \\\"${__.img||''}\\\"||$.require('image?rule=歌词适配')(platform),\\n    col_type: '${_.type}',\\n    extra: ${JSON.stringify(__.extra||{})}\\n});`;\\n            break;\\n        case '#主要分类_独立#':\\n            return `Object.keys(iTag).map((name, ii) => {\\n    d.push({\\n        title: tid == name ? ${getT2(\\\"name\\\")} : name,\\n        url: $('#noLoading#').lazyRule((tid) => {\\n            clearMyVar('home_page');\\n            putMyVar('tid', tid);\\n            clearMyVar('tii');\\n            refreshPage();\\n            return 'hiker://empty';\\n        }, name),\\n        col_type: '${_.type}',\\n        desc: \\\"${__.desc||\\\"\\\"}\\\",\\n        img: \\\"${__.img||''}\\\",\\n        extra: ${JSON.stringify(__.extra||{})}\\n    });\\n});`;\\n            break;\\n        case '#次要分类_聚合#':\\n            return `d.push({\\n    title: \\\"${getT1(__.title||\\\"小类切换\\\")}\\\",\\n    desc: \\\"${__.desc||\\\"\\\"}\\\",\\n    url: $(trr.map((title,ii) => {\\n        if (ii == tii)\\n            title = Rich(Strong(Color(title)));\\n        return title\\n    }), 2, '次要分类选择').select((trr) => {\\n        let tii = trr.indexOf(input);\\n        if(tii!=-1){\\n        clearMyVar('home_page');\\n            putMyVar('tii', tii);\\n            refreshPage(false);\\n            }\\n        return 'hiker://empty';\\n    },trr),\\n    img: \\\"${__.img||''}\\\"||$.require('image?rule=歌词适配')(platform),\\n    col_type: '${_.type}',\\n    extra: ${JSON.stringify(__.extra||{})}\\n});`;\\n            break;\\n        case '#次要分类_独立#':\\n            return `trr.map((name, ii) => {\\n    d.push({\\n        title: tii == ii ? ${getT2(\\\"name\\\")} : name,\\n        url: $('#noLoading#').lazyRule((tii) => {\\n            clearMyVar('home_page');\\n            putMyVar('tii', tii);\\n            refreshPage(false);\\n            return 'hiker://empty';\\n        }, ii),\\n        img: \\\"${__.img||''}\\\"||$.require('image?rule=歌词适配')(platform),\\n    col_type: '${_.type}',\\n    desc: \\\"${__.desc||\\\"\\\"}\\\",\\n    extra: ${JSON.stringify(__.extra||{})}\\n    });\\n});`\\n            break;\\n        case '#分类数据#':\\n            return `if (!Array.isArray(uri)) {\\n    if (MY_PAGE == 1 || getMyVar('home_page', '0') == '0') {\\n        let pageSize = platform == \\\"my\\\" ? 90 : (platform == \\\"5s\\\" ? 16 : 30);\\n        let total = $.require(platform + \\\"?rule=歌词适配\\\").lazy(1, {sourceListId:uri}, \\\"${_.type}\\\");\\n        if (total < MY_PAGE * pageSize) {\\n            putMyVar('home_page', '1');\\n            d.push({\\n                title: \\\"““””\\\" + '我是有底线的'.fontcolor('Gray').small(),\\n                url: 'hiker://empty',\\n                col_type: 'text_center_1',\\n                extra: {\\n                    lineVisible: false\\n                }\\n            });\\n        } else {\\n            clearMyVar('home_page');\\n        }\\n    }\\n} else d = d.concat(uri);`\\n            break;\\n\\n        case '#页面数据#':\\n            _shuju = i;\\n            return `if (MY_PAGE == 1 || getMyVar('home_page', '0') == '0') {\\n    let pageSize = 30;\\n    if ((a == \\\"wy\\\" && b != \\\"5\\\") || (a == \\\"5s\\\" && b == \\\"2\\\")) {\\n        pageSize = 9999;\\n    } else if (a == \\\"my\\\") {\\n        pageSize = 90;\\n    } else if (a == \\\"lanzou\\\") {\\n        pageSize = 50;\\n    }\\n    ___ = $.require(a + \\\"?rule=歌词适配\\\").lazy(b, c, false, ${JSON.stringify({\\n        title: __.title,\\n        desc: __.desc,\\n        col_type: _.type\\n      })});\\n    total = ___.total;\\n    if (total < MY_PAGE * pageSize) {\\n        putMyVar('home_page', '1');\\n        d.push({\\n            title: \\\"““””\\\" + '我是有底线的'.fontcolor('Gray').small(),\\n            url: 'hiker://empty',\\n            col_type: 'text_center_1',\\n            extra: {\\n                lineVisible: false\\n            }\\n        });\\n    } else {\\n        clearMyVar('home_page');\\n    }\\n}`\\n            break;\\n    }\\n    return _.data.replace(/\\\\$type/gi, _.type).replace(/\\\\$name/gi, _.name);\\n}\\n$.exports = {\\n    setData,\\n    getData1,\\n    getData2,\\n    lazy: function(a, b, c) {\\n        eval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配', {})).rule);\\n        if (MY_PAGE == 1) d = [], Loading();\\n        let ___, total, data;\\n        themeType = \\\"page\\\";\\n        _shuju = false;\\n        d = [];\\n        data = getData1(themeType).map((_, i) => getData2(_, i));\\n        if (_shuju !== false) {\\n            eval(String(data[_shuju]));\\n            data.splice(_shuju, 1);\\n            _shuju = d;\\n            d = [];\\n        }\\n        data = String(data.join(\\\"\\\\n\\\"));\\n        if (Array.isArray(_shuju)) {\\n            eval(Rich(data, ___));\\n            d = d.concat(_shuju);\\n        } else eval(data);\\n        MY_PAGE == 1 ? setPreResult(d) : setResult(d);\\n        deleteItemByCls('loading_gif');\\n    },\\n    clickJs: function(p1, p2, i) {\\n        return $([\\n            \\\"修改名称\\\", \\\"修改歌手\\\",\\n            \\\"修改专辑\\\", \\\"更改排序\\\",\\n            \\\"修改封面\\\", \\\"切换分组\\\",\\n            \\\"修改音质\\\", \\\"修改时长\\\",\\n        ], 2, '选择要变更的事件').select((p1, p2, i) => {\\n            let zy = JSON.parse(readFile(p1 + p2));\\n            let zu = zy.map((_, i) => _.name + '\\\\n' + i + _.source + _.songId);\\n            switch (input) {\\n                case '修改名称':\\n                case '修改封面':\\n                case '修改歌手':\\n                case '修改专辑':\\n                case '修改时长':\\n                case '修改音质':\\n                    [type, text] = {\\n                        \\\"修改名称\\\": ['name', '请输入新的名称'],\\n                        \\\"修改歌手\\\": ['singer', '请输入新的歌手'],\\n                        \\\"修改专辑\\\": ['albumName', '请输入新的专辑'],\\n                        \\\"修改封面\\\": ['picUrl', '请输入正确的封面地址'],\\n                        \\\"修改时长\\\": ['interval', '请输入新的时长'],\\n                        \\\"修改音质\\\": ['qualitys', '请输入新的音质'],\\n                    }[input];\\n                    let isArr = input == \\\"修改音质\\\";\\n                    return $(isArr ? JSON.stringify(zy[i][type], 0, 1) : zy[i][type], text).input((zy, i, type, path, isArr) => {\\n                        try {\\n                            if (type == 'name' && !input.trim()) return \\\"toast://资源名不建议为空\\\";\\n                            input = isArr ? JSON.parse(input) : input;\\n                            if (isArr && !Array.isArray(input)) {\\n                                return \\\"toast://字符串不是json数组\\\";\\n                            }\\n                            zy[i][type] = input\\n                            saveFile(path, JSON.stringify(zy, 0, 1));\\n                            refreshPage(false);\\n                            return \\\"toast://修改参数成功\\\";\\n                        } catch (put_err) {\\n                            return \\\"toast://\\\" + (isArr ? \\\"不是正确的json字符串\\\" : \\\"未知错误\\\");\\n                        }\\n                    }, zy, i, type, p1 + p2, isArr);\\n                    break;\\n                case '更改排序':\\n                    let data1 = zy[i];\\n                    zy.splice(i, 1);\\n                    zu.splice(i, 1);\\n                    return $(zu.concat(\\\"最后面\\\"), 2, '请选择资源位置').select((path, zy, zu, data) => {\\n                        let i;\\n                        if (\\\"最后面\\\" == input) {\\n                            i = zu.length;\\n                        } else {\\n                            i = zu.indexOf(input);\\n                        }\\n                        zy.splice(i, 0, data);\\n                        saveFile(path, JSON.stringify(zy, 0, 1));\\n                        refreshPage(false);\\n                        return \\\"toast://更改排序成功\\\";\\n                    }, p1 + p2, zy, zu, data1);\\n                    break;\\n\\n                case '切换分组':\\n                    let data2 = zy[i];\\n                    zu = JSON.parse(readFile(p1 + \\\"details.json\\\"))\\n                        .map(_ => _.name + '\\\\n' + _.source + '_' + _.sourceListId);\\n                    zy.splice(i, 1);\\n                    return $(zu.concat('新组'), 2, '请选择资源位置').select((zu, zy1, p1, p2, data) => {\\n                        if ('新组' == input) {\\n                            return $(\\\"\\\", \\\"请输入新组名称\\\").input((zy1, p1, p2, data) => {\\n                                if (!input.trim()) return \\\"toast://组名不能为空\\\";\\n                                let t = new Date().getTime();\\n                                let _ = {\\n                                    name: input,\\n                                    source: \\\"userlist\\\",\\n                                    sourceListId: t,\\n                                    locationUpdateTime: t,\\n                                    picUrl: \\\"\\\",\\n                                    content: \\\"2\\\"\\n                                }\\n                                zy = JSON.parse(readFile(p1 + \\\"details.json\\\"));\\n                                zu = zy.map(_ => _.name + '\\\\n' + _.source + '_' + _.sourceListId).concat(\\\"最后面\\\");\\n                                return $(zu, 2, '请选择新组位置').select((zy1, zy, zu, p1, p2, _, data) => {\\n                                    let i = zu.indexOf(input);\\n                                    zy.splice(i, 0, _);\\n                                    saveFile(p1 + p2, JSON.stringify(zy1, 0, 1));\\n                                    saveFile(p1 + \\\"details.json\\\", JSON.stringify(zy, 0, 1));\\n                                    saveFile(p1 + _.source + '_' + _.sourceListId + '.json', JSON.stringify([data], 0, 1));\\n                                    refreshPage(false);\\n                                    return \\\"toast://分组切换成功\\\";\\n                                }, zy1, zy, zu, p1, p2, _, data);\\n                            }, zy1, p1, p2, data);\\n                        }\\n                        let i = zu.indexOf(input);\\n                        let p3 = zu[i].replace(/^[\\\\S\\\\s]*\\\\n/i, \\\"\\\") + \\\".json\\\";\\n                        zy = JSON.parse(readFile(p1 + p3));\\n                        zu = zy.map((_, i) => _.name + '\\\\n' + i + _.source + _.songId);\\n                        return $(zu.concat(\\\"最后面\\\"), 2, '请选择资源位置').select((p1, p2, p3, zy1, zy, zu, data) => {\\n                            let i;\\n                            if (\\\"最后面\\\" == input) {\\n                                i = zu.length;\\n                            } else {\\n                                i = zu.indexOf(input);\\n                            }\\n                            zy.splice(i, 0, data);\\n                            saveFile(p1 + p2, JSON.stringify(zy1, 0, 1));\\n                            saveFile(p1 + p3, JSON.stringify(zy, 0, 1));\\n                            refreshPage(false);\\n                            return \\\"toast://切换分组成功\\\";\\n                        }, p1, p2, p3, zy1, zy, zu, data);\\n                    }, zu, zy, p1, p2, data2);\\n                    break;\\n            }\\n        }, p1, p2, i);\\n    }\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"Ⓛ落雪歌单\",\"path\":\"GZIP\",\"rule\":\"js:\\nconst Byte = java.lang.Byte;\\nconst Base64 = java.util.Base64;\\nconst javaString = java.lang.String;\\nconst StringBuffer = java.lang.StringBuffer;\\nconst newInstance = java.lang.reflect.Array.newInstance;\\n\\nconst GZIPInputStream = java.util.zip.GZIPInputStream;\\nconst GZIPOutputStream = java.util.zip.GZIPOutputStream;\\nconst ByteArrayInputStream = java.io.ByteArrayInputStream;\\nconst ByteArrayOutputStream = java.io.ByteArrayOutputStream;\\n\\nfunction zip(path, text) {\\n    // gzip压缩\\n    let baseStr = new javaString(text);\\n    let baos = new ByteArrayOutputStream();\\n    let gzos = new GZIPOutputStream(baos);\\n    gzos.write(baseStr.getBytes(\\\"UTF-8\\\"));\\n    gzos.close(); // 关闭压缩流\\n    baos.close();\\n\\n    // 转换为Hex\\n    let data = baos.toByteArray();\\n    let strBuffer = new StringBuffer();\\n    for (let i = 0; i < data.length; i++) {\\n        strBuffer.append(javaString.format(\\\"%02x\\\", Byte(data[i])));\\n    }\\n\\n    // 保存到路劲\\n    writeHexFile(\\n        path,\\n        String(strBuffer.toString())\\n    );\\n    return true;\\n}\\n\\nfunction unzip(path) {\\n    // 文件转换成byte\\n    let text = hexToBase64(fetch(path, {\\n        toHex: true\\n    }));\\n    let compressedData = Base64.getDecoder().decode(text);\\n\\n    // gzip解压\\n    let bais = new ByteArrayInputStream(compressedData);\\n    let baos = new ByteArrayOutputStream();\\n    let buffer = new newInstance(Byte.TYPE, 1024);\\n    let gis = new GZIPInputStream(bais);\\n    let len;\\n    while ((len = gis.read(buffer)) != -1) {\\n        baos.write(buffer, 0, len);\\n    }\\n    gis.close();\\n    bais.close();\\n    baos.close();\\n\\n    // 返回字符串\\n    let decompressedString = new javaString(baos.toByteArray(), \\\"UTF-8\\\");\\n    return String(decompressedString);\\n}\\n\\n$.exports = {\\n    zip,\\n    unzip\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"设置函数\",\"path\":\"typeCache\",\"rule\":\"eval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配', {})).rule);\\nlet d = [];\\n\\nfunction line(c, i, t) {\\n    d.push({\\n        col_type: c || 'line_blank',\\n        title: t ? Strong(t).small() : '',\\n        img: $.require('image?rule=歌词适配')(i),\\n        url: 'hiker://empty'\\n    });\\n}\\n\\nfunction getCache(_run, _data) {\\n    let cachePath = \\\"hiker://files/rules/Thomas/gcsp1999/typeCache.json\\\";\\n    if (_run) return cachePath;\\n    try {\\n        if (typeof _data === 'object') {\\n            throw new Error('_data is object');\\n        }\\n        return JSON.parse(readFile(cachePath));\\n    } catch (e) { // !fileExist(cachePath)\\n        _data = _data || {\\n            search: {\\n                Refresh: \\\"\\\",\\n                Theme_i: \\\"\\\",\\n                Params_: \\\"p=fypage&\\\"\\n            },\\n            collection: {\\n                Refresh: \\\"\\\",\\n                Theme_i: \\\"\\\",\\n                Params_: \\\"\\\"\\n            },\\n            home: {\\n                Refresh: \\\"\\\",\\n                Theme_i: \\\"\\\",\\n                Params_: \\\"p=fypage&\\\"\\n            },\\n            songinfo: {\\n                isCache: true,\\n                preType: \\\"\\\",\\n                noCheck: \\\"\\\",\\n                ptProxy: 1, // 平台解析\\n                qtProxy: 2, // 扩展解析\\n                Play_mv: 3, // mv解析\\n                Quality: \\\"0\\\", // 播放音质\\n                _Ignore: true,\\n                danmuLrc: false,\\n            }\\n        };\\n        saveFile(cachePath, JSON.stringify(_data));\\n        return _data;\\n    }\\n}\\n\\nfunction setCache(_type, _key, _value) {\\n    let cacheInfo = getCache();\\n\\n    if (_value !== undefined)\\n        cacheInfo[_type][_key] = _value;\\n    else if (typeof _key === 'object')\\n        cacheInfo[_type] = _key;\\n    else\\n        return false;\\n\\n    getCache(false, cacheInfo);\\n    return (_value !== undefined ? refreshPage(false) : back(false)), 'hiker://empty';\\n}\\n\\nfunction getPage1(install_i) {\\n    let s_i = getMyVar(\\\"install_i\\\", install_i || \\\"0\\\");\\n    line('pic_1_full', 'top');\\n    [\\n        [\\\"基础设置\\\", \\\"icon_ua\\\"],\\n        [\\\"音频播放\\\", \\\"icon_xiutan\\\"],\\n        [\\\"扩展推荐\\\", \\\"icon_offline\\\"]\\n    ].map(([title, img], i) => {\\n        d.push({\\n            title: Rich(Strong(s_i == i ? Color(title) : title)),\\n            img: $.require('image?rule=歌词适配')(img),\\n            col_type: 'text_3',\\n            url: $('#noLoading#').lazyRule((i) => {\\n                putMyVar('install_i', i);\\n                refreshPage(false);\\n                return 'hiker://empty';\\n            }, String(i))\\n        });\\n    });\\n    line();\\n    if (s_i == \\\"0\\\") {\\n        line('avatar', 'menu_now2', '弹窗提示');\\n        let uN = getItem('no_update', '0') == '1';\\n        d.push({\\n            title: '<b>不再检测更新</b>',\\n            col_type: 'text_icon',\\n            url: $('#noLoading#').lazyRule((u0) => {\\n                setItem('no_update', u0);\\n                refreshPage(false);\\n                return 'hiker://empty';\\n            }, uN ? '0' : '1'),\\n            img: 'http://123.56.105.145/tubiao/messy/' + (uN ? 55 : 63) + '.svg'\\n        });\\n        let u0 = getItem('update0', '1') == '1';\\n        d.push({\\n            title: '<b>弹窗提示更新</b>',\\n            col_type: 'text_icon',\\n            url: $('#noLoading#').lazyRule((u0) => {\\n                setItem('update0', u0);\\n                refreshPage(false);\\n                return 'hiker://empty';\\n            }, u0 ? '0' : '1'),\\n            img: 'http://123.56.105.145/tubiao/messy/' + (u0 ? 55 : 63) + '.svg'\\n        });\\n        let u1 = getItem('update1', '1') == '1';\\n        d.push({\\n            title: '<b>kg概念版签到</b>',\\n            col_type: 'text_icon',\\n            url: $('#noLoading#').lazyRule((u1) => {\\n                setItem('update1', u1);\\n                refreshPage(false);\\n                return 'hiker://empty';\\n            }, u1 ? '0' : '1'),\\n            img: 'http://123.56.105.145/tubiao/messy/' + (u1 ? 55 : 63) + '.svg'\\n        });\\n\\n\\n        line();\\n        line('avatar', 'menu_book2', '页面标识');\\n        [\\n            [\\\"TGX收藏\\\", \\\"collection\\\"],\\n            [\\\"高级搜索\\\", \\\"search\\\"],\\n            [\\\"程序首页\\\", \\\"home\\\"]\\n        ].map([a, b] => {\\n            d.push({\\n                title: '<b>' + a + '</b>',\\n                col_type: 'text_icon',\\n                url: $('hiker://empty#noHistory##noRecordHistory##noRefresh#').rule((_type) => {\\n                    return $.require('typeCache?rule=歌词适配').getPage2(_type);\\n                }, b),\\n                img: 'http://123.56.105.145/tubiao/system/10.png'\\n            });\\n        });\\n\\n\\n        line();\\n        line('avatar', 'menu_rules2', '默认主页');\\n        let platform = getItem('platform', 'kw');\\n        platforms.slice(0, 8).map(title => {\\n            d.push({\\n                title: title == platform ? Rich(Strong(Color(title))) : title,\\n                col_type: 'text_4',\\n                url: $('#noLoading#').lazyRule((title) => {\\n                    setItem('platform', title);\\n                    refreshPage(false);\\n                    return 'hiker://empty';\\n                }, title)\\n            });\\n        });\\n        line(\\\"big_blank_block\\\");\\n\\n\\n        line();\\n        line('avatar', 'menu_search2', '默认搜索');\\n        let s_platform = getItem('s_platform', 'kw');\\n        platforms.slice(1, 6).map(title => {\\n            d.push({\\n                title: title == s_platform ? Rich(Strong(Color(title))) : title,\\n                col_type: 'text_5',\\n                url: $('#noLoading#').lazyRule((title) => {\\n                    setItem('s_platform', title);\\n                    refreshPage(false);\\n                    return 'hiker://empty';\\n                }, title)\\n            });\\n        });\\n        line(\\\"big_blank_block\\\");\\n        line(\\\"blank_block\\\");\\n    } else if (s_i == \\\"1\\\") {\\n        let songinfo = getCache()[\\\"songinfo\\\"];\\n        line('avatar', 'code', '基础设置');\\n        [\\n            [\\\"音频直链缓存\\\", \\\"isCache\\\", songinfo.isCache, false, true],\\n            [\\\"获取链接信息\\\", \\\"noCheck\\\", songinfo.noCheck == \\\"\\\", \\\"#checkMetadata=false#\\\", \\\"\\\"],\\n            [\\\"强制识别音频\\\", \\\"_Ignore\\\", songinfo._Ignore, false, true],\\n            [\\\"开启弹幕歌词\\\", \\\"danmuLrc\\\", songinfo.danmuLrc, false, true],\\n        ].map([a, b, c, e, f] => {\\n            d.push({\\n                title: Strong(a),\\n                img: 'http://123.56.105.145/tubiao/messy/' + (c ? 55 : 63) + '.svg',\\n                col_type: 'text_icon',\\n                url: $('#noLoading#').lazyRule((a, b, c) => {\\n                    return $.require('typeCache?rule=歌词适配').setCache(a, b, c);\\n                }, \\\"songinfo\\\", b, c ? e : f)\\n            });\\n        });\\n\\n\\n\\n        line();\\n        line('avatar', 'icon_ai_big', '解析设置');\\n        [\\n            [\\\"启用平台解析\\\", \\\"ptProxy\\\", \\\"qtProxy\\\", \\\"Play_mv\\\"],\\n            [\\\"启用扩展解析\\\", \\\"qtProxy\\\", \\\"ptProxy\\\", \\\"Play_mv\\\"],\\n            [\\\"启用视频解析\\\", \\\"Play_mv\\\", \\\"ptProxy\\\", \\\"qtProxy\\\"],\\n        ].map([e, a, b, c] => {\\n            let arr = ['messy/63.svg', 'system/30.png', 'system/32.png', 'system/31.png', ];\\n            let brr = [\\\"禁用解析\\\", \\\"优先使用\\\", \\\"其次调用\\\", \\\"最后选择\\\"]\\n            d.push({\\n                title: Strong(e),\\n                img: 'http://123.56.105.145/tubiao/' + arr[songinfo[a]],\\n                col_type: 'text_icon',\\n                url: $(brr, 1, '选择页面').select((arr, _, a, b, c) => {\\n                    let setCache = $.require('typeCache?rule=歌词适配').setCache;\\n                    let i = arr.indexOf(input);\\n                    let p = \\\"songinfo\\\";\\n                    let d = _[a]\\n                    setCache(p, a, i);\\n                    if (!i || d == i) {\\n\\n                    } else if (_[b] == i) {\\n                        setCache(p, b, d);\\n                    } else if (_[c] == i) {\\n                        setCache(p, c, d);\\n                    }\\n                    return 'hiker://empty';\\n                }, brr, songinfo, a, b, c),\\n            });\\n        });\\n\\n\\n\\n        line();\\n        line('avatar', 'backup', '预加载');\\n        [\\n            [\\\"软件默认\\\", \\\"\\\"],\\n            [\\\"强制模式\\\", \\\"#pre#\\\"],\\n            [\\\"无需加载\\\", \\\"#noPre#\\\"],\\n        ].map([title, i] => {\\n            d.push({\\n                title: Strong(title),\\n                img: 'http://123.56.105.145/tubiao/messy/' + (songinfo.preType == i ? 55 : 63) + '.svg',\\n                col_type: 'text_icon',\\n                url: $('#noLoading#').lazyRule((a, b, c) => {\\n                    return $.require('typeCache?rule=歌词适配').setCache(a, b, c);\\n                }, \\\"songinfo\\\", \\\"preType\\\", i)\\n            });\\n        });\\n\\n\\n        line();\\n        line('avatar', 'icon_menu6', '播放音质');\\n        ts.slice(1, 5).map((title, i) => {\\n            d.push({\\n                title: Strong(title).replace(/【|】/g, \\\"\\\"),\\n                img: 'http://123.56.105.145/tubiao/messy/' + (songinfo.Quality == i ? 55 : 63) + '.svg',\\n                col_type: 'text_icon',\\n                url: $('#noLoading#').lazyRule((a, b, c) => {\\n                    return $.require('typeCache?rule=歌词适配').setCache(a, b, c);\\n                }, \\\"songinfo\\\", \\\"Quality\\\", String(i))\\n            });\\n        });\\n    } else {\\n        line('avatar', 'rule_type_audio', '精选站点');\\n        d.push({\\n            title: '<b>slider.kz</b>',\\n            col_type: 'text_icon',\\n            url: 'https://hayqbhgr.slider.kz/#noHistory#',\\n            img: 'http://123.56.105.145/tubiao/system/10.png'\\n        });\\n        d.push({\\n            title: '<b>lucida.to</b>',\\n            col_type: 'text_icon',\\n            url: 'https://lucida.to/#noHistory#',\\n            img: 'http://123.56.105.145/tubiao/system/10.png'\\n        });\\n        d.push({\\n            title: '<b>柠乐</b>',\\n            col_type: 'text_icon',\\n            url: 'http://43.140.245.243:1080/music/#noHistory#',\\n            img: 'http://123.56.105.145/tubiao/system/10.png'\\n        });\\n        d.push({\\n            title: '<b>轻听</b>',\\n            col_type: 'text_icon',\\n            url: 'https://music.gdstudio.xyz/#noHistory#',\\n            img: 'http://123.56.105.145/tubiao/system/10.png'\\n        });\\n        d.push({\\n            title: '<b>赫歌</b>',\\n            col_type: 'text_icon',\\n            url: 'https://music.wjhe.top/#noHistory#',\\n            img: 'http://123.56.105.145/tubiao/system/10.png'\\n        });\\n        d.push({\\n            title: '<b>种子</b>',\\n            col_type: 'text_icon',\\n            url: 'https://zz123.com/#noHistory#',\\n            img: 'http://123.56.105.145/tubiao/system/10.png'\\n        });\\n        d.push({\\n            title: '<b>六音</b>',\\n            col_type: 'text_icon',\\n            url: 'https://flac.one/#noHistory#',\\n            img: 'http://123.56.105.145/tubiao/system/10.png'\\n        });\\n        d.push({\\n            title: '<b>果核</b>',\\n            col_type: 'text_icon',\\n            url: 'https://ghyinyue.com/#noHistory#',\\n            img: 'http://123.56.105.145/tubiao/system/10.png'\\n        });\\n\\n\\n\\n        line();\\n        d.push({\\n            title: '<b>LX Music</b>'.small(),\\n            url: 'https://docs.lxmusic.top/#noHistory#',\\n            img: 'https://docs.lxmusic.top/logo.svg',\\n            col_type: 'avatar',\\n        });\\n        d.push({\\n            title: '<b>六音</b>',\\n            col_type: 'text_icon',\\n            url: $('#noLoading#').lazyRule((url) => {\\n                return $(\\\"点击确定跳转网址\\\\n\\\" + url).confirm((url) => {\\n                    return url;\\n                }, url);\\n            }, \\\"https://www.sixyin.com/7645.html\\\"),\\n            img: 'http://123.56.105.145/tubiao/system/10.png'\\n        });\\n        d.push({\\n            title: '<b>梓澄</b>',\\n            col_type: 'text_icon',\\n            url: $('#noLoading#').lazyRule((url) => {\\n                return $(\\\"点击确定跳转网址\\\\n提取码：lxmusic\\\").confirm((url) => {\\n                    return url;\\n                }, url);\\n            }, \\\"https://wwp.lanzouq.com/b02fq9w8d\\\"),\\n            img: 'http://123.56.105.145/tubiao/system/10.png'\\n        });\\n        d.push({\\n            title: '<b>Lerd</b>',\\n            col_type: 'text_icon',\\n            url: $('#noLoading#').lazyRule((url) => {\\n                return $(\\\"点击确定复制链接\\\\n\\\" + url).confirm((url) => {\\n                    return \\\"copy://\\\" + url;\\n                }, url);\\n            }, \\\"https://cdn-img.gitcode.com/be/ab/b8e415a889b23f9b40b1b0b73952ef90668abdadad03a46374722711e8e193b3.js\\\"),\\n            img: 'http://123.56.105.145/tubiao/system/10.png'\\n        });\\n        d.push({\\n            title: '<b>iKun</b>',\\n            col_type: 'text_icon',\\n            url: $('#noLoading#').lazyRule((url) => {\\n                return $(\\\"点击确定复制链接\\\\n\\\" + url).confirm((url) => {\\n                    return \\\"copy://\\\" + url;\\n                }, url);\\n            }, \\\"https://lxmusic.ikunshare.com/script\\\"),\\n            img: 'http://123.56.105.145/tubiao/system/10.png'\\n        });\\n        d.push({\\n            title: '<b>挥杯劝</b>',\\n            col_type: 'text_icon',\\n            url: $('#noLoading#').lazyRule((url) => {\\n                return $(\\\"点击确定复制链接\\\\n\\\" + url).confirm((url) => {\\n                    return \\\"copy://\\\" + url;\\n                }, url);\\n            }, \\\"https://raw.niuma666bet.buzz/Huibq/keep-alive/master/render_api.js\\\"),\\n            img: 'http://123.56.105.145/tubiao/system/10.png'\\n        });\\n\\n\\n\\n        line();\\n        d.push({\\n            title: '<b>MusicFree</b>'.small(),\\n            url: 'https://gitee.com/maotoumao/MusicFree#noHistory#',\\n            img: 'https://i1.hdslb.com/bfs/face/ec98b6458cdc8fdde2a72f705151b0e81cadff71.jpg',\\n            col_type: 'avatar',\\n        });\\n        d.push({\\n            title: '<b>官方</b>',\\n            col_type: 'text_icon',\\n            url: $('#noLoading#').lazyRule((url) => {\\n                return $(\\\"点击确定复制链接\\\\n\\\" + url).confirm((url) => {\\n                    return \\\"copy://\\\" + url;\\n                }, url);\\n            }, \\\"https://gitee.com/maotoumao/MusicFreePlugins/raw/master/plugins.json\\\"),\\n            img: 'http://123.56.105.145/tubiao/system/10.png'\\n        });\\n        d.push({\\n            title: '<b>作者</b>',\\n            col_type: 'text_icon',\\n            url: $('#noLoading#').lazyRule((url) => {\\n                return $(\\\"点击确定复制链接\\\\n\\\" + url).confirm((url) => {\\n                    return \\\"copy://\\\" + url;\\n                }, url);\\n            }, \\\"https://gitee.com/ThomasYou/musicfree/raw/master/dist/plugins.json\\\"),\\n            img: 'http://123.56.105.145/tubiao/system/10.png'\\n        });\\n        d.push({\\n            title: '<b>速悦</b>',\\n            col_type: 'text_icon',\\n            url: $('#noLoading#').lazyRule((url) => {\\n                return $(\\\"点击确定复制链接\\\\n\\\" + url).confirm((url) => {\\n                    return \\\"copy://\\\" + url;\\n                }, url);\\n            }, \\\"http://adad23u.appinstall.life/dist/_plugins/plugins.json\\\"),\\n            img: 'http://123.56.105.145/tubiao/system/10.png'\\n        });\\n        d.push({\\n            title: '<b>iKun</b>',\\n            col_type: 'text_icon',\\n            url: $('#noLoading#').lazyRule((url) => {\\n                return $(\\\"点击确定复制链接\\\\n\\\" + url).confirm((url) => {\\n                    return \\\"copy://\\\" + url;\\n                }, url);\\n            }, \\\"https://mf.ikunshare.com/plugins.json\\\" /*\\\"https://gitee.com/ikun0014/musicfree/raw/master/plugins.json\\\"*/ ),\\n            img: 'http://123.56.105.145/tubiao/system/10.png'\\n        });\\n        d.push({\\n            title: '<b>挥杯劝</b>',\\n            col_type: 'text_icon',\\n            url: $('#noLoading#').lazyRule((url) => {\\n                return $(\\\"点击确定复制链接\\\\n\\\" + url).confirm((url) => {\\n                    return \\\"copy://\\\" + url;\\n                }, url);\\n            }, \\\"https://raw.niuma666bet.buzz/Huibq/keep-alive/master/Music_Free/myPlugins.json\\\"),\\n            img: 'http://123.56.105.145/tubiao/system/10.png'\\n        });\\n    }\\n    line();\\n    setResult(d);\\n}\\n\\nfunction getPage2(_type) {\\n    let _ = getCache()[_type];\\n    let _R = _.Refresh != \\\"\\\";\\n    line();\\n    line('avatar', 'code', '页面');\\n    d.push({\\n        title: Strong(\\\"禁止刷新\\\"),\\n        col_type: 'text_icon',\\n        url: $('#noLoading#').lazyRule((a, b, c) => {\\n            return $.require('typeCache?rule=歌词适配').setCache(a, b, c);\\n        }, _type, 'Refresh', _R ? '' : '#noRefresh#'),\\n        img: 'http://123.56.105.145/tubiao/messy/' + (_R ? 55 : 63) + '.svg'\\n    });\\n\\n\\n    line();\\n    line('avatar', 'backup', '样式');\\n    [\\n        [\\\"程序默认\\\", \\\"\\\"],\\n        [\\\"全屏显示\\\", \\\"#fullTheme#\\\"],\\n        [\\\"沉浸体验\\\", \\\"#immersiveTheme#\\\"],\\n        [\\\"游戏模式\\\", \\\"#gameTheme#\\\"],\\n    ].map([a, b] => {\\n        d.push({\\n            title: Strong(a),\\n            col_type: 'text_icon',\\n            url: $('#noLoading#').lazyRule((a, b, c) => {\\n                return $.require('typeCache?rule=歌词适配').setCache(a, b, c);\\n            }, _type, 'Theme_i', b),\\n            img: 'http://123.56.105.145/tubiao/messy/' + (_.Theme_i == b ? 55 : 63) + '.svg'\\n        });\\n    });\\n    line();\\n\\n\\n    d.push({\\n        col_type: 'text_center_1',\\n        title: Rich(Strong(Color(\\\"退出\\\"))),\\n        url: $('#noLoading#').lazyRule(() => {\\n            return back(false), 'hiker://empty';\\n        })\\n    });\\n    setResult(d);\\n}\\n$.exports = {\\n    Lazy: function(platform) {\\n        let _ = getCache()[platform];\\n        let u = \\\"hiker://page/\\\" + platform + \\\"#noHistory##noRecordHistory#\\\";\\n        let t = \\\"pageTitle=\\\" + {\\n            collection: \\\"TGX收藏\\\",\\n            search: \\\"高级搜索\\\",\\n            home: \\\"歌词适配\\\"\\n        }[platform];\\n        return u + _.Refresh + _.Theme_i + \\\"?\\\" + _.Params_ + t + \\\"&rule=歌词适配\\\";\\n    },\\n    getCache,\\n    setCache,\\n    getPage1,\\n    getPage2\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"收藏函数\",\"path\":\"collection2\",\"rule\":\"function getData(isPageHome) {\\n    let data, path, set, zu, t;\\n    path = \\\"hiker://files/rules/Thomas/gcsp1999/collection/\\\";\\n    set = path + \\\"details.json\\\";\\n    t = new Date().getTime();\\n\\n\\n    // 歌单信息备份\\n    if (isPageHome == \\\"bak\\\") {\\n        if (getMyVar('file_bak_date', '0') == '0') {\\n            try {\\n                saveFile(set + \\\".bak\\\", readFile(set));\\n                putMyVar('file_bak_date', '1');\\n                log('[歌单信息备份] 成功');\\n            } catch (bak_err) {\\n                log('[歌单信息备份] 失败，原因：' + bak_err);\\n            }\\n        }\\n        return t;\\n    }\\n\\n\\n    try { // !fileExist(set) #可能会出错，使用try函数\\n        data = JSON.parse(readFile(set));\\n        if (isPageHome && data.length === 0) {\\n            deleteFile(set);\\n            return getData();\\n        }\\n    } catch (no_fileExist) {\\n        data = function(t) {\\n            let _ = {\\n                name: \\\"我的收藏\\\",\\n                source: \\\"userlist\\\",\\n                sourceListId: t,\\n                locationUpdateTime: t,\\n                picUrl: JSON.parse(request(\\\"hiker://home@歌词适配\\\")).icon,\\n                content: \\\"2\\\",\\n                // author: \\\"佚名\\\",\\n                // desc: \\\"值得收藏的歌曲\\\",\\n                // tags: \\\"好听\\\"\\n            }\\n            saveFile(set, JSON.stringify([_]));\\n            saveFile(path + _.source + '_' + _.sourceListId + \\\".json\\\", \\\"[]\\\");\\n            return [_];\\n        }(t);\\n    }\\n    zu = data.map(_ => Object.assign({\\n        icon: _.picUrl,\\n        id: _.source + '_' + _.sourceListId,\\n        title: _.name + '\\\\n' + _.source + '_' + _.sourceListId\\n    }, _));\\n    return [path, set, data, zu];\\n}\\n\\nfunction yunData(newData) {\\n    a = newData.source;\\n    b = newData.content;\\n    c = newData;\\n    d = [];\\n    e = 0;\\n    MY_PAGE = 1;\\n    MY_PARAMS = {\\n        img: newData.picUrl\\n    };\\n    pageSize = 30;\\n    if (a == \\\"wy\\\" || (b == \\\"2\\\" &&  a == \\\"5s\\\")) {\\n        pageSize = 9999;\\n    } else if (a == \\\"my\\\") {\\n        pageSize = 90;\\n    } else if (a == \\\"lanzou\\\") {\\n        pageSize = 50;\\n    }\\n    do {\\n        try {\\n            showLoading('获取页面数据__' + MY_PAGE);\\n            let total = $.require(a + \\\"?rule=歌词适配\\\").lazy(b, c, false).total;\\n            if (total < MY_PAGE * pageSize) {\\n                break;\\n            }\\n        } catch (err) {\\n            // error(err);\\n            if (e > 3) {\\n                break;\\n            } else {\\n                e++;\\n            }\\n        }\\n    } while (MY_PAGE++);\\n    hideLoading();\\n    return d.map(_ => {\\n        delete _.title;\\n        delete _.desc;\\n        delete _.url;\\n        delete _.img;\\n        delete _.pic_url;\\n        delete _.col_type;\\n        delete _.extra;\\n        return _;\\n    });\\n}\\n\\n$.exports = {\\n    getData,\\n    yunData,\\n    logData: function(newData, si, name) {\\n        if (newData.songId == \\\"undefined\\\")\\n            return \\\"toast://不支持收藏~\\\";\\n        let data, path, set, zu;\\n        [path, set, data, zu] = getData();\\n        return $(zu.concat({\\n            title: si ? \\\"最后面\\\" : \\\"新分组\\\"\\n        }), 2, si ? \\\"选择位置\\\" : \\\"选择分组\\\").select((data, zu, newData, si, set, path) => {\\n            if (input == \\\"新分组\\\") {\\n                const hikerPop = $.require(\\\"http://123.56.105.145/weisyr/js/hikerPop.js\\\");\\n                let pop = hikerPop.inputTwoRow({\\n                    titleHint: \\\"新组名称\\\",\\n                    titleDefault: \\\"\\\",\\n                    urlHint: \\\"新组封面\\\",\\n                    urlDefault: \\\"\\\",\\n                    noAutoSoft: true, //不自动打开输入法\\n                    title: \\\"新组信息\\\",\\n                    //hideCancel: true,\\n                    confirm(name, picUrl) {\\n                        if (!name.trim()) return \\\"toast://组名不能为空\\\";\\n                        let t = new Date().getTime();\\n                        let _ = {\\n                            name,\\n                            source: \\\"userlist\\\",\\n                            sourceListId: t,\\n                            locationUpdateTime: t,\\n                            picUrl,\\n                            content: \\\"2\\\"\\n                        }\\n                        return $(zu.concat({\\n                            title: \\\"最后面\\\"\\n                        }), 2, '请选择新组位置').select((set, path, data, zu, newData, _) => {\\n                            let i = zu.map(_ => _.title).indexOf(input);\\n                            if (i == -1) i = zu.length;\\n                            data.splice(i, 0, _);\\n                            saveFile(set, JSON.stringify(data, 0, 1));\\n                            saveFile(path + _.source + '_' + _.sourceListId + \\\".json\\\", JSON.stringify([newData], 0, 1));\\n                            return \\\"toast://新组创建成功\\\";\\n                        }, set, path, data, zu, newData, _);\\n                    },\\n                    cancel() {\\n                        return \\\"hiker://empty\\\";\\n                        // return \\\"toast://你取消了\\\";\\n                    }\\n                });\\n                return \\\"hiker://empty\\\";\\n            }\\n\\n            let i = zu.map(_ => _.title).indexOf(input);\\n            if (si) { // 歌单\\n                let d = [];\\n                let c = newData;\\n                if (c.source != \\\"userlist\\\" && c.sourceListId) {\\n                    d = $.require('collection2?rule=歌词适配').yunData(c);\\n                }\\n                newData.locationUpdateTime = new Date().getTime();\\n                if (i == -1) i = zu.length;\\n                data.splice(i, 0, newData);\\n                saveFile(set, JSON.stringify(data, 0, 1));\\n                saveFile(path + c.source + '_' + c.sourceListId + \\\".json\\\", JSON.stringify(d, 0, 1));\\n                return \\\"toast://歌单收藏成功\\\";\\n            } else { // 歌曲\\n                path += data[i].source + '_' + data[i].sourceListId + \\\".json\\\";\\n                zy = JSON.parse(readFile(path));\\n                zu = zy.map((_, i) => {\\n                    return _.name + '\\\\n' + i + _.source + _.songId;\\n                }).concat(\\\"最后面\\\");\\n                return $(zu, 2, \\\"选择位置\\\").select((path, zy, zu, newData) => {\\n                    let i = zu.indexOf(input);\\n                    zy.splice(i, 0, newData);\\n                    saveFile(path, JSON.stringify(zy, 0, 1));\\n                    return \\\"toast://歌曲收藏成功\\\";\\n                }, path, zy, zu, newData);\\n            }\\n        }, data, zu, newData, si, set, path);\\n    },\\n    setData: function(input, i) {\\n        let data, list, path, set, u = \\\"hiker://empty\\\";\\n        [path, set, data, list] = getData();\\n        switch (input) {\\n            case '删除分组':\\n                return $(\\\"确定删除分组 \\\" + data[i].name + \\\" 吗？\\\\n此操作不可逆，谨慎选择。\\\").confirm((path, set, data, i) => {\\n                    let _ = data[i];\\n                    data.splice(i, 1);\\n                    let l = data.length;\\n                    deleteFile(path + _.source + '_' + _.sourceListId + \\\".json\\\");\\n                    if (l != 0) {\\n                        if (i >= l) setItem(\\\"ci_1\\\", (l - 1) + \\\"\\\");\\n                        saveFile(set, JSON.stringify(data, 0, 1));\\n                    } else {\\n                        setItem(\\\"ci_1\\\", \\\"0\\\");\\n                        deleteFile(set);\\n                    }\\n                    refreshPage();\\n                    return \\\"hiker://empty\\\";\\n                }, path, set, data, i);\\n                break;\\n            case '分享分组':\\n                let Json = data[i];\\n                Json.list = JSON.parse(readFile(path + Json.source + '_' + Json.sourceListId + \\\".json\\\"));\\n                return $.require(\\\"jiexi?rule=歌词适配\\\").getShare(Json, false, Json.list.length, \\\"歌单\\\", Json.name, [\\\"复制链接\\\"]);\\n                break;\\n            case '新增分组':\\n                const hikerPop = $.require(\\\"http://123.56.105.145/weisyr/js/hikerPop.js\\\");\\n                hikerPop.inputTwoRow({\\n                    titleHint: \\\"新组名称\\\",\\n                    titleDefault: \\\"\\\",\\n                    urlHint: \\\"新组封面\\\",\\n                    urlDefault: \\\"\\\",\\n                    noAutoSoft: true, //不自动打开输入法\\n                    title: \\\"新组信息\\\",\\n                    //hideCancel: true,\\n                    confirm(name, picUrl) {\\n                        if (!name.trim()) return \\\"toast://组名不能为空\\\";\\n                        let t = new Date().getTime();\\n                        let _ = {\\n                            name,\\n                            source: \\\"userlist\\\",\\n                            sourceListId: t,\\n                            locationUpdateTime: t,\\n                            picUrl,\\n                            content: \\\"2\\\"\\n                        }\\n                        return $(list.concat({\\n                            title: \\\"最后面\\\"\\n                        }), 2, '请选择新组位置').select((set, path, data, zu, _) => {\\n                            let i = zu.map(_ => _.title).indexOf(input);\\n                            if (i == -1) i = zu.length;\\n                            data.splice(i, 0, _);\\n                            saveFile(set, JSON.stringify(data, 0, 1));\\n                            saveFile(path + _.source + '_' + _.sourceListId + \\\".json\\\", \\\"[]\\\");\\n                            refreshPage();\\n                            return \\\"toast://新组创建成功\\\";\\n                        }, set, path, data, list, _);\\n                    },\\n                    cancel() {\\n                        return \\\"hiker://empty\\\";\\n                        // return \\\"toast://你取消了\\\";\\n                    }\\n                });\\n                break;\\n            case '修改封面':\\n                return $(data[i].picUrl, \\\"填写正确的封面链接\\\").input((set, data, i) => {\\n                    data[i].picUrl = input;\\n                    saveFile(set, JSON.stringify(data, 0, 1));\\n                    refreshPage();\\n                    return \\\"toast://修改成功\\\";\\n                }, set, data, i);\\n                break;\\n            case '修改名称':\\n                return $(data[i].name, \\\"分组名称\\\").input((set, data, i) => {\\n                    data[i].name = input;\\n                    saveFile(set, JSON.stringify(data, 0, 1));\\n                    refreshPage();\\n                    return \\\"toast://修改成功\\\";\\n                }, set, data, i);\\n                break;\\n            case '合并分组':\\n                list.splice(i, 1);\\n                return $(list, 2, '合并分组到').select((path, set, data, list, i1) => {\\n                    let i2 = list.map(_ => _.title).indexOf(input);\\n                    let l2 = list[i2];\\n                    let l1 = data[i1];\\n                    delete l2.icon;\\n                    delete l2.id;\\n                    delete l2.title;\\n                    let p1 = path + l1.source + '_' + l1.sourceListId + '.json';\\n                    let p2 = path + l2.source + '_' + l2.sourceListId + '.json';\\n                    let a1 = JSON.parse(readFile(p1));\\n                    let a2 = JSON.parse(readFile(p2));\\n                    if (l1.source != \\\"userlist\\\" && l2.source == \\\"userlist\\\") {\\n                        l2.sourceListId = l1.sourceListId;\\n                        l2.source = l1.source;\\n                        deleteFile(p2);\\n                        path = p1;\\n                    } else {\\n                        deleteFile(p1);\\n                        path = p2;\\n                    }\\n                    data.splice(i1, 1);\\n                    data.splice(i2, 1, l2);\\n                    saveFile(set, JSON.stringify(data, 0, 1));\\n                    saveFile(path, JSON.stringify(a2.concat(a1), 0, 1));\\n                    refreshPage();\\n                    return \\\"toast://合并成功\\\";\\n                }, path, set, data, list, i);\\n                break;\\n            case '更改排序':\\n                list.splice(i, 1);\\n                return $(list.concat({\\n                    title: '最后面'\\n                }), 2, '分组移动到').select((set, data, list, i1) => {\\n                    let i2\\n                    if (input == '最后面') {\\n                        i2 = list.length;\\n                    } else {\\n                        i2 = list.map(_ => _.title).indexOf(input);\\n                    }\\n                    let i3 = data[i1];\\n                    data.splice(i1, 1);\\n                    data.splice(i2, 0, i3);\\n                    setItem(\\\"ci_1\\\", i2 + \\\"\\\");\\n                    saveFile(set, JSON.stringify(data, 0, 1));\\n                    refreshPage();\\n                    return \\\"toast://更改成功\\\";\\n                }, set, data, list, i);\\n                break;\\n            case '更新资源':\\n                if (data[i].source == \\\"userlist\\\")\\n                    return \\\"toast://自建分组无法更新\\\";\\n                return $(\\\"这将会把 \\\" + data[i].name + \\\" 内的歌曲替换成在线列表的歌曲，你确定要更新吗？\\\").confirm((path, newData) => {\\n                    let c = newData;\\n                    let d = $.require('collection2?rule=歌词适配').yunData(c);\\n                    saveFile(path + c.source + '_' + c.sourceListId + \\\".json\\\", JSON.stringify(d, 0, 1));\\n                    refreshPage();\\n                    return \\\"toast://歌单更新成功\\\";\\n                }, path, data[i]);\\n                break;\\n            case '二级页面':\\n                return $('hiker://empty#noHistory##noRecordHistory#').rule((path, _) => {\\n                    setPageTitle('TGX收藏 - ' + _.name);\\n                    setPagePicUrl(_.picUrl);\\n                    eval(JSON.parse(fetch('hiker://page/lib?rule=歌词适配', {})).rule);\\n                    let d = [];\\n                    try {\\n                        path += _.source + '_' + _.sourceListId + '.json';\\n                        JSON.parse(readFile(path)).map(_ => Extra(_));\\n                        if (d.length === 0) d.push({\\n                            col_type: \\\"text_center_1\\\",\\n                            url: \\\"hiker://empty\\\",\\n                            title: \\\"““””\\\" + \\\"~~~这个分组什么都没有~~~\\\".fontcolor(\\\"Gray\\\")\\n                        });\\n                    } catch (err) {\\n                        d.push({\\n                            title: \\\"TGX收藏 - 获取错误\\\",\\n                            desc: \\\"分组 「\\\" + _.name + \\\"」 不存在？\\\",\\n                            url: \\\"hiker://empty\\\",\\n                            col_type: \\\"text_center_1\\\"\\n                        });\\n                    }\\n                    setResult(d);\\n                }, path, data[i]);\\n                break;\\n        }\\n        return u;\\n    }\\n}\"}]","proxy":"","icon":"http://mmbiz.qpic.cn/mmbiz_png/5s7J28U9GHVicD7guvybase86HhHC12oODbtrsgK7Cxrj5QpL6gKnyibeZDwEKIVKUOtPoHcxpfwa0ponZ1ia5nlA/0?wx_fmt=png"}
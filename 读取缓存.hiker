{"last_chapter_rule":"","pageList":[],"title":"读取缓存","author":"@LoyDgIk","version":1,"type":"tool","url":"hiker://empty##","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nsetResult([{\n    title:\"保存在““hiker://files/cache/picCache/””\",\n    url:\"hiker://empty\",\n    col_type:\"text_center_1\"\n},{\n    title: \"开始(全部)\",\n    col_type: \"text_center_1\",\n    url: $(\"\", \"类型\").input(() => {\n        const context = getCurrentActivity();\n        const FileOutputStream = java.io.FileOutputStream;\n        const FileInputStream = java.io.FileInputStream;\n        const File = java.io.File;\n        let type = input || \"png\";\n\n        function save(file, path) {\n            try {\n                // 创建FileInputStream对象\n                let fis = new FileInputStream(file);\n\n                // 创建FileOutputStream对象\n                let ff = new File(path);\n                ff.createNewFile();\n                let fos = new FileOutputStream(ff);\n\n                // 读取输入文件的内容，并写入输出文件\n                let data;\n                while ((data = fis.read()) != -1) {\n                    fos.write(data);\n                }\n                // 关闭流\n                fis.close();\n                fos.close();\n            } catch (e) {\n                log(e.toString())\n            }\n\n        }\n        showLoading(\"正在复制...\");\n        // 获取CacheDir路径\n        let cacheDir = context.getCacheDir();\n        const bPath = \"/storage/emulated/0/Android/data/com.example.hikerview/files/Documents/cache/picCache/\";\n        if (!fileExist(\"file://\" + bPath)) {\n            writeFile(\"file://\" + bPath + \"a.text\");\n        }\n        cacheDir = new java.io.File(cacheDir, \"image_manager_disk_cache\");\n        // 遍历CacheDir目录下的所有文件\n        let files = cacheDir.listFiles();\n        if (files != null) {\n            for (let file of files) {\n                //log(file.getAbsolutePath());\n                save(file, bPath + file.getName() + type);\n            }\n        }\n        hideLoading();\n        return \"toast://完成，保存在:\" + bPath;\n    })\n}, {\n    title: \"开始(根据url)\",\n    col_type: \"text_center_1\",\n    url: $(\"\", \"url$类型\").input(() => {\n\n        eval(getCryptoJS());\n\n        function sha256(value) {\n            return CryptoJS.SHA256(value).toString(CryptoJS.enc.Hex);\n        }\n        input = input.split(\"$\");\n        let namesha = sha256(input[0]);\n        //log(namesha)\n        let type = input[1] || \"png\"\n\n\n        const context = com.example.hikerview.ui.Application().getContext();\n        const Paths = java.nio.file.Paths;\n        const Files = java.nio.file.Files;\n        const File = java.io.File;\n\n        const sPath = \"/storage/emulated/0/Android/data/com.example.hikerview/files/Documents/cache/picCache/\";\n\n        function copyF(file, outPath) {\n\n            let sourcePath = file.toPath();\n            let destinationPath = Paths.get(outPath);\n\n            try {\n                Files.createDirectories(destinationPath.getParent());\n                Files.copy(sourcePath, destinationPath, java.nio.file.StandardCopyOption.REPLACE_EXISTING);\n                log(\"File copied successfully.\");\n                return true;\n            } catch (e) {\n                log(e.toString());\n            }\n        }\n        let cacheDir = context.getCacheDir();\n\n        cacheDir = new File(cacheDir, \"image_manager_disk_cache\");\n        // 遍历CacheDir目录下的所有文件\n        let files = cacheDir.listFiles();\n        if (files != null) {\n            for (let file of files) {\n                if (String(file.getName()).includes(namesha)) {\n                    let p = sPath + file.getName() + \".\" + type;\n                    if (copyF(file, p)) {\n                        updateItem(\"picyl\", {\n                            pic_url: p,\n                            url: p,\n                            col_type: \"pic_1_full\"\n                        });\n                        addItemAfter(\"picyl\", {\n                            title: p,\n                            url: \"copy://\" + p,\n                            col_type: \"text_1\"\n                        });\n                        return \"toast://完成,原始文件已保存在\" + p;\n                    } else {\n                        return \"toast://已找到但是复制失败\";\n                    }\n\n                }\n            }\n        }\n        return \"toast://没有找到哦\";\n    })\n}, {\n    extra: {\n        id: \"picyl\"\n    }\n}])","searchFind":"","search_url":"","group":"⑧工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[]","proxy":"","icon":""}
{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"规则","path":"rules","rule":"js:\nfunction route(MY_PARAMS){\n    let limit = MY_PARAMS.limit;\n    limit = Number(limit)||5;\n    let name=MY_PARAMS.name;\n    let rules=fetch('hiker://home');\n    log(rules.length);\n    rules=JSON.parse(rules).slice(0,limit);\n\n     return JSON.stringify({\n                statusCode: 200,\n                headers: {\n                    'Content-Type':'application/json'\n                },\n                body:JSON.stringify(rules)\n                \n                })\n   \n}\n\n$.exports.route=route;"},{"col_type":"movie_3","name":"魔断解析","path":"dp","rule":"js:\nfunction route(MY_PARAMS){\n    let url = MY_PARAMS.url;\n    let name=MY_PARAMS.name;\n    log(`魔断代理解析规则${name}，开始解析:` + url);\n            eval(\"var config =\" + request(\"hiker://files/cache/MyParseSet.json\"));\n                eval(request(config.cj));\n                let title = name||'';\n                let result =aytmParse(url,title,5000);\n                log(result);\n                if(result.startsWith('http')){\n                    return JSON.stringify({\n                statusCode: 302,\n                headers: {\n                    \"Location\":result\n                }\n            });\n                }\n   \n}\n\n$.exports.route=route;"},{"col_type":"movie_3","name":"404","path":"404","rule":"js:\nfunction route(MY_PARAMS){\n   return JSON.stringify({\n                statusCode: 404,\n                body: '404 not found'\n                \n                })\n}\n\n$.exports.route=route;"},{"col_type":"movie_3","name":"规则详情","path":"rule_detail","rule":"js:\nfunction route(MY_PARAMS){\n    let title = MY_PARAMS.title;\n    log('title:'+title);\n    let rule=request('hiker://home@'+title);\n    //log(rule.length);\n       return JSON.stringify({\n                statusCode: 200,\n                headers: {\n                    'Content-Type':'application/json'\n                },\n                body:rule\n                \n                })\n   \n}\n\n$.exports.route=route;"},{"col_type":"movie_3","name":"drpy解析","path":"drpy","rule":"js:\nfunction route(MY_PARAMS){\n    let type = MY_PARAMS.type;\n    log('type:'+type);\n    let ext = MY_PARAMS.ext+'';\n    if(ext&&ext.startsWith('http')){\n        let rule=request(ext);\n        //log(rule);\n       return JSON.stringify({\n                statusCode: 200,\n                headers: {\n                    'Content-Type':'text/plain'\n                },\n                body:rule\n                \n                })\n    }\n   \n}\n\n$.exports.route=route;"}],"title":"海阔接口示例","author":"道长","version":2,"type":"tool","url":"hiker://empty##","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nlet d=[];\n//注册全局api，跟子页面标识一一对应\nvar apis=['dp','rules','rule_detail','drpy'];\nfunction get_proxy(){\nvar routes={};\nif(!apis.includes('404')){\n    apis.push('404')\n}\nfor(let api of apis){ \ntry{\nroutes[api]=$.require('hiker://page/'+api).route;\nlog('成功注册api:'+api);\n}catch(e){\n    log(e.message)\n}\n}\napis=Object.keys(routes);\n//log(routes)\n    let u = startProxyServer($.toString((apis,routes) => {\n            let api = MY_PARAMS.api+'';\n            let resp='';\n            if(apis.includes(api)){\n                log('访问api:'+api);\n                //log(typeof(routes[api]))\n                return routes[api](MY_PARAMS)\n            }else{\n                return routes['404'](MY_PARAMS)\n            }\n            return resp\n    },apis,routes));\n   return u\n}\n\n\n\nfunction getJx(){\n    let titleArr = [], \n    urlArr = [];\n    var json={title:[],codes:{}};\n    let setFile = request('hiker://files/rules/DuanNian/MyParse.json');\n    try {\n        eval('json='+setFile);\n    }catch (e) {\n        log('Json解析发生了错误:'+e.message);\n    }\n    titleArr = json.title;\n    titleArr.forEach((it) => {\n        urlArr.push(json.codes[it]);\n    });\n    return {\n        names:titleArr,\n        codes:urlArr\n    }\n}\n\nd.push({\n    title:'视频地址',\n    col_type:'input',\n    url:$.toString(()=>{\n    putMyVar(\"vipUrl\",\"https://v.qq.com/x/cover/m441e3rjq9kwpsc/p0040gim4fz.html\");\n    refreshPage()\n}),\n    extra:{\n        defaultValue:getMyVar(\"vipUrl\",\"https://v.qq.com/x/cover/m441e3rjq9kwpsc/p0040gim4fz.html\"),\n        onChange:'putMyVar(\"vipUrl\",input)'\n    }\n})\n\nconst jxs=getJx();\nd.push({\n    title: '☢️'+getMyVar(\"selected\", ''),\n    url: $(jxs.names, 3).select((jxs) => {\n        input = input.replace(/👉/g,'');\n        let i = jxs.names.indexOf(input);\n        let code = jxs.codes[i];\n        log(\"\\n更改接口> \" + input);\n        log(\"\\n接口代码 \" + code);\n        log(typeof(code));\n        putMyVar(\"selected\", input);\n        refreshPage(false);\n        return \"toast://切换解析口为:\"+input;\n    }, jxs),\n    col_type: \"text_center_1\"\n});\n\nconst proxy_api=get_proxy();\nlet proxy_url=proxy_api+`?api=dp&name=${getMyVar(\"selected\", '')}&url=${getMyVar(\"vipUrl\",\"https://v.qq.com/x/cover/m441e3rjq9kwpsc/p0040gim4fz.html\")}`;\nd.push({\n    title:'代理播放地址',\n    desc:proxy_url,\n    col_type:'text_1',\n    //url:'video://'+proxy_url,\n    url:proxy_url+'#.m3u8',\n    //url:proxy_url\n});\n\nproxy_url=proxy_api+`?api=xx`;\nd.push({\n    title:'404接口测试',\n    desc:proxy_url,\n    col_type:'text_1',\n    url:proxy_url\n})\n\nproxy_url=proxy_api+`?api=rules&limit=5`;\nd.push({\n    title:'获取规则json列表测试',\n    desc:proxy_url,\n    col_type:'text_1',\n    url:proxy_url\n});\n\n\nproxy_url=proxy_api+`?api=rule_detail&title=道德经`;\nd.push({\n    title:'获取规则详情测试',\n    desc:proxy_url,\n    col_type:'text_1',\n    url:proxy_url\n});\n\nlet jsdemo='https://gitcode.net/qq_32394351/dr_py/-/raw/master/js/007影视.js';\nproxy_url=proxy_api+`?api=drpy&type=list&ext=${jsdemo}`;\nd.push({\n    title:'drpy源解析一级',\n    desc:proxy_url,\n    col_type:'text_1',\n    url:proxy_url\n});\n\nproxy_url=proxy_api+`?api=drpy&type=detail&ext=${jsdemo}`;\nd.push({\n    title:'drpy源解析二级',\n    desc:proxy_url,\n    col_type:'text_1',\n    url:proxy_url\n});\n\n\nproxy_url=proxy_api+`?api=drpy&wd=斗罗大陆&ext=${jsdemo}`;\nd.push({\n    title:'drpy源解析搜索',\n    desc:proxy_url,\n    col_type:'text_1',\n    url:proxy_url\n});\n\n\n\nsetResult(d)","searchFind":"","search_url":"","group":"⑧工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"规则\",\"path\":\"rules\",\"rule\":\"js:\\nfunction route(MY_PARAMS){\\n    let limit = MY_PARAMS.limit;\\n    limit = Number(limit)||5;\\n    let name=MY_PARAMS.name;\\n    let rules=fetch('hiker://home');\\n    log(rules.length);\\n    rules=JSON.parse(rules).slice(0,limit);\\n\\n     return JSON.stringify({\\n                statusCode: 200,\\n                headers: {\\n                    'Content-Type':'application/json'\\n                },\\n                body:JSON.stringify(rules)\\n                \\n                })\\n   \\n}\\n\\n$.exports.route=route;\"},{\"col_type\":\"movie_3\",\"name\":\"魔断解析\",\"path\":\"dp\",\"rule\":\"js:\\nfunction route(MY_PARAMS){\\n    let url = MY_PARAMS.url;\\n    let name=MY_PARAMS.name;\\n    log(`魔断代理解析规则${name}，开始解析:` + url);\\n            eval(\\\"var config =\\\" + request(\\\"hiker://files/cache/MyParseSet.json\\\"));\\n                eval(request(config.cj));\\n                let title = name||'';\\n                let result =aytmParse(url,title,5000);\\n                log(result);\\n                if(result.startsWith('http')){\\n                    return JSON.stringify({\\n                statusCode: 302,\\n                headers: {\\n                    \\\"Location\\\":result\\n                }\\n            });\\n                }\\n   \\n}\\n\\n$.exports.route=route;\"},{\"col_type\":\"movie_3\",\"name\":\"404\",\"path\":\"404\",\"rule\":\"js:\\nfunction route(MY_PARAMS){\\n   return JSON.stringify({\\n                statusCode: 404,\\n                body: '404 not found'\\n                \\n                })\\n}\\n\\n$.exports.route=route;\"},{\"col_type\":\"movie_3\",\"name\":\"规则详情\",\"path\":\"rule_detail\",\"rule\":\"js:\\nfunction route(MY_PARAMS){\\n    let title = MY_PARAMS.title;\\n    log('title:'+title);\\n    let rule=request('hiker://home@'+title);\\n    //log(rule.length);\\n       return JSON.stringify({\\n                statusCode: 200,\\n                headers: {\\n                    'Content-Type':'application/json'\\n                },\\n                body:rule\\n                \\n                })\\n   \\n}\\n\\n$.exports.route=route;\"},{\"col_type\":\"movie_3\",\"name\":\"drpy解析\",\"path\":\"drpy\",\"rule\":\"js:\\nfunction route(MY_PARAMS){\\n    let type = MY_PARAMS.type;\\n    log('type:'+type);\\n    let ext = MY_PARAMS.ext+'';\\n    if(ext&&ext.startsWith('http')){\\n        let rule=request(ext);\\n        //log(rule);\\n       return JSON.stringify({\\n                statusCode: 200,\\n                headers: {\\n                    'Content-Type':'text/plain'\\n                },\\n                body:rule\\n                \\n                })\\n    }\\n   \\n}\\n\\n$.exports.route=route;\"}]","proxy":"","icon":"https://lanmeiguojiang.com/tubiao/movie/4.svg"}
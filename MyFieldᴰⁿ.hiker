{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"Parse_Dn-vue.html","path":"Parse_Dn.html","rule":"<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no\" />\n    <title>Parse_Dn_vue</title>\n    <script>\n        const vuePath = 'hiker://files/rules/dzHouse/js/vue.js';\n        if(typeof(fba)=='undefined'||!fba){\n            var fba = fy_bridge_app;\n        }\n        try {\n            if(typeof(request)=='undefined'||!request){\n                eval(fba.getInternalJs());\n            }\n            window.request = window.request00 || window.request;\n            // fba.log(vuePath);\n            if(!request(vuePath)){\n                fba.writeFile(vuePath,request('http://hiker.nokia.press/hikerule/rulelist.json?id=1823'));\n            }\n            try {\n                eval(fba.fetch(vuePath));\n            }catch (e) {\n                // console.log(e.message);\n                fba.log(e.message);\n            }\n            // fba.log('加载vue组件完毕');\n        }catch (e) {\n            alert(e.message);\n        }\n    </script>\n    <!--    <script src=\"https://unpkg.com/vue@next\"></script>-->\n    <!--    <script src=\"file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/rules/dzHouse/js/vue.js\"></script>-->\n    <style>\n        body {\n            margin: 0 5px 0 5px;\n            padding: 0 0px 0 0px;\n            /*            background: #F9F0DA;*/\n            font-weight: 0;\n            font-family: \"Microsoft YaHei\",\"宋体\",\"Segoe UI\", \"Lucida Grande\", Helvetica, Arial,sans-serif, FreeSans, Arimo;\n        }\n        #app{\n            margin-top:-10px;\n        }\n        #tips{\n            margin-top:-10px;\n            margin-bottom:5px;\n        }\n        .fung{\n            text-align:center\n        }\n        div.box {\n            margin-top:-1px;\n            height: 43px;\n            line-height: 20px;\n        }\n        /*输入框尺寸*/\n        form {\n            background: transparent;\n            position: relative;\n            width: 100%;\n        }\n\n        input, label, select {\n            border: none;\n            outline: none;\n        }\n        /*字体位置*/\n        input {\n            width: 77%;\n            height: 32px;\n            padding-left: 66px;\n            padding-right: 0px;\n        }\n\n        label {\n            text-align:center;\n            line-height: 43px;\n            height: 40px;\n            width: 60px;\n            cursor: pointer;\n            position: absolute;\n        }\n\n        /*小框*/\n        .bar label {\n            /*background: #D06B6C;*/\n            border-radius: 5px 555px 555px 5px;\n            width: 60px;\n            font-size: 13px;\n            top: 0;\n            left: 3px;\n        }\n\n        /*输入框样式*/\n        .bar input {\n            /*border-radius: 5px 555px 555px 5px;\n             */\n            border-radius: 4px;\n        }\n\n        /*列表*/\n        select {\n            text-align:center;\n            line-height:40px;\n            height: 40px;\n            width: 20px;\n            cursor: pointer;\n            position: absolute;\n        }\n\n        /*列表*/\n        .lieb select{\n            /*border-radius: 4px;*/\n            border-radius: 555px 5px 5px 555px;\n            width: 80px;\n            text-align:center;\n            font-size: 13px;\n            top: 0;\n            right: 2px;\n        }\n\n        /*头像*/\n        .round_icon{\n            width: 40px;\n            height: 40px;\n            display: flex;\n            border-radius: 50%;\n            align-items: center;\n            justify-content: center;\n            overflow: hidden;\n        }\n    </style>\n</head>\n<body>\n<div class=\"fung\">\n    <a style=\"float:left;\">\n        <button  :style=\"'border: none;border-radius:10px;background: '+themes.closeBtn.background+';width: 80px; font-size: 18px;color: '+themes.closeBtn.color\" onclick=\"cancel();\">关 闭</button>\n    </a>\n    <a class=\"btn btn-primary\">\n        <!--        <button  :style=\"'border: none;border-radius:10px;background: '+themes.tipsBtn.background+';width: 120px; font-size: 18px;color: '+themes.tipsBtn.color\" @click=\"showTips=!showTips\">{{showTips?\"隐藏提示\":\"显示提示\"}}</button>-->\n        <button  :style=\"'border: none;border-radius:10px;background: '+themes.tipsBtn.background+';width: 120px; font-size: 18px;color: '+themes.tipsBtn.color\" @click=\"showTips=!showTips\" v-text=\"showTips?'隐藏提示':'显示提示'\"></button>\n    </a>\n    <a style=\"float:right\">\n        <button :style=\"'border: none;border-radius:10px;background: '+themes.saveBtn.background+';width: 80px; font-size: 18px;color: '+themes.saveBtn.color\" onclick=\"clickme('配 置 已 保 存 ！', 1000, '开');\">保 存</button>\n    </a>\n\n</div>\n<br>\n<div id=\"app\">\n    <h6 id=\"tips\" v-html=\"tips\" v-show=\"showTips\"></h6>\n    <div class=\"box bar\" v-for=\"option in options\">\n        <form>\n            <!--            <label type=\"submit\" :style=\"'background:'+themes.barlabel.background+';color:'+themes.barlabel.color\">{{ option.name }}</label>-->\n            <label type=\"submit\" :style=\"'background:'+themes.barlabel.background+';color:'+themes.barlabel.color\" v-text=\"option.name\"></label>\n            <input :style=\"'background:'+themes.barInput.background+';border: 3px solid '+themes.barInput.color\" type=\"text\" onclick=\"resetSelect(this.id)\" :placeholder=\"option.placeholder||placeholder\" v-model=\"option.value\" v-bind:id=\"option.id\">\n            <div class=\"lieb\">\n                <select :style=\"'background:'+themes.select.background+';color:'+themes.select.color\" :clearable=\"true\" size=\"2\" :id=\"option.id+'Select'\" :name=\"option.id\" onchange=\"getOption(this.id,this.name)\"  v-model=\"option.value\">\n                    <!--                    <option v-if=\"option.id!=='qju'&&option.id!=='cj'\" :value=\"sel\" :key=\"index\" v-for=\"(sel,index) in mySelect\">{{ sel }}</option>-->\n                    <option v-if=\"option.id!=='qju'&&option.id!=='cj'\" :value=\"sel\" :key=\"index\" v-for=\"(sel,index) in mySelect\" v-text=\"sel\"></option>\n                    <!--                    <option v-else-if=\"option.id==='qju'\" :value=\"sel\" :key=\"index\" v-for=\"(sel,index) in ['默认'].concat(mySelect)\">{{ sel }}</option>-->\n                    <option v-else-if=\"option.id==='qju'\" :value=\"sel\" :key=\"index\" v-for=\"(sel,index) in ['默认'].concat(mySelect)\" v-text=\"sel\"></option>\n                    <!--                    <option :value=\"sel\" :key=\"index\" v-else v-for=\"(sel,index) in cjSel\">{{ sel }}</option>-->\n                    <option :value=\"sel\" :key=\"index\" v-else v-for=\"(sel,index) in cjSel\" v-text=\"sel\"></option>\n                </select>\n            </div>\n        </form>\n    </div>\n</div>\n<div>\n    <a v-for=\"ver in verinfo\" style=\"float:left;margin-top:1px;margin-right: 20px\" v-bind:id='ver.id' onclick=\"doOption(this.id)\">\n        <img :src=\"ver.avatar\" class=\"round_icon\"  alt=\"\">\n        <!--        <span style=\"margin-left:10px;line-height:10px;font-size:12px;color: grey;\">{{ ver.author }}</span>-->\n        <span style=\"margin-left:10px;line-height:10px;font-size:12px;color: grey;\" v-text=\"ver.author\"></span>\n    </a>\n    <a style=\"float:right;margin-top:10px;\">\n        <button :style=\"'border: none;border-radius:10px;background:'+themes.saveCloseBtn.background+';width: 160px;height:40px; font-size: 18px;color: '+themes.saveCloseBtn.color\" onclick=\"clickme('配 置 已 保 存 ！', 1000, '关');\">保存并关闭界面</button>\n    </a>\n</div>\n<script>\n    let tips = `提示：<br>①注意插件选项，没有手动导入插件的话不用动它。如设置不当会导致规则无法使用，<br>解决办法：视界打开更多设置→文件管理→点cache→长按MyParseSet.json删除掉；<br>②全局设置如果选择了非默认那么全部的解析会使用这一设置，不想这样的话请填入默认；<br>③绿色保存按钮仅仅保存配置不会关闭设置页面，配置后想保存并关闭设置页面的话请点蓝色按钮；<br>④如果遇到保存按钮点不动或者报错的情况，以下路径挨着删除一遍，然后重新拉取插件，网页再打开此网页[不要先拉代码]。记得备份<br>\n主插件存放路径: /cache/Parse_Dn.js<br>\n网页脚本存放路径: /cache/Parse_Dn.html<br>\n旧断插配置路径:/cache/MyParseSet.json<br>\n新断插配置路径/rules/DuanNian/MyParse.json<br>\n主题文件:/cache/MyTheme.json<br>\n主题文件:/cache/MyTheme.json<br>\n自动档解析:/cache/MyJiexi.json<br>\n    ⑤阅读完提示点关闭加载完整设置页面，如出问题无法自行解决点图片进入论坛向我反馈。<br>`;\n    let placeholder='输入解析名或者URL......';\n    //#aa96da #fc5185\n    let themes = {\n        name:'默认主题',\n        closeBtn:{color:'#f6f6f6',background:'#aa96da'},\n        saveBtn:{color:'#F9F0DA',background:'#068006'},\n        saveCloseBtn:{color:'#F9F0DA',background:'#05BFC5'},\n        tipsBtn:{color:'#F9F0DA',background:'#05BFC5'},\n        barlabel:{color:'#F9F0DA',background:'#aa96da'},\n        barInput:{color:'#aa96da',background:'#ffffd2'},\n        select:{color:'#F9F0DA',background:'#aa96da'},\n    };\n    let themeDef = {\"name\":\"断念原皮\",\"closeBtn\":{\"color\":\"#F9F0DA\",\"background\":\"#c5464a\"},\"saveBtn\":{\"color\":\"#F9F0DA\",\"background\":\"#068006\"},\"saveCloseBtn\":{\"color\":\"#F9F0DA\",\"background\":\"#05BFC5\"},\"tipsBtn\":{\"color\":\"#F9F0DA\",\"background\":\"#05BFC5\"},\"barlabel\":{\"color\":\"#F9F0DA\",\"background\":\"#D06B6C\"},\"barInput\":{\"color\":\"#D06B6C\",\"background\":\"#F9F0DA\"},\"select\":{\"color\":\"#F9F0DA\",\"background\":\"#D06B6C\"}};\n    var themeRoute = \"hiker://files/cache/MyTheme.json\";\n    if(!fba.fetch(themeRoute)){\n        fba.writeFile(themeRoute,JSON.stringify({now_theme:'默认主题',themes:[themes,themeDef]}))\n    }\n    try {\n        let myThemes = JSON.parse(fba.fetch(themeRoute));\n        let nowTheme = myThemes.themes.filter(it=>it.name === myThemes.now_theme);\n        themes = nowTheme?nowTheme[0]:myThemes.themes[0];\n    }catch (e) {}\n\n    // 断念初始化部分\n    const allApi=['https://test.rongxingvr.com/test/?url=','http://cache.languang.icu:88/didi.php?url='];\n    var settings = {\n        qy: '万能解析Ⓙ',\n        yk: '万能解析Ⓙ',\n        tx: '万能解析Ⓙ',\n        mg: '万能解析Ⓙ',\n        bl: '万能解析Ⓙ',\n        sh: '万能解析Ⓙ',\n        xg: '万能解析Ⓙ',\n        // al: '万能解析Ⓙ',\n        pp: '万能解析Ⓙ',\n        mi: '万能解析Ⓙ',\n        le: '万能解析Ⓙ',\n        lt: '万能解析Ⓙ',//龙腾\n        rr:'万能解析Ⓙ',//人人迷\n        wd:'万能解析Ⓙ',//五毒云\n        oth: '道长仓库通免',\n        one: '1080',\n        fun: '融兴',\n        qju: '默认',\n        cj: 'hiker://files/cache/Parse_Dn.js'\n    };\n    var oldRoute = \"hiker://files/cache/MyParseSet.json\";\n    var mySet = fba.fetch(oldRoute);\n    var newRoute = \"hiker://files/rules/DuanNian/MyParse.json\";\n    if(!fba.fetch(newRoute)){\n        fba.writeFile(newRoute,JSON.stringify({settings:settings,title:[\"yun1717\",\"你爹科技\",\"融兴\",\"人人迷-优酷\"],codes:{\"你爹科技\":\"http://cache.languang.icu:88/didi.php?url=\",\"融兴\":\"https://test.rongxingvr.com/test/?url=\",\"人人迷-优酷\":\"https://svip.renrenmi.cc:2222/api/?key=nn4j8rukPXSVzR78E9&url=\"}}))\n    }\n    var newConfig = fba.fetch(newRoute);\n    var mySelect = [];\n    function compare(list) {\n        return function (it) {\n            return !list.includes(it)\n        }\n    }\n    if(newConfig&&newConfig.length>20){\n        eval(\"newConfig =\" + newConfig + \";\");\n        let newKeys = Object.keys(newConfig.settings);\n        let nowKeys = Object.keys(settings);\n        for(let i in newKeys){//清除多余的节点\n            if(!nowKeys.includes(newKeys[i])){\n                delete newConfig.settings[newKeys[i]]\n            }\n        }\n        settings = Object.assign(settings,newConfig.settings);\n        var ycTitle = ['defaultParse', 'defaultParseWeb','maoss', 'CityIP', 'cacheM3u8', 'pcUA', 'parseLc', 'gparse', 'nparse'];\n        mySelect = newConfig.title.filter(compare(ycTitle));\n        // mySelect = mySelect.map((it)=>{\n        //     let flag = 'Ⓤ';\n        //     if(typeof(newConfig.codes[it])==='function'){\n        //         flag = 'Ⓙ';\n        //     }else if(typeof(newConfig.codes[it])==='undefined'){\n        //         flag = '';\n        //     }\n        //     return flag+it\n        // });\n    }\n    //fba.log(JSON.stringify(mySelect));\n\n    let options = [\n        {\n            name:'爱奇艺',\n            id:'qy',\n            value:settings.qy,\n            placeholder:'设置爱奇艺'\n        },\n        {\n            name:'优酷',\n            id:'yk',\n            value:settings.yk\n        },\n        {\n            name:'腾讯',\n            id:'tx',\n            value:settings.tx\n        },\n        {\n            name:'芒果',\n            id:'mg',\n            value:settings.mg\n        },\n        {\n            name:'哔哩哔哩',\n            id:'bl',\n            value:settings.bl\n        },\n        {\n            name:'搜狐',\n            id:'sh',\n            value:settings.sh\n        },\n        {\n            name:'西瓜',\n            id:'xg',\n            value:settings.xg\n        },\n        {\n            name:'PPTV',\n            id:'pp',\n            value:settings.pp\n        },\n        {\n            name:'咪咕',\n            id:'mi',\n            value:settings.mi\n        },\n        {\n            name:'乐视',\n            id:'le',\n            value:settings.le\n        },\n        {\n            name:'1905',\n            id:'one',\n            value:settings.one\n        },\n        {\n            name:'风行',\n            id:'fun',\n            value:settings.fun\n        },\n        {\n            name:'龙腾',\n            id:'lt',\n            value:settings.lt\n        },\n        {\n            name:'人人迷',\n            id:'rr',\n            value:settings.rr\n        },\n        {\n            name:'五毒',\n            id:'wd',\n            value:settings.wd\n        },\n        {\n            name:'其他',\n            id:'oth',\n            value:settings.oth\n        },\n        {\n            name:'全局',\n            id:'qju',\n            value:settings.qju\n        },\n        {\n            name:'插件',\n            id:'cj',\n            value:settings.cj\n        },\n    ];\n\n    function Did(id){\n        return document.getElementById(id);\n    }\n    function getOption(id,title) {\n        var obj = Did(id);\n        Did(title).value = obj.options[obj.selectedIndex].text;\n        // Did(title).value = obj.options[obj.selectedIndex].text.replace(/Ⓤ|Ⓙ/g,'');\n    }\n    function resetSelect(id){\n        Did(id+\"Select\").options.selectedIndex = -1;\n    }\n\n    //函数部分\n\n    function Toast(msg,duration){\n        duration=isNaN(duration)?2000:duration;\n        var m = document.createElement('div');\n        m.innerHTML = msg;\n        m.style.cssText=\"width:45%; min-width:150px; background:#311; opacity:0.6; height:auto;min-height: 45px; color:#fff; line-height:45px; text-align:center; border-radius:10px; position:fixed; top:60%; left:26%; z-index:999999;\";\n        document.body.appendChild(m);\n        setTimeout(function() {\n            var d = 0.5;\n            m.style.webkitTransition = '-webkit-transform ' + d + 's ease-in, opacity ' + d + 's ease-in';\n            m.style.opacity = '0';\n            setTimeout(function() { document.body.removeChild(m) }, d * 1000);\n        }, duration);\n    }\n\n    function openDnPage(){\n        fba.open(JSON.stringify({\n            rule: \"=^_^=\",\n            title: \"编辑解析\",\n            url: \"hiker://page/Route?rule=MyFieldᴰⁿ&type=编辑#noHistory##noRecordHistory#\",\n            group: \"\",\n            col_type: \"\",\n            //findRule: \"js:this.d=[];$.require(\\\"hiker://page/Parse_Dn.js?rule=MyFieldᴰⁿ\\\").edit();setResult(d);\",\n            preRule: \"\",\n            extra: {}\n        }));\n    }\n    function openTheme(){\n        fba.open(JSON.stringify({\n            rule: \"=^_^=\",\n            title: \"主题管理\",\n            url: \"hiker://page/Route?rule=MyFieldᴰⁿ&type=主题#noHistory##noRecordHistory#\",\n            group: \"\",\n            col_type: \"\",\n            preRule: \"\",\n            extra: {}\n        }));\n    }\n    function openJxManage(){\n        fba.open(JSON.stringify({\n            rule: \"=^_^=\",\n            title: \"解析配置管理\",\n            url: \"hiker://page/Route?rule=MyFieldᴰⁿ&type=解析#noHistory##noRecordHistory#\",\n            group: \"\",\n            col_type: \"\",\n            preRule: \"\",\n            extra: {}\n        }));\n    }\n    function cancel(){\n        if(!mySet){\n            fba.writeFile(oldRoute, JSON.stringify(settings, null, 4));\n            fba.refreshPage(true);\n        }else{\n            fba.back(false);\n        }\n    }\n    function clickme(msg,duration,title){\n        try{\n            for(let key in settings){\n                // fba.log(Did(key)+''+key);\n                try{\n                    //settings[key] = Did(key).value.replace(/Ⓤ|Ⓙ/g,'');\n                    settings[key] = Did(key).value;\n                }catch(e){\n                    alert(\"未获取到节点:\"+key+\"\\n\"+e.message);\n                }\n\n            }\n            if(mySelect){\n                Object.assign(newConfig.settings, settings);\n                fba.writeFile(newRoute, $$$.stringify(newConfig));\n            }\n            fba.writeFile(oldRoute, $$$.stringify(settings));\n            Toast(msg,duration);\n            if(title===\"关\"){\n                fba.back();\n            }else{\n                fba.refreshPage(true);\n            }\n        }catch(e){\n            alert(e.message)\n        }\n    }\n\n    //let width=window.screen.availWidth;\n    //let widthPx=width-393+52;\n    //alert(\"当前分辨率:\"+window.screen.availWidth+\"*\"+window.screen.height);\n    var verinfo = [{\n        id:'dn',\n        author:'断念',\n        avatar:'https://s3.ax1x.com/2021/02/22/y7wb9O.jpg',\n        option:openDnPage,\n    },\n        {\n            id:'dz',\n            author:'道长',\n            avatar:'http://q1.qlogo.cn/g?b=qq&nk=434857005&s=640',\n            option:openTheme\n        },\n        {\n            id:'lm',\n            author: '蓝莓',\n            avatar: 'http://q1.qlogo.cn/g?b=qq&nk=2579949378&s=640',\n            option:openJxManage\n        }\n    ];\n\n    function doOption(option_id){\n        let ver = verinfo.filter(it=>it.id===option_id)[0];\n        ver.option();\n    }\n\n    const RenderHtmlApp = {\n        data() {\n            return {\n                // rawHtml: '<span style=\"color: red\">这里会显示红色！</span>',\n                options:options,\n                verinfo:verinfo,\n                placeholder:placeholder,\n                tips:tips,\n                themes:themes,\n                mySelect:mySelect,\n                // cjSel:['请选择插件 (只作用lazyRule)','hiker://files/cache/Parse_Dn.js','hiker://files/rules/dzHouse/js/srcauto.js','hiker://files/rules/js/Parse-V2_Dn.js'],\n                cjSel:['请选择插件 (只作用lazyRule)','hiker://files/cache/Parse_Dn.js','hiker://files/rules/dzHouse/js/srcauto.js'],\n                settings:settings,\n                showTips:false,\n                //widthPx:widthPx\n            }\n        },\n        methods:{\n            // changeVal:function(event){\n            //     getOption(this.id,this.name);\n            //     this.selOption = event.target.value;\n            //     alert(\"你选中了\"+event.target.value);\n            // }\n            doOption:doOption\n        }\n    }\n    try {\n        const app=Vue.createApp(RenderHtmlApp);\n        app.mount('body');\n    }catch (e) {\n        console.log(e.message)\n    }\n\n</script>\n\n</body>\n</html>"},{"col_type":"movie_3","name":"Parse_Dn.js","path":"Parse_Dn.js","rule":"//============免嗅调用============\n//－－－=^_^=\n\nvar version = \"3.49221205\";//1205\n\nvar updateDate = '2022/12/05/ 13:18';\nvar _mySet = {\n    qju: '默认',\n    oth:'道长仓库通免',\n    cjcache: 'hiker://files/cache/Parse_Dn.js',\n    themecache: 'hiker://files/cache/MyTheme.json',\n    jiexicache: 'hiker://files/cache/MyJiexi.json',\n    x5cache: 'hiker://files/cache/Parse_Dn.html',\n    dmCache: 'hiker://files/cache/diaomao.txt',\n    oldConfig: 'hiker://files/cache/MyParseSet.json',\n    ckLink: 'https://code.aliyun.com/AI957/Hiker/raw/master/v/',\n    // cj: 'https://code.aliyun.com/AI957/Hiker/raw/master/v/CloudParse-V2_Dn.js',\n    cj: 'https://gitcode.net/qq_32394351/dr/-/raw/master/dp/Parse_Dn.js',\n    // x5Url: 'https://code.aliyun.com/AI957/Hiker/raw/master/v/Parse_Dn.html',\n    x5Url: 'http://dr.nokia.press/html/Parse_Dn-vue.html',\n    parseRoute: 'hiker://files/rules/DuanNian/MyParse.json',\n    // x5Route: 'file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/cache/Parse_Dn.html'\n    x5Route: getPath('hiker://files/cache/Parse_Dn.html'),\n    batchRoute:getPath('hiker://files/cache/plscParse.html')\n};\nvar MyParseS = {};\nvar mySet = _mySet;\nif (fileExist(_mySet.parseRoute)) {\n    eval('var parseFile =' + fetch(_mySet.parseRoute));\n    MyParseS = parseFile.codes;\n    mySet = parseFile.settings;\n}\nvar parseTitle = [\n    \"yun1717\",\n    \"PanGu\",\n    \"FuXing\",\n    \"isVideo\",\n    \"defaultParse\",\n    \"道长仓库通免\",\n    \"timeOut\",\n    \"源码匹配\",\n    \"defaultParseWeb\",\n    \"OK解析\",\n    \"M3U8TV\",\n];\n//－－－=^_^=\n\n//接口设置.\n\nvar setUrl = \"hiker://page/Route?rule=MyFieldᴰⁿ&type=设置#noRecordHistory#\";\nvar set_switch = setUrl;\nvar lazy = `eval('var config_dp =' + fetch(getVar('oldConfig')));eval(fetch(config_dp.cj));aytmParse(input)`;\n\n//var parwix = `var yurl='https://daili.mayixiongdi.cn/?url=';Referer': 'https://www.mayixiongdi.cn/ys?id=';'https://daili.mayixiongdi.cn/api.php', 'Referer':'https://daili.mayixiongdi.cn';\n// 全民https://pcvideoaliyun.tianshangrenjian.mgtv.com.88wuma.com/?url=\n\n//－－－备 用－－－\n/*\n * 影视工场： https://ysgc.cc/\n * 江湖: 555电影 https://www.555dy2.com/phone.html ｜ 17看 http://17kanyy.cn/ http://jhjiexi.30vr.cn/?url= ｜ http://api.maizimall.com/index.php?url=\n * 江湖: http://www.tianshuyun.net/index.php/vod/play/id/448377/sid/1/nid/1.html\n * 江湖2: http://98hyk.cn/index.php/vod/play/id/72841/sid/1/nid/1.html\n * 人人迷: https://vip.susou.tv/player/?url= ｜ https://www.momdm.cc/\n *\n * wuigen: https://www.5igen.com/dmplayer/player/?url=\n * 干饭(人人迷): https://jx.zui.cm/?url=\n * https://2.66movie.top/player/?url=\n *\n */\n\n\nvar tools = {\n    MD5: function(data) {\n        eval(getCryptoJS());\n        return CryptoJS.MD5(data).toString(CryptoJS.enc.Hex);\n    },\n    AES: function(text, key, iv, isEncrypt) {\n        eval(getCryptoJS());\n        var key = CryptoJS.enc.Utf8.parse(key);\n        var iv = CryptoJS.enc.Utf8.parse(iv);\n        if (isEncrypt) {\n            return CryptoJS.AES.encrypt(text, key, {\n                iv: iv,\n                mode: CryptoJS.mode.CBC,\n                padding: CryptoJS.pad.Pkcs7\n            }).toString();\n        };\n        return CryptoJS.AES.decrypt(text, key, {\n            iv: iv,\n            padding: CryptoJS.pad.Pkcs7\n        }).toString(CryptoJS.enc.Utf8);\n    },\n    //ascii\n    nextCharacter: function(asciiValue, k) {\n        var s = asciiValue;\n        return String.fromCharCode(s + k);\n    },\n    //凯撒\n    caesarCipher: function(stringValue, k) {\n        var newString = \"\";\n        for (var i = 0; i < stringValue.length; i++) {\n            newString += this.nextCharacter(stringValue[i].charCodeAt(), k);\n        }\n        return newString;\n    },\n    nowDate: function() {\n        var date1 = new Date();\n        var dateStr = \"\";\n        if (date1) {\n            dateStr = date1.getFullYear();\n            var month = date1.getMonth() + 1;\n            var day = date1.getDate();\n            if (month < 10) {\n                dateStr += \"-0\" + month;\n            } else {\n                dateStr += \"-\" + month;\n            }\n            if (day < 10) {\n                dateStr += \"-0\" + day;\n            } else {\n                dateStr += \"-\" + day;\n            }\n        }\n        return dateStr;\n    },\n    nowDateStr:function (){ // 利用$工具获取格式化后的当前时间\n        return  $.dateFormat(new Date(),\"yyyy-MM-dd HH:mm:ss\");\n    },\n    toJSON: function(json) {\n        return JSON.stringify(json, (key, value) => {\n            if (typeof value == 'function') {\n                return value.toString();\n            } else {\n                return value;\n            }\n        }, 4);\n    },\n    toVNum: function(a) {\n        var a = a.toString();\n        var c = a.split('.');\n        var num_place = [\"\", \"0\", \"00\", \"000\", \"0000\"],\n            r = num_place.reverse();\n        for (var i = 0; i < c.length; i++) {\n            var len = c[i].length;\n            c[i] = r[len] + c[i];\n        }\n        var res = c.join('');\n        return res;\n    },\n    cprVersion: function(a, b) {\n        var _a = parseInt(this.toVNum(a)),\n            _b = parseInt(this.toVNum(b));\n        b = isNaN(_b) ? version : b;\n        if (_a > _b) {\n            putVar('jxNewV', '有新版本: ' + a);\n        } else {\n            clearVar('jxNewV');\n        }\n        putVar('jxOldV', b);\n    },\n    atob:function (str){\n        require('https://cdn.jsdelivr.net/npm/js-base64@3.7.2/base64.min.js');\n        return Base64.atob(str);\n    },\n    btoa:function (str){\n        require('https://cdn.jsdelivr.net/npm/js-base64@3.7.2/base64.min.js');\n        return Base64.btoa(str);\n    },\n    江湖:function (config_url, tem, token) {\n        require('https://cdn.jsdelivr.net/npm/js-base64@3.7.2/base64.min.js');\n        var atob=Base64.atob;\n        var btoa=Base64.btoa;\n        var config_a = tem || \"ffsirllq\";\n        var video = '';\n        var tem = [];\n        var config_arry = [];\n        var config_b = config_a.length;\n        if (token == 0x1) {\n            var config_url = atob(config_url);\n        } else {\n            var config_url = encodeURIComponent(config_url);\n        }\n        var config_c = config_url.length;\n        for (i = 0x0; i < 0x100; i++) {\n            tem[i] = config_a[i % config_b].charCodeAt();\n            config_arry[i] = i;\n        }\n        for (j = i = 0x0; i < 0x100; i++) {\n            j = (j + config_arry[i] + tem[i]) % 0x100;\n            tmp = config_arry[i];\n            config_arry[i] = config_arry[j];\n            config_arry[j] = tmp;\n        }\n        for (a = j = i = 0x0; i < config_c; i++) {\n            a = (a + 0x1) % 0x100;\n            j = (j + config_arry[a]) % 0x100;\n            tmp = config_arry[a];\n            config_arry[a] = config_arry[j];\n            config_arry[j] = tmp;\n            k = config_arry[(config_arry[a] + config_arry[j]) % 0x100];\n            video += String.fromCharCode(config_url[i].charCodeAt() ^ k);\n        }\n        log(decodeURIComponent(video));\n        if (token == 0x1) {\n            return decodeURIComponent(video);\n        } else {\n            return btoa(video);\n        }\n    }\n};\nif (getVar(\"jxOldV\", \"0\") != version) {\n    putVar('cjCache', _mySet.cjcache);\n    putVar('x5Cache', _mySet.x5Cache);\n    putVar('oldConfig', _mySet.oldConfig);\n    putVar('parseRoute', _mySet.parseRoute);\n    // let jxNewV = fetch('https://gitee.com/Duan-Nian/Dn/raw/master/hikerview/ParseVersion.txt');\n    let jxNewV = fetch('https://gitcode.net/qq_32394351/dr/-/raw/master/dp/ParseVersion.txt');\n    let jxOldV = (fetch(_mySet.cjcache).split('version = \"')[1] + '').split('\"')[0];\n    tools.cprVersion(jxNewV, jxOldV);\n}\n\nvar ParseS = {};\nvar originalParseS = {\n    // updateDate: updateDate,\n    parseLc:'https://code.aliyun.com/AI957/Hiker/raw/master/p/parseLc.js',\n    CityIP: 'http://pv.sohu.com/cityjson',\n    pcUA: 'User-Agent@Mozilla/5.0 (Windows NT 10.0\\；\\； WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.87 Safari/537.36',\n    cacheM3u8: function(vUrl, ref) {\n        let paramas = ref?{headers:{Referer:ref}}:{};\n        return cacheM3u8(url, paramas)\n    },\n    isVideo:function(playUrl){\n        const {isVideo} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\n        return isVideo(playUrl)\n    },\n    timeOut:function () {\n        const lsg=$.require(\"hiker://page/localStorage?rule=道长仓库Pro\");\n        return parseInt(lsg.getItem('timeout', '5000'));  //超时\n    },\n    源码匹配:function (vipUrl,regex,pos,headers){\n        if(!regex||!vipUrl){\n            return 'toast://解析播放链接和正则匹配字符串必填!'\n        }\n        if((!pos&&pos!==0)||(pos&&typeof(pos)!=\"number\")){//match匹配位置\n            pos = 1\n        }\n        headers = headers||{};\n        headers['User-Agent'] = headers['User-Agent']||MOBILE_UA;\n        let html = fetch(vipUrl, {headers:headers,timeout:this.timeOut()});\n        try {\n            let realUrl = html.match(new RegExp(regex))[pos];\n            return this.isVideo(realUrl);\n        } catch (e) {\n            log(e.message);\n            return vipUrl;\n        }\n    },\n    defaultParse: function(url,timeout) {\n        return ParseS.defaultParseWeb(url,timeout);\n    },\n    defaultParseWeb: function(playUrl,timeout,extra) {\n        // log('传入defaultParseWeb的超时:'+timeout);\n        timeout = parseInt(timeout)||parseInt(getVar('dp.jxTimeout','5000'))||5000;\n        extra = extra||{};\n        let playUrlList = extra.playUrlList||[];\n        if(typeof(playUrlList)==='object'&&playUrlList.length>0){\n            playUrlList.unshift(playUrl);\n            let playUrls=playUrlList.slice(0,4);\n            let names=extra.nameList.slice(0,4);\n            // log('开始批量解析(已去重,只取前3个备胎，加道长群:486722328获取最新魔断动态):'+names);\n            playUrls=playUrls.map((it,id)=>it+\";\"+names[id]);\n            //log(playUrls);\n            const {LazyParseFast} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\n            let ret = LazyParseFast(playUrls,timeout,timeout);\n            if(typeof(ret)==='object'&&ret.length>0){\n                //return ret[0]\n                //log(ret);\n                let v = getAppVersion();\n                if(parseInt(v)>=2194&&ret.length>1){\n                    let urls = Array.from(new Set(ret));\n                    names=urls.map((it,id)=>it.split(\"★\").length>1?it.split(\"★\")[1]:\"线路:\"+parseInt(id+1));\n                    urls=urls.map(it=>it.split(\"★\")[0]);\n                    let headers = urls.map((it)=>{\n                        if(!/;/.test(it)||it.split(';').length<2){\n                            return {}\n                        }else{\n                            let head = it.split(';')[1];\n                            if(!/@/.test(head)||!/{|}/.test(head)){\n                                return {}\n                            }\n                            head=head.split(\"{\")[1].split(\"}\")[0];\n                            //head = head.replace(/{|}/g,'');\n                            head = head.split('&&');\n                            let obj = {};\n                            for(let i in head){\n                                let key = head[i].split('@')[0];\n                                let value = head[i].split('@')[1].replace(/;/,';');\n                                obj[key] = value;\n                            }\n                            return obj\n                        }\n                    });\n                    urls = urls.map((it)=>{\n                        let turl=it.split(';')[0];\n                        if(it.includes(\"#isVideo=true#\")&&!turl.includes(\"#isVideo=true#\")){\n                            turl+=\"#isVideo=true#\";\n                        }\n                        return turl\n                    });\n                    return JSON.stringify({urls:urls,headers:headers,names:names});\n                }else{\n                    return ret[0].split(\"★\")[0]\n                }\n            }else{\n                return ret\n            }\n        }else{\n            const {lazyParse} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\n            let x5Play=lazyParse(playUrl,timeout);\n            if(typeof(x5Play)==\"undefined\"||!x5Play){\n                return \"toast://道长仓库解析失败\"\n            }\n            let tips=/x5Rule|webRule/.test(x5Play)?\"x5/web免嗅开始\":\"极速免嗅探完毕，地址:\"+(/^http/.test(x5Play)?x5Play:'非正常链接');\n            log(tips);\n            return x5Play;\n        }\n    },\n    \"maoss\":\n        function (jxurl, ref, key) {\n            return this.猫(jxurl, ref, key)\n        },\n    免嗅:function(vipUrl,k){\n        k=k||[\"url\",\"data.url\"];\n        try{\n            let rjson=JSON.parse(fetch(vipUrl));\n            //log(rjson);\n            let realUrl='';\n            if(typeof(k)=='string'){\n                realUrl=eval(`rjson.${k}`);\n            }else if(Array.isArray(k)){\n                for(let i of k){\n                    //log(i);\n                    realUrl=eval(`rjson.${i}`);\n                    if(realUrl){\n                        break;\n                    }\n                }\n            }\n            if(realUrl.startsWith('/')){\n                realUrl = 'https://'+realUrl;\n            }\n            return this.isVideo(realUrl)||\"\";\n        }catch(e){\n            log(e.message);\n            return \"\"\n        }\n    },\n    X5:function(vipUrl,ref){// https://api.52wyb.com/webcloud/?v=http://vip.1905.com/play/691940.shtml http://www.cdcer.net/\n        let _x5 = $.toString((vipUrl) => {\n            if(!location.href.includes(vipUrl)){\n                location.href = vipUrl;\n            }\n            if(window.count == null){\n                window.count=1;\n            }\n            window.count++;\n            if( window.count >= 20){\n                fba.log(\"未获取到资源地址，跳到解析页\");\n                return vipUrl\n            }\n            var urls = _getUrls();\n            for (var i in urls) {\n                if (!/playm3u8|m3u8\\.tv/.test(urls[i]) && urls[i].match(/\\.mp3|\\.mp4|\\.m3u8|\\.flv/)) {\n                    fba.log(urls[i]);\n                    return urls[i]\n                }\n            }\n        },vipUrl);\n        let playUrl = ref?ref:vipUrl;\n        let x5Url = 'webRule://'+playUrl+ '@' +_x5;\n        showLoading('魔断.js嗅探中...');\n        return x5Url\n    },\n    '道长':function (vipUrl){\n        evalPrivateJS('zSWve+eeA6iL+f2fGTI+1pR8jnLd0SiyV6yvgcPMWwBMP5aYpqhTFbISxnvhb0bd5VgizyUMHe4dmsnGhWLBkqfb5HfNbIW4MBMxzLpP/9TjNT8SIQAfjdTj4P8oX35ekKNvGVxDolyfcYrpoKwNoQ==');\n        return this.免嗅(vipUrl+'&secret='+secret)\n    },\n    '猫':function (jxurl, ref, key) {\n        try {\n            var getVideoInfo = function (text) {\n                return tools.AES(text, key, iv);\n            };\n            let headers = {headers: {\"Referer\": ref||''}};\n            key = key == undefined ? \"dvyYRQlnPRCMdQSe\" : key;\n            var html = ref?request(jxurl, headers):request(jxurl);\n            if (/&btwaf=/.test(html)) {\n                html = request(jxurl + \"&btwaf\" + html.match(/&btwaf(.*?)\"/)[1], headers);\n            }\n            var iv = html.split(\"_token = \\\"\")[1].split(\"\\\"\")[0];\n            eval(html.match(/var config = {[\\s\\S]*?}/)[0] + \"\");\n            if (!/^http/.test(config.url)) {\n                config.url = decodeURIComponent(tools.AES(config.url, key, iv));\n            }\n            return config.url;\n        }\n        catch (e) {\n            // return \"\";\n            return jxurl;\n        }\n    },\n    LLQ: function(jxurl) {\n        try {\n            var api = jxurl.split('?url=')[0] + \"api.php\";\n            var b64id = base64Encode(jxurl.split('url=')[1]);\n            var parseid = tools.caesarCipher(b64id, -1);\n            var json = JSON.parse(request(api, {\n                headers: {\n                    'Referer': jxurl\n                },\n                method: 'POST',\n                body: 'url=' + parseid\n            }));\n            url = (json.code == 200 ? base64Decode(tools.caesarCipher(json.url, -1)) : '');\n            return url;\n        } catch (e) {\n            return '';\n        }\n    },\n    PanGu: function(vipUrl, data) {\n        try {\n            /*var ref = 'https://www.pangujiexi.com/';\n            var parse = 'https://panguapi.ntryjd.net/jiexi/?url=' + vipUrl;\n            var api = 'https://panguapi.ntryjd.net/jiexi/api.php';\n            */\n            //var ref = 'https://xmystv.com/';\n            //var parse = 'https://www.99kpw.com/pangu/index.php?url=' + tailUrl;\n            //var api = 'https://www.99kpw.com/pangu/api.php';\n            var parse = 'https://www.pangujiexi.com/pangu/?url=' + vipUrl;\n            var api = 'https://panguapi.ntryjd.net/pangu2021/api.php';\n            if (data) {\n                ref = data[0];\n                parse = data[1];\n                api = data[2];\n            }\n            var Time = (Math.floor(new Date().getTime() / 1000) * 1).toString();\n            var url = JSON.parse(request(api, {\n                headers: {\n                    'Referer': parse\n                },\n                body: 'url=' + vipUrl + '&referer=' + base64Encode(parse) + '&ref=1&time=' + Time + '&type=&other=' + base64Encode(vipUrl) + '&ios=0',\n                method: 'POST'\n            })).url;\n            return url;\n        } catch (e) {\n            return '';\n        }\n    },\n    yun1717: function (vipUrl) {\n        var isyk = vipUrl.indexOf('youku');\n        var ref = \"https://www.1717yun.com/jx/ty.php?url=\" + vipUrl;\n        var parse = \"https://1717yun.com.zh188.net/0828/?url=\" + vipUrl;\n        var api = \"https://1717yun.com.zh188.net/1004/..index..php\";\n        return isyk == -1 ? this.PanGu(vipUrl, [ref, parse, api]) : this.PanGu(vipUrl, [ref + ',vip:', parse + ',vip:', api]);\n    },\n    OK解析:'https://okjx.cc/?url=',\n    M3U8TV:'https://jx.m3u8.tv/jiexi/?url=',\n    道长仓库通免:function (url,timeout){\n        return ParseS.defaultParseWeb(url,timeout);\n    },\n    FuXing: function(vipUrl) {\n        try {\n            //if(vipUrl.indexOf('v.youku')!=-1){\n            //    vipUrl = (JSON.parse(request(vipUrl, {redirect:false, withHeaders:true})).headers.location + '').replace(/\\?.*/,'');\n            //}\n            var ref = 'https://jx.xuetuiguang.cn/jiexi/?url=' + vipUrl;\n            var parse = ref;\n            var api = 'https://jx.xuetuiguang.cn/jiexi/apiu_fx.php';\n            return this.PanGu(vipUrl, [ref, parse, api]);\n        } catch (e) {\n            return '';\n        }\n    },\n};\n\nObject.assign(ParseS, originalParseS, MyParseS);\n//覆盖顺序，第三个覆盖第二个然后覆盖第一个\n\n\nfunction aytmParse(vipUrl,strTitle,timeout,playUrl) {\n    // 参数1:正版网址地址 参数2 定向解析接口名称 参数3 x5解析超时 参数4 完整的播放链接\n    strTitle = strTitle||'';\n    vipUrl = decodeURIComponent(vipUrl);\n    if(!/miguvideo/.test(vipUrl)){\n        vipUrl=vipUrl.split('#')[0].split('?')[0];\n    }\n    playUrl=decodeURIComponent(playUrl)||vipUrl||'';\n    // log('传入aytmParse的超时:'+timeout);\n    timeout = parseInt(timeout)||parseInt(getVar('dp.jxTimeout','5000'))||5000;\n\n    //-------------------------------------------------\n    let jxsRoute = \"hiker://files/cache/MyJiexi.json\";\n    let MyJiexi = {};\n    let jiexis = {};\n    try {\n        MyJiexi = JSON.parse(fetch(jxsRoute));\n        jiexis = MyJiexi.jiexis.filter(it=>it.name===MyJiexi.now)[0];\n    }catch (e) {}\n    function getPlayJx(key){\n        let playUrlList = [];//批量播放地址列表\n        let nameList = [];\n        let jxs = jiexis[key]; // 适用于这个网站的解析列表\n        if(jxs){\n            for(let i in jxs){\n                if(typeof ParseS[jxs[i]] == 'string'&&ParseS[jxs[i]].match(/http.*?=/)){\n                    playUrlList.push(ParseS[jxs[i]]+vipUrl);\n                    nameList.push(jxs[i]);\n                }\n            }\n        }\n        // return playUrlList\n        return {playUrlList:playUrlList,nameList:nameList}\n    }\n    function getLazyList(key){//只获取备胎列表的免嗅探解析列表\n        let parses = [];\n        let jxs = jiexis[key]||[]; // 适用于这个网站的解析列表\n        // log(jxs);\n        if(jxs){\n            for(let i in jxs){\n                if(typeof ParseS[jxs[i]] == 'function'&&!/通免/.test(ParseS[jxs[i]].toString())){\n                    parses.push({\n                        name:jxs[i],\n                        // rule:ParseS[jxs[i]]\n                    })\n                }\n            }\n        }\n        return parses\n    }\n    var extra = {};\n    var parses = []; //免嗅探列表\n    //-------------------------------------------------------\n    if(!strTitle){\n        if(/LT/.test(vipUrl)){\n            str = mySet.lt;\n            extra = getPlayJx('lt');\n            parses = getLazyList('lt',str);\n        } else if(/renrenmi/.test(vipUrl)){\n            str = mySet.rr;\n            extra = getPlayJx('rr');\n            parses = getLazyList('rr',str);\n        }else if(/wuduyun/.test(vipUrl)){\n            str = mySet.wd;\n            extra = getPlayJx('wd');\n            parses = getLazyList('wd',str);\n        }else if(/yanaifei|xinluan|LT|ruifenglb|suoyo|xfy|renrenmi|RongXingVR|xueren|wuduyun|laodi|Naifeimi|daodm|XMMT|v020c/.test(vipUrl)){\n            str = mySet.oth;\n            extra = getPlayJx('oth');\n            parses = getLazyList('oth',str);\n        }else{\n            var host;\n            try{\n                host = vipUrl.match(/\\.(.*?)\\//)[1];\n            }catch(e){\n                if(!/^http/.test(playUrl)){\n                    return \"断插调用失败！\\n非正常的vip正版地址且未识别原站解析播放地址\";\n                }else{\n                    return ParseS.道长仓库通免(playUrl,timeout)\n                }\n            }\n            //host = decodeURIComponent(host);\n            switch (mySet.qju) {\n                case \"默认\":\n                    switch (host) {\n                        case \"qq.com\":\n                            str = mySet.tx;\n                            extra = getPlayJx('tx');\n                            parses = getLazyList('tx');\n                            break;\n                        case \"iqiyi.com\":\n                            str = mySet.qy;\n                            extra = getPlayJx('qy');\n                            parses = getLazyList('qy');\n                            break;\n                        case \"youku.com\":\n                            str = mySet.yk;\n                            extra = getPlayJx('yk');\n                            parses = getLazyList('yk');\n                            break;\n                        case \"alizy\":\n                            str = mySet.al;\n                            extra = getPlayJx('al');\n                            parses = getLazyList('alizy');\n                            break;\n                        case \"mgtv.com\":\n                            str = mySet.mg;\n                            extra = getPlayJx('mg');\n                            parses = getLazyList('mg');\n                            break;\n                        case \"bilibili.com\":\n                            str = mySet.bl;\n                            extra = getPlayJx('bl');\n                            parses = getLazyList('bl');\n                            break;\n                        case \"sohu.com\":\n                            str = mySet.sh;\n                            extra = getPlayJx('sh');\n                            parses = getLazyList('sh');\n                            break;\n                        case \"tv.sohu.com\":\n                            str = mySet.sh;\n                            extra = getPlayJx('sh');\n                            parses = getLazyList('sh');\n                            break;\n                        case \"ixigua.com\":\n                            str = mySet.xg;\n                            extra = getPlayJx('xg');\n                            parses = getLazyList('xg');\n                            break;\n                        case \"pptv.com\":\n                            str = mySet.pp;\n                            extra = getPlayJx('pp');\n                            parses = getLazyList('pp');\n                            break;\n                        case \"miguvideo.com\":\n                            str = mySet.mi;\n                            extra = getPlayJx('mi');\n                            parses = getLazyList('mi');\n                            break;\n                        case \"le.com\":\n                            str = mySet.le;\n                            extra = getPlayJx('le');\n                            parses = getLazyList('le');\n                            break;\n                        case \"1905.com\":\n                            str = mySet.one;\n                            extra = getPlayJx('one');\n                            parses = getLazyList('one');\n                            break;\n                        case \"fun.tv\":\n                            str = mySet.fun;\n                            extra = getPlayJx('fun');\n                            parses = getLazyList('fun');\n                            break;\n                        default:\n                            str = mySet.oth;\n                            extra = getPlayJx('oth');\n                            parses = getLazyList('oth');\n                            break;\n                    }\n                    break;\n                default:\n                    str = mySet.qju;\n                    break;\n            }\n        }\n    }else{\n        log('魔断执行定向解析线路头:'+strTitle);\n        str = strTitle;\n    }\n    let withBatch = !!(MyJiexi.isAuto && MyJiexi.autoMode === '速度优先');\n    let withBatchOrder = !!(MyJiexi.isAuto && /顺序优先|嗅探优先/.test(MyJiexi.autoMode));\n    let singleBack = MyJiexi.singleBack||false; //吊毛模式。单个结果直接返回，停止后面的\n    let ignore_mx = MyJiexi.ignore_mx||false; //忽略免嗅,嗅探优先模式使用\n    let use_mx = !(MyJiexi.autoMode === '嗅探优先' && MyJiexi.ignore_mx); // 只要不是免嗅优先模式下的忽略免嗅,都使用免嗅\n    let dmPath = 'hiker://files/cache/diaomao.txt';//吊毛模式过滤文件路径\n    let dmUrls;\n    try {\n        dmUrls = fetch(dmPath).trim().split('\\n').filter(it=>it&&!it.startsWith('//'));\n    }catch (e) {\n        dmUrls = [];\n    }\n    function hasDm(videoUrl,dmUrls){//播放地址是否为吊毛视频\n        if(dmUrls.length<1){\n            return false\n        }\n        for(let dmUrl of dmUrls){\n            if((new RegExp(dmUrl)).test(videoUrl)){//播放地址包含吊毛标志的地址\n                return true\n            }\n        }\n        return false\n    }\n\n    function unique2(array){//去重函数\n        return Array.from(new Set(array));\n    }\n    function ArrSet(Arr, id) {//对象数组去重\n        var obj = {};\n        const arrays = Arr.reduce((setArr, item) => {\n            obj[item[id]] ? '' : obj[item[id]] = true && setArr.push(item);\n            return setArr;\n        }, []);\n        return arrays;\n    }\n    function sortByKey(array, key, order) {//对象数组按某个键值排序\n        return array.sort(function(a, b) {\n            var x = parseInt(a[key].match(/(\\d+)/)[1]);//修复大于10出问题\n            var y = parseInt(b[key].match(/(\\d+)/)[1]);\n            // log('x:'+x+\",y:\"+y);\n            if (order) {\n                return ((x < y) ? -1 : ((x > y) ? 1 : 0))\n            } else {\n                return ((x < y) ? ((x > y) ? 1 : 0) : -1)\n            }\n        })\n    }\n    if (typeof ParseS[str] == 'function') { // 主配置放免嗅才会触发(不太友好,躺平不想优化)\n        if(/通免/.test(str)){\n            return ParseS[str](vipUrl,timeout);\n        }\n        var url;\n        var task = function(obj) {\n            eval('var config_dp =' + fetch(getVar('oldConfig')));\n            eval(fetch(config_dp.cj));\n            return aytmParse(obj.vipUrl,obj.name,obj.timeout);\n        };\n        let t = (new Date()).getTime();\n        if (Array.isArray(extra.playUrlList) && extra.playUrlList.length > 0) {\n            extra.nameList = unique2(extra.nameList);\n            extra.playUrlList = unique2(extra.playUrlList);\n        }else{\n            extra.nameList = [];\n            extra.playUrlList = [];\n        }\n        function getMyUrls(urls){\n            return urls.map((it) => {\n                let turl = it.split(';')[0];\n                if (it.includes(\"#isVideo=true#\") && !turl.includes(\"#isVideo=true#\")) {\n                    turl += \"#isVideo=true#\";\n                }\n                return turl\n            });\n        }\n\n        function getMyHeaders(urls){\n            return urls.map((it) => {\n                if (!/;/.test(it) || it.split(';').length < 2) {\n                    return {}\n                } else {\n                    let head = it.split(';')[1];\n                    if (!/@/.test(head) || !/{|}/.test(head)) {\n                        return {}\n                    }\n                    head = head.split(\"{\")[1].split(\"}\")[0];\n                    //head = head.replace(/{|}/g,'');\n                    head = head.split('&&');\n                    let obj = {};\n                    for (let i in head) {\n                        let key = head[i].split('@')[0];\n                        let value = head[i].split('@')[1].replace(/;/, ';');\n                        obj[key] = value;\n                    }\n                    return obj\n                }\n            });\n        }\n\n        function getMyPlayUrlList(){\n            if(Array.isArray(extra.playUrlList)){\n                // return extra.playUrlList.map(it=>'video://'+it.replace('?url=','?id='+t+'&url=').replace('?v=','?id='+t+'&v='));\n                return extra.playUrlList.map(it=>'video://'+it);\n            }\n            return []\n        }\n\n\n        if(!withBatchOrder||strTitle) {//不开多线路顺序优先或者指定了解析\n            url = ParseS[str](vipUrl,timeout);\n        }\n        else{//开了多线路顺序优先执行免嗅多任务\n            if(typeof ParseS[str] == 'function'&&!/通免/.test(ParseS[str].toString())){\n                parses.unshift({name:str}); //把主配置的免嗅探加入到多任务列表\n            }\n            parses = ArrSet(parses,'name'); //去重\n            if(use_mx) { // 如果使用免嗅,先多任务跑免嗅\n                var count = parses.length; //设置任务数量\n                log('魔断开启多任务解析,任务数量:' + count);\n                log('解析列表:' + JSON.stringify(parses));\n                var parseRet = []; //解析结果列表\n                let tasks = parses.map((it, idex) => {\n                    return {\n                        func: task,\n                        param: {\n                            name: it.name,\n                            // rule:it.rule,\n                            vipUrl: vipUrl,\n                            timeout: timeout\n                        },\n                        id: \"task\" + idex\n                    }\n                });\n                showLoading(\"魔断并发解析中，剩余解析:\" + count);\n\n                function isDm(ret) {\n                    if (!ret) {\n                        return true\n                    }\n                    return hasDm(ret.split('#')[0].split(';')[0], dmUrls)\n                }\n\n                be(tasks, {\n                    func: function (obj, id, error, ret) {\n                        log(\"监听到任务\" + id + '已结束,error:' + error + ',ret:' + ret);\n                        ret = ret || '';\n                        parseRet.push({\n                            task: id,\n                            ret: ret,\n                            name: tasks.filter(it => it.id === id)[0].param.name\n                        });\n\n                        if (singleBack) {//吊毛模式开始的话,判断ret有效性\n                            log('任务' + id + '结果是吊毛?' + isDm(ret));\n                            if (!isDm(ret) && ParseS.isVideo(ret.split('#')[0].split(';')[0])) {\n                                hideLoading();\n                                log('吊毛模式中断解析并返回视频' + ret);\n                                return 'break'\n                            }\n                        }\n                        count -= 1; //完成了任务，任务数量-1\n                        //log(obj);\n                        if (count > 0) {\n                            showLoading(\"魔断并发解析中，剩余解析:\" + count)\n                        } else {\n                            hideLoading();\n                        }\n                    },\n                    param: {//传到监听函数的obj参数里\n                        hi: \"ccc\",\n                    }\n                });//执行多任务\n                // let valuable = parseRet.filter(it=>/m3u8|mp4/.test(it.ret));\n                log(\"多任务执行结果数:\" + parseRet.length);\n                let valuable = [];\n                parseRet.forEach((it)=>{\n                    if(it.ret){\n                        if(/names/.test(it.ret)&&/urls/.test(it.ret)){\n                            log('尝试聚合解析解包:'+it.ret);\n                            try {\n                                let rets = JSON.parse(it.ret.replace(/#isVideo=true#/g,''));\n                                rets.names.forEach((name,idex)=>{\n                                    valuable.push({\n                                        name:name,\n                                        ret:rets.urls[idex],\n                                        task:it.task,\n                                    });\n                                });\n                            }catch (e) {\n                                log('解包发生错误:'+e.message);\n                            }\n                        }else if(ParseS.isVideo(it.ret.split('#')[0].split(';')[0])){\n                            valuable.push(it);\n                        }else if(it.ret.startsWith('video://')){\n                            valuable.push(it);\n                        }\n                    }\n                });\n                // let valuable = parseRet.filter(it => it.ret && ParseS.isVideo(it.ret.split('#')[0].split(';')[0]));\n                valuable = valuable.filter(it => !isDm(it.ret));//过滤吊毛视频\n                log('多任务顺序执行有效结果:' + JSON.stringify(valuable));\n                if (valuable.length > 1) {//多线路\n                    valuable = sortByKey(valuable, 'task', true);//升序排列\n                    let urls = valuable.map(it => it.ret);//取出链接,缓存前的\n                    if (getVar('dp.cacheVideo', 'true') === 'true' && parseInt(getAppVersion()) >= 2255) {//开始缓存\n                        log(\"尊敬的魔断用户，视频缓存已启用，请尽情享受看剧时光\");\n                        let videosCache = urls.map((it) => {\n                            let headers = {};\n                            if (it.split(\";\").length > 1) {\n                                let head = it.split(';')[1];\n                                if (/@/.test(head) && /{|}/.test(head)) {\n                                    //head = head.replace(/{|}/g,'');\n                                    head = head.split(\"{\")[1].split(\"}\")[0];\n                                    head = head.split('&&');\n                                    for (let i in head) {\n                                        let key = head[i].split('@')[0];\n                                        let value = head[i].split('@')[1].replace(/;/, ';');\n                                        headers[key] = value;\n                                    }\n                                }\n                            }\n                            return {\n                                url: it.split(\";\")[0].split(\"#\")[0],\n                                options: {\n                                    headers: headers\n                                }\n                            }\n                        });\n                        var data = batchCacheM3u8(videosCache);\n                        data = data.map((it, id) => {\n                            let extra = \"\";\n                            if (urls[id].split(\";\").length > 1) {\n                                extra = \";\" + urls[id].split(\";\")[1];\n                            } else if (urls[id].split(\"★\").length > 1) {\n                                extra = \"★\" + urls[id].split(\"★\")[1];\n                            }\n                            if (it + \"\" !== \"null\") {\n                                return it + extra\n                            } else {\n                                return urls[id]\n                            }\n                        });\n                        urls = data\n                    }\n                    // log('排序完毕后结果:'+JSON.stringify(valuable));\n                    let names = valuable.map(it => it.name);\n                    let headers = getMyHeaders(urls);\n                    urls = getMyUrls(urls);\n                    if(MyJiexi.autoMode === '嗅探优先'){\n                        urls = urls.concat(getMyPlayUrlList());\n                        names = names.concat(extra.nameList);\n                        // headers = headers.concat(extra.nameList.map((it)=>{return {}}));\n                    }\n                    return JSON.stringify({urls: urls, headers: headers, names: names});\n\n                } else if (valuable.length === 0) {\n                    if (extra.nameList.length < 1) {\n                        hideLoading();\n                        return 'toast://芭比Q了,多任务免嗅解析全军覆没并且没有可用的json|x5解析了'\n                    }\n                    showLoading(\"魔断多任务免嗅失败,尝试json|x5\");\n                    //排除第一个\n                    let extra2 = {\n                        nameList: extra.nameList,\n                        playUrlList: extra.playUrlList.slice(1),\n                    }\n                    if(MyJiexi.autoMode === '嗅探优先'){\n                        return JSON.stringify({\n                            urls: getMyPlayUrlList(),\n                            names: extra.nameList\n                        });\n                    }else{\n                        return ParseS.defaultParseWeb ? ParseS.defaultParseWeb(extra.playUrlList[0], timeout, extra2) : extra.playUrlList[0];\n                    }\n                    // log(extra.playUrlList[0]);\n                    // log(extra2);\n\n                } else {\n                    // 免嗅后只有一个结果,嗅探优先自动拼x5和json, 顺序优先自动返回一个播放链接\n                    if(MyJiexi.autoMode === '嗅探优先') {\n                        let urls = valuable.map(it => it.ret);//取出链接,缓存前的\n                        let names = valuable.map(it => it.name);\n                        let headers = getMyHeaders(urls);\n                        urls = getMyUrls(urls);\n                        names = names.concat(extra.nameList);\n                        urls = urls.concat(getMyPlayUrlList());\n                        // headers = headers.concat(extra.nameList.map((it)=>{return {}}));\n                        return JSON.stringify({\n                            urls: urls,\n                            names: names,\n                            headers:headers\n                        });\n                    }else{\n                        return valuable[0].ret\n                    }\n                }\n            }else{ // 纯video://分支\n                if (extra.nameList.length < 1) {\n                    hideLoading();\n                    return 'toast://芭比Q了,多任务免嗅解析全军覆没并且没有可用的json|x5解析了'\n                }\n                log(\"魔断多任务免嗅失败,尝试json|x5\");\n                return JSON.stringify({\n                    urls: getMyPlayUrlList(),\n                    names: extra.nameList\n                });\n            }\n        }\n        if(/^hiker:|^toast:|^rule:|^x5Rule:|^webRule:|^select/.test(url)){\n            return url;\n        }\n        if(!url&&!/^http/.test(vipUrl)){\n            return 'toast://魔断解析失败>'+vipUrl\n        }\n        // log(vipUrl+'免嗅探结果:'+url);\n        if (/^\\//.test(url)) {\n            url = 'https:' + url\n        }\n        // 魔断免嗅截取\n        // if (/=http/.test(url)) {\n        //     url = /&url=/.test(url) ? url : 'http' + decodeURIComponent(url.split('=http')[1]);\n        // }\n        /*if(url.match(/mgtv.com/g)=='mgtv.com'){\n            url = url + ';{Referer@https://www.mgtv.com}';\n        } else */\n        if (/\\.flv/.test(url)&&!/User-Agent/.test(url)) {\n            url = url + ';{User-Agent@app&&Referer@' + vipUrl + '}';\n        }\n        if (url === '' || url === vipUrl) {\n            return vipUrl;\n        } else if(!/#isVideo=true#/.test(url)){\n            return url + '#isVideo=true#';\n        }else{\n            return url\n        }\n    } else if (typeof ParseS[str] == 'string'&&ParseS[str].match(/http.*?=/)) {\n        // log(\"断插开始通用执行免嗅 defaultParseWeb:\"+timeout);\n        //log(\"默认x5\"+ParseS.defaultParseWeb);\n        if(withBatch){ // 速度优先\n            if(Array.isArray(extra.playUrlList)&&extra.playUrlList.length>0){\n                extra.playUrlList = extra.playUrlList.filter(it=>it!==(ParseS[str]||str) + vipUrl);\n                let nameList = extra.nameList;\n                nameList.unshift(str);\n                extra.nameList=unique2(nameList);\n                extra.playUrlList = unique2(extra.playUrlList);\n            }\n        }else{\n            extra = {}\n        }\n        return ParseS.defaultParseWeb?ParseS.defaultParseWeb((ParseS[str]||str) + vipUrl,timeout,extra):(ParseS[str]||str) + vipUrl;\n    } else if(typeof(str)==='string'&&str.length>1&&(typeof ParseS[str]=='undefined'||!ParseS[str])&&!/^http/.test(str)){\n        return 'toast://请先进行断插配置确保该解析存在!\\n检测到无效的解析配置:'+str;\n    }else {\n        return ParseS.defaultParse(str + vipUrl,timeout);\n    }\n}\n\nvar playParse = {\n    player_xx: function(jurl, Label) {\n        return $(jurl).lazyRule((k) => {\n            var jsUrl = JSON.parse(fetch(getVar('oldConfig'))).cj;\n            var Label = k;\n            var fa = ['letv', 'pptv', 'qq', 'youku', 'qiyi', 'iqiyi', 'mgtv', 'bilibili', 'sohu', 'migu', 'm1905', 'vip'];\n            var html = parseDom(request(input), Label);\n            eval(html.replace(/player_.*?={/, 'pdata={'));\n            eval(fetch(jsUrl));\n            if (pdata.url.substr(0, 8).match(/JT..JT../)) {\n                pdata.url = base64Decode(pdata.url);\n            }\n            if (pdata.url.substr(0, 8).match(/%..%../)) {\n                pdata.url = unescape(pdata.url);\n            }\n            if (fa.includes(pdata.from)) {\n                return aytmParse(pdata.url);\n            } else {\n                return pdata.url + '#isVideo=true#';\n            }\n        }, Label)\n    }\n};\nfunction mzPopup() {\n    /*\n    if (getVar(\"ijk-tx\", \"\") == \"1\") {\n        setItem(\"tixing\", \"1\")\n        clearVar(\"ijk-tx\")\n    }\n    if (getItem(\"tixing\", \"\") == \"\") {\n        confirm({\n            title: '免责声明',\n            content: '本程序不提供视频解析服务\\n所有内容均从用户分享中收集\\n仅供测试和学习交流\\n\\n确定即认可，不再提醒',\n            confirm: $.toString(() => {\n                putVar(\"ijk-tx\", \"1\");\n                refreshPage(false);\n                return \"toast://点击了确认\"\n\n            })\n        })\n    }\n     */\n}\n/*\nif (!getVar(\"tixing\")) {\n    mzPopup();\n    putVar('tixing','ok');\n}\n*/\nfunction saveButton(content,name) {\n    name = name||'';\n    var data = content.split('★★★');\n    if (data.length === 2) {\n        var _dt = parsePaste(data[0]);\n        content = _dt.substr(0, 6) !== 'error:' ? _dt : '';\n    }\n    data = content.split('★');\n    var type = data[0];\n    var arrList = [];\n    var objCode = {};\n    if (data.length > 2 && data[0] !== '直链') {\n        var objKey = data[1];\n        var objValue = data[2];\n        if (type === 'MyParseS') {\n            objValue = base64Decode(objValue);\n        }\n        if (objValue.split('function').length > 1) {\n            eval('objValue=' + objValue);\n        }\n        arrList.splice(0, 0, objKey); //添加项目非删除\n        objCode[objKey] = objValue;\n\n    } else if (type === '直链') {\n        arrList = data;\n        arrList.splice(0, 1);\n    } else {\n        arrList = null;\n    }\n    if (arrList != null) {\n        var parseRoute = getVar('parseRoute');\n        eval('var json =' + fetch(parseRoute));\n        Array.prototype.remove = function(val) {\n            let index = this.indexOf(val);\n            if (index > -1) {\n                this.splice(index, 1);\n            }\n        };\n        if(name){//删除名称列表和代码\n            json.title.remove(name);\n            delete json.codes[name];\n        }\n        arrList = arrList.concat(json.title);\n        json.title = Array.from(new Set(arrList));\n        Object.assign(json.codes, objCode);\n        if (type === '测试') {\n            eval('var config =' + fetch(getVar('oldConfig')));\n            eval(fetch(config.cj));\n            if (typeof ParseS[data[1]] == \"function\") {\n                return ParseS[data[1]](data[2]);\n            } else {\n                return ParseS.defaultParseWeb(ParseS[data[1]] + data[2]);\n            }\n        } else {\n            writeFile(parseRoute, $.stringify(json));\n            return \"toast://已保存内容\";\n        }\n    } else {\n        return \"toast://无法识别这个内容呢\"\n    }\n}\n// 以下代码千万不要放出来否则报错\nif (getItem('updateDate') != updateDate) {\n// if (true) {\n    // 把function变成string\n    let functionCode = saveButton + ';'+mzPopup;\n    // writeFile('hiker://files/cache/plscParse.html', fetch(_mySet.ckLink + 'plscParse.html'));\n    setItem('myFunction', functionCode);\n    setItem('updateDate', updateDate);\n}\nvar bjItem = {\n    hfPlugin: function(parseRoute) {\n        return $('#noLoading#').lazyRule((k) => {\n            if (fileExist(k)) {\n                var cjcache = getVar('cjCache');\n                eval('var json =' + fetch(k));\n                json.settings.cj = cjcache;\n                writeFile(k, $.stringify(json));\n                var oldRoute = getVar('oldConfig');\n                var oldConfig = json.settings;\n                oldConfig.cj = cjcache;\n                writeFile(oldRoute, $.stringify(oldConfig));\n                refreshPage(false);\n                return 'toast://恢复成功';\n            } else {\n                return 'toast://需要先拉取列表'\n            }\n        }, parseRoute)\n    },\n    pullCode: function(k) {\n        return $('#noLoading#').lazyRule((k) => {\n            var pullMode = k[0];\n            var parseRoute = k[1];\n            var parseFile = fetch(parseRoute);\n            if (!parseFile) {\n                var settings = fetch(getVar('oldConfig'));\n                settings = !settings ? {} : JSON.parse(settings);\n                var json = {};\n                json.settings = settings;\n                json.title = [];\n                json.codes = {};\n            } else {\n                eval('var json =' + parseFile);\n            }\n            var parseTitle = [];\n            var parseCode={};\n            var cjLink = getVar('pluginLink');\n            try {\n                if(/@base64:\\/\\//.test(cjLink)){\n                    eval(base64Decode(cjLink.split('@base64://')[1]));\n                }else if(/插件名/.test(cjLink)){\n                    let realLink = cjLink.split('插件名')[0].replace(/[\\s]/g,'');\n                    log('解析云剪切板:'+realLink);\n                    let yPaste = parsePaste(realLink);\n                    if(/@base64:\\/\\//.test(yPaste)){\n                        try {\n                            eval(base64Decode(yPaste.split('@base64://')[1]));\n                            if(typeof ParseS==='undefined'){\n                                return 'toast://拉取个鸡毛插件,里面连ParseS对象都没有!'\n                            }\n                        }catch (e) {\n                            return 'toast://鸡毛插件执行报错:\\n'+e.message;\n                        }\n                    }else{\n                        return 'toast://未能识别云剪切板中的内容:\\n'+yPaste.substring(0,100);\n                    }\n                } else if (cjLink === 'Q神') {\n                    let jiexi = fetch('hiker://files/jiexi/jiexi.txt').split('\\n');\n                    for (i in jiexi) {\n                        let title=jiexi[i].split('&&')[0];\n                        let code=jiexi[i].split('&&')[1];\n                        parseTitle.push(title);\n                        parseCode[title]=code;\n                    }\n                }\n                // }else if(/^#[a-zA-Z0-9]{2,10}$/.test(cjLink)){//福利口令2到10位\n                else if(/^#[\\S]{2,10}$/.test(cjLink)){//福利口令2到10位任意非空字符串\n                    const {taskCall, taskRun,taskReq} = $.require(\"hiker://page/taskCall?rule=道长仓库Pro\");\n                    // log('开始执行任务仓库获取断念插件福利口令');\n                    let result = taskCall(17,'DnFuli',[cjLink]);\n                    if (result.status === 0) {\n                        let ret = JSON.parse(result.result);\n                        // log(ret);\n                        if(ret.opt==='error'){\n                            return 'toast://'+ret.msg;\n                        }else if(ret.opt==='url'){\n                            let html = fetch(ret.ret);\n                            let arr = html.includes('http')? html:base64Decode(html);\n                            let jiexi = arr.match(/[\\S]*?,.*?[\\s]/g);\n                            for (let i in jiexi) {\n                                let title=jiexi[i].split(',')[0];\n                                let code=jiexi[i].split(',')[1].split(\"\\n\")[0];\n                                if(!/^http|function/.test(code)&&code.length>20){//base64编码的函数\n                                    code = base64Decode(code);\n                                }\n                                parseTitle.push(title);\n                                parseCode[title]=/function/.test(code)?eval(code):code;\n                            }\n                        }else if(ret.opt==='jx'){\n                            if(/[\\S]*?,http[\\S]/.test(ret.ret)){\n                                let title = ret.ret.split(',')[0];\n                                let code = ret.ret.split(',')[1].split('\\n')[0];\n                                parseTitle.push(title);\n                                parseCode[title]=code;\n                            }else if(/^http/.test(ret.ret)){\n                                let title = cjLink.split('#')[1];\n                                let code = ret.ret.split('\\n')[0];\n                                parseTitle.push(title);\n                                parseCode[title]=code;\n                            }else{\n                                return 'toast://未知的福利:\\n'+ret.ret;\n                            }\n                        }else if(ret.opt==='vipJx'){\n                            let title = cjLink.split('#')[1];\n                            let code = ret.ret;\n                            // log(code);\n                            parseTitle.push(title);\n                            parseCode[title]=/function/.test(code)?eval(code):code;\n                        }\n                    }else{\n                        return 'toast://仓库非最新版或者福利社功能开发中'\n                    }\n                }else if(cjLink==='断插'){\n                    eval(fetch(\"hiker://files/cache/Parse_Dn.js\"));\n                    parseTitle=Object.keys(ParseS);\n                }else if(/^hiker:\\/\\/|^file:\\/\\/|^http|^\\/storage\\/|^\\/sdcard\\//.test(cjLink)){\n                    if(/^\\/storage\\/|^\\/sdcard\\//.test(cjLink)){\n                        cjLink = 'file://'+cjLink;\n                    }\n                    eval(fetch(cjLink));\n                    parseTitle=Object.keys(ParseS);\n                }else{\n                    return 'toast://拉取口令有误'\n                }\n            } catch (e) {\n                log(e.message);\n            }\n            var jxJudge = typeof ParseS == 'object';\n            var lbJudge = typeof(parseTitle) == 'object';\n            if (jxJudge || lbJudge) {\n                // if (pullMode === '列表') {\n                //     if (!lbJudge) {\n                //         parseTitle = Object.keys(ParseS);\n                //     }\n                //     var newParseTitle = json.title.concat(parseTitle);\n                //     json.title = Array.from(new Set(newParseTitle));\n                // }\n                // 不管拉取代码还是列表都要把列表拉了\n                if (!lbJudge) {\n                    parseTitle = Object.keys(ParseS);\n                    log(parseTitle);\n                }\n                var scObject = [\"CityIP\", \"pcUA\", \"cacheM3u8\",\"isVideo\",\"timeOut\",\"源码匹配\", \"defaultParse\",\"defaultParseWeb\",\"maoss\", \"LLQ\",\"parseLc\"];\n                parseTitle = parseTitle?parseTitle.filter(it=>!scObject.includes(it)):[];\n                var newParseTitle = json.title.concat(parseTitle);\n                json.title = Array.from(new Set(newParseTitle));\n\n                if (pullMode === '代码') {\n                    if (typeof originalParseS == 'object') {\n                        for (let i in scObject) {\n                            delete originalParseS[scObject[i]];\n                        }\n                        // originalParseS =originalParseS.filter(it=>!scObject.includes(Object.getOwnPropertyNames(it)[0]));\n                        Object.assign(json.codes, originalParseS);\n                    } else {\n                        if(typeof(ParseS)==\"undefined\"){\n                            Object.assign(json.codes, parseCode);\n                            //return \"toast://没有代码，不可拉取\"\n                        }else{\n                            Object.assign(json.codes, ParseS);\n                        }\n                    }\n                }\n                //var newFile = tools.toJSON(json);//自定义stringify函数，带有转义字符\n                var newFile = $.stringify(json); //JSON.parse会报错\n                writeFile(parseRoute, newFile);\n                refreshPage(false);\n                return 'toast://拉取' + pullMode + '成功';\n            } else {\n                return 'toast://未获取到对象';\n            }\n        }, [k, _mySet.parseRoute])\n    },\n    pullScript: function(cj, x5) {\n        return $('#noLoading#').lazyRule((k) => {\n            var cjFrom = 'hiker://page/Parse_Dn.js?rule=MyFieldᴰⁿ';\n            var x5From = 'hiker://page/Parse_Dn.html?rule=MyFieldᴰⁿ';\n            try {\n                var cjFile = JSON.parse(fetch(cjFrom)).rule;\n                var x5File = JSON.parse(fetch(x5From)).rule;\n                writeFile(k[0], cjFile);\n                writeFile(k[1], x5File);\n                clearVar('jxOldV');\n                clearVar('jxNewV');\n                refreshPage(false);\n                return 'toast://拉取成功';\n            } catch (e) {\n                return 'toast://未成功获取内容';\n            }\n        }, [cj, x5])\n    },\n    xlSelect: function(bianji, lbLength) {\n        return \"select://\" + JSON.stringify({\n            options: ['‘‘’’<span style=\"color:red\" title=\"删除||' + bianji + '\">删 除', '‘‘’’<span style=\"color:#F57474\" title=\"隐藏||' + bianji + '\">隐 藏', '‘‘’’<span style=\"color:#FF8000\" title=\"修改||' + bianji + '\">修 改', '‘‘’’<span style=\"color:#098AC1\" title=\"置顶||' + bianji + '0' + '\">置 顶', '‘‘’’<span style=\"color:#098AC1\" title=\"移动||' + bianji + '\">移 动', '‘‘’’<span style=\"color:#098AC1\" title=\"置底||' + bianji + lbLength + '\">置 底', '‘‘’’<span style=\"color:#04B431\" title=\"分享||' + bianji + '\">地板分享', '‘‘’’<span style=\"color:#04B431\" title=\"云分享||' + bianji + '\">云板分享'],\n            col: '2',\n            js: $.toString(() => {\n                var parseRoute = getVar('parseRoute');\n                eval('var json =' + fetch(parseRoute));\n                var newInput = parseDomForHtml(input, 'span&&title').split('||');\n                // 修改,迪迪,0   操作类型,名称,索引\n                var type = newInput[0];\n                var name = newInput[1];\n                var num = newInput[2];\n                var num2 = newInput[3];\n                switch (type) {\n                    case \"删除\":\n                        let k = [name, num];\n                        // 总感觉筛选或者搜索后，由于num的位置不对可能会删除错,事实如此,已修?\n                        return $(\"即将删除: \" + name).confirm((k) => {\n                            var name = k[0];\n                            var num = k[1];\n                            var parseRoute = getVar('parseRoute');\n                            eval('var json =' + fetch(parseRoute));\n                            if (json.codes.hasOwnProperty(name)) {\n                                delete json.codes[name];\n                            }\n                            num = json.title.indexOf(name); //这样才会得到正确的索引\n                            json.title.splice(num, 1);\n                            writeFile(parseRoute, $.stringify(json));\n                            refreshPage(false);\n                            return \"toast://已将〖\" + name + \"〗删除\";\n                        }, k);\n                    case \"隐藏\":\n                        return $(\"hiker://empty#noLoading#\").lazyRule((k) => {\n                            var name = k[0];\n                            var num = k[1];\n                            var parseRoute = getVar('parseRoute');\n                            eval('var json =' + fetch(parseRoute));\n                            if (json.codes.hasOwnProperty(name)) {\n                                num = json.title.indexOf(name); //这样才会得到正确的索引\n                                json.title.splice(num, 1);\n                                writeFile(parseRoute, $.stringify(json));\n                                refreshPage(false);\n                                return \"toast://已将〖\" + name + \"〗隐藏\";\n                            } else {\n                                return \"toast://可能是个网址, 您可选择删除\";\n                            }\n                        }, [name, num]);\n                    case \"修改\":\n                        //if (json.codes[name]) {\n                        var nCode = name;\n                        var titles = json.title;\n                        var nName = \"这是名称\";\n                        if (json.codes[name]) {\n                            nCode = json.codes[name].toString();\n                            nName = name;\n                        }\n                        return $(\"hiker://empty#noRecordHistory#\").rule((k,titles) => {\n                            var d = [];\n                            eval(getItem('myFunction'));\n                            var name = k[0];\n                            var code = k[1];\n                            d.push({\n                                title: '保 存',\n                                url: saveButton + \"saveButton(getVar('input_edit'),name);back();\",\n                                col_type: \"input\",\n                                desc: \"建议按默认的代码格式修改哦\",\n                                extra: {\n                                    onChange: \"putVar('input_edit', input)\",\n                                    type: \"textarea\",\n                                    height: \"-1\",\n                                    highlight: true,\n                                    titleVisible: false,\n                                    defaultValue: '修改★' + name + '★' + code,\n                                }\n                            });\n                            d.push({\n                                title: '‘‘’’<small><span style=\"color:#6EB897\">格式为：操作类型★标题★function(){自定义内容}<br>请勿填入其他格式',\n                                url: $('#noLoading#').lazyRule((saveButton,name,titles) => {\n                                    let tmpAr = getVar('input_edit').split('★');\n                                    if(tmpAr.length<2){\n                                        return 'toast://修改格式有误，访问被拒绝'\n                                    }\n                                    let newName = tmpAr[1];\n                                    if(newName!==name&&titles.includes(newName)){\n                                        return $('检测到同名接口:'+newName+',是否覆盖?').confirm((saveButton,name)=>{\n                                            let code = saveButton(getVar('input_edit'),name);\n                                            back();\n                                            return 'toast://已保存修改\\n请自行检测覆盖后的内容';\n                                        },saveButton,name);\n                                    }else{\n                                        let code = saveButton(getVar('input_edit'),name);\n                                        back();\n                                        return 'toast://已保存修改';\n                                    }\n                                    // if(typeof(code)==='string'&&code.length>2){\n                                    //     return code\n                                    // }else{\n                                    //     return 'toast://已保存修改';\n                                    // }\n                                }, saveButton,name,titles),\n                                desc: '‘‘’’<big><big><span style=\"color:#298A08\">保 存',\n                                col_type: 'text_center_1'\n                            });\n                            setResult(d);\n                        }, [nName, nCode],titles) //[name, json.codes[name].toString()])\n                    /*} else {\n                        return \"toast://只有网址或者标题, 不支持修改\"\n                    }*/\n                    case \"置顶\":\n                    case \"置底\":\n                        eval('var json =' + fetch(parseRoute));\n                        num = json.title.indexOf(name); //这样才会得到正确的索引\n                        if(num>-1){\n                            var item = json.title.splice(num, 1);\n                            json.title.splice(num2, 0, item[0]);\n                            writeFile(parseRoute, $.stringify(json));\n                            refreshPage(false);\n                        }else{\n                            return 'toast://没找到:'+name;\n                        }\n                        break;\n                    case \"移动\":\n                        return $('hiker://empty#noLoading#').lazyRule((k) => {\n                            putVar('bianji', '移动#' + k);\n                            refreshPage(false);\n                            return input;\n                        }, num);\n                    case \"分享\":\n                    case \"云分享\":\n                        if (json.codes[name]) {\n                            var parseText = typeof json.codes[name] == 'function' ? $.stringify(json.codes[name]) : json.codes[name];\n                            parseText = 'MyParseS★' + name + '★' + base64Encode(parseText);\n                        } else {\n                            var parseText = '直链★' + json.title[num];\n                        }\n                        if (type == '云分享' && parseText.substr(0, 8) == 'MyParseS') {\n                            parseText = sharePaste(parseText);\n                            return parseText.substr(0, 6) != 'error:' ? 'copy://' + parseText + '\\n★★★\\n' + 'MyParseS：' + name : 'toast://分享失败!!云剪贴板可能挂了';\n                        } else {\n                            return 'copy://' + parseText;\n                        }\n                    default:\n                        return 'toast://暂不支持';\n                } //switch的\n            }) //String的\n        }) //stringify的\n    },\n    xjParse: function() {\n        return $(\"hiker://empty#noHistory#\").rule(() => {\n            var d = [];\n            eval(getItem('myFunction'));\n            d.push({\n                title: '保 存',\n                url: saveButton + \"saveButton(input);back();clearVar('input_add')\",\n                col_type: \"input\",\n                desc: \"输入正确格式内容\",\n                extra: {\n                    onChange: 'putVar(\"input_add\", input)',\n                    type: \"textarea\",\n                    height: \"-1\",\n                    highlight: true,\n                    titleVisible: false,\n                    defaultValue: getVar('input_add'),\n                }\n            });\n            d.push({\n                title: '‘‘’’<small><span style=\"color:#6EB897\">按描述诉格式输入, 请勿填入其他格式<br>本地口令: 操作类型★名称★代码<br>云口令: 链接★★★名称; 纯网址: 直链★url1★url2',\n                desc: '‘‘’’<big><big><span style=\"color:#298A08\">保 存',\n                url: $('noLoading').lazyRule((saveButton) => {\n                    return saveButton(getVar('input_add'));\n                }, saveButton),\n                col_type: 'text_center_1'\n            });\n            setResult(d);\n        })\n    },\n    ydParse: function(BJmode, i) {\n        return $('#noLoading#').lazyRule((k) => {\n            var A = k[0].split('#')[1];\n            var B = k[1];\n            var parseRoute = getVar('parseRoute');\n            eval('var json =' + fetch(parseRoute));\n            var item = json.title.splice(A, 1); // 1: 标记开始位置，2: 删除到哪个位置\n            json.title.splice(B, 0, item[0]); // 1: 同上，2: 0表示不删除，3: 添加对象\n            writeFile(parseRoute, $.stringify(json));\n            clearVar('bianji');\n            refreshPage(false);\n            return 'hiker://empty';\n        }, [BJmode, i])\n    },\n    plscParse: function() {\n        return $('hiker://empty#noRecordHistory#').rule(() => {\n            var d = [];\n            d.push({\n                title: '批量修改/删除解析',\n                desc: 'auto&&float',\n                // url: 'file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/cache/plscParse.html',\n                url: _mySet.batchRoute,\n                col_type: 'x5_webview_single'\n            })\n            setResult(d);\n        })\n    }\n};\n\nfunction setParse() {\n    $.require(\"hiker://page/Route?rule=MyFieldᴰⁿ\").setParse();\n}"},{"col_type":"movie_3","name":"调用路由","path":"Route","rule":"js:\nconst d = [];\nconst data = {};\n\ndata.oldConfig = \"hiker://files/cache/MyParseSet.json\";\ndata.cjRoute = \"hiker://files/cache/Parse_Dn.js\";\ndata.x5Route =\ngetPath('hiker://files/cache/Parse_Dn.html');\n\ndata.jxLazy = \"eval('var config =' + fetch('\" + data.oldConfig + \"'));eval(fetch(config.cj));aytmParse(input)\";\n\ndata.szParse = \"hiker://page/Route?rule=MyFieldᴰⁿ&type=设置#noHistory##noRecordHistory#\";\n\ndata.setParse = function() {\n    d.push({\n        desc: '795',\n        url: this.x5Route,\n        col_type: 'x5_webview_single'\n    });\n    var oldV = getVar('jxOldV');\n    var newV = getVar('jxNewV');\n    var versionTips = parseFloat(newV) > parseFloat(oldV) ? '‘‘有新版本: v' + newV : '‘‘';\n    var pics = [\n        'https://cdn.seovx.com/img/seovx-20-10%20(92).jpg',\n        'https://cdn.seovx.com/img/mom2018%20(207).jpg',\n        'https://tva4.sinaimg.cn/large/9bd9b167gy1fwrh5xoltdj21hc0u0tax.jpg',\n        'https://tva1.sinaimg.cn/large/005BYqpggy1fwreyu4nl6j31hc0u0ahr.jpg',\n        'https://s3.bmp.ovh/imgs/2021/10/d7e60b990742093d.jpeg',\n        'https://s3.bmp.ovh/imgs/2021/10/91ad6d6538bf8689.jpg',\n        'https://tva1.sinaimg.cn/large/005BYqpggy1fwresl5pmlj31hc0xcwka.jpg',\n        'https://tva3.sinaimg.cn/large/005BYqpggy1fwrgjdk74oj31hc0u0dqn.jpg',\n        'https://cdn.seovx.com/img/mom2018%20(320).jpg',\n        'https://cdn.seovx.com/img/mom2018%20(803).jpg'\n    ];\n    d.push({\n        img: pics[Math.floor(Math.random() * 10)],\n        title: versionTips + '’’<small><span style=\"color:#6EB897\"><br>　　点击上方头像进入编辑<br>点此进入论坛帖子列表',\n        desc: '当前版本: v' + oldV,\n        url: 'https://haikuoshijie.cn/user/1958',\n        col_type: 'movie_1'\n    });\n  setResult(d);\n}\n\nswitch (getParam(\"type\")) {\n    case \"设置\":\n        data.setParse();\n        //setResult(d);\n        break;\n    case \"编辑\":\n        $.require(\"hiker://page/jxItem?rule=MyFieldᴰⁿ\").jxList();\n        setResult(d);\n        break;\n\tcase \"主题\":\n\t     $.require(\"hiker://page/theme?rule=MyFieldᴰⁿ\").themeInit();\n        break;\n\tcase \"解析\":\n\t     $.require(\"hiker://page/jxManage?rule=MyFieldᴰⁿ\").jxManage();\n        break;\n    default:\n        $.exports = data;\n        break;\n}"},{"col_type":"movie_3","name":"解析项主界面","path":"jxItem","rule":"eval(JSON.parse(fetch('hiker://page/Parse_Dn.js?rule=MyFieldᴰⁿ')).rule);\nvar isLogin = function (){return true}\nfunction bbsYZ() {\n    var _0x47a9b4 = {\n        'JxSMn': function(_0x249952, _0x4abc15) {\n            return _0x249952 + _0x4abc15;\n        },\n        'LGwmC': '移动#',\n        'GvDVY': function(_0x461f2d, _0x540571) {\n            return _0x461f2d + _0x540571;\n        },\n        'WfeHD': '‘‘’’<small><span style=\"color:#FE9A2E\">',\n        'EqIls': '移动: ',\n        'Effbn': 'text_2',\n        'RxkxA': function(_0x32a7d0, _0x1a932c) {\n            return _0x32a7d0(_0x1a932c);\n        },\n        'VBGJH': 'jdRoute',\n        'BZgRt': function(_0x26984e, _0x5cc926) {\n            return _0x26984e === _0x5cc926;\n        },\n        'rgGCC': 'wDVEb',\n        'MczOW': function(_0x2880bf, _0x2d9306, _0x97787a) {\n            return _0x2880bf(_0x2d9306, _0x97787a);\n        },\n        'FUjdm': 'bbsYZ',\n        'lqFhb': function(_0x43bbe6) {\n            return _0x43bbe6();\n        },\n        'FURpy': function(_0x2265c2, _0xa1d568, _0x29de01) {\n            return _0x2265c2(_0xa1d568, _0x29de01);\n        },\n        'XIObB': 'var xdRoute=\\\"\\\";'\n    };\n    if (!_0x47a9b4['RxkxA'](getVar, _0x47a9b4['VBGJH'])) {\n        if (_0x47a9b4['BZgRt'](_0x47a9b4['rgGCC'], 'JVkAZ')) {\n            d['push']({\n                'title': _0x47a9b4['JxSMn'](_0x47a9b4['LGwmC'], i) == BJmode ? _0x47a9b4['JxSMn'](_0x47a9b4['GvDVY'](_0x47a9b4['WfeHD'], _0x47a9b4['EqIls']), xsList) : '‘‘’’<span style=\"color:#298A08\">' + xsList,\n                'url': bjItem['ydParse'](BJmode, i),\n                'col_type': _0x47a9b4['Effbn']\n            });\n        } else {\n            _0x47a9b4['MczOW'](putVar, _0x47a9b4['FUjdm'], _0x47a9b4['lqFhb'](isLogin||function (){return true}));\n            _0x47a9b4['FURpy'](putVar, 'jdRoute', _0x47a9b4['XIObB']);\n        }\n    }\n    return getVar(_0x47a9b4['FUjdm']);\n}\nvar jxItem = {\n    'jxList': function() {\n        var _0x4c0427 = {\n            'UVWoF': function(_0x26bb07, _0x221b4d) {\n                return _0x26bb07 + _0x221b4d;\n            },\n            'color':function(text, color) {\n                text += \"\";\n                if (text.indexOf(\"““””\") === 0) {\n                    text.replace(\"““””\", \"\");\n                }\n                return \"““””<font color='\" + color + \"'>\" + text + \"</font>\";\n            },\n            'kzWDK': function(_0x4854a9, _0x3e98c5) {\n                return _0x4854a9 + _0x3e98c5;\n            },\n            'XXyQr': '移动#',\n            'gtUnj': function(_0x59aaf7, _0x22c66b) {\n                return _0x59aaf7 + _0x22c66b;\n            },\n            'UtfWf': '‘‘’’<small><span style=\\\"color:#FE9A2E\\\">',\n            'QOvJV': '移动: ',\n            'ABEwB': '‘‘’’<span style=\\\"color:#298A08\\\">',\n            'ozzWG': 'text_2',\n            'nWfVR': function(_0x480f3a, _0x4c84fc) {\n                return _0x480f3a + _0x4c84fc;\n            },\n            'JCcNY': 'parseRoute',\n            'rgDIp': 'bianji',\n            'hoIdJ': '‘‘’’<big><span style=\\\"color:#6EB897\\\">新 建 解 析',\n            'FrGOH': function(_0x12d6db, _0x2a068d) {\n                return _0x12d6db < _0x2a068d;\n            },\n            'oCCSj': function(_0x19b178, _0x4ef8f6) {\n                return _0x19b178 === _0x4ef8f6;\n            },\n            'HZhlc': function(_0x5cae03, _0x26e242) {\n                return _0x5cae03 == _0x26e242;\n            },\n            'cgIeA': function(_0x25e368, _0x8bc8e9) {\n                return _0x25e368 + _0x8bc8e9;\n            },\n            'xdrFv': function(_0x4ab5d8, _0x21242f) {\n                return _0x4ab5d8 + _0x21242f;\n            },\n            'ywjux': function(_0x5e3051, _0x4e0230) {\n                return _0x5e3051(_0x4e0230);\n            }\n        };\n        var _0x1d8bb1 = getVar(_0x4c0427['JCcNY']);\n        var _0x3b89ab = parseFile['title'];\n        var _0x49da96 = getVar(_0x4c0427['rgDIp']);\n        d.push({\n            title: _0x4c0427['hoIdJ'],\n            desc:'注意:位置操作功能只在分类筛选为全部时生效\\n下方搜索按名称或地址,重置请留空或点解析数量按钮',\n            url: bjItem['xjParse'](),\n            col_type: 'text_center_1',\n            extra: {\n                lineVisible:false\n            }\n        });\n        d.push({\n            title:'搜索',\n            desc:'mengx',\n            col_type:'input',\n            extra: {\n                onChange: \"putVar('dp.searchJx',input)\",\n                titleVisible: true,\n                textSize: 11,\n                defaultValue:getVar('dp.searchJx',''),\n            },\n            url:$.toString(()=>{\n                refreshPage(true);\n                return 'hiker://empty'\n            })\n        });\n        let filters = ['全部','链接','json','免嗅'];\n        for(let o in filters){\n            d.push({\n                title:getVar('dn.jx_filter','全部')===filters[o]?'““””<span style=\"color:#298A08\">'+filters[o]:filters[o],\n                col_type:'scroll_button',\n                url:$('#noLoading#').lazyRule((it)=>{\n                    putVar('dn.jx_filter',it);\n                    refreshPage(true);\n                    return 'hiker://empty'\n                },filters[o]),\n            });\n        }\n        var _0x2ecbe5 = _0x3b89ab['length'];\n        var json={title:[],codes:{}};\n        let setFile = request('hiker://files/rules/DuanNian/MyParse.json');\n        try {\n            eval('json='+setFile);\n        }catch (e) {\n            log('Json解析发生了错误:'+e.message);\n        }\n        if(getVar('dn.jx_filter','全部')==='链接'){\n            _0x3b89ab = _0x3b89ab.filter(it=>(!/©$/.test(it))&&typeof(json.codes[_0x4c0427['nWfVR'](it, '')['replace'](/http.*\\/\\//g, '')])==='string');\n        }else if(getVar('dn.jx_filter','全部')==='免嗅'){\n            _0x3b89ab = _0x3b89ab.filter(it=>typeof(json.codes[_0x4c0427['nWfVR'](it, '')['replace'](/http.*\\/\\//g, '')])==='function');\n        }else if(getVar('dn.jx_filter','全部')==='json'){\n            _0x3b89ab = _0x3b89ab.filter(it=>(/©$/.test(it))&&typeof(json.codes[_0x4c0427['nWfVR'](it, '')['replace'](/http.*\\/\\//g, '')])==='string');\n        }\n        if(getVar('dp.searchJx','')){\n            _0x3b89ab = _0x3b89ab.filter(it=>(json.codes[_0x4c0427['nWfVR'](it, '')]+'').includes(getVar('dp.searchJx'))||it.includes(getVar('dp.searchJx','')));\n        }\n        d.push({\n            title:\"解析数:\"+_0x4c0427.color(_0x3b89ab.length,'#ff7000'),\n            col_type:\"scroll_button\",\n            url:$('#noLoading#').lazyRule(()=>{\n                clearVar('dp.searchJx');\n                refreshPage(true);\n                return 'toast://已重置'\n            })\n        });\n        // 下面是解析列表排列\n        // for (var _0xe2c3d8 = 0x0; _0x4c0427['FrGOH'](_0xe2c3d8, _0x2ecbe5); _0xe2c3d8++) {\n        for (let _0xe2c3d8 in _0x3b89ab) {\n            var _0x33788c = _0x3b89ab[_0xe2c3d8];\n            var _0x37871e = _0x4c0427['nWfVR'](_0x33788c, '')['replace'](/http.*\\/\\//g, '');\n            if (/移动/ ['test'](_0x49da96)) {\n                if (_0x4c0427['oCCSj']('uKLxF', 'uKLxF')) {\n                    d['push']({\n                        'title': _0x4c0427['HZhlc'](_0x4c0427['XXyQr'] + _0xe2c3d8, _0x49da96) ? _0x4c0427['nWfVR'](_0x4c0427['cgIeA'](_0x4c0427['UtfWf'], _0x4c0427['QOvJV']), _0x37871e) : _0x4c0427['cgIeA'](_0x4c0427['ABEwB'], _0x37871e),\n                        'url': bjItem['ydParse'](_0x49da96, _0xe2c3d8),\n                        'col_type': 'text_2'\n                    });\n                } else {\n                    var _0x2bc618 = _0x3b89ab[_0xe2c3d8];\n                    var _0x5cf417 = _0x4c0427['UVWoF'](_0x2bc618, '')['replace'](/http.*\\/\\//g, '');\n                    if (/移动/ ['test'](_0x49da96)) {\n                        d['push']({\n                            'title': _0x4c0427['kzWDK'](_0x4c0427['XXyQr'], _0xe2c3d8) == _0x49da96 ? _0x4c0427['gtUnj'](_0x4c0427['gtUnj'](_0x4c0427['UtfWf'], _0x4c0427['QOvJV']), _0x5cf417) : _0x4c0427['ABEwB'] + _0x5cf417,\n                            'url': bjItem['ydParse'](_0x49da96, _0xe2c3d8),\n                            'col_type': _0x4c0427['ozzWG']\n                        });\n                    } else {\n                        var _0x119365 = [_0x2bc618, _0x4c0427['gtUnj'](_0xe2c3d8, '||')]['join']('||');\n                        d['push']({\n                            'title': _0x4c0427['nWfVR'](_0x4c0427['ABEwB'], _0x5cf417),\n                            'col_type': _0x4c0427['ozzWG'],\n                            'url': bjItem['xlSelect'](_0x119365, _0x2ecbe5['toString']())\n                        });\n                    }\n                }\n            } else {\n                var _0xb70192 = [_0x33788c, _0xe2c3d8 + '||']['join']('||');\n                // 迪迪影院||0||  名称||索引 的数组\n                // ABEwB 是绿色 _0x37871e 是标题名称  xdrFv是字符串连接函数\n                // let flag = '‘‘Ⓤ’’';\n                let flag = _0x4c0427.color('Ⓤ','#0051ff');\n                if(typeof(json.codes[_0x37871e])==='function'){\n                    // flag = '““Ⓙ””';\n                    flag = _0x4c0427.color('Ⓙ','#ff7000');\n                }else if(typeof(json.codes[_0x37871e])==='undefined'){\n                    flag = '';\n                }\n                // let cls = '<span style=\"color:#298A08\">';\n                // let title = _0x4c0427['xdrFv'](_0x4c0427['ABEwB'], flag+_0x37871e);\n                // let title = flag+cls+_0x37871e;\n                let title = flag+_0x4c0427.color(_0x37871e,'#298A08');\n                d['push']({\n                    'title': title,\n                    // 'title': _0x37871e,\n                    'col_type': _0x4c0427['ozzWG'],\n                    'url': bjItem['xlSelect'](_0xb70192, _0x2ecbe5['toString']())\n                });\n            }\n        }\n        _0x4c0427['ywjux'](clearVar, _0x4c0427['rgDIp']);\n    },\n    'lqFile': function() {\n        var _0x541d76 = {\n            'aWiRs': function(_0x48d77b, _0x19161f, _0x21cb85) {\n                return _0x48d77b(_0x19161f, _0x21cb85);\n            },\n            'wSfnz': function(_0x4850ea) {\n                return _0x4850ea();\n            },\n            'qRQdA': 'jdRoute',\n            'WQiqk': 'var xdRoute=\"\";',\n            'psGdt': function(_0x170780, _0x3b512a) {\n                return _0x170780 == _0x3b512a;\n            },\n            'imxri': 'true',\n            'nSkjx': function(_0x95bf38, _0x313f25) {\n                return _0x95bf38 !== _0x313f25;\n            },\n            'iVNeM': 'eeLJm',\n            'IwMTl': '0|1|5|9|11|3|6|7|10|4|2|8',\n            'xfdHk': '拉取主插件和网页脚本',\n            'rGLuA': '主插件存放路径: /cache/Parse_Dn.js\\x0a网页脚本存放路径: /cache/Parse_Dn.html',\n            'zQSLE': 'text_center_1',\n            'hviDl': function(_0x26db62, _0x312f1c) {\n                return _0x26db62(_0x312f1c);\n            },\n            'ZxUgt': '操作指引',\n            'sWFoc': function(_0x2a044b, _0x149a3f) {\n                return _0x2a044b + _0x149a3f;\n            },\n            'OEhat': '拉取代码',\n            'ZvtSu': '编辑解析',\n            'gXKMb': 'toast://请先拉取列表',\n            'WCODC': function(_0x4ad3d5, _0x31fa1e) {\n                return _0x4ad3d5 < _0x31fa1e;\n            },\n            'rAkAh': 'text_3',\n            'yWaOI': '恢复插件路径为默认',\n            'yjyjK': '当前设置为: ',\n            'tHXeE': '拉取解析列表或者解析代码',\n            'GMUYu': '存放路径: /rules/DuanNian/MyParse.json',\n            'mpZBZ': 'line_blank',\n            'xvqgF': '输入有效插件地址',\n            'heuKx': 'putVar(\"pluginLink\",input)',\n            'Iifia': '‘‘’’<strong><big>登录提示',\n            'PFRHA': '使用相关功能需登录视界论坛账号\\n如有问题前往论坛了解详情',\n            'ULwkT': 'https://haikuoshijie.cn/user/signin'\n        };\n        if (_0x541d76['psGdt'](_0x541d76['wSfnz'](bbsYZ), _0x541d76['imxri'])||true) {\n            if (_0x541d76['nSkjx'](_0x541d76['iVNeM'], _0x541d76['iVNeM'])) {\n                _0x541d76['aWiRs'](putVar, 'bbsYZ', _0x541d76['wSfnz'](isLogin||function (){return true}));\n                _0x541d76['aWiRs'](putVar, _0x541d76['qRQdA'], _0x541d76['WQiqk']);\n            } else {\n                var _0x4d25ff = _0x541d76['IwMTl']['split']('|'),\n                    _0x4a97c9 = 0x0;\n                while (!![]) {\n                    switch (_0x4d25ff[_0x4a97c9++]) {\n                        case '0':\n                            d['push']({\n                                'title': _0x541d76['xfdHk'],\n                                'url': bjItem['pullScript'](_mySet['cjcache'], _mySet['x5cache']),\n                                'desc': _0x541d76['rGLuA'],\n                                'col_type': _0x541d76['zQSLE']\n                            });\n                            continue;\n                        case '1':\n                            _0x541d76['hviDl'](eval, _0x541d76['hviDl'](getVar, _0x541d76['qRQdA']));\n                            continue;\n                        case '2':\n                            d['push']({\n                                'col_type': 'line_blank'\n                            });\n                            continue;\n                        case '3':\n                            var _0x2ab399 = 'hiker://empty#noHistory#@rule=js:this.d=[];$.require(\"hiker://page/jxItem?rule=MyFieldᴰⁿ\").jxList();setResult(d);';\n                            continue;\n                        case '4':\n                            d['push']({\n                                'title': _0x541d76['ZxUgt'],\n                                'url': typeof czGuide == 'function' ? czGuide() : '',\n                                'col_type': _0x541d76['zQSLE']\n                            });\n                            continue;\n                        case '5':\n                            xdRoute = _0x541d76['sWFoc'](xdRoute, _mySet['parseRoute']);\n                            continue;\n                        case '6':\n                            var _0x3a9afe = [{\n                                'title': '拉取列表',\n                                'url': bjItem['pullCode']('列表')\n                            }, {\n                                'title': _0x541d76['OEhat'],\n                                'url': bjItem['pullCode']('代码')\n                            }, {\n                                'title': _0x541d76['ZvtSu'],\n                                'url': _0x541d76['hviDl'](fileExist, _0x541d76['hviDl'](getVar, 'parseRoute')) == !![] ? _0x2ab399 : _0x541d76['gXKMb']\n                            }];\n                            continue;\n                        case '7':\n                            for (var _0x1a2cdb = 0x0; _0x541d76['WCODC'](_0x1a2cdb, _0x3a9afe['length']); _0x1a2cdb++) {\n                                d['push']({\n                                    'title': _0x3a9afe[_0x1a2cdb]['title'],\n                                    'url': _0x3a9afe[_0x1a2cdb]['url'],\n                                    'col_type': _0x541d76['rAkAh']\n                                });\n                            }\n                            continue;\n                        case '8':\n                            d['push']({\n                                'title': _0x541d76['yWaOI'],\n                                'url': bjItem['hfPlugin'](_mySet['parseRoute']),\n                                'desc': _0x541d76['sWFoc'](_0x541d76['yjyjK'] + mySet['cj'], '\\n存放路径: /rules/DuanNian/MyParse.json'),\n                                'col_type': _0x541d76['zQSLE']\n                            });\n                            continue;\n                        case '9':\n                            d['push']({\n                                'title': _0x541d76['tHXeE'],\n                                'url': 'toast://请在下方选项操作',\n                                'desc': _0x541d76['GMUYu'],\n                                'col_type': _0x541d76['zQSLE']\n                            });\n                            continue;\n                        case '10':\n                            d['push']({\n                                'col_type': _0x541d76['mpZBZ']\n                            });\n                            continue;\n                        case '11':\n                            d['push']({\n                                'desc': _0x541d76['xvqgF'],\n                                'col_type': 'input',\n                                'extra': {\n                                    'titleVisible': ![],\n                                    'defaultValue': _0x541d76['hviDl'](getVar, 'pluginLink'),\n                                    'onChange': _0x541d76['heuKx']\n                                }\n                            });\n                            continue;\n                    }\n                    break;\n                }\n            }\n        } else {\n            d['push']({\n                'title': _0x541d76['Iifia'],\n                'desc': _0x541d76['PFRHA'],\n                'url': _0x541d76['ULwkT'],\n                'col_type': _0x541d76['zQSLE']\n            });\n        }\n    }\n};\n$.exports = jxItem;"},{"col_type":"movie_3","name":"解析Url编辑","path":"EditUrl","rule":"js:\nsetPageTitle(\"插件接口设置\");\nlet d = [];\nlet parseUrlText = request(\"hiker://files/jiexi/jiexi.txt\");\nlet parseUrlArray = parseUrlText.split(/\\n/);\nlet selected = getItem(\"selected\", \"\");\nlet classTab = [\n    [\"选择\", \"0\"],\n    [\"修改\", \"1\"],\n    [\"删除\", \"2\"]\n];\nlet classA = getVar(\"class\", \"0\");\naddListener('onClose', $.toString(() => {\n    clearVar(\"class\");\n}));\nd.push({\n    title: \"添加新的解析\",\n    url: $(\"\",\"解析名&&解析URL\").input(() => {\n        let parseUrlText = request(\"hiker://files/jiexi/jiexi.txt\");\n        let parseUrlArray = parseUrlText.split(/\\n/);\n        if(input.split(\"&&\").length!==2){\n            return \"toast://格式不正确\";\n        }\n        parseUrlArray.push(input);\n        parseUrlText = parseUrlArray.join(\"\\n\");\n        writeFile(\"hiker://files/jiexi/jiexi.txt\", parseUrlText);\n        \n        refreshPage(false);\n        return \"toast://修改成功\";\n    }),\n    col_type: \"scroll_button\"\n});\nfor (let item of classTab) {\n    d.push({\n        title: item[1] === classA ? \"““\" + item[0] + \"””\" : item[0],\n        url: $(\"#noLoading#\").lazyRule((key) => {\n            putVar(\"class\", key);\n            refreshPage(false);\n            return \"hiker://empty\";\n        }, item[1]),\n        col_type: \"scroll_button\"\n    });\n}\nlet func;\nswitch (classA) {\n    case \"0\":\n        func = function(url, title) {\n            return $(url + \"#noLoading#\").lazyRule((title) => {\n                log(\"\\n更改接口> \" + input);\n                setItem(\"selected\", input);\n                setItem(\"selected0\", title + \"&&\" + input);\n                refreshPage(false);\n                return \"toast://修改成功\";\n            }, title);\n        };\n        break;\n    case \"1\":\n        func = function(url, title, index) {\n            return $(url, \"请输入「\" + title + \"」的新接口\").input((title, index) => {\n                let parseUrlText = request(\"hiker://files/jiexi/jiexi.txt\");\n                let parseUrlArray = parseUrlText.split(/\\n/);\n                let selected1 = parseUrlArray[index];\n                parseUrlArray[index] = title + \"&&\" + input;\n                parseUrlText = parseUrlArray.join(\"\\n\");\n                writeFile(\"hiker://files/jiexi/jiexi.txt\", parseUrlText);\n                if (selected1 == getItem(\"selected0\")) {\n                    setItem(\"selected\", input);\n                    setItem(\"selected0\", title + \"&&\" + input);\n                }\n                refreshPage(false);\n                return \"toast://修改成功\";\n            }, title, index);\n        };\n        break;\n    case \"2\":\n        func = function(url, title, index) {\n            return $(\"确认删除「\" + title + \"」？\").confirm((title, index) => {\n                let parseUrlText = request(\"hiker://files/jiexi/jiexi.txt\");\n                let parseUrlArray = parseUrlText.split(/\\n/);\n                let selected1 = parseUrlArray[index];\n                parseUrlArray.splice(index, 1);\n                parseUrlText = parseUrlArray.join(\"\\n\");\n                writeFile(\"hiker://files/jiexi/jiexi.txt\", parseUrlText);\n                if (selected1 == getItem(\"selected0\")) {\n                    if (parseUrlArray[0]) {\n                        setItem(\"selected\", parseUrlArray[0].split(\"&&\")[1] || \"\");\n                        setItem(\"selected0\", parseUrlArray[0]);\n                    } else {\n                        setItem(\"selected\", \"\");\n                        setItem(\"selected0\", \"\");\n                    }\n                }\n                refreshPage(false);\n                return \"toast://修改成功\";\n            }, title, index);\n        };\n        break;\n\n}\nfor (let i in parseUrlArray) {\n    let item = parseUrlArray[i].split(\"&&\");\n    d.push({\n        title: selected == item[1] ? \"‘‘\" + item[0] + \"’’\" : item[0],\n        url: func(item[1], item[0], i),\n        col_type: \"text_3\"\n    });\n}\nsetResult(d);"},{"col_type":"movie_3","name":"主题管理","path":"theme","rule":"js:\n    function themeInit(){\n        const {color,small} = $.require(\"hiker://page/utiliy?rule=道长仓库Pro\");\n        let d = [];\n        let options = ['选择','修改','删除','导出'];\n\n        for(var i in options){\n            let option = options[i];\n            let flag = getVar('theme.dn_option','新增')===option?'👉':'';\n            d.push({\n                title:flag+option,\n                col_type:'scroll_button',\n                url:$(option).lazyRule(()=>{\n                    putVar('theme.dn_option', input);\n                    refreshPage(true);\n                    return 'toast://已设置操作类型为:'+input;\n                }),\n            });\n        }\n\n        let themeRoute = \"hiker://files/cache/MyTheme.json\";\n        let myThemes = {};\n        let themes = {};\n        try {\n            myThemes = JSON.parse(fetch(themeRoute));\n            themes = myThemes.themes[myThemes.now_theme];\n        }catch (e) {}\n\n\n        d.push({\n            title:'导入',\n            col_type:'scroll_button',\n            url:$('','请输入导入口令').input((myThemes,themeRoute)=>{\n                if(/^断插主题@.*?@http/.test(input)){\n                    let name = input.split('@')[1];\n                    let url = input.split('@')[2];\n                    return $('确定要导入断插主题-'+name+' 吗?').confirm((name,url,myThemes,themeRoute)=>{\n                        let content = parsePaste(url);\n                        let hasTheme = myThemes.themes.filter(it=>it.name===name);\n                        if(hasTheme&&hasTheme.length>0){\n                            let id = null;\n                            for(let j in myThemes.themes){\n                                if(myThemes.themes[j].name === name){\n                                    id = j;\n                                    break;\n                                }\n                            }\n                            if(!id){\n                                return 'toast://索引错误无法覆盖导入:\\n'+id\n                            }\n                            // log('覆盖导入主题id:'+id);\n                            myThemes.themes[id] = Object.assign(JSON.parse(base64Decode(content)),{'name':name});\n                        }else{\n                            myThemes.themes.push(Object.assign(JSON.parse(base64Decode(content)),{'name':name}));\n                        }\n                        // log(myThemes);\n                        writeFile(themeRoute,JSON.stringify(myThemes));\n                        refreshPage(true);\n                        return 'toast://已成功导入主题:\\n'+name\n                    },name,url,myThemes,themeRoute);\n                }else{\n                    return 'toast://无法识别的导入口令:\\n'+input;\n                }\n            },myThemes,themeRoute),\n        });\n        d.push({\n            title:'新增',\n            col_type:'scroll_button',\n            url:$().rule((myThemes,themeRoute)=>{\n                let d=[];\n                addListener('onClose', $.toString(()=>{\n                    refreshPage(true);\n                }));\n                d.push({\n                    title: '主题名称',\n                    desc: \"断插-蓝莓主题\",\n                    extra: {\n                        onChange: \"putVar('theme.new_add_name',input)\",\n                        titleVisible: true,\n                        defaultValue: getVar('theme.new_add_name', '')\n                    },\n                    url:$.toString(() => {\n                        let new_add_name = getVar('theme.new_add_name', '');\n                        return 'toast://你输入的是:'+new_add_name;\n                    }),\n                    col_type: \"input\"\n                });\n                d.push({\n                    desc: \"代码\",\n                    col_type: 'input',\n                    extra: {\n                        titleVisible: false,\n                        defaultValue: getVar('theme.new_add_code', ''),\n                        type: \"textarea\",\n                        height:-1,\n                        onChange: 'putVar(\"theme.new_add_code\",input)'\n                    }\n                });\n                d.push({\n                    title:'保存',\n                    col_type:'text_center_1',\n                    url:$().lazyRule((myThemes,themeRoute)=>{\n                        let code = getVar('theme.new_add_code', '');\n                        let name = getVar('theme.new_add_name', '');\n                        if(!name){\n                            return 'toast://你还没填写主题名称呢'\n                        }\n                        let newTheme = {};\n                        try {\n                            newTheme = JSON.parse(code);\n                        }catch (e) {\n                            return 'toast://错误的主题json格式:\\n'+e.message;\n                        }\n                        Object.assign(newTheme,{'name':name});\n                        myThemes.themes.push(newTheme);\n                        writeFile(themeRoute,JSON.stringify(myThemes));\n                        refreshPage(true);\n                        return 'toast://已新增断插主题:'+name\n                    },myThemes,themeRoute)\n                });\n                setResult(d);\n            },myThemes,themeRoute),\n        });\n        d.push({\n            title:myThemes.themes?'主题列表:共计:'+color(myThemes.themes.length,'#ff7000')+'个主题':\"第一次加载，点此进去初始化主题列表\",\n            col_type:'text_1',\n            url:'hiker://page/Route?rule=MyFieldᴰⁿ&type=设置#noHistory#'\n        });\n        d.push({\n            title:\"恢复出厂设置\",\n            col_type:'text_center_1',\n            url:$(\"如果你的主题没法正常用了，此方法可以救砖，确认恢复?\").confirm(()=>{\n                let themes = {name:'默认主题',closeBtn:{color:'#f6f6f6',background:'#aa96da'},saveBtn:{color:'#F9F0DA',background:'#068006'},saveCloseBtn:{color:'#F9F0DA',background:'#05BFC5'},tipsBtn:{color:'#F9F0DA',background:'#05BFC5'},barlabel:{color:'#F9F0DA',background:'#aa96da'},barInput:{color:'#aa96da',background:'#ffffd2'},select:{color:'#F9F0DA',background:'#aa96da'},};\n                let themeDef = {\"name\":\"断念原皮\",\"closeBtn\":{\"color\":\"#F9F0DA\",\"background\":\"#c5464a\"},\"saveBtn\":{\"color\":\"#F9F0DA\",\"background\":\"#068006\"},\"saveCloseBtn\":{\"color\":\"#F9F0DA\",\"background\":\"#05BFC5\"},\"tipsBtn\":{\"color\":\"#F9F0DA\",\"background\":\"#05BFC5\"},\"barlabel\":{\"color\":\"#F9F0DA\",\"background\":\"#D06B6C\"},\"barInput\":{\"color\":\"#D06B6C\",\"background\":\"#F9F0DA\"},\"select\":{\"color\":\"#F9F0DA\",\"background\":\"#D06B6C\"}};\n                let themeRoute = \"hiker://files/cache/MyTheme.json\";\n                writeFile(themeRoute,JSON.stringify({now_theme:'默认主题',themes:[themes,themeDef]}));\n                refreshPage(true);\n                return 'toast://断插主题已重置为出厂设置'\n            })\n        });\n        for(var i in myThemes.themes){\n            let nowThem = myThemes.themes[i];\n            d.push({\n                title:myThemes.now_theme===nowThem.name?'👉'+nowThem.name:nowThem.name,\n                col_type:'flex_button',\n                url:$().lazyRule((mytheme,myThemes,i,themeRoute)=>{\n                    let option = getVar('theme.dn_option','新增');\n                    switch (option){\n                        case '导出':\n                            let mythemeCode = base64Encode(JSON.stringify(mytheme));\n                            let url = sharePaste(mythemeCode);\n                            let code = '断插主题@'+mytheme.name+'@'+url;\n                            copy(code);\n                            return 'toast://已导出为云口令并复制到剪切板'\n                        case '修改':\n                            return $(JSON.stringify(mytheme)).input((mytheme,myThemes,i,themeRoute)=>{\n                                if(mytheme.name===myThemes.now_theme){\n                                    return 'toast://此主题当前正在使用中，不允许修改!'\n                                }\n                                myThemes.themes[i]=JSON.parse(input);\n                                writeFile(themeRoute,JSON.stringify(myThemes));\n                                refreshPage(true);\n                                return 'toast://已修改'\n                            },mytheme,myThemes,i,themeRoute)\n                        case '删除':\n                            return $('确认删除主题:'+mytheme.name+'?').confirm((mytheme,myThemes,i,themeRoute)=>{\n                                if(mytheme.name===myThemes.now_theme){\n                                    return 'toast://此主题当前正在使用中，不允许删除!'\n                                }\n                                myThemes.themes.splice(i,1);\n                                writeFile(themeRoute,JSON.stringify(myThemes));\n                                refreshPage(true);\n                                return 'toast://已删除'\n                            },mytheme,myThemes,i,themeRoute)\n                        default:\n                            myThemes.now_theme=mytheme.name;\n                            writeFile(themeRoute,JSON.stringify(myThemes));\n                            refreshPage(true);\n                            return 'toast://你选择了'+mytheme.name+'作为默认主题';\n                    }\n                },nowThem,myThemes,i,themeRoute),\n            });\n        }\n        setResult(d);\n    }\n$.exports.themeInit=themeInit;"},{"name":"操作指引","path":"Guide","rule":"<html>\n<head>\n    <meta charset=\"UTF-8\">\n</head>\n<body>\n<strong> <big>拉取篇</big> </strong>\n<br /> 操作顺序：\n<br /> 1.更新道长仓库Pro到76版本\n<br /> 2.拉取主插件和网页脚本\n<br /> 3.推荐直接拉取代码<s>拉取列表→拉取代码</s>\n<br />\n<br />\n<strong><big>口令篇</big></strong>\n<br />首页输入框支持：\n<br />1.分享出来的同系列插件云剪贴板口令\n<br />2.未加密的同系列插件地址,支持本地文件如以下格式开头的:file://,hiker://,/storage\n<br />3.Q神\n<br />4.断插\n<br />5.#道长精选\n<br />6.#b站\n<br />7.#倍陆\n<br />\n<br />\n<strong><big>编辑篇</big></strong>\n<br />隐藏功能需知：\n<br />隐藏功能是从列表上删除标题，故无复现功能\n<br />看准了，不用的才点隐藏\n<br />要复现的话去修改新的MyParse.json，在title的数组那按格式添加标题\n<br />\n<br />\n<strong><big>完结</big><br /></strong>\n<p>v3.49,小白最后的倔强,小白关怀模式</p>\n<p>一键实现配置完毕即可通过支持魔断的小程序看视频，回归白嫖视频这个需求本身</p>\n<p>推荐使用青豆,app影视.dp</p>\n<p>魔断(断插道长魔改版)已弃坑跑路，感谢原作者断念的插件解析及本小程序核心代码</p>\n</body>\n</html>"},{"name":"测试数据","path":"demoData","rule":"js:\n    let demoData = {\n        爱奇艺:['https://www.iqiyi.com/v_1zp7qgh23kg.html','https://www.iqiyi.com/v_2bc8tk8r6ug.html'],\n        优酷:['https://v.youku.com/v_show/id_XNTE4NTgxMTY2MA==.html','https://v.youku.com/v_show/id_XNTE5ODYxMjAzNg==.html'],\n        腾讯:['https://v.qq.com/x/cover/m441e3rjq9kwpsc/p0040gim4fz.html','https://v.qq.com/x/cover/mzc00200xh9313v/z0039tbho7q.html'],\n        芒果:['https://www.mgtv.com/b/372061/12193558.html','https://www.mgtv.com/b/363286/14295823.html'],\n        哔哩哔哩:['https://www.bilibili.com/bangumi/play/ep381217','https://www.bilibili.com/bangumi/play/ep408123','https://www.bilibili.com/bangumi/play/ss33434','https://www.bilibili.com/video/av336348663'],\n        搜狐:['https://film.sohu.com/album/9457584.html','https://film.sohu.com/album/9182646.html'],\n        西瓜:['https://www.ixigua.com/6551332125654647310','https://www.ixigua.com/6699356792905794055'],\n        PPTV:['http://v.pptv.com/show/TIndWsIomNY5tx8.html','http://v.pptv.com/show/SCQ5th6E9DKVE3s.html'],\n        咪咕:['https://www.miguvideo.com/mgs/website/prd/detail.html?cid=633511743','https://www.miguvideo.com/mgs/website/prd/detail.html?cid=716270319'],\n        乐视:['http://www.le.com/ptv/vplay/75843059.html','http://www.le.com/ptv/vplay/24220901.html#vid=24220901'],\n        1905:['https://vip.1905.com/play/875740.shtml','https://www.1905.com/vod/play/880641.shtml'],\n        风行:['http://www.fun.tv/vplay/g-304143','http://www.fun.tv/vplay/g-1008963/'],\n        龙腾:['LT-1ec3f6754f68586ed7f92c3e995cfca6','LT-fff47abf7ff22ffa3def904c6c91e192','LT-7ccda68683329780bd7264c8f9edd90e'],\n        人人迷:['renrenmi-ab924e11d2d69397','renrenmi-92640e8dc4cad83a'],\n        五毒:['wuduyun-1649431307021'],\n        多多:['https://m3u8.cache.suoyo.cc/m3u8/202203/8/aaabd92da26774c68850a023153c80f1ae6fa9be.m3u8'],\n        融兴:['RongXingVR-4215645581932','RongXingVR-4215645587000'],\n        雪人:['xueren-1646823072','xueren-1649402753','xueren-1649175252','xueren-1649307780','xueren-1648781475'],\n        旋风云:['xfy-529e6457953d545f','xfy-b65615dac4377ee3'],\n        瑞丰资源:['https://1.ruifenglb.com/play/1644914595.m3u8','https://1.ruifenglb.com/play/1642389907.m3u8'],\n    }\n\nlet defaultSets =  {\n    qy: '万能解析Ⓙ',\n    yk: '万能解析Ⓙ',\n    tx: '万能解析Ⓙ',\n    mg: '万能解析Ⓙ',\n    bl: '万能解析Ⓙ',\n    sh: '万能解析Ⓙ',\n    xg: '万能解析Ⓙ',\n    al: '万能解析Ⓙ',\n    pp: '万能解析Ⓙ',\n    mi: '万能解析Ⓙ',\n    le: '万能解析Ⓙ',\n    oth: '道长仓库通免',\n    fun: '万能解析Ⓙ',\n    one:'万能解析Ⓙ',\n    lt:'万能解析Ⓙ',\n    rr:'万能解析Ⓙ',\n    wd:'万能解析Ⓙ',\n    qju: '默认',\n    cj: 'hiker://files/cache/Parse_Dn.js'\n};\n\nlet floors = '①②③④⑤⑥⑦⑧⑨⑩１２３４５６７８９０⒈⒉⒊⒋⒌⒍⒎⒏⒐'.split('');\nlet emojis = '#️⃣|*️⃣|0️⃣|1️⃣|2️⃣|3️⃣|4️⃣|5️⃣|6️⃣|7️⃣|8️⃣|9️⃣|🅰️|🅱️|🍇|🍈|🍉|🍊|🍋|🍌|🍍|🍎|🍏|🍐|🍑|🍒|🍓|🍅|🍆|🌽|🍄|🌰|🍞|🍖|🍗|🍔|🍟|🍕|🍳|🍲|🍱|🍘|🍙|🍚|🍛|🍜|🍝|🍠|🍢|🍣|🍤|🍥|🍡|🍦|🍧|🍨|🍩|🍪|🎂|🍰|🍫|🍬|🍭|🍮|🍯|🍼|☕|🍵|🍶|🍷|🍸|🍹|🍺|🍻|🍴'.split('|');\nfloors = floors.concat(emojis);\n$.exports.demoData = demoData;\n$.exports.defaultSets = defaultSets;\n$.exports.floors = floors;"},{"name":"工具类","path":"utils","rule":"js:\n//随机从列表抽取一个元素\nfunction getOne(its) {return  its[Math.floor(Math.random()*its.length)];}\n//去重（ES6 Set）\nfunction unique2(array){\n    return Array.from(new Set(array));\n}\n//获取列表中重复都值\nfunction duplicates(arr) {\n    let res=arr.filter((x,k)=>{\n        let a=k*1+1;\n        let index=arr.indexOf(x,a);\n        if(index>-1){\n            return x;\n        }\n    })\n    let re=new Set(res);\n    return Array.from(re);\n}\n$.exports.getOne = getOne;\n$.exports.unique2 = unique2;\n$.exports.duplicates = duplicates;"},{"name":"解析管理","path":"jxManage","rule":"js:\n    function jxManage(){\n        const {color,small} = $.require(\"hiker://page/utiliy?rule=道长仓库Pro\");\n        let d = [];\n        let options = ['选择','修改','删除','导出'];\n\n        for(let i in options){\n            let option = options[i];\n            let flag = getVar('dn.jxm_option','选择')===option?'👉':'';\n            d.push({\n                title:flag+option,\n                col_type:'scroll_button',\n                url:$('#noLoading#').lazyRule((option)=>{\n                    putVar('dn.jxm_option', option);\n                    refreshPage(true);\n                    return 'hiker://empty';\n                },option),\n            });\n        }\n        let jxsRoute = \"hiker://files/cache/MyJiexi.json\";\n        let dmPath = \"hiker://files/cache/diaomao.txt\";\n        let MyJiexi = {jiexis:[]};\n        let jiexis = {};\n        try {\n            MyJiexi = JSON.parse(fetch(jxsRoute));\n            jiexis = MyJiexi.jiexis.filter(it=>it.name===MyJiexi.now)[0];\n        }catch (e) {}\n\n        d.push({\n            title:'导入',\n            col_type:'scroll_button',\n            url:$('','请输入导入口令').input((MyJiexi,jxsRoute)=>{\n                if(/^魔断解析配置@.*?@http/.test(input)){\n                    let name = input.split('@')[1];\n                    let url = input.split('@')[2];\n                    return $('确定要导入断插解析配置-'+name+' 吗?').confirm((name,url,MyJiexi,jxsRoute)=>{\n                        let content = parsePaste(url);\n                        let hasIt = MyJiexi.jiexis.filter(it=>it.name===name);\n                        if(hasIt&&hasIt.length>0){\n                            let id = null;\n                            for(let j in MyJiexi.jiexis){\n                                if(MyJiexi.jiexis[j].name === name){\n                                    id = j;\n                                    break;\n                                }\n                            }\n                            if(!id){\n                                return 'toast://索引错误无法覆盖导入:\\n'+id\n                            }\n                            // log('覆盖导入主题id:'+id);\n                            MyJiexi.jiexis[id] = Object.assign(JSON.parse(base64Decode(content)),{'name':name});\n                        }else{\n                            MyJiexi.jiexis.push(Object.assign(JSON.parse(base64Decode(content)),{'name':name}));\n                        }\n                        writeFile(jxsRoute,JSON.stringify(MyJiexi));\n                        refreshPage(true);\n                        return 'toast://已成功导入解析配置:\\n'+name\n                    },name,url,MyJiexi,jxsRoute);\n                }else{\n                    return 'toast://无法识别的导入口令:\\n'+input;\n                }\n            },MyJiexi,jxsRoute),\n        });\n\n        let isAuto = MyJiexi.isAuto;\n        let autoMode = MyJiexi.autoMode;\n        let singleBack = MyJiexi.singleBack||false; //吊毛模式。单个结果直接返回，停止后面的\n        let ignore_mx = MyJiexi.ignore_mx||false; //忽略免嗅,嗅探优先模式使用\n        let tips = '解析配置列表:共计:'+color(MyJiexi.jiexis.length,'#ff7000')+'个配置,自动档开关:'+color(isAuto?'开':'关','#ff7000');\n        d.push({\n            title:MyJiexi.jiexis&&MyJiexi.jiexis.length>0?tips:\"第一次加载，点此进去初始化解析列表\",\n            col_type:'text_1',\n            url:$('#noLoading#').lazyRule((MyJiexi,jxsRoute)=>{\n                if(MyJiexi.jiexis&&MyJiexi.jiexis.length>0){\n                    MyJiexi.isAuto = !MyJiexi.isAuto;\n                    if(!MyJiexi.autoMode){\n                        MyJiexi.autoMode = '嗅探优先';\n                    }\n                    writeFile(jxsRoute,JSON.stringify(MyJiexi));\n                    refreshPage(true);\n                    let tips = MyJiexi.isAuto?'开':'关';\n                    return 'toast://已设置自动档模式为:'+tips\n                }else{\n                    let initSet = {'now':\"道长推荐\",'jiexis':[{name:'道长推荐',qy:['万能解析Ⓙ'],yk:['万能解析Ⓙ'],tx:['万能解析Ⓙ'],mg:['万能解析Ⓙ'],bl:['万能解析Ⓙ'],sh:['万能解析Ⓙ'],xg:['万能解析Ⓙ'],pp:['万能解析Ⓙ'],mi:['万能解析Ⓙ'],\n                            le:['万能解析Ⓙ'],fun:['万能解析Ⓙ'],one:['万能解析Ⓙ'],lt:['万能解析Ⓙ'],rr:['万能解析Ⓙ'],wd:['万能解析Ⓙ']}]};\n                    writeFile(jxsRoute,JSON.stringify(initSet));\n                    refreshPage(true);\n                    return 'toast://断插解析配置已初始化'\n                }\n            },MyJiexi,jxsRoute)\n        });\n        let c1 = '#15ab21';\n        let c2 = '#900a0a';\n        let autoModeSel = ['速度优先','顺序优先','嗅探优先'];\n        let autoModeSels = autoModeSel.map((it)=>{\n            if(it===MyJiexi.autoMode){\n                it = color(it,c1);\n            }\n            return it\n        });\n        let autoModeTips = autoModeSel.includes(autoMode)?autoMode:'未知';\n        d.push({\n            title:small(\"备胎宠幸方案:\")+color(autoModeTips,'#ff7000'),\n            col_type:'text_2',\n            url:$(autoModeSels,3,'请选择自动档模式').select((MyJiexi,jxsRoute)=>{\n                input = /font/.test(input)?input.split('>')[1].split('<')[0]:input;\n                if(input!==MyJiexi.autoMode){\n                    MyJiexi.autoMode = input;\n                    writeFile(jxsRoute,JSON.stringify(MyJiexi));\n                    refreshPage(false);\n                }\n                return 'toast://已设置备胎宠幸方案为:'+input\n            },MyJiexi,jxsRoute),\n        });\n\n        d.push({\n            title:color(\"恢复出厂设置\",'#ff7000'),\n            col_type:'text_2',\n            url:$(\"如果你的解析管理无法正常用了，此方法可以救砖，确认恢复?\").confirm((jxsRoute)=>{\n                let initSet = {'now':\"道长推荐\",'jiexis':[{name:'道长推荐',qy:['万能解析Ⓙ'],yk:['万能解析Ⓙ'],tx:['万能解析Ⓙ'],mg:['万能解析Ⓙ'],bl:['万能解析Ⓙ'],sh:['万能解析Ⓙ'],xg:['万能解析Ⓙ'],pp:['万能解析Ⓙ'],mi:['万能解析Ⓙ'],\n                        le:['万能解析Ⓙ'],fun:['万能解析Ⓙ'],one:['万能解析Ⓙ'],lt:['万能解析Ⓙ'],rr:['万能解析Ⓙ'],wd:['万能解析Ⓙ']}]};\n                writeFile(jxsRoute,JSON.stringify(initSet));\n                refreshPage(true);\n                return 'toast://断插解析配置已重置为出厂设置'\n            },jxsRoute)\n        });\n\n        let cacheVideoSwitch = getVar('dp.cacheVideo','true')==='true'?'开':'关';\n        let jxTimeout = getVar('dp.jxTimeout','7000');\n        let col_type2 = autoMode==='顺序优先'?'text_3':'text_2';\n        let singleBackTips = singleBack?'开':'关';\n        let ignore_mx_tips = ignore_mx?'开':'关';\n        if(autoMode==='顺序优先'){\n            d.push({\n                title:small('吊毛模式:')+color(singleBackTips,'#ff7000'),\n                col_type:col_type2,\n                url:$('#noLoading#').lazyRule((MyJiexi,jxsRoute)=>{\n                    MyJiexi.singleBack = !(MyJiexi.singleBack||false);\n                    writeFile(jxsRoute,JSON.stringify(MyJiexi));\n                    refreshPage(true);\n                    return 'toast://已设置吊毛模式开关为:'+(MyJiexi.singleBack?'开':'关')\n                },MyJiexi,jxsRoute)\n            });\n        }else if(autoMode==='嗅探优先'){\n            d.push({\n                    title: color('导入辅助','#ff7000'),\n                    col_type:col_type2,\n                    url: $('hiker://empty#noLoading#').lazyRule(() => {\n                        let html = request('https://netcut.cn/p/a5d1c8e1ecee28d3');\n                        let data = html.match(/{.*note_content.*updated_at.*}/)[0];\n                        let content = JSON.parse(data).note_content;\n                        let upData = JSON.parse(data).updated_at;\n                        confirm({\n                            title: '是否导入',\n                            content: '脚本更新日期\\n' + upData,\n                            confirm:$.toString((content)=>{\n                                return content\n                            },content),\n                            cancel: () => {\n                                return 'toast://已取消导入';\n                            }\n                        });\n                        return 'hiker://empty';\n                    }),\n                }\n            );\n            d.push({\n                title:small('忽略免嗅:')+color(ignore_mx_tips,'#ff7000'),\n                col_type:col_type2,\n                url:$('#noLoading#').lazyRule((MyJiexi,jxsRoute)=>{\n                    MyJiexi.ignore_mx = !(MyJiexi.ignore_mx||false);\n                    writeFile(jxsRoute,JSON.stringify(MyJiexi));\n                    refreshPage(false);\n                    return 'toast://已设置忽略免嗅开关为:'+(MyJiexi.ignore_mx?'开':'关')\n                },MyJiexi,jxsRoute)\n            });\n        }\n        d.push({\n            title:small('多线路缓存:')+color(cacheVideoSwitch,'#ff7000'),\n            col_type:col_type2,\n            url:$('#noLoading#').lazyRule((cacheVideoSwitch)=>{\n                if(cacheVideoSwitch==='开'){\n                    putVar('dp.cacheVideo','false');\n                }else{\n                    putVar('dp.cacheVideo','true');\n                }\n                refreshPage(true);\n                return 'hiker://empty'\n            },cacheVideoSwitch)\n        });\n        d.push({\n            title:small('解析超时:')+color(jxTimeout,'#ff7000'),\n            col_type:col_type2,\n            url:$(jxTimeout,'请设置魔断解析超时,必须为整数').input(()=>{\n                if(!parseInt(input)){\n                    input = 7000;\n                }\n                putVar('dp.jxTimeout',input);\n                refreshPage(true);\n                return 'toast://已设置为:'+parseInt(input)\n            },jxTimeout)\n        });\n        if(autoMode&&singleBack){\n            d.push({\n                title: color('打开编辑吊毛过滤文件','#1379CB'),\n                url: $('#noLoading#').lazyRule((dmPath) => {\n                    let def_dms = ['https://vd3.bdstatic.com/mda-ki9ugq5430bhxys8/v1-cae/1080p/mda-ki9ugq5430bhxys8.mp4'];\n                    if(!fileExist(dmPath)){\n                        writeFile(dmPath,'//一行一个链接,可注释。\\n'+def_dms.join('\\n'));\n                    }\n                    return 'editFile://'+dmPath;\n                },dmPath),\n                col_type: 'text_center_1'\n            });\n        }\n\n        d.push({\n            title: color('打开编辑解析文件','#1379CB'),\n            url: $('#noLoading#').lazyRule((jxsRoute) => {\n                return 'editFile://'+jxsRoute;\n            },jxsRoute),\n            col_type: 'text_center_1'\n        });\n\n        for(let i in MyJiexi.jiexis){\n            let nowJx = MyJiexi.jiexis[i];\n            d.push({\n                title:MyJiexi.now===nowJx.name?'👉'+nowJx.name:nowJx.name,\n                col_type:'flex_button',\n                extra:{\n                    nowJx:nowJx,\n                    MyJiexi:MyJiexi,\n                    jxsRoute:jxsRoute\n                },\n                url:$('#noLoading#').lazyRule((nowJx,MyJiexi,i,jxsRoute)=>{\n                    let option = getVar('dn.jxm_option','选择');\n                    switch (option){\n                        case '导出':\n                            let nowJxCode = base64Encode(JSON.stringify(nowJx));\n                            let url = sharePaste(nowJxCode);\n                            let code = '魔断解析配置@'+nowJx.name+'@'+url;\n                            copy(code);\n                            return 'toast://已导出为云口令并复制到剪切板'\n                        case '修改':\n                            // if(nowJx.name===MyJiexi.now){\n                            //     return 'toast://此解析配置当前正在使用中，不允许修改!'\n                            // }\n                            // else{\n                            //     return 'hiker://page/jxEdit?rule=MyFieldᴰⁿ'\n                            // }\n                            return 'hiker://page/jxEdit?rule=MyFieldᴰⁿ'\n                        case '删除':\n                            return $('确认删除解析配置:'+nowJx.name+'?').confirm((nowJx,MyJiexi,i,jxsRoute)=>{\n                                if(nowJx.name===MyJiexi.now){\n                                    return 'toast://此解析配置当前正在使用中，不允许删除!'\n                                }\n                                MyJiexi.jiexis.splice(i,1);\n                                writeFile(jxsRoute,JSON.stringify(MyJiexi));\n                                refreshPage(true);\n                                return 'toast://已删除'\n                            },nowJx,MyJiexi,i,jxsRoute)\n                        default:\n                            MyJiexi.now=nowJx.name;\n                            writeFile(jxsRoute,JSON.stringify(MyJiexi));\n                            refreshPage(true);\n                            return 'toast://你选择了'+nowJx.name+'作为当前解析配置';\n                    }\n                },nowJx,MyJiexi,i,jxsRoute),\n            });\n        }\n        setResult(d);\n    }\n$.exports.jxManage=jxManage;"},{"name":"解析编辑","path":"jxEdit","rule":"js:\nlet {nowJx,MyJiexi,jxsRoute} = MY_PARAMS;\nlet nowJxT = JSON.parse(getVar('dn.nowJx')||'{}');\nnowJx = nowJxT.name?nowJxT:nowJx;\naddListener('onClose', $.toString(()=>{\n    clearVar(\"dn.jx_titles\");\n    clearVar(\"dn.nowJx\");\n    clearVar(\"dn.jxm_name\");\n}));\nlet id = null;\nfor(let j in MyJiexi.jiexis){\n    if(MyJiexi.jiexis[j].name === nowJx.name){\n        id = j;\n        break;\n    }\n}\nlet d = [];\nd.push({\n    title: '配置名称',\n    desc: \"解析配置名称,如道长推荐\",\n    extra: {\n        onChange: \"putVar('dn.jxm_name',input)\",\n        titleVisible: true,\n        defaultValue:getVar('dn.jxm_name','')||nowJx.name\n    },\n    col_type:'input'\n});\n// let options = ['选择','新增','删除','批量删除','移动'];\nlet options = ['新增','删除','移动'];\nlet writeMode = getVar('dn.jxm_writeMode','新增');\nfor(let i in options){\n    let option = options[i];\n    let flag = writeMode===option?'👉':'';\n    d.push({\n        title:flag+option,\n        // col_type:'scroll_button',\n        col_type:'flex_button',\n        url:$('#noLoading#').lazyRule((option)=>{\n            putVar('dn.jxm_writeMode', option);\n            refreshPage(true);\n            return 'hiker://empty';\n        },option),\n    });\n}\nd.push({\n    // col_type:'line',\n    col_type:'blank_block'\n});\n//获取断插列表\nif(!getVar(\"dn.jx_titles\")){\n    let titleArr = [], urlArr = [];\n    var json={title:[],codes:{}};\n    let setFile = request('hiker://files/rules/DuanNian/MyParse.json');\n    try {\n        eval('json='+setFile);\n    }catch (e) {\n        log('Json解析发生了错误:'+e.message);\n    }\n    titleArr = json.title;\n    titleArr.forEach((it) => {\n        urlArr.push(json.codes[it]);\n    });\n    putVar('dn.jx_titles',JSON.stringify(titleArr));\n}\n\nlet titles = JSON.parse(getVar('dn.jx_titles')||'[]');\nlet titleDic = {\n    bl:'哔哩哔哩',fun:'风行',le:'乐视',mg:'芒果',mi:'咪咕',pp:'PPTV',qy:'爱奇艺',sh:'搜狐',\n    tx:'腾讯',xg:'西瓜',yk:'优酷',one:'1905',lt:'龙腾',rr:'人人迷',wd:'五毒',oth:'其他'\n}\nlet titleOrder = {\n    qy:1,yk:2,tx:3,mg:4,bl:5,sh:6,xg:7,pp:8,mi:9,le:10,one:11,fun:12,lt:13,rr:14,wd:15,oth:16,\n};\n\nfunction compareOd(titleOrder){\n    return function (a, b){\n        let x = titleOrder[a];\n        let y = titleOrder[b];\n        return x-y;\n    }\n}\n//-----------------\n// let jds = Object.keys(nowJx).filter(it=>it!=='name'&&it!=='oth');\nlet flags = Object.keys(titleOrder);\nlet jds = Object.keys(nowJx).filter(it=>it!=='name'&&flags.includes(it));\n//log(jds);\nfor(let k of flags){\n    if(!jds.includes(k)){\n        jds.push(k)\n    }\n}\njds = jds.sort(compareOd(titleOrder));\nfor(let j in jds){\n    let jxs = nowJx[jds[j]]||[];\n    let title = jds[j];\n    d.push({\n        title:titleDic[title]||title,\n        col_type:'scroll_button',\n        url:$('#noLoading#').lazyRule((titles,title,jxs,jxsRoute,MyJiexi,nowJx)=>{\n            var json={title:[],codes:{}};\n            let setFile = request('hiker://files/rules/DuanNian/MyParse.json');\n            try {\n                eval('json='+setFile);\n            }catch (e) {\n                log('Json解析发生了错误:'+e.message);\n            }\n            if(getVar('dn.jxm_writeMode','新增')==='新增'){\n                let sel_title = titles.filter(it=>!jxs.includes(it));\n                sel_title = sel_title.map((it)=>{\n                    let flag = '‘‘Ⓤ’’';\n                    if(typeof(json.codes[it])==='function'){\n                        flag = '““Ⓙ””';\n                    }else if(typeof(json.codes[it])==='undefined'){\n                        flag = '';\n                    }\n                    return flag+it\n                });\n                return $(sel_title,2).select((MyJiexi,jxs,nowJx,title,jxsRoute)=>{\n                    input = input.replace(/‘‘Ⓤ’’|““Ⓙ””/g,'');\n                    let id = null;\n                    for(let j in MyJiexi.jiexis){\n                        if(MyJiexi.jiexis[j].name === nowJx.name){\n                            id = j;\n                            break;\n                        }\n                    }\n                    if(!id){\n                        return 'toast://索引错误无法保存:\\n'+id\n                    }\n                    jxs.push(input);\n                    log(jxs);\n                    nowJx[title] = jxs;\n                    MyJiexi.jiexis[id] = nowJx;\n                    putVar('dn.nowJx',JSON.stringify(nowJx));\n                    writeFile(jxsRoute,JSON.stringify(MyJiexi));\n                    refreshPage(true);\n                    return 'hiker://empty'\n                },MyJiexi,jxs,nowJx,title,jxsRoute);\n            }else {\n                return 'hiker://empty'\n            }\n        },titles,title,jxs,jxsRoute,MyJiexi,nowJx)\n    });\n    for(let k in jxs){\n        d.push({\n            title:jxs[k],\n            col_type:'scroll_button',\n            url:$('#noLoading#').lazyRule((titles,title,jxs,jxsRoute,MyJiexi,nowJx,njx,id,k,max)=>{\n                switch (getVar('dn.jxm_writeMode','新增')){\n                    case '删除':\n                        Array.prototype.remove = function(val) {\n                            let index = this.indexOf(val);\n                            if (index > -1) {\n                                this.splice(index, 1);\n                            }\n                        };\n                        jxs.remove(njx);\n                        nowJx[title] = jxs;\n                        MyJiexi.jiexis[id] = nowJx;\n                        putVar('dn.nowJx',JSON.stringify(nowJx));\n                        writeFile(jxsRoute,JSON.stringify(MyJiexi));\n                        refreshPage(true);\n                        return 'hiker://empty'\n                    case '移动':\n                        return $(k,'移动到索引多少?').input((k,max,jxs,nowJx,MyJiexi,id,title,jxsRoute)=>{\n                            function Move(arr, fromIndex, toIndex) {\n                                var element = arr[fromIndex];\n                                arr.splice(fromIndex, 1);\n                                arr.splice(toIndex, 0, element);\n                            }\n                            if(parseInt(input)===k){\n                                return 'toast://啥也没做'\n                            }else if(parseInt(input)>max-1||parseInt(input)<-1){\n                                return 'toast://你最大移动范围0-'+parseInt(max-1);\n                            }\n                            // let newAr = jxs.splice(k, 1); // 删掉\n                            // jxs.unshift(newAr[0]);\n                            Move(jxs,k,parseInt(input));\n                            nowJx[title] = jxs;\n                            MyJiexi.jiexis[id] = nowJx;\n                            putVar('dn.nowJx',JSON.stringify(nowJx));\n                            writeFile(jxsRoute,JSON.stringify(MyJiexi));\n                            refreshPage(true);\n                            return 'hiker://empty'\n                        },k,max,jxs,nowJx,MyJiexi,id,title,jxsRoute)\n                    default:\n                        return 'toast://此元素不支持进行:'+getVar('dn.jxm_writeMode','新增')\n                }\n            },titles,title,jxs,jxsRoute,MyJiexi,nowJx,jxs[k],id,k,jxs.length)\n        });\n    }\n    d.push({\n        // col_type:'line',\n        col_type:'blank_block'\n    })\n}\nd.push({\n    col_type:'line',\n});\nd.push({\n    title:'保存',\n    col_type:'text_center_1',\n    url:$('#noLoading#').lazyRule((MyJiexi,id,jxsRoute)=>{\n        if(getVar('dn.jxm_name','')!==MyJiexi.jiexis[id].name){\n            ifHas = MyJiexi.jiexis.filter(it=>it.name===getVar('dn.jxm_name','')).length>0;\n            if(ifHas){\n                return 'toast://待修改的名称重复,不允许保存'\n            }else{\n                MyJiexi.jiexis[id].name =  getVar('dn.jxm_name','');\n                writeFile(jxsRoute,JSON.stringify(MyJiexi));\n            }\n        }\n        back(true);\n        return 'toast://已保存'\n    },MyJiexi,id,jxsRoute)\n});\nsetResult(d);"},{"col_type":"movie_3","name":"小白模式","path":"smallWhite","rule":"js:\n    setPageTitle('道长给小白的关爱');\nconst {color, small,api} = $.require(\"hiker://page/utiliy?rule=道长仓库Pro\");\nlet fileRoot = api.host+'/hikerule/zyw_data/';\n// log(fileRoot);\nlet d = [];\nvar themeRoute = \"hiker://files/cache/MyTheme.json\";\nvar themeOnline = fileRoot+'11';\nvar oldRoute = \"hiker://files/cache/MyParseSet.json\";\nvar oldOnline = fileRoot+'12';\nvar newRoute = \"hiker://files/rules/DuanNian/MyParse.json\";\nvar newOnline = fileRoot+'13';\nvar jxsRoute = \"hiker://files/cache/MyJiexi.json\";\nvar jxOnline = fileRoot+'14';\nvar dmOnline = fileRoot+'30';\nvar cjcache = 'hiker://files/cache/Parse_Dn.js';\nvar x5cache = 'hiker://files/cache/Parse_Dn.html';\nvar dmPath = \"hiker://files/cache/diaomao.txt\";\nd.push({\n    title:small('你好,小白,即使啥也不会,也可以看明白下面的字吧?'),\n    desc:'如果还是不会,请删以永治,告辞不谢',\n    col_type:'text_1',\n    url:$('#noLoading#').lazyRule(()=>{\n        return 'toast://据说你不服气,不承认自己是小白?\\n点我只是为了宣泄一下你的愤怒?啥也别说了,下去搞!'\n    })\n});\nd.push({\n    title:small('批量管理界面文件是什么?')+color('不知道,来一份道长的','#5FB878'),\n    desc:'自动拉取道长的批量管理界面文件，可批量删除和导出解析',\n    col_type:'text_1',\n    url:$('确认吗？').confirm(()=>{\n        let localHtml = 'hiker://files/cache/plscParse.html';\n        writeFile(localHtml,request('https://gitcode.net/qq_32394351/dr/-/raw/master/dp/batch_delete.html'));\n        return 'toast://拉取完毕,可返回查看批量管理功能是否正常'\n    })\n});\nd.push({\n    title:small('单项解析选择界面主题是什么?')+color('不知道,来一份道长的','#5FB878'),\n    desc:'自动拉取道长的主题配置以及网页插件和静态页面',\n    col_type:'text_1',\n    url:$('确认吗?如果你不是小白，总该会提前备份自己主题的吧!\\n'+themeRoute).confirm((cjcache,x5cache,themeRoute,themeOnline)=>{\n        let themeCode = fetch(themeOnline);\n        if(!/now_theme/.test(themeCode)){\n            log(themeCode);\n            return 'toast://失败!与道长服务器通讯错误,估计是网络卡了'\n        }\n        let cjFrom = \"hiker://page/Parse_Dn.js?rule=MyFieldᴰⁿ\";\n        let x5From = \"hiker://page/Parse_Dn.html?rule=MyFieldᴰⁿ\";\n        try {\n            let cjFile = JSON.parse(fetch(cjFrom)).rule;\n            let x5File = JSON.parse(fetch(x5From)).rule;\n            writeFile(cjcache, cjFile);\n            writeFile(x5cache, x5File);\n            writeFile(themeRoute, themeCode);\n            clearVar(\"jxOldV\");\n            clearVar(\"jxNewV\");\n            refreshPage(false);\n            return 'toast://主题已成功应用'\n        }\n        catch(e){\n            return 'toast://主题应用失败\\n未期望的错误:'+e.message;\n        }\n    },cjcache,x5cache,themeRoute,themeOnline)\n});\nd.push({\n    title:small('断插解析及默认列表是什么?')+color('不知道,来一份道长的','#5FB878'),\n    desc:'自动拉取道长在用的两个MyParse.json文件',\n    col_type:'text_1',\n    url:$('确认吗?如果你不是小白，总该会提前备份自己的配置文件吧!\\n'+oldRoute+'\\n'+newRoute).confirm((oldRoute,oldOnline,newRoute,newOnline)=>{\n        let oldCode = fetch(oldOnline);\n        let newCode = fetch(newOnline);\n        if(!/Parse_Dn\\.js/.test(oldCode)||!/Parse_Dn\\.js/.test(newCode)){\n            return 'toast://失败!与道长服务器通讯错误,估计是网络卡了'\n        }\n        try {\n            writeFile(oldRoute, oldCode);\n            writeFile(newRoute, newCode);\n            return 'toast://断插解析配置及默认列表已经配置成功'\n        }\n        catch(e){\n            return 'toast://配置应用失败\\n未期望的错误:'+e.message;\n        }\n    },oldRoute,oldOnline,newRoute,newOnline)\n});\nd.push({\n    title:small('断插解析自动档模式是什么?')+color('不知道,来一份道长的','#5FB878'),\n    desc:'自动拉取道长在用的MyJiexi.json文件',\n    col_type:'text_1',\n    url:$('确认吗?如果你不是小白，总该会提前备份自己的自动档方案吧!\\n'+jxsRoute).confirm((jxsRoute,jxOnline)=>{\n        let jxCode = fetch(jxOnline);\n        if(!/jiexis/.test(jxCode)){\n            return 'toast://失败!与道长服务器通讯错误,估计是网络卡了'\n        }\n        try {\n            writeFile(jxsRoute, jxCode);\n            return 'toast://断插解析配置及默认列表已经配置成功'\n        }\n        catch(e){\n            return 'toast://自动档应用失败\\n未期望的错误:'+e.message;\n        }\n    },jxsRoute,jxOnline)\n});\nd.push({\n    title:small('吊毛过滤文件是什么?')+color('不知道,来一份道长的','#5FB878'),\n    desc:'自动拉取道长在用的diaomao.txt文件',\n    col_type:'text_1',\n    url:$('确认吗?如果你不是小白，总该会提前备份自己的吊毛过滤文件吧!\\n'+dmPath).confirm((dmPath,dmOnline)=>{\n        let dmCode = fetch(dmOnline);\n        if(!dmCode||!/mp4|m3u8/.test(dmCode)){\n            return 'toast://失败!与道长服务器通讯错误,估计是网络卡了'\n        }\n        try {\n            writeFile(dmPath, dmCode);\n            return 'toast://吊毛过滤文件已配置成功'\n        }\n        catch(e){\n            return 'toast://吊毛过滤文件应用失败\\n未期望的错误:'+e.message;\n        }\n    },dmPath,dmOnline)\n});\nd.push({\n    title:small('真的啥也不会了,还懒得一个个点?')+color('不知道,来一份道长的','#5FB878'),\n    desc:'自动拉取道长在用的上述所有文件\\n一键搞完直接去支持断插的小程序看视频就行啦',\n    col_type:'text_1',\n    url:$('修仙法力无边','确认吗?如果你不是小白，总该会提前备份自己的上述所有文件吧!\\n请输入道长修仙法力无边来确认执行此操作').input((cjcache,x5cache,themeRoute,oldRoute,newRoute,jxsRoute,themeOnline,oldOnline,newOnline,jxOnline,dmPath,dmOnline)=>{\n        if(input!=='道长修仙法力无边'){\n            return 'toast://本次取消执行'\n        }\n        let themeCode = fetch(themeOnline);\n        if(!/now_theme/.test(themeCode)){\n            log('themeCode:'+themeCode);\n            return 'toast://拉主题失败!与道长服务器通讯错误,估计是网络卡了'\n        }\n        let cjFrom = \"hiker://page/Parse_Dn.js?rule=MyFieldᴰⁿ\";\n        let x5From = \"hiker://page/Parse_Dn.html?rule=MyFieldᴰⁿ\";\n        let cjFile = JSON.parse(fetch(cjFrom)).rule;\n        let x5File = JSON.parse(fetch(x5From)).rule;\n        let oldCode = fetch(oldOnline);\n        let newCode = fetch(newOnline);\n        let dmCode = fetch(dmOnline);\n        if(!/Parse_Dn\\.js/.test(oldCode)||!/Parse_Dn\\.js/.test(newCode)){\n            // log('oldCode:'+oldCode);\n            // log('newCode:'+newCode);\n            return 'toast://失败!与道长服务器通讯错误,估计是网络卡了'\n        }\n        let jxCode = fetch(jxOnline);\n        if(!/jiexis/.test(jxCode)){\n            // log('jxCode:'+jxCode);\n            return 'toast://失败!与道长服务器通讯错误,估计是网络卡了'\n        }\n        try {\n            writeFile(cjcache, cjFile); // 拉插件\n            writeFile(x5cache, x5File); //拉网页文件\n            writeFile(themeRoute, themeCode); //拉主题文件\n            clearVar(\"jxOldV\");\n            clearVar(\"jxNewV\");\n            writeFile(oldRoute, oldCode); //拉断插默认选择界面的配置\n            writeFile(newRoute, newCode); //拉断插内的解析\n            writeFile(jxsRoute, jxCode); // 拉自动档文件\n            if(dmCode&&/mp4|m3u8/.test(dmCode)) {//验证吊毛文件合法性\n                writeFile(dmPath, dmCode); // 拉吊毛过滤文件\n            }\n            back(true);\n            return 'toast://断插解析配置及默认列表已经配置成功'\n        }\n        catch(e){\n            return 'toast://一键模式应用失败\\n未期望的错误:'+e.message;\n        }\n    },cjcache,x5cache,themeRoute,oldRoute,newRoute,jxsRoute,themeOnline,oldOnline,newOnline,jxOnline,dmPath,dmOnline)\n});\nlet descInfo = '主题文件:'+themeRoute+'\\n主界面配置:'+oldRoute+'\\n嫖到的解析:'+newRoute+'\\n自动档解析:'+jxsRoute;\ndescInfo+='\\n主插件:'+cjcache+'\\n主配置选择界面文件:'+x5cache+'\\n吊毛过滤文件:'+dmPath;\nd.push({\n    title:'文件描述:\\n'+descInfo,\n    col_type:'long_text',\n    extra:{textSize: 13,lineVisible:false}\n});\nsetResult(d);"},{"col_type":"movie_3","name":"解析测试","path":"jxTest","rule":"js:\n    var items = [];\nvar json = [{\n    title: '爱奇艺',\n    url: 'http://www.iqiyi.com/v_2ga8zts86ys.html',\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/09/8/110_901f2ef37af2fea25e5d9648f551ce31_con_130x130.png',\n}, {\n    title: '优酷',\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/16/9/110_8ff06e0c237760cd57d2508fd98c8414_con_130x130.png',\n    url: 'https://v.youku.com/v_show/id_XNDc0MDE1NTk1Mg==.html'\n}, {\n    title: '腾讯视频',\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/15/3/106_3a0d212e17cb95e232ffe155460385cb_con_130x130.png',\n    url: 'https://v.qq.com/x/cover/mzc00200rmpaf40/n0036l4tntc.html'\n}, {\n    title: 'PPTV视频',\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/28/5/110_a455b2951227040ee62955edcfb89d72_con_130x130.png',\n    url: 'https://v.pptv.com/show/zVn3dJXt1xV49l4.html'\n}, {\n    title: '芒果TV',\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/15/6/110_1834d296aa5b5666a7d94b1e3479ae64_con_130x130.png',\n    url: 'http://www.mgtv.com/b/349253/10424300.html'\n},{\n    title: '咪咕',\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/13/1/110_0e6bdee42b08304d158d280b49452bc3_con_130x130.png',\n    url: 'https://m.miguvideo.com/mgs/msite/prd/detail.html?cid=655838044&mgdbid=&channelId=CAAAB000902015500000000'\n},{\n    title: '哔哩哔哩',\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/27/4/110_8e2e3d88c45025b380e69817d6fb53b1_con_130x130.png',\n    url: 'https://m.bilibili.com/bangumi/play/ep428993'\n},{\n    title: '搜狐视频',\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/15/9/110_532a51f8431efc377808c1ffff2da36f_con_130x130.png',\n    url: 'https://m.tv.sohu.com/v7329441.shtml'\n},{\n    title: '乐视',\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/15/8/2_35b5d4373f4bcba28f39486e4f1164d9_con_130x130.png',\n    url: 'https://m.le.com/vplay_76954333.html?from=ajax'\n},{\n    title: '1905电影网',\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/18/4/110_5f24b1052fed4f7fc73593a8ef27276d_con_130x130.png',\n    url: 'https://vip.1905.com/m/play/1429725.shtml'\n},{\n    title: '风行视频',\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/16/4/110_6f6af9f99b2629e51f0b0a33cdff1d9e_con_130x130.png',\n    url: 'http://m.fun.tv/mplay/?mid=95719'\n},{\n    title: '西瓜视频',\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/27/5/110_a86265882ed18c6190566e9ea25f9698_con_130x130.png',\n    url: 'https://www.ixigua.com/6699356792905794055'\n}];\nvar qps = [\n    {title:'龙腾', url:'LT-1ec3f6754f68586ed7f92c3e995cfca6',pic_url: 'https://lanmeiguojiang.com/tubiao/ke/4.png'},\n    {title: '人人迷', url:'renrenmi-ab924e11d2d69397',pic_url:'https://lanmeiguojiang.com/tubiao/ke/6.png'},\n    {title: '五毒', url:'wuduyun-1649431307021',pic_url: 'https://lanmeiguojiang.com/tubiao/ke/30.png'},\n    {title: '多多', url:'https://m3u8.cache.suoyo.cc/m3u8/202203/8/aaabd92da26774c68850a023153c80f1ae6fa9be.m3u8',pic_url: 'https://lanmeiguojiang.com/tubiao/ke/49.png'},\n    {title: '融兴', url: 'RongXingVR-4215645581932',pic_url:'https://lanmeiguojiang.com/tubiao/ke/80.png'},\n    {title: '雪人', url: 'xueren-1646823072',pic_url:'https://lanmeiguojiang.com/tubiao/q/133.png'},\n    {title: '旋风云', url:'xfy-529e6457953d545f',pic_url: 'https://lanmeiguojiang.com/tubiao/ke/54.png'},\n    {title: '瑞丰资源',url: 'https://1.ruifenglb.com/play/1644914595.m3u8',pic_url: 'https://lanmeiguojiang.com/tubiao/ke/72.png'}\n];\nconst {color, small} = $.require(\"hiker://page/utiliy?rule=道长仓库Pro\");\nconst lsg=$.require(\"hiker://page/localStorage?rule=道长仓库Pro\");\nvar timeout = parseInt(lsg.getItem('timeout','5000'));//超时\nvar nowParse = getItem('Parse','');//getItem的操作千万不要加入循环,当前选择的解析\nvar dx_mode = getItem('点选','单测');//点选模式\nvar qp_test = getItem('切片','0');//显示切片\nif(qp_test==='1'){\n    json = qps;\n}else if(qp_test==='2'){\n    json = json.concat(qps);\n}\nitems.push({\n    title: color('魔断解析测试','#0C0000'),\n    desc:'单接口多类正版|单正版多接口 测试 '+'🕒'+timeout,\n    url: $(timeout,'请输入解析超时毫秒').input(()=>{\n        if(!parseInt(input)){\n            return 'toast://超时设置错误，拒绝保存'\n        }\n        const lsg=$.require(\"hiker://page/localStorage?rule=道长仓库Pro\");\n        lsg.setItem('timeout',input||'5000');\n        refreshPage(false);\n        return 'toast://已设置解析超时毫秒:'+input||'5000';\n    }),\n    col_type: 'text_center_1',\n    extra:{\n        lineVisible:false\n    }\n});\nitems.push({\n    title:'使用说明',\n    col_type:'text_center_1',\n    url:$('hiker://empty#noRecordHistory##noHistory#').rule((color)=>{\n        let d=[];\n        d.push({\n            title:color('相信自己，你不需要说明','grey'),\n            col_type:'text_1',\n            url:'hiker://empty',\n            extra:{\n                lineVisible:false\n            }\n        });\n        let note='想我写教程？没门！';\n        d.push({\n            title:note,\n            col_type:'rich_text'\n        });\n        setResult(d);\n    },color),\n    extra:{\n        lineVisible:true\n    }\n});\nitems.push({\n    col_type:\"blank_block\",\n});\nitems.push({\n    title:color('🏠️主程序','#ff0000'),\n    url: \"hiker://home@MyFieldᴰⁿ\",\n    col_type: 'scroll_button'\n});\nitems.push({\n    title:color('🎨线路配置','#fa8c35'),\n    url: \"hiker://page/Route?rule=MyFieldᴰⁿ&type=设置#noHistory#\",\n    col_type: 'scroll_button'\n});\nitems.push({\n    title:color('🎯解析管理','#3eede7'),\n    url: \"hiker://page/Route?rule=MyFieldᴰⁿ&type=编辑#noHistory#\",\n    col_type: 'scroll_button'\n});\nitems.push({\n    title:color('☢️批量删除','#801dae'),\n    url: getPath('hiker://files/cache/plscParse.html'),\n    col_type: 'scroll_button'\n});\nitems.push({\n    title:color('🔠备胎管理','#0eb83a'),\n    url: \"hiker://page/Route?rule=MyFieldᴰⁿ&type=解析#noRecordHistory#\",\n    col_type: 'scroll_button'\n});\nlet qp_title = '💿切片测试';\nif(qp_test==='1'){\n    qp_title =  color(qp_title,'#6bc8d0')\n}else if(qp_test==='2'){\n    qp_title =  color(qp_title,'#6ba6d0')\n}\nitems.push({\n    title:qp_title,\n    url: $('#noLoading#').lazyRule((color)=>{\n        let modes = ['0','1','2'];\n        let qp_test = getItem('切片','0');\n        let idex = modes.indexOf(qp_test);\n        let nextIdex = idex < modes.length -1?idex+1:0;\n        qp_test=modes[nextIdex];\n        setItem('切片',qp_test);\n        // updateItem('qp_test',{\n        //     title:qp_test==='1'?color('💿切片测试','#6bc8d0'):'💿切片测试'\n        // });\n        refreshPage(false);\n        return 'hiker://empty'\n    },color),\n    col_type: 'scroll_button',\n    extra:{\n        id:'qp_test'\n    }\n});\nitems.push({\n    title:'⚙点选模式:'+dx_mode,\n    col_type:'text_2',\n    url:$('#noLoading#').lazyRule(()=>{\n        let dx_mode = getItem('点选','单测');\n        dx_mode=(dx_mode==='单测'?'多测':'单测');\n        setItem('点选',dx_mode);\n        updateItem('dx_mode',{\n            title:'⚙点选模式:'+dx_mode\n        });\n        return 'hiker://empty'\n    }),\n    extra:{\n        id:'dx_mode'\n    }\n});\nlet dx_test = '❤️解析多选测试';\nitems.push({\n    title:dx_test,\n    col_type:'text_2',\n    url:$('hiker://empty#noRecordHistory##noHistory#').rule((dx_test,color)=>{\n        setPageTitle(dx_test);\n        addListener('onClose', $.toString(() => {\n            refreshPage(false);//刷新魔断主页面\n        }));\n        d=[];\n        $.require(\"hiker://page/jxItem?rule=MyFieldᴰⁿ\").jxList();\n        jxs=d.filter(it=>it.col_type==='text_2').map(it=>pdfh(it.title,'font,-1&&Text'));\n        let data = storage0.getMyVar('jx_selected')||[];\n        let dx_filter = getItem('dx_filter','全部');\n        if(dx_filter === '已选'){\n            jxs = jxs.filter(it=>data.includes(it));\n        }else if(dx_filter=== '未选'){\n            jxs = jxs.filter(it=>!data.includes(it));\n        }\n        d=jxs.map((it)=>{\n            return {\n                title:(Array.isArray(data)&&data.includes(it))?color(it,'#12b668'):it,\n                // url:'toast://功能开发中',\n                url:$('#noLoading#').lazyRule((it,color)=>{\n                    let data = storage0.getMyVar('jx_selected');\n                    if(Array.isArray(data)){\n                        if(data.includes(it)){\n                            log('包含:'+it);\n                            data.splice(data.indexOf(it),1);\n                        }else{\n                            data.push(it)\n                        }\n                        storage0.putMyVar('jx_selected', data)\n                    }else{\n                        storage0.putMyVar('jx_selected', [it])\n                    }\n                    if(storage0.getMyVar('jx_selected').includes(it)){\n                        updateItem(it,{\n                            title:color(it,'#12b668')\n                        })\n                    }else{\n                        updateItem(it,{\n                            title:it\n                        })\n                    }\n                    return 'hiker://empty'\n                },it,color),\n                col_type:'text_3',\n                extra:{\n                    id:it\n                }\n            }\n        });\n        let op=[];\n        op.push({\n            title:'全选',\n            url:$('#noLoading#').lazyRule((jxs,color)=>{\n                storage0.putMyVar('jx_selected', jxs);\n                jxs.forEach(it=>{\n                    updateItem({title: color(it,'#12b668'), extra: {id: it}});\n                });\n                return 'hiker://empty'\n            },jxs,color),\n            col_type:'scroll_button'\n        });\n        op.push({\n            title:'全不选',\n            url:$('#noLoading#').lazyRule((jxs)=>{\n                storage0.putMyVar('jx_selected', []);\n                jxs.forEach(it=>{\n                    updateItem({title: it, extra: {id: it}});\n                });\n                return 'hiker://empty'\n            },jxs),\n            col_type:'scroll_button'\n        });\n        op.push({\n            title:'反选',\n            url:$('#noLoading#').lazyRule((jxs,color)=>{\n                let oldSel = storage0.getMyVar('jx_selected', []);\n                function getDifferentData(arrA, arrB) {\n                    return arrA.concat(arrB).filter(function (v, i, arr) {\n                        return arr.indexOf(v) === arr.lastIndexOf(v);\n                    });\n                }\n                let newSel = getDifferentData(jxs,oldSel);\n                storage0.putMyVar('jx_selected', newSel);\n                oldSel.forEach(it=>{\n                    updateItem({title: it, extra: {id: it}});\n                });\n                newSel.forEach(it=>{\n                    updateItem({title: color(it,'#12b668'), extra: {id: it}});\n                });\n                return 'hiker://empty'\n            },jxs,color),\n            col_type:'scroll_button'\n        });\n        op.push({\n            title:'删除',\n            url:$('#noLoading#').lazyRule(()=>{\n                let sel = storage0.getMyVar('jx_selected', []);\n                if(sel.length < 1){\n                    return 'toast://啥都没选，删除个鸡毛~'\n                }\n                return $('确认删除已选择的:'+sel[0]+'等'+sel.length+'条解析?').confirm((sel)=>{\n                    var parseRoute = getVar('parseRoute');\n                    eval('var json =' + fetch(parseRoute));\n                    for(let name in sel){\n                        if (json.codes.hasOwnProperty(name)) {\n                            delete json.codes[name];\n                        }\n                    }\n                    json.title = json.title.filter(it=>!sel.includes(it)); // 筛选没有被删除的标题\n                    writeFile(parseRoute, $.stringify(json));\n                    storage0.putMyVar('jx_selected', []);//删除完了清空选中项目\n                    refreshPage(false);\n                    return \"toast://已将〖\" + sel[0] + \"〗等\"+sel.length+\"条解析删除\";\n                },sel)\n            }),\n            col_type:'scroll_button'\n        });\n        op.push({\n            title:'操作|筛选 '+color(jxs.length,'#ff7000'),\n            url:'toast://前面按钮是操作，后面按钮是筛选',\n            col_type:'scroll_button'\n        });\n        op.push({\n            title:dx_filter==='全部'?color('全部','#12b668'):'全部',\n            url:$('#noLoading#').lazyRule(()=>{\n                setItem('dx_filter','全部');\n                refreshPage(false);\n                return 'hiker://empty'\n            }),\n            col_type:'scroll_button'\n        });\n        op.push({\n            title:dx_filter==='已选'?color('已选','#12b668'):'已选',\n            url:$('#noLoading#').lazyRule(()=>{\n                setItem('dx_filter','已选');\n                refreshPage(false);\n                return 'hiker://empty'\n            }),\n            col_type:'scroll_button'\n        });\n        op.push({\n            title:dx_filter==='未选'?color('未选','#12b668'):'未选',\n            url:$('#noLoading#').lazyRule(()=>{\n                setItem('dx_filter','未选');\n                refreshPage(false);\n                return 'hiker://empty'\n            }),\n            col_type:'scroll_button'\n        });\n        d=op.concat(d);\n        setResult(d);\n    },dx_test,color)\n});\nfunction sortByKey(array, key, order) {//对象数组按某个键值排序\n    return array.sort(function(a, b) {\n        var x = parseInt(a[key].match(/(\\d+)/)[1]);//修复大于10出问题\n        var y = parseInt(b[key].match(/(\\d+)/)[1]);\n        if (order) {\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0))\n        } else {\n            return ((x < y) ? ((x > y) ? 1 : 0) : -1)\n        }\n    })\n}\nitems.push({\n    title: '🛠一键测试已选接口：'+nowParse,\n    //url: 'toast://这是接口',\n    url:$().lazyRule((json,nowParse,timeout,sortByKey)=>{\n        if(!getItem('Parse','')){\n            return 'toast://避免资源浪费，请先在下方选一个接口再进行测试'\n        }\n        var count = json.length; //设置任务数量\n        log('魔断开启多任务解析,任务数量:'+count);\n        var task = function(obj) {\n            eval('var config_dp =' + fetch(getVar('oldConfig')));\n            eval(fetch(config_dp.cj));\n            return aytmParse(obj.vipUrl,obj.name,obj.timeout);\n        };\n        var parseRet = []; //解析结果列表\n        let tasks = json.map((it,idex)=>{\n            return {\n                func: task,\n                param: {\n                    //name:it.title,\n                    name:nowParse,\n                    type:it.title,\n                    // rule:it.rule,\n                    vipUrl: it.url,\n                    timeout: timeout\n                },\n                id: \"task\"+idex\n            }\n        });\n        showLoading(\"魔断并发解析中，剩余待测:\"+count);\n        be(tasks,{\n            func: function(obj, id, error,ret) {\n                log(\"监听到任务\" + id+'已结束,error:'+error+',ret:'+ret);\n                ret = ret||'';\n                error=error||'';\n                parseRet.push({\n                    task:id,\n                    ret:ret,\n                    error:error,\n                    name:tasks.filter(it=>it.id===id)[0].param.type\n                });\n                count -= 1; //完成了任务，任务数量-1\n                //log(obj);\n                if (count > 0) {\n                    showLoading(\"魔断并发解析中，剩余待测:\" + count)\n                } else {\n                    hideLoading();\n                }\n            },\n            param: {//传到监听函数的obj参数里\n                hi: \"ccc\",\n            }\n        });//执行多任务\n        //log(\"多任务执行结果数:\"+parseRet.length);\n        parseRet=sortByKey(parseRet,'task',true);//升序排列\n        // log(parseRet.map(it=>it.task));\n        return $('hiker://empty#noRecordHistory##noHistory#').rule((parseRet)=>{\n            setPageTitle(getItem('Parse')+'解析报告');\n            const {isVideo} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\n            const {color, small} = $.require(\"hiker://page/utiliy?rule=道长仓库Pro\");\n            let d=[];\n            let show_mode = getItem('show_mode','详细');\n            let col_type = show_mode==='详细'?'text_1':'text_3';\n            d.push({\n                title:'显示模式:'+color(show_mode,'#fa8c35'),\n                col_type:'scroll_button',\n                url:$('#noLoading#').lazyRule((color,cnt)=>{\n                    let show_mode = getItem('show_mode','详细');\n                    show_mode = show_mode==='详细'?'精简':'详细';\n                    setItem('show_mode',show_mode);\n                    updateItem('show_mode',{\n                        title:'显示模式:'+color(show_mode,'#fa8c35')\n                    });\n                    let col_type = show_mode==='详细'?'text_1':'text_3';\n                    for(let i=0;i<cnt;i++){\n                        updateItem('show_ret_'+i,{\n                            col_type:col_type\n                        });\n                    }\n                    return 'hiker://empty'\n                },color,parseRet.length),\n                extra:{\n                    id:'show_mode'\n                }\n            });\n            parseRet.forEach((it,idx)=>{\n                let title=it.name;\n                if(it.ret&&!it.ret.includes('undefined')&&(/#isVideo=true#/.test(it.ret)||isVideo(it.ret))){\n                    title=color(title,'#12b668')\n                }\n                let desc=(it.ret||it.error).substr(0,60);\n                d.push({\n                    title:title,\n                    desc:small(desc),\n                    col_type:col_type,\n                    url:it.ret,\n                    extra:{\n                        ret:it.ret||it.error,\n                        id:'show_ret_'+idx\n                    }\n                });\n            });\n            setResult(d);\n        },parseRet)\n    },json,nowParse,timeout,sortByKey),\n    col_type: 'text_center_1',\n    extra:{\n        lineVisible:false\n    }\n});\n/*\nvar parseRoute = 'hiker://files/rules/DuanNian/MyParse.json';\nvar MyParseS = {};\neval('var parseFile =' + fetch(parseRoute));\nMyParseS = Object.keys(parseFile.codes);\nMyParseS.reverse();\n*/\nvar d=[];\n$.require(\"hiker://page/jxItem?rule=MyFieldᴰⁿ\").jxList();\nd=d.filter(it=>it.col_type==='text_2').map(it=>pdfh(it.title,'font,-1&&Text'));\nMyParseS=d;\n\nfor (let i in MyParseS) {\n    if (!/defaultParse/.test(MyParseS[i])) {\n        let title =MyParseS[i];\n        items.push({\n            title: nowParse === title?color(title,'#12b668'):title,\n            url:$('#noLoading#').lazyRule((ipt)=>{\n                setItem('Parse',ipt);\n                refreshPage();\n                return 'toast://已选接口'+ipt;\n            },title) ,\n            col_type: 'scroll_button'\n        });\n    }\n}\nlet tag='';\nfor (let i in json) {\n    let title = json[i].title;\n    let zurl=json[i].url;\n    let zpic = json[i].pic_url;\n    if(getMyVar('zdy') === zurl){\n        tag=title;\n        title='⛳'+title;\n    }\n    items.push({\n        title:title,\n        url: $('#noLoading#').lazyRule((zurl,nowParse,timeout,vipObj) => {\n            if(getMyVar('zdy')!==zurl){\n                putMyVar('zdy', zurl);\n                refreshPage(false);\n            }\n            var dx_mode = getItem('点选','单测');//点选模式\n            if(dx_mode==='单测'){\n                showLoading('魔断动态解析中,请稍等...');\n                eval('var config_dp =' + fetch(getVar('oldConfig')));\n                eval(fetch(config_dp.cj));\n                return aytmParse(zurl,nowParse,timeout);\n            }else{\n                let data = storage0.getMyVar('jx_selected')||[];\n                if(data.length>32){\n                    return $('你所选择待测试的解析数共计:'+data.length+'个，超出了推荐最大数32,性能可能极差,是否继续?').confirm((data,vipObj,timeout)=>{\n                        const {test_report} = $.require('hiker://page/test_report');\n                        return test_report(data,vipObj,timeout)\n                    },data,vipObj,timeout)\n                }else{\n                    const {test_report} = $.require('hiker://page/test_report');\n                    return test_report(data,vipObj,timeout)\n                }\n            }\n        },zurl,nowParse,timeout,json[i]),\n        pic_url:zpic,\n        col_type: 'icon_4'\n    });\n}\naddListener('onClose', $.toString(() => {\n    clearVar(\"zdy\");\n}));\nitems.push({\n    title:'测试'+tag,\n    col_type: 'input',\n    url:$.toString((nowParse,timeout)=>{\n        eval(\"var config =\" + fetch(\"hiker://files/cache/MyParseSet.json\"));\n        eval(fetch(config.cj));\n        // eval(fetch('hiker://files/cache/Parse_Dn.js', {}));\n        return aytmParse(getMyVar('zdy'), nowParse,timeout);\n    },nowParse,timeout),\n    desc: '请输解析地址',\n    extra: {\n        titleVisible: true,\n        defaultValue: getMyVar('zdy', json[0].url) || \"\",\n        onChange: 'putMyVar(\"zdy\",input)',\n        textSize: 13,\n        type: \"textarea\",\n        height: 2\n    }\n});\nsetResult(items);"},{"name":"解析报告","path":"test_report","rule":"function sortByKey(array, key, order) {//对象数组按某个键值排序\n    return array.sort(function(a, b) {\n        var x = parseInt(a[key].match(/(\\d+)/)[1]);//修复大于10出问题\n        var y = parseInt(b[key].match(/(\\d+)/)[1]);\n        if (order) {\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0))\n        } else {\n            return ((x < y) ? ((x > y) ? 1 : 0) : -1)\n        }\n    })\n}\nfunction test_report(jxs,vipObj,timeout){//单正版多解析测试报告\n    jxs = jxs||[];//解析标题列表\n    let vipUrl = vipObj.url;\n    let vipName = vipObj.title;\n    if(jxs.length<1){\n    return 'toast://解析列表里无解析，测个鸡毛'\n    }\n    var count = jxs.length; //设置任务数量\n    log('魔断开启多任务解析,任务数量:'+count);\n    var task = function(obj) {\n        eval('var config_dp =' + fetch(getVar('oldConfig')));\n        eval(fetch(config_dp.cj));\n        return aytmParse(vipUrl,obj.name,timeout);\n    };\n    var parseRet = []; //解析结果列表\n    let tasks = jxs.map((it,idex)=>{\n        return {\n            func: task,\n            param: {\n                name:it,\n            },\n            id: \"task\"+idex\n        }\n    });\n    showLoading(\"魔断并发解析中，剩余待测:\"+count);\n    be(tasks,{\n        func: function(obj, id, error,ret) {\n            log(\"监听到任务\" + id+'已结束,error:'+error+',ret:'+ret);\n            ret = ret||'';\n            error=error||'';\n            parseRet.push({\n                task:id,\n                ret:ret,\n                error:error,\n                name:tasks.filter(it=>it.id===id)[0].param.name\n            });\n            count -= 1; //完成了任务，任务数量-1\n            //log(obj);\n            if (count > 0) {\n                showLoading(\"魔断并发解析中，剩余待测:\" + count)\n            } else {\n                hideLoading();\n            }\n        },\n        param: {//传到监听函数的obj参数里\n            hi: \"ccc\",\n        }\n    });//执行多任务\n    //log(\"多任务执行结果数:\"+parseRet.length);\n    parseRet=sortByKey(parseRet,'task',true);//升序排列\n    // log(parseRet.map(it=>it.task));\n    return $('hiker://empty#noRecordHistory##noHistory#').rule((vipName,parseRet)=> {\n        setPageTitle(vipName + '解析报告');\n        const {isVideo} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\n        const {color, small} = $.require(\"hiker://page/utiliy?rule=道长仓库Pro\");\n        let d = [];\n        let show_mode = getItem('show_mode', '详细');\n        let col_type = show_mode === '详细' ? 'text_1' : 'text_3';\n        d.push({\n            title: '显示模式:' + color(show_mode, '#fa8c35'),\n            col_type: 'scroll_button',\n            url: $('#noLoading#').lazyRule((color, cnt) => {\n                let show_mode = getItem('show_mode', '详细');\n                show_mode = show_mode === '详细' ? '精简' : '详细';\n                setItem('show_mode', show_mode);\n                updateItem('show_mode', {\n                    title: '显示模式:' + color(show_mode, '#fa8c35')\n                });\n                let col_type = show_mode === '详细' ? 'text_1' : 'text_3';\n                for (let i = 0; i < cnt; i++) {\n                    updateItem('show_ret_' + i, {\n                        col_type: col_type\n                    });\n                }\n                return 'hiker://empty'\n            }, color, parseRet.length),\n            extra: {\n                id: 'show_mode'\n            }\n        });\n        parseRet.forEach((it, idx) => {\n            let title = it.name;\n            if (it.ret && !it.ret.includes('undefined') && (/#isVideo=true#/.test(it.ret) || isVideo(it.ret))) {\n                title = color(title, '#12b668')\n            }\n            let desc = (it.ret || it.error).substr(0, 60);\n            d.push({\n                title: title,\n                desc: small(desc),\n                col_type: col_type,\n                url: it.ret,\n                extra: {\n                    ret: it.ret || it.error,\n                    id: 'show_ret_' + idx\n                }\n            });\n        });\n        setResult(d);\n    },vipName,parseRet)\n}\n\n$.exports.sortByKey=sortByKey;\n$.exports.test_report=test_report;"}],"title":"MyFieldᴰⁿ","author":"断念&道长魔改","version":429,"type":"tool","url":"hiker://empty","col_type":"text_center_1","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"工具","year_url":"","find_rule":"js:\n//log(MOBILE_UA);\n    const {demoData,defaultSets,floors} = $.require(\"hiker://page/demoData?rule=MyFieldᴰⁿ\");\nconst {getOne,unique2,duplicates} = $.require(\"hiker://page/utils?rule=MyFieldᴰⁿ\");\nlet sjTest =[];for(let i in demoData){sjTest=sjTest.concat(demoData[i])}\nthis.d = [];\nconst jxItem = $.require(\"hiker://page/jxItem?rule=MyFieldᴰⁿ\");\nvar Route = $.require(\"hiker://page/Route?rule=MyFieldᴰⁿ\");\neval(getItem('myFunction'));\n// mzPopup();\nvar jxOldV = getVar('jxOldV');\nvar jxNewV = getVar('jxNewV');\nvar versionTips = parseFloat(jxNewV) > parseFloat(jxOldV) ? '‘‘有新版本: v' + jxNewV + '\\n先更新小程序然后点击下方按钮拉取至本地’’' : 'v'+jxOldV;\nd.push({\n    title: '‘‘’’<big><span style=\"color:#0C0000\">魔断 2022',\n    desc: versionTips,\n    url: Route.szParse,\n    //url: 'toast://这是标题',\n    col_type: 'text_center_1'\n});\n\nfunction czGuide() {\n    return $().rule((k) => {\n        setResult([{\n            title: eval(JSON.parse(request(\"hiker://page/Guide?rule=MyFieldᴰⁿ\"))).rule,\n            col_type: 'rich_text'\n        }]);\n    })\n}\naddListener('onClose', $.toString(() => {\n    //clearVar(\"parseUrl.url\");\n    clearItem(\"class\");\n}));\nlet jxsRoute = \"hiker://files/cache/MyJiexi.json\";\nlet MyJiexi = {jiexis:[]};\nlet jiexis = {};\ntry {\n    MyJiexi = JSON.parse(request(jxsRoute));\n    jiexis = MyJiexi.jiexis.filter(it=>it.name===MyJiexi.now)[0];\n}catch (e) {}\nlet jx_extra = {\n    jsLoadingInject: true,\n    titleVisible: true,\n    defaultValue: getVar('parseUrl.url', '') || \"\",\n    onChange: 'putVar(\"parseUrl.url\",input)'\n};\nif(!/嗅探优先|顺序优先/.test(MyJiexi.autoMode)){\n    jx_extra.blockRules = ['baidu.*.png', '.jpg','.mp3','.mp4','.m3u8','.flv','.avi','.3gp','.mpeg','.wmv','.mov','.rmvb','.gif','.jpg','.jpeg','.png','.ico','.svg'];\n}\nd.push({\n    title:'开始解析',\n    col_type: 'input',\n    desc: \"请输解析地址\",\n    url:$.toString(()=>{\n        let url = getVar(\"parseUrl.url\", \"\").trim();\n        let sel = getItem(\"selected\", \"\");\n        let jx = getItem(\"selected\", \"\");\n        if(jx&&jx.length>2&&!jx.startsWith('http')){\n            jx = '';//断插高级方法直接清空解析链接后面调用标题名字\n        }\n        let ex=new RegExp('^http|LT|ruifenglb|suoyo|xfy|renrenmi|RongXingVR|xueren|wuduyun|laodi|Naifeimi|daodm|XMMT|v020c');\n        if (!ex.test(url)&&!/http|function/.test(sel)) {\n            log(getItem(\"selected\", \"\"));\n            return \"toast://还没有输入链接哦\";\n        }\n        let playUrl = jx + url;\n        log(playUrl);\n        if(!ex.test(playUrl)&&!/http|function/.test(sel)){\n            return 'toast://看起来播放地址似乎不对劲?\\n'+playUrl\n        }\n        return $().lazyRule((playUrl,url)=>{\n            let title = getItem(\"selected0\", \"&&\").split(\"&&\")[0].replace(/👉/g,'');\n            log('title:'+title);\n            if(getItem('dn.test_mode')==='断插'&&!/^不选$|^魔断$/.test(title)){\n                eval(\"var config =\" + request(\"hiker://files/cache/MyParseSet.json\"));\n                eval(request(config.cj));\n                let title = getItem(\"selected0\", \"&&\").split(\"&&\")[0].replace(/👉/g,'').replace(/不选/g,'');\n                log('开始调用断插测试,myFiled超时为:'+getItem('dn.timeout','5000'));\n                return aytmParse(url,title,parseInt(getItem('dn.timeout','5000')));\n            }else if(getItem('dn.test_mode')==='断插'&&/^魔断$/.test(title)){\n                eval(\"var config =\" + request(\"hiker://files/cache/MyParseSet.json\"));\n                eval(request(config.cj));\n                log('开始调用魔断拟真测试,myFiled超时为:'+getItem('dn.timeout','5000'));\n                return aytmParse(url,'',parseInt(getItem('dn.timeout','5000')));\n            }\n            else{\n                const {lazyParse} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\n                return lazyParse(playUrl,parseInt(getItem('dn.timeout','5000')))||'toast://解析失败,具体看日志'\n            }\n        },playUrl,url)\n    }),\n    extra: jx_extra\n});\nvar test_mode = getItem('dn.test_mode','Q神');\nlet sel_title = ['Q神','断插'].map((it) => {\n    return it===test_mode?'👉'+it:it;\n});\n\nd.push({\n    title:'💫'+test_mode,\n    col_type:'scroll_button',\n    url:$(sel_title,2).select(()=>{\n        input = input.replace(/👉/g,'');\n        setItem('dn.test_mode',input);\n        // setItem(\"selected\", url);\n        setItem(\"selected\", \"\"); // 重置解析头\n        setItem(\"selected0\", \"不选&&\"); //切换模式清空选中的解析\n        refreshPage(true);\n        return 'toast://已切换模式为:'+input\n    })\n});\n\nlet titleArr = [], urlArr = [];\nvar json={title:[],codes:{}};\nif(test_mode==='Q神'){\n    let parseUrlText = request(\"hiker://files/jiexi/jiexi.txt\");\n    let parseUrlArray = parseUrlText.split(/\\n/);\n    parseUrlArray.forEach((it) => {\n        it = it.split(\"&&\");\n        titleArr.push(it[0]);\n        urlArr.push(it[1]);\n    });\n}\nelse if(test_mode==='断插'){\n    let setFile = request('hiker://files/rules/DuanNian/MyParse.json');\n    try {\n        eval('json='+setFile);\n    }catch (e) {\n        log('Json解析发生了错误:'+e.message);\n    }\n    titleArr = json.title;\n    titleArr.forEach((it) => {\n        urlArr.push(json.codes[it]);\n    });\n    //$.stringify(json)\n}\n\nd.push({\n    title:titleArr.length+'',\n    col_type:'scroll_button',\n    url:$(test_mode+'共计解析数量:'+titleArr.length+'个\\n是否随机来个地址进行测试?').confirm((sjTest,getOne)=>{\n        putVar('parseUrl.url', getOne(sjTest));\n        refreshPage(true);\n        return 'toast://地址已给你了'\n    },sjTest,getOne)\n});\n\nlet realTitles = titleArr;\nlet barry = test_mode==='Q神'?['不选']:['不选','魔断'];\ntitleArr = barry.concat(titleArr);\nlet selTitle = getItem(\"selected0\", \"&&\").split(\"&&\")[0];\ntitleArr = titleArr.map((it) => {\n    return it===selTitle?'👉'+it:it;\n});\nd.push({\n    title: '☢️'+selTitle,\n    url: $(titleArr, 3).select((realTitles,urlArr) => {\n        input = input.replace(/👉/g,'');\n        if(input==='不选'){\n            setItem(\"selected\", '');\n            setItem(\"selected0\", input + \"&&\" + '');\n            refreshPage(false);\n            return \"toast://已取消解析口,直接进行直链解析\";\n        }else if(input==='魔断'){\n            setItem(\"selected\", '');\n            setItem(\"selected0\", input + \"&&\" + '');\n            refreshPage(false);\n            return \"toast://已设置为魔断解析，可直接触发备胎模式\";\n        }\n        let i = realTitles.indexOf(input);\n        let url = urlArr[i];\n        log(\"\\n更改接口> \" + url);\n        if(typeof(url)!=='string'){\n            log($.toString(url));\n            setItem(\"selected\", $.toString(url));\n            // return 'toast://暂不支持断插function系列的高级解析测试'\n        }else{\n            setItem(\"selected\", url);\n        }\n        setItem(\"selected0\", input + \"&&\" + url);\n        refreshPage(false);\n        return \"toast://切换解析口为:\"+input;\n    }, realTitles,urlArr),\n    col_type: \"scroll_button\"\n});\nd.push({\n    title:'🍀主题',\n    url: \"hiker://page/Route?rule=MyFieldᴰⁿ&type=主题#noHistory##noRecordHistory#\",\n    col_type: \"scroll_button\"\n});\nd.push({\n    title:'🍀解析',\n    url: \"hiker://page/Route?rule=MyFieldᴰⁿ&type=解析#noHistory##noRecordHistory#\",\n    col_type: \"scroll_button\"\n});\nvar timeout = getItem('dn.timeout','5000');\nd.push({\n    title:'🕒'+timeout,\n    col_type:'scroll_button',\n    url:$(timeout,'请输入解析超时毫秒').input(()=>{\n        if(!parseInt(input)){\n            return 'toast://超时设置错误，拒绝保存'\n        }\n        setItem('dn.timeout',input||'5000');\n        refreshPage(true);\n        return 'toast://已设置解析超时毫秒:'+getItem('dn.timeout','5000');\n    }),\n});\nd.push({\n    title:'📲导出TXT',\n    col_type:'scroll_button',\n    url:$('确认导出本地明文且复制云剪切板?\\n可完美导出名称地址的通用规则,对function类兼容暂时不是很好').confirm((titleArr,urlArr)=>{\n        //urlArr=urlArr.slice(2);\n        titleArr=titleArr.filter(it=>!/不选|魔断/.test(it));\n        let mode = getItem('dn.test_mode','Q神');\n        if(mode==='断插'||mode==='Q神'){\n            let jxCode = [];\n            titleArr.forEach((it) => {\n                let i = titleArr.indexOf(it);\n                let code = urlArr[i]||'';\n                let outCode = (typeof(code)==='string')?code.trim():base64Encode(code.toString().trim());\n                let outTitle = it.replace(/👉/g,'');\n                if(outTitle.startsWith('http')&&(typeof(outCode)==='undefined'||!outCode)){\n                    jxCode.push(outTitle+','+outTitle);\n                }else{\n                    jxCode.push(outTitle+','+outCode||'')\n                }\n            });\n            let outText = jxCode.join('\\n');\n            let outPath = 'hiker://files/rules/DuanNian/MyParseOut_'+mode+'.txt';\n            writeFile(outPath,outText);\n            let pastes = getPastes();\n            let importUrl = sharePaste(base64Encode(outText),pastes[1]);\n            let importCode = '魔断解析导入口令¥¥'+importUrl;\n            copy(importCode);\n            return 'toast://文件已导出到:'+outPath+'\\n请自行通过MT管理器查看'\n        }else{\n            return 'toast://我不清楚你要做什么?\\n'+mode;\n        }\n    },titleArr,urlArr),\n});\nd.push({\n    title:'📥导入TXT',\n    col_type:'scroll_button',\n    url:$().rule(()=>{\n        let d = [];\n        d.push({\n            title:'导入说明',\n            col_type:'text_1',\n            desc:'支持此插件导出格式的文本进行导入。\\n格式1: 名称,地址 一行一个解析\\n格式2:云剪切板 魔断解析导入口令¥¥剪切板地址',\n            url:'hiker://empty'\n        });\n        d.push({\n            desc: \"txt文本解析规则,一行一个\",\n            col_type: 'input',\n            title:'解析文本',\n            extra: {\n                titleVisible: false,\n                defaultValue: getVar('dn.import_text', ''),\n                type: \"textarea\",\n                height:-1,\n                onChange: 'putVar(\"dn.import_text\",input)'\n            }\n        });\n        d.push({\n            title:'📥导入',\n            col_type:'text_center_1',\n            url:$('确定编辑好了吗?此操作将覆盖本地已有的记录，建议备份后用空文件导入').confirm(()=>{\n                const {defaultSets} = $.require(\"hiker://page/demoData?rule=MyFieldᴰⁿ\");\n                let parseRoute = 'hiker://files/rules/DuanNian/MyParse.json';\n                let jsCode = request(parseRoute)||JSON.stringify({title:[],codes:{},settings:defaultSets});\n                try {\n                    eval('var json =' + jsCode);\n                }\n                catch (e) {\n                    return 'toast://发生错误:\\n'+e.message\n                }\n                let toImport = getVar(\"dn.import_text\");\n                if(/魔断解析导入口令¥¥/.test(toImport)&&toImport.split('¥¥').length>1){\n                    let url = toImport.split('¥¥')[1];\n                    if(!/^http/.test(url)){\n                        return 'toast://剪切板地址有误,导入失败'\n                    }\n                    toImport = parsePaste(url);\n                    toImport = base64Decode(toImport);\n                }\n                //log(toImport);\n                let jiexi = toImport.split('\\n').filter(it=>it.trim());\n               // log(jiexi);\n                let parseTitle = [];\n                let parseCode = {};\n                for (let i in jiexi) {\n                    let title=jiexi[i].split(',')[0];\n                    let code=jiexi[i].split(',')[1];\n                    if(!title||!code){\n                        log('错误解析:'+jiexi[i]);\n                        continue;\n                    }\n                    parseTitle.push(title);\n                    //log(title);\n                    if(!(code.replace(/[\\s]/g,'').startsWith('http'))){\n                        // log(title+'为函数解析');\n                        if(code.replace(/[\\s]/g,'').length>20){//视为function\n                            try {\n                                code = eval(base64Decode(code));\n                                // log(code);\n                            }catch (e) {\n                                code = e.message;\n                            }\n                        }\n                    }\n                    parseCode[title]=code;\n                }\n                let scObject = [\"CityIP\", \"pcUA\", \"cacheM3u8\", \"defaultParseWeb\",\"maoss\", \"LLQ\"];\n                parseTitle = parseTitle?parseTitle.filter(it=>!scObject.includes(it)):[];\n                \n                var newParseTitle = json.title.concat(parseTitle);\n                json.title = Array.from(new Set(newParseTitle));\n                Object.assign(json.codes, parseCode);\n                let newFile = $.stringify(json); //JSON.parse会报错\n                writeFile(parseRoute, newFile);\n                refreshPage(false);\n                return 'toast://已成功导入'+jiexi.length+'条解析';\n            }),\n            extra:{\n                lineVisible:true\n            }\n        });\n        setResult(d);\n    }),\n});\nd.push({\n    title:'☯️查重处理',\n    col_type:'scroll_button',\n    url:$().lazyRule((unique2,duplicates,floors)=>{\n        let parseRoute = 'hiker://files/rules/DuanNian/MyParse.json';\n        let jsCode = request(parseRoute);\n        try {\n            eval('var json =' + jsCode);\n        }\n        catch (e) {\n            return 'toast://本地那个MyParse.json文件有问题,这个功能不给你用了!'\n        }\n        let titles = json.title;\n        let codes = json.codes;\n        let keys= Object.keys(codes);\n        let keys_re_ct = keys.length - unique2(keys).length; // 名称重复\n        let normal_list = [];\n        for(let o in codes){\n            if(typeof(codes[o])!=='undefined'&&typeof(codes[o])!=='function'){\n                normal_list.push(codes[o]);\n            }\n        }\n        let reNorList = unique2(normal_list);\n        let value_re_ct = normal_list.length - reNorList.length; //代码重复\n        let values_re = duplicates(normal_list);//重复的值\n        let ftlist = [];\n        let flags = {};\n        let myFloors = floors;\n        for(let j in codes){//遍历所有\n            let one = codes[j];\n            try {\n                if (typeof(one) !== 'function'&&values_re.includes(one)) {\n                    if (typeof (flags[one]) === 'undefined' || !flags[one]) {\n                        //取出第一个标志\n                        flags[one] = myFloors[0];\n                        myFloors.splice(0, 1);//删除标志列表里的第一个元素\n                    }\n                    ftlist.push({key: flags[one] + j, value: one});\n                } else {\n                    ftlist.push({key: j, value: one});\n                }\n            }catch (e) {\n                log(e.message)\n            }\n        }\n        // log(JSON.stringify(flags));\n        let newCodes = {};\n        for(let k in ftlist){\n            newCodes[ftlist[k].key] = ftlist[k].value;\n        }\n        let tips = '检测到名称复用项目数:'+keys_re_ct+',代码重复项目数量:'+value_re_ct+'\\n需要一键打个标识吗?不支持自动删除,打标志自行解决';\n        return $(tips).confirm((value_re_ct,json,newCodes,parseRoute)=>{\n            if(value_re_ct<1){\n                return 'toast://既然都是0个重复项目了，就不需要我做什么了!'\n            }\n            function compare(){\n                return function (a, b){\n                    const {floors} = $.require(\"hiker://page/demoData?rule=MyFieldᴰⁿ\");\n                    let x = a.substring(0,1);\n                    let y = b.substring(0,1);\n                    return floors.indexOf(y)-floors.indexOf(x);\n                }\n            }\n            json.codes = newCodes;\n            let titles = Object.keys(newCodes);\n            titles = titles.sort(compare());\n            json.title = titles;\n            var newFile = $.stringify(json); //JSON.parse会报错\n            writeFile(parseRoute, newFile);\n            refreshPage(false);\n            return 'toast://已一键打上标志';\n        },value_re_ct,json,newCodes,parseRoute)\n    },unique2,duplicates,floors),\n});\nd.push({\n    title:\"🔄重置B站UA\",\n    col_type: \"scroll_button\",\n    url: \"https://www.bilibili.com/\",\n    extra: {\n        ua: PC_UA\n    }\n});\nd.push({\n    title:\"🗑️批量操作\",\n    col_type: \"scroll_button\",\n    url: $('hiker://empty#noRecordHistory#').rule(()=>{\n        let localHtml = getPath('hiker://files/cache/plscParse.html');\n        let testcode = request(localHtml);\n        if(!testcode||/批量删除\\/导出解析/.test(testcode)){\n            // writeFile(localHtml,request('http://hiker.nokia.press/hikerule/zyw_data/10'));\n            writeFile(localHtml,request('https://gitcode.net/qq_32394351/dr/-/raw/master/dp/batch_delete.html'));\n        }\n        let d = [];\n        d.push({title: \"批量操作解析\", desc: \"auto&&float\", url: localHtml, col_type: \"x5_webview_single\"});\n        setResult(d);\n    }),\n});\nlet web_sel = '爱奇艺/优酷/腾讯/芒果/哔哩哔哩/搜狐/西瓜/PPTV/咪咕/乐视/1905/风行/龙腾/人人迷/五毒/多多/融兴/雪人/旋风云/瑞丰资源'.split('/');\nd.push({\n    title:'‘‘’’<span style=\"color:#00d9ff\">来个测试地址',\n    col_type: \"text_3\",\n    url:$(web_sel,4,'选1条正版|切片地址来解析').select((demoData,getOne)=>{\n        let urls = demoData[input];\n        let url = getOne(urls)||'';\n        if(!url){\n            return 'toast://'+input+'这个网站暂时没有播放例子'\n        }\n        putVar('parseUrl.url', url);\n        refreshPage(false);\n        return 'toast://给你找了个'+input+'的播放地址:\\n'+url;\n    },demoData,getOne)\n});\nd.push({\n    title:'🎯解析测试',\n    col_type:'text_3',\n    url:'hiker://page/jxTest?rule=MyFieldᴰⁿ',\n});\nif(test_mode==='Q神'){\n    d.push({\n        //'#ff7000'\n        title:'‘‘’’<span style=\"color:#ff7000\">Q神插件接口设置',\n        // title: '““Q神插件接口设置””',\n        url: \"hiker://page/EditUrl?rule=MyFieldᴰⁿ\",\n        col_type: 'text_3'\n    });\n}else if(test_mode==='断插'){\n    let url = realTitles.length>0?\"hiker://page/Route?rule=MyFieldᴰⁿ&type=编辑#noHistory#\":$('别设置了，先拉代码').confirm()\n    d.push({\n        title:'‘‘’’<span style=\"color:#ff7000\">断插接口设置',\n        url: url,\n        col_type: 'text_3'\n    });\n}\nd.push({\n    title:'‘‘’’<span style=\"color:#ff7000\">小白关怀模式: </span><span style=\"color:grey\"><small>不懂不学啥也不会？拯救傻白甜的你</small></span>',\n    url: $('#noLoading##noRecordHistory#').lazyRule(()=>{\n        return 'hiker://page/smallWhite?rule=MyFieldᴰⁿ'\n    }),\n    col_type: 'text_1',\n});\n\njxItem.lqFile();\nlet extra = d.slice(-7,d.length); //断插添加的元素\nd = d.slice(0,-7); // 自己的函数\nextra[0].title='拉取列表(不推荐)'\nextra[0].col_type='text_2'\nextra[1].title='拉取代码(强烈推荐)'\nextra[1].col_type='text_2'\nextra[4].col_type='text_center_1'\nextra[4].url=czGuide();\nextra.splice(2,1);\nd = d.concat(extra);\n// d.splice(d.length-5,1);\nsetResult(d);","searchFind":"","search_url":"","titleColor":"#AEB404","group":"⑩模板工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"Parse_Dn-vue.html\",\"path\":\"Parse_Dn.html\",\"rule\":\"<!DOCTYPE html>\\n<html>\\n<head>\\n    <meta charset=\\\"utf-8\\\">\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no\\\" />\\n    <title>Parse_Dn_vue</title>\\n    <script>\\n        const vuePath = 'hiker://files/rules/dzHouse/js/vue.js';\\n        if(typeof(fba)=='undefined'||!fba){\\n            var fba = fy_bridge_app;\\n        }\\n        try {\\n            if(typeof(request)=='undefined'||!request){\\n                eval(fba.getInternalJs());\\n            }\\n            window.request = window.request00 || window.request;\\n            // fba.log(vuePath);\\n            if(!request(vuePath)){\\n                fba.writeFile(vuePath,request('http://hiker.nokia.press/hikerule/rulelist.json?id=1823'));\\n            }\\n            try {\\n                eval(fba.fetch(vuePath));\\n            }catch (e) {\\n                // console.log(e.message);\\n                fba.log(e.message);\\n            }\\n            // fba.log('加载vue组件完毕');\\n        }catch (e) {\\n            alert(e.message);\\n        }\\n    </script>\\n    <!--    <script src=\\\"https://unpkg.com/vue@next\\\"></script>-->\\n    <!--    <script src=\\\"file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/rules/dzHouse/js/vue.js\\\"></script>-->\\n    <style>\\n        body {\\n            margin: 0 5px 0 5px;\\n            padding: 0 0px 0 0px;\\n            /*            background: #F9F0DA;*/\\n            font-weight: 0;\\n            font-family: \\\"Microsoft YaHei\\\",\\\"宋体\\\",\\\"Segoe UI\\\", \\\"Lucida Grande\\\", Helvetica, Arial,sans-serif, FreeSans, Arimo;\\n        }\\n        #app{\\n            margin-top:-10px;\\n        }\\n        #tips{\\n            margin-top:-10px;\\n            margin-bottom:5px;\\n        }\\n        .fung{\\n            text-align:center\\n        }\\n        div.box {\\n            margin-top:-1px;\\n            height: 43px;\\n            line-height: 20px;\\n        }\\n        /*输入框尺寸*/\\n        form {\\n            background: transparent;\\n            position: relative;\\n            width: 100%;\\n        }\\n\\n        input, label, select {\\n            border: none;\\n            outline: none;\\n        }\\n        /*字体位置*/\\n        input {\\n            width: 77%;\\n            height: 32px;\\n            padding-left: 66px;\\n            padding-right: 0px;\\n        }\\n\\n        label {\\n            text-align:center;\\n            line-height: 43px;\\n            height: 40px;\\n            width: 60px;\\n            cursor: pointer;\\n            position: absolute;\\n        }\\n\\n        /*小框*/\\n        .bar label {\\n            /*background: #D06B6C;*/\\n            border-radius: 5px 555px 555px 5px;\\n            width: 60px;\\n            font-size: 13px;\\n            top: 0;\\n            left: 3px;\\n        }\\n\\n        /*输入框样式*/\\n        .bar input {\\n            /*border-radius: 5px 555px 555px 5px;\\n             */\\n            border-radius: 4px;\\n        }\\n\\n        /*列表*/\\n        select {\\n            text-align:center;\\n            line-height:40px;\\n            height: 40px;\\n            width: 20px;\\n            cursor: pointer;\\n            position: absolute;\\n        }\\n\\n        /*列表*/\\n        .lieb select{\\n            /*border-radius: 4px;*/\\n            border-radius: 555px 5px 5px 555px;\\n            width: 80px;\\n            text-align:center;\\n            font-size: 13px;\\n            top: 0;\\n            right: 2px;\\n        }\\n\\n        /*头像*/\\n        .round_icon{\\n            width: 40px;\\n            height: 40px;\\n            display: flex;\\n            border-radius: 50%;\\n            align-items: center;\\n            justify-content: center;\\n            overflow: hidden;\\n        }\\n    </style>\\n</head>\\n<body>\\n<div class=\\\"fung\\\">\\n    <a style=\\\"float:left;\\\">\\n        <button  :style=\\\"'border: none;border-radius:10px;background: '+themes.closeBtn.background+';width: 80px; font-size: 18px;color: '+themes.closeBtn.color\\\" onclick=\\\"cancel();\\\">关 闭</button>\\n    </a>\\n    <a class=\\\"btn btn-primary\\\">\\n        <!--        <button  :style=\\\"'border: none;border-radius:10px;background: '+themes.tipsBtn.background+';width: 120px; font-size: 18px;color: '+themes.tipsBtn.color\\\" @click=\\\"showTips=!showTips\\\">{{showTips?\\\"隐藏提示\\\":\\\"显示提示\\\"}}</button>-->\\n        <button  :style=\\\"'border: none;border-radius:10px;background: '+themes.tipsBtn.background+';width: 120px; font-size: 18px;color: '+themes.tipsBtn.color\\\" @click=\\\"showTips=!showTips\\\" v-text=\\\"showTips?'隐藏提示':'显示提示'\\\"></button>\\n    </a>\\n    <a style=\\\"float:right\\\">\\n        <button :style=\\\"'border: none;border-radius:10px;background: '+themes.saveBtn.background+';width: 80px; font-size: 18px;color: '+themes.saveBtn.color\\\" onclick=\\\"clickme('配 置 已 保 存 ！', 1000, '开');\\\">保 存</button>\\n    </a>\\n\\n</div>\\n<br>\\n<div id=\\\"app\\\">\\n    <h6 id=\\\"tips\\\" v-html=\\\"tips\\\" v-show=\\\"showTips\\\"></h6>\\n    <div class=\\\"box bar\\\" v-for=\\\"option in options\\\">\\n        <form>\\n            <!--            <label type=\\\"submit\\\" :style=\\\"'background:'+themes.barlabel.background+';color:'+themes.barlabel.color\\\">{{ option.name }}</label>-->\\n            <label type=\\\"submit\\\" :style=\\\"'background:'+themes.barlabel.background+';color:'+themes.barlabel.color\\\" v-text=\\\"option.name\\\"></label>\\n            <input :style=\\\"'background:'+themes.barInput.background+';border: 3px solid '+themes.barInput.color\\\" type=\\\"text\\\" onclick=\\\"resetSelect(this.id)\\\" :placeholder=\\\"option.placeholder||placeholder\\\" v-model=\\\"option.value\\\" v-bind:id=\\\"option.id\\\">\\n            <div class=\\\"lieb\\\">\\n                <select :style=\\\"'background:'+themes.select.background+';color:'+themes.select.color\\\" :clearable=\\\"true\\\" size=\\\"2\\\" :id=\\\"option.id+'Select'\\\" :name=\\\"option.id\\\" onchange=\\\"getOption(this.id,this.name)\\\"  v-model=\\\"option.value\\\">\\n                    <!--                    <option v-if=\\\"option.id!=='qju'&&option.id!=='cj'\\\" :value=\\\"sel\\\" :key=\\\"index\\\" v-for=\\\"(sel,index) in mySelect\\\">{{ sel }}</option>-->\\n                    <option v-if=\\\"option.id!=='qju'&&option.id!=='cj'\\\" :value=\\\"sel\\\" :key=\\\"index\\\" v-for=\\\"(sel,index) in mySelect\\\" v-text=\\\"sel\\\"></option>\\n                    <!--                    <option v-else-if=\\\"option.id==='qju'\\\" :value=\\\"sel\\\" :key=\\\"index\\\" v-for=\\\"(sel,index) in ['默认'].concat(mySelect)\\\">{{ sel }}</option>-->\\n                    <option v-else-if=\\\"option.id==='qju'\\\" :value=\\\"sel\\\" :key=\\\"index\\\" v-for=\\\"(sel,index) in ['默认'].concat(mySelect)\\\" v-text=\\\"sel\\\"></option>\\n                    <!--                    <option :value=\\\"sel\\\" :key=\\\"index\\\" v-else v-for=\\\"(sel,index) in cjSel\\\">{{ sel }}</option>-->\\n                    <option :value=\\\"sel\\\" :key=\\\"index\\\" v-else v-for=\\\"(sel,index) in cjSel\\\" v-text=\\\"sel\\\"></option>\\n                </select>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n<div>\\n    <a v-for=\\\"ver in verinfo\\\" style=\\\"float:left;margin-top:1px;margin-right: 20px\\\" v-bind:id='ver.id' onclick=\\\"doOption(this.id)\\\">\\n        <img :src=\\\"ver.avatar\\\" class=\\\"round_icon\\\"  alt=\\\"\\\">\\n        <!--        <span style=\\\"margin-left:10px;line-height:10px;font-size:12px;color: grey;\\\">{{ ver.author }}</span>-->\\n        <span style=\\\"margin-left:10px;line-height:10px;font-size:12px;color: grey;\\\" v-text=\\\"ver.author\\\"></span>\\n    </a>\\n    <a style=\\\"float:right;margin-top:10px;\\\">\\n        <button :style=\\\"'border: none;border-radius:10px;background:'+themes.saveCloseBtn.background+';width: 160px;height:40px; font-size: 18px;color: '+themes.saveCloseBtn.color\\\" onclick=\\\"clickme('配 置 已 保 存 ！', 1000, '关');\\\">保存并关闭界面</button>\\n    </a>\\n</div>\\n<script>\\n    let tips = `提示：<br>①注意插件选项，没有手动导入插件的话不用动它。如设置不当会导致规则无法使用，<br>解决办法：视界打开更多设置→文件管理→点cache→长按MyParseSet.json删除掉；<br>②全局设置如果选择了非默认那么全部的解析会使用这一设置，不想这样的话请填入默认；<br>③绿色保存按钮仅仅保存配置不会关闭设置页面，配置后想保存并关闭设置页面的话请点蓝色按钮；<br>④如果遇到保存按钮点不动或者报错的情况，以下路径挨着删除一遍，然后重新拉取插件，网页再打开此网页[不要先拉代码]。记得备份<br>\\n主插件存放路径: /cache/Parse_Dn.js<br>\\n网页脚本存放路径: /cache/Parse_Dn.html<br>\\n旧断插配置路径:/cache/MyParseSet.json<br>\\n新断插配置路径/rules/DuanNian/MyParse.json<br>\\n主题文件:/cache/MyTheme.json<br>\\n主题文件:/cache/MyTheme.json<br>\\n自动档解析:/cache/MyJiexi.json<br>\\n    ⑤阅读完提示点关闭加载完整设置页面，如出问题无法自行解决点图片进入论坛向我反馈。<br>`;\\n    let placeholder='输入解析名或者URL......';\\n    //#aa96da #fc5185\\n    let themes = {\\n        name:'默认主题',\\n        closeBtn:{color:'#f6f6f6',background:'#aa96da'},\\n        saveBtn:{color:'#F9F0DA',background:'#068006'},\\n        saveCloseBtn:{color:'#F9F0DA',background:'#05BFC5'},\\n        tipsBtn:{color:'#F9F0DA',background:'#05BFC5'},\\n        barlabel:{color:'#F9F0DA',background:'#aa96da'},\\n        barInput:{color:'#aa96da',background:'#ffffd2'},\\n        select:{color:'#F9F0DA',background:'#aa96da'},\\n    };\\n    let themeDef = {\\\"name\\\":\\\"断念原皮\\\",\\\"closeBtn\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#c5464a\\\"},\\\"saveBtn\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#068006\\\"},\\\"saveCloseBtn\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#05BFC5\\\"},\\\"tipsBtn\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#05BFC5\\\"},\\\"barlabel\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#D06B6C\\\"},\\\"barInput\\\":{\\\"color\\\":\\\"#D06B6C\\\",\\\"background\\\":\\\"#F9F0DA\\\"},\\\"select\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#D06B6C\\\"}};\\n    var themeRoute = \\\"hiker://files/cache/MyTheme.json\\\";\\n    if(!fba.fetch(themeRoute)){\\n        fba.writeFile(themeRoute,JSON.stringify({now_theme:'默认主题',themes:[themes,themeDef]}))\\n    }\\n    try {\\n        let myThemes = JSON.parse(fba.fetch(themeRoute));\\n        let nowTheme = myThemes.themes.filter(it=>it.name === myThemes.now_theme);\\n        themes = nowTheme?nowTheme[0]:myThemes.themes[0];\\n    }catch (e) {}\\n\\n    // 断念初始化部分\\n    const allApi=['https://test.rongxingvr.com/test/?url=','http://cache.languang.icu:88/didi.php?url='];\\n    var settings = {\\n        qy: '万能解析Ⓙ',\\n        yk: '万能解析Ⓙ',\\n        tx: '万能解析Ⓙ',\\n        mg: '万能解析Ⓙ',\\n        bl: '万能解析Ⓙ',\\n        sh: '万能解析Ⓙ',\\n        xg: '万能解析Ⓙ',\\n        // al: '万能解析Ⓙ',\\n        pp: '万能解析Ⓙ',\\n        mi: '万能解析Ⓙ',\\n        le: '万能解析Ⓙ',\\n        lt: '万能解析Ⓙ',//龙腾\\n        rr:'万能解析Ⓙ',//人人迷\\n        wd:'万能解析Ⓙ',//五毒云\\n        oth: '道长仓库通免',\\n        one: '1080',\\n        fun: '融兴',\\n        qju: '默认',\\n        cj: 'hiker://files/cache/Parse_Dn.js'\\n    };\\n    var oldRoute = \\\"hiker://files/cache/MyParseSet.json\\\";\\n    var mySet = fba.fetch(oldRoute);\\n    var newRoute = \\\"hiker://files/rules/DuanNian/MyParse.json\\\";\\n    if(!fba.fetch(newRoute)){\\n        fba.writeFile(newRoute,JSON.stringify({settings:settings,title:[\\\"yun1717\\\",\\\"你爹科技\\\",\\\"融兴\\\",\\\"人人迷-优酷\\\"],codes:{\\\"你爹科技\\\":\\\"http://cache.languang.icu:88/didi.php?url=\\\",\\\"融兴\\\":\\\"https://test.rongxingvr.com/test/?url=\\\",\\\"人人迷-优酷\\\":\\\"https://svip.renrenmi.cc:2222/api/?key=nn4j8rukPXSVzR78E9&url=\\\"}}))\\n    }\\n    var newConfig = fba.fetch(newRoute);\\n    var mySelect = [];\\n    function compare(list) {\\n        return function (it) {\\n            return !list.includes(it)\\n        }\\n    }\\n    if(newConfig&&newConfig.length>20){\\n        eval(\\\"newConfig =\\\" + newConfig + \\\";\\\");\\n        let newKeys = Object.keys(newConfig.settings);\\n        let nowKeys = Object.keys(settings);\\n        for(let i in newKeys){//清除多余的节点\\n            if(!nowKeys.includes(newKeys[i])){\\n                delete newConfig.settings[newKeys[i]]\\n            }\\n        }\\n        settings = Object.assign(settings,newConfig.settings);\\n        var ycTitle = ['defaultParse', 'defaultParseWeb','maoss', 'CityIP', 'cacheM3u8', 'pcUA', 'parseLc', 'gparse', 'nparse'];\\n        mySelect = newConfig.title.filter(compare(ycTitle));\\n        // mySelect = mySelect.map((it)=>{\\n        //     let flag = 'Ⓤ';\\n        //     if(typeof(newConfig.codes[it])==='function'){\\n        //         flag = 'Ⓙ';\\n        //     }else if(typeof(newConfig.codes[it])==='undefined'){\\n        //         flag = '';\\n        //     }\\n        //     return flag+it\\n        // });\\n    }\\n    //fba.log(JSON.stringify(mySelect));\\n\\n    let options = [\\n        {\\n            name:'爱奇艺',\\n            id:'qy',\\n            value:settings.qy,\\n            placeholder:'设置爱奇艺'\\n        },\\n        {\\n            name:'优酷',\\n            id:'yk',\\n            value:settings.yk\\n        },\\n        {\\n            name:'腾讯',\\n            id:'tx',\\n            value:settings.tx\\n        },\\n        {\\n            name:'芒果',\\n            id:'mg',\\n            value:settings.mg\\n        },\\n        {\\n            name:'哔哩哔哩',\\n            id:'bl',\\n            value:settings.bl\\n        },\\n        {\\n            name:'搜狐',\\n            id:'sh',\\n            value:settings.sh\\n        },\\n        {\\n            name:'西瓜',\\n            id:'xg',\\n            value:settings.xg\\n        },\\n        {\\n            name:'PPTV',\\n            id:'pp',\\n            value:settings.pp\\n        },\\n        {\\n            name:'咪咕',\\n            id:'mi',\\n            value:settings.mi\\n        },\\n        {\\n            name:'乐视',\\n            id:'le',\\n            value:settings.le\\n        },\\n        {\\n            name:'1905',\\n            id:'one',\\n            value:settings.one\\n        },\\n        {\\n            name:'风行',\\n            id:'fun',\\n            value:settings.fun\\n        },\\n        {\\n            name:'龙腾',\\n            id:'lt',\\n            value:settings.lt\\n        },\\n        {\\n            name:'人人迷',\\n            id:'rr',\\n            value:settings.rr\\n        },\\n        {\\n            name:'五毒',\\n            id:'wd',\\n            value:settings.wd\\n        },\\n        {\\n            name:'其他',\\n            id:'oth',\\n            value:settings.oth\\n        },\\n        {\\n            name:'全局',\\n            id:'qju',\\n            value:settings.qju\\n        },\\n        {\\n            name:'插件',\\n            id:'cj',\\n            value:settings.cj\\n        },\\n    ];\\n\\n    function Did(id){\\n        return document.getElementById(id);\\n    }\\n    function getOption(id,title) {\\n        var obj = Did(id);\\n        Did(title).value = obj.options[obj.selectedIndex].text;\\n        // Did(title).value = obj.options[obj.selectedIndex].text.replace(/Ⓤ|Ⓙ/g,'');\\n    }\\n    function resetSelect(id){\\n        Did(id+\\\"Select\\\").options.selectedIndex = -1;\\n    }\\n\\n    //函数部分\\n\\n    function Toast(msg,duration){\\n        duration=isNaN(duration)?2000:duration;\\n        var m = document.createElement('div');\\n        m.innerHTML = msg;\\n        m.style.cssText=\\\"width:45%; min-width:150px; background:#311; opacity:0.6; height:auto;min-height: 45px; color:#fff; line-height:45px; text-align:center; border-radius:10px; position:fixed; top:60%; left:26%; z-index:999999;\\\";\\n        document.body.appendChild(m);\\n        setTimeout(function() {\\n            var d = 0.5;\\n            m.style.webkitTransition = '-webkit-transform ' + d + 's ease-in, opacity ' + d + 's ease-in';\\n            m.style.opacity = '0';\\n            setTimeout(function() { document.body.removeChild(m) }, d * 1000);\\n        }, duration);\\n    }\\n\\n    function openDnPage(){\\n        fba.open(JSON.stringify({\\n            rule: \\\"=^_^=\\\",\\n            title: \\\"编辑解析\\\",\\n            url: \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=编辑#noHistory##noRecordHistory#\\\",\\n            group: \\\"\\\",\\n            col_type: \\\"\\\",\\n            //findRule: \\\"js:this.d=[];$.require(\\\\\\\"hiker://page/Parse_Dn.js?rule=MyFieldᴰⁿ\\\\\\\").edit();setResult(d);\\\",\\n            preRule: \\\"\\\",\\n            extra: {}\\n        }));\\n    }\\n    function openTheme(){\\n        fba.open(JSON.stringify({\\n            rule: \\\"=^_^=\\\",\\n            title: \\\"主题管理\\\",\\n            url: \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=主题#noHistory##noRecordHistory#\\\",\\n            group: \\\"\\\",\\n            col_type: \\\"\\\",\\n            preRule: \\\"\\\",\\n            extra: {}\\n        }));\\n    }\\n    function openJxManage(){\\n        fba.open(JSON.stringify({\\n            rule: \\\"=^_^=\\\",\\n            title: \\\"解析配置管理\\\",\\n            url: \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=解析#noHistory##noRecordHistory#\\\",\\n            group: \\\"\\\",\\n            col_type: \\\"\\\",\\n            preRule: \\\"\\\",\\n            extra: {}\\n        }));\\n    }\\n    function cancel(){\\n        if(!mySet){\\n            fba.writeFile(oldRoute, JSON.stringify(settings, null, 4));\\n            fba.refreshPage(true);\\n        }else{\\n            fba.back(false);\\n        }\\n    }\\n    function clickme(msg,duration,title){\\n        try{\\n            for(let key in settings){\\n                // fba.log(Did(key)+''+key);\\n                try{\\n                    //settings[key] = Did(key).value.replace(/Ⓤ|Ⓙ/g,'');\\n                    settings[key] = Did(key).value;\\n                }catch(e){\\n                    alert(\\\"未获取到节点:\\\"+key+\\\"\\\\n\\\"+e.message);\\n                }\\n\\n            }\\n            if(mySelect){\\n                Object.assign(newConfig.settings, settings);\\n                fba.writeFile(newRoute, $$$.stringify(newConfig));\\n            }\\n            fba.writeFile(oldRoute, $$$.stringify(settings));\\n            Toast(msg,duration);\\n            if(title===\\\"关\\\"){\\n                fba.back();\\n            }else{\\n                fba.refreshPage(true);\\n            }\\n        }catch(e){\\n            alert(e.message)\\n        }\\n    }\\n\\n    //let width=window.screen.availWidth;\\n    //let widthPx=width-393+52;\\n    //alert(\\\"当前分辨率:\\\"+window.screen.availWidth+\\\"*\\\"+window.screen.height);\\n    var verinfo = [{\\n        id:'dn',\\n        author:'断念',\\n        avatar:'https://s3.ax1x.com/2021/02/22/y7wb9O.jpg',\\n        option:openDnPage,\\n    },\\n        {\\n            id:'dz',\\n            author:'道长',\\n            avatar:'http://q1.qlogo.cn/g?b=qq&nk=434857005&s=640',\\n            option:openTheme\\n        },\\n        {\\n            id:'lm',\\n            author: '蓝莓',\\n            avatar: 'http://q1.qlogo.cn/g?b=qq&nk=2579949378&s=640',\\n            option:openJxManage\\n        }\\n    ];\\n\\n    function doOption(option_id){\\n        let ver = verinfo.filter(it=>it.id===option_id)[0];\\n        ver.option();\\n    }\\n\\n    const RenderHtmlApp = {\\n        data() {\\n            return {\\n                // rawHtml: '<span style=\\\"color: red\\\">这里会显示红色！</span>',\\n                options:options,\\n                verinfo:verinfo,\\n                placeholder:placeholder,\\n                tips:tips,\\n                themes:themes,\\n                mySelect:mySelect,\\n                // cjSel:['请选择插件 (只作用lazyRule)','hiker://files/cache/Parse_Dn.js','hiker://files/rules/dzHouse/js/srcauto.js','hiker://files/rules/js/Parse-V2_Dn.js'],\\n                cjSel:['请选择插件 (只作用lazyRule)','hiker://files/cache/Parse_Dn.js','hiker://files/rules/dzHouse/js/srcauto.js'],\\n                settings:settings,\\n                showTips:false,\\n                //widthPx:widthPx\\n            }\\n        },\\n        methods:{\\n            // changeVal:function(event){\\n            //     getOption(this.id,this.name);\\n            //     this.selOption = event.target.value;\\n            //     alert(\\\"你选中了\\\"+event.target.value);\\n            // }\\n            doOption:doOption\\n        }\\n    }\\n    try {\\n        const app=Vue.createApp(RenderHtmlApp);\\n        app.mount('body');\\n    }catch (e) {\\n        console.log(e.message)\\n    }\\n\\n</script>\\n\\n</body>\\n</html>\"},{\"col_type\":\"movie_3\",\"name\":\"Parse_Dn.js\",\"path\":\"Parse_Dn.js\",\"rule\":\"//============免嗅调用============\\n//－－－=^_^=\\n\\nvar version = \\\"3.49221205\\\";//1205\\n\\nvar updateDate = '2022/12/05/ 13:18';\\nvar _mySet = {\\n    qju: '默认',\\n    oth:'道长仓库通免',\\n    cjcache: 'hiker://files/cache/Parse_Dn.js',\\n    themecache: 'hiker://files/cache/MyTheme.json',\\n    jiexicache: 'hiker://files/cache/MyJiexi.json',\\n    x5cache: 'hiker://files/cache/Parse_Dn.html',\\n    dmCache: 'hiker://files/cache/diaomao.txt',\\n    oldConfig: 'hiker://files/cache/MyParseSet.json',\\n    ckLink: 'https://code.aliyun.com/AI957/Hiker/raw/master/v/',\\n    // cj: 'https://code.aliyun.com/AI957/Hiker/raw/master/v/CloudParse-V2_Dn.js',\\n    cj: 'https://gitcode.net/qq_32394351/dr/-/raw/master/dp/Parse_Dn.js',\\n    // x5Url: 'https://code.aliyun.com/AI957/Hiker/raw/master/v/Parse_Dn.html',\\n    x5Url: 'http://dr.nokia.press/html/Parse_Dn-vue.html',\\n    parseRoute: 'hiker://files/rules/DuanNian/MyParse.json',\\n    // x5Route: 'file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/cache/Parse_Dn.html'\\n    x5Route: getPath('hiker://files/cache/Parse_Dn.html'),\\n    batchRoute:getPath('hiker://files/cache/plscParse.html')\\n};\\nvar MyParseS = {};\\nvar mySet = _mySet;\\nif (fileExist(_mySet.parseRoute)) {\\n    eval('var parseFile =' + fetch(_mySet.parseRoute));\\n    MyParseS = parseFile.codes;\\n    mySet = parseFile.settings;\\n}\\nvar parseTitle = [\\n    \\\"yun1717\\\",\\n    \\\"PanGu\\\",\\n    \\\"FuXing\\\",\\n    \\\"isVideo\\\",\\n    \\\"defaultParse\\\",\\n    \\\"道长仓库通免\\\",\\n    \\\"timeOut\\\",\\n    \\\"源码匹配\\\",\\n    \\\"defaultParseWeb\\\",\\n    \\\"OK解析\\\",\\n    \\\"M3U8TV\\\",\\n];\\n//－－－=^_^=\\n\\n//接口设置.\\n\\nvar setUrl = \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=设置#noRecordHistory#\\\";\\nvar set_switch = setUrl;\\nvar lazy = `eval('var config_dp =' + fetch(getVar('oldConfig')));eval(fetch(config_dp.cj));aytmParse(input)`;\\n\\n//var parwix = `var yurl='https://daili.mayixiongdi.cn/?url=';Referer': 'https://www.mayixiongdi.cn/ys?id=';'https://daili.mayixiongdi.cn/api.php', 'Referer':'https://daili.mayixiongdi.cn';\\n// 全民https://pcvideoaliyun.tianshangrenjian.mgtv.com.88wuma.com/?url=\\n\\n//－－－备 用－－－\\n/*\\n * 影视工场： https://ysgc.cc/\\n * 江湖: 555电影 https://www.555dy2.com/phone.html ｜ 17看 http://17kanyy.cn/ http://jhjiexi.30vr.cn/?url= ｜ http://api.maizimall.com/index.php?url=\\n * 江湖: http://www.tianshuyun.net/index.php/vod/play/id/448377/sid/1/nid/1.html\\n * 江湖2: http://98hyk.cn/index.php/vod/play/id/72841/sid/1/nid/1.html\\n * 人人迷: https://vip.susou.tv/player/?url= ｜ https://www.momdm.cc/\\n *\\n * wuigen: https://www.5igen.com/dmplayer/player/?url=\\n * 干饭(人人迷): https://jx.zui.cm/?url=\\n * https://2.66movie.top/player/?url=\\n *\\n */\\n\\n\\nvar tools = {\\n    MD5: function(data) {\\n        eval(getCryptoJS());\\n        return CryptoJS.MD5(data).toString(CryptoJS.enc.Hex);\\n    },\\n    AES: function(text, key, iv, isEncrypt) {\\n        eval(getCryptoJS());\\n        var key = CryptoJS.enc.Utf8.parse(key);\\n        var iv = CryptoJS.enc.Utf8.parse(iv);\\n        if (isEncrypt) {\\n            return CryptoJS.AES.encrypt(text, key, {\\n                iv: iv,\\n                mode: CryptoJS.mode.CBC,\\n                padding: CryptoJS.pad.Pkcs7\\n            }).toString();\\n        };\\n        return CryptoJS.AES.decrypt(text, key, {\\n            iv: iv,\\n            padding: CryptoJS.pad.Pkcs7\\n        }).toString(CryptoJS.enc.Utf8);\\n    },\\n    //ascii\\n    nextCharacter: function(asciiValue, k) {\\n        var s = asciiValue;\\n        return String.fromCharCode(s + k);\\n    },\\n    //凯撒\\n    caesarCipher: function(stringValue, k) {\\n        var newString = \\\"\\\";\\n        for (var i = 0; i < stringValue.length; i++) {\\n            newString += this.nextCharacter(stringValue[i].charCodeAt(), k);\\n        }\\n        return newString;\\n    },\\n    nowDate: function() {\\n        var date1 = new Date();\\n        var dateStr = \\\"\\\";\\n        if (date1) {\\n            dateStr = date1.getFullYear();\\n            var month = date1.getMonth() + 1;\\n            var day = date1.getDate();\\n            if (month < 10) {\\n                dateStr += \\\"-0\\\" + month;\\n            } else {\\n                dateStr += \\\"-\\\" + month;\\n            }\\n            if (day < 10) {\\n                dateStr += \\\"-0\\\" + day;\\n            } else {\\n                dateStr += \\\"-\\\" + day;\\n            }\\n        }\\n        return dateStr;\\n    },\\n    nowDateStr:function (){ // 利用$工具获取格式化后的当前时间\\n        return  $.dateFormat(new Date(),\\\"yyyy-MM-dd HH:mm:ss\\\");\\n    },\\n    toJSON: function(json) {\\n        return JSON.stringify(json, (key, value) => {\\n            if (typeof value == 'function') {\\n                return value.toString();\\n            } else {\\n                return value;\\n            }\\n        }, 4);\\n    },\\n    toVNum: function(a) {\\n        var a = a.toString();\\n        var c = a.split('.');\\n        var num_place = [\\\"\\\", \\\"0\\\", \\\"00\\\", \\\"000\\\", \\\"0000\\\"],\\n            r = num_place.reverse();\\n        for (var i = 0; i < c.length; i++) {\\n            var len = c[i].length;\\n            c[i] = r[len] + c[i];\\n        }\\n        var res = c.join('');\\n        return res;\\n    },\\n    cprVersion: function(a, b) {\\n        var _a = parseInt(this.toVNum(a)),\\n            _b = parseInt(this.toVNum(b));\\n        b = isNaN(_b) ? version : b;\\n        if (_a > _b) {\\n            putVar('jxNewV', '有新版本: ' + a);\\n        } else {\\n            clearVar('jxNewV');\\n        }\\n        putVar('jxOldV', b);\\n    },\\n    atob:function (str){\\n        require('https://cdn.jsdelivr.net/npm/js-base64@3.7.2/base64.min.js');\\n        return Base64.atob(str);\\n    },\\n    btoa:function (str){\\n        require('https://cdn.jsdelivr.net/npm/js-base64@3.7.2/base64.min.js');\\n        return Base64.btoa(str);\\n    },\\n    江湖:function (config_url, tem, token) {\\n        require('https://cdn.jsdelivr.net/npm/js-base64@3.7.2/base64.min.js');\\n        var atob=Base64.atob;\\n        var btoa=Base64.btoa;\\n        var config_a = tem || \\\"ffsirllq\\\";\\n        var video = '';\\n        var tem = [];\\n        var config_arry = [];\\n        var config_b = config_a.length;\\n        if (token == 0x1) {\\n            var config_url = atob(config_url);\\n        } else {\\n            var config_url = encodeURIComponent(config_url);\\n        }\\n        var config_c = config_url.length;\\n        for (i = 0x0; i < 0x100; i++) {\\n            tem[i] = config_a[i % config_b].charCodeAt();\\n            config_arry[i] = i;\\n        }\\n        for (j = i = 0x0; i < 0x100; i++) {\\n            j = (j + config_arry[i] + tem[i]) % 0x100;\\n            tmp = config_arry[i];\\n            config_arry[i] = config_arry[j];\\n            config_arry[j] = tmp;\\n        }\\n        for (a = j = i = 0x0; i < config_c; i++) {\\n            a = (a + 0x1) % 0x100;\\n            j = (j + config_arry[a]) % 0x100;\\n            tmp = config_arry[a];\\n            config_arry[a] = config_arry[j];\\n            config_arry[j] = tmp;\\n            k = config_arry[(config_arry[a] + config_arry[j]) % 0x100];\\n            video += String.fromCharCode(config_url[i].charCodeAt() ^ k);\\n        }\\n        log(decodeURIComponent(video));\\n        if (token == 0x1) {\\n            return decodeURIComponent(video);\\n        } else {\\n            return btoa(video);\\n        }\\n    }\\n};\\nif (getVar(\\\"jxOldV\\\", \\\"0\\\") != version) {\\n    putVar('cjCache', _mySet.cjcache);\\n    putVar('x5Cache', _mySet.x5Cache);\\n    putVar('oldConfig', _mySet.oldConfig);\\n    putVar('parseRoute', _mySet.parseRoute);\\n    // let jxNewV = fetch('https://gitee.com/Duan-Nian/Dn/raw/master/hikerview/ParseVersion.txt');\\n    let jxNewV = fetch('https://gitcode.net/qq_32394351/dr/-/raw/master/dp/ParseVersion.txt');\\n    let jxOldV = (fetch(_mySet.cjcache).split('version = \\\"')[1] + '').split('\\\"')[0];\\n    tools.cprVersion(jxNewV, jxOldV);\\n}\\n\\nvar ParseS = {};\\nvar originalParseS = {\\n    // updateDate: updateDate,\\n    parseLc:'https://code.aliyun.com/AI957/Hiker/raw/master/p/parseLc.js',\\n    CityIP: 'http://pv.sohu.com/cityjson',\\n    pcUA: 'User-Agent@Mozilla/5.0 (Windows NT 10.0\\\\；\\\\； WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.87 Safari/537.36',\\n    cacheM3u8: function(vUrl, ref) {\\n        let paramas = ref?{headers:{Referer:ref}}:{};\\n        return cacheM3u8(url, paramas)\\n    },\\n    isVideo:function(playUrl){\\n        const {isVideo} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\\n        return isVideo(playUrl)\\n    },\\n    timeOut:function () {\\n        const lsg=$.require(\\\"hiker://page/localStorage?rule=道长仓库Pro\\\");\\n        return parseInt(lsg.getItem('timeout', '5000'));  //超时\\n    },\\n    源码匹配:function (vipUrl,regex,pos,headers){\\n        if(!regex||!vipUrl){\\n            return 'toast://解析播放链接和正则匹配字符串必填!'\\n        }\\n        if((!pos&&pos!==0)||(pos&&typeof(pos)!=\\\"number\\\")){//match匹配位置\\n            pos = 1\\n        }\\n        headers = headers||{};\\n        headers['User-Agent'] = headers['User-Agent']||MOBILE_UA;\\n        let html = fetch(vipUrl, {headers:headers,timeout:this.timeOut()});\\n        try {\\n            let realUrl = html.match(new RegExp(regex))[pos];\\n            return this.isVideo(realUrl);\\n        } catch (e) {\\n            log(e.message);\\n            return vipUrl;\\n        }\\n    },\\n    defaultParse: function(url,timeout) {\\n        return ParseS.defaultParseWeb(url,timeout);\\n    },\\n    defaultParseWeb: function(playUrl,timeout,extra) {\\n        // log('传入defaultParseWeb的超时:'+timeout);\\n        timeout = parseInt(timeout)||parseInt(getVar('dp.jxTimeout','5000'))||5000;\\n        extra = extra||{};\\n        let playUrlList = extra.playUrlList||[];\\n        if(typeof(playUrlList)==='object'&&playUrlList.length>0){\\n            playUrlList.unshift(playUrl);\\n            let playUrls=playUrlList.slice(0,4);\\n            let names=extra.nameList.slice(0,4);\\n            // log('开始批量解析(已去重,只取前3个备胎，加道长群:486722328获取最新魔断动态):'+names);\\n            playUrls=playUrls.map((it,id)=>it+\\\";\\\"+names[id]);\\n            //log(playUrls);\\n            const {LazyParseFast} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\\n            let ret = LazyParseFast(playUrls,timeout,timeout);\\n            if(typeof(ret)==='object'&&ret.length>0){\\n                //return ret[0]\\n                //log(ret);\\n                let v = getAppVersion();\\n                if(parseInt(v)>=2194&&ret.length>1){\\n                    let urls = Array.from(new Set(ret));\\n                    names=urls.map((it,id)=>it.split(\\\"★\\\").length>1?it.split(\\\"★\\\")[1]:\\\"线路:\\\"+parseInt(id+1));\\n                    urls=urls.map(it=>it.split(\\\"★\\\")[0]);\\n                    let headers = urls.map((it)=>{\\n                        if(!/;/.test(it)||it.split(';').length<2){\\n                            return {}\\n                        }else{\\n                            let head = it.split(';')[1];\\n                            if(!/@/.test(head)||!/{|}/.test(head)){\\n                                return {}\\n                            }\\n                            head=head.split(\\\"{\\\")[1].split(\\\"}\\\")[0];\\n                            //head = head.replace(/{|}/g,'');\\n                            head = head.split('&&');\\n                            let obj = {};\\n                            for(let i in head){\\n                                let key = head[i].split('@')[0];\\n                                let value = head[i].split('@')[1].replace(/;/,';');\\n                                obj[key] = value;\\n                            }\\n                            return obj\\n                        }\\n                    });\\n                    urls = urls.map((it)=>{\\n                        let turl=it.split(';')[0];\\n                        if(it.includes(\\\"#isVideo=true#\\\")&&!turl.includes(\\\"#isVideo=true#\\\")){\\n                            turl+=\\\"#isVideo=true#\\\";\\n                        }\\n                        return turl\\n                    });\\n                    return JSON.stringify({urls:urls,headers:headers,names:names});\\n                }else{\\n                    return ret[0].split(\\\"★\\\")[0]\\n                }\\n            }else{\\n                return ret\\n            }\\n        }else{\\n            const {lazyParse} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\\n            let x5Play=lazyParse(playUrl,timeout);\\n            if(typeof(x5Play)==\\\"undefined\\\"||!x5Play){\\n                return \\\"toast://道长仓库解析失败\\\"\\n            }\\n            let tips=/x5Rule|webRule/.test(x5Play)?\\\"x5/web免嗅开始\\\":\\\"极速免嗅探完毕，地址:\\\"+(/^http/.test(x5Play)?x5Play:'非正常链接');\\n            log(tips);\\n            return x5Play;\\n        }\\n    },\\n    \\\"maoss\\\":\\n        function (jxurl, ref, key) {\\n            return this.猫(jxurl, ref, key)\\n        },\\n    免嗅:function(vipUrl,k){\\n        k=k||[\\\"url\\\",\\\"data.url\\\"];\\n        try{\\n            let rjson=JSON.parse(fetch(vipUrl));\\n            //log(rjson);\\n            let realUrl='';\\n            if(typeof(k)=='string'){\\n                realUrl=eval(`rjson.${k}`);\\n            }else if(Array.isArray(k)){\\n                for(let i of k){\\n                    //log(i);\\n                    realUrl=eval(`rjson.${i}`);\\n                    if(realUrl){\\n                        break;\\n                    }\\n                }\\n            }\\n            if(realUrl.startsWith('/')){\\n                realUrl = 'https://'+realUrl;\\n            }\\n            return this.isVideo(realUrl)||\\\"\\\";\\n        }catch(e){\\n            log(e.message);\\n            return \\\"\\\"\\n        }\\n    },\\n    X5:function(vipUrl,ref){// https://api.52wyb.com/webcloud/?v=http://vip.1905.com/play/691940.shtml http://www.cdcer.net/\\n        let _x5 = $.toString((vipUrl) => {\\n            if(!location.href.includes(vipUrl)){\\n                location.href = vipUrl;\\n            }\\n            if(window.count == null){\\n                window.count=1;\\n            }\\n            window.count++;\\n            if( window.count >= 20){\\n                fba.log(\\\"未获取到资源地址，跳到解析页\\\");\\n                return vipUrl\\n            }\\n            var urls = _getUrls();\\n            for (var i in urls) {\\n                if (!/playm3u8|m3u8\\\\.tv/.test(urls[i]) && urls[i].match(/\\\\.mp3|\\\\.mp4|\\\\.m3u8|\\\\.flv/)) {\\n                    fba.log(urls[i]);\\n                    return urls[i]\\n                }\\n            }\\n        },vipUrl);\\n        let playUrl = ref?ref:vipUrl;\\n        let x5Url = 'webRule://'+playUrl+ '@' +_x5;\\n        showLoading('魔断.js嗅探中...');\\n        return x5Url\\n    },\\n    '道长':function (vipUrl){\\n        evalPrivateJS('zSWve+eeA6iL+f2fGTI+1pR8jnLd0SiyV6yvgcPMWwBMP5aYpqhTFbISxnvhb0bd5VgizyUMHe4dmsnGhWLBkqfb5HfNbIW4MBMxzLpP/9TjNT8SIQAfjdTj4P8oX35ekKNvGVxDolyfcYrpoKwNoQ==');\\n        return this.免嗅(vipUrl+'&secret='+secret)\\n    },\\n    '猫':function (jxurl, ref, key) {\\n        try {\\n            var getVideoInfo = function (text) {\\n                return tools.AES(text, key, iv);\\n            };\\n            let headers = {headers: {\\\"Referer\\\": ref||''}};\\n            key = key == undefined ? \\\"dvyYRQlnPRCMdQSe\\\" : key;\\n            var html = ref?request(jxurl, headers):request(jxurl);\\n            if (/&btwaf=/.test(html)) {\\n                html = request(jxurl + \\\"&btwaf\\\" + html.match(/&btwaf(.*?)\\\"/)[1], headers);\\n            }\\n            var iv = html.split(\\\"_token = \\\\\\\"\\\")[1].split(\\\"\\\\\\\"\\\")[0];\\n            eval(html.match(/var config = {[\\\\s\\\\S]*?}/)[0] + \\\"\\\");\\n            if (!/^http/.test(config.url)) {\\n                config.url = decodeURIComponent(tools.AES(config.url, key, iv));\\n            }\\n            return config.url;\\n        }\\n        catch (e) {\\n            // return \\\"\\\";\\n            return jxurl;\\n        }\\n    },\\n    LLQ: function(jxurl) {\\n        try {\\n            var api = jxurl.split('?url=')[0] + \\\"api.php\\\";\\n            var b64id = base64Encode(jxurl.split('url=')[1]);\\n            var parseid = tools.caesarCipher(b64id, -1);\\n            var json = JSON.parse(request(api, {\\n                headers: {\\n                    'Referer': jxurl\\n                },\\n                method: 'POST',\\n                body: 'url=' + parseid\\n            }));\\n            url = (json.code == 200 ? base64Decode(tools.caesarCipher(json.url, -1)) : '');\\n            return url;\\n        } catch (e) {\\n            return '';\\n        }\\n    },\\n    PanGu: function(vipUrl, data) {\\n        try {\\n            /*var ref = 'https://www.pangujiexi.com/';\\n            var parse = 'https://panguapi.ntryjd.net/jiexi/?url=' + vipUrl;\\n            var api = 'https://panguapi.ntryjd.net/jiexi/api.php';\\n            */\\n            //var ref = 'https://xmystv.com/';\\n            //var parse = 'https://www.99kpw.com/pangu/index.php?url=' + tailUrl;\\n            //var api = 'https://www.99kpw.com/pangu/api.php';\\n            var parse = 'https://www.pangujiexi.com/pangu/?url=' + vipUrl;\\n            var api = 'https://panguapi.ntryjd.net/pangu2021/api.php';\\n            if (data) {\\n                ref = data[0];\\n                parse = data[1];\\n                api = data[2];\\n            }\\n            var Time = (Math.floor(new Date().getTime() / 1000) * 1).toString();\\n            var url = JSON.parse(request(api, {\\n                headers: {\\n                    'Referer': parse\\n                },\\n                body: 'url=' + vipUrl + '&referer=' + base64Encode(parse) + '&ref=1&time=' + Time + '&type=&other=' + base64Encode(vipUrl) + '&ios=0',\\n                method: 'POST'\\n            })).url;\\n            return url;\\n        } catch (e) {\\n            return '';\\n        }\\n    },\\n    yun1717: function (vipUrl) {\\n        var isyk = vipUrl.indexOf('youku');\\n        var ref = \\\"https://www.1717yun.com/jx/ty.php?url=\\\" + vipUrl;\\n        var parse = \\\"https://1717yun.com.zh188.net/0828/?url=\\\" + vipUrl;\\n        var api = \\\"https://1717yun.com.zh188.net/1004/..index..php\\\";\\n        return isyk == -1 ? this.PanGu(vipUrl, [ref, parse, api]) : this.PanGu(vipUrl, [ref + ',vip:', parse + ',vip:', api]);\\n    },\\n    OK解析:'https://okjx.cc/?url=',\\n    M3U8TV:'https://jx.m3u8.tv/jiexi/?url=',\\n    道长仓库通免:function (url,timeout){\\n        return ParseS.defaultParseWeb(url,timeout);\\n    },\\n    FuXing: function(vipUrl) {\\n        try {\\n            //if(vipUrl.indexOf('v.youku')!=-1){\\n            //    vipUrl = (JSON.parse(request(vipUrl, {redirect:false, withHeaders:true})).headers.location + '').replace(/\\\\?.*/,'');\\n            //}\\n            var ref = 'https://jx.xuetuiguang.cn/jiexi/?url=' + vipUrl;\\n            var parse = ref;\\n            var api = 'https://jx.xuetuiguang.cn/jiexi/apiu_fx.php';\\n            return this.PanGu(vipUrl, [ref, parse, api]);\\n        } catch (e) {\\n            return '';\\n        }\\n    },\\n};\\n\\nObject.assign(ParseS, originalParseS, MyParseS);\\n//覆盖顺序，第三个覆盖第二个然后覆盖第一个\\n\\n\\nfunction aytmParse(vipUrl,strTitle,timeout,playUrl) {\\n    // 参数1:正版网址地址 参数2 定向解析接口名称 参数3 x5解析超时 参数4 完整的播放链接\\n    strTitle = strTitle||'';\\n    vipUrl = decodeURIComponent(vipUrl);\\n    if(!/miguvideo/.test(vipUrl)){\\n        vipUrl=vipUrl.split('#')[0].split('?')[0];\\n    }\\n    playUrl=decodeURIComponent(playUrl)||vipUrl||'';\\n    // log('传入aytmParse的超时:'+timeout);\\n    timeout = parseInt(timeout)||parseInt(getVar('dp.jxTimeout','5000'))||5000;\\n\\n    //-------------------------------------------------\\n    let jxsRoute = \\\"hiker://files/cache/MyJiexi.json\\\";\\n    let MyJiexi = {};\\n    let jiexis = {};\\n    try {\\n        MyJiexi = JSON.parse(fetch(jxsRoute));\\n        jiexis = MyJiexi.jiexis.filter(it=>it.name===MyJiexi.now)[0];\\n    }catch (e) {}\\n    function getPlayJx(key){\\n        let playUrlList = [];//批量播放地址列表\\n        let nameList = [];\\n        let jxs = jiexis[key]; // 适用于这个网站的解析列表\\n        if(jxs){\\n            for(let i in jxs){\\n                if(typeof ParseS[jxs[i]] == 'string'&&ParseS[jxs[i]].match(/http.*?=/)){\\n                    playUrlList.push(ParseS[jxs[i]]+vipUrl);\\n                    nameList.push(jxs[i]);\\n                }\\n            }\\n        }\\n        // return playUrlList\\n        return {playUrlList:playUrlList,nameList:nameList}\\n    }\\n    function getLazyList(key){//只获取备胎列表的免嗅探解析列表\\n        let parses = [];\\n        let jxs = jiexis[key]||[]; // 适用于这个网站的解析列表\\n        // log(jxs);\\n        if(jxs){\\n            for(let i in jxs){\\n                if(typeof ParseS[jxs[i]] == 'function'&&!/通免/.test(ParseS[jxs[i]].toString())){\\n                    parses.push({\\n                        name:jxs[i],\\n                        // rule:ParseS[jxs[i]]\\n                    })\\n                }\\n            }\\n        }\\n        return parses\\n    }\\n    var extra = {};\\n    var parses = []; //免嗅探列表\\n    //-------------------------------------------------------\\n    if(!strTitle){\\n        if(/LT/.test(vipUrl)){\\n            str = mySet.lt;\\n            extra = getPlayJx('lt');\\n            parses = getLazyList('lt',str);\\n        } else if(/renrenmi/.test(vipUrl)){\\n            str = mySet.rr;\\n            extra = getPlayJx('rr');\\n            parses = getLazyList('rr',str);\\n        }else if(/wuduyun/.test(vipUrl)){\\n            str = mySet.wd;\\n            extra = getPlayJx('wd');\\n            parses = getLazyList('wd',str);\\n        }else if(/yanaifei|xinluan|LT|ruifenglb|suoyo|xfy|renrenmi|RongXingVR|xueren|wuduyun|laodi|Naifeimi|daodm|XMMT|v020c/.test(vipUrl)){\\n            str = mySet.oth;\\n            extra = getPlayJx('oth');\\n            parses = getLazyList('oth',str);\\n        }else{\\n            var host;\\n            try{\\n                host = vipUrl.match(/\\\\.(.*?)\\\\//)[1];\\n            }catch(e){\\n                if(!/^http/.test(playUrl)){\\n                    return \\\"断插调用失败！\\\\n非正常的vip正版地址且未识别原站解析播放地址\\\";\\n                }else{\\n                    return ParseS.道长仓库通免(playUrl,timeout)\\n                }\\n            }\\n            //host = decodeURIComponent(host);\\n            switch (mySet.qju) {\\n                case \\\"默认\\\":\\n                    switch (host) {\\n                        case \\\"qq.com\\\":\\n                            str = mySet.tx;\\n                            extra = getPlayJx('tx');\\n                            parses = getLazyList('tx');\\n                            break;\\n                        case \\\"iqiyi.com\\\":\\n                            str = mySet.qy;\\n                            extra = getPlayJx('qy');\\n                            parses = getLazyList('qy');\\n                            break;\\n                        case \\\"youku.com\\\":\\n                            str = mySet.yk;\\n                            extra = getPlayJx('yk');\\n                            parses = getLazyList('yk');\\n                            break;\\n                        case \\\"alizy\\\":\\n                            str = mySet.al;\\n                            extra = getPlayJx('al');\\n                            parses = getLazyList('alizy');\\n                            break;\\n                        case \\\"mgtv.com\\\":\\n                            str = mySet.mg;\\n                            extra = getPlayJx('mg');\\n                            parses = getLazyList('mg');\\n                            break;\\n                        case \\\"bilibili.com\\\":\\n                            str = mySet.bl;\\n                            extra = getPlayJx('bl');\\n                            parses = getLazyList('bl');\\n                            break;\\n                        case \\\"sohu.com\\\":\\n                            str = mySet.sh;\\n                            extra = getPlayJx('sh');\\n                            parses = getLazyList('sh');\\n                            break;\\n                        case \\\"tv.sohu.com\\\":\\n                            str = mySet.sh;\\n                            extra = getPlayJx('sh');\\n                            parses = getLazyList('sh');\\n                            break;\\n                        case \\\"ixigua.com\\\":\\n                            str = mySet.xg;\\n                            extra = getPlayJx('xg');\\n                            parses = getLazyList('xg');\\n                            break;\\n                        case \\\"pptv.com\\\":\\n                            str = mySet.pp;\\n                            extra = getPlayJx('pp');\\n                            parses = getLazyList('pp');\\n                            break;\\n                        case \\\"miguvideo.com\\\":\\n                            str = mySet.mi;\\n                            extra = getPlayJx('mi');\\n                            parses = getLazyList('mi');\\n                            break;\\n                        case \\\"le.com\\\":\\n                            str = mySet.le;\\n                            extra = getPlayJx('le');\\n                            parses = getLazyList('le');\\n                            break;\\n                        case \\\"1905.com\\\":\\n                            str = mySet.one;\\n                            extra = getPlayJx('one');\\n                            parses = getLazyList('one');\\n                            break;\\n                        case \\\"fun.tv\\\":\\n                            str = mySet.fun;\\n                            extra = getPlayJx('fun');\\n                            parses = getLazyList('fun');\\n                            break;\\n                        default:\\n                            str = mySet.oth;\\n                            extra = getPlayJx('oth');\\n                            parses = getLazyList('oth');\\n                            break;\\n                    }\\n                    break;\\n                default:\\n                    str = mySet.qju;\\n                    break;\\n            }\\n        }\\n    }else{\\n        log('魔断执行定向解析线路头:'+strTitle);\\n        str = strTitle;\\n    }\\n    let withBatch = !!(MyJiexi.isAuto && MyJiexi.autoMode === '速度优先');\\n    let withBatchOrder = !!(MyJiexi.isAuto && /顺序优先|嗅探优先/.test(MyJiexi.autoMode));\\n    let singleBack = MyJiexi.singleBack||false; //吊毛模式。单个结果直接返回，停止后面的\\n    let ignore_mx = MyJiexi.ignore_mx||false; //忽略免嗅,嗅探优先模式使用\\n    let use_mx = !(MyJiexi.autoMode === '嗅探优先' && MyJiexi.ignore_mx); // 只要不是免嗅优先模式下的忽略免嗅,都使用免嗅\\n    let dmPath = 'hiker://files/cache/diaomao.txt';//吊毛模式过滤文件路径\\n    let dmUrls;\\n    try {\\n        dmUrls = fetch(dmPath).trim().split('\\\\n').filter(it=>it&&!it.startsWith('//'));\\n    }catch (e) {\\n        dmUrls = [];\\n    }\\n    function hasDm(videoUrl,dmUrls){//播放地址是否为吊毛视频\\n        if(dmUrls.length<1){\\n            return false\\n        }\\n        for(let dmUrl of dmUrls){\\n            if((new RegExp(dmUrl)).test(videoUrl)){//播放地址包含吊毛标志的地址\\n                return true\\n            }\\n        }\\n        return false\\n    }\\n\\n    function unique2(array){//去重函数\\n        return Array.from(new Set(array));\\n    }\\n    function ArrSet(Arr, id) {//对象数组去重\\n        var obj = {};\\n        const arrays = Arr.reduce((setArr, item) => {\\n            obj[item[id]] ? '' : obj[item[id]] = true && setArr.push(item);\\n            return setArr;\\n        }, []);\\n        return arrays;\\n    }\\n    function sortByKey(array, key, order) {//对象数组按某个键值排序\\n        return array.sort(function(a, b) {\\n            var x = parseInt(a[key].match(/(\\\\d+)/)[1]);//修复大于10出问题\\n            var y = parseInt(b[key].match(/(\\\\d+)/)[1]);\\n            // log('x:'+x+\\\",y:\\\"+y);\\n            if (order) {\\n                return ((x < y) ? -1 : ((x > y) ? 1 : 0))\\n            } else {\\n                return ((x < y) ? ((x > y) ? 1 : 0) : -1)\\n            }\\n        })\\n    }\\n    if (typeof ParseS[str] == 'function') { // 主配置放免嗅才会触发(不太友好,躺平不想优化)\\n        if(/通免/.test(str)){\\n            return ParseS[str](vipUrl,timeout);\\n        }\\n        var url;\\n        var task = function(obj) {\\n            eval('var config_dp =' + fetch(getVar('oldConfig')));\\n            eval(fetch(config_dp.cj));\\n            return aytmParse(obj.vipUrl,obj.name,obj.timeout);\\n        };\\n        let t = (new Date()).getTime();\\n        if (Array.isArray(extra.playUrlList) && extra.playUrlList.length > 0) {\\n            extra.nameList = unique2(extra.nameList);\\n            extra.playUrlList = unique2(extra.playUrlList);\\n        }else{\\n            extra.nameList = [];\\n            extra.playUrlList = [];\\n        }\\n        function getMyUrls(urls){\\n            return urls.map((it) => {\\n                let turl = it.split(';')[0];\\n                if (it.includes(\\\"#isVideo=true#\\\") && !turl.includes(\\\"#isVideo=true#\\\")) {\\n                    turl += \\\"#isVideo=true#\\\";\\n                }\\n                return turl\\n            });\\n        }\\n\\n        function getMyHeaders(urls){\\n            return urls.map((it) => {\\n                if (!/;/.test(it) || it.split(';').length < 2) {\\n                    return {}\\n                } else {\\n                    let head = it.split(';')[1];\\n                    if (!/@/.test(head) || !/{|}/.test(head)) {\\n                        return {}\\n                    }\\n                    head = head.split(\\\"{\\\")[1].split(\\\"}\\\")[0];\\n                    //head = head.replace(/{|}/g,'');\\n                    head = head.split('&&');\\n                    let obj = {};\\n                    for (let i in head) {\\n                        let key = head[i].split('@')[0];\\n                        let value = head[i].split('@')[1].replace(/;/, ';');\\n                        obj[key] = value;\\n                    }\\n                    return obj\\n                }\\n            });\\n        }\\n\\n        function getMyPlayUrlList(){\\n            if(Array.isArray(extra.playUrlList)){\\n                // return extra.playUrlList.map(it=>'video://'+it.replace('?url=','?id='+t+'&url=').replace('?v=','?id='+t+'&v='));\\n                return extra.playUrlList.map(it=>'video://'+it);\\n            }\\n            return []\\n        }\\n\\n\\n        if(!withBatchOrder||strTitle) {//不开多线路顺序优先或者指定了解析\\n            url = ParseS[str](vipUrl,timeout);\\n        }\\n        else{//开了多线路顺序优先执行免嗅多任务\\n            if(typeof ParseS[str] == 'function'&&!/通免/.test(ParseS[str].toString())){\\n                parses.unshift({name:str}); //把主配置的免嗅探加入到多任务列表\\n            }\\n            parses = ArrSet(parses,'name'); //去重\\n            if(use_mx) { // 如果使用免嗅,先多任务跑免嗅\\n                var count = parses.length; //设置任务数量\\n                log('魔断开启多任务解析,任务数量:' + count);\\n                log('解析列表:' + JSON.stringify(parses));\\n                var parseRet = []; //解析结果列表\\n                let tasks = parses.map((it, idex) => {\\n                    return {\\n                        func: task,\\n                        param: {\\n                            name: it.name,\\n                            // rule:it.rule,\\n                            vipUrl: vipUrl,\\n                            timeout: timeout\\n                        },\\n                        id: \\\"task\\\" + idex\\n                    }\\n                });\\n                showLoading(\\\"魔断并发解析中，剩余解析:\\\" + count);\\n\\n                function isDm(ret) {\\n                    if (!ret) {\\n                        return true\\n                    }\\n                    return hasDm(ret.split('#')[0].split(';')[0], dmUrls)\\n                }\\n\\n                be(tasks, {\\n                    func: function (obj, id, error, ret) {\\n                        log(\\\"监听到任务\\\" + id + '已结束,error:' + error + ',ret:' + ret);\\n                        ret = ret || '';\\n                        parseRet.push({\\n                            task: id,\\n                            ret: ret,\\n                            name: tasks.filter(it => it.id === id)[0].param.name\\n                        });\\n\\n                        if (singleBack) {//吊毛模式开始的话,判断ret有效性\\n                            log('任务' + id + '结果是吊毛?' + isDm(ret));\\n                            if (!isDm(ret) && ParseS.isVideo(ret.split('#')[0].split(';')[0])) {\\n                                hideLoading();\\n                                log('吊毛模式中断解析并返回视频' + ret);\\n                                return 'break'\\n                            }\\n                        }\\n                        count -= 1; //完成了任务，任务数量-1\\n                        //log(obj);\\n                        if (count > 0) {\\n                            showLoading(\\\"魔断并发解析中，剩余解析:\\\" + count)\\n                        } else {\\n                            hideLoading();\\n                        }\\n                    },\\n                    param: {//传到监听函数的obj参数里\\n                        hi: \\\"ccc\\\",\\n                    }\\n                });//执行多任务\\n                // let valuable = parseRet.filter(it=>/m3u8|mp4/.test(it.ret));\\n                log(\\\"多任务执行结果数:\\\" + parseRet.length);\\n                let valuable = [];\\n                parseRet.forEach((it)=>{\\n                    if(it.ret){\\n                        if(/names/.test(it.ret)&&/urls/.test(it.ret)){\\n                            log('尝试聚合解析解包:'+it.ret);\\n                            try {\\n                                let rets = JSON.parse(it.ret.replace(/#isVideo=true#/g,''));\\n                                rets.names.forEach((name,idex)=>{\\n                                    valuable.push({\\n                                        name:name,\\n                                        ret:rets.urls[idex],\\n                                        task:it.task,\\n                                    });\\n                                });\\n                            }catch (e) {\\n                                log('解包发生错误:'+e.message);\\n                            }\\n                        }else if(ParseS.isVideo(it.ret.split('#')[0].split(';')[0])){\\n                            valuable.push(it);\\n                        }else if(it.ret.startsWith('video://')){\\n                            valuable.push(it);\\n                        }\\n                    }\\n                });\\n                // let valuable = parseRet.filter(it => it.ret && ParseS.isVideo(it.ret.split('#')[0].split(';')[0]));\\n                valuable = valuable.filter(it => !isDm(it.ret));//过滤吊毛视频\\n                log('多任务顺序执行有效结果:' + JSON.stringify(valuable));\\n                if (valuable.length > 1) {//多线路\\n                    valuable = sortByKey(valuable, 'task', true);//升序排列\\n                    let urls = valuable.map(it => it.ret);//取出链接,缓存前的\\n                    if (getVar('dp.cacheVideo', 'true') === 'true' && parseInt(getAppVersion()) >= 2255) {//开始缓存\\n                        log(\\\"尊敬的魔断用户，视频缓存已启用，请尽情享受看剧时光\\\");\\n                        let videosCache = urls.map((it) => {\\n                            let headers = {};\\n                            if (it.split(\\\";\\\").length > 1) {\\n                                let head = it.split(';')[1];\\n                                if (/@/.test(head) && /{|}/.test(head)) {\\n                                    //head = head.replace(/{|}/g,'');\\n                                    head = head.split(\\\"{\\\")[1].split(\\\"}\\\")[0];\\n                                    head = head.split('&&');\\n                                    for (let i in head) {\\n                                        let key = head[i].split('@')[0];\\n                                        let value = head[i].split('@')[1].replace(/;/, ';');\\n                                        headers[key] = value;\\n                                    }\\n                                }\\n                            }\\n                            return {\\n                                url: it.split(\\\";\\\")[0].split(\\\"#\\\")[0],\\n                                options: {\\n                                    headers: headers\\n                                }\\n                            }\\n                        });\\n                        var data = batchCacheM3u8(videosCache);\\n                        data = data.map((it, id) => {\\n                            let extra = \\\"\\\";\\n                            if (urls[id].split(\\\";\\\").length > 1) {\\n                                extra = \\\";\\\" + urls[id].split(\\\";\\\")[1];\\n                            } else if (urls[id].split(\\\"★\\\").length > 1) {\\n                                extra = \\\"★\\\" + urls[id].split(\\\"★\\\")[1];\\n                            }\\n                            if (it + \\\"\\\" !== \\\"null\\\") {\\n                                return it + extra\\n                            } else {\\n                                return urls[id]\\n                            }\\n                        });\\n                        urls = data\\n                    }\\n                    // log('排序完毕后结果:'+JSON.stringify(valuable));\\n                    let names = valuable.map(it => it.name);\\n                    let headers = getMyHeaders(urls);\\n                    urls = getMyUrls(urls);\\n                    if(MyJiexi.autoMode === '嗅探优先'){\\n                        urls = urls.concat(getMyPlayUrlList());\\n                        names = names.concat(extra.nameList);\\n                        // headers = headers.concat(extra.nameList.map((it)=>{return {}}));\\n                    }\\n                    return JSON.stringify({urls: urls, headers: headers, names: names});\\n\\n                } else if (valuable.length === 0) {\\n                    if (extra.nameList.length < 1) {\\n                        hideLoading();\\n                        return 'toast://芭比Q了,多任务免嗅解析全军覆没并且没有可用的json|x5解析了'\\n                    }\\n                    showLoading(\\\"魔断多任务免嗅失败,尝试json|x5\\\");\\n                    //排除第一个\\n                    let extra2 = {\\n                        nameList: extra.nameList,\\n                        playUrlList: extra.playUrlList.slice(1),\\n                    }\\n                    if(MyJiexi.autoMode === '嗅探优先'){\\n                        return JSON.stringify({\\n                            urls: getMyPlayUrlList(),\\n                            names: extra.nameList\\n                        });\\n                    }else{\\n                        return ParseS.defaultParseWeb ? ParseS.defaultParseWeb(extra.playUrlList[0], timeout, extra2) : extra.playUrlList[0];\\n                    }\\n                    // log(extra.playUrlList[0]);\\n                    // log(extra2);\\n\\n                } else {\\n                    // 免嗅后只有一个结果,嗅探优先自动拼x5和json, 顺序优先自动返回一个播放链接\\n                    if(MyJiexi.autoMode === '嗅探优先') {\\n                        let urls = valuable.map(it => it.ret);//取出链接,缓存前的\\n                        let names = valuable.map(it => it.name);\\n                        let headers = getMyHeaders(urls);\\n                        urls = getMyUrls(urls);\\n                        names = names.concat(extra.nameList);\\n                        urls = urls.concat(getMyPlayUrlList());\\n                        // headers = headers.concat(extra.nameList.map((it)=>{return {}}));\\n                        return JSON.stringify({\\n                            urls: urls,\\n                            names: names,\\n                            headers:headers\\n                        });\\n                    }else{\\n                        return valuable[0].ret\\n                    }\\n                }\\n            }else{ // 纯video://分支\\n                if (extra.nameList.length < 1) {\\n                    hideLoading();\\n                    return 'toast://芭比Q了,多任务免嗅解析全军覆没并且没有可用的json|x5解析了'\\n                }\\n                log(\\\"魔断多任务免嗅失败,尝试json|x5\\\");\\n                return JSON.stringify({\\n                    urls: getMyPlayUrlList(),\\n                    names: extra.nameList\\n                });\\n            }\\n        }\\n        if(/^hiker:|^toast:|^rule:|^x5Rule:|^webRule:|^select/.test(url)){\\n            return url;\\n        }\\n        if(!url&&!/^http/.test(vipUrl)){\\n            return 'toast://魔断解析失败>'+vipUrl\\n        }\\n        // log(vipUrl+'免嗅探结果:'+url);\\n        if (/^\\\\//.test(url)) {\\n            url = 'https:' + url\\n        }\\n        // 魔断免嗅截取\\n        // if (/=http/.test(url)) {\\n        //     url = /&url=/.test(url) ? url : 'http' + decodeURIComponent(url.split('=http')[1]);\\n        // }\\n        /*if(url.match(/mgtv.com/g)=='mgtv.com'){\\n            url = url + ';{Referer@https://www.mgtv.com}';\\n        } else */\\n        if (/\\\\.flv/.test(url)&&!/User-Agent/.test(url)) {\\n            url = url + ';{User-Agent@app&&Referer@' + vipUrl + '}';\\n        }\\n        if (url === '' || url === vipUrl) {\\n            return vipUrl;\\n        } else if(!/#isVideo=true#/.test(url)){\\n            return url + '#isVideo=true#';\\n        }else{\\n            return url\\n        }\\n    } else if (typeof ParseS[str] == 'string'&&ParseS[str].match(/http.*?=/)) {\\n        // log(\\\"断插开始通用执行免嗅 defaultParseWeb:\\\"+timeout);\\n        //log(\\\"默认x5\\\"+ParseS.defaultParseWeb);\\n        if(withBatch){ // 速度优先\\n            if(Array.isArray(extra.playUrlList)&&extra.playUrlList.length>0){\\n                extra.playUrlList = extra.playUrlList.filter(it=>it!==(ParseS[str]||str) + vipUrl);\\n                let nameList = extra.nameList;\\n                nameList.unshift(str);\\n                extra.nameList=unique2(nameList);\\n                extra.playUrlList = unique2(extra.playUrlList);\\n            }\\n        }else{\\n            extra = {}\\n        }\\n        return ParseS.defaultParseWeb?ParseS.defaultParseWeb((ParseS[str]||str) + vipUrl,timeout,extra):(ParseS[str]||str) + vipUrl;\\n    } else if(typeof(str)==='string'&&str.length>1&&(typeof ParseS[str]=='undefined'||!ParseS[str])&&!/^http/.test(str)){\\n        return 'toast://请先进行断插配置确保该解析存在!\\\\n检测到无效的解析配置:'+str;\\n    }else {\\n        return ParseS.defaultParse(str + vipUrl,timeout);\\n    }\\n}\\n\\nvar playParse = {\\n    player_xx: function(jurl, Label) {\\n        return $(jurl).lazyRule((k) => {\\n            var jsUrl = JSON.parse(fetch(getVar('oldConfig'))).cj;\\n            var Label = k;\\n            var fa = ['letv', 'pptv', 'qq', 'youku', 'qiyi', 'iqiyi', 'mgtv', 'bilibili', 'sohu', 'migu', 'm1905', 'vip'];\\n            var html = parseDom(request(input), Label);\\n            eval(html.replace(/player_.*?={/, 'pdata={'));\\n            eval(fetch(jsUrl));\\n            if (pdata.url.substr(0, 8).match(/JT..JT../)) {\\n                pdata.url = base64Decode(pdata.url);\\n            }\\n            if (pdata.url.substr(0, 8).match(/%..%../)) {\\n                pdata.url = unescape(pdata.url);\\n            }\\n            if (fa.includes(pdata.from)) {\\n                return aytmParse(pdata.url);\\n            } else {\\n                return pdata.url + '#isVideo=true#';\\n            }\\n        }, Label)\\n    }\\n};\\nfunction mzPopup() {\\n    /*\\n    if (getVar(\\\"ijk-tx\\\", \\\"\\\") == \\\"1\\\") {\\n        setItem(\\\"tixing\\\", \\\"1\\\")\\n        clearVar(\\\"ijk-tx\\\")\\n    }\\n    if (getItem(\\\"tixing\\\", \\\"\\\") == \\\"\\\") {\\n        confirm({\\n            title: '免责声明',\\n            content: '本程序不提供视频解析服务\\\\n所有内容均从用户分享中收集\\\\n仅供测试和学习交流\\\\n\\\\n确定即认可，不再提醒',\\n            confirm: $.toString(() => {\\n                putVar(\\\"ijk-tx\\\", \\\"1\\\");\\n                refreshPage(false);\\n                return \\\"toast://点击了确认\\\"\\n\\n            })\\n        })\\n    }\\n     */\\n}\\n/*\\nif (!getVar(\\\"tixing\\\")) {\\n    mzPopup();\\n    putVar('tixing','ok');\\n}\\n*/\\nfunction saveButton(content,name) {\\n    name = name||'';\\n    var data = content.split('★★★');\\n    if (data.length === 2) {\\n        var _dt = parsePaste(data[0]);\\n        content = _dt.substr(0, 6) !== 'error:' ? _dt : '';\\n    }\\n    data = content.split('★');\\n    var type = data[0];\\n    var arrList = [];\\n    var objCode = {};\\n    if (data.length > 2 && data[0] !== '直链') {\\n        var objKey = data[1];\\n        var objValue = data[2];\\n        if (type === 'MyParseS') {\\n            objValue = base64Decode(objValue);\\n        }\\n        if (objValue.split('function').length > 1) {\\n            eval('objValue=' + objValue);\\n        }\\n        arrList.splice(0, 0, objKey); //添加项目非删除\\n        objCode[objKey] = objValue;\\n\\n    } else if (type === '直链') {\\n        arrList = data;\\n        arrList.splice(0, 1);\\n    } else {\\n        arrList = null;\\n    }\\n    if (arrList != null) {\\n        var parseRoute = getVar('parseRoute');\\n        eval('var json =' + fetch(parseRoute));\\n        Array.prototype.remove = function(val) {\\n            let index = this.indexOf(val);\\n            if (index > -1) {\\n                this.splice(index, 1);\\n            }\\n        };\\n        if(name){//删除名称列表和代码\\n            json.title.remove(name);\\n            delete json.codes[name];\\n        }\\n        arrList = arrList.concat(json.title);\\n        json.title = Array.from(new Set(arrList));\\n        Object.assign(json.codes, objCode);\\n        if (type === '测试') {\\n            eval('var config =' + fetch(getVar('oldConfig')));\\n            eval(fetch(config.cj));\\n            if (typeof ParseS[data[1]] == \\\"function\\\") {\\n                return ParseS[data[1]](data[2]);\\n            } else {\\n                return ParseS.defaultParseWeb(ParseS[data[1]] + data[2]);\\n            }\\n        } else {\\n            writeFile(parseRoute, $.stringify(json));\\n            return \\\"toast://已保存内容\\\";\\n        }\\n    } else {\\n        return \\\"toast://无法识别这个内容呢\\\"\\n    }\\n}\\n// 以下代码千万不要放出来否则报错\\nif (getItem('updateDate') != updateDate) {\\n// if (true) {\\n    // 把function变成string\\n    let functionCode = saveButton + ';'+mzPopup;\\n    // writeFile('hiker://files/cache/plscParse.html', fetch(_mySet.ckLink + 'plscParse.html'));\\n    setItem('myFunction', functionCode);\\n    setItem('updateDate', updateDate);\\n}\\nvar bjItem = {\\n    hfPlugin: function(parseRoute) {\\n        return $('#noLoading#').lazyRule((k) => {\\n            if (fileExist(k)) {\\n                var cjcache = getVar('cjCache');\\n                eval('var json =' + fetch(k));\\n                json.settings.cj = cjcache;\\n                writeFile(k, $.stringify(json));\\n                var oldRoute = getVar('oldConfig');\\n                var oldConfig = json.settings;\\n                oldConfig.cj = cjcache;\\n                writeFile(oldRoute, $.stringify(oldConfig));\\n                refreshPage(false);\\n                return 'toast://恢复成功';\\n            } else {\\n                return 'toast://需要先拉取列表'\\n            }\\n        }, parseRoute)\\n    },\\n    pullCode: function(k) {\\n        return $('#noLoading#').lazyRule((k) => {\\n            var pullMode = k[0];\\n            var parseRoute = k[1];\\n            var parseFile = fetch(parseRoute);\\n            if (!parseFile) {\\n                var settings = fetch(getVar('oldConfig'));\\n                settings = !settings ? {} : JSON.parse(settings);\\n                var json = {};\\n                json.settings = settings;\\n                json.title = [];\\n                json.codes = {};\\n            } else {\\n                eval('var json =' + parseFile);\\n            }\\n            var parseTitle = [];\\n            var parseCode={};\\n            var cjLink = getVar('pluginLink');\\n            try {\\n                if(/@base64:\\\\/\\\\//.test(cjLink)){\\n                    eval(base64Decode(cjLink.split('@base64://')[1]));\\n                }else if(/插件名/.test(cjLink)){\\n                    let realLink = cjLink.split('插件名')[0].replace(/[\\\\s]/g,'');\\n                    log('解析云剪切板:'+realLink);\\n                    let yPaste = parsePaste(realLink);\\n                    if(/@base64:\\\\/\\\\//.test(yPaste)){\\n                        try {\\n                            eval(base64Decode(yPaste.split('@base64://')[1]));\\n                            if(typeof ParseS==='undefined'){\\n                                return 'toast://拉取个鸡毛插件,里面连ParseS对象都没有!'\\n                            }\\n                        }catch (e) {\\n                            return 'toast://鸡毛插件执行报错:\\\\n'+e.message;\\n                        }\\n                    }else{\\n                        return 'toast://未能识别云剪切板中的内容:\\\\n'+yPaste.substring(0,100);\\n                    }\\n                } else if (cjLink === 'Q神') {\\n                    let jiexi = fetch('hiker://files/jiexi/jiexi.txt').split('\\\\n');\\n                    for (i in jiexi) {\\n                        let title=jiexi[i].split('&&')[0];\\n                        let code=jiexi[i].split('&&')[1];\\n                        parseTitle.push(title);\\n                        parseCode[title]=code;\\n                    }\\n                }\\n                // }else if(/^#[a-zA-Z0-9]{2,10}$/.test(cjLink)){//福利口令2到10位\\n                else if(/^#[\\\\S]{2,10}$/.test(cjLink)){//福利口令2到10位任意非空字符串\\n                    const {taskCall, taskRun,taskReq} = $.require(\\\"hiker://page/taskCall?rule=道长仓库Pro\\\");\\n                    // log('开始执行任务仓库获取断念插件福利口令');\\n                    let result = taskCall(17,'DnFuli',[cjLink]);\\n                    if (result.status === 0) {\\n                        let ret = JSON.parse(result.result);\\n                        // log(ret);\\n                        if(ret.opt==='error'){\\n                            return 'toast://'+ret.msg;\\n                        }else if(ret.opt==='url'){\\n                            let html = fetch(ret.ret);\\n                            let arr = html.includes('http')? html:base64Decode(html);\\n                            let jiexi = arr.match(/[\\\\S]*?,.*?[\\\\s]/g);\\n                            for (let i in jiexi) {\\n                                let title=jiexi[i].split(',')[0];\\n                                let code=jiexi[i].split(',')[1].split(\\\"\\\\n\\\")[0];\\n                                if(!/^http|function/.test(code)&&code.length>20){//base64编码的函数\\n                                    code = base64Decode(code);\\n                                }\\n                                parseTitle.push(title);\\n                                parseCode[title]=/function/.test(code)?eval(code):code;\\n                            }\\n                        }else if(ret.opt==='jx'){\\n                            if(/[\\\\S]*?,http[\\\\S]/.test(ret.ret)){\\n                                let title = ret.ret.split(',')[0];\\n                                let code = ret.ret.split(',')[1].split('\\\\n')[0];\\n                                parseTitle.push(title);\\n                                parseCode[title]=code;\\n                            }else if(/^http/.test(ret.ret)){\\n                                let title = cjLink.split('#')[1];\\n                                let code = ret.ret.split('\\\\n')[0];\\n                                parseTitle.push(title);\\n                                parseCode[title]=code;\\n                            }else{\\n                                return 'toast://未知的福利:\\\\n'+ret.ret;\\n                            }\\n                        }else if(ret.opt==='vipJx'){\\n                            let title = cjLink.split('#')[1];\\n                            let code = ret.ret;\\n                            // log(code);\\n                            parseTitle.push(title);\\n                            parseCode[title]=/function/.test(code)?eval(code):code;\\n                        }\\n                    }else{\\n                        return 'toast://仓库非最新版或者福利社功能开发中'\\n                    }\\n                }else if(cjLink==='断插'){\\n                    eval(fetch(\\\"hiker://files/cache/Parse_Dn.js\\\"));\\n                    parseTitle=Object.keys(ParseS);\\n                }else if(/^hiker:\\\\/\\\\/|^file:\\\\/\\\\/|^http|^\\\\/storage\\\\/|^\\\\/sdcard\\\\//.test(cjLink)){\\n                    if(/^\\\\/storage\\\\/|^\\\\/sdcard\\\\//.test(cjLink)){\\n                        cjLink = 'file://'+cjLink;\\n                    }\\n                    eval(fetch(cjLink));\\n                    parseTitle=Object.keys(ParseS);\\n                }else{\\n                    return 'toast://拉取口令有误'\\n                }\\n            } catch (e) {\\n                log(e.message);\\n            }\\n            var jxJudge = typeof ParseS == 'object';\\n            var lbJudge = typeof(parseTitle) == 'object';\\n            if (jxJudge || lbJudge) {\\n                // if (pullMode === '列表') {\\n                //     if (!lbJudge) {\\n                //         parseTitle = Object.keys(ParseS);\\n                //     }\\n                //     var newParseTitle = json.title.concat(parseTitle);\\n                //     json.title = Array.from(new Set(newParseTitle));\\n                // }\\n                // 不管拉取代码还是列表都要把列表拉了\\n                if (!lbJudge) {\\n                    parseTitle = Object.keys(ParseS);\\n                    log(parseTitle);\\n                }\\n                var scObject = [\\\"CityIP\\\", \\\"pcUA\\\", \\\"cacheM3u8\\\",\\\"isVideo\\\",\\\"timeOut\\\",\\\"源码匹配\\\", \\\"defaultParse\\\",\\\"defaultParseWeb\\\",\\\"maoss\\\", \\\"LLQ\\\",\\\"parseLc\\\"];\\n                parseTitle = parseTitle?parseTitle.filter(it=>!scObject.includes(it)):[];\\n                var newParseTitle = json.title.concat(parseTitle);\\n                json.title = Array.from(new Set(newParseTitle));\\n\\n                if (pullMode === '代码') {\\n                    if (typeof originalParseS == 'object') {\\n                        for (let i in scObject) {\\n                            delete originalParseS[scObject[i]];\\n                        }\\n                        // originalParseS =originalParseS.filter(it=>!scObject.includes(Object.getOwnPropertyNames(it)[0]));\\n                        Object.assign(json.codes, originalParseS);\\n                    } else {\\n                        if(typeof(ParseS)==\\\"undefined\\\"){\\n                            Object.assign(json.codes, parseCode);\\n                            //return \\\"toast://没有代码，不可拉取\\\"\\n                        }else{\\n                            Object.assign(json.codes, ParseS);\\n                        }\\n                    }\\n                }\\n                //var newFile = tools.toJSON(json);//自定义stringify函数，带有转义字符\\n                var newFile = $.stringify(json); //JSON.parse会报错\\n                writeFile(parseRoute, newFile);\\n                refreshPage(false);\\n                return 'toast://拉取' + pullMode + '成功';\\n            } else {\\n                return 'toast://未获取到对象';\\n            }\\n        }, [k, _mySet.parseRoute])\\n    },\\n    pullScript: function(cj, x5) {\\n        return $('#noLoading#').lazyRule((k) => {\\n            var cjFrom = 'hiker://page/Parse_Dn.js?rule=MyFieldᴰⁿ';\\n            var x5From = 'hiker://page/Parse_Dn.html?rule=MyFieldᴰⁿ';\\n            try {\\n                var cjFile = JSON.parse(fetch(cjFrom)).rule;\\n                var x5File = JSON.parse(fetch(x5From)).rule;\\n                writeFile(k[0], cjFile);\\n                writeFile(k[1], x5File);\\n                clearVar('jxOldV');\\n                clearVar('jxNewV');\\n                refreshPage(false);\\n                return 'toast://拉取成功';\\n            } catch (e) {\\n                return 'toast://未成功获取内容';\\n            }\\n        }, [cj, x5])\\n    },\\n    xlSelect: function(bianji, lbLength) {\\n        return \\\"select://\\\" + JSON.stringify({\\n            options: ['‘‘’’<span style=\\\"color:red\\\" title=\\\"删除||' + bianji + '\\\">删 除', '‘‘’’<span style=\\\"color:#F57474\\\" title=\\\"隐藏||' + bianji + '\\\">隐 藏', '‘‘’’<span style=\\\"color:#FF8000\\\" title=\\\"修改||' + bianji + '\\\">修 改', '‘‘’’<span style=\\\"color:#098AC1\\\" title=\\\"置顶||' + bianji + '0' + '\\\">置 顶', '‘‘’’<span style=\\\"color:#098AC1\\\" title=\\\"移动||' + bianji + '\\\">移 动', '‘‘’’<span style=\\\"color:#098AC1\\\" title=\\\"置底||' + bianji + lbLength + '\\\">置 底', '‘‘’’<span style=\\\"color:#04B431\\\" title=\\\"分享||' + bianji + '\\\">地板分享', '‘‘’’<span style=\\\"color:#04B431\\\" title=\\\"云分享||' + bianji + '\\\">云板分享'],\\n            col: '2',\\n            js: $.toString(() => {\\n                var parseRoute = getVar('parseRoute');\\n                eval('var json =' + fetch(parseRoute));\\n                var newInput = parseDomForHtml(input, 'span&&title').split('||');\\n                // 修改,迪迪,0   操作类型,名称,索引\\n                var type = newInput[0];\\n                var name = newInput[1];\\n                var num = newInput[2];\\n                var num2 = newInput[3];\\n                switch (type) {\\n                    case \\\"删除\\\":\\n                        let k = [name, num];\\n                        // 总感觉筛选或者搜索后，由于num的位置不对可能会删除错,事实如此,已修?\\n                        return $(\\\"即将删除: \\\" + name).confirm((k) => {\\n                            var name = k[0];\\n                            var num = k[1];\\n                            var parseRoute = getVar('parseRoute');\\n                            eval('var json =' + fetch(parseRoute));\\n                            if (json.codes.hasOwnProperty(name)) {\\n                                delete json.codes[name];\\n                            }\\n                            num = json.title.indexOf(name); //这样才会得到正确的索引\\n                            json.title.splice(num, 1);\\n                            writeFile(parseRoute, $.stringify(json));\\n                            refreshPage(false);\\n                            return \\\"toast://已将〖\\\" + name + \\\"〗删除\\\";\\n                        }, k);\\n                    case \\\"隐藏\\\":\\n                        return $(\\\"hiker://empty#noLoading#\\\").lazyRule((k) => {\\n                            var name = k[0];\\n                            var num = k[1];\\n                            var parseRoute = getVar('parseRoute');\\n                            eval('var json =' + fetch(parseRoute));\\n                            if (json.codes.hasOwnProperty(name)) {\\n                                num = json.title.indexOf(name); //这样才会得到正确的索引\\n                                json.title.splice(num, 1);\\n                                writeFile(parseRoute, $.stringify(json));\\n                                refreshPage(false);\\n                                return \\\"toast://已将〖\\\" + name + \\\"〗隐藏\\\";\\n                            } else {\\n                                return \\\"toast://可能是个网址, 您可选择删除\\\";\\n                            }\\n                        }, [name, num]);\\n                    case \\\"修改\\\":\\n                        //if (json.codes[name]) {\\n                        var nCode = name;\\n                        var titles = json.title;\\n                        var nName = \\\"这是名称\\\";\\n                        if (json.codes[name]) {\\n                            nCode = json.codes[name].toString();\\n                            nName = name;\\n                        }\\n                        return $(\\\"hiker://empty#noRecordHistory#\\\").rule((k,titles) => {\\n                            var d = [];\\n                            eval(getItem('myFunction'));\\n                            var name = k[0];\\n                            var code = k[1];\\n                            d.push({\\n                                title: '保 存',\\n                                url: saveButton + \\\"saveButton(getVar('input_edit'),name);back();\\\",\\n                                col_type: \\\"input\\\",\\n                                desc: \\\"建议按默认的代码格式修改哦\\\",\\n                                extra: {\\n                                    onChange: \\\"putVar('input_edit', input)\\\",\\n                                    type: \\\"textarea\\\",\\n                                    height: \\\"-1\\\",\\n                                    highlight: true,\\n                                    titleVisible: false,\\n                                    defaultValue: '修改★' + name + '★' + code,\\n                                }\\n                            });\\n                            d.push({\\n                                title: '‘‘’’<small><span style=\\\"color:#6EB897\\\">格式为：操作类型★标题★function(){自定义内容}<br>请勿填入其他格式',\\n                                url: $('#noLoading#').lazyRule((saveButton,name,titles) => {\\n                                    let tmpAr = getVar('input_edit').split('★');\\n                                    if(tmpAr.length<2){\\n                                        return 'toast://修改格式有误，访问被拒绝'\\n                                    }\\n                                    let newName = tmpAr[1];\\n                                    if(newName!==name&&titles.includes(newName)){\\n                                        return $('检测到同名接口:'+newName+',是否覆盖?').confirm((saveButton,name)=>{\\n                                            let code = saveButton(getVar('input_edit'),name);\\n                                            back();\\n                                            return 'toast://已保存修改\\\\n请自行检测覆盖后的内容';\\n                                        },saveButton,name);\\n                                    }else{\\n                                        let code = saveButton(getVar('input_edit'),name);\\n                                        back();\\n                                        return 'toast://已保存修改';\\n                                    }\\n                                    // if(typeof(code)==='string'&&code.length>2){\\n                                    //     return code\\n                                    // }else{\\n                                    //     return 'toast://已保存修改';\\n                                    // }\\n                                }, saveButton,name,titles),\\n                                desc: '‘‘’’<big><big><span style=\\\"color:#298A08\\\">保 存',\\n                                col_type: 'text_center_1'\\n                            });\\n                            setResult(d);\\n                        }, [nName, nCode],titles) //[name, json.codes[name].toString()])\\n                    /*} else {\\n                        return \\\"toast://只有网址或者标题, 不支持修改\\\"\\n                    }*/\\n                    case \\\"置顶\\\":\\n                    case \\\"置底\\\":\\n                        eval('var json =' + fetch(parseRoute));\\n                        num = json.title.indexOf(name); //这样才会得到正确的索引\\n                        if(num>-1){\\n                            var item = json.title.splice(num, 1);\\n                            json.title.splice(num2, 0, item[0]);\\n                            writeFile(parseRoute, $.stringify(json));\\n                            refreshPage(false);\\n                        }else{\\n                            return 'toast://没找到:'+name;\\n                        }\\n                        break;\\n                    case \\\"移动\\\":\\n                        return $('hiker://empty#noLoading#').lazyRule((k) => {\\n                            putVar('bianji', '移动#' + k);\\n                            refreshPage(false);\\n                            return input;\\n                        }, num);\\n                    case \\\"分享\\\":\\n                    case \\\"云分享\\\":\\n                        if (json.codes[name]) {\\n                            var parseText = typeof json.codes[name] == 'function' ? $.stringify(json.codes[name]) : json.codes[name];\\n                            parseText = 'MyParseS★' + name + '★' + base64Encode(parseText);\\n                        } else {\\n                            var parseText = '直链★' + json.title[num];\\n                        }\\n                        if (type == '云分享' && parseText.substr(0, 8) == 'MyParseS') {\\n                            parseText = sharePaste(parseText);\\n                            return parseText.substr(0, 6) != 'error:' ? 'copy://' + parseText + '\\\\n★★★\\\\n' + 'MyParseS：' + name : 'toast://分享失败!!云剪贴板可能挂了';\\n                        } else {\\n                            return 'copy://' + parseText;\\n                        }\\n                    default:\\n                        return 'toast://暂不支持';\\n                } //switch的\\n            }) //String的\\n        }) //stringify的\\n    },\\n    xjParse: function() {\\n        return $(\\\"hiker://empty#noHistory#\\\").rule(() => {\\n            var d = [];\\n            eval(getItem('myFunction'));\\n            d.push({\\n                title: '保 存',\\n                url: saveButton + \\\"saveButton(input);back();clearVar('input_add')\\\",\\n                col_type: \\\"input\\\",\\n                desc: \\\"输入正确格式内容\\\",\\n                extra: {\\n                    onChange: 'putVar(\\\"input_add\\\", input)',\\n                    type: \\\"textarea\\\",\\n                    height: \\\"-1\\\",\\n                    highlight: true,\\n                    titleVisible: false,\\n                    defaultValue: getVar('input_add'),\\n                }\\n            });\\n            d.push({\\n                title: '‘‘’’<small><span style=\\\"color:#6EB897\\\">按描述诉格式输入, 请勿填入其他格式<br>本地口令: 操作类型★名称★代码<br>云口令: 链接★★★名称; 纯网址: 直链★url1★url2',\\n                desc: '‘‘’’<big><big><span style=\\\"color:#298A08\\\">保 存',\\n                url: $('noLoading').lazyRule((saveButton) => {\\n                    return saveButton(getVar('input_add'));\\n                }, saveButton),\\n                col_type: 'text_center_1'\\n            });\\n            setResult(d);\\n        })\\n    },\\n    ydParse: function(BJmode, i) {\\n        return $('#noLoading#').lazyRule((k) => {\\n            var A = k[0].split('#')[1];\\n            var B = k[1];\\n            var parseRoute = getVar('parseRoute');\\n            eval('var json =' + fetch(parseRoute));\\n            var item = json.title.splice(A, 1); // 1: 标记开始位置，2: 删除到哪个位置\\n            json.title.splice(B, 0, item[0]); // 1: 同上，2: 0表示不删除，3: 添加对象\\n            writeFile(parseRoute, $.stringify(json));\\n            clearVar('bianji');\\n            refreshPage(false);\\n            return 'hiker://empty';\\n        }, [BJmode, i])\\n    },\\n    plscParse: function() {\\n        return $('hiker://empty#noRecordHistory#').rule(() => {\\n            var d = [];\\n            d.push({\\n                title: '批量修改/删除解析',\\n                desc: 'auto&&float',\\n                // url: 'file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/cache/plscParse.html',\\n                url: _mySet.batchRoute,\\n                col_type: 'x5_webview_single'\\n            })\\n            setResult(d);\\n        })\\n    }\\n};\\n\\nfunction setParse() {\\n    $.require(\\\"hiker://page/Route?rule=MyFieldᴰⁿ\\\").setParse();\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"调用路由\",\"path\":\"Route\",\"rule\":\"js:\\nconst d = [];\\nconst data = {};\\n\\ndata.oldConfig = \\\"hiker://files/cache/MyParseSet.json\\\";\\ndata.cjRoute = \\\"hiker://files/cache/Parse_Dn.js\\\";\\ndata.x5Route =\\ngetPath('hiker://files/cache/Parse_Dn.html');\\n\\ndata.jxLazy = \\\"eval('var config =' + fetch('\\\" + data.oldConfig + \\\"'));eval(fetch(config.cj));aytmParse(input)\\\";\\n\\ndata.szParse = \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=设置#noHistory##noRecordHistory#\\\";\\n\\ndata.setParse = function() {\\n    d.push({\\n        desc: '795',\\n        url: this.x5Route,\\n        col_type: 'x5_webview_single'\\n    });\\n    var oldV = getVar('jxOldV');\\n    var newV = getVar('jxNewV');\\n    var versionTips = parseFloat(newV) > parseFloat(oldV) ? '‘‘有新版本: v' + newV : '‘‘';\\n    var pics = [\\n        'https://cdn.seovx.com/img/seovx-20-10%20(92).jpg',\\n        'https://cdn.seovx.com/img/mom2018%20(207).jpg',\\n        'https://tva4.sinaimg.cn/large/9bd9b167gy1fwrh5xoltdj21hc0u0tax.jpg',\\n        'https://tva1.sinaimg.cn/large/005BYqpggy1fwreyu4nl6j31hc0u0ahr.jpg',\\n        'https://s3.bmp.ovh/imgs/2021/10/d7e60b990742093d.jpeg',\\n        'https://s3.bmp.ovh/imgs/2021/10/91ad6d6538bf8689.jpg',\\n        'https://tva1.sinaimg.cn/large/005BYqpggy1fwresl5pmlj31hc0xcwka.jpg',\\n        'https://tva3.sinaimg.cn/large/005BYqpggy1fwrgjdk74oj31hc0u0dqn.jpg',\\n        'https://cdn.seovx.com/img/mom2018%20(320).jpg',\\n        'https://cdn.seovx.com/img/mom2018%20(803).jpg'\\n    ];\\n    d.push({\\n        img: pics[Math.floor(Math.random() * 10)],\\n        title: versionTips + '’’<small><span style=\\\"color:#6EB897\\\"><br>　　点击上方头像进入编辑<br>点此进入论坛帖子列表',\\n        desc: '当前版本: v' + oldV,\\n        url: 'https://haikuoshijie.cn/user/1958',\\n        col_type: 'movie_1'\\n    });\\n  setResult(d);\\n}\\n\\nswitch (getParam(\\\"type\\\")) {\\n    case \\\"设置\\\":\\n        data.setParse();\\n        //setResult(d);\\n        break;\\n    case \\\"编辑\\\":\\n        $.require(\\\"hiker://page/jxItem?rule=MyFieldᴰⁿ\\\").jxList();\\n        setResult(d);\\n        break;\\n\\tcase \\\"主题\\\":\\n\\t     $.require(\\\"hiker://page/theme?rule=MyFieldᴰⁿ\\\").themeInit();\\n        break;\\n\\tcase \\\"解析\\\":\\n\\t     $.require(\\\"hiker://page/jxManage?rule=MyFieldᴰⁿ\\\").jxManage();\\n        break;\\n    default:\\n        $.exports = data;\\n        break;\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"解析项主界面\",\"path\":\"jxItem\",\"rule\":\"eval(JSON.parse(fetch('hiker://page/Parse_Dn.js?rule=MyFieldᴰⁿ')).rule);\\nvar isLogin = function (){return true}\\nfunction bbsYZ() {\\n    var _0x47a9b4 = {\\n        'JxSMn': function(_0x249952, _0x4abc15) {\\n            return _0x249952 + _0x4abc15;\\n        },\\n        'LGwmC': '移动#',\\n        'GvDVY': function(_0x461f2d, _0x540571) {\\n            return _0x461f2d + _0x540571;\\n        },\\n        'WfeHD': '‘‘’’<small><span style=\\\"color:#FE9A2E\\\">',\\n        'EqIls': '移动: ',\\n        'Effbn': 'text_2',\\n        'RxkxA': function(_0x32a7d0, _0x1a932c) {\\n            return _0x32a7d0(_0x1a932c);\\n        },\\n        'VBGJH': 'jdRoute',\\n        'BZgRt': function(_0x26984e, _0x5cc926) {\\n            return _0x26984e === _0x5cc926;\\n        },\\n        'rgGCC': 'wDVEb',\\n        'MczOW': function(_0x2880bf, _0x2d9306, _0x97787a) {\\n            return _0x2880bf(_0x2d9306, _0x97787a);\\n        },\\n        'FUjdm': 'bbsYZ',\\n        'lqFhb': function(_0x43bbe6) {\\n            return _0x43bbe6();\\n        },\\n        'FURpy': function(_0x2265c2, _0xa1d568, _0x29de01) {\\n            return _0x2265c2(_0xa1d568, _0x29de01);\\n        },\\n        'XIObB': 'var xdRoute=\\\\\\\"\\\\\\\";'\\n    };\\n    if (!_0x47a9b4['RxkxA'](getVar, _0x47a9b4['VBGJH'])) {\\n        if (_0x47a9b4['BZgRt'](_0x47a9b4['rgGCC'], 'JVkAZ')) {\\n            d['push']({\\n                'title': _0x47a9b4['JxSMn'](_0x47a9b4['LGwmC'], i) == BJmode ? _0x47a9b4['JxSMn'](_0x47a9b4['GvDVY'](_0x47a9b4['WfeHD'], _0x47a9b4['EqIls']), xsList) : '‘‘’’<span style=\\\"color:#298A08\\\">' + xsList,\\n                'url': bjItem['ydParse'](BJmode, i),\\n                'col_type': _0x47a9b4['Effbn']\\n            });\\n        } else {\\n            _0x47a9b4['MczOW'](putVar, _0x47a9b4['FUjdm'], _0x47a9b4['lqFhb'](isLogin||function (){return true}));\\n            _0x47a9b4['FURpy'](putVar, 'jdRoute', _0x47a9b4['XIObB']);\\n        }\\n    }\\n    return getVar(_0x47a9b4['FUjdm']);\\n}\\nvar jxItem = {\\n    'jxList': function() {\\n        var _0x4c0427 = {\\n            'UVWoF': function(_0x26bb07, _0x221b4d) {\\n                return _0x26bb07 + _0x221b4d;\\n            },\\n            'color':function(text, color) {\\n                text += \\\"\\\";\\n                if (text.indexOf(\\\"““””\\\") === 0) {\\n                    text.replace(\\\"““””\\\", \\\"\\\");\\n                }\\n                return \\\"““””<font color='\\\" + color + \\\"'>\\\" + text + \\\"</font>\\\";\\n            },\\n            'kzWDK': function(_0x4854a9, _0x3e98c5) {\\n                return _0x4854a9 + _0x3e98c5;\\n            },\\n            'XXyQr': '移动#',\\n            'gtUnj': function(_0x59aaf7, _0x22c66b) {\\n                return _0x59aaf7 + _0x22c66b;\\n            },\\n            'UtfWf': '‘‘’’<small><span style=\\\\\\\"color:#FE9A2E\\\\\\\">',\\n            'QOvJV': '移动: ',\\n            'ABEwB': '‘‘’’<span style=\\\\\\\"color:#298A08\\\\\\\">',\\n            'ozzWG': 'text_2',\\n            'nWfVR': function(_0x480f3a, _0x4c84fc) {\\n                return _0x480f3a + _0x4c84fc;\\n            },\\n            'JCcNY': 'parseRoute',\\n            'rgDIp': 'bianji',\\n            'hoIdJ': '‘‘’’<big><span style=\\\\\\\"color:#6EB897\\\\\\\">新 建 解 析',\\n            'FrGOH': function(_0x12d6db, _0x2a068d) {\\n                return _0x12d6db < _0x2a068d;\\n            },\\n            'oCCSj': function(_0x19b178, _0x4ef8f6) {\\n                return _0x19b178 === _0x4ef8f6;\\n            },\\n            'HZhlc': function(_0x5cae03, _0x26e242) {\\n                return _0x5cae03 == _0x26e242;\\n            },\\n            'cgIeA': function(_0x25e368, _0x8bc8e9) {\\n                return _0x25e368 + _0x8bc8e9;\\n            },\\n            'xdrFv': function(_0x4ab5d8, _0x21242f) {\\n                return _0x4ab5d8 + _0x21242f;\\n            },\\n            'ywjux': function(_0x5e3051, _0x4e0230) {\\n                return _0x5e3051(_0x4e0230);\\n            }\\n        };\\n        var _0x1d8bb1 = getVar(_0x4c0427['JCcNY']);\\n        var _0x3b89ab = parseFile['title'];\\n        var _0x49da96 = getVar(_0x4c0427['rgDIp']);\\n        d.push({\\n            title: _0x4c0427['hoIdJ'],\\n            desc:'注意:位置操作功能只在分类筛选为全部时生效\\\\n下方搜索按名称或地址,重置请留空或点解析数量按钮',\\n            url: bjItem['xjParse'](),\\n            col_type: 'text_center_1',\\n            extra: {\\n                lineVisible:false\\n            }\\n        });\\n        d.push({\\n            title:'搜索',\\n            desc:'mengx',\\n            col_type:'input',\\n            extra: {\\n                onChange: \\\"putVar('dp.searchJx',input)\\\",\\n                titleVisible: true,\\n                textSize: 11,\\n                defaultValue:getVar('dp.searchJx',''),\\n            },\\n            url:$.toString(()=>{\\n                refreshPage(true);\\n                return 'hiker://empty'\\n            })\\n        });\\n        let filters = ['全部','链接','json','免嗅'];\\n        for(let o in filters){\\n            d.push({\\n                title:getVar('dn.jx_filter','全部')===filters[o]?'““””<span style=\\\"color:#298A08\\\">'+filters[o]:filters[o],\\n                col_type:'scroll_button',\\n                url:$('#noLoading#').lazyRule((it)=>{\\n                    putVar('dn.jx_filter',it);\\n                    refreshPage(true);\\n                    return 'hiker://empty'\\n                },filters[o]),\\n            });\\n        }\\n        var _0x2ecbe5 = _0x3b89ab['length'];\\n        var json={title:[],codes:{}};\\n        let setFile = request('hiker://files/rules/DuanNian/MyParse.json');\\n        try {\\n            eval('json='+setFile);\\n        }catch (e) {\\n            log('Json解析发生了错误:'+e.message);\\n        }\\n        if(getVar('dn.jx_filter','全部')==='链接'){\\n            _0x3b89ab = _0x3b89ab.filter(it=>(!/©$/.test(it))&&typeof(json.codes[_0x4c0427['nWfVR'](it, '')['replace'](/http.*\\\\/\\\\//g, '')])==='string');\\n        }else if(getVar('dn.jx_filter','全部')==='免嗅'){\\n            _0x3b89ab = _0x3b89ab.filter(it=>typeof(json.codes[_0x4c0427['nWfVR'](it, '')['replace'](/http.*\\\\/\\\\//g, '')])==='function');\\n        }else if(getVar('dn.jx_filter','全部')==='json'){\\n            _0x3b89ab = _0x3b89ab.filter(it=>(/©$/.test(it))&&typeof(json.codes[_0x4c0427['nWfVR'](it, '')['replace'](/http.*\\\\/\\\\//g, '')])==='string');\\n        }\\n        if(getVar('dp.searchJx','')){\\n            _0x3b89ab = _0x3b89ab.filter(it=>(json.codes[_0x4c0427['nWfVR'](it, '')]+'').includes(getVar('dp.searchJx'))||it.includes(getVar('dp.searchJx','')));\\n        }\\n        d.push({\\n            title:\\\"解析数:\\\"+_0x4c0427.color(_0x3b89ab.length,'#ff7000'),\\n            col_type:\\\"scroll_button\\\",\\n            url:$('#noLoading#').lazyRule(()=>{\\n                clearVar('dp.searchJx');\\n                refreshPage(true);\\n                return 'toast://已重置'\\n            })\\n        });\\n        // 下面是解析列表排列\\n        // for (var _0xe2c3d8 = 0x0; _0x4c0427['FrGOH'](_0xe2c3d8, _0x2ecbe5); _0xe2c3d8++) {\\n        for (let _0xe2c3d8 in _0x3b89ab) {\\n            var _0x33788c = _0x3b89ab[_0xe2c3d8];\\n            var _0x37871e = _0x4c0427['nWfVR'](_0x33788c, '')['replace'](/http.*\\\\/\\\\//g, '');\\n            if (/移动/ ['test'](_0x49da96)) {\\n                if (_0x4c0427['oCCSj']('uKLxF', 'uKLxF')) {\\n                    d['push']({\\n                        'title': _0x4c0427['HZhlc'](_0x4c0427['XXyQr'] + _0xe2c3d8, _0x49da96) ? _0x4c0427['nWfVR'](_0x4c0427['cgIeA'](_0x4c0427['UtfWf'], _0x4c0427['QOvJV']), _0x37871e) : _0x4c0427['cgIeA'](_0x4c0427['ABEwB'], _0x37871e),\\n                        'url': bjItem['ydParse'](_0x49da96, _0xe2c3d8),\\n                        'col_type': 'text_2'\\n                    });\\n                } else {\\n                    var _0x2bc618 = _0x3b89ab[_0xe2c3d8];\\n                    var _0x5cf417 = _0x4c0427['UVWoF'](_0x2bc618, '')['replace'](/http.*\\\\/\\\\//g, '');\\n                    if (/移动/ ['test'](_0x49da96)) {\\n                        d['push']({\\n                            'title': _0x4c0427['kzWDK'](_0x4c0427['XXyQr'], _0xe2c3d8) == _0x49da96 ? _0x4c0427['gtUnj'](_0x4c0427['gtUnj'](_0x4c0427['UtfWf'], _0x4c0427['QOvJV']), _0x5cf417) : _0x4c0427['ABEwB'] + _0x5cf417,\\n                            'url': bjItem['ydParse'](_0x49da96, _0xe2c3d8),\\n                            'col_type': _0x4c0427['ozzWG']\\n                        });\\n                    } else {\\n                        var _0x119365 = [_0x2bc618, _0x4c0427['gtUnj'](_0xe2c3d8, '||')]['join']('||');\\n                        d['push']({\\n                            'title': _0x4c0427['nWfVR'](_0x4c0427['ABEwB'], _0x5cf417),\\n                            'col_type': _0x4c0427['ozzWG'],\\n                            'url': bjItem['xlSelect'](_0x119365, _0x2ecbe5['toString']())\\n                        });\\n                    }\\n                }\\n            } else {\\n                var _0xb70192 = [_0x33788c, _0xe2c3d8 + '||']['join']('||');\\n                // 迪迪影院||0||  名称||索引 的数组\\n                // ABEwB 是绿色 _0x37871e 是标题名称  xdrFv是字符串连接函数\\n                // let flag = '‘‘Ⓤ’’';\\n                let flag = _0x4c0427.color('Ⓤ','#0051ff');\\n                if(typeof(json.codes[_0x37871e])==='function'){\\n                    // flag = '““Ⓙ””';\\n                    flag = _0x4c0427.color('Ⓙ','#ff7000');\\n                }else if(typeof(json.codes[_0x37871e])==='undefined'){\\n                    flag = '';\\n                }\\n                // let cls = '<span style=\\\"color:#298A08\\\">';\\n                // let title = _0x4c0427['xdrFv'](_0x4c0427['ABEwB'], flag+_0x37871e);\\n                // let title = flag+cls+_0x37871e;\\n                let title = flag+_0x4c0427.color(_0x37871e,'#298A08');\\n                d['push']({\\n                    'title': title,\\n                    // 'title': _0x37871e,\\n                    'col_type': _0x4c0427['ozzWG'],\\n                    'url': bjItem['xlSelect'](_0xb70192, _0x2ecbe5['toString']())\\n                });\\n            }\\n        }\\n        _0x4c0427['ywjux'](clearVar, _0x4c0427['rgDIp']);\\n    },\\n    'lqFile': function() {\\n        var _0x541d76 = {\\n            'aWiRs': function(_0x48d77b, _0x19161f, _0x21cb85) {\\n                return _0x48d77b(_0x19161f, _0x21cb85);\\n            },\\n            'wSfnz': function(_0x4850ea) {\\n                return _0x4850ea();\\n            },\\n            'qRQdA': 'jdRoute',\\n            'WQiqk': 'var xdRoute=\\\"\\\";',\\n            'psGdt': function(_0x170780, _0x3b512a) {\\n                return _0x170780 == _0x3b512a;\\n            },\\n            'imxri': 'true',\\n            'nSkjx': function(_0x95bf38, _0x313f25) {\\n                return _0x95bf38 !== _0x313f25;\\n            },\\n            'iVNeM': 'eeLJm',\\n            'IwMTl': '0|1|5|9|11|3|6|7|10|4|2|8',\\n            'xfdHk': '拉取主插件和网页脚本',\\n            'rGLuA': '主插件存放路径: /cache/Parse_Dn.js\\\\x0a网页脚本存放路径: /cache/Parse_Dn.html',\\n            'zQSLE': 'text_center_1',\\n            'hviDl': function(_0x26db62, _0x312f1c) {\\n                return _0x26db62(_0x312f1c);\\n            },\\n            'ZxUgt': '操作指引',\\n            'sWFoc': function(_0x2a044b, _0x149a3f) {\\n                return _0x2a044b + _0x149a3f;\\n            },\\n            'OEhat': '拉取代码',\\n            'ZvtSu': '编辑解析',\\n            'gXKMb': 'toast://请先拉取列表',\\n            'WCODC': function(_0x4ad3d5, _0x31fa1e) {\\n                return _0x4ad3d5 < _0x31fa1e;\\n            },\\n            'rAkAh': 'text_3',\\n            'yWaOI': '恢复插件路径为默认',\\n            'yjyjK': '当前设置为: ',\\n            'tHXeE': '拉取解析列表或者解析代码',\\n            'GMUYu': '存放路径: /rules/DuanNian/MyParse.json',\\n            'mpZBZ': 'line_blank',\\n            'xvqgF': '输入有效插件地址',\\n            'heuKx': 'putVar(\\\"pluginLink\\\",input)',\\n            'Iifia': '‘‘’’<strong><big>登录提示',\\n            'PFRHA': '使用相关功能需登录视界论坛账号\\\\n如有问题前往论坛了解详情',\\n            'ULwkT': 'https://haikuoshijie.cn/user/signin'\\n        };\\n        if (_0x541d76['psGdt'](_0x541d76['wSfnz'](bbsYZ), _0x541d76['imxri'])||true) {\\n            if (_0x541d76['nSkjx'](_0x541d76['iVNeM'], _0x541d76['iVNeM'])) {\\n                _0x541d76['aWiRs'](putVar, 'bbsYZ', _0x541d76['wSfnz'](isLogin||function (){return true}));\\n                _0x541d76['aWiRs'](putVar, _0x541d76['qRQdA'], _0x541d76['WQiqk']);\\n            } else {\\n                var _0x4d25ff = _0x541d76['IwMTl']['split']('|'),\\n                    _0x4a97c9 = 0x0;\\n                while (!![]) {\\n                    switch (_0x4d25ff[_0x4a97c9++]) {\\n                        case '0':\\n                            d['push']({\\n                                'title': _0x541d76['xfdHk'],\\n                                'url': bjItem['pullScript'](_mySet['cjcache'], _mySet['x5cache']),\\n                                'desc': _0x541d76['rGLuA'],\\n                                'col_type': _0x541d76['zQSLE']\\n                            });\\n                            continue;\\n                        case '1':\\n                            _0x541d76['hviDl'](eval, _0x541d76['hviDl'](getVar, _0x541d76['qRQdA']));\\n                            continue;\\n                        case '2':\\n                            d['push']({\\n                                'col_type': 'line_blank'\\n                            });\\n                            continue;\\n                        case '3':\\n                            var _0x2ab399 = 'hiker://empty#noHistory#@rule=js:this.d=[];$.require(\\\"hiker://page/jxItem?rule=MyFieldᴰⁿ\\\").jxList();setResult(d);';\\n                            continue;\\n                        case '4':\\n                            d['push']({\\n                                'title': _0x541d76['ZxUgt'],\\n                                'url': typeof czGuide == 'function' ? czGuide() : '',\\n                                'col_type': _0x541d76['zQSLE']\\n                            });\\n                            continue;\\n                        case '5':\\n                            xdRoute = _0x541d76['sWFoc'](xdRoute, _mySet['parseRoute']);\\n                            continue;\\n                        case '6':\\n                            var _0x3a9afe = [{\\n                                'title': '拉取列表',\\n                                'url': bjItem['pullCode']('列表')\\n                            }, {\\n                                'title': _0x541d76['OEhat'],\\n                                'url': bjItem['pullCode']('代码')\\n                            }, {\\n                                'title': _0x541d76['ZvtSu'],\\n                                'url': _0x541d76['hviDl'](fileExist, _0x541d76['hviDl'](getVar, 'parseRoute')) == !![] ? _0x2ab399 : _0x541d76['gXKMb']\\n                            }];\\n                            continue;\\n                        case '7':\\n                            for (var _0x1a2cdb = 0x0; _0x541d76['WCODC'](_0x1a2cdb, _0x3a9afe['length']); _0x1a2cdb++) {\\n                                d['push']({\\n                                    'title': _0x3a9afe[_0x1a2cdb]['title'],\\n                                    'url': _0x3a9afe[_0x1a2cdb]['url'],\\n                                    'col_type': _0x541d76['rAkAh']\\n                                });\\n                            }\\n                            continue;\\n                        case '8':\\n                            d['push']({\\n                                'title': _0x541d76['yWaOI'],\\n                                'url': bjItem['hfPlugin'](_mySet['parseRoute']),\\n                                'desc': _0x541d76['sWFoc'](_0x541d76['yjyjK'] + mySet['cj'], '\\\\n存放路径: /rules/DuanNian/MyParse.json'),\\n                                'col_type': _0x541d76['zQSLE']\\n                            });\\n                            continue;\\n                        case '9':\\n                            d['push']({\\n                                'title': _0x541d76['tHXeE'],\\n                                'url': 'toast://请在下方选项操作',\\n                                'desc': _0x541d76['GMUYu'],\\n                                'col_type': _0x541d76['zQSLE']\\n                            });\\n                            continue;\\n                        case '10':\\n                            d['push']({\\n                                'col_type': _0x541d76['mpZBZ']\\n                            });\\n                            continue;\\n                        case '11':\\n                            d['push']({\\n                                'desc': _0x541d76['xvqgF'],\\n                                'col_type': 'input',\\n                                'extra': {\\n                                    'titleVisible': ![],\\n                                    'defaultValue': _0x541d76['hviDl'](getVar, 'pluginLink'),\\n                                    'onChange': _0x541d76['heuKx']\\n                                }\\n                            });\\n                            continue;\\n                    }\\n                    break;\\n                }\\n            }\\n        } else {\\n            d['push']({\\n                'title': _0x541d76['Iifia'],\\n                'desc': _0x541d76['PFRHA'],\\n                'url': _0x541d76['ULwkT'],\\n                'col_type': _0x541d76['zQSLE']\\n            });\\n        }\\n    }\\n};\\n$.exports = jxItem;\"},{\"col_type\":\"movie_3\",\"name\":\"解析Url编辑\",\"path\":\"EditUrl\",\"rule\":\"js:\\nsetPageTitle(\\\"插件接口设置\\\");\\nlet d = [];\\nlet parseUrlText = request(\\\"hiker://files/jiexi/jiexi.txt\\\");\\nlet parseUrlArray = parseUrlText.split(/\\\\n/);\\nlet selected = getItem(\\\"selected\\\", \\\"\\\");\\nlet classTab = [\\n    [\\\"选择\\\", \\\"0\\\"],\\n    [\\\"修改\\\", \\\"1\\\"],\\n    [\\\"删除\\\", \\\"2\\\"]\\n];\\nlet classA = getVar(\\\"class\\\", \\\"0\\\");\\naddListener('onClose', $.toString(() => {\\n    clearVar(\\\"class\\\");\\n}));\\nd.push({\\n    title: \\\"添加新的解析\\\",\\n    url: $(\\\"\\\",\\\"解析名&&解析URL\\\").input(() => {\\n        let parseUrlText = request(\\\"hiker://files/jiexi/jiexi.txt\\\");\\n        let parseUrlArray = parseUrlText.split(/\\\\n/);\\n        if(input.split(\\\"&&\\\").length!==2){\\n            return \\\"toast://格式不正确\\\";\\n        }\\n        parseUrlArray.push(input);\\n        parseUrlText = parseUrlArray.join(\\\"\\\\n\\\");\\n        writeFile(\\\"hiker://files/jiexi/jiexi.txt\\\", parseUrlText);\\n        \\n        refreshPage(false);\\n        return \\\"toast://修改成功\\\";\\n    }),\\n    col_type: \\\"scroll_button\\\"\\n});\\nfor (let item of classTab) {\\n    d.push({\\n        title: item[1] === classA ? \\\"““\\\" + item[0] + \\\"””\\\" : item[0],\\n        url: $(\\\"#noLoading#\\\").lazyRule((key) => {\\n            putVar(\\\"class\\\", key);\\n            refreshPage(false);\\n            return \\\"hiker://empty\\\";\\n        }, item[1]),\\n        col_type: \\\"scroll_button\\\"\\n    });\\n}\\nlet func;\\nswitch (classA) {\\n    case \\\"0\\\":\\n        func = function(url, title) {\\n            return $(url + \\\"#noLoading#\\\").lazyRule((title) => {\\n                log(\\\"\\\\n更改接口> \\\" + input);\\n                setItem(\\\"selected\\\", input);\\n                setItem(\\\"selected0\\\", title + \\\"&&\\\" + input);\\n                refreshPage(false);\\n                return \\\"toast://修改成功\\\";\\n            }, title);\\n        };\\n        break;\\n    case \\\"1\\\":\\n        func = function(url, title, index) {\\n            return $(url, \\\"请输入「\\\" + title + \\\"」的新接口\\\").input((title, index) => {\\n                let parseUrlText = request(\\\"hiker://files/jiexi/jiexi.txt\\\");\\n                let parseUrlArray = parseUrlText.split(/\\\\n/);\\n                let selected1 = parseUrlArray[index];\\n                parseUrlArray[index] = title + \\\"&&\\\" + input;\\n                parseUrlText = parseUrlArray.join(\\\"\\\\n\\\");\\n                writeFile(\\\"hiker://files/jiexi/jiexi.txt\\\", parseUrlText);\\n                if (selected1 == getItem(\\\"selected0\\\")) {\\n                    setItem(\\\"selected\\\", input);\\n                    setItem(\\\"selected0\\\", title + \\\"&&\\\" + input);\\n                }\\n                refreshPage(false);\\n                return \\\"toast://修改成功\\\";\\n            }, title, index);\\n        };\\n        break;\\n    case \\\"2\\\":\\n        func = function(url, title, index) {\\n            return $(\\\"确认删除「\\\" + title + \\\"」？\\\").confirm((title, index) => {\\n                let parseUrlText = request(\\\"hiker://files/jiexi/jiexi.txt\\\");\\n                let parseUrlArray = parseUrlText.split(/\\\\n/);\\n                let selected1 = parseUrlArray[index];\\n                parseUrlArray.splice(index, 1);\\n                parseUrlText = parseUrlArray.join(\\\"\\\\n\\\");\\n                writeFile(\\\"hiker://files/jiexi/jiexi.txt\\\", parseUrlText);\\n                if (selected1 == getItem(\\\"selected0\\\")) {\\n                    if (parseUrlArray[0]) {\\n                        setItem(\\\"selected\\\", parseUrlArray[0].split(\\\"&&\\\")[1] || \\\"\\\");\\n                        setItem(\\\"selected0\\\", parseUrlArray[0]);\\n                    } else {\\n                        setItem(\\\"selected\\\", \\\"\\\");\\n                        setItem(\\\"selected0\\\", \\\"\\\");\\n                    }\\n                }\\n                refreshPage(false);\\n                return \\\"toast://修改成功\\\";\\n            }, title, index);\\n        };\\n        break;\\n\\n}\\nfor (let i in parseUrlArray) {\\n    let item = parseUrlArray[i].split(\\\"&&\\\");\\n    d.push({\\n        title: selected == item[1] ? \\\"‘‘\\\" + item[0] + \\\"’’\\\" : item[0],\\n        url: func(item[1], item[0], i),\\n        col_type: \\\"text_3\\\"\\n    });\\n}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"主题管理\",\"path\":\"theme\",\"rule\":\"js:\\n    function themeInit(){\\n        const {color,small} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n        let d = [];\\n        let options = ['选择','修改','删除','导出'];\\n\\n        for(var i in options){\\n            let option = options[i];\\n            let flag = getVar('theme.dn_option','新增')===option?'👉':'';\\n            d.push({\\n                title:flag+option,\\n                col_type:'scroll_button',\\n                url:$(option).lazyRule(()=>{\\n                    putVar('theme.dn_option', input);\\n                    refreshPage(true);\\n                    return 'toast://已设置操作类型为:'+input;\\n                }),\\n            });\\n        }\\n\\n        let themeRoute = \\\"hiker://files/cache/MyTheme.json\\\";\\n        let myThemes = {};\\n        let themes = {};\\n        try {\\n            myThemes = JSON.parse(fetch(themeRoute));\\n            themes = myThemes.themes[myThemes.now_theme];\\n        }catch (e) {}\\n\\n\\n        d.push({\\n            title:'导入',\\n            col_type:'scroll_button',\\n            url:$('','请输入导入口令').input((myThemes,themeRoute)=>{\\n                if(/^断插主题@.*?@http/.test(input)){\\n                    let name = input.split('@')[1];\\n                    let url = input.split('@')[2];\\n                    return $('确定要导入断插主题-'+name+' 吗?').confirm((name,url,myThemes,themeRoute)=>{\\n                        let content = parsePaste(url);\\n                        let hasTheme = myThemes.themes.filter(it=>it.name===name);\\n                        if(hasTheme&&hasTheme.length>0){\\n                            let id = null;\\n                            for(let j in myThemes.themes){\\n                                if(myThemes.themes[j].name === name){\\n                                    id = j;\\n                                    break;\\n                                }\\n                            }\\n                            if(!id){\\n                                return 'toast://索引错误无法覆盖导入:\\\\n'+id\\n                            }\\n                            // log('覆盖导入主题id:'+id);\\n                            myThemes.themes[id] = Object.assign(JSON.parse(base64Decode(content)),{'name':name});\\n                        }else{\\n                            myThemes.themes.push(Object.assign(JSON.parse(base64Decode(content)),{'name':name}));\\n                        }\\n                        // log(myThemes);\\n                        writeFile(themeRoute,JSON.stringify(myThemes));\\n                        refreshPage(true);\\n                        return 'toast://已成功导入主题:\\\\n'+name\\n                    },name,url,myThemes,themeRoute);\\n                }else{\\n                    return 'toast://无法识别的导入口令:\\\\n'+input;\\n                }\\n            },myThemes,themeRoute),\\n        });\\n        d.push({\\n            title:'新增',\\n            col_type:'scroll_button',\\n            url:$().rule((myThemes,themeRoute)=>{\\n                let d=[];\\n                addListener('onClose', $.toString(()=>{\\n                    refreshPage(true);\\n                }));\\n                d.push({\\n                    title: '主题名称',\\n                    desc: \\\"断插-蓝莓主题\\\",\\n                    extra: {\\n                        onChange: \\\"putVar('theme.new_add_name',input)\\\",\\n                        titleVisible: true,\\n                        defaultValue: getVar('theme.new_add_name', '')\\n                    },\\n                    url:$.toString(() => {\\n                        let new_add_name = getVar('theme.new_add_name', '');\\n                        return 'toast://你输入的是:'+new_add_name;\\n                    }),\\n                    col_type: \\\"input\\\"\\n                });\\n                d.push({\\n                    desc: \\\"代码\\\",\\n                    col_type: 'input',\\n                    extra: {\\n                        titleVisible: false,\\n                        defaultValue: getVar('theme.new_add_code', ''),\\n                        type: \\\"textarea\\\",\\n                        height:-1,\\n                        onChange: 'putVar(\\\"theme.new_add_code\\\",input)'\\n                    }\\n                });\\n                d.push({\\n                    title:'保存',\\n                    col_type:'text_center_1',\\n                    url:$().lazyRule((myThemes,themeRoute)=>{\\n                        let code = getVar('theme.new_add_code', '');\\n                        let name = getVar('theme.new_add_name', '');\\n                        if(!name){\\n                            return 'toast://你还没填写主题名称呢'\\n                        }\\n                        let newTheme = {};\\n                        try {\\n                            newTheme = JSON.parse(code);\\n                        }catch (e) {\\n                            return 'toast://错误的主题json格式:\\\\n'+e.message;\\n                        }\\n                        Object.assign(newTheme,{'name':name});\\n                        myThemes.themes.push(newTheme);\\n                        writeFile(themeRoute,JSON.stringify(myThemes));\\n                        refreshPage(true);\\n                        return 'toast://已新增断插主题:'+name\\n                    },myThemes,themeRoute)\\n                });\\n                setResult(d);\\n            },myThemes,themeRoute),\\n        });\\n        d.push({\\n            title:myThemes.themes?'主题列表:共计:'+color(myThemes.themes.length,'#ff7000')+'个主题':\\\"第一次加载，点此进去初始化主题列表\\\",\\n            col_type:'text_1',\\n            url:'hiker://page/Route?rule=MyFieldᴰⁿ&type=设置#noHistory#'\\n        });\\n        d.push({\\n            title:\\\"恢复出厂设置\\\",\\n            col_type:'text_center_1',\\n            url:$(\\\"如果你的主题没法正常用了，此方法可以救砖，确认恢复?\\\").confirm(()=>{\\n                let themes = {name:'默认主题',closeBtn:{color:'#f6f6f6',background:'#aa96da'},saveBtn:{color:'#F9F0DA',background:'#068006'},saveCloseBtn:{color:'#F9F0DA',background:'#05BFC5'},tipsBtn:{color:'#F9F0DA',background:'#05BFC5'},barlabel:{color:'#F9F0DA',background:'#aa96da'},barInput:{color:'#aa96da',background:'#ffffd2'},select:{color:'#F9F0DA',background:'#aa96da'},};\\n                let themeDef = {\\\"name\\\":\\\"断念原皮\\\",\\\"closeBtn\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#c5464a\\\"},\\\"saveBtn\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#068006\\\"},\\\"saveCloseBtn\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#05BFC5\\\"},\\\"tipsBtn\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#05BFC5\\\"},\\\"barlabel\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#D06B6C\\\"},\\\"barInput\\\":{\\\"color\\\":\\\"#D06B6C\\\",\\\"background\\\":\\\"#F9F0DA\\\"},\\\"select\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#D06B6C\\\"}};\\n                let themeRoute = \\\"hiker://files/cache/MyTheme.json\\\";\\n                writeFile(themeRoute,JSON.stringify({now_theme:'默认主题',themes:[themes,themeDef]}));\\n                refreshPage(true);\\n                return 'toast://断插主题已重置为出厂设置'\\n            })\\n        });\\n        for(var i in myThemes.themes){\\n            let nowThem = myThemes.themes[i];\\n            d.push({\\n                title:myThemes.now_theme===nowThem.name?'👉'+nowThem.name:nowThem.name,\\n                col_type:'flex_button',\\n                url:$().lazyRule((mytheme,myThemes,i,themeRoute)=>{\\n                    let option = getVar('theme.dn_option','新增');\\n                    switch (option){\\n                        case '导出':\\n                            let mythemeCode = base64Encode(JSON.stringify(mytheme));\\n                            let url = sharePaste(mythemeCode);\\n                            let code = '断插主题@'+mytheme.name+'@'+url;\\n                            copy(code);\\n                            return 'toast://已导出为云口令并复制到剪切板'\\n                        case '修改':\\n                            return $(JSON.stringify(mytheme)).input((mytheme,myThemes,i,themeRoute)=>{\\n                                if(mytheme.name===myThemes.now_theme){\\n                                    return 'toast://此主题当前正在使用中，不允许修改!'\\n                                }\\n                                myThemes.themes[i]=JSON.parse(input);\\n                                writeFile(themeRoute,JSON.stringify(myThemes));\\n                                refreshPage(true);\\n                                return 'toast://已修改'\\n                            },mytheme,myThemes,i,themeRoute)\\n                        case '删除':\\n                            return $('确认删除主题:'+mytheme.name+'?').confirm((mytheme,myThemes,i,themeRoute)=>{\\n                                if(mytheme.name===myThemes.now_theme){\\n                                    return 'toast://此主题当前正在使用中，不允许删除!'\\n                                }\\n                                myThemes.themes.splice(i,1);\\n                                writeFile(themeRoute,JSON.stringify(myThemes));\\n                                refreshPage(true);\\n                                return 'toast://已删除'\\n                            },mytheme,myThemes,i,themeRoute)\\n                        default:\\n                            myThemes.now_theme=mytheme.name;\\n                            writeFile(themeRoute,JSON.stringify(myThemes));\\n                            refreshPage(true);\\n                            return 'toast://你选择了'+mytheme.name+'作为默认主题';\\n                    }\\n                },nowThem,myThemes,i,themeRoute),\\n            });\\n        }\\n        setResult(d);\\n    }\\n$.exports.themeInit=themeInit;\"},{\"name\":\"操作指引\",\"path\":\"Guide\",\"rule\":\"<html>\\n<head>\\n    <meta charset=\\\"UTF-8\\\">\\n</head>\\n<body>\\n<strong> <big>拉取篇</big> </strong>\\n<br /> 操作顺序：\\n<br /> 1.更新道长仓库Pro到76版本\\n<br /> 2.拉取主插件和网页脚本\\n<br /> 3.推荐直接拉取代码<s>拉取列表→拉取代码</s>\\n<br />\\n<br />\\n<strong><big>口令篇</big></strong>\\n<br />首页输入框支持：\\n<br />1.分享出来的同系列插件云剪贴板口令\\n<br />2.未加密的同系列插件地址,支持本地文件如以下格式开头的:file://,hiker://,/storage\\n<br />3.Q神\\n<br />4.断插\\n<br />5.#道长精选\\n<br />6.#b站\\n<br />7.#倍陆\\n<br />\\n<br />\\n<strong><big>编辑篇</big></strong>\\n<br />隐藏功能需知：\\n<br />隐藏功能是从列表上删除标题，故无复现功能\\n<br />看准了，不用的才点隐藏\\n<br />要复现的话去修改新的MyParse.json，在title的数组那按格式添加标题\\n<br />\\n<br />\\n<strong><big>完结</big><br /></strong>\\n<p>v3.49,小白最后的倔强,小白关怀模式</p>\\n<p>一键实现配置完毕即可通过支持魔断的小程序看视频，回归白嫖视频这个需求本身</p>\\n<p>推荐使用青豆,app影视.dp</p>\\n<p>魔断(断插道长魔改版)已弃坑跑路，感谢原作者断念的插件解析及本小程序核心代码</p>\\n</body>\\n</html>\"},{\"name\":\"测试数据\",\"path\":\"demoData\",\"rule\":\"js:\\n    let demoData = {\\n        爱奇艺:['https://www.iqiyi.com/v_1zp7qgh23kg.html','https://www.iqiyi.com/v_2bc8tk8r6ug.html'],\\n        优酷:['https://v.youku.com/v_show/id_XNTE4NTgxMTY2MA==.html','https://v.youku.com/v_show/id_XNTE5ODYxMjAzNg==.html'],\\n        腾讯:['https://v.qq.com/x/cover/m441e3rjq9kwpsc/p0040gim4fz.html','https://v.qq.com/x/cover/mzc00200xh9313v/z0039tbho7q.html'],\\n        芒果:['https://www.mgtv.com/b/372061/12193558.html','https://www.mgtv.com/b/363286/14295823.html'],\\n        哔哩哔哩:['https://www.bilibili.com/bangumi/play/ep381217','https://www.bilibili.com/bangumi/play/ep408123','https://www.bilibili.com/bangumi/play/ss33434','https://www.bilibili.com/video/av336348663'],\\n        搜狐:['https://film.sohu.com/album/9457584.html','https://film.sohu.com/album/9182646.html'],\\n        西瓜:['https://www.ixigua.com/6551332125654647310','https://www.ixigua.com/6699356792905794055'],\\n        PPTV:['http://v.pptv.com/show/TIndWsIomNY5tx8.html','http://v.pptv.com/show/SCQ5th6E9DKVE3s.html'],\\n        咪咕:['https://www.miguvideo.com/mgs/website/prd/detail.html?cid=633511743','https://www.miguvideo.com/mgs/website/prd/detail.html?cid=716270319'],\\n        乐视:['http://www.le.com/ptv/vplay/75843059.html','http://www.le.com/ptv/vplay/24220901.html#vid=24220901'],\\n        1905:['https://vip.1905.com/play/875740.shtml','https://www.1905.com/vod/play/880641.shtml'],\\n        风行:['http://www.fun.tv/vplay/g-304143','http://www.fun.tv/vplay/g-1008963/'],\\n        龙腾:['LT-1ec3f6754f68586ed7f92c3e995cfca6','LT-fff47abf7ff22ffa3def904c6c91e192','LT-7ccda68683329780bd7264c8f9edd90e'],\\n        人人迷:['renrenmi-ab924e11d2d69397','renrenmi-92640e8dc4cad83a'],\\n        五毒:['wuduyun-1649431307021'],\\n        多多:['https://m3u8.cache.suoyo.cc/m3u8/202203/8/aaabd92da26774c68850a023153c80f1ae6fa9be.m3u8'],\\n        融兴:['RongXingVR-4215645581932','RongXingVR-4215645587000'],\\n        雪人:['xueren-1646823072','xueren-1649402753','xueren-1649175252','xueren-1649307780','xueren-1648781475'],\\n        旋风云:['xfy-529e6457953d545f','xfy-b65615dac4377ee3'],\\n        瑞丰资源:['https://1.ruifenglb.com/play/1644914595.m3u8','https://1.ruifenglb.com/play/1642389907.m3u8'],\\n    }\\n\\nlet defaultSets =  {\\n    qy: '万能解析Ⓙ',\\n    yk: '万能解析Ⓙ',\\n    tx: '万能解析Ⓙ',\\n    mg: '万能解析Ⓙ',\\n    bl: '万能解析Ⓙ',\\n    sh: '万能解析Ⓙ',\\n    xg: '万能解析Ⓙ',\\n    al: '万能解析Ⓙ',\\n    pp: '万能解析Ⓙ',\\n    mi: '万能解析Ⓙ',\\n    le: '万能解析Ⓙ',\\n    oth: '道长仓库通免',\\n    fun: '万能解析Ⓙ',\\n    one:'万能解析Ⓙ',\\n    lt:'万能解析Ⓙ',\\n    rr:'万能解析Ⓙ',\\n    wd:'万能解析Ⓙ',\\n    qju: '默认',\\n    cj: 'hiker://files/cache/Parse_Dn.js'\\n};\\n\\nlet floors = '①②③④⑤⑥⑦⑧⑨⑩１２３４５６７８９０⒈⒉⒊⒋⒌⒍⒎⒏⒐'.split('');\\nlet emojis = '#️⃣|*️⃣|0️⃣|1️⃣|2️⃣|3️⃣|4️⃣|5️⃣|6️⃣|7️⃣|8️⃣|9️⃣|🅰️|🅱️|🍇|🍈|🍉|🍊|🍋|🍌|🍍|🍎|🍏|🍐|🍑|🍒|🍓|🍅|🍆|🌽|🍄|🌰|🍞|🍖|🍗|🍔|🍟|🍕|🍳|🍲|🍱|🍘|🍙|🍚|🍛|🍜|🍝|🍠|🍢|🍣|🍤|🍥|🍡|🍦|🍧|🍨|🍩|🍪|🎂|🍰|🍫|🍬|🍭|🍮|🍯|🍼|☕|🍵|🍶|🍷|🍸|🍹|🍺|🍻|🍴'.split('|');\\nfloors = floors.concat(emojis);\\n$.exports.demoData = demoData;\\n$.exports.defaultSets = defaultSets;\\n$.exports.floors = floors;\"},{\"name\":\"工具类\",\"path\":\"utils\",\"rule\":\"js:\\n//随机从列表抽取一个元素\\nfunction getOne(its) {return  its[Math.floor(Math.random()*its.length)];}\\n//去重（ES6 Set）\\nfunction unique2(array){\\n    return Array.from(new Set(array));\\n}\\n//获取列表中重复都值\\nfunction duplicates(arr) {\\n    let res=arr.filter((x,k)=>{\\n        let a=k*1+1;\\n        let index=arr.indexOf(x,a);\\n        if(index>-1){\\n            return x;\\n        }\\n    })\\n    let re=new Set(res);\\n    return Array.from(re);\\n}\\n$.exports.getOne = getOne;\\n$.exports.unique2 = unique2;\\n$.exports.duplicates = duplicates;\"},{\"name\":\"解析管理\",\"path\":\"jxManage\",\"rule\":\"js:\\n    function jxManage(){\\n        const {color,small} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n        let d = [];\\n        let options = ['选择','修改','删除','导出'];\\n\\n        for(let i in options){\\n            let option = options[i];\\n            let flag = getVar('dn.jxm_option','选择')===option?'👉':'';\\n            d.push({\\n                title:flag+option,\\n                col_type:'scroll_button',\\n                url:$('#noLoading#').lazyRule((option)=>{\\n                    putVar('dn.jxm_option', option);\\n                    refreshPage(true);\\n                    return 'hiker://empty';\\n                },option),\\n            });\\n        }\\n        let jxsRoute = \\\"hiker://files/cache/MyJiexi.json\\\";\\n        let dmPath = \\\"hiker://files/cache/diaomao.txt\\\";\\n        let MyJiexi = {jiexis:[]};\\n        let jiexis = {};\\n        try {\\n            MyJiexi = JSON.parse(fetch(jxsRoute));\\n            jiexis = MyJiexi.jiexis.filter(it=>it.name===MyJiexi.now)[0];\\n        }catch (e) {}\\n\\n        d.push({\\n            title:'导入',\\n            col_type:'scroll_button',\\n            url:$('','请输入导入口令').input((MyJiexi,jxsRoute)=>{\\n                if(/^魔断解析配置@.*?@http/.test(input)){\\n                    let name = input.split('@')[1];\\n                    let url = input.split('@')[2];\\n                    return $('确定要导入断插解析配置-'+name+' 吗?').confirm((name,url,MyJiexi,jxsRoute)=>{\\n                        let content = parsePaste(url);\\n                        let hasIt = MyJiexi.jiexis.filter(it=>it.name===name);\\n                        if(hasIt&&hasIt.length>0){\\n                            let id = null;\\n                            for(let j in MyJiexi.jiexis){\\n                                if(MyJiexi.jiexis[j].name === name){\\n                                    id = j;\\n                                    break;\\n                                }\\n                            }\\n                            if(!id){\\n                                return 'toast://索引错误无法覆盖导入:\\\\n'+id\\n                            }\\n                            // log('覆盖导入主题id:'+id);\\n                            MyJiexi.jiexis[id] = Object.assign(JSON.parse(base64Decode(content)),{'name':name});\\n                        }else{\\n                            MyJiexi.jiexis.push(Object.assign(JSON.parse(base64Decode(content)),{'name':name}));\\n                        }\\n                        writeFile(jxsRoute,JSON.stringify(MyJiexi));\\n                        refreshPage(true);\\n                        return 'toast://已成功导入解析配置:\\\\n'+name\\n                    },name,url,MyJiexi,jxsRoute);\\n                }else{\\n                    return 'toast://无法识别的导入口令:\\\\n'+input;\\n                }\\n            },MyJiexi,jxsRoute),\\n        });\\n\\n        let isAuto = MyJiexi.isAuto;\\n        let autoMode = MyJiexi.autoMode;\\n        let singleBack = MyJiexi.singleBack||false; //吊毛模式。单个结果直接返回，停止后面的\\n        let ignore_mx = MyJiexi.ignore_mx||false; //忽略免嗅,嗅探优先模式使用\\n        let tips = '解析配置列表:共计:'+color(MyJiexi.jiexis.length,'#ff7000')+'个配置,自动档开关:'+color(isAuto?'开':'关','#ff7000');\\n        d.push({\\n            title:MyJiexi.jiexis&&MyJiexi.jiexis.length>0?tips:\\\"第一次加载，点此进去初始化解析列表\\\",\\n            col_type:'text_1',\\n            url:$('#noLoading#').lazyRule((MyJiexi,jxsRoute)=>{\\n                if(MyJiexi.jiexis&&MyJiexi.jiexis.length>0){\\n                    MyJiexi.isAuto = !MyJiexi.isAuto;\\n                    if(!MyJiexi.autoMode){\\n                        MyJiexi.autoMode = '嗅探优先';\\n                    }\\n                    writeFile(jxsRoute,JSON.stringify(MyJiexi));\\n                    refreshPage(true);\\n                    let tips = MyJiexi.isAuto?'开':'关';\\n                    return 'toast://已设置自动档模式为:'+tips\\n                }else{\\n                    let initSet = {'now':\\\"道长推荐\\\",'jiexis':[{name:'道长推荐',qy:['万能解析Ⓙ'],yk:['万能解析Ⓙ'],tx:['万能解析Ⓙ'],mg:['万能解析Ⓙ'],bl:['万能解析Ⓙ'],sh:['万能解析Ⓙ'],xg:['万能解析Ⓙ'],pp:['万能解析Ⓙ'],mi:['万能解析Ⓙ'],\\n                            le:['万能解析Ⓙ'],fun:['万能解析Ⓙ'],one:['万能解析Ⓙ'],lt:['万能解析Ⓙ'],rr:['万能解析Ⓙ'],wd:['万能解析Ⓙ']}]};\\n                    writeFile(jxsRoute,JSON.stringify(initSet));\\n                    refreshPage(true);\\n                    return 'toast://断插解析配置已初始化'\\n                }\\n            },MyJiexi,jxsRoute)\\n        });\\n        let c1 = '#15ab21';\\n        let c2 = '#900a0a';\\n        let autoModeSel = ['速度优先','顺序优先','嗅探优先'];\\n        let autoModeSels = autoModeSel.map((it)=>{\\n            if(it===MyJiexi.autoMode){\\n                it = color(it,c1);\\n            }\\n            return it\\n        });\\n        let autoModeTips = autoModeSel.includes(autoMode)?autoMode:'未知';\\n        d.push({\\n            title:small(\\\"备胎宠幸方案:\\\")+color(autoModeTips,'#ff7000'),\\n            col_type:'text_2',\\n            url:$(autoModeSels,3,'请选择自动档模式').select((MyJiexi,jxsRoute)=>{\\n                input = /font/.test(input)?input.split('>')[1].split('<')[0]:input;\\n                if(input!==MyJiexi.autoMode){\\n                    MyJiexi.autoMode = input;\\n                    writeFile(jxsRoute,JSON.stringify(MyJiexi));\\n                    refreshPage(false);\\n                }\\n                return 'toast://已设置备胎宠幸方案为:'+input\\n            },MyJiexi,jxsRoute),\\n        });\\n\\n        d.push({\\n            title:color(\\\"恢复出厂设置\\\",'#ff7000'),\\n            col_type:'text_2',\\n            url:$(\\\"如果你的解析管理无法正常用了，此方法可以救砖，确认恢复?\\\").confirm((jxsRoute)=>{\\n                let initSet = {'now':\\\"道长推荐\\\",'jiexis':[{name:'道长推荐',qy:['万能解析Ⓙ'],yk:['万能解析Ⓙ'],tx:['万能解析Ⓙ'],mg:['万能解析Ⓙ'],bl:['万能解析Ⓙ'],sh:['万能解析Ⓙ'],xg:['万能解析Ⓙ'],pp:['万能解析Ⓙ'],mi:['万能解析Ⓙ'],\\n                        le:['万能解析Ⓙ'],fun:['万能解析Ⓙ'],one:['万能解析Ⓙ'],lt:['万能解析Ⓙ'],rr:['万能解析Ⓙ'],wd:['万能解析Ⓙ']}]};\\n                writeFile(jxsRoute,JSON.stringify(initSet));\\n                refreshPage(true);\\n                return 'toast://断插解析配置已重置为出厂设置'\\n            },jxsRoute)\\n        });\\n\\n        let cacheVideoSwitch = getVar('dp.cacheVideo','true')==='true'?'开':'关';\\n        let jxTimeout = getVar('dp.jxTimeout','7000');\\n        let col_type2 = autoMode==='顺序优先'?'text_3':'text_2';\\n        let singleBackTips = singleBack?'开':'关';\\n        let ignore_mx_tips = ignore_mx?'开':'关';\\n        if(autoMode==='顺序优先'){\\n            d.push({\\n                title:small('吊毛模式:')+color(singleBackTips,'#ff7000'),\\n                col_type:col_type2,\\n                url:$('#noLoading#').lazyRule((MyJiexi,jxsRoute)=>{\\n                    MyJiexi.singleBack = !(MyJiexi.singleBack||false);\\n                    writeFile(jxsRoute,JSON.stringify(MyJiexi));\\n                    refreshPage(true);\\n                    return 'toast://已设置吊毛模式开关为:'+(MyJiexi.singleBack?'开':'关')\\n                },MyJiexi,jxsRoute)\\n            });\\n        }else if(autoMode==='嗅探优先'){\\n            d.push({\\n                    title: color('导入辅助','#ff7000'),\\n                    col_type:col_type2,\\n                    url: $('hiker://empty#noLoading#').lazyRule(() => {\\n                        let html = request('https://netcut.cn/p/a5d1c8e1ecee28d3');\\n                        let data = html.match(/{.*note_content.*updated_at.*}/)[0];\\n                        let content = JSON.parse(data).note_content;\\n                        let upData = JSON.parse(data).updated_at;\\n                        confirm({\\n                            title: '是否导入',\\n                            content: '脚本更新日期\\\\n' + upData,\\n                            confirm:$.toString((content)=>{\\n                                return content\\n                            },content),\\n                            cancel: () => {\\n                                return 'toast://已取消导入';\\n                            }\\n                        });\\n                        return 'hiker://empty';\\n                    }),\\n                }\\n            );\\n            d.push({\\n                title:small('忽略免嗅:')+color(ignore_mx_tips,'#ff7000'),\\n                col_type:col_type2,\\n                url:$('#noLoading#').lazyRule((MyJiexi,jxsRoute)=>{\\n                    MyJiexi.ignore_mx = !(MyJiexi.ignore_mx||false);\\n                    writeFile(jxsRoute,JSON.stringify(MyJiexi));\\n                    refreshPage(false);\\n                    return 'toast://已设置忽略免嗅开关为:'+(MyJiexi.ignore_mx?'开':'关')\\n                },MyJiexi,jxsRoute)\\n            });\\n        }\\n        d.push({\\n            title:small('多线路缓存:')+color(cacheVideoSwitch,'#ff7000'),\\n            col_type:col_type2,\\n            url:$('#noLoading#').lazyRule((cacheVideoSwitch)=>{\\n                if(cacheVideoSwitch==='开'){\\n                    putVar('dp.cacheVideo','false');\\n                }else{\\n                    putVar('dp.cacheVideo','true');\\n                }\\n                refreshPage(true);\\n                return 'hiker://empty'\\n            },cacheVideoSwitch)\\n        });\\n        d.push({\\n            title:small('解析超时:')+color(jxTimeout,'#ff7000'),\\n            col_type:col_type2,\\n            url:$(jxTimeout,'请设置魔断解析超时,必须为整数').input(()=>{\\n                if(!parseInt(input)){\\n                    input = 7000;\\n                }\\n                putVar('dp.jxTimeout',input);\\n                refreshPage(true);\\n                return 'toast://已设置为:'+parseInt(input)\\n            },jxTimeout)\\n        });\\n        if(autoMode&&singleBack){\\n            d.push({\\n                title: color('打开编辑吊毛过滤文件','#1379CB'),\\n                url: $('#noLoading#').lazyRule((dmPath) => {\\n                    let def_dms = ['https://vd3.bdstatic.com/mda-ki9ugq5430bhxys8/v1-cae/1080p/mda-ki9ugq5430bhxys8.mp4'];\\n                    if(!fileExist(dmPath)){\\n                        writeFile(dmPath,'//一行一个链接,可注释。\\\\n'+def_dms.join('\\\\n'));\\n                    }\\n                    return 'editFile://'+dmPath;\\n                },dmPath),\\n                col_type: 'text_center_1'\\n            });\\n        }\\n\\n        d.push({\\n            title: color('打开编辑解析文件','#1379CB'),\\n            url: $('#noLoading#').lazyRule((jxsRoute) => {\\n                return 'editFile://'+jxsRoute;\\n            },jxsRoute),\\n            col_type: 'text_center_1'\\n        });\\n\\n        for(let i in MyJiexi.jiexis){\\n            let nowJx = MyJiexi.jiexis[i];\\n            d.push({\\n                title:MyJiexi.now===nowJx.name?'👉'+nowJx.name:nowJx.name,\\n                col_type:'flex_button',\\n                extra:{\\n                    nowJx:nowJx,\\n                    MyJiexi:MyJiexi,\\n                    jxsRoute:jxsRoute\\n                },\\n                url:$('#noLoading#').lazyRule((nowJx,MyJiexi,i,jxsRoute)=>{\\n                    let option = getVar('dn.jxm_option','选择');\\n                    switch (option){\\n                        case '导出':\\n                            let nowJxCode = base64Encode(JSON.stringify(nowJx));\\n                            let url = sharePaste(nowJxCode);\\n                            let code = '魔断解析配置@'+nowJx.name+'@'+url;\\n                            copy(code);\\n                            return 'toast://已导出为云口令并复制到剪切板'\\n                        case '修改':\\n                            // if(nowJx.name===MyJiexi.now){\\n                            //     return 'toast://此解析配置当前正在使用中，不允许修改!'\\n                            // }\\n                            // else{\\n                            //     return 'hiker://page/jxEdit?rule=MyFieldᴰⁿ'\\n                            // }\\n                            return 'hiker://page/jxEdit?rule=MyFieldᴰⁿ'\\n                        case '删除':\\n                            return $('确认删除解析配置:'+nowJx.name+'?').confirm((nowJx,MyJiexi,i,jxsRoute)=>{\\n                                if(nowJx.name===MyJiexi.now){\\n                                    return 'toast://此解析配置当前正在使用中，不允许删除!'\\n                                }\\n                                MyJiexi.jiexis.splice(i,1);\\n                                writeFile(jxsRoute,JSON.stringify(MyJiexi));\\n                                refreshPage(true);\\n                                return 'toast://已删除'\\n                            },nowJx,MyJiexi,i,jxsRoute)\\n                        default:\\n                            MyJiexi.now=nowJx.name;\\n                            writeFile(jxsRoute,JSON.stringify(MyJiexi));\\n                            refreshPage(true);\\n                            return 'toast://你选择了'+nowJx.name+'作为当前解析配置';\\n                    }\\n                },nowJx,MyJiexi,i,jxsRoute),\\n            });\\n        }\\n        setResult(d);\\n    }\\n$.exports.jxManage=jxManage;\"},{\"name\":\"解析编辑\",\"path\":\"jxEdit\",\"rule\":\"js:\\nlet {nowJx,MyJiexi,jxsRoute} = MY_PARAMS;\\nlet nowJxT = JSON.parse(getVar('dn.nowJx')||'{}');\\nnowJx = nowJxT.name?nowJxT:nowJx;\\naddListener('onClose', $.toString(()=>{\\n    clearVar(\\\"dn.jx_titles\\\");\\n    clearVar(\\\"dn.nowJx\\\");\\n    clearVar(\\\"dn.jxm_name\\\");\\n}));\\nlet id = null;\\nfor(let j in MyJiexi.jiexis){\\n    if(MyJiexi.jiexis[j].name === nowJx.name){\\n        id = j;\\n        break;\\n    }\\n}\\nlet d = [];\\nd.push({\\n    title: '配置名称',\\n    desc: \\\"解析配置名称,如道长推荐\\\",\\n    extra: {\\n        onChange: \\\"putVar('dn.jxm_name',input)\\\",\\n        titleVisible: true,\\n        defaultValue:getVar('dn.jxm_name','')||nowJx.name\\n    },\\n    col_type:'input'\\n});\\n// let options = ['选择','新增','删除','批量删除','移动'];\\nlet options = ['新增','删除','移动'];\\nlet writeMode = getVar('dn.jxm_writeMode','新增');\\nfor(let i in options){\\n    let option = options[i];\\n    let flag = writeMode===option?'👉':'';\\n    d.push({\\n        title:flag+option,\\n        // col_type:'scroll_button',\\n        col_type:'flex_button',\\n        url:$('#noLoading#').lazyRule((option)=>{\\n            putVar('dn.jxm_writeMode', option);\\n            refreshPage(true);\\n            return 'hiker://empty';\\n        },option),\\n    });\\n}\\nd.push({\\n    // col_type:'line',\\n    col_type:'blank_block'\\n});\\n//获取断插列表\\nif(!getVar(\\\"dn.jx_titles\\\")){\\n    let titleArr = [], urlArr = [];\\n    var json={title:[],codes:{}};\\n    let setFile = request('hiker://files/rules/DuanNian/MyParse.json');\\n    try {\\n        eval('json='+setFile);\\n    }catch (e) {\\n        log('Json解析发生了错误:'+e.message);\\n    }\\n    titleArr = json.title;\\n    titleArr.forEach((it) => {\\n        urlArr.push(json.codes[it]);\\n    });\\n    putVar('dn.jx_titles',JSON.stringify(titleArr));\\n}\\n\\nlet titles = JSON.parse(getVar('dn.jx_titles')||'[]');\\nlet titleDic = {\\n    bl:'哔哩哔哩',fun:'风行',le:'乐视',mg:'芒果',mi:'咪咕',pp:'PPTV',qy:'爱奇艺',sh:'搜狐',\\n    tx:'腾讯',xg:'西瓜',yk:'优酷',one:'1905',lt:'龙腾',rr:'人人迷',wd:'五毒',oth:'其他'\\n}\\nlet titleOrder = {\\n    qy:1,yk:2,tx:3,mg:4,bl:5,sh:6,xg:7,pp:8,mi:9,le:10,one:11,fun:12,lt:13,rr:14,wd:15,oth:16,\\n};\\n\\nfunction compareOd(titleOrder){\\n    return function (a, b){\\n        let x = titleOrder[a];\\n        let y = titleOrder[b];\\n        return x-y;\\n    }\\n}\\n//-----------------\\n// let jds = Object.keys(nowJx).filter(it=>it!=='name'&&it!=='oth');\\nlet flags = Object.keys(titleOrder);\\nlet jds = Object.keys(nowJx).filter(it=>it!=='name'&&flags.includes(it));\\n//log(jds);\\nfor(let k of flags){\\n    if(!jds.includes(k)){\\n        jds.push(k)\\n    }\\n}\\njds = jds.sort(compareOd(titleOrder));\\nfor(let j in jds){\\n    let jxs = nowJx[jds[j]]||[];\\n    let title = jds[j];\\n    d.push({\\n        title:titleDic[title]||title,\\n        col_type:'scroll_button',\\n        url:$('#noLoading#').lazyRule((titles,title,jxs,jxsRoute,MyJiexi,nowJx)=>{\\n            var json={title:[],codes:{}};\\n            let setFile = request('hiker://files/rules/DuanNian/MyParse.json');\\n            try {\\n                eval('json='+setFile);\\n            }catch (e) {\\n                log('Json解析发生了错误:'+e.message);\\n            }\\n            if(getVar('dn.jxm_writeMode','新增')==='新增'){\\n                let sel_title = titles.filter(it=>!jxs.includes(it));\\n                sel_title = sel_title.map((it)=>{\\n                    let flag = '‘‘Ⓤ’’';\\n                    if(typeof(json.codes[it])==='function'){\\n                        flag = '““Ⓙ””';\\n                    }else if(typeof(json.codes[it])==='undefined'){\\n                        flag = '';\\n                    }\\n                    return flag+it\\n                });\\n                return $(sel_title,2).select((MyJiexi,jxs,nowJx,title,jxsRoute)=>{\\n                    input = input.replace(/‘‘Ⓤ’’|““Ⓙ””/g,'');\\n                    let id = null;\\n                    for(let j in MyJiexi.jiexis){\\n                        if(MyJiexi.jiexis[j].name === nowJx.name){\\n                            id = j;\\n                            break;\\n                        }\\n                    }\\n                    if(!id){\\n                        return 'toast://索引错误无法保存:\\\\n'+id\\n                    }\\n                    jxs.push(input);\\n                    log(jxs);\\n                    nowJx[title] = jxs;\\n                    MyJiexi.jiexis[id] = nowJx;\\n                    putVar('dn.nowJx',JSON.stringify(nowJx));\\n                    writeFile(jxsRoute,JSON.stringify(MyJiexi));\\n                    refreshPage(true);\\n                    return 'hiker://empty'\\n                },MyJiexi,jxs,nowJx,title,jxsRoute);\\n            }else {\\n                return 'hiker://empty'\\n            }\\n        },titles,title,jxs,jxsRoute,MyJiexi,nowJx)\\n    });\\n    for(let k in jxs){\\n        d.push({\\n            title:jxs[k],\\n            col_type:'scroll_button',\\n            url:$('#noLoading#').lazyRule((titles,title,jxs,jxsRoute,MyJiexi,nowJx,njx,id,k,max)=>{\\n                switch (getVar('dn.jxm_writeMode','新增')){\\n                    case '删除':\\n                        Array.prototype.remove = function(val) {\\n                            let index = this.indexOf(val);\\n                            if (index > -1) {\\n                                this.splice(index, 1);\\n                            }\\n                        };\\n                        jxs.remove(njx);\\n                        nowJx[title] = jxs;\\n                        MyJiexi.jiexis[id] = nowJx;\\n                        putVar('dn.nowJx',JSON.stringify(nowJx));\\n                        writeFile(jxsRoute,JSON.stringify(MyJiexi));\\n                        refreshPage(true);\\n                        return 'hiker://empty'\\n                    case '移动':\\n                        return $(k,'移动到索引多少?').input((k,max,jxs,nowJx,MyJiexi,id,title,jxsRoute)=>{\\n                            function Move(arr, fromIndex, toIndex) {\\n                                var element = arr[fromIndex];\\n                                arr.splice(fromIndex, 1);\\n                                arr.splice(toIndex, 0, element);\\n                            }\\n                            if(parseInt(input)===k){\\n                                return 'toast://啥也没做'\\n                            }else if(parseInt(input)>max-1||parseInt(input)<-1){\\n                                return 'toast://你最大移动范围0-'+parseInt(max-1);\\n                            }\\n                            // let newAr = jxs.splice(k, 1); // 删掉\\n                            // jxs.unshift(newAr[0]);\\n                            Move(jxs,k,parseInt(input));\\n                            nowJx[title] = jxs;\\n                            MyJiexi.jiexis[id] = nowJx;\\n                            putVar('dn.nowJx',JSON.stringify(nowJx));\\n                            writeFile(jxsRoute,JSON.stringify(MyJiexi));\\n                            refreshPage(true);\\n                            return 'hiker://empty'\\n                        },k,max,jxs,nowJx,MyJiexi,id,title,jxsRoute)\\n                    default:\\n                        return 'toast://此元素不支持进行:'+getVar('dn.jxm_writeMode','新增')\\n                }\\n            },titles,title,jxs,jxsRoute,MyJiexi,nowJx,jxs[k],id,k,jxs.length)\\n        });\\n    }\\n    d.push({\\n        // col_type:'line',\\n        col_type:'blank_block'\\n    })\\n}\\nd.push({\\n    col_type:'line',\\n});\\nd.push({\\n    title:'保存',\\n    col_type:'text_center_1',\\n    url:$('#noLoading#').lazyRule((MyJiexi,id,jxsRoute)=>{\\n        if(getVar('dn.jxm_name','')!==MyJiexi.jiexis[id].name){\\n            ifHas = MyJiexi.jiexis.filter(it=>it.name===getVar('dn.jxm_name','')).length>0;\\n            if(ifHas){\\n                return 'toast://待修改的名称重复,不允许保存'\\n            }else{\\n                MyJiexi.jiexis[id].name =  getVar('dn.jxm_name','');\\n                writeFile(jxsRoute,JSON.stringify(MyJiexi));\\n            }\\n        }\\n        back(true);\\n        return 'toast://已保存'\\n    },MyJiexi,id,jxsRoute)\\n});\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"小白模式\",\"path\":\"smallWhite\",\"rule\":\"js:\\n    setPageTitle('道长给小白的关爱');\\nconst {color, small,api} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\nlet fileRoot = api.host+'/hikerule/zyw_data/';\\n// log(fileRoot);\\nlet d = [];\\nvar themeRoute = \\\"hiker://files/cache/MyTheme.json\\\";\\nvar themeOnline = fileRoot+'11';\\nvar oldRoute = \\\"hiker://files/cache/MyParseSet.json\\\";\\nvar oldOnline = fileRoot+'12';\\nvar newRoute = \\\"hiker://files/rules/DuanNian/MyParse.json\\\";\\nvar newOnline = fileRoot+'13';\\nvar jxsRoute = \\\"hiker://files/cache/MyJiexi.json\\\";\\nvar jxOnline = fileRoot+'14';\\nvar dmOnline = fileRoot+'30';\\nvar cjcache = 'hiker://files/cache/Parse_Dn.js';\\nvar x5cache = 'hiker://files/cache/Parse_Dn.html';\\nvar dmPath = \\\"hiker://files/cache/diaomao.txt\\\";\\nd.push({\\n    title:small('你好,小白,即使啥也不会,也可以看明白下面的字吧?'),\\n    desc:'如果还是不会,请删以永治,告辞不谢',\\n    col_type:'text_1',\\n    url:$('#noLoading#').lazyRule(()=>{\\n        return 'toast://据说你不服气,不承认自己是小白?\\\\n点我只是为了宣泄一下你的愤怒?啥也别说了,下去搞!'\\n    })\\n});\\nd.push({\\n    title:small('批量管理界面文件是什么?')+color('不知道,来一份道长的','#5FB878'),\\n    desc:'自动拉取道长的批量管理界面文件，可批量删除和导出解析',\\n    col_type:'text_1',\\n    url:$('确认吗？').confirm(()=>{\\n        let localHtml = 'hiker://files/cache/plscParse.html';\\n        writeFile(localHtml,request('https://gitcode.net/qq_32394351/dr/-/raw/master/dp/batch_delete.html'));\\n        return 'toast://拉取完毕,可返回查看批量管理功能是否正常'\\n    })\\n});\\nd.push({\\n    title:small('单项解析选择界面主题是什么?')+color('不知道,来一份道长的','#5FB878'),\\n    desc:'自动拉取道长的主题配置以及网页插件和静态页面',\\n    col_type:'text_1',\\n    url:$('确认吗?如果你不是小白，总该会提前备份自己主题的吧!\\\\n'+themeRoute).confirm((cjcache,x5cache,themeRoute,themeOnline)=>{\\n        let themeCode = fetch(themeOnline);\\n        if(!/now_theme/.test(themeCode)){\\n            log(themeCode);\\n            return 'toast://失败!与道长服务器通讯错误,估计是网络卡了'\\n        }\\n        let cjFrom = \\\"hiker://page/Parse_Dn.js?rule=MyFieldᴰⁿ\\\";\\n        let x5From = \\\"hiker://page/Parse_Dn.html?rule=MyFieldᴰⁿ\\\";\\n        try {\\n            let cjFile = JSON.parse(fetch(cjFrom)).rule;\\n            let x5File = JSON.parse(fetch(x5From)).rule;\\n            writeFile(cjcache, cjFile);\\n            writeFile(x5cache, x5File);\\n            writeFile(themeRoute, themeCode);\\n            clearVar(\\\"jxOldV\\\");\\n            clearVar(\\\"jxNewV\\\");\\n            refreshPage(false);\\n            return 'toast://主题已成功应用'\\n        }\\n        catch(e){\\n            return 'toast://主题应用失败\\\\n未期望的错误:'+e.message;\\n        }\\n    },cjcache,x5cache,themeRoute,themeOnline)\\n});\\nd.push({\\n    title:small('断插解析及默认列表是什么?')+color('不知道,来一份道长的','#5FB878'),\\n    desc:'自动拉取道长在用的两个MyParse.json文件',\\n    col_type:'text_1',\\n    url:$('确认吗?如果你不是小白，总该会提前备份自己的配置文件吧!\\\\n'+oldRoute+'\\\\n'+newRoute).confirm((oldRoute,oldOnline,newRoute,newOnline)=>{\\n        let oldCode = fetch(oldOnline);\\n        let newCode = fetch(newOnline);\\n        if(!/Parse_Dn\\\\.js/.test(oldCode)||!/Parse_Dn\\\\.js/.test(newCode)){\\n            return 'toast://失败!与道长服务器通讯错误,估计是网络卡了'\\n        }\\n        try {\\n            writeFile(oldRoute, oldCode);\\n            writeFile(newRoute, newCode);\\n            return 'toast://断插解析配置及默认列表已经配置成功'\\n        }\\n        catch(e){\\n            return 'toast://配置应用失败\\\\n未期望的错误:'+e.message;\\n        }\\n    },oldRoute,oldOnline,newRoute,newOnline)\\n});\\nd.push({\\n    title:small('断插解析自动档模式是什么?')+color('不知道,来一份道长的','#5FB878'),\\n    desc:'自动拉取道长在用的MyJiexi.json文件',\\n    col_type:'text_1',\\n    url:$('确认吗?如果你不是小白，总该会提前备份自己的自动档方案吧!\\\\n'+jxsRoute).confirm((jxsRoute,jxOnline)=>{\\n        let jxCode = fetch(jxOnline);\\n        if(!/jiexis/.test(jxCode)){\\n            return 'toast://失败!与道长服务器通讯错误,估计是网络卡了'\\n        }\\n        try {\\n            writeFile(jxsRoute, jxCode);\\n            return 'toast://断插解析配置及默认列表已经配置成功'\\n        }\\n        catch(e){\\n            return 'toast://自动档应用失败\\\\n未期望的错误:'+e.message;\\n        }\\n    },jxsRoute,jxOnline)\\n});\\nd.push({\\n    title:small('吊毛过滤文件是什么?')+color('不知道,来一份道长的','#5FB878'),\\n    desc:'自动拉取道长在用的diaomao.txt文件',\\n    col_type:'text_1',\\n    url:$('确认吗?如果你不是小白，总该会提前备份自己的吊毛过滤文件吧!\\\\n'+dmPath).confirm((dmPath,dmOnline)=>{\\n        let dmCode = fetch(dmOnline);\\n        if(!dmCode||!/mp4|m3u8/.test(dmCode)){\\n            return 'toast://失败!与道长服务器通讯错误,估计是网络卡了'\\n        }\\n        try {\\n            writeFile(dmPath, dmCode);\\n            return 'toast://吊毛过滤文件已配置成功'\\n        }\\n        catch(e){\\n            return 'toast://吊毛过滤文件应用失败\\\\n未期望的错误:'+e.message;\\n        }\\n    },dmPath,dmOnline)\\n});\\nd.push({\\n    title:small('真的啥也不会了,还懒得一个个点?')+color('不知道,来一份道长的','#5FB878'),\\n    desc:'自动拉取道长在用的上述所有文件\\\\n一键搞完直接去支持断插的小程序看视频就行啦',\\n    col_type:'text_1',\\n    url:$('修仙法力无边','确认吗?如果你不是小白，总该会提前备份自己的上述所有文件吧!\\\\n请输入道长修仙法力无边来确认执行此操作').input((cjcache,x5cache,themeRoute,oldRoute,newRoute,jxsRoute,themeOnline,oldOnline,newOnline,jxOnline,dmPath,dmOnline)=>{\\n        if(input!=='道长修仙法力无边'){\\n            return 'toast://本次取消执行'\\n        }\\n        let themeCode = fetch(themeOnline);\\n        if(!/now_theme/.test(themeCode)){\\n            log('themeCode:'+themeCode);\\n            return 'toast://拉主题失败!与道长服务器通讯错误,估计是网络卡了'\\n        }\\n        let cjFrom = \\\"hiker://page/Parse_Dn.js?rule=MyFieldᴰⁿ\\\";\\n        let x5From = \\\"hiker://page/Parse_Dn.html?rule=MyFieldᴰⁿ\\\";\\n        let cjFile = JSON.parse(fetch(cjFrom)).rule;\\n        let x5File = JSON.parse(fetch(x5From)).rule;\\n        let oldCode = fetch(oldOnline);\\n        let newCode = fetch(newOnline);\\n        let dmCode = fetch(dmOnline);\\n        if(!/Parse_Dn\\\\.js/.test(oldCode)||!/Parse_Dn\\\\.js/.test(newCode)){\\n            // log('oldCode:'+oldCode);\\n            // log('newCode:'+newCode);\\n            return 'toast://失败!与道长服务器通讯错误,估计是网络卡了'\\n        }\\n        let jxCode = fetch(jxOnline);\\n        if(!/jiexis/.test(jxCode)){\\n            // log('jxCode:'+jxCode);\\n            return 'toast://失败!与道长服务器通讯错误,估计是网络卡了'\\n        }\\n        try {\\n            writeFile(cjcache, cjFile); // 拉插件\\n            writeFile(x5cache, x5File); //拉网页文件\\n            writeFile(themeRoute, themeCode); //拉主题文件\\n            clearVar(\\\"jxOldV\\\");\\n            clearVar(\\\"jxNewV\\\");\\n            writeFile(oldRoute, oldCode); //拉断插默认选择界面的配置\\n            writeFile(newRoute, newCode); //拉断插内的解析\\n            writeFile(jxsRoute, jxCode); // 拉自动档文件\\n            if(dmCode&&/mp4|m3u8/.test(dmCode)) {//验证吊毛文件合法性\\n                writeFile(dmPath, dmCode); // 拉吊毛过滤文件\\n            }\\n            back(true);\\n            return 'toast://断插解析配置及默认列表已经配置成功'\\n        }\\n        catch(e){\\n            return 'toast://一键模式应用失败\\\\n未期望的错误:'+e.message;\\n        }\\n    },cjcache,x5cache,themeRoute,oldRoute,newRoute,jxsRoute,themeOnline,oldOnline,newOnline,jxOnline,dmPath,dmOnline)\\n});\\nlet descInfo = '主题文件:'+themeRoute+'\\\\n主界面配置:'+oldRoute+'\\\\n嫖到的解析:'+newRoute+'\\\\n自动档解析:'+jxsRoute;\\ndescInfo+='\\\\n主插件:'+cjcache+'\\\\n主配置选择界面文件:'+x5cache+'\\\\n吊毛过滤文件:'+dmPath;\\nd.push({\\n    title:'文件描述:\\\\n'+descInfo,\\n    col_type:'long_text',\\n    extra:{textSize: 13,lineVisible:false}\\n});\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"解析测试\",\"path\":\"jxTest\",\"rule\":\"js:\\n    var items = [];\\nvar json = [{\\n    title: '爱奇艺',\\n    url: 'http://www.iqiyi.com/v_2ga8zts86ys.html',\\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/09/8/110_901f2ef37af2fea25e5d9648f551ce31_con_130x130.png',\\n}, {\\n    title: '优酷',\\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/16/9/110_8ff06e0c237760cd57d2508fd98c8414_con_130x130.png',\\n    url: 'https://v.youku.com/v_show/id_XNDc0MDE1NTk1Mg==.html'\\n}, {\\n    title: '腾讯视频',\\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/15/3/106_3a0d212e17cb95e232ffe155460385cb_con_130x130.png',\\n    url: 'https://v.qq.com/x/cover/mzc00200rmpaf40/n0036l4tntc.html'\\n}, {\\n    title: 'PPTV视频',\\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/28/5/110_a455b2951227040ee62955edcfb89d72_con_130x130.png',\\n    url: 'https://v.pptv.com/show/zVn3dJXt1xV49l4.html'\\n}, {\\n    title: '芒果TV',\\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/15/6/110_1834d296aa5b5666a7d94b1e3479ae64_con_130x130.png',\\n    url: 'http://www.mgtv.com/b/349253/10424300.html'\\n},{\\n    title: '咪咕',\\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/13/1/110_0e6bdee42b08304d158d280b49452bc3_con_130x130.png',\\n    url: 'https://m.miguvideo.com/mgs/msite/prd/detail.html?cid=655838044&mgdbid=&channelId=CAAAB000902015500000000'\\n},{\\n    title: '哔哩哔哩',\\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/27/4/110_8e2e3d88c45025b380e69817d6fb53b1_con_130x130.png',\\n    url: 'https://m.bilibili.com/bangumi/play/ep428993'\\n},{\\n    title: '搜狐视频',\\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/15/9/110_532a51f8431efc377808c1ffff2da36f_con_130x130.png',\\n    url: 'https://m.tv.sohu.com/v7329441.shtml'\\n},{\\n    title: '乐视',\\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/15/8/2_35b5d4373f4bcba28f39486e4f1164d9_con_130x130.png',\\n    url: 'https://m.le.com/vplay_76954333.html?from=ajax'\\n},{\\n    title: '1905电影网',\\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/18/4/110_5f24b1052fed4f7fc73593a8ef27276d_con_130x130.png',\\n    url: 'https://vip.1905.com/m/play/1429725.shtml'\\n},{\\n    title: '风行视频',\\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/16/4/110_6f6af9f99b2629e51f0b0a33cdff1d9e_con_130x130.png',\\n    url: 'http://m.fun.tv/mplay/?mid=95719'\\n},{\\n    title: '西瓜视频',\\n    pic_url: 'https://android-artworks.25pp.com/fs08/2021/09/27/5/110_a86265882ed18c6190566e9ea25f9698_con_130x130.png',\\n    url: 'https://www.ixigua.com/6699356792905794055'\\n}];\\nvar qps = [\\n    {title:'龙腾', url:'LT-1ec3f6754f68586ed7f92c3e995cfca6',pic_url: 'https://lanmeiguojiang.com/tubiao/ke/4.png'},\\n    {title: '人人迷', url:'renrenmi-ab924e11d2d69397',pic_url:'https://lanmeiguojiang.com/tubiao/ke/6.png'},\\n    {title: '五毒', url:'wuduyun-1649431307021',pic_url: 'https://lanmeiguojiang.com/tubiao/ke/30.png'},\\n    {title: '多多', url:'https://m3u8.cache.suoyo.cc/m3u8/202203/8/aaabd92da26774c68850a023153c80f1ae6fa9be.m3u8',pic_url: 'https://lanmeiguojiang.com/tubiao/ke/49.png'},\\n    {title: '融兴', url: 'RongXingVR-4215645581932',pic_url:'https://lanmeiguojiang.com/tubiao/ke/80.png'},\\n    {title: '雪人', url: 'xueren-1646823072',pic_url:'https://lanmeiguojiang.com/tubiao/q/133.png'},\\n    {title: '旋风云', url:'xfy-529e6457953d545f',pic_url: 'https://lanmeiguojiang.com/tubiao/ke/54.png'},\\n    {title: '瑞丰资源',url: 'https://1.ruifenglb.com/play/1644914595.m3u8',pic_url: 'https://lanmeiguojiang.com/tubiao/ke/72.png'}\\n];\\nconst {color, small} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\nconst lsg=$.require(\\\"hiker://page/localStorage?rule=道长仓库Pro\\\");\\nvar timeout = parseInt(lsg.getItem('timeout','5000'));//超时\\nvar nowParse = getItem('Parse','');//getItem的操作千万不要加入循环,当前选择的解析\\nvar dx_mode = getItem('点选','单测');//点选模式\\nvar qp_test = getItem('切片','0');//显示切片\\nif(qp_test==='1'){\\n    json = qps;\\n}else if(qp_test==='2'){\\n    json = json.concat(qps);\\n}\\nitems.push({\\n    title: color('魔断解析测试','#0C0000'),\\n    desc:'单接口多类正版|单正版多接口 测试 '+'🕒'+timeout,\\n    url: $(timeout,'请输入解析超时毫秒').input(()=>{\\n        if(!parseInt(input)){\\n            return 'toast://超时设置错误，拒绝保存'\\n        }\\n        const lsg=$.require(\\\"hiker://page/localStorage?rule=道长仓库Pro\\\");\\n        lsg.setItem('timeout',input||'5000');\\n        refreshPage(false);\\n        return 'toast://已设置解析超时毫秒:'+input||'5000';\\n    }),\\n    col_type: 'text_center_1',\\n    extra:{\\n        lineVisible:false\\n    }\\n});\\nitems.push({\\n    title:'使用说明',\\n    col_type:'text_center_1',\\n    url:$('hiker://empty#noRecordHistory##noHistory#').rule((color)=>{\\n        let d=[];\\n        d.push({\\n            title:color('相信自己，你不需要说明','grey'),\\n            col_type:'text_1',\\n            url:'hiker://empty',\\n            extra:{\\n                lineVisible:false\\n            }\\n        });\\n        let note='想我写教程？没门！';\\n        d.push({\\n            title:note,\\n            col_type:'rich_text'\\n        });\\n        setResult(d);\\n    },color),\\n    extra:{\\n        lineVisible:true\\n    }\\n});\\nitems.push({\\n    col_type:\\\"blank_block\\\",\\n});\\nitems.push({\\n    title:color('🏠️主程序','#ff0000'),\\n    url: \\\"hiker://home@MyFieldᴰⁿ\\\",\\n    col_type: 'scroll_button'\\n});\\nitems.push({\\n    title:color('🎨线路配置','#fa8c35'),\\n    url: \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=设置#noHistory#\\\",\\n    col_type: 'scroll_button'\\n});\\nitems.push({\\n    title:color('🎯解析管理','#3eede7'),\\n    url: \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=编辑#noHistory#\\\",\\n    col_type: 'scroll_button'\\n});\\nitems.push({\\n    title:color('☢️批量删除','#801dae'),\\n    url: getPath('hiker://files/cache/plscParse.html'),\\n    col_type: 'scroll_button'\\n});\\nitems.push({\\n    title:color('🔠备胎管理','#0eb83a'),\\n    url: \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=解析#noRecordHistory#\\\",\\n    col_type: 'scroll_button'\\n});\\nlet qp_title = '💿切片测试';\\nif(qp_test==='1'){\\n    qp_title =  color(qp_title,'#6bc8d0')\\n}else if(qp_test==='2'){\\n    qp_title =  color(qp_title,'#6ba6d0')\\n}\\nitems.push({\\n    title:qp_title,\\n    url: $('#noLoading#').lazyRule((color)=>{\\n        let modes = ['0','1','2'];\\n        let qp_test = getItem('切片','0');\\n        let idex = modes.indexOf(qp_test);\\n        let nextIdex = idex < modes.length -1?idex+1:0;\\n        qp_test=modes[nextIdex];\\n        setItem('切片',qp_test);\\n        // updateItem('qp_test',{\\n        //     title:qp_test==='1'?color('💿切片测试','#6bc8d0'):'💿切片测试'\\n        // });\\n        refreshPage(false);\\n        return 'hiker://empty'\\n    },color),\\n    col_type: 'scroll_button',\\n    extra:{\\n        id:'qp_test'\\n    }\\n});\\nitems.push({\\n    title:'⚙点选模式:'+dx_mode,\\n    col_type:'text_2',\\n    url:$('#noLoading#').lazyRule(()=>{\\n        let dx_mode = getItem('点选','单测');\\n        dx_mode=(dx_mode==='单测'?'多测':'单测');\\n        setItem('点选',dx_mode);\\n        updateItem('dx_mode',{\\n            title:'⚙点选模式:'+dx_mode\\n        });\\n        return 'hiker://empty'\\n    }),\\n    extra:{\\n        id:'dx_mode'\\n    }\\n});\\nlet dx_test = '❤️解析多选测试';\\nitems.push({\\n    title:dx_test,\\n    col_type:'text_2',\\n    url:$('hiker://empty#noRecordHistory##noHistory#').rule((dx_test,color)=>{\\n        setPageTitle(dx_test);\\n        addListener('onClose', $.toString(() => {\\n            refreshPage(false);//刷新魔断主页面\\n        }));\\n        d=[];\\n        $.require(\\\"hiker://page/jxItem?rule=MyFieldᴰⁿ\\\").jxList();\\n        jxs=d.filter(it=>it.col_type==='text_2').map(it=>pdfh(it.title,'font,-1&&Text'));\\n        let data = storage0.getMyVar('jx_selected')||[];\\n        let dx_filter = getItem('dx_filter','全部');\\n        if(dx_filter === '已选'){\\n            jxs = jxs.filter(it=>data.includes(it));\\n        }else if(dx_filter=== '未选'){\\n            jxs = jxs.filter(it=>!data.includes(it));\\n        }\\n        d=jxs.map((it)=>{\\n            return {\\n                title:(Array.isArray(data)&&data.includes(it))?color(it,'#12b668'):it,\\n                // url:'toast://功能开发中',\\n                url:$('#noLoading#').lazyRule((it,color)=>{\\n                    let data = storage0.getMyVar('jx_selected');\\n                    if(Array.isArray(data)){\\n                        if(data.includes(it)){\\n                            log('包含:'+it);\\n                            data.splice(data.indexOf(it),1);\\n                        }else{\\n                            data.push(it)\\n                        }\\n                        storage0.putMyVar('jx_selected', data)\\n                    }else{\\n                        storage0.putMyVar('jx_selected', [it])\\n                    }\\n                    if(storage0.getMyVar('jx_selected').includes(it)){\\n                        updateItem(it,{\\n                            title:color(it,'#12b668')\\n                        })\\n                    }else{\\n                        updateItem(it,{\\n                            title:it\\n                        })\\n                    }\\n                    return 'hiker://empty'\\n                },it,color),\\n                col_type:'text_3',\\n                extra:{\\n                    id:it\\n                }\\n            }\\n        });\\n        let op=[];\\n        op.push({\\n            title:'全选',\\n            url:$('#noLoading#').lazyRule((jxs,color)=>{\\n                storage0.putMyVar('jx_selected', jxs);\\n                jxs.forEach(it=>{\\n                    updateItem({title: color(it,'#12b668'), extra: {id: it}});\\n                });\\n                return 'hiker://empty'\\n            },jxs,color),\\n            col_type:'scroll_button'\\n        });\\n        op.push({\\n            title:'全不选',\\n            url:$('#noLoading#').lazyRule((jxs)=>{\\n                storage0.putMyVar('jx_selected', []);\\n                jxs.forEach(it=>{\\n                    updateItem({title: it, extra: {id: it}});\\n                });\\n                return 'hiker://empty'\\n            },jxs),\\n            col_type:'scroll_button'\\n        });\\n        op.push({\\n            title:'反选',\\n            url:$('#noLoading#').lazyRule((jxs,color)=>{\\n                let oldSel = storage0.getMyVar('jx_selected', []);\\n                function getDifferentData(arrA, arrB) {\\n                    return arrA.concat(arrB).filter(function (v, i, arr) {\\n                        return arr.indexOf(v) === arr.lastIndexOf(v);\\n                    });\\n                }\\n                let newSel = getDifferentData(jxs,oldSel);\\n                storage0.putMyVar('jx_selected', newSel);\\n                oldSel.forEach(it=>{\\n                    updateItem({title: it, extra: {id: it}});\\n                });\\n                newSel.forEach(it=>{\\n                    updateItem({title: color(it,'#12b668'), extra: {id: it}});\\n                });\\n                return 'hiker://empty'\\n            },jxs,color),\\n            col_type:'scroll_button'\\n        });\\n        op.push({\\n            title:'删除',\\n            url:$('#noLoading#').lazyRule(()=>{\\n                let sel = storage0.getMyVar('jx_selected', []);\\n                if(sel.length < 1){\\n                    return 'toast://啥都没选，删除个鸡毛~'\\n                }\\n                return $('确认删除已选择的:'+sel[0]+'等'+sel.length+'条解析?').confirm((sel)=>{\\n                    var parseRoute = getVar('parseRoute');\\n                    eval('var json =' + fetch(parseRoute));\\n                    for(let name in sel){\\n                        if (json.codes.hasOwnProperty(name)) {\\n                            delete json.codes[name];\\n                        }\\n                    }\\n                    json.title = json.title.filter(it=>!sel.includes(it)); // 筛选没有被删除的标题\\n                    writeFile(parseRoute, $.stringify(json));\\n                    storage0.putMyVar('jx_selected', []);//删除完了清空选中项目\\n                    refreshPage(false);\\n                    return \\\"toast://已将〖\\\" + sel[0] + \\\"〗等\\\"+sel.length+\\\"条解析删除\\\";\\n                },sel)\\n            }),\\n            col_type:'scroll_button'\\n        });\\n        op.push({\\n            title:'操作|筛选 '+color(jxs.length,'#ff7000'),\\n            url:'toast://前面按钮是操作，后面按钮是筛选',\\n            col_type:'scroll_button'\\n        });\\n        op.push({\\n            title:dx_filter==='全部'?color('全部','#12b668'):'全部',\\n            url:$('#noLoading#').lazyRule(()=>{\\n                setItem('dx_filter','全部');\\n                refreshPage(false);\\n                return 'hiker://empty'\\n            }),\\n            col_type:'scroll_button'\\n        });\\n        op.push({\\n            title:dx_filter==='已选'?color('已选','#12b668'):'已选',\\n            url:$('#noLoading#').lazyRule(()=>{\\n                setItem('dx_filter','已选');\\n                refreshPage(false);\\n                return 'hiker://empty'\\n            }),\\n            col_type:'scroll_button'\\n        });\\n        op.push({\\n            title:dx_filter==='未选'?color('未选','#12b668'):'未选',\\n            url:$('#noLoading#').lazyRule(()=>{\\n                setItem('dx_filter','未选');\\n                refreshPage(false);\\n                return 'hiker://empty'\\n            }),\\n            col_type:'scroll_button'\\n        });\\n        d=op.concat(d);\\n        setResult(d);\\n    },dx_test,color)\\n});\\nfunction sortByKey(array, key, order) {//对象数组按某个键值排序\\n    return array.sort(function(a, b) {\\n        var x = parseInt(a[key].match(/(\\\\d+)/)[1]);//修复大于10出问题\\n        var y = parseInt(b[key].match(/(\\\\d+)/)[1]);\\n        if (order) {\\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0))\\n        } else {\\n            return ((x < y) ? ((x > y) ? 1 : 0) : -1)\\n        }\\n    })\\n}\\nitems.push({\\n    title: '🛠一键测试已选接口：'+nowParse,\\n    //url: 'toast://这是接口',\\n    url:$().lazyRule((json,nowParse,timeout,sortByKey)=>{\\n        if(!getItem('Parse','')){\\n            return 'toast://避免资源浪费，请先在下方选一个接口再进行测试'\\n        }\\n        var count = json.length; //设置任务数量\\n        log('魔断开启多任务解析,任务数量:'+count);\\n        var task = function(obj) {\\n            eval('var config_dp =' + fetch(getVar('oldConfig')));\\n            eval(fetch(config_dp.cj));\\n            return aytmParse(obj.vipUrl,obj.name,obj.timeout);\\n        };\\n        var parseRet = []; //解析结果列表\\n        let tasks = json.map((it,idex)=>{\\n            return {\\n                func: task,\\n                param: {\\n                    //name:it.title,\\n                    name:nowParse,\\n                    type:it.title,\\n                    // rule:it.rule,\\n                    vipUrl: it.url,\\n                    timeout: timeout\\n                },\\n                id: \\\"task\\\"+idex\\n            }\\n        });\\n        showLoading(\\\"魔断并发解析中，剩余待测:\\\"+count);\\n        be(tasks,{\\n            func: function(obj, id, error,ret) {\\n                log(\\\"监听到任务\\\" + id+'已结束,error:'+error+',ret:'+ret);\\n                ret = ret||'';\\n                error=error||'';\\n                parseRet.push({\\n                    task:id,\\n                    ret:ret,\\n                    error:error,\\n                    name:tasks.filter(it=>it.id===id)[0].param.type\\n                });\\n                count -= 1; //完成了任务，任务数量-1\\n                //log(obj);\\n                if (count > 0) {\\n                    showLoading(\\\"魔断并发解析中，剩余待测:\\\" + count)\\n                } else {\\n                    hideLoading();\\n                }\\n            },\\n            param: {//传到监听函数的obj参数里\\n                hi: \\\"ccc\\\",\\n            }\\n        });//执行多任务\\n        //log(\\\"多任务执行结果数:\\\"+parseRet.length);\\n        parseRet=sortByKey(parseRet,'task',true);//升序排列\\n        // log(parseRet.map(it=>it.task));\\n        return $('hiker://empty#noRecordHistory##noHistory#').rule((parseRet)=>{\\n            setPageTitle(getItem('Parse')+'解析报告');\\n            const {isVideo} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\\n            const {color, small} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n            let d=[];\\n            let show_mode = getItem('show_mode','详细');\\n            let col_type = show_mode==='详细'?'text_1':'text_3';\\n            d.push({\\n                title:'显示模式:'+color(show_mode,'#fa8c35'),\\n                col_type:'scroll_button',\\n                url:$('#noLoading#').lazyRule((color,cnt)=>{\\n                    let show_mode = getItem('show_mode','详细');\\n                    show_mode = show_mode==='详细'?'精简':'详细';\\n                    setItem('show_mode',show_mode);\\n                    updateItem('show_mode',{\\n                        title:'显示模式:'+color(show_mode,'#fa8c35')\\n                    });\\n                    let col_type = show_mode==='详细'?'text_1':'text_3';\\n                    for(let i=0;i<cnt;i++){\\n                        updateItem('show_ret_'+i,{\\n                            col_type:col_type\\n                        });\\n                    }\\n                    return 'hiker://empty'\\n                },color,parseRet.length),\\n                extra:{\\n                    id:'show_mode'\\n                }\\n            });\\n            parseRet.forEach((it,idx)=>{\\n                let title=it.name;\\n                if(it.ret&&!it.ret.includes('undefined')&&(/#isVideo=true#/.test(it.ret)||isVideo(it.ret))){\\n                    title=color(title,'#12b668')\\n                }\\n                let desc=(it.ret||it.error).substr(0,60);\\n                d.push({\\n                    title:title,\\n                    desc:small(desc),\\n                    col_type:col_type,\\n                    url:it.ret,\\n                    extra:{\\n                        ret:it.ret||it.error,\\n                        id:'show_ret_'+idx\\n                    }\\n                });\\n            });\\n            setResult(d);\\n        },parseRet)\\n    },json,nowParse,timeout,sortByKey),\\n    col_type: 'text_center_1',\\n    extra:{\\n        lineVisible:false\\n    }\\n});\\n/*\\nvar parseRoute = 'hiker://files/rules/DuanNian/MyParse.json';\\nvar MyParseS = {};\\neval('var parseFile =' + fetch(parseRoute));\\nMyParseS = Object.keys(parseFile.codes);\\nMyParseS.reverse();\\n*/\\nvar d=[];\\n$.require(\\\"hiker://page/jxItem?rule=MyFieldᴰⁿ\\\").jxList();\\nd=d.filter(it=>it.col_type==='text_2').map(it=>pdfh(it.title,'font,-1&&Text'));\\nMyParseS=d;\\n\\nfor (let i in MyParseS) {\\n    if (!/defaultParse/.test(MyParseS[i])) {\\n        let title =MyParseS[i];\\n        items.push({\\n            title: nowParse === title?color(title,'#12b668'):title,\\n            url:$('#noLoading#').lazyRule((ipt)=>{\\n                setItem('Parse',ipt);\\n                refreshPage();\\n                return 'toast://已选接口'+ipt;\\n            },title) ,\\n            col_type: 'scroll_button'\\n        });\\n    }\\n}\\nlet tag='';\\nfor (let i in json) {\\n    let title = json[i].title;\\n    let zurl=json[i].url;\\n    let zpic = json[i].pic_url;\\n    if(getMyVar('zdy') === zurl){\\n        tag=title;\\n        title='⛳'+title;\\n    }\\n    items.push({\\n        title:title,\\n        url: $('#noLoading#').lazyRule((zurl,nowParse,timeout,vipObj) => {\\n            if(getMyVar('zdy')!==zurl){\\n                putMyVar('zdy', zurl);\\n                refreshPage(false);\\n            }\\n            var dx_mode = getItem('点选','单测');//点选模式\\n            if(dx_mode==='单测'){\\n                showLoading('魔断动态解析中,请稍等...');\\n                eval('var config_dp =' + fetch(getVar('oldConfig')));\\n                eval(fetch(config_dp.cj));\\n                return aytmParse(zurl,nowParse,timeout);\\n            }else{\\n                let data = storage0.getMyVar('jx_selected')||[];\\n                if(data.length>32){\\n                    return $('你所选择待测试的解析数共计:'+data.length+'个，超出了推荐最大数32,性能可能极差,是否继续?').confirm((data,vipObj,timeout)=>{\\n                        const {test_report} = $.require('hiker://page/test_report');\\n                        return test_report(data,vipObj,timeout)\\n                    },data,vipObj,timeout)\\n                }else{\\n                    const {test_report} = $.require('hiker://page/test_report');\\n                    return test_report(data,vipObj,timeout)\\n                }\\n            }\\n        },zurl,nowParse,timeout,json[i]),\\n        pic_url:zpic,\\n        col_type: 'icon_4'\\n    });\\n}\\naddListener('onClose', $.toString(() => {\\n    clearVar(\\\"zdy\\\");\\n}));\\nitems.push({\\n    title:'测试'+tag,\\n    col_type: 'input',\\n    url:$.toString((nowParse,timeout)=>{\\n        eval(\\\"var config =\\\" + fetch(\\\"hiker://files/cache/MyParseSet.json\\\"));\\n        eval(fetch(config.cj));\\n        // eval(fetch('hiker://files/cache/Parse_Dn.js', {}));\\n        return aytmParse(getMyVar('zdy'), nowParse,timeout);\\n    },nowParse,timeout),\\n    desc: '请输解析地址',\\n    extra: {\\n        titleVisible: true,\\n        defaultValue: getMyVar('zdy', json[0].url) || \\\"\\\",\\n        onChange: 'putMyVar(\\\"zdy\\\",input)',\\n        textSize: 13,\\n        type: \\\"textarea\\\",\\n        height: 2\\n    }\\n});\\nsetResult(items);\"},{\"name\":\"解析报告\",\"path\":\"test_report\",\"rule\":\"function sortByKey(array, key, order) {//对象数组按某个键值排序\\n    return array.sort(function(a, b) {\\n        var x = parseInt(a[key].match(/(\\\\d+)/)[1]);//修复大于10出问题\\n        var y = parseInt(b[key].match(/(\\\\d+)/)[1]);\\n        if (order) {\\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0))\\n        } else {\\n            return ((x < y) ? ((x > y) ? 1 : 0) : -1)\\n        }\\n    })\\n}\\nfunction test_report(jxs,vipObj,timeout){//单正版多解析测试报告\\n    jxs = jxs||[];//解析标题列表\\n    let vipUrl = vipObj.url;\\n    let vipName = vipObj.title;\\n    if(jxs.length<1){\\n    return 'toast://解析列表里无解析，测个鸡毛'\\n    }\\n    var count = jxs.length; //设置任务数量\\n    log('魔断开启多任务解析,任务数量:'+count);\\n    var task = function(obj) {\\n        eval('var config_dp =' + fetch(getVar('oldConfig')));\\n        eval(fetch(config_dp.cj));\\n        return aytmParse(vipUrl,obj.name,timeout);\\n    };\\n    var parseRet = []; //解析结果列表\\n    let tasks = jxs.map((it,idex)=>{\\n        return {\\n            func: task,\\n            param: {\\n                name:it,\\n            },\\n            id: \\\"task\\\"+idex\\n        }\\n    });\\n    showLoading(\\\"魔断并发解析中，剩余待测:\\\"+count);\\n    be(tasks,{\\n        func: function(obj, id, error,ret) {\\n            log(\\\"监听到任务\\\" + id+'已结束,error:'+error+',ret:'+ret);\\n            ret = ret||'';\\n            error=error||'';\\n            parseRet.push({\\n                task:id,\\n                ret:ret,\\n                error:error,\\n                name:tasks.filter(it=>it.id===id)[0].param.name\\n            });\\n            count -= 1; //完成了任务，任务数量-1\\n            //log(obj);\\n            if (count > 0) {\\n                showLoading(\\\"魔断并发解析中，剩余待测:\\\" + count)\\n            } else {\\n                hideLoading();\\n            }\\n        },\\n        param: {//传到监听函数的obj参数里\\n            hi: \\\"ccc\\\",\\n        }\\n    });//执行多任务\\n    //log(\\\"多任务执行结果数:\\\"+parseRet.length);\\n    parseRet=sortByKey(parseRet,'task',true);//升序排列\\n    // log(parseRet.map(it=>it.task));\\n    return $('hiker://empty#noRecordHistory##noHistory#').rule((vipName,parseRet)=> {\\n        setPageTitle(vipName + '解析报告');\\n        const {isVideo} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\\n        const {color, small} = $.require(\\\"hiker://page/utiliy?rule=道长仓库Pro\\\");\\n        let d = [];\\n        let show_mode = getItem('show_mode', '详细');\\n        let col_type = show_mode === '详细' ? 'text_1' : 'text_3';\\n        d.push({\\n            title: '显示模式:' + color(show_mode, '#fa8c35'),\\n            col_type: 'scroll_button',\\n            url: $('#noLoading#').lazyRule((color, cnt) => {\\n                let show_mode = getItem('show_mode', '详细');\\n                show_mode = show_mode === '详细' ? '精简' : '详细';\\n                setItem('show_mode', show_mode);\\n                updateItem('show_mode', {\\n                    title: '显示模式:' + color(show_mode, '#fa8c35')\\n                });\\n                let col_type = show_mode === '详细' ? 'text_1' : 'text_3';\\n                for (let i = 0; i < cnt; i++) {\\n                    updateItem('show_ret_' + i, {\\n                        col_type: col_type\\n                    });\\n                }\\n                return 'hiker://empty'\\n            }, color, parseRet.length),\\n            extra: {\\n                id: 'show_mode'\\n            }\\n        });\\n        parseRet.forEach((it, idx) => {\\n            let title = it.name;\\n            if (it.ret && !it.ret.includes('undefined') && (/#isVideo=true#/.test(it.ret) || isVideo(it.ret))) {\\n                title = color(title, '#12b668')\\n            }\\n            let desc = (it.ret || it.error).substr(0, 60);\\n            d.push({\\n                title: title,\\n                desc: small(desc),\\n                col_type: col_type,\\n                url: it.ret,\\n                extra: {\\n                    ret: it.ret || it.error,\\n                    id: 'show_ret_' + idx\\n                }\\n            });\\n        });\\n        setResult(d);\\n    },vipName,parseRet)\\n}\\n\\n$.exports.sortByKey=sortByKey;\\n$.exports.test_report=test_report;\"}]","proxy":"","icon":"https://lanmeiguojiang.com/tubiao/movie/4.svg"}
{"last_chapter_rule":"\n\n\n","pageList":[{"col_type":"movie_3","name":"优酷二级","path":"youku","rule":"js:\n// 数据定位---\nvar d = [];\nMY_URL = MY_URL.split(\"#\")[0];\nhtml = request(MY_URL);\ntry {\n    // 重新定位了\n    影片信息 = JSON.parse(html.match(/\"播放页简介组件\",\"dataNode\":\\[{[\\S\\s]+showImg[\\S\\s]+desc[\\S\\s]{0,1000}(?=,\"id\")/)[0].replace('\"播放页简介组件\",\"dataNode\":[{\"data\":', ''));\n} catch (e) {\n    try {\n        影片信息 = JSON.parse(html.match(/\"data\":[\\S\\s]{0,50}scorePrefix[\\S\\s]{0,30}area[\\S\\s]{0,100}img[\\S\\s]{0,300}subTitles[\\S\\s]+introTitle[\\S\\s]{0,200}desc[\\S\\s]{0,800}(?=,\"id\")/)[0].replace('\"data\":', ''));\n    } catch (e) {\n        try {\n            影片信息 = JSON.parse(html.match(/播放页简介组件\",\"dataNode\":\\[{\"data\":[\\S\\s]+(?=,\"id\":[0-9]{0,20},\"type\":[0-9]{0,20}},{\"data\":{\"title\":[\\S\\s]{0,200},\"isAliStar)/)[0].replace('播放页简介组件\",\"dataNode\":[{\"data\":', ''));\n        } catch (e) {\n            影片信息 = '';\n        }\n    }\n}\n// 影片名称 = pdfh(html, 'head&&title&&Text');综艺的话标题不等于影片名称\n影片名称 = pdfh(html, '.module-name&&Text');\nsetPageTitle(影片名称)\nif (影片信息) {\n    剧集ID = 影片信息.showId;\n    简介 = 影片信息.desc;\n    封面 = 影片信息.img.replace('\\u002F', '/') + \"@Referer=\";\n    // 动态设置二级收藏图片（网页拦截重定向后需要自行设置）\n    setPagePicUrl(封面);\n    // 有些剧集或者说电影的更新状态或者是评分数据或者说动漫的类型是空甚至根本没有所以单独获取并做异常处理\n    try {\n        类型 = 影片信息.mark.data.text;\n    } catch (e) {\n        类型 = '';\n    }\n    简述 = 影片信息.subTitles[0].subtitle;\n    状态 = 影片信息.subTitles[1].subtitle;\n    if (状态 == undefined) {\n        状态 = '完结'\n    }\n    标签 = 影片信息.showGenre;\n    if (标签 == undefined) {\n        标签 = '';\n    }\n} else {\n    // 针对筐出未来电影赏析而写的，事实上教育栏目最后多数也是走这里\n    try {\n        影片地图 = JSON.parse(html.match(/\"videoMap\":[\\S\\s]+(?=,\"pushInfo\")/)[0].replace('\"videoMap\":', ''));\n        影片名称 = 影片地图.showSubtitle;\n        setPageTitle(影片名称);\n        // try没获取到这里记得重新获取\n        剧集ID = 影片地图.showId;\n        简介 = 影片地图.showName;\n        封面 = 影片地图.videoImg.replace('\\u002F', '/') + \"@Referer=\";\n        setPagePicUrl(封面);\n        类型 = 影片地图.videoCategory;\n        状态 = '共' + 影片地图.episodeLast + '集\\n' + 影片地图.showReleaseTime;\n        简述 = '';\n        标签 = '';\n    } catch (e) {\n        简介 = '没有简介，大概是一些短视频，科技、生活、娱乐分栏~';\n        封面 = 'https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg.zcool.cn%2Fcommunity%2F010097613ad72c11013eaf7098e28a.jpg%402o.jpg&refer=http%3A%2F%2Fimg.zcool.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1661226719&t=75dab3a3ff2d817e6f388f89505ea2e4@Referer=';\n        类型 = '';\n        状态 = '';\n        简述 = '';\n        标签 = '';\n    }\n}\n// 评分不一定有,处理一下\ntry {\n    评分 = '';\n    if (pdfh(html, '.brief-score&&span,-4&&Text').match(/分/)) {\n        评分 = pdfh(html, '.brief-score&&span,-4&&Text');\n    }\n} catch (e) {\n    评分 = ''\n}\nif (类型 == '') {\n    短讯 = 简述 + '-' + 评分 + '-' + 状态 + '\\n' + 标签;\n} else {\n    短讯 = \"⭐\" + 类型 + \"⭐ \" + 简述 + '-' + 评分 + '-' + 状态 + '\\n' + 标签;\n}\n// 导演、剧集图片、url等关键信息——正则匹配大法---------------------------------------\n演职人员信息 = html.match(/\"img\":[\\S\\s]{0,120}\"title\":[\\S\\s]{0,15}isAliStar\"[\\S\\s]{0,120}(?=,\"action)/g);\n// 前置参数和预处理---\nvar lazy = $('').lazyRule(() => {\n    eval(fetch('hiker://files/cache/Parse_Dn.js', {}));\n    return aytmParse(input)\n});\nvar Color = \"#19B89D\";\nvar 每页集数 = 30;\nvar 搜索模式 = '分组';\nvar 调用名称 = '简影';\nputMyVar('折叠', '关');\nputMyVar('日历', '关');\nputMyVar('lazy', lazy);\n// 清除变量\naddListener('onClose', $.toString(() => {\n    clearMyVar('分集起');\n    clearMyVar('分集终');\n    clearMyVar('lazy');\n    clearMyVar('剧集列表');\n}))\n// 设置动态最新章节\nsetLastChapterRule('js:' + $.toString(() => {\n    eval(JSON.parse(request('hiker://page/getUpdate?rule=优酷.cy')).rule);\n}));\n// 页面内容正文---\n// 基本功能栏\nfunction 基本功能栏() {\n    // 基本信息模块\n    d.push({\n        title: 短讯,\n        desc: 简介.substring(0, 45) + '‘‘’’…<font color=\"#1C1C1C\">详情</font>',\n        img: 封面,\n        url: $().rule((简介) => {\n            res = {};\n            var d = [];\n            d.push({\n                title: '影片简介：' + '\\n\\t\\t\\t\\t\\t\\t\\t' + 简介,\n                col_type: 'long_text'\n            });\n            res.data = d;\n            setHomeResult(res);\n        }, 简介),\n        col_type: 'movie_1_vertical_pic_blur',\n        extra: {\n            longClick: [{\n                title: '预告、花絮开关', js: $.toString(() => {\n                    if (getItem('previewSwitch', 'fold') == 'fold') {\n                        setItem('previewSwitch', 'open');\n                        refreshPage(true);\n                        return \"toast://预告已经切换为展示~\";\n                    } else {\n                        setItem('previewSwitch', 'fold');\n                        refreshPage(true);\n                        return \"toast://预告不再展示~\";\n                    }\n                })\n            },{\n                title: 'dm盒子', js: $.toString(() => {\n                    return 'hiker://page/setting#noHistory#?rule=dm盒子';\n                })\n            }]\n        }\n    });\n    // 追剧日历模块\n    d.push({\n        title: '‘‘’’<small><font color=\"#098AC1\">📅追剧日历</font></small>',\n        url: $('#noLoading#').lazyRule((短讯, 类型标识, 剧集列表, 演职人员信息, 追剧日历) => {\n            if (短讯.match(/预告/)) {\n                return \"toast://当前是预告状态，暂无更新计划，敬请期待！\"\n            } else if (短讯.match(/电影/)) {\n                return \"toast://电影你也要追啊！\"\n            } else {\n                if (getMyVar('日历', '关') == '开') {\n                    // 太苦逼了~因为海阔自身的bug导致不能直接批量删除（会导致失焦让选集栏折叠消失...）——只能采取循环删除的方式~\n                    deleteItem('追剧日历')\n                    deleteItem('追剧日历')\n                    putMyVar('日历', '关');\n                } else {\n                    // 因为综艺、纪录片、文化相关等节目和普通剧集的集数排序是倒过来的\n                    if (类型标识 == 3 || 类型标识 == 9 || 类型标识 == 178) {\n                        data1 = JSON.parse(request('https://openapi.youku.com/v2/videos/show.json?client_id=53e6cc67237fc59a&package=com.huawei.hwvplayer.youku&ext=show&video_id=' + 剧集列表[剧集列表.length - 1].videoId));\n                        data2 = JSON.parse(request('https://openapi.youku.com/v2/videos/show.json?client_id=53e6cc67237fc59a&package=com.huawei.hwvplayer.youku&ext=show&video_id=' + 剧集列表[0].videoId));\n                    } else {\n                        data1 = JSON.parse(request('https://openapi.youku.com/v2/videos/show.json?client_id=53e6cc67237fc59a&package=com.huawei.hwvplayer.youku&ext=show&video_id=' + 剧集列表[0].videoId));\n                        data2 = JSON.parse(request('https://openapi.youku.com/v2/videos/show.json?client_id=53e6cc67237fc59a&package=com.huawei.hwvplayer.youku&ext=show&video_id=' + 剧集列表[剧集列表.length - 1].videoId));\n                    }\n                    上映时间 = data1.published;\n                    最后更新 = data2.published + '\\n' + data2.show.type + '\\t' + data2.title\n                    if (演职人员信息) {\n                        addItemAfter('演职人员',\n                            [{\n                                title: 追剧日历,\n                                col_type: \"rich_text\",\n                                extra: {\n                                    id: '追剧日历'\n                                }\n                            }, {\n                                title: \"更新状态\",\n                                col_type: \"text_1\",\n                                desc: '上映时间：' + 上映时间 + '\\n最后更新：' + 最后更新,\n                                extra: {\n                                    id: '追剧日历'\n                                }\n                            }]\n                        );\n                    } else {\n                        addItemAfter('豆瓣影讯',\n                            [{\n                                title: 追剧日历,\n                                col_type: \"rich_text\",\n                                extra: {\n                                    id: '追剧日历'\n                                }\n                            }, {\n                                title: \"更新状态\",\n                                col_type: \"text_1\",\n                                desc: '上映时间：' + 上映时间 + '\\n最后更新：' + 最后更新,\n                                extra: {\n                                    id: '追剧日历'\n                                }\n                            }]\n                        );\n                    }\n                    putMyVar('日历', '开');\n                }\n                return 'toast://已切换日历为:' + getMyVar('日历', '开')\n            }\n        }, 短讯, 类型标识, 剧集列表, 演职人员信息, 追剧日历),\n        col_type: 'text_3'\n    });\n    // 豆瓣影讯模块\n    d.push({\n        title: '‘‘’’<small><font><font color=\"#098AC1\">🍃豆瓣影讯</font>' + '</small>',\n        url: 'hiker://search?s=' + 影片名称 + '&rule=青豆',\n        col_type: 'text_3',\n        extra: {\n            id: '豆瓣影讯'\n        }\n    });\n    // 演职人员模块\n    if (演职人员信息) {\n        d.push({\n            title: '‘‘’’<small><font color=\"#098AC1\">⬇️演职人员</font></small>',\n            url: $('#noLoading#').lazyRule((演职人员信息) => {\n                if (getMyVar('折叠', '关') == '开') {\n                    for (var i = 0; i < 演职人员信息.length; i++) {\n                        deleteItem('演职人员展示');\n                    }\n                    putMyVar('折叠', '关');\n                } else {\n                    temArr = [];\n                    for (var i = 0; i < 演职人员信息.length; i++) {\n                        dataJson = JSON.parse('{' + 演职人员信息[i] + '}');\n                        temArr.push({\n                            title: dataJson.title + '\\t' + dataJson.subtitle,\n                            img: dataJson.img.replace('\\u002F', '/') + \"@Referer=\",\n                            col_type: 'icon_2_round',\n                            url: 'hiker://search?s=' + dataJson.title + '&rule=青豆',\n                            extra: {\n                                id: '演职人员展示'\n                            }\n                        });\n\n                    }\n                    addItemAfter('演职人员', temArr);\n                    putMyVar('折叠', '开');\n                }\n                return 'toast://已切换折叠为:' + getMyVar('折叠', '开')\n            }, 演职人员信息),\n            col_type: 'text_3',\n            extra: {\n                id: '演职人员'\n            }\n        })\n    }\n    // 选插模块——局部刷新版\n    来源 = 'yk';\n    putMyVar('简插', $.toString(() => {\n        let titleArr = []\n        setFile = readFile('hiker://files/rules/DuanNian/MyParse.json');\n        try {\n            eval('json=' + setFile);\n        } catch (e) {\n            log('Json解析发生了错误:' + e.message);\n        }\n        titleArr = json.title;\n        let barry1 = ['✍️辅助'];\n        let barry2 = ['📦️魔断'];\n        let barry3 = ['🔍搜索'];\n        titleArr = barry3.concat(titleArr);\n        titleArr = barry2.concat(titleArr);\n        titleArr = barry1.concat(titleArr);\n        eval('op=json.settings.' + 来源);\n        titleArr = titleArr.map((it) => {\n            return it === op ? '👉' + it : it;\n        });\n        putMyVar('解析数组', titleArr);\n        putMyVar('setFile', setFile);\n    }))\n    eval(getMyVar('简插'));\n    d.push({\n        title: '就绪解析：🔘<font color=\"' + Color + '\">' + op + '</font>\\t\\t\\t\\t页码：<font color=\"' + Color + '\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\n        url: $('#noLoading#').lazyRule((json, 来源, Color, op, 影片名称, 搜索模式, 调用名称) => {\n            eval(getMyVar('简插'));\n            return $(eval(getMyVar('解析数组')), 3).select((json, 来源, Color, op, 影片名称, 搜索模式, 调用名称) => {\n                setFile = getMyVar('setFile');\n                input = input.replace(/👉/g, '');\n                if (input === '✍️辅助') {\n                    return $().rule(() => {\n                        eval(JSON.parse(request('hiker://page/home?rule=配置助手')).rule);\n                    })\n                } else if (input === '📦️魔断') {\n                    return \"hiker://page/Route?rule=MyFieldᴰⁿ&type=编辑#noHistory#\";\n                } else if (input === '🔍搜索') {\n                    if (搜索模式 == '分组') {\n                        return \"hiker://search?s=\" + 影片名称 + \"&group=\" + 调用名称;\n                    } else {\n                        return \"hiker://search?s=\" + 影片名称 + \"&rule=\" + 调用名称;\n                    }\n                }\n                // 原先的配置\n                originSettings = JSON.stringify(json.settings);\n                // 修改配置\n                eval('json.settings.' + 来源 + '=input;');\n                setFile = setFile.replace(originSettings, JSON.stringify(json.settings));\n                saveFile('hiker://files/rules/DuanNian/MyParse.json', setFile);\n                // 刷新元素\n                eval(getMyVar('简插'));\n                updateItem('op', {\n                    title: '就绪解析：🔘<font color=\"' + Color + '\">' + op + '</font>\\t\\t\\t\\t页码：<font color=\"' + Color + '\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\n                });\n                return \"toast://切换解析口为:\" + input;\n            }, json, 来源, Color, op, 影片名称, 搜索模式, 调用名称)\n        }, json, 来源, Color, op, 影片名称, 搜索模式, 调用名称),\n        img: 'hiker://files/rules/cy/tubiao/youku.svg',\n        col_type: \"avatar\",\n        extra: {\n            id: 'op'\n        }\n    });\n}\n\nlog('---');\n// 匹配电影\nif (html.match(/\"播放页电影选集\",\"dataNode\":\\[{[\\S\\s]+(?=,\"title\":\"(系列电影|播放列表)\")/)) {\n    // 对电影的基本功能栏初始参值做下防错处理\n    追剧日历 = '', 剧集列表 = '', 类型标识 = 2, 短讯 = '电影';\n    putMyVar('日历', '关')\n    基本功能栏();\n    上映日期 = JSON.parse('{' + html.match(/\"videoPublishTime\"[\\S\\s]+(?=,\"videoTitle\")/)[0] + '}').videoPublishTime;\n    d.push({\n        title: '‘‘’’<small><font><font color=\"red\">上映日期：' + 上映日期 + '</font></small>',\n        url: \"toast://点我干嘛~\",\n        col_type: 'scroll_button'\n    })\n    d.push({\n        title: '系列电影',\n        col_type: 'text_1',\n        // desc: '‘‘’’<small><font><font color=\"red\">上映日期：' + 上映日期 + '</font></small>',\n    });\n    try {\n        电影信息 = JSON.parse(html.match(/\"播放页电影选集\",\"dataNode\":\\[{[\\S\\s]+(?=,\"title\":\"(系列电影|播放列表)\")/)[0].replace('\"播放页电影选集\",\"dataNode\":', ''));\n        电影信息.forEach(list => {\n            if (list.data.summary) {\n                d.push({\n                    title: list.data.title,\n                    img: list.data.img.replace('\\u002F', '/') + \"@Referer=\",\n                    url: 'https://v.youku.com/v_show/id_' + list.data.action.value + '.html' + lazy,\n                    desc: list.data.videoType + '\\t' + list.data.summary,\n                    col_type: 'movie_2'\n                });\n            } else {\n                d.push({\n                    title: list.data.title,\n                    img: list.data.img.replace('\\u002F', '/') + \"@Referer=\",\n                    url: 'https://v.youku.com/v_show/id_' + list.data.action.value + '.html' + lazy,\n                    desc: list.data.videoType,\n                    col_type: 'movie_2'\n                });\n            }\n        });\n    } catch (e) {\n        try {\n            // 分成多种语言版本的电影\n            电影信息 = JSON.parse(html.match(/\"播放页电影选集\",\"dataNode\":\\[{[\\S\\s]+(?=,\"title\":\"播放列表\")/)[0].replace('\"播放页电影选集\",\"dataNode\":', ''));\n            for (let i = 0; i < 电影信息.length; i++) {\n                if (电影信息[i].data.summary) {\n                    d.push({\n                        title: 电影信息[i].data.title,\n                        img: 电影信息[i].data.img.replace('\\u002F', '/') + \"@Referer=\",\n                        url: 'https://v.youku.com/v_show/id_' + 电影信息[i].data.audioLang[i].videoId + '.html' + lazy,\n                        desc: 电影信息[i].data.videoType + '\\t' + 电影信息[i].data.summary,\n                        col_type: 'movie_2'\n                    });\n                } else {\n                    d.push({\n                        title: 电影信息[i].data.title,\n                        img: 电影信息[i].data.img.replace('\\u002F', '/') + \"@Referer=\",\n                        url: 'https://v.youku.com/v_show/id_' + 电影信息[i].data.audioLang[i].videoId + '.html' + lazy,\n                        desc: 电影信息[i].data.videoType,\n                        col_type: 'movie_2'\n                    });\n                }\n            }\n        } catch (e) {\n            // 本来是打算动态刷新系列电影元素的desc，但是不知道为什么一点反应都没有,直接在后面添加新元素好了，烦\n            d.push({\n                title: '‘‘’’<small><font color=\"red\">当前可能是预告状态，没有任何数据~</font></small>',\n                col_type: 'text_1'\n            });\n        }\n    }\n\n} else {\n    log(';;;');\n    try {\n        // 一般剧集（含电影、综艺）——但电影不走这条线，因为没有系列电影的数据~\n        剧集信息 = JSON.parse(request(\"https://search.youku.com/api/search?appScene=show_episode&showIds=\" + 剧集ID + \"&appCaller=h5\"));\n        类型标识 = 剧集信息.cateId;\n        剧集列表 = 剧集信息.serisesList;\n        if (剧集信息.updateNotice) {\n            追剧日历 = 剧集信息.updateNotice\n        } else {\n            追剧日历 = '——已完结——'\n        }\n        // 先尝试获取剧集数据，如果获取失败，异常会在上方出现，因为没有serisesList，那就走栏目路线\n        基本功能栏();\n        // 设置选集列表\n        剧集长度 = 剧集列表.length\n        if (剧集长度 > 每页集数) {\n            putMyVar('刷新选集', $.toString(() => {\n                putMyVar('分集起', start);\n                putMyVar('分集终', end);\n                eval(getMyVar('简插'));\n                updateItem('op', {\n                    title: '就绪解析：🔘<font color=\"' + Color + '\">' + op + '</font>\\t\\t\\t\\t页码：<font color=\"' + Color + '\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\n                })\n                // 删除\n                for (let i = 1; i <= getMyVar('分集终'); i++) {\n                    deleteItem('youku' + i);\n                }\n                // 添加\n                lazy = getMyVar('lazy');\n                剧集列表 = JSON.parse(getMyVar('剧集列表'));\n                显示的剧集列表 = 剧集列表.slice(start - 1, end);\n                newArray = [];\n                index = 1;\n                if (类型标识 == 3 || 类型标识 == 9 || 类型标识 == 178) {\n                    显示的剧集列表.forEach(list => {\n                        if (list.iconCorner.tagText) {\n                            状态 = list.iconCorner.tagText;\n                        } else {\n                            状态 = '';\n                        }\n                        if (getItem('previewSwitch', 'fold') == 'fold' && 状态.match(/预|花絮/)) {\n                            return;\n                        } else {\n                            if (list.thumbUrl === null || undefined) {\n                                data = JSON.parse(request('https://openapi.youku.com/v2/videos/show.json?client_id=53e6cc67237fc59a&package=com.huawei.hwvplayer.youku&ext=show&video_id=' + list.videoId));\n                                封面 = data.thumbnail;\n                            } else {\n                                封面 = list.thumbUrl;\n                            }\n                            newArray.push({\n                                title: list.title,\n                                img: 封面 + \"@Referer=\",\n                                url: 'https://v.youku.com/v_show/id_' + list.videoId + '.html' + lazy,\n                                desc: 状态 + '\\t' + list.stripeBottom + '\\n' + list.displayName,\n                                col_type: 'movie_1_left_pic',\n                                extra: {\n                                    id: 'youku' + index,\n                                }\n                            });\n                            index += 1;\n                        }\n                    });\n                } else {\n                    显示的剧集列表.forEach(list => {\n                        if (list.iconCorner.tagText) {\n                            状态 = list.iconCorner.tagText;\n                        } else {\n                            状态 = '';\n                        }\n                        if (getItem('previewSwitch', 'fold') == 'fold' && 状态.match(/预|花絮/)) {\n                            return;\n                        } else {\n                            if (list.thumbUrl === null || undefined) {\n                                data = JSON.parse(request('https://openapi.youku.com/v2/videos/show.json?client_id=53e6cc67237fc59a&package=com.huawei.hwvplayer.youku&ext=show&video_id=' + list.videoId));\n                                封面 = data.thumbnail;\n                            } else {\n                                封面 = list.thumbUrl;\n                            }\n                            newArray.push({\n                                title: list.title,\n                                img: 封面 + \"@Referer=\",\n                                url: 'https://v.youku.com/v_show/id_' + list.videoId + '.html' + lazy,\n                                desc: 状态 + '\\t' + list.displayName,\n                                col_type: 'movie_2',\n                                extra: {\n                                    id: 'youku' + index,\n                                }\n                            });\n                            index += 1;\n                        }\n                    });\n                }\n                addItemAfter(getMyVar('末页'), newArray);\n            }));\n            d.push({\n                col_type: 'scroll_button',\n                url: 'hiker://empty',\n                title: '∷',\n                extra: {\n                    id: '占位符',\n                }\n            })\n            putMyVar('分集起', 1);\n            putMyVar('分集终', 每页集数);\n            putMyVar('剧集列表', 剧集列表);\n            总页数 = Math.ceil(剧集长度 / 每页集数);\n            start = 1;\n            end = 每页集数;\n            for (let page = 1; page <= 总页数; page++) {\n                if (end > 剧集长度) {\n                    end = 剧集长度;\n                }\n                d.push({\n                    title: start + '-' + end,\n                    url: $('#noLoading##noHistory#').lazyRule((start, end, Color, 来源, 类型标识) => {\n                        eval(getMyVar('刷新选集'));\n                        return \"hiker://empty\";\n                    }, start, end, Color, 来源, 类型标识),\n                    col_type: 'scroll_button',\n                    extra: {\n                        id: start + '-' + end\n                    }\n                });\n                if (end < 剧集长度) {\n                    start += 每页集数;\n                    end += 每页集数;\n                }\n            }\n            // 记录末页的id\n            putMyVar('末页', start + '-' + end);\n        } else {\n            putMyVar('分集起', 1);\n            putMyVar('分集终', 剧集长度);\n        }\n        log('000');\n        // 展示剧集:如果是综艺、纪录片、文化等节目类型的以条栏样式显示，并且综艺类型的剧集是按最新时间来排序的~这个接口预告没有封面需要手动搞搞了\n        if (类型标识 == 3 || 类型标识 == 9 || 类型标识 == 178) {\n            for (let i = 0; i < getMyVar('分集终'); i++) {\n                if (剧集列表[i].iconCorner.tagText) {\n                    状态 = 剧集列表[i].iconCorner.tagText;\n                } else {\n                    状态 = '';\n                }\n                if (getItem('previewSwitch', 'fold') == 'fold' && 状态.match(/预|花絮/)) {\n                    continue;\n                } else {\n                    if (剧集列表[i].thumbUrl === null || undefined) {\n                        data = JSON.parse(request('https://openapi.youku.com/v2/videos/show.json?client_id=53e6cc67237fc59a&package=com.huawei.hwvplayer.youku&ext=show&video_id=' + 剧集列表[i].videoId));\n                        封面 = data.thumbnail;\n                    } else {\n                        封面 = 剧集列表[i].thumbUrl;\n                    }\n                    d.push({\n                        title: 剧集列表[i].title,\n                        img: 封面 + \"@Referer=\",\n                        url: 'https://v.youku.com/v_show/id_' + 剧集列表[i].videoId + '.html' + lazy,\n                        desc: 状态 + '\\t' + 剧集列表[i].stripeBottom + '\\n' + 剧集列表[i].displayName,\n                        col_type: 'movie_1_left_pic',\n                        extra: {\n                            id: 'youku' + (i + 1),\n                        }\n                    });\n                }\n            }\n        } else {\n            log(剧集列表);\n            for (let i = 0; i < getMyVar('分集终'); i++) {\n                if (剧集列表[i].iconCorner.tagText) {\n                    状态 = 剧集列表[i].iconCorner.tagText;\n                } else {\n                    状态 = '';\n                }\n                if (getItem('previewSwitch', 'fold') == 'fold' && 状态.match(/预|花絮/)) {\n                    continue;\n                } else {\n                    log(剧集列表[i]);\n                    if (剧集列表[i].thumbUrl === null) {\n                        data = JSON.parse(request('https://openapi.youku.com/v2/videos/show.json?client_id=53e6cc67237fc59a&package=com.huawei.hwvplayer.youku&ext=show&video_id=' + 剧集列表[i].videoId));\n                        封面 = data.thumbnail;\n                    } else {\n                        封面 = 剧集列表[i].thumbUrl;\n                    }\n                    d.push({\n                        title: 剧集列表[i].title,\n                        img: 封面 + \"@Referer=\",\n                        url: 'https://v.youku.com/v_show/id_' + 剧集列表[i].videoId + '.html' + lazy,\n                        desc: 状态 + '\\t' + 剧集列表[i].displayName,\n                        col_type: 'movie_2',\n                        extra: {\n                            id: 'youku' + (i + 1),\n                        }\n                    });\n                }\n            }\n        }\n    } catch (e) {\n        log(e);\n        log(e.message);\n        // 滑动图片选集型（音乐、娱乐、生活等栏目）——烦了，直接正则全局匹配成数组好了。。。\n        选集信息 = html.match(/\"播放页ugc选集\",\"dataNode\":\\[{[\\S\\s]+}(?=\\],\"title\")/)[0].replace('\"播放页ugc选集\",\"dataNode\":[', '');\n        选集信息 = 选集信息.match(/{\"data\":{[\\S\\s]{0,2000},\"id\":[0-9]{0,20},\"type\":[0-9]{0,20}}/g)\n        setPageTitle('栏目列表')\n        选集信息.forEach(list => {\n            list = JSON.parse(list);\n            d.push({\n                title: list.data.title,\n                img: list.data.img.replace('\\u002F', '/') + \"@Referer=\",\n                url: 'https://v.youku.com/v_show/id_' + list.data.action.value + '.html' + lazy,\n                desc: list.data.publishTime,\n                col_type: 'movie_1_left_pic',\n            });\n        });\n    }\n\n}\n\nsetResult(d);\n"},{"name":"优酷最新章节","path":"getUpdate","rule":"html = request(MY_URL);\ntry {\n    // 重新定位了\n    影片信息 = JSON.parse(html.match(/\"播放页简介组件\",\"dataNode\":\\[{[\\S\\s]+showImg[\\S\\s]+desc[\\S\\s]{0,1000}(?=,\"id\")/)[0].replace('\"播放页简介组件\",\"dataNode\":[{\"data\":', ''));\n} catch (e) {\n    try {\n        影片信息 = JSON.parse(html.match(/\"data\":[\\S\\s]{0,50}scorePrefix[\\S\\s]{0,30}area[\\S\\s]{0,100}img[\\S\\s]{0,300}subTitles[\\S\\s]+introTitle[\\S\\s]{0,200}desc[\\S\\s]{0,800}(?=,\"id\")/)[0].replace('\"data\":', ''));\n    } catch (e) {\n        try {\n            影片信息 = JSON.parse(html.match(/播放页简介组件\",\"dataNode\":\\[{\"data\":[\\S\\s]+(?=,\"id\":[0-9]{0,20},\"type\":[0-9]{0,20}},{\"data\":{\"title\":[\\S\\s]{0,200},\"isAliStar)/)[0].replace('播放页简介组件\",\"dataNode\":[{\"data\":', ''));\n        } catch (e) {\n            影片信息 = '';\n        }\n    }\n}\nif (影片信息) {\n    状态 = 影片信息.subTitles[1].subtitle;\n    if (状态 == undefined) {\n        状态 = '完结';\n    }\n    setResult(状态);\n} else {\n    try {\n        影片地图 = JSON.parse(html.match(/\"videoMap\":[\\S\\s]+(?=,\"pushInfo\")/)[0].replace('\"videoMap\":', ''));\n        状态 = 影片地图.episodeLast;\n        总集数 = 影片地图.episodeTotal;\n        if (状态 < 总集数) {\n            setResult('更新至：' + 状态 + ',共' + 总集数 + '集');\n        } else {\n            setResult('已完结,共' + 总集数 + '集');\n        }\n    } catch (e) {\n        setResult('获取数据失败');\n    }\n}"}],"title":"优酷.cy","author":"侠名","version":0,"type":"video","url":"hiker://empty##","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\n\nvar d = [];\n\nd.push({\n\n    col_type: \"x5_webview_single\",\n\n    url: \"https://m.youku.com/\",\n\n    desc: \"float&&100%\",\n\n    extra: {\n\n        canBack: true,\n\n        urlInterceptor: $.toString((MY_RULE) => {\n\n            // 拦截，进入原生二级\n\n            if (input.match(/(alipay_video|video\\/id)/)) {\n\n                return $.toString((url, MY_RULE) => {\n\n                    fba.open(JSON.stringify({\n\n                        rule: MY_RULE.title,\n\n                        title: '影片详情',\n\n                        group: MY_RULE.group,\n\n                        preRule: MY_RULE.preRule,\n\n                        pages: MY_RULE.pages,\n\n                        url: url + '#immersiveTheme#',\n\n                        findRule: MY_RULE.detail_find_rule\n\n                    }));\n\n                }, input, MY_RULE)\n\n            }\n\n            // 拦截app下载页面——非网页代码\n\n            if (input.includes('download')) return true;\n\n        }, MY_RULE),\n\n        blockRules: [''],\n\n        js: $.toString(() => {\n\n            var token_timer = function () {\n\n                var timer = setInterval(() => {\n\n                    // 直接隐藏顶部栏（移除会有奇怪的后果所以隐藏）\n\n                    if (document.getElementsByClassName(\"yk-header-container\")[0]) {\n\n                        document.getElementsByClassName(\"yk-header-container\")[0].style.display = \"none\";\n\n                    }\n\n                    // 隐藏继续使用浏览器看\n\n                    if (document.getElementsByClassName(\"callEnd_box\")[0]) {\n\n                        document.getElementsByClassName(\"callEnd_box\")[0].style.display = \"none\";\n\n                    }\n\n                    // 隐藏蓝色横条打开app\n\n                    if (document.getElementsByClassName(\"ad-banner-wrapper\")[0]) {\n\n                        document.getElementsByClassName(\"ad-banner-wrapper\")[0].style.display = \"none\";\n\n                    }\n\n                    // 隐藏vip开通条栏\n\n                    if (document.getElementsByClassName(\"vipProfileContainer\")[0]) {\n\n                        document.getElementsByClassName(\"vipProfileContainer\")[0].style.display = \"none\";\n\n                    }\n\n                    // 隐藏红色app弹框\n\n                    if (document.getElementsByClassName(\"callEnd_fixed_box\")[0]) {\n\n                        document.getElementsByClassName(\"callEnd_fixed_box\")[0].style.display = \"none\";\n\n                    }\n\n                }, 100)\n\n            };\n\n            token_timer();\n\n        }),\n\n        jsLoadingInject: true,\n\n        // 悬浮嗅探部分短视频\n\n        floatVideo: true,\n\n        ua: MOBILE_UA\n\n    }\n\n});\n\nsetResult(d);\n\n","searchFind":"js:\nMY_URL = MY_URL.split('##');\nlet seaword = MY_URL[1];\nlet page = MY_PAGE;\nvar d = [];\nvar res = {};\n// 将就着用吧——cna=IEsVG1R9shkCAXF2UbCcHT+9; sca=403a4450; atpsida=f164bf7925325afed773a23b_1667394574_6\ncookie = JSON.parse(fetchCookie('https://m.youku.com/', {\n    headers: {\n        \"User-Agent\": PC_UA,\n        \"Referer\": \"https://www.youku.com/\",\n    },\n    method: \"GET\"\n}))[0];\nhtml=fetch(\"https://search.youku.com/search_video?keyword=\" + seaword, {\n    headers: {\n        \"User-Agent\": PC_UA,\n        \"Referer\": \"https://www.youku.com/\",\n        \"Cookie\": cookie\n    },\n    method: \"GET\"\n})\nvar list = pdfa(html, 'body&&.h5-show-card-wrapper');\nvar Imglist = pdfa(html, 'body&&.show-icon');\n// 来源列表\nvar fromList = [];\nfor (var j in list) {\n    // 循环判断来源，没有来源，设置为youku\n    from = pdfh(list[j], '.show-sourcename&&Text')\n    if (from) {\n        fromList.push(from);\n    } else {\n        fromList.push('优酷');\n    }\n    d.push({\n        title: pdfh(list[j], '.show-name&&Text'),\n        desc: \"⭐来源：\" + fromList[j],\n        content: pdfh(list[j], '.show-feature&&Text') + '\\n' + pdfh(list[j], '.show-director&&Text'),\n        img: String(Imglist[j].match(/\\/\\/[\\S\\s]+\\)/)).replace(')', '').replace('//', 'https://') + \"@Referer=\",\n        url: pdfh(list[j], '.h5-show-card&&href')+\"#immersiveTheme#\"\n    });\n\n}\nres.data = d;\nsetSearchResult(res);\n","search_url":"hiker://empty##**##fypage","group":"②影视","detail_col_type":"movie_1","detail_find_rule":"js:\n\nMY_URL = MY_URL.split(\"#\")[0];\n\nif (MY_URL.match(/qiyi/)) {\n\n    eval(JSON.parse(request('hiker://page/qiyi?rule=爱奇艺.cy')).rule);\n\n}else if(MY_URL.match(/youku/)){\n\n    eval(JSON.parse(request('hiker://page/youku?rule=优酷.cy')).rule);\n\n}else if(MY_URL.match(/qq/)){\n\n    eval(JSON.parse(request('hiker://page/qq?rule=腾讯.cy')).rule);\n\n}else if(MY_URL.match(/mgtv/)){\n\n    eval(JSON.parse(request('hiker://page/mgtv?rule=芒果.cy')).rule);\n\n}else if(MY_URL.match(/bili/)){\n\n    eval(JSON.parse(request('hiker://page/bili?rule=哔哩.cy')).rule);\n\n}","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"pc","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"优酷二级\",\"path\":\"youku\",\"rule\":\"js:\\n// 数据定位---\\nvar d = [];\\nMY_URL = MY_URL.split(\\\"#\\\")[0];\\nhtml = request(MY_URL);\\ntry {\\n    // 重新定位了\\n    影片信息 = JSON.parse(html.match(/\\\"播放页简介组件\\\",\\\"dataNode\\\":\\\\[{[\\\\S\\\\s]+showImg[\\\\S\\\\s]+desc[\\\\S\\\\s]{0,1000}(?=,\\\"id\\\")/)[0].replace('\\\"播放页简介组件\\\",\\\"dataNode\\\":[{\\\"data\\\":', ''));\\n} catch (e) {\\n    try {\\n        影片信息 = JSON.parse(html.match(/\\\"data\\\":[\\\\S\\\\s]{0,50}scorePrefix[\\\\S\\\\s]{0,30}area[\\\\S\\\\s]{0,100}img[\\\\S\\\\s]{0,300}subTitles[\\\\S\\\\s]+introTitle[\\\\S\\\\s]{0,200}desc[\\\\S\\\\s]{0,800}(?=,\\\"id\\\")/)[0].replace('\\\"data\\\":', ''));\\n    } catch (e) {\\n        try {\\n            影片信息 = JSON.parse(html.match(/播放页简介组件\\\",\\\"dataNode\\\":\\\\[{\\\"data\\\":[\\\\S\\\\s]+(?=,\\\"id\\\":[0-9]{0,20},\\\"type\\\":[0-9]{0,20}},{\\\"data\\\":{\\\"title\\\":[\\\\S\\\\s]{0,200},\\\"isAliStar)/)[0].replace('播放页简介组件\\\",\\\"dataNode\\\":[{\\\"data\\\":', ''));\\n        } catch (e) {\\n            影片信息 = '';\\n        }\\n    }\\n}\\n// 影片名称 = pdfh(html, 'head&&title&&Text');综艺的话标题不等于影片名称\\n影片名称 = pdfh(html, '.module-name&&Text');\\nsetPageTitle(影片名称)\\nif (影片信息) {\\n    剧集ID = 影片信息.showId;\\n    简介 = 影片信息.desc;\\n    封面 = 影片信息.img.replace('\\\\u002F', '/') + \\\"@Referer=\\\";\\n    // 动态设置二级收藏图片（网页拦截重定向后需要自行设置）\\n    setPagePicUrl(封面);\\n    // 有些剧集或者说电影的更新状态或者是评分数据或者说动漫的类型是空甚至根本没有所以单独获取并做异常处理\\n    try {\\n        类型 = 影片信息.mark.data.text;\\n    } catch (e) {\\n        类型 = '';\\n    }\\n    简述 = 影片信息.subTitles[0].subtitle;\\n    状态 = 影片信息.subTitles[1].subtitle;\\n    if (状态 == undefined) {\\n        状态 = '完结'\\n    }\\n    标签 = 影片信息.showGenre;\\n    if (标签 == undefined) {\\n        标签 = '';\\n    }\\n} else {\\n    // 针对筐出未来电影赏析而写的，事实上教育栏目最后多数也是走这里\\n    try {\\n        影片地图 = JSON.parse(html.match(/\\\"videoMap\\\":[\\\\S\\\\s]+(?=,\\\"pushInfo\\\")/)[0].replace('\\\"videoMap\\\":', ''));\\n        影片名称 = 影片地图.showSubtitle;\\n        setPageTitle(影片名称);\\n        // try没获取到这里记得重新获取\\n        剧集ID = 影片地图.showId;\\n        简介 = 影片地图.showName;\\n        封面 = 影片地图.videoImg.replace('\\\\u002F', '/') + \\\"@Referer=\\\";\\n        setPagePicUrl(封面);\\n        类型 = 影片地图.videoCategory;\\n        状态 = '共' + 影片地图.episodeLast + '集\\\\n' + 影片地图.showReleaseTime;\\n        简述 = '';\\n        标签 = '';\\n    } catch (e) {\\n        简介 = '没有简介，大概是一些短视频，科技、生活、娱乐分栏~';\\n        封面 = 'https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg.zcool.cn%2Fcommunity%2F010097613ad72c11013eaf7098e28a.jpg%402o.jpg&refer=http%3A%2F%2Fimg.zcool.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1661226719&t=75dab3a3ff2d817e6f388f89505ea2e4@Referer=';\\n        类型 = '';\\n        状态 = '';\\n        简述 = '';\\n        标签 = '';\\n    }\\n}\\n// 评分不一定有,处理一下\\ntry {\\n    评分 = '';\\n    if (pdfh(html, '.brief-score&&span,-4&&Text').match(/分/)) {\\n        评分 = pdfh(html, '.brief-score&&span,-4&&Text');\\n    }\\n} catch (e) {\\n    评分 = ''\\n}\\nif (类型 == '') {\\n    短讯 = 简述 + '-' + 评分 + '-' + 状态 + '\\\\n' + 标签;\\n} else {\\n    短讯 = \\\"⭐\\\" + 类型 + \\\"⭐ \\\" + 简述 + '-' + 评分 + '-' + 状态 + '\\\\n' + 标签;\\n}\\n// 导演、剧集图片、url等关键信息——正则匹配大法---------------------------------------\\n演职人员信息 = html.match(/\\\"img\\\":[\\\\S\\\\s]{0,120}\\\"title\\\":[\\\\S\\\\s]{0,15}isAliStar\\\"[\\\\S\\\\s]{0,120}(?=,\\\"action)/g);\\n// 前置参数和预处理---\\nvar lazy = $('').lazyRule(() => {\\n    eval(fetch('hiker://files/cache/Parse_Dn.js', {}));\\n    return aytmParse(input)\\n});\\nvar Color = \\\"#19B89D\\\";\\nvar 每页集数 = 30;\\nvar 搜索模式 = '分组';\\nvar 调用名称 = '简影';\\nputMyVar('折叠', '关');\\nputMyVar('日历', '关');\\nputMyVar('lazy', lazy);\\n// 清除变量\\naddListener('onClose', $.toString(() => {\\n    clearMyVar('分集起');\\n    clearMyVar('分集终');\\n    clearMyVar('lazy');\\n    clearMyVar('剧集列表');\\n}))\\n// 设置动态最新章节\\nsetLastChapterRule('js:' + $.toString(() => {\\n    eval(JSON.parse(request('hiker://page/getUpdate?rule=优酷.cy')).rule);\\n}));\\n// 页面内容正文---\\n// 基本功能栏\\nfunction 基本功能栏() {\\n    // 基本信息模块\\n    d.push({\\n        title: 短讯,\\n        desc: 简介.substring(0, 45) + '‘‘’’…<font color=\\\"#1C1C1C\\\">详情</font>',\\n        img: 封面,\\n        url: $().rule((简介) => {\\n            res = {};\\n            var d = [];\\n            d.push({\\n                title: '影片简介：' + '\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t' + 简介,\\n                col_type: 'long_text'\\n            });\\n            res.data = d;\\n            setHomeResult(res);\\n        }, 简介),\\n        col_type: 'movie_1_vertical_pic_blur',\\n        extra: {\\n            longClick: [{\\n                title: '预告、花絮开关', js: $.toString(() => {\\n                    if (getItem('previewSwitch', 'fold') == 'fold') {\\n                        setItem('previewSwitch', 'open');\\n                        refreshPage(true);\\n                        return \\\"toast://预告已经切换为展示~\\\";\\n                    } else {\\n                        setItem('previewSwitch', 'fold');\\n                        refreshPage(true);\\n                        return \\\"toast://预告不再展示~\\\";\\n                    }\\n                })\\n            },{\\n                title: 'dm盒子', js: $.toString(() => {\\n                    return 'hiker://page/setting#noHistory#?rule=dm盒子';\\n                })\\n            }]\\n        }\\n    });\\n    // 追剧日历模块\\n    d.push({\\n        title: '‘‘’’<small><font color=\\\"#098AC1\\\">📅追剧日历</font></small>',\\n        url: $('#noLoading#').lazyRule((短讯, 类型标识, 剧集列表, 演职人员信息, 追剧日历) => {\\n            if (短讯.match(/预告/)) {\\n                return \\\"toast://当前是预告状态，暂无更新计划，敬请期待！\\\"\\n            } else if (短讯.match(/电影/)) {\\n                return \\\"toast://电影你也要追啊！\\\"\\n            } else {\\n                if (getMyVar('日历', '关') == '开') {\\n                    // 太苦逼了~因为海阔自身的bug导致不能直接批量删除（会导致失焦让选集栏折叠消失...）——只能采取循环删除的方式~\\n                    deleteItem('追剧日历')\\n                    deleteItem('追剧日历')\\n                    putMyVar('日历', '关');\\n                } else {\\n                    // 因为综艺、纪录片、文化相关等节目和普通剧集的集数排序是倒过来的\\n                    if (类型标识 == 3 || 类型标识 == 9 || 类型标识 == 178) {\\n                        data1 = JSON.parse(request('https://openapi.youku.com/v2/videos/show.json?client_id=53e6cc67237fc59a&package=com.huawei.hwvplayer.youku&ext=show&video_id=' + 剧集列表[剧集列表.length - 1].videoId));\\n                        data2 = JSON.parse(request('https://openapi.youku.com/v2/videos/show.json?client_id=53e6cc67237fc59a&package=com.huawei.hwvplayer.youku&ext=show&video_id=' + 剧集列表[0].videoId));\\n                    } else {\\n                        data1 = JSON.parse(request('https://openapi.youku.com/v2/videos/show.json?client_id=53e6cc67237fc59a&package=com.huawei.hwvplayer.youku&ext=show&video_id=' + 剧集列表[0].videoId));\\n                        data2 = JSON.parse(request('https://openapi.youku.com/v2/videos/show.json?client_id=53e6cc67237fc59a&package=com.huawei.hwvplayer.youku&ext=show&video_id=' + 剧集列表[剧集列表.length - 1].videoId));\\n                    }\\n                    上映时间 = data1.published;\\n                    最后更新 = data2.published + '\\\\n' + data2.show.type + '\\\\t' + data2.title\\n                    if (演职人员信息) {\\n                        addItemAfter('演职人员',\\n                            [{\\n                                title: 追剧日历,\\n                                col_type: \\\"rich_text\\\",\\n                                extra: {\\n                                    id: '追剧日历'\\n                                }\\n                            }, {\\n                                title: \\\"更新状态\\\",\\n                                col_type: \\\"text_1\\\",\\n                                desc: '上映时间：' + 上映时间 + '\\\\n最后更新：' + 最后更新,\\n                                extra: {\\n                                    id: '追剧日历'\\n                                }\\n                            }]\\n                        );\\n                    } else {\\n                        addItemAfter('豆瓣影讯',\\n                            [{\\n                                title: 追剧日历,\\n                                col_type: \\\"rich_text\\\",\\n                                extra: {\\n                                    id: '追剧日历'\\n                                }\\n                            }, {\\n                                title: \\\"更新状态\\\",\\n                                col_type: \\\"text_1\\\",\\n                                desc: '上映时间：' + 上映时间 + '\\\\n最后更新：' + 最后更新,\\n                                extra: {\\n                                    id: '追剧日历'\\n                                }\\n                            }]\\n                        );\\n                    }\\n                    putMyVar('日历', '开');\\n                }\\n                return 'toast://已切换日历为:' + getMyVar('日历', '开')\\n            }\\n        }, 短讯, 类型标识, 剧集列表, 演职人员信息, 追剧日历),\\n        col_type: 'text_3'\\n    });\\n    // 豆瓣影讯模块\\n    d.push({\\n        title: '‘‘’’<small><font><font color=\\\"#098AC1\\\">🍃豆瓣影讯</font>' + '</small>',\\n        url: 'hiker://search?s=' + 影片名称 + '&rule=青豆',\\n        col_type: 'text_3',\\n        extra: {\\n            id: '豆瓣影讯'\\n        }\\n    });\\n    // 演职人员模块\\n    if (演职人员信息) {\\n        d.push({\\n            title: '‘‘’’<small><font color=\\\"#098AC1\\\">⬇️演职人员</font></small>',\\n            url: $('#noLoading#').lazyRule((演职人员信息) => {\\n                if (getMyVar('折叠', '关') == '开') {\\n                    for (var i = 0; i < 演职人员信息.length; i++) {\\n                        deleteItem('演职人员展示');\\n                    }\\n                    putMyVar('折叠', '关');\\n                } else {\\n                    temArr = [];\\n                    for (var i = 0; i < 演职人员信息.length; i++) {\\n                        dataJson = JSON.parse('{' + 演职人员信息[i] + '}');\\n                        temArr.push({\\n                            title: dataJson.title + '\\\\t' + dataJson.subtitle,\\n                            img: dataJson.img.replace('\\\\u002F', '/') + \\\"@Referer=\\\",\\n                            col_type: 'icon_2_round',\\n                            url: 'hiker://search?s=' + dataJson.title + '&rule=青豆',\\n                            extra: {\\n                                id: '演职人员展示'\\n                            }\\n                        });\\n\\n                    }\\n                    addItemAfter('演职人员', temArr);\\n                    putMyVar('折叠', '开');\\n                }\\n                return 'toast://已切换折叠为:' + getMyVar('折叠', '开')\\n            }, 演职人员信息),\\n            col_type: 'text_3',\\n            extra: {\\n                id: '演职人员'\\n            }\\n        })\\n    }\\n    // 选插模块——局部刷新版\\n    来源 = 'yk';\\n    putMyVar('简插', $.toString(() => {\\n        let titleArr = []\\n        setFile = readFile('hiker://files/rules/DuanNian/MyParse.json');\\n        try {\\n            eval('json=' + setFile);\\n        } catch (e) {\\n            log('Json解析发生了错误:' + e.message);\\n        }\\n        titleArr = json.title;\\n        let barry1 = ['✍️辅助'];\\n        let barry2 = ['📦️魔断'];\\n        let barry3 = ['🔍搜索'];\\n        titleArr = barry3.concat(titleArr);\\n        titleArr = barry2.concat(titleArr);\\n        titleArr = barry1.concat(titleArr);\\n        eval('op=json.settings.' + 来源);\\n        titleArr = titleArr.map((it) => {\\n            return it === op ? '👉' + it : it;\\n        });\\n        putMyVar('解析数组', titleArr);\\n        putMyVar('setFile', setFile);\\n    }))\\n    eval(getMyVar('简插'));\\n    d.push({\\n        title: '就绪解析：🔘<font color=\\\"' + Color + '\\\">' + op + '</font>\\\\t\\\\t\\\\t\\\\t页码：<font color=\\\"' + Color + '\\\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\\n        url: $('#noLoading#').lazyRule((json, 来源, Color, op, 影片名称, 搜索模式, 调用名称) => {\\n            eval(getMyVar('简插'));\\n            return $(eval(getMyVar('解析数组')), 3).select((json, 来源, Color, op, 影片名称, 搜索模式, 调用名称) => {\\n                setFile = getMyVar('setFile');\\n                input = input.replace(/👉/g, '');\\n                if (input === '✍️辅助') {\\n                    return $().rule(() => {\\n                        eval(JSON.parse(request('hiker://page/home?rule=配置助手')).rule);\\n                    })\\n                } else if (input === '📦️魔断') {\\n                    return \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=编辑#noHistory#\\\";\\n                } else if (input === '🔍搜索') {\\n                    if (搜索模式 == '分组') {\\n                        return \\\"hiker://search?s=\\\" + 影片名称 + \\\"&group=\\\" + 调用名称;\\n                    } else {\\n                        return \\\"hiker://search?s=\\\" + 影片名称 + \\\"&rule=\\\" + 调用名称;\\n                    }\\n                }\\n                // 原先的配置\\n                originSettings = JSON.stringify(json.settings);\\n                // 修改配置\\n                eval('json.settings.' + 来源 + '=input;');\\n                setFile = setFile.replace(originSettings, JSON.stringify(json.settings));\\n                saveFile('hiker://files/rules/DuanNian/MyParse.json', setFile);\\n                // 刷新元素\\n                eval(getMyVar('简插'));\\n                updateItem('op', {\\n                    title: '就绪解析：🔘<font color=\\\"' + Color + '\\\">' + op + '</font>\\\\t\\\\t\\\\t\\\\t页码：<font color=\\\"' + Color + '\\\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\\n                });\\n                return \\\"toast://切换解析口为:\\\" + input;\\n            }, json, 来源, Color, op, 影片名称, 搜索模式, 调用名称)\\n        }, json, 来源, Color, op, 影片名称, 搜索模式, 调用名称),\\n        img: 'hiker://files/rules/cy/tubiao/youku.svg',\\n        col_type: \\\"avatar\\\",\\n        extra: {\\n            id: 'op'\\n        }\\n    });\\n}\\n\\nlog('---');\\n// 匹配电影\\nif (html.match(/\\\"播放页电影选集\\\",\\\"dataNode\\\":\\\\[{[\\\\S\\\\s]+(?=,\\\"title\\\":\\\"(系列电影|播放列表)\\\")/)) {\\n    // 对电影的基本功能栏初始参值做下防错处理\\n    追剧日历 = '', 剧集列表 = '', 类型标识 = 2, 短讯 = '电影';\\n    putMyVar('日历', '关')\\n    基本功能栏();\\n    上映日期 = JSON.parse('{' + html.match(/\\\"videoPublishTime\\\"[\\\\S\\\\s]+(?=,\\\"videoTitle\\\")/)[0] + '}').videoPublishTime;\\n    d.push({\\n        title: '‘‘’’<small><font><font color=\\\"red\\\">上映日期：' + 上映日期 + '</font></small>',\\n        url: \\\"toast://点我干嘛~\\\",\\n        col_type: 'scroll_button'\\n    })\\n    d.push({\\n        title: '系列电影',\\n        col_type: 'text_1',\\n        // desc: '‘‘’’<small><font><font color=\\\"red\\\">上映日期：' + 上映日期 + '</font></small>',\\n    });\\n    try {\\n        电影信息 = JSON.parse(html.match(/\\\"播放页电影选集\\\",\\\"dataNode\\\":\\\\[{[\\\\S\\\\s]+(?=,\\\"title\\\":\\\"(系列电影|播放列表)\\\")/)[0].replace('\\\"播放页电影选集\\\",\\\"dataNode\\\":', ''));\\n        电影信息.forEach(list => {\\n            if (list.data.summary) {\\n                d.push({\\n                    title: list.data.title,\\n                    img: list.data.img.replace('\\\\u002F', '/') + \\\"@Referer=\\\",\\n                    url: 'https://v.youku.com/v_show/id_' + list.data.action.value + '.html' + lazy,\\n                    desc: list.data.videoType + '\\\\t' + list.data.summary,\\n                    col_type: 'movie_2'\\n                });\\n            } else {\\n                d.push({\\n                    title: list.data.title,\\n                    img: list.data.img.replace('\\\\u002F', '/') + \\\"@Referer=\\\",\\n                    url: 'https://v.youku.com/v_show/id_' + list.data.action.value + '.html' + lazy,\\n                    desc: list.data.videoType,\\n                    col_type: 'movie_2'\\n                });\\n            }\\n        });\\n    } catch (e) {\\n        try {\\n            // 分成多种语言版本的电影\\n            电影信息 = JSON.parse(html.match(/\\\"播放页电影选集\\\",\\\"dataNode\\\":\\\\[{[\\\\S\\\\s]+(?=,\\\"title\\\":\\\"播放列表\\\")/)[0].replace('\\\"播放页电影选集\\\",\\\"dataNode\\\":', ''));\\n            for (let i = 0; i < 电影信息.length; i++) {\\n                if (电影信息[i].data.summary) {\\n                    d.push({\\n                        title: 电影信息[i].data.title,\\n                        img: 电影信息[i].data.img.replace('\\\\u002F', '/') + \\\"@Referer=\\\",\\n                        url: 'https://v.youku.com/v_show/id_' + 电影信息[i].data.audioLang[i].videoId + '.html' + lazy,\\n                        desc: 电影信息[i].data.videoType + '\\\\t' + 电影信息[i].data.summary,\\n                        col_type: 'movie_2'\\n                    });\\n                } else {\\n                    d.push({\\n                        title: 电影信息[i].data.title,\\n                        img: 电影信息[i].data.img.replace('\\\\u002F', '/') + \\\"@Referer=\\\",\\n                        url: 'https://v.youku.com/v_show/id_' + 电影信息[i].data.audioLang[i].videoId + '.html' + lazy,\\n                        desc: 电影信息[i].data.videoType,\\n                        col_type: 'movie_2'\\n                    });\\n                }\\n            }\\n        } catch (e) {\\n            // 本来是打算动态刷新系列电影元素的desc，但是不知道为什么一点反应都没有,直接在后面添加新元素好了，烦\\n            d.push({\\n                title: '‘‘’’<small><font color=\\\"red\\\">当前可能是预告状态，没有任何数据~</font></small>',\\n                col_type: 'text_1'\\n            });\\n        }\\n    }\\n\\n} else {\\n    log(';;;');\\n    try {\\n        // 一般剧集（含电影、综艺）——但电影不走这条线，因为没有系列电影的数据~\\n        剧集信息 = JSON.parse(request(\\\"https://search.youku.com/api/search?appScene=show_episode&showIds=\\\" + 剧集ID + \\\"&appCaller=h5\\\"));\\n        类型标识 = 剧集信息.cateId;\\n        剧集列表 = 剧集信息.serisesList;\\n        if (剧集信息.updateNotice) {\\n            追剧日历 = 剧集信息.updateNotice\\n        } else {\\n            追剧日历 = '——已完结——'\\n        }\\n        // 先尝试获取剧集数据，如果获取失败，异常会在上方出现，因为没有serisesList，那就走栏目路线\\n        基本功能栏();\\n        // 设置选集列表\\n        剧集长度 = 剧集列表.length\\n        if (剧集长度 > 每页集数) {\\n            putMyVar('刷新选集', $.toString(() => {\\n                putMyVar('分集起', start);\\n                putMyVar('分集终', end);\\n                eval(getMyVar('简插'));\\n                updateItem('op', {\\n                    title: '就绪解析：🔘<font color=\\\"' + Color + '\\\">' + op + '</font>\\\\t\\\\t\\\\t\\\\t页码：<font color=\\\"' + Color + '\\\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\\n                })\\n                // 删除\\n                for (let i = 1; i <= getMyVar('分集终'); i++) {\\n                    deleteItem('youku' + i);\\n                }\\n                // 添加\\n                lazy = getMyVar('lazy');\\n                剧集列表 = JSON.parse(getMyVar('剧集列表'));\\n                显示的剧集列表 = 剧集列表.slice(start - 1, end);\\n                newArray = [];\\n                index = 1;\\n                if (类型标识 == 3 || 类型标识 == 9 || 类型标识 == 178) {\\n                    显示的剧集列表.forEach(list => {\\n                        if (list.iconCorner.tagText) {\\n                            状态 = list.iconCorner.tagText;\\n                        } else {\\n                            状态 = '';\\n                        }\\n                        if (getItem('previewSwitch', 'fold') == 'fold' && 状态.match(/预|花絮/)) {\\n                            return;\\n                        } else {\\n                            if (list.thumbUrl === null || undefined) {\\n                                data = JSON.parse(request('https://openapi.youku.com/v2/videos/show.json?client_id=53e6cc67237fc59a&package=com.huawei.hwvplayer.youku&ext=show&video_id=' + list.videoId));\\n                                封面 = data.thumbnail;\\n                            } else {\\n                                封面 = list.thumbUrl;\\n                            }\\n                            newArray.push({\\n                                title: list.title,\\n                                img: 封面 + \\\"@Referer=\\\",\\n                                url: 'https://v.youku.com/v_show/id_' + list.videoId + '.html' + lazy,\\n                                desc: 状态 + '\\\\t' + list.stripeBottom + '\\\\n' + list.displayName,\\n                                col_type: 'movie_1_left_pic',\\n                                extra: {\\n                                    id: 'youku' + index,\\n                                }\\n                            });\\n                            index += 1;\\n                        }\\n                    });\\n                } else {\\n                    显示的剧集列表.forEach(list => {\\n                        if (list.iconCorner.tagText) {\\n                            状态 = list.iconCorner.tagText;\\n                        } else {\\n                            状态 = '';\\n                        }\\n                        if (getItem('previewSwitch', 'fold') == 'fold' && 状态.match(/预|花絮/)) {\\n                            return;\\n                        } else {\\n                            if (list.thumbUrl === null || undefined) {\\n                                data = JSON.parse(request('https://openapi.youku.com/v2/videos/show.json?client_id=53e6cc67237fc59a&package=com.huawei.hwvplayer.youku&ext=show&video_id=' + list.videoId));\\n                                封面 = data.thumbnail;\\n                            } else {\\n                                封面 = list.thumbUrl;\\n                            }\\n                            newArray.push({\\n                                title: list.title,\\n                                img: 封面 + \\\"@Referer=\\\",\\n                                url: 'https://v.youku.com/v_show/id_' + list.videoId + '.html' + lazy,\\n                                desc: 状态 + '\\\\t' + list.displayName,\\n                                col_type: 'movie_2',\\n                                extra: {\\n                                    id: 'youku' + index,\\n                                }\\n                            });\\n                            index += 1;\\n                        }\\n                    });\\n                }\\n                addItemAfter(getMyVar('末页'), newArray);\\n            }));\\n            d.push({\\n                col_type: 'scroll_button',\\n                url: 'hiker://empty',\\n                title: '∷',\\n                extra: {\\n                    id: '占位符',\\n                }\\n            })\\n            putMyVar('分集起', 1);\\n            putMyVar('分集终', 每页集数);\\n            putMyVar('剧集列表', 剧集列表);\\n            总页数 = Math.ceil(剧集长度 / 每页集数);\\n            start = 1;\\n            end = 每页集数;\\n            for (let page = 1; page <= 总页数; page++) {\\n                if (end > 剧集长度) {\\n                    end = 剧集长度;\\n                }\\n                d.push({\\n                    title: start + '-' + end,\\n                    url: $('#noLoading##noHistory#').lazyRule((start, end, Color, 来源, 类型标识) => {\\n                        eval(getMyVar('刷新选集'));\\n                        return \\\"hiker://empty\\\";\\n                    }, start, end, Color, 来源, 类型标识),\\n                    col_type: 'scroll_button',\\n                    extra: {\\n                        id: start + '-' + end\\n                    }\\n                });\\n                if (end < 剧集长度) {\\n                    start += 每页集数;\\n                    end += 每页集数;\\n                }\\n            }\\n            // 记录末页的id\\n            putMyVar('末页', start + '-' + end);\\n        } else {\\n            putMyVar('分集起', 1);\\n            putMyVar('分集终', 剧集长度);\\n        }\\n        log('000');\\n        // 展示剧集:如果是综艺、纪录片、文化等节目类型的以条栏样式显示，并且综艺类型的剧集是按最新时间来排序的~这个接口预告没有封面需要手动搞搞了\\n        if (类型标识 == 3 || 类型标识 == 9 || 类型标识 == 178) {\\n            for (let i = 0; i < getMyVar('分集终'); i++) {\\n                if (剧集列表[i].iconCorner.tagText) {\\n                    状态 = 剧集列表[i].iconCorner.tagText;\\n                } else {\\n                    状态 = '';\\n                }\\n                if (getItem('previewSwitch', 'fold') == 'fold' && 状态.match(/预|花絮/)) {\\n                    continue;\\n                } else {\\n                    if (剧集列表[i].thumbUrl === null || undefined) {\\n                        data = JSON.parse(request('https://openapi.youku.com/v2/videos/show.json?client_id=53e6cc67237fc59a&package=com.huawei.hwvplayer.youku&ext=show&video_id=' + 剧集列表[i].videoId));\\n                        封面 = data.thumbnail;\\n                    } else {\\n                        封面 = 剧集列表[i].thumbUrl;\\n                    }\\n                    d.push({\\n                        title: 剧集列表[i].title,\\n                        img: 封面 + \\\"@Referer=\\\",\\n                        url: 'https://v.youku.com/v_show/id_' + 剧集列表[i].videoId + '.html' + lazy,\\n                        desc: 状态 + '\\\\t' + 剧集列表[i].stripeBottom + '\\\\n' + 剧集列表[i].displayName,\\n                        col_type: 'movie_1_left_pic',\\n                        extra: {\\n                            id: 'youku' + (i + 1),\\n                        }\\n                    });\\n                }\\n            }\\n        } else {\\n            log(剧集列表);\\n            for (let i = 0; i < getMyVar('分集终'); i++) {\\n                if (剧集列表[i].iconCorner.tagText) {\\n                    状态 = 剧集列表[i].iconCorner.tagText;\\n                } else {\\n                    状态 = '';\\n                }\\n                if (getItem('previewSwitch', 'fold') == 'fold' && 状态.match(/预|花絮/)) {\\n                    continue;\\n                } else {\\n                    log(剧集列表[i]);\\n                    if (剧集列表[i].thumbUrl === null) {\\n                        data = JSON.parse(request('https://openapi.youku.com/v2/videos/show.json?client_id=53e6cc67237fc59a&package=com.huawei.hwvplayer.youku&ext=show&video_id=' + 剧集列表[i].videoId));\\n                        封面 = data.thumbnail;\\n                    } else {\\n                        封面 = 剧集列表[i].thumbUrl;\\n                    }\\n                    d.push({\\n                        title: 剧集列表[i].title,\\n                        img: 封面 + \\\"@Referer=\\\",\\n                        url: 'https://v.youku.com/v_show/id_' + 剧集列表[i].videoId + '.html' + lazy,\\n                        desc: 状态 + '\\\\t' + 剧集列表[i].displayName,\\n                        col_type: 'movie_2',\\n                        extra: {\\n                            id: 'youku' + (i + 1),\\n                        }\\n                    });\\n                }\\n            }\\n        }\\n    } catch (e) {\\n        log(e);\\n        log(e.message);\\n        // 滑动图片选集型（音乐、娱乐、生活等栏目）——烦了，直接正则全局匹配成数组好了。。。\\n        选集信息 = html.match(/\\\"播放页ugc选集\\\",\\\"dataNode\\\":\\\\[{[\\\\S\\\\s]+}(?=\\\\],\\\"title\\\")/)[0].replace('\\\"播放页ugc选集\\\",\\\"dataNode\\\":[', '');\\n        选集信息 = 选集信息.match(/{\\\"data\\\":{[\\\\S\\\\s]{0,2000},\\\"id\\\":[0-9]{0,20},\\\"type\\\":[0-9]{0,20}}/g)\\n        setPageTitle('栏目列表')\\n        选集信息.forEach(list => {\\n            list = JSON.parse(list);\\n            d.push({\\n                title: list.data.title,\\n                img: list.data.img.replace('\\\\u002F', '/') + \\\"@Referer=\\\",\\n                url: 'https://v.youku.com/v_show/id_' + list.data.action.value + '.html' + lazy,\\n                desc: list.data.publishTime,\\n                col_type: 'movie_1_left_pic',\\n            });\\n        });\\n    }\\n\\n}\\n\\nsetResult(d);\\n\"},{\"name\":\"优酷最新章节\",\"path\":\"getUpdate\",\"rule\":\"html = request(MY_URL);\\ntry {\\n    // 重新定位了\\n    影片信息 = JSON.parse(html.match(/\\\"播放页简介组件\\\",\\\"dataNode\\\":\\\\[{[\\\\S\\\\s]+showImg[\\\\S\\\\s]+desc[\\\\S\\\\s]{0,1000}(?=,\\\"id\\\")/)[0].replace('\\\"播放页简介组件\\\",\\\"dataNode\\\":[{\\\"data\\\":', ''));\\n} catch (e) {\\n    try {\\n        影片信息 = JSON.parse(html.match(/\\\"data\\\":[\\\\S\\\\s]{0,50}scorePrefix[\\\\S\\\\s]{0,30}area[\\\\S\\\\s]{0,100}img[\\\\S\\\\s]{0,300}subTitles[\\\\S\\\\s]+introTitle[\\\\S\\\\s]{0,200}desc[\\\\S\\\\s]{0,800}(?=,\\\"id\\\")/)[0].replace('\\\"data\\\":', ''));\\n    } catch (e) {\\n        try {\\n            影片信息 = JSON.parse(html.match(/播放页简介组件\\\",\\\"dataNode\\\":\\\\[{\\\"data\\\":[\\\\S\\\\s]+(?=,\\\"id\\\":[0-9]{0,20},\\\"type\\\":[0-9]{0,20}},{\\\"data\\\":{\\\"title\\\":[\\\\S\\\\s]{0,200},\\\"isAliStar)/)[0].replace('播放页简介组件\\\",\\\"dataNode\\\":[{\\\"data\\\":', ''));\\n        } catch (e) {\\n            影片信息 = '';\\n        }\\n    }\\n}\\nif (影片信息) {\\n    状态 = 影片信息.subTitles[1].subtitle;\\n    if (状态 == undefined) {\\n        状态 = '完结';\\n    }\\n    setResult(状态);\\n} else {\\n    try {\\n        影片地图 = JSON.parse(html.match(/\\\"videoMap\\\":[\\\\S\\\\s]+(?=,\\\"pushInfo\\\")/)[0].replace('\\\"videoMap\\\":', ''));\\n        状态 = 影片地图.episodeLast;\\n        总集数 = 影片地图.episodeTotal;\\n        if (状态 < 总集数) {\\n            setResult('更新至：' + 状态 + ',共' + 总集数 + '集');\\n        } else {\\n            setResult('已完结,共' + 总集数 + '集');\\n        }\\n    } catch (e) {\\n        setResult('获取数据失败');\\n    }\\n}\"}]","proxy":"","icon":"https://files.codelife.cc/website/youku.svg"}
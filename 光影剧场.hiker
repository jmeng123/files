{"firstHeader":"class","last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"豆列搜索","path":"DouList","rule":"function searchDouList(word, page) {\r\n    let url = 'https://m.so.com/nextpage?q=inurl：doulist+' + word + '&src=msearch_next_input&sug_pos=&sug=&nlpv=&ssid=&srcg=home_next&pn=' + page + '&ajax=1&psid=e8be2ac65d3562b65368248088ff0c82'\r\n    let temp = [];\r\n    let code = pdfa(fetch(url), 'body&&.res-list[data-pcurl]');\r\n    for (let i in code) {\r\n        temp.push({\r\n            title: pdfh(code[i], '.res-title&&Text'),\r\n            desc: pdfh(code[i].replace(pdfh(code[i], '.res-title&&Html'), ''), '.res-list&&Text'),\r\n            url: 'hiker://page/getDouList?page=fypage',\r\n            extra: {\r\n                id: pdfh(code[i], '.res-list&&data-pcurl').match(/\\d+/g)[0],\r\n                code: code[i]\r\n            },\r\n            col_type: 'text_1'\r\n        });\r\n        let list = pdfa(code[i], '.res-list&&li').slice(0, 3);\r\n        for (let j in list) {\r\n            temp.push({\r\n                title: pdfh(list[j], '.title&&Text'),\r\n                url: 'hiker://search?s=' + pdfh(list[j], '.title&&Text').split(' ',2)[0] + '&rule=' + MY_RULE.title,\r\n                pic_url: 'https:' + pdfh(list[j], 'img&&data-delay-src||src'),\r\n                col_type: 'movie_3'\r\n            });\r\n        }\r\n        temp.push({\r\n            col_type: 'line_blank'\r\n        });\r\n        temp.push({\r\n            col_type: 'big_blank_block'\r\n        });\r\n    }\r\n    return temp;\r\n}\r\n$.exports = {\r\n    'searchDouList': searchDouList\r\n}"},{"col_type":"movie_3","name":"函数","path":"function","rule":"function getVideoUrl(url) {\n    return $(url).lazyRule(() => {\n        var parse = JSON.parse(readFile('parse.json'));\n        if (parse.length != 0) {\n            var videoUrl = {}\n            videoUrl.names = [];\n            videoUrl.urls = [];\n            for (var i in parse) {\n                videoUrl.names.push(parse[i].name);\n                videoUrl.urls.push('video://'+parse[i].url + input+'#isVideo=true#');\n            }\n            return videoUrl;\n        } else {\n            return input;\n        }\n    })\n}\n\nfunction getEpisodes(id) {\n    let sources = new Array();\n    let html = fetchPC('https://movie.douban.com/subject/' + id + '/');\n    let sources_list = html.match(/sources\\[[(1)(3)(7)(8)(9)(17)]{1}\\][\\s\\S]*?\\]/g)\n    if (sources_list == null) {\n        let script_list = parseDomForArray(html, 'body&&script[src]');\n        for (let i in script_list) {\n            var sources_url = parseDomForHtml(script_list[i], 'script&&src').indexOf('mixed_static') != -1 ? (parseDomForHtml(script_list[i], 'script&&src')) : sources_url\n        }\n        let sources_list = request(sources_url).match(/sources\\[[(1)(3)(7)(8)(9)(17)]{1}\\][\\s\\S]*?\\]/g);\n    }\n    let sources_title = ['', '腾讯视频', '', '优酷视频', '', '', '', '芒果TV', '哔哩哔哩', '爱奇艺视频', '', '', '', '', '', '', '', '西瓜视频'];\n    if (sources_list != null) {\n        sources_list.map((item) => {\n            eval(unescape(item));\n        })\n        let playList = new Array();\n        for (let i in sources) {\n            if (sources[i] != null) {\n                playList.push({\n                    title: sources_title[i],\n                    list: sources[i].map((item) => {\n                        return {\n                            play_link: parseQueryString(item.play_link).url,\n                            ep: '第' + item.ep + '集'\n                        };\n                    })\n                })\n            }\n        }\n        for (let i in playList) {\n            for (let j = 0; j < playList.length - i; j++) {\n                if (playList[j + 1] != undefined) {\n                    if (playList[j].list.length < playList[j + 1].list.length) {\n                        let temp = null;\n                        temp = playList[j];\n                        playList[j] = playList[j + 1];\n                        playList[j + 1] = temp;\n                    }\n                } else {\n                    break;\n                }\n            }\n        }\n        let update = playList.map((item) => {\n            return item.title + '更新至' + item.list[item.list.length - 1].ep;\n        }).join('｜');\n        return {\n            update: update,\n            playList: playList\n        };\n    } else {\n        return {\n            update: '暂时未获取到更新情况',\n            playList: null\n        };\n    }\n}\n\nfunction colorHtml(color, text) {\n    return '‘‘’’<font color=\"' + color + '\">' + text + '</font>';\n};\n\nfunction getCollection() {\n    let collection = JSON.parse(fetch('hiker://collection'));\n    let newCollection = [];\n    collection.map((item) => {\n        try {\n            if (item.mITitle != '网页浏览' && JSON.parse(item.params).title == MY_RULE.title && item.cUrl == 'hiker://page/sources#immersiveTheme#') {\n                newCollection.push(item);\n            }\n        } catch (e) {}\n    });\n    return newCollection;\n}\n\n\nfunction parseQueryString(url) {\n    var str = url.split('?', 2)[1];\n    var arr = str.split('&');\n    var obj = {};\n    for (var i = 0; i < arr.length; i++) {\n        var arr2 = arr[i].split('=');\n        obj[arr2[0]] = arr2[1];\n    }\n    return obj;\n}\n\nfunction getDoubanRes(url) {\n    //log(url)\n    var cc = null;\n    if ($.type(url) == 'object') {\n        cc = url.cc;\n        url = url.url;\n    }\n    var _url = url;\n    if (url.indexOf('apikey') === -1) {\n        _url += (url.indexOf('?') === -1 ? '?' : '&') + \"apikey=0dad551ec0f84ed02907ff5c42e8ec70\"\n    }\n    let _ts = parseInt(Date.now() / 1000).toString();\n    let m = 'GET&' + encodeURIComponent(url.split('douban.com')[1].split('?')[0]) + '&' + _ts;\n    eval(getCryptoJS());\n    let _sig = hexToBase64(CryptoJS.HmacSHA1(m, 'bf7dddc7c9cfe6f7').toString());\n    _url += '&_sig=' + _sig + '&_ts=' + _ts;\n    //let cookieCache = 'hiker://files/cache/doubancookie.txt';\n    let s = fetch(_url, {\n        headers: {\n            //'Cookie': fetch(cookieCache),\n            \"User-Agent\": \"Rexxar-Core/0.1.3 api-client/1 com.douban.frodo/7.9.0.beta2(215) Android/25 product/TAS-AL00 vendor/HUAWEI model/TAS-AL00  rom/android  network/wifi  platform/mobile com.douban.frodo/7.9.0.beta2(215) Rexxar/1.2.151  platform/mobile 1.2.151\"\n        },\n        method: 'GET'\n        //body: 'host=frodo.douban.com'\n    });\n    let json = JSON.parse(s);\n    if (json.localized_message) {\n        cc = cc == null ? 1 : cc + 1;\n        log('重试次数:' + cc);\n        if (cc > 5) {\n            throw new Error('超时')\n        }\n        java.lang.Thread.sleep(2000);\n        return getDoubanRes({\n            url: url,\n            cc: cc\n        });\n    } else {\n        return json;\n    }\n}\n\nfunction star(number) {\n    let text = '';\n    for (let i = 0; i < 5; i++) {\n        text = text + (i * 2 < number ? '★' : '☆')\n    }\n    return text;\n};\n\n$.exports = {\n    'parseQueryString': parseQueryString,\n    'getDoubanRes': getDoubanRes,\n    'star': star,\n    'colorHtml': colorHtml,\n    'getEpisodes': getEpisodes,\n    'getVideoUrl': getVideoUrl\n}"},{"col_type":"movie_3","name":"豆列详情","path":"getDouList","rule":"js:\nlet getDoubanRes = $.require('function').getDoubanRes;\nlet page = MY_PAGE;\nlet count = 50;\n\n    let data = getDoubanRes(\"https://frodo.douban.com/api/v2/doulist/\" + MY_PARAMS.id + \"/posts\" + '?playable=' + '0' + (page ? \"&start=\" + (page - 1) * count + \"&count=\" + count : \"&start=0&count=50\")).items.map((item) => {\n        return {\n            desc: item.content.subject.card_subtitle,\n            title: item.content.subject.rating == null ? (item.content.subject.title + '(' + item.content.subject.null_rating_reason + ')\\n\\n' + '上映时间:' + item.content.subject.pubdate) : (item.content.subject.title + '(' + item.content.subject.rating.value + '分)' + '\\n\\n上映时间:' + item.content.subject.pubdate),\n            pic_url: item.content.subject.pic.large + '@Referer=https://m.douban.com/',\n            url: 'hiker://page/movieDetail#noHistory##immersiveTheme#',\n            col_type: 'movie_1_vertical_pic',\n            extra: {\n                id: item.content.subject.id,\n                title: item.content.subject.title,\n                target_type: item.content.subject.subtype\n            }\n        }\n    })\ntry {\n} catch (e) {\n    let data = [{\n        title: '这个豆列没有影片',\n        col_type: 'text_center_1'\n    }]\n}\n\n\nsetResult(data);"},{"col_type":"movie_3","name":"影视筛选","path":"allMovies","rule":"js:\nlet getDoubanRes = $.require('function').getDoubanRes;\nlet page = getParam('page');\nif (!getMyVar('classlist')) {\n    putMyVar('classlist', JSON.stringify({\n        subtype: \"\",\n        local: \"\",\n        year: \"\",\n        class: \"\",\n        rank: \"U\",\n        type: \"\",\n        filter: \"\",\n        score: \"0,10\"\n    }));\n}\nlet a = [];\nlet temp = JSON.parse(getMyVar('classlist'));\nlet color = '#FF5D50';\nlet items = {\n    subtype: [\"全部形式\", \"电影\", \"电视剧\", \"综艺\", \"动漫\", \"纪录片\", \"短片\"],\n    local: [\"全部地区\", \"自定义地区\", \"中国大陆\", \"美国\", \"中国香港\", \"中国台湾\", \"日本\", \"韩国\", \"英国\", \"法国\", \"德国\", \"意大利\", \"西班牙\", \"印度\", \"泰国\", \"俄罗斯\", \"伊朗\", \"加拿大\", \"澳大利亚\", \"爱尔兰\", \"瑞典\", \"巴西\", \"丹麦\"],\n    type: [\"全部类型\", \"自定义类型\", \"剧情\", \"喜剧\", \"动作\", \"爱情\", \"科幻\", \"动画\", \"悬疑\", \"惊悚\", \"恐怖\", \"犯罪\", \"同性\", \"音乐\", \"歌舞\", \"传记\", \"历史\", \"战争\", \"西部\", \"奇幻\", \"冒险\", \"灾难\", \"武侠\", \"\\u60c5\\u8272\"],\n    year: [\"全部年代\", \"自定义年份\", \"2020年代\", \"2010年代\", \"2000年代\", \"90年代\", \"80年代\", \"70年代\", \"60年代\", \"更早\"],\n    class: [\"全部特色\", \"自定义标签\", \"经典\", \"青春\", \"文艺\", \"搞笑\", \"励志\", \"魔幻\", \"感人\", \"女性\", \"黑帮\", \"治愈\", \"美食\", \"宗教\", \"小说改编\", \"超级英雄\"]\n}\nfor (item in items) {\n    for (let i = 0; i < items[item].length; i++) {\n        let title = \"\";\n        if (temp[item] == items[item][i] || (temp[item] == \"\" && i == 0)) {\n            title = '““””<b> <font color=' + color + '>' + items[item][i] + ' </font></b>';\n        } else {\n            title = items[item][i];\n        }\n        let url = $('hiker://empty#noLoading#').lazyRule((text, item) => {\n            let temp = JSON.parse(getMyVar('classlist'));\n            temp[item] = text.indexOf(\"全部\") != -1 ? \"\" : text;\n            putMyVar(\"classlist\", JSON.stringify(temp));\n            refreshPage();\n            return 'hiker://empty'\n        }, items[item][i], item);\n\n        if (items[item][i] == \"自定义年份\") {\n            if (temp.year == \"自定义年份\") {\n                title = '““””<b> <font color=' + color + '>自定义年份:' + temp.customYear + ' </font></b>';\n            }\n\n            url = $(temp.customYear, '直接输入具体年份,例如2000').input(() => {\n                let temp = JSON.parse(getMyVar('classlist'));\n                if (input.length == 4) {\n                    temp.customYear = input;\n                    temp.year = \"自定义年份\";\n                    putMyVar(\"classlist\", JSON.stringify(temp));\n                    refreshPage();\n                    return 'hiker://empty'\n                } else {\n                    return 'toast://请正确输入'\n                }\n            });\n        } else if (items[item][i] == \"自定义地区\") {\n            if (temp.local == \"自定义地区\") {\n                title = '““””<b> <font color=' + color + '>自定义地区:' + temp.customLocal + ' </font></b>';\n            }\n\n            url = $(temp.customLocal, '直接输入具体地区,例如中国大陆').input(() => {\n                let temp = JSON.parse(getMyVar('classlist'));\n                if (input.length > 0) {\n                    temp.customLocal = input;\n                    temp.local = \"自定义地区\";\n                    putMyVar(\"classlist\", JSON.stringify(temp));\n                    refreshPage();\n                    return 'hiker://empty'\n                } else {\n                    return 'toast://请正确输入'\n                }\n            });\n        } else if (items[item][i] == \"自定义类型\") {\n            if (temp.type == \"自定义类型\") {\n                title = '““””<b> <font color=' + color + '>自定义类型:' + temp.customType + ' </font></b>';\n            }\n\n            url = $(temp.customType, '直接输入具体类型,例如剧情').input(() => {\n                let temp = JSON.parse(getMyVar('classlist'));\n                if (input.length > 0) {\n                    temp.customType = input;\n                    temp.type = \"自定义类型\";\n                    putMyVar(\"classlist\", JSON.stringify(temp));\n                    refreshPage();\n                    return 'hiker://empty'\n                } else {\n                    return 'toast://请正确输入'\n                }\n            });\n        } else if (items[item][i] == \"自定义标签\") {\n            if (temp.class == \"自定义标签\") {\n                title = '““””<b> <font color=' + color + '>自定义标签:' + temp.customClass + ' </font></b>';\n            }\n\n            url = $(temp.customClass, '直接输入具体标签,例如经典\\n可写多个标签,使用\"英文逗号\"分隔').input(() => {\n                let temp = JSON.parse(getMyVar('classlist'));\n                if (input.length > 0) {\n                    temp.customClass = input;\n                    temp.class = \"自定义标签\";\n                    putMyVar(\"classlist\", JSON.stringify(temp));\n                    refreshPage();\n                    return 'hiker://empty'\n                } else {\n                    return 'toast://请正确输入'\n                }\n            });\n        }\n        a.push({\n            title: title,\n            col_type: 'scroll_button',\n            url: url\n        })\n    }\n    a.push({\n        col_type: 'blank_block'\n    })\n}\nlet rank = {\n    默认排序: \"U\",\n    热度: \"T\",\n    评分: \"S\",\n    时间: \"R\"\n}\nfor (let r in rank) {\n    a.push({\n        title: temp.rank === rank[r] ? '““””<b> <font color=' + color + '>' + r + ' </font></b>' : r,\n        col_type: 'scroll_button',\n        url: $('hiker: //empty#noLoading#').lazyRule((e) => {\n            let temp = JSON.parse(getMyVar('classlist'));\n            temp.rank = e;\n            putMyVar(\"classlist\", JSON.stringify(temp));\n            refreshPage();\n            return 'hiker://empty'\n        }, rank[r])\n    })\n}\na.push({\n    col_type: 'blank_block'\n})\nlet filter = {\n    全部影片: '',\n    仅有片源: 'playable'\n}\nfor (let r in filter) {\n    a.push({\n        title: temp.filter === filter[r] ? '““””<b> <font color=' + color + '>' + r + ' </font></b>' : r,\n        col_type: 'scroll_button',\n        url: $('hiker: //empty#noLoading#').lazyRule((e) => {\n            let temp = JSON.parse(getMyVar('classlist'));\n            temp.filter = e;\n            putMyVar(\"classlist\", JSON.stringify(temp));\n            refreshPage();\n            return 'hiker://empty'\n        }, filter[r])\n    })\n}\na.push({\n    title: '““””<b> <font color=' + color + '>评分区间:' + temp.score.replace(',', '-') + ' </font></b>',\n    col_type: 'scroll_button',\n    url: $(temp.score.replace(',', '-'), '评分应在0-10之间').input(() => {\n        let temp = JSON.parse(getMyVar('classlist'));\n        let inputs = input.split('-');\n        if (inputs.length == 2 && inputs.every(e => e >= 0 && e <= 10) && parseFloat(inputs[0]) < inputs[1]) {\n            temp.score = input.replace('-', ',');\n            putMyVar(\"classlist\", JSON.stringify(temp));\n            refreshPage();\n            return 'hiker://empty'\n        } else {\n            return 'toast://请正确输入'\n        }\n    })\n})\n\nlet count = 15;\nlet url = \"https://frodo.douban.com/api/v2/movie/tag?\" +\n    (page ? \"start=\" + (page - 1) * count +\n        \"&count=\" + count : \"start=0&count=30\") +\n    \"&q=\" + temp.subtype +\n    \",\" + (temp.local == \"自定义地区\" ? temp.customLocal : temp.local) +\n    \",\" + (temp.type == \"自定义类型\" ? temp.customType : temp.type) +\n    \",\" + (temp.year == \"自定义年份\" ? temp.customYear : temp.year) +\n    \",\" + (temp.class == \"自定义标签\" ? temp.customClass : temp.class) +\n    \"&sort=\" + temp.rank + \"&score_range=\" + temp.score + '&filter=' + temp.filter;\ngetDoubanRes(url).data.map((item) => {\n    a.push({\n        desc: item.card_subtitle,\n        title: item.rating == null ? (item.title + '(' + item.null_rating_reason + ')\\n\\n' + '上映时间:' + item.pubdate) : (item.title + '(' + item.rating.value + '分)' + '\\n\\n上映时间:' + item.pubdate),\n        pic_url: item.pic.large + '@Referer=https://m.douban.com/',\n        url: 'hiker://page/movieDetail#noHistory##immersiveTheme#',\n        col_type: 'movie_1_vertical_pic',\n        extra: {\n            id: item.id,\n            title: item.title,\n            target_type: item.subtype\n        }\n    });\n});\nif (page > 1) {\n    a.splice(0, a.length - count);\n}\nsetResult(a);"},{"col_type":"movie_3","name":"影片详情","path":"movieDetail","rule":"js:\nlet d = [];\nsetPageTitle(MY_PARAMS.title);\nlet getDoubanRes = $.require('function').getDoubanRes;\nlet colorHtml = $.require('function').colorHtml;\nlet star = $.require('function').star;\nlet json = getDoubanRes('https://frodo.douban.com/api/v2/' + MY_PARAMS.target_type + '/' + MY_PARAMS.id + '?event_source=search');\nsetLastChapterRule('js:' + $.toString(param => {\n    setResult(param)\n}, json.episodes_info));\nd.push({\n    title: json.title + '\\n' + '上映时间：' + json.pubdate,\n    desc: json.card_subtitle,\n    url: 'hiker://empty',\n    pic_url: json.pic.large + '@Referer=https://m.douban.com/',\n    col_type: 'movie_1_vertical_pic_blur',\n}, {\n    title: '演职人员',\n    url: 'hiker://page/workers#noHistory#',\n    pic_url: 'https://s21.ax1x.com/2024/06/09/pkNs9K0.png',\n    extra: {\n        id: MY_PARAMS.id,\n        type: MY_PARAMS.target_type\n    },\n    col_type: 'icon_small_4'\n}, {\n    title: '本片剧照',\n    url: 'hiker://page/photos#noHistory#',\n    extra: {\n        url: 'hiker://empty/api/v2/' + MY_PARAMS.target_type + '/' + MY_PARAMS.id + '/photos?start=fypage&count=50',\n        count: 50,\n        title: '全部剧照'\n    },\n    pic_url: 'https://s21.ax1x.com/2024/06/09/pkNsCrV.png',\n    col_type: 'icon_small_4'\n}, {\n    title: '剧评短评',\n    url: 'hiker://page/review?page=fypage#noHistory#',\n    extra: {\n        id: MY_PARAMS.id,\n        type: MY_PARAMS.target_type\n    },\n    pic_url: 'https://s21.ax1x.com/2024/06/09/pkNsFVU.png',\n    col_type: 'icon_small_4'\n}, {\n    title: '前往追剧',\n    url: 'hiker://page/sources#immersiveTheme#',\n    pic_url: 'https://s21.ax1x.com/2024/06/10/pkN2SBt.png',\n    col_type: 'icon_small_4',\n    extra: {\n        id: MY_PARAMS.id,\n        title: MY_PARAMS.title,\n        episodes_info: json.episodes_info,\n        cover: json.pic.large + '@Referer=https://m.douban.com/',\n        durations: json.durations,\n        type: MY_PARAMS.target_type,\n        content: json.intro\n    }\n}, {\n    col_type: 'line_blank'\n});\nif (json.rating != null) {\n    d.push({\n        title: '‘‘’’<big>豆瓣评分®</big>' + '\\n<big><strong>' + colorHtml('#ffac2d', star(json.rating.value)) + '</strong></big>\\t' + json.rating.value + '分',\n        url: 'hiker://empty',\n        col_type: 'text_center_1'\n    });\n    d.push({\n        col_type: 'line_blank'\n    });\n} else {\n    d.push({\n        title: '暂无评分',\n        url: 'hiker://empty',\n        col_type: 'text_center_1'\n    }, {\n        col_type: 'line_blank'\n    });\n}\nif (json.trailer != null) {\n    d.push({\n        title: '‘‘’’<big>预告花絮</big>',\n        url: 'hiker://empty',\n        col_type: 'text_center_1'\n    }, {\n        title: json.trailer.title,\n        pic_url: json.trailer.cover_url,\n        url: json.trailer.video_url,\n        desc: '预告片',\n        col_type: 'movie_2'\n    }, {\n        title: '更多预告花絮',\n        url: 'hiker://page/trailer#noHistory#',\n        extra: {\n            url: 'https://movie.douban.com/subject/' + MY_PARAMS.id + '/trailer#noHistory#'\n        },\n        pic_url: 'https://cdn.jsdelivr.net/gh/Lingyan000/photos/img/20201104163813.gif',\n        col_type: 'movie_2'\n    }, {\n        col_type: 'line_blank'\n    });\n}\nif (json.intro != '') {\n    d.push({\n        title: '‘‘’’<big>影片简介</big>',\n        url: 'hiker://empty',\n        col_type: 'text_center_1'\n    }, {\n        title: json.intro.replace(/\\s/g, ''),\n        col_type: 'rich_text',\n    }, {\n        col_type: 'line_blank'\n    });\n}\nlet awards = getDoubanRes('https://frodo.douban.com/api/v2/' + MY_PARAMS.target_type + '/' + MY_PARAMS.id + '/awards?count=20');\nif (awards.awards != '') {\n    d.push({\n        title: '‘‘’’<big>获奖情况</big>',\n        url: 'hiker://empty',\n        col_type: 'text_center_1'\n    });\n    awards.awards.map((item) => {\n        d.push({\n            title: item.ceremony.title + '\\t' + item.categories.map((item) => {\n                return item.is_won ? item.category.title : (item.category.title + '（提名）')\n            }).join('/'),\n            pic_url: item.ceremony.pic.large + '@Referer=https://m.douban.com/',\n            url: $(item.ceremony.title + '\\t' + item.categories.map((item) => {\n                return item.is_won ? item.category.title : (item.category.title + '（提名）')\n            }).join('/')).confirm(() => {\n                return input;\n            }),\n            col_type: 'card_pic_3_center'\n        });\n    })\n    d.push({\n        col_type: 'line_blank'\n    });\n}\nd.push({\n    title: '‘‘<small>以上数据来源于豆瓣，如您喜欢，请下载官方app</small>’’',\n    desc: '““<small>此规则仅限学习交流使用，请于导入后24小时内删除，任何组织或个人不得以任何方式方法传播此规则的整体或部分！</small>””',\n    url: 'https://m.douban.com/movie/',\n    col_type: 'text_center_1'\n});\nsetResult(d);"},{"col_type":"movie_3","name":"追剧","path":"sources","rule":"js:\nsetPageTitle(MY_PARAMS.title);\nsetPagePicUrl(MY_PARAMS.cover);\nlet getEpisodes = $.require('function').getEpisodes;\nlet getVideoUrl = $.require('function').getVideoUrl;\nlet Episodes = getEpisodes(MY_PARAMS.id);\nlet d = [];\ngetItem('sequence' + MY_PARAMS.id, '1') == '0' ? Episodes.playList.map((item) => {\n    return {\n        title: item.title,\n        list: item.list.reverse()\n    }\n}) : 0;\nd.push({\n    title: MY_PARAMS.title + '\\n' + MY_PARAMS.episodes_info,\n    desc: MY_PARAMS.type == 'movie' ? ('影片时长：' + MY_PARAMS.durations) : ('单集时长：' + MY_PARAMS.durations),\n    pic_url: MY_PARAMS.cover,\n    url: 'hiker://empty',\n    col_type: 'movie_1_vertical_pic_blur'\n}, {\n    title: '相关搜索',\n    url: 'hiker://search?s=' + MY_PARAMS.title.replace(/\\s第[一二三四五六七八九十百]{1,5}季/g, ''),\n    pic_url: 'https://s21.ax1x.com/2024/06/10/pkN2pHP.png',\n    col_type: 'icon_small_4'\n}, {\n    title: '切换排序',\n    url: $('#noLoading#').lazyRule((id) => {\n        getItem('sequence' + id, '1') == 1 ? setItem('sequence' + id, '0') : setItem('sequence' + id, '1');\n        refreshPage();\n        return 'hiker://empty';\n    }, MY_PARAMS.id),\n    pic_url: 'https://s21.ax1x.com/2024/06/10/pkN2CAf.png',\n    col_type: 'icon_small_4'\n}, {\n    title: '剧评短评',\n    url: 'hiker://page/review?page=fypage#noHistory#',\n    pic_url: 'https://s21.ax1x.com/2024/06/09/pkNsFVU.png',\n    extra: {\n        id: MY_PARAMS.id,\n        type: MY_PARAMS.type\n    },\n    col_type: 'icon_small_4'\n}, {\n    title: '解析设置',\n    url: 'hiker://page/parse#noHistory#',\n    pic_url: 'https://s21.ax1x.com/2024/06/10/pkN2i4S.png',\n    col_type: 'icon_small_4'\n}, {\n    col_type: 'line_blank'\n}, {\n    col_type: 'big_blank_block'\n}, {\n    col_type: 'big_blank_block'\n});\nif (Episodes.playList != null) {\n    d.push({\n        title: '全部片源',\n        col_type: 'scroll_button',\n        url: $('#noLoading#').lazyRule((id) => {\n            setItem('sources' + id, '全部片源');\n            refreshPage();\n            return 'hiker://empty';\n        }, MY_PARAMS.id)\n    });\n} else {\n    d.push({\n        title: '暂无片源',\n        url: 'hiker://empty',\n        col_type: 'text_center_1'\n    }, {\n        col_type: 'line_blank'\n    });\n}\n\nfor (let i in Episodes.playList) {\n    d.push({\n        title: getItem('sources' + MY_PARAMS.id, '全部片源') == Episodes.playList[i].title ? ('‘‘' + Episodes.playList[i].title + '’’') : Episodes.playList[i].title,\n        col_type: 'scroll_button',\n        url: $('#noLoading#').lazyRule((id, sources) => {\n            setItem('sources' + id, sources);\n            refreshPage();\n            return 'hiker://empty';\n        }, MY_PARAMS.id, Episodes.playList[i].title)\n    });\n}\nfor (let i in Episodes.playList) {\n    d.push({\n        col_type: 'line'\n    });\n    if (getItem('sources' + MY_PARAMS.id, '全部片源') == '全部片源' || getItem('sources' + MY_PARAMS.id, '全部片源') == Episodes.playList[i].title) {\n        d.push({\n            title: Episodes.playList[i].title,\n            col_type: 'text_center_1',\n            url: 'hiker://empty'\n        });\n        for (let j in Episodes.playList[i].list) {\n            d.push({\n                title: Episodes.playList[i].list[j].ep,\n                url: getVideoUrl(Episodes.playList[i].list[j].play_link),\n                extra: {\n                    id: Episodes.playList[i].list[j].play_link\n                },\n                col_type: 'text_3',\n            });\n        }\n    }\n    d.push({\n        col_type: 'line_blank'\n    });\n}\nd.push({\n    title: '‘‘<small>以上数据来源于豆瓣，如您喜欢，请下载官方app</small>’’',\n    desc: '““<small>此规则仅限学习交流使用，请于导入后24小时内删除，任何组织或个人不得以任何方式方法传播此规则的整体或部分！</small>””',\n    url: 'https://m.douban.com/movie/#noHistory#',\n    col_type: 'text_center_1'\n});\nsetResult(d);"},{"col_type":"movie_3","name":"院线热映","path":"nowplaying","rule":"js:\nlet colorHtml=$.require('function').colorHtml;\nlet getDoubanRes=$.require('function').getDoubanRes;\nvar d = [];\nvar tabs = [{\n    name: '热度',\n    type: 'recommend'\n}, {\n    name: '时间',\n    type: 'time'\n}, {\n    name: '评分',\n    type: 'rank'\n}];\ntabs.map((item) => {\n    d.push({\n        title: getMyVar('nowplayingType', 'recommend') == item.type ? colorHtml('#FF5D50', item.name) : item.name,\n        url: $('#noLoading#').lazyRule((type) => {\n            putMyVar('nowplayingType', type);\n            refreshPage();\n            return 'hiker://empty';\n        }, item.type),\n        col_type: 'flex_button'\n    });\n})\nd.push({\n    col_type: \"line_blank\"\n});\ngetDoubanRes('https://frodo.douban.com/api/v2/movie/movie_showing?area=全部&sort=' + getMyVar('nowplayingType', 'recommend') + '&playable=0&loc_id=108288&start=0&count=50').items.map((item) => {\n    d.push({\n        title: item.rating != null ? (item.title + '(' + item.rating.value + '分)\\n' + item.card_subtitle) : (item.title + '(暂无评分)\\n' + item.card_subtitle),\n        desc: item.comment,\n        pic_url: item.pic.large + '@Referer=https://m.douban.com/',\n        url: 'hiker://page/movieDetail#noHistory##immersiveTheme#',\n        col_type: 'movie_1_vertical_pic',\n        extra: {\n            title: item.title,\n            id: item.id,\n            target_type: item.type\n        }\n    })\n})\nsetResult(d);"},{"col_type":"movie_3","name":"预告花絮","path":"trailer","rule":"js:\nlet getDoubanRes = $.require('function').getDoubanRes;\nlet d = [];\npdfa(getResCode(), 'body&&.mod').map((item) => {\n    d.push({\n        title: pdfh(item, 'h2&&Text').replace(/[\\s·]/g, ''),\n        col_type: 'text_1',\n        url: 'hiker://empty'\n    });\n    pdfa(item, 'ul&&li').map((item) => {\n        d.push({\n            title: pdfh(item, 'a:not([class])&&Text'),\n            desc: pdfh(item, 'em&&Text'),\n            pic_url: pdfh(item, 'img&&src'),\n            url: $(pdfh(item, 'a&&href')).lazyRule(() => {\n                return request(input, {}).match(/http.*?mp4/)[0];\n            }),\n            col_type: 'movie_2'\n        });\n    })\n})\nsetResult(d);"},{"col_type":"movie_3","name":"剧照","path":"photos","rule":"js:\nsetPageTitle(MY_PARAMS.title);\nlet getDoubanRes = $.require('function').getDoubanRes;\nsetResult(getDoubanRes(MY_PARAMS.url.replace('hiker://empty', 'https://frodo.douban.com').replace('fypage', (parseInt(getParam('start')) - 1) * MY_PARAMS.count)).photos.map((item) => {\n    return {\n        desc: '0',\n        pic_url: item.image.large.url + '@Referer=https://m.douban.com/',\n        url: item.image.large.url + '@Referer=https://m.douban.com/',\n        col_type: 'card_pic_2'\n    }\n}))"},{"col_type":"movie_3","name":"演职员","path":"workers","rule":"js:\nlet getDoubanRes = $.require('function').getDoubanRes;\nsetResult(getDoubanRes('https://frodo.douban.com/api/v2/' + MY_PARAMS.type + '/' + MY_PARAMS.id + '/credits_stats?start=0&count=100').items.map((item) => {\n    return {\n        title: item.name + '\\n' + item.character,\n        desc: '0',\n        pic_url: item.avatar.normal + '@Referer=https://m.douban.com/',\n        url: 'hiker://page/workerDetail#noHistory##immersiveTheme#',\n        extra: {\ntest:item,\n            wid: item.id,\n            id: item.uri.split('subject_id=')[1],\n            name: item.name\n        },\n        col_type: 'card_pic_3_center'\n    }\n}));"},{"col_type":"movie_3","name":"演员全部作品","path":"allWorks","rule":"js:\nsetPageTitle('全部作品');\nlet getDoubanRes = $.require('function').getDoubanRes;\nlet url = 'https://frodo.douban.com/api/v2/elessar/work_collections/' + MY_PARAMS.id + '/works?start=' + 30 * (MY_PAGE - 1) + '&count=30&collection_title=' + MY_PARAMS.type;\nsetResult(getDoubanRes(url).works.map((item) => {\n    return {\n        title: item.subject.title,\n        desc: item.subject.extra.rating_group.rating != null ? (item.subject.extra.rating_group.rating.value + '分') : item.subject.extra.rating_group.null_rating_reason,\n        pic_url: item.subject.cover.large.url + '@Referer=https://m.douban.com/',\n        url: 'hiker://page/movieDetail#noHistory##immersiveTheme#',\n        extra: {\n            id: item.subject.id,\n            title: item.subject.title,\n            target_type: item.subject.subtype\n        },\n        col_type: 'movie_3'\n    }\n}))"},{"col_type":"movie_3","name":"演员详情","path":"workerDetail","rule":"js:\nsetPageTitle(MY_PARAMS.name);\nlet getDoubanRes = $.require('function').getDoubanRes;\nlet json = getDoubanRes('https://frodo.douban.com/api/v2/elessar/subject/' + MY_PARAMS.id + '?channel=Douban');\nlet d = [];\nd.push({\n    title: json.title,\n    desc: json.extra.short_info,\n    pic_url: json.cover_img.url + '@Referer=https://m.douban.com/',\n    url: 'hiker://empty',\n    col_type: 'movie_1_vertical_pic_blur'\n}, {\n    col_type: 'line'\n}, {\n    title: pdfh(json.desc, '.content&&Text').replace(/[\\s\\n\\t]/g, ''),\n    col_type: 'rich_text'\n});\nd.push({\n    col_type: 'line_blank'\n}, {\n    title: '作品集',\n    desc: '共' + json.modules[1].payload.collections[0].total + '部',\n    url: 'hiker://empty',\n    col_type: 'text_center_1'\n});\njson.modules[1].payload.collections[0].works.map((item, i) => {\n    if (i < 6) {\n        d.push({\n            title: item.subject.title,\n            desc: item.subject.extra.rating_group.rating != null ? (item.subject.extra.rating_group.rating.value + '分') : item.subject.extra.rating_group.null_rating_reason,\n            pic_url: item.subject.cover.large.url + '@Referer=https://m.douban.com/',\n            url: 'hiker://page/movieDetail#noHistory##immersiveTheme#',\n            extra: {\n                id: item.subject.id,\n                title: item.subject.title,\n                target_type: item.subject.subtype\n            },\n            col_type: 'movie_3'\n        });\n    }\n});\nd.push({\n    col_type: 'line'\n}, {\n    title: '查看全部作品',\n    url: 'hiker://page/allWorks?page=fypage#noHistory#',\n    extra: {\n        id:json.modules[1].payload.id,\ntype:json.modules[1].payload.collections[0].title\n    },\n    col_type: 'text_center_1'\n});\nd.push({\n    col_type: 'line_blank'\n}, {\n    title: '相册',\n    desc: '共' + json.modules[2].payload.total + '张',\n    url: 'hiker://empty',\n    col_type: 'text_center_1'\n});\njson.modules[2].payload.photos.map((item, i) => {\n    if (i < 4) {\n        d.push({\n            desc: '0',\n            pic_url: item.image.large.url + '@Referer=https://m.douban.com/',\n            url: item.image.large.url + '@Referer=https://m.douban.com/',\n            col_type: 'card_pic_2'\n        })\n    }\n});\nd.push({\n    col_type: 'line'\n}, {\n    title: '查看全部照片',\n    url: 'hiker://page/photos#noHistory#',\n    extra: {\n        url: 'hiker://empty/api/v2/celebrity/' + MY_PARAMS.wid + '/photos?start=fypage&count=30',\n        count: 30,\n        title: '全部照片'\n    },\n    col_type: 'text_center_1'\n});\nif(json.modules[3].payload!=null){\n    d.push({\n        col_type: 'line_blank'\n    }, {\n        title: '获奖经历',\n        desc: '共' + json.modules[3].payload.total + '次',\n        url: 'hiker://empty',\n        col_type: 'text_center_1'\n    });\n    json.modules[3].payload.awards.map((item, i) => {\n        d.push({\n            title: item.ceremony.title + '\\n' + item.is_won ? ('获得奖项:' + item.ceremony.title) : ('获得奖项:' + item.ceremony.title + '（提名）'),\n            desc: '0',\n            pic_url: item.ceremony.pic.large + '@Referer=https://m.douban.com/',\n            url: $(item.ceremony.title + '\\n' + item.is_won ? ('获得奖项:' + item.ceremony.title) : ('获得奖项:' + item.ceremony.title + '（提名）')).confirm(() => {\n                return input\n            }),\n            col_type: 'card_pic_3_center'\n        })\n    });\n};\nd.push({\n    col_type: 'line_blank'\n}, {\n    title: '‘‘<small>以上数据来源于豆瓣，如您喜欢，请下载官方app</small>’’',\n    desc: '““<small>此规则仅限学习交流使用，请于导入后24小时内删除，任何组织或个人不得以任何方式方法传播此规则的整体或部分！</small>””',\n    url: 'https://m.douban.com/movie/',\n    col_type: 'text_center_1'\n});\nsetResult(d);"},{"col_type":"movie_3","name":"搜索","path":"search","rule":"function searchMovie(word, page) {\n    let getDoubanRes = $.require('function').getDoubanRes;\n    let star = $.require('function').star;\n    let url = 'https://frodo.douban.com/api/v2/search/subjects?q=' + word + '&type=movie&start=' + ((page - 1) * 20);\n    let list = getDoubanRes(url).items\n    return list.map((item) => {\n        if (item.target_type == 'tv' || item.target_type == 'movie') {\n            return {\n                title: item.target.title,\n                content: item.target.rating == null ? (item.target.null_rating_reason + '\\n' + item.target.card_subtitle) : (star(item.target.rating.value) + '\\n' + item.target.card_subtitle),\n                desc: '上映年份：' + item.target.year,\n                pic_url: item.target.cover_url + '@Referer=https://m.douban.com/',\n                url: 'hiker://page/movieDetail#noHistory##immersiveTheme#',\n                col_type: 'movie_1_vertical_pic',\n                extra: {\n                    id: item.target.id,\n                    title: item.target.title,\n                    target_type: item.target_type\n                }\n            }\n        }\n    })\n}\n\nfunction searchDouList(word, page) {\n    let url = 'https://m.so.com/nextpage?q=inurl：doulist+' + word + '&src=msearch_next_input&sug_pos=&sug=&nlpv=&ssid=&srcg=home_next&pn=' + page + '&ajax=1&psid=e8be2ac65d3562b65368248088ff0c82'\n    let temp = [];\n    let code = pdfa(fetch(url), 'body&&.res-list[data-pcurl]');\n    for (let i in code) {\n        temp.push({\n            title: pdfh(code[i], '.res-title&&Text'),\n            desc: pdfh(code[i].replace(pdfh(code[i], '.res-title&&Html'), ''), '.res-list&&Text'),\n            url: 'hiker://page/getDouList?page=fypage',\n            extra: {\n                id: pdfh(code[i], '.res-list&&data-pcurl').match(/\\d+/g)[0],\n                code: code[i]\n            },\n            col_type: 'text_1'\n        });\n        let list = pdfa(code[i], '.res-list&&li').slice(0, 3);\n        for (let j in list) {\n            temp.push({\n                title: pdfh(list[j], '.title&&Text'),\n                url: 'hiker://search?s=' + pdfh(list[j], '.title&&Text').split(' ', 2)[0] + '&rule=' + MY_RULE.title,\n                pic_url: 'https:' + pdfh(list[j], 'img&&data-delay-src||src'),\n                col_type: 'movie_3'\n            });\n        }\n        temp.push({\n            col_type: 'line_blank'\n        });\n        temp.push({\n            col_type: 'big_blank_block'\n        });\n    }\n    return temp;\n}\n$.exports = {\n    'searchMovie': searchMovie,\n    'searchDouList': searchDouList\n}"},{"col_type":"movie_3","name":"剧评","path":"review","rule":"js:\nlet colorHtml = $.require('function').colorHtml;\nlet reviewTabs = [\"热门剧评\", \"最新剧评\", \"热门短评\", \"最新短评\", ];\nlet reviewKey = getItem(\"reviewKey\", \"热门剧评\");\nlet d = [];\nif (MY_PAGE == 1) {\n    d.push({\n        col_type: 'big_blank_block'\n    });\n    for (let i in reviewTabs) {\n        d.push({\n            title: reviewKey == reviewTabs[i] ? colorHtml('#FF5D50', reviewTabs[i]) : reviewTabs[i],\n            col_type: 'scroll_button',\n            url: $('hiker://empty?key=' + reviewTabs[i]).lazyRule(() => {\n                let parseQueryString = $.require('function').parseQueryString;\n                setItem(\"reviewKey\", parseQueryString(input).key);\n                refreshPage();\n                return 'toast://已切换为' + parseQueryString(input).key;\n            })\n        });\n    };\n}\n\nfunction longReview(data, key, type, id, page) {\n    let getDoubanRes = $.require('function').getDoubanRes;\n    let star = $.require('function').star;\n    let count = (15 * (parseInt(page) - 1)).toString();\n    let url = \"https://frodo.douban.com/api/v2/\" + type + \"/\" + id + \"/reviews?start=\" + count + \"&count=15&order_by=\" + key;\n    let code = getDoubanRes(url);\n    if (page == 1) {\n        data.push({\n            col_type: \"blank_block\"\n        });\n        data.push({\n            title: \"<big>共<strong> \" + code.total + \" </strong>条剧评</big>\",\n            col_type: \"rich_text\"\n        });\n    }\n    code.reviews.forEach((e => {\n        let t = \"\";\n        if (e.rating) {\n            t = star(e.rating.value * 2);\n        }\n        let i = e.comments_count ? e.comments_count + \"回复\" : \"\",\n            r = e.useful_count ? e.useful_count + \"有用\" : \"\",\n            o = e.reshares_count ? e.reshares_count + \"转发\" : \"\";\n\n        r = i && r ? \"•\" + r : r;\n        o = (i || r) && o ? \"•\" + o : o;\n        data.push({\n            title: e.user.name,\n            img: e.user.avatar,\n            url: e.user.url,\n            col_type: \"avatar\"\n        })\n        data.push({\n            title: \"<strong>\" + e.title + \"</strong><br/>\" + e.abstract + '   <small>(<a href=\"hiker://empty#noHistory#@rule=js:eval(JSON.parse(fetch(`hiker://page/dramaReviewView`)).rule);dramaReviewView(' + e.id + ')\">更多</a>)</small>' + (t ? '<br/><small>看过 <font color=' + '#ffac2d' + '>' + t + \"</font></small>\" : \"\") + '<br/><small><font color=\"grey\">' + i + r + o + \"</font></small>\",\n            col_type: \"rich_text\"\n        })\n        data.push({\n            col_type: \"line\"\n        })\n\n    }));\n}\n\nfunction shortReview(data, key, type, id, page) {\n    let getDoubanRes = $.require('function').getDoubanRes;\n    let star = $.require('function').star;\n    let count = (30 * (parseInt(page) - 1)).toString();\n    let url = \"https://frodo.douban.com/api/v2/\" + type + \"/\" + id + \"/interests?start=\" + count + \"&count=30&order_by=\" + key;\n    let code = getDoubanRes(url);\n    if (page == 1) {\n        data.push({\n            col_type: \"blank_block\"\n        });\n        data.push({\n            title: \"<big>共<strong> \" + code.total + \" </strong>条短评</big>\",\n            col_type: \"rich_text\"\n        });\n    }\n    code.interests.forEach((e => {\n        let t = \"\";\n        if (e.rating) {\n            t = star(e.rating.value * 2);\n        }\n        data.push({\n            title: e.user.name,\n            img: e.user.avatar,\n            url: e.user.url,\n            col_type: \"avatar\"\n        });\n        data.push({\n            title: e.comment + (t ? '<br/><small>看过 <font color=' + '#ffac2d' + '>' + t + \"</font></small>\" : \"\") + '<br/><small><font color=\"grey\">' + e.vote_count + \"赞•\" + /\\d{4}-\\d{1,2}-\\d{1,2}/g.exec(e.create_time) + \"</font></small>\",\n            col_type: \"rich_text\"\n        });\n        data.push({\n            col_type: \"line\"\n        })\n    }));\n}\nswitch (reviewKey) {\n    default: longReview(d, 'hot', MY_PARAMS.type, MY_PARAMS.id, getParam('page'));\n    break;\n    case \"最新剧评\":\n            longReview(d, 'latest', MY_PARAMS.type, MY_PARAMS.id, getParam('page'))\n        break;\n    case \"热门短评\":\n            shortReview(d, 'hot', MY_PARAMS.type, MY_PARAMS.id, getParam('page'))\n        break;\n    case \"最新短评\":\n            shortReview(d, 'latest', MY_PARAMS.type, MY_PARAMS.id, getParam('page'))\n        break;\n}\n\nsetResult(d);"},{"col_type":"movie_3","name":"主页面","path":"main","rule":"let getEpisodes = $.require('function').getEpisodes;\nlet colorHtml = $.require('function').colorHtml;\nlet getDoubanRes = $.require('function').getDoubanRes;\nlet data = [];\ndata.push({\n    desc: '0',\n    pic_url: 'https://s21.ax1x.com/2024/06/09/pkNrIgI.jpg',\n    url: 'hiker://empty',\n    col_type: 'card_pic_1'\n});\ndata.push({\n    url: $.toString(() => {\n        return $('hiker://empty/search?page=fypage&word=' + input + '#noRecordHistory#').rule(() => {\n            let SMode = getItem(\"searchMode\", \"影片\");\n            if (SMode == \"影片\") {\n                let searchMovie = $.require('search').searchMovie;\n                setResult(searchMovie(getParam('word'), getParam('page')));\n            } else {\n                let searchDouList = $.require('search').searchDouList;\n                setResult(searchDouList(getParam('word'), getParam('page')));\n            }\n        })\n    }),\n    col_type: 'input',\n    title: '搜' + getItem(\"searchMode\", \"影片\")\n});\ndata.push({\n    title: '筛选影片',\n    url: 'hiker://page/allMovies?page=fypage#noHistory#',\n    pic_url: 'https://s21.ax1x.com/2024/06/09/pkNrLVS.png',\n    col_type: 'icon_small_4'\n});\ndata.push({\n    title: '院线热映',\n    url: 'hiker://page/nowplaying#noHistory#',\n    pic_url: 'https://s21.ax1x.com/2024/06/09/pkNrX5Q.png',\n    col_type: 'icon_small_4'\n});\nlet searchMode = ['影片', '豆列'];\ndata.push({\n    title: '搜索模式',\n    pic_url: 'https://s21.ax1x.com/2024/06/10/pkN2pHP.png',\n    url: $(searchMode, 1, \"切换搜索模式\").select(() => {\n        setItem(\"searchMode\", input);\n        refreshPage(false);\n        return \"toast://已切换为\" + input;\n    }),\n    col_type: 'icon_small_4'\n});\nlet hotClass = {\n    \"收藏\": {\n        \"影片\": \"影片\",\n    },\n    \"豆瓣\": {\n        '热门华语电影': 'hot_gaia?area=华语',\n        '热门欧美电影': 'hot_gaia?area=欧美',\n        '热门韩国电影': 'hot_gaia?area=韩国',\n        '热门日本电影': 'hot_gaia?area=日本',\n        '热门国产剧': 'tv_domestic',\n        '热门欧美剧': 'tv_american',\n        '热门日剧': 'tv_japanese',\n        '热门韩剧': 'tv_korean',\n        '热门动画': 'tv_animation',\n        '热门国内综艺': 'show_domestic',\n        '热门国外综艺': 'show_foreign'\n    },\n    \"夸克\": {\n        \"热搜电视剧\": \"电视剧\",\n        \"热搜电影\": \"电影\",\n        \"热搜动漫\": \"动漫\",\n        \"热搜综艺\": \"综艺\"\n    },\n    \"百度\": {\n        \"热搜电视剧\": \"teleplay\",\n        \"热搜电影\": \"movie\"\n    }\n};\nlet id = Date.now() + MY_RULE.title;\nlet dataSource = Object.keys(hotClass);\nlet selectsource = getItem(\"dataSource\", dataSource[0]);\nlet hotkeys = Object.keys(hotClass[selectsource]);\nlet selectkey = getItem(\"hotkey\", hotkeys[0]);\nlet tabkey = hotClass[selectsource][selectkey];\ndata.push({\n    title: '推荐来源',\n    pic_url: 'https://s21.ax1x.com/2024/06/09/pkNrOUg.png',\n    url: $(dataSource, 1, \"切换数据源\").select(() => {\n        setItem(\"dataSource\", input);\n        clearItem(\"hotkey\");\n        refreshPage(false);\n        return \"toast://已切换为\" + input;\n    }),\n    col_type: 'icon_small_4'\n});\ndata.push({\n    col_type: 'line'\n});\ndata.push({\n    title: '<span style=\"color:#ff6601\"><b>' + selectsource + selectkey + '</b></span>',\n    url: 'https://s21.ax1x.com/2024/06/09/pkNrvCj.png',\n    url: $(hotkeys, 1, \"切换分类\").select(() => {\n        setItem(\"hotkey\", input);\n        refreshPage(false);\n        return \"toast://已切换为\" + input;\n    }),\n    col_type: \"avatar\",\n    pic_url: \"hiker://images/icon_fire\",\n\n});\ndata.push({\n    title: \"正在加载...\",\n    url: \"hiker://empty\",\n    col_type: \"text_center_1\",\n    extra: {\n        id: id + \":hotkey\",\n        lineVisible: false\n    }\n});\nsetResult(data);\nlet sd = [];\nlet setSearchKey = name => {\n    putMyVar('s', name);\n    refreshPage();\n    return 'hiker://empty'\n};\nlet getTitle = (i, name) => {\n    let color;\n    switch (i) {\n        case 0:\n            color = \"#ff3300\";\n            break;\n        case 1:\n            color = \"#ff6600\";\n            break;\n        case 2:\n            color = \"#ff9900\"\n            break;\n        default:\n            color = \"black\";\n    }\n    return \"““””\" + String(i + 1).fontcolor(color) + \"\\t\\t\\t\" + name;\n}\ntry {\n    switch (selectsource) {\n        default: let collection = JSON.parse(fetch('hiker://collection'));\n        let newCollection = [];\n        collection.map((item) => {\n            try {\n                if (item.mITitle != '网页浏览' && JSON.parse(item.params).title == MY_RULE.title && item.cUrl == 'hiker://page/sources#immersiveTheme#') {\n                    newCollection.push(item);\n                }\n            } catch (e) {}\n        });\n        if (newCollection.length > 2) {\n            newCollection.splice(2);\n        };\n        newCollection.map((item, index) => {\n\n            let did = JSON.parse(JSON.parse(item.params).params).id;\n            let update = getEpisodes(did).update;\n            if (update != getItem('update' + did, '暂无片源')) {\n                setItem('update' + did, update);\n                update = colorHtml('#FF5D50', '更新情况：' + update);\n            }\n            sd.push({\n                title: item.mTitle,\n                desc: update + '\\n上次看到：' + (item.lastClick == undefined ? '暂无足迹' : item.lastClick.split('@')[0]),\n                pic_url: JSON.parse(JSON.parse(item.params).params).cover,\n                url: item.cUrl,\n                extra: item.params != null ? JSON.parse(item.params).params : {},\n                col_type: 'movie_1_vertical_pic'\n            });\n        });\n        if (newCollection.length < 2) {\n            for (let i = 0; i < (2 - newCollection.length); i++) {\n                sd.push({\n                    title: '最近没有追剧',\n                    desc: '追剧页面收藏的剧集将显示在这里，打开首页自动获取更新情况，只显示最近看过的两个!',\n                    url: 'hiker://empty',\n                    pic_url: 'https://img2.doubanio.com/cuphead/movie-static/pics/celebrity-default-large.png@Referer=https://m.douban.com/',\n                    col_type: 'movie_1_vertical_pic'\n                });\n            }\n        }\n        break;\n        case \"百度\":\n                var json = request('https://top.baidu.com/api/board?platform=wise&tab=' + tabkey + '&tag=%7B%22category%22:%22%E5%85%A8%E9%83%A8%E7%B1%BB%E5%9E%8B%22%7D', {\n                headers: {\n                    'User-Agent': 'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.51 Mobile Safari/537.36',\n                    'Host': 'top.baidu.com',\n                    'Accept': 'application/json, text/plain, */*',\n                    'Accept-Language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7',\n                    'Accept-Encoding': 'gzip, deflate, br',\n                    'Referer': 'https://top.baidu.com/board?tab=novel',\n                }\n            });\n            var list = JSON.parse(json).data.cards[0].content;\n            for (let i = 0; i < list.length; i++) {\n                let item = list[i];\n                let name = item.word + ' (' + item.show[2] + ')';\n                let des = item.desc;\n                sd.push({\n                    title: getTitle(i, name),\n                    url: 'hiker://search?s=' + name.split(' ', 2)[0] + '&rule=' + MY_RULE.title,\n                    desc: des,\n                    img: item.img,\n                    col_type: \"movie_1_vertical_pic\"\n                });\n            }\n            break;\n        case \"夸克\":\n                var json = request(\"https://news.myquark.cn/v2/toplist/movie?&channel=\" + tabkey + \"&rank_type=%E6%9C%80%E7%83%AD\");\n            var xmlData = (JSON.parse(json).data || \"\").replace(/title>/g, \"h_title>\").replace(/src>/g, \"h_src>\").replace(/area>/g, \"h_area\");\n            var list = pdfa(xmlData, \"body&&item\");\n            var getText = t => t;\n            var trend = [\"ㄧ\", \"↑\", \"↓\"];\n            for (let i = 0; i < list.length; i++) {\n                let item = list[i];\n                let name = pdfh(item, \"h_title&&Text\");\n                let des = \"热度：\" + pdfh(item, \"hot_score&&Text\") + \" \" + trend.at(pdfh(item, \"hot_trend&&Text\")) +\n                    \"\\n评分：\" + pdfh(item, \"score_avg&&Text\").replace(/^0$/, \"暂无评分\") +\n                    \"\\n\" + pdfh(item, \"year&&Text\") + \"·\" + pdfh(item, \"h_area&&Text\") + \"·\" + pdfh(item, \"category&&Text\").replace(\",\", \"·\");\n                sd.push({\n                    title: getTitle(i, name),\n                    url: 'hiker://search?s=' + name + '&rule=' + MY_RULE.title,\n                    desc: des,\n                    img: pdfh(item, \"h_src&&Text\"),\n                    col_type: \"movie_1_vertical_pic\"\n                });\n            }\n            break;\n        case \"豆瓣\":\n                if (tabkey.indexOf('?') != -1) {\n                let s = getDoubanRes(\"https://frodo.douban.com/api/v2/movie/\" + tabkey + \"&playable=0&sort=recommend&score_range=0,10&start=0&count=10&loc_id=108288\");\n                l = s.items;\n            } else {\n                let s = getDoubanRes(\"https://frodo.douban.com/api/v2/subject_collection/\" + tabkey + \"/items?playable=0&sort=recommend&score_range=0,10&start=0&count=10\");\n                l = s.subject_collection_items;\n            }\n            l.map((item, i) => {\n                sd.push({\n                    desc: item.card_subtitle,\n                    title: getTitle(i, item.rating == null ? (item.title + '(' + item.null_rating_reason + ')\\n\\n' + '上映时间:' + item.year) : (item.title + '(' + item.rating.value + '分)' + '\\n\\n上映时间:' + item.year)),\n                    pic_url: item.pic.large + '@Referer=https://m.douban.com/',\n                    url: 'hiker://page/movieDetail#noHistory##immersiveTheme#',\n                    col_type: 'movie_1_vertical_pic',\n                    extra: {\n                        id: item.id,\n                        title: item.title,\n                        target_type: item.type\n                    }\n                });\n            });\n            break;\n    }\n    addItemAfter(id + \":hotkey\", sd.slice(0, 10));\n} catch (e) {\n    log(e.toString());\n} finally {\n    deleteItem(id + \":hotkey\");\n}\nsetResult(data);"},{"col_type":"movie_3","name":"剧评详情","path":"dramaReviewView","rule":"function dramaReviewView(id) {\r\n    setPageTitle('剧评详情');\r\n    let getDoubanRes = $.require('function').getDoubanRes;\r\n    let star = $.require('function').star;\r\n    let i = getDoubanRes(\"https://frodo.douban.com/api/v2/review/\" + id);\r\n    i.photos.forEach((e => {\r\n        i.content = i.content.replace('id=\"' + e.tag_name + '\"', 'src=\"' + e.image.large.url + \"@Referer=\" + e.image.large.url + '\"')\r\n    }));\r\n    let l = getDoubanRes(\"https://frodo.douban.com/api/v2/review/\" + id + \"/comments\");\r\n    let o = [{\r\n        col_type: \"blank_block\"\r\n    }, {\r\n        title: \"<big><strong>评论：</strong></big>\",\r\n        col_type: \"rich_text\"\r\n    }];\r\n    l.comments.length > 0 ? l.comments.forEach((e => {\r\n        o.push({\r\n            title: e.author.name,\r\n            img: e.author.avatar,\r\n            url: e.author.url,\r\n            col_type: \"avatar\"\r\n        })\r\n        o.push({\r\n            title: e.text + (e.replies.length > 0 ? ' <small><a href=\"hiker://empty#noHistory#@rule=js:eval(JSON.parse(fetch(`hiker://page/dramaReviewView`)).rule);dramaReviewReplyView(' + e.id + ');\">[查看回复]</a></small>' : \"\"),\r\n            col_type: \"rich_text\"\r\n        })\r\n        o.push({\r\n            col_type: \"line\"\r\n        })\r\n    })) : o.push({\r\n        title: '<font color=\"grey\">( •̥́ ˍ •̀ू )还没有人评论...</font>',\r\n        col_type: \"rich_text\"\r\n    });\r\n\r\n    let a = \"\";\r\n    if (i.rating) {\r\n        a = star(i.rating.value * 2);\r\n    }\r\n    let color = \"#ffac2d\";\r\n    let s = [{\r\n        title: \"<big><strong>\" + i.title + \"</strong></big>\",\r\n        col_type: \"rich_text\"\r\n    }, {\r\n        title: i.user.name + \" 的剧评\",\r\n        img: i.user.avatar,\r\n        url: i.user.url,\r\n        col_type: \"avatar\"\r\n    }, {\r\n        title: (i.spoiler ? \"<small><font color=#f20c00>这篇影评可能有剧透</font></small><br/>\" : \"\") + (a ? '<small>看过 <font color=' + color + '>' + a + \"</font><br/></small>\" : \"\") + '<small><font color=\"grey\">' + /\\d{4}-\\d{1,2}-\\d{1,2}/g.exec(i.create_time) + \"</font></small>\",\r\n        col_type: \"rich_text\"\r\n    }, {\r\n        col_type: \"line_blank\"\r\n    }, {\r\n        title: i.content.replace(/<div\\s*[^>]*>(.*?)<\\/div>/g, \"$1\") + (i.is_original ? '<small><font color=\"grey\">&copy;本文版权归该作者所有，任何形式转载请联系作者。</font></small>' : \"\"),\r\n        col_type: \"rich_text\"\r\n    }];\r\n    setHomeResult({\r\n        data: s.concat(o)\r\n    })\r\n}\r\n\r\nfunction dramaReviewReplyView(id) {\r\n    setPageTitle('回复详情');\r\n    let getDoubanRes = $.require('function').getDoubanRes;\r\n    let t = getDoubanRes(\"https://frodo.douban.com/api/v2/review/comment/\" + id + \"/replies\");\r\n    let i = [];\r\n    t.replies.forEach((e => {\r\n        i.push({\r\n            title: e.author.name,\r\n            img: e.author.avatar,\r\n            url: e.author.url,\r\n            col_type: \"avatar\"\r\n        })\r\n        i.push({\r\n            title: (e.ref_comment.has_ref ? '回复@<font color=\"blue\">' + e.ref_comment.author.name + \"</font>：\" : \"\") + e.text,\r\n            col_type: \"rich_text\"\r\n        })\r\n        i.push({\r\n            col_type: \"line\"\r\n        })\r\n    }))\r\n    setHomeResult({\r\n        data: i\r\n    })\r\n}"},{"col_type":"movie_3","name":"解析","path":"parse","rule":"js:\nvar d = [];\nd.push({\n    title: '新建解析',\n    url: $(\"解析名###解析链接\").input(() => {\n        var parse = JSON.parse(readFile('parse.json'));\n        parse.push({\n            name: input.split('###')[0],\n            url: input.split('###')[1]\n        });\n        saveFile('parse.json', JSON.stringify(parse));\n        refreshPage();\n    }),\n    col_type: 'text_center_1',\n});\nvar parse = JSON.parse(readFile('parse.json'));\nfor (var i in parse) {\n    d.push({\n        title: parse[i].name,\n        desc: parse[i].url,\n        url: parse[i].url,\n        col_type: 'text_1'\n    }, {\n        title: '置顶',\n        url: $('是否置顶' + parse[i].name).confirm((num) => {\n            var parse = JSON.parse(readFile('parse.json'));\n            var temp = parse[num];\n            parse.splice(num, 1);\n            parse.unshift(temp);\n            saveFile('parse.json', JSON.stringify(parse));\n            refreshPage();\n        }, i),\n        col_type: 'text_3'\n    }, {\n        title: '修改',\n        url: $(parse[i].name + '###' + parse[i].url).input((num) => {\n            var parse = JSON.parse(readFile('parse.json'));\n            parse[num].name = input.split('###')[0];\n            parse[num].url = input.split('###')[1];\n            saveFile('parse.json', JSON.stringify(parse));\n            refreshPage();\n            return 'hiker://empty';\n        }, i),\n        col_type: 'text_3'\n    }, {\n        title: '删除',\n        url: $('是否确认删除' + parse[i].name).confirm((num) => {\n            var parse = JSON.parse(readFile('parse.json'));\n            parse.splice(num, 1);\n            saveFile('parse.json', JSON.stringify(parse));\n            refreshPage();\n        }, i),\n        col_type: 'text_3'\n    });\n}\nsetResult(d);"}],"title":"光影剧场","author":"道阻且右","version":20250103,"type":"video","url":"hiker://empty","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:$.require('main');","searchFind":"js:\nlet searchMovie = $.require('search').searchMovie;\nsetResult(searchMovie(getParam('word'), getParam('page')));","search_url":"hiker://empty?word=**&page=fypage","group":"①推荐","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"if (!fileExist('parse.json')) {\n    var parse = [];\n    saveFile('parse.json', JSON.stringify(parse));\n}","pages":"[{\"col_type\":\"movie_3\",\"name\":\"豆列搜索\",\"path\":\"DouList\",\"rule\":\"function searchDouList(word, page) {\\r\\n    let url = 'https://m.so.com/nextpage?q=inurl：doulist+' + word + '&src=msearch_next_input&sug_pos=&sug=&nlpv=&ssid=&srcg=home_next&pn=' + page + '&ajax=1&psid=e8be2ac65d3562b65368248088ff0c82'\\r\\n    let temp = [];\\r\\n    let code = pdfa(fetch(url), 'body&&.res-list[data-pcurl]');\\r\\n    for (let i in code) {\\r\\n        temp.push({\\r\\n            title: pdfh(code[i], '.res-title&&Text'),\\r\\n            desc: pdfh(code[i].replace(pdfh(code[i], '.res-title&&Html'), ''), '.res-list&&Text'),\\r\\n            url: 'hiker://page/getDouList?page=fypage',\\r\\n            extra: {\\r\\n                id: pdfh(code[i], '.res-list&&data-pcurl').match(/\\\\d+/g)[0],\\r\\n                code: code[i]\\r\\n            },\\r\\n            col_type: 'text_1'\\r\\n        });\\r\\n        let list = pdfa(code[i], '.res-list&&li').slice(0, 3);\\r\\n        for (let j in list) {\\r\\n            temp.push({\\r\\n                title: pdfh(list[j], '.title&&Text'),\\r\\n                url: 'hiker://search?s=' + pdfh(list[j], '.title&&Text').split(' ',2)[0] + '&rule=' + MY_RULE.title,\\r\\n                pic_url: 'https:' + pdfh(list[j], 'img&&data-delay-src||src'),\\r\\n                col_type: 'movie_3'\\r\\n            });\\r\\n        }\\r\\n        temp.push({\\r\\n            col_type: 'line_blank'\\r\\n        });\\r\\n        temp.push({\\r\\n            col_type: 'big_blank_block'\\r\\n        });\\r\\n    }\\r\\n    return temp;\\r\\n}\\r\\n$.exports = {\\r\\n    'searchDouList': searchDouList\\r\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"函数\",\"path\":\"function\",\"rule\":\"function getVideoUrl(url) {\\n    return $(url).lazyRule(() => {\\n        var parse = JSON.parse(readFile('parse.json'));\\n        if (parse.length != 0) {\\n            var videoUrl = {}\\n            videoUrl.names = [];\\n            videoUrl.urls = [];\\n            for (var i in parse) {\\n                videoUrl.names.push(parse[i].name);\\n                videoUrl.urls.push('video://'+parse[i].url + input+'#isVideo=true#');\\n            }\\n            return videoUrl;\\n        } else {\\n            return input;\\n        }\\n    })\\n}\\n\\nfunction getEpisodes(id) {\\n    let sources = new Array();\\n    let html = fetchPC('https://movie.douban.com/subject/' + id + '/');\\n    let sources_list = html.match(/sources\\\\[[(1)(3)(7)(8)(9)(17)]{1}\\\\][\\\\s\\\\S]*?\\\\]/g)\\n    if (sources_list == null) {\\n        let script_list = parseDomForArray(html, 'body&&script[src]');\\n        for (let i in script_list) {\\n            var sources_url = parseDomForHtml(script_list[i], 'script&&src').indexOf('mixed_static') != -1 ? (parseDomForHtml(script_list[i], 'script&&src')) : sources_url\\n        }\\n        let sources_list = request(sources_url).match(/sources\\\\[[(1)(3)(7)(8)(9)(17)]{1}\\\\][\\\\s\\\\S]*?\\\\]/g);\\n    }\\n    let sources_title = ['', '腾讯视频', '', '优酷视频', '', '', '', '芒果TV', '哔哩哔哩', '爱奇艺视频', '', '', '', '', '', '', '', '西瓜视频'];\\n    if (sources_list != null) {\\n        sources_list.map((item) => {\\n            eval(unescape(item));\\n        })\\n        let playList = new Array();\\n        for (let i in sources) {\\n            if (sources[i] != null) {\\n                playList.push({\\n                    title: sources_title[i],\\n                    list: sources[i].map((item) => {\\n                        return {\\n                            play_link: parseQueryString(item.play_link).url,\\n                            ep: '第' + item.ep + '集'\\n                        };\\n                    })\\n                })\\n            }\\n        }\\n        for (let i in playList) {\\n            for (let j = 0; j < playList.length - i; j++) {\\n                if (playList[j + 1] != undefined) {\\n                    if (playList[j].list.length < playList[j + 1].list.length) {\\n                        let temp = null;\\n                        temp = playList[j];\\n                        playList[j] = playList[j + 1];\\n                        playList[j + 1] = temp;\\n                    }\\n                } else {\\n                    break;\\n                }\\n            }\\n        }\\n        let update = playList.map((item) => {\\n            return item.title + '更新至' + item.list[item.list.length - 1].ep;\\n        }).join('｜');\\n        return {\\n            update: update,\\n            playList: playList\\n        };\\n    } else {\\n        return {\\n            update: '暂时未获取到更新情况',\\n            playList: null\\n        };\\n    }\\n}\\n\\nfunction colorHtml(color, text) {\\n    return '‘‘’’<font color=\\\"' + color + '\\\">' + text + '</font>';\\n};\\n\\nfunction getCollection() {\\n    let collection = JSON.parse(fetch('hiker://collection'));\\n    let newCollection = [];\\n    collection.map((item) => {\\n        try {\\n            if (item.mITitle != '网页浏览' && JSON.parse(item.params).title == MY_RULE.title && item.cUrl == 'hiker://page/sources#immersiveTheme#') {\\n                newCollection.push(item);\\n            }\\n        } catch (e) {}\\n    });\\n    return newCollection;\\n}\\n\\n\\nfunction parseQueryString(url) {\\n    var str = url.split('?', 2)[1];\\n    var arr = str.split('&');\\n    var obj = {};\\n    for (var i = 0; i < arr.length; i++) {\\n        var arr2 = arr[i].split('=');\\n        obj[arr2[0]] = arr2[1];\\n    }\\n    return obj;\\n}\\n\\nfunction getDoubanRes(url) {\\n    //log(url)\\n    var cc = null;\\n    if ($.type(url) == 'object') {\\n        cc = url.cc;\\n        url = url.url;\\n    }\\n    var _url = url;\\n    if (url.indexOf('apikey') === -1) {\\n        _url += (url.indexOf('?') === -1 ? '?' : '&') + \\\"apikey=0dad551ec0f84ed02907ff5c42e8ec70\\\"\\n    }\\n    let _ts = parseInt(Date.now() / 1000).toString();\\n    let m = 'GET&' + encodeURIComponent(url.split('douban.com')[1].split('?')[0]) + '&' + _ts;\\n    eval(getCryptoJS());\\n    let _sig = hexToBase64(CryptoJS.HmacSHA1(m, 'bf7dddc7c9cfe6f7').toString());\\n    _url += '&_sig=' + _sig + '&_ts=' + _ts;\\n    //let cookieCache = 'hiker://files/cache/doubancookie.txt';\\n    let s = fetch(_url, {\\n        headers: {\\n            //'Cookie': fetch(cookieCache),\\n            \\\"User-Agent\\\": \\\"Rexxar-Core/0.1.3 api-client/1 com.douban.frodo/7.9.0.beta2(215) Android/25 product/TAS-AL00 vendor/HUAWEI model/TAS-AL00  rom/android  network/wifi  platform/mobile com.douban.frodo/7.9.0.beta2(215) Rexxar/1.2.151  platform/mobile 1.2.151\\\"\\n        },\\n        method: 'GET'\\n        //body: 'host=frodo.douban.com'\\n    });\\n    let json = JSON.parse(s);\\n    if (json.localized_message) {\\n        cc = cc == null ? 1 : cc + 1;\\n        log('重试次数:' + cc);\\n        if (cc > 5) {\\n            throw new Error('超时')\\n        }\\n        java.lang.Thread.sleep(2000);\\n        return getDoubanRes({\\n            url: url,\\n            cc: cc\\n        });\\n    } else {\\n        return json;\\n    }\\n}\\n\\nfunction star(number) {\\n    let text = '';\\n    for (let i = 0; i < 5; i++) {\\n        text = text + (i * 2 < number ? '★' : '☆')\\n    }\\n    return text;\\n};\\n\\n$.exports = {\\n    'parseQueryString': parseQueryString,\\n    'getDoubanRes': getDoubanRes,\\n    'star': star,\\n    'colorHtml': colorHtml,\\n    'getEpisodes': getEpisodes,\\n    'getVideoUrl': getVideoUrl\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"豆列详情\",\"path\":\"getDouList\",\"rule\":\"js:\\nlet getDoubanRes = $.require('function').getDoubanRes;\\nlet page = MY_PAGE;\\nlet count = 50;\\n\\n    let data = getDoubanRes(\\\"https://frodo.douban.com/api/v2/doulist/\\\" + MY_PARAMS.id + \\\"/posts\\\" + '?playable=' + '0' + (page ? \\\"&start=\\\" + (page - 1) * count + \\\"&count=\\\" + count : \\\"&start=0&count=50\\\")).items.map((item) => {\\n        return {\\n            desc: item.content.subject.card_subtitle,\\n            title: item.content.subject.rating == null ? (item.content.subject.title + '(' + item.content.subject.null_rating_reason + ')\\\\n\\\\n' + '上映时间:' + item.content.subject.pubdate) : (item.content.subject.title + '(' + item.content.subject.rating.value + '分)' + '\\\\n\\\\n上映时间:' + item.content.subject.pubdate),\\n            pic_url: item.content.subject.pic.large + '@Referer=https://m.douban.com/',\\n            url: 'hiker://page/movieDetail#noHistory##immersiveTheme#',\\n            col_type: 'movie_1_vertical_pic',\\n            extra: {\\n                id: item.content.subject.id,\\n                title: item.content.subject.title,\\n                target_type: item.content.subject.subtype\\n            }\\n        }\\n    })\\ntry {\\n} catch (e) {\\n    let data = [{\\n        title: '这个豆列没有影片',\\n        col_type: 'text_center_1'\\n    }]\\n}\\n\\n\\nsetResult(data);\"},{\"col_type\":\"movie_3\",\"name\":\"影视筛选\",\"path\":\"allMovies\",\"rule\":\"js:\\nlet getDoubanRes = $.require('function').getDoubanRes;\\nlet page = getParam('page');\\nif (!getMyVar('classlist')) {\\n    putMyVar('classlist', JSON.stringify({\\n        subtype: \\\"\\\",\\n        local: \\\"\\\",\\n        year: \\\"\\\",\\n        class: \\\"\\\",\\n        rank: \\\"U\\\",\\n        type: \\\"\\\",\\n        filter: \\\"\\\",\\n        score: \\\"0,10\\\"\\n    }));\\n}\\nlet a = [];\\nlet temp = JSON.parse(getMyVar('classlist'));\\nlet color = '#FF5D50';\\nlet items = {\\n    subtype: [\\\"全部形式\\\", \\\"电影\\\", \\\"电视剧\\\", \\\"综艺\\\", \\\"动漫\\\", \\\"纪录片\\\", \\\"短片\\\"],\\n    local: [\\\"全部地区\\\", \\\"自定义地区\\\", \\\"中国大陆\\\", \\\"美国\\\", \\\"中国香港\\\", \\\"中国台湾\\\", \\\"日本\\\", \\\"韩国\\\", \\\"英国\\\", \\\"法国\\\", \\\"德国\\\", \\\"意大利\\\", \\\"西班牙\\\", \\\"印度\\\", \\\"泰国\\\", \\\"俄罗斯\\\", \\\"伊朗\\\", \\\"加拿大\\\", \\\"澳大利亚\\\", \\\"爱尔兰\\\", \\\"瑞典\\\", \\\"巴西\\\", \\\"丹麦\\\"],\\n    type: [\\\"全部类型\\\", \\\"自定义类型\\\", \\\"剧情\\\", \\\"喜剧\\\", \\\"动作\\\", \\\"爱情\\\", \\\"科幻\\\", \\\"动画\\\", \\\"悬疑\\\", \\\"惊悚\\\", \\\"恐怖\\\", \\\"犯罪\\\", \\\"同性\\\", \\\"音乐\\\", \\\"歌舞\\\", \\\"传记\\\", \\\"历史\\\", \\\"战争\\\", \\\"西部\\\", \\\"奇幻\\\", \\\"冒险\\\", \\\"灾难\\\", \\\"武侠\\\", \\\"\\\\u60c5\\\\u8272\\\"],\\n    year: [\\\"全部年代\\\", \\\"自定义年份\\\", \\\"2020年代\\\", \\\"2010年代\\\", \\\"2000年代\\\", \\\"90年代\\\", \\\"80年代\\\", \\\"70年代\\\", \\\"60年代\\\", \\\"更早\\\"],\\n    class: [\\\"全部特色\\\", \\\"自定义标签\\\", \\\"经典\\\", \\\"青春\\\", \\\"文艺\\\", \\\"搞笑\\\", \\\"励志\\\", \\\"魔幻\\\", \\\"感人\\\", \\\"女性\\\", \\\"黑帮\\\", \\\"治愈\\\", \\\"美食\\\", \\\"宗教\\\", \\\"小说改编\\\", \\\"超级英雄\\\"]\\n}\\nfor (item in items) {\\n    for (let i = 0; i < items[item].length; i++) {\\n        let title = \\\"\\\";\\n        if (temp[item] == items[item][i] || (temp[item] == \\\"\\\" && i == 0)) {\\n            title = '““””<b> <font color=' + color + '>' + items[item][i] + ' </font></b>';\\n        } else {\\n            title = items[item][i];\\n        }\\n        let url = $('hiker://empty#noLoading#').lazyRule((text, item) => {\\n            let temp = JSON.parse(getMyVar('classlist'));\\n            temp[item] = text.indexOf(\\\"全部\\\") != -1 ? \\\"\\\" : text;\\n            putMyVar(\\\"classlist\\\", JSON.stringify(temp));\\n            refreshPage();\\n            return 'hiker://empty'\\n        }, items[item][i], item);\\n\\n        if (items[item][i] == \\\"自定义年份\\\") {\\n            if (temp.year == \\\"自定义年份\\\") {\\n                title = '““””<b> <font color=' + color + '>自定义年份:' + temp.customYear + ' </font></b>';\\n            }\\n\\n            url = $(temp.customYear, '直接输入具体年份,例如2000').input(() => {\\n                let temp = JSON.parse(getMyVar('classlist'));\\n                if (input.length == 4) {\\n                    temp.customYear = input;\\n                    temp.year = \\\"自定义年份\\\";\\n                    putMyVar(\\\"classlist\\\", JSON.stringify(temp));\\n                    refreshPage();\\n                    return 'hiker://empty'\\n                } else {\\n                    return 'toast://请正确输入'\\n                }\\n            });\\n        } else if (items[item][i] == \\\"自定义地区\\\") {\\n            if (temp.local == \\\"自定义地区\\\") {\\n                title = '““””<b> <font color=' + color + '>自定义地区:' + temp.customLocal + ' </font></b>';\\n            }\\n\\n            url = $(temp.customLocal, '直接输入具体地区,例如中国大陆').input(() => {\\n                let temp = JSON.parse(getMyVar('classlist'));\\n                if (input.length > 0) {\\n                    temp.customLocal = input;\\n                    temp.local = \\\"自定义地区\\\";\\n                    putMyVar(\\\"classlist\\\", JSON.stringify(temp));\\n                    refreshPage();\\n                    return 'hiker://empty'\\n                } else {\\n                    return 'toast://请正确输入'\\n                }\\n            });\\n        } else if (items[item][i] == \\\"自定义类型\\\") {\\n            if (temp.type == \\\"自定义类型\\\") {\\n                title = '““””<b> <font color=' + color + '>自定义类型:' + temp.customType + ' </font></b>';\\n            }\\n\\n            url = $(temp.customType, '直接输入具体类型,例如剧情').input(() => {\\n                let temp = JSON.parse(getMyVar('classlist'));\\n                if (input.length > 0) {\\n                    temp.customType = input;\\n                    temp.type = \\\"自定义类型\\\";\\n                    putMyVar(\\\"classlist\\\", JSON.stringify(temp));\\n                    refreshPage();\\n                    return 'hiker://empty'\\n                } else {\\n                    return 'toast://请正确输入'\\n                }\\n            });\\n        } else if (items[item][i] == \\\"自定义标签\\\") {\\n            if (temp.class == \\\"自定义标签\\\") {\\n                title = '““””<b> <font color=' + color + '>自定义标签:' + temp.customClass + ' </font></b>';\\n            }\\n\\n            url = $(temp.customClass, '直接输入具体标签,例如经典\\\\n可写多个标签,使用\\\"英文逗号\\\"分隔').input(() => {\\n                let temp = JSON.parse(getMyVar('classlist'));\\n                if (input.length > 0) {\\n                    temp.customClass = input;\\n                    temp.class = \\\"自定义标签\\\";\\n                    putMyVar(\\\"classlist\\\", JSON.stringify(temp));\\n                    refreshPage();\\n                    return 'hiker://empty'\\n                } else {\\n                    return 'toast://请正确输入'\\n                }\\n            });\\n        }\\n        a.push({\\n            title: title,\\n            col_type: 'scroll_button',\\n            url: url\\n        })\\n    }\\n    a.push({\\n        col_type: 'blank_block'\\n    })\\n}\\nlet rank = {\\n    默认排序: \\\"U\\\",\\n    热度: \\\"T\\\",\\n    评分: \\\"S\\\",\\n    时间: \\\"R\\\"\\n}\\nfor (let r in rank) {\\n    a.push({\\n        title: temp.rank === rank[r] ? '““””<b> <font color=' + color + '>' + r + ' </font></b>' : r,\\n        col_type: 'scroll_button',\\n        url: $('hiker: //empty#noLoading#').lazyRule((e) => {\\n            let temp = JSON.parse(getMyVar('classlist'));\\n            temp.rank = e;\\n            putMyVar(\\\"classlist\\\", JSON.stringify(temp));\\n            refreshPage();\\n            return 'hiker://empty'\\n        }, rank[r])\\n    })\\n}\\na.push({\\n    col_type: 'blank_block'\\n})\\nlet filter = {\\n    全部影片: '',\\n    仅有片源: 'playable'\\n}\\nfor (let r in filter) {\\n    a.push({\\n        title: temp.filter === filter[r] ? '““””<b> <font color=' + color + '>' + r + ' </font></b>' : r,\\n        col_type: 'scroll_button',\\n        url: $('hiker: //empty#noLoading#').lazyRule((e) => {\\n            let temp = JSON.parse(getMyVar('classlist'));\\n            temp.filter = e;\\n            putMyVar(\\\"classlist\\\", JSON.stringify(temp));\\n            refreshPage();\\n            return 'hiker://empty'\\n        }, filter[r])\\n    })\\n}\\na.push({\\n    title: '““””<b> <font color=' + color + '>评分区间:' + temp.score.replace(',', '-') + ' </font></b>',\\n    col_type: 'scroll_button',\\n    url: $(temp.score.replace(',', '-'), '评分应在0-10之间').input(() => {\\n        let temp = JSON.parse(getMyVar('classlist'));\\n        let inputs = input.split('-');\\n        if (inputs.length == 2 && inputs.every(e => e >= 0 && e <= 10) && parseFloat(inputs[0]) < inputs[1]) {\\n            temp.score = input.replace('-', ',');\\n            putMyVar(\\\"classlist\\\", JSON.stringify(temp));\\n            refreshPage();\\n            return 'hiker://empty'\\n        } else {\\n            return 'toast://请正确输入'\\n        }\\n    })\\n})\\n\\nlet count = 15;\\nlet url = \\\"https://frodo.douban.com/api/v2/movie/tag?\\\" +\\n    (page ? \\\"start=\\\" + (page - 1) * count +\\n        \\\"&count=\\\" + count : \\\"start=0&count=30\\\") +\\n    \\\"&q=\\\" + temp.subtype +\\n    \\\",\\\" + (temp.local == \\\"自定义地区\\\" ? temp.customLocal : temp.local) +\\n    \\\",\\\" + (temp.type == \\\"自定义类型\\\" ? temp.customType : temp.type) +\\n    \\\",\\\" + (temp.year == \\\"自定义年份\\\" ? temp.customYear : temp.year) +\\n    \\\",\\\" + (temp.class == \\\"自定义标签\\\" ? temp.customClass : temp.class) +\\n    \\\"&sort=\\\" + temp.rank + \\\"&score_range=\\\" + temp.score + '&filter=' + temp.filter;\\ngetDoubanRes(url).data.map((item) => {\\n    a.push({\\n        desc: item.card_subtitle,\\n        title: item.rating == null ? (item.title + '(' + item.null_rating_reason + ')\\\\n\\\\n' + '上映时间:' + item.pubdate) : (item.title + '(' + item.rating.value + '分)' + '\\\\n\\\\n上映时间:' + item.pubdate),\\n        pic_url: item.pic.large + '@Referer=https://m.douban.com/',\\n        url: 'hiker://page/movieDetail#noHistory##immersiveTheme#',\\n        col_type: 'movie_1_vertical_pic',\\n        extra: {\\n            id: item.id,\\n            title: item.title,\\n            target_type: item.subtype\\n        }\\n    });\\n});\\nif (page > 1) {\\n    a.splice(0, a.length - count);\\n}\\nsetResult(a);\"},{\"col_type\":\"movie_3\",\"name\":\"影片详情\",\"path\":\"movieDetail\",\"rule\":\"js:\\nlet d = [];\\nsetPageTitle(MY_PARAMS.title);\\nlet getDoubanRes = $.require('function').getDoubanRes;\\nlet colorHtml = $.require('function').colorHtml;\\nlet star = $.require('function').star;\\nlet json = getDoubanRes('https://frodo.douban.com/api/v2/' + MY_PARAMS.target_type + '/' + MY_PARAMS.id + '?event_source=search');\\nsetLastChapterRule('js:' + $.toString(param => {\\n    setResult(param)\\n}, json.episodes_info));\\nd.push({\\n    title: json.title + '\\\\n' + '上映时间：' + json.pubdate,\\n    desc: json.card_subtitle,\\n    url: 'hiker://empty',\\n    pic_url: json.pic.large + '@Referer=https://m.douban.com/',\\n    col_type: 'movie_1_vertical_pic_blur',\\n}, {\\n    title: '演职人员',\\n    url: 'hiker://page/workers#noHistory#',\\n    pic_url: 'https://s21.ax1x.com/2024/06/09/pkNs9K0.png',\\n    extra: {\\n        id: MY_PARAMS.id,\\n        type: MY_PARAMS.target_type\\n    },\\n    col_type: 'icon_small_4'\\n}, {\\n    title: '本片剧照',\\n    url: 'hiker://page/photos#noHistory#',\\n    extra: {\\n        url: 'hiker://empty/api/v2/' + MY_PARAMS.target_type + '/' + MY_PARAMS.id + '/photos?start=fypage&count=50',\\n        count: 50,\\n        title: '全部剧照'\\n    },\\n    pic_url: 'https://s21.ax1x.com/2024/06/09/pkNsCrV.png',\\n    col_type: 'icon_small_4'\\n}, {\\n    title: '剧评短评',\\n    url: 'hiker://page/review?page=fypage#noHistory#',\\n    extra: {\\n        id: MY_PARAMS.id,\\n        type: MY_PARAMS.target_type\\n    },\\n    pic_url: 'https://s21.ax1x.com/2024/06/09/pkNsFVU.png',\\n    col_type: 'icon_small_4'\\n}, {\\n    title: '前往追剧',\\n    url: 'hiker://page/sources#immersiveTheme#',\\n    pic_url: 'https://s21.ax1x.com/2024/06/10/pkN2SBt.png',\\n    col_type: 'icon_small_4',\\n    extra: {\\n        id: MY_PARAMS.id,\\n        title: MY_PARAMS.title,\\n        episodes_info: json.episodes_info,\\n        cover: json.pic.large + '@Referer=https://m.douban.com/',\\n        durations: json.durations,\\n        type: MY_PARAMS.target_type,\\n        content: json.intro\\n    }\\n}, {\\n    col_type: 'line_blank'\\n});\\nif (json.rating != null) {\\n    d.push({\\n        title: '‘‘’’<big>豆瓣评分®</big>' + '\\\\n<big><strong>' + colorHtml('#ffac2d', star(json.rating.value)) + '</strong></big>\\\\t' + json.rating.value + '分',\\n        url: 'hiker://empty',\\n        col_type: 'text_center_1'\\n    });\\n    d.push({\\n        col_type: 'line_blank'\\n    });\\n} else {\\n    d.push({\\n        title: '暂无评分',\\n        url: 'hiker://empty',\\n        col_type: 'text_center_1'\\n    }, {\\n        col_type: 'line_blank'\\n    });\\n}\\nif (json.trailer != null) {\\n    d.push({\\n        title: '‘‘’’<big>预告花絮</big>',\\n        url: 'hiker://empty',\\n        col_type: 'text_center_1'\\n    }, {\\n        title: json.trailer.title,\\n        pic_url: json.trailer.cover_url,\\n        url: json.trailer.video_url,\\n        desc: '预告片',\\n        col_type: 'movie_2'\\n    }, {\\n        title: '更多预告花絮',\\n        url: 'hiker://page/trailer#noHistory#',\\n        extra: {\\n            url: 'https://movie.douban.com/subject/' + MY_PARAMS.id + '/trailer#noHistory#'\\n        },\\n        pic_url: 'https://cdn.jsdelivr.net/gh/Lingyan000/photos/img/20201104163813.gif',\\n        col_type: 'movie_2'\\n    }, {\\n        col_type: 'line_blank'\\n    });\\n}\\nif (json.intro != '') {\\n    d.push({\\n        title: '‘‘’’<big>影片简介</big>',\\n        url: 'hiker://empty',\\n        col_type: 'text_center_1'\\n    }, {\\n        title: json.intro.replace(/\\\\s/g, ''),\\n        col_type: 'rich_text',\\n    }, {\\n        col_type: 'line_blank'\\n    });\\n}\\nlet awards = getDoubanRes('https://frodo.douban.com/api/v2/' + MY_PARAMS.target_type + '/' + MY_PARAMS.id + '/awards?count=20');\\nif (awards.awards != '') {\\n    d.push({\\n        title: '‘‘’’<big>获奖情况</big>',\\n        url: 'hiker://empty',\\n        col_type: 'text_center_1'\\n    });\\n    awards.awards.map((item) => {\\n        d.push({\\n            title: item.ceremony.title + '\\\\t' + item.categories.map((item) => {\\n                return item.is_won ? item.category.title : (item.category.title + '（提名）')\\n            }).join('/'),\\n            pic_url: item.ceremony.pic.large + '@Referer=https://m.douban.com/',\\n            url: $(item.ceremony.title + '\\\\t' + item.categories.map((item) => {\\n                return item.is_won ? item.category.title : (item.category.title + '（提名）')\\n            }).join('/')).confirm(() => {\\n                return input;\\n            }),\\n            col_type: 'card_pic_3_center'\\n        });\\n    })\\n    d.push({\\n        col_type: 'line_blank'\\n    });\\n}\\nd.push({\\n    title: '‘‘<small>以上数据来源于豆瓣，如您喜欢，请下载官方app</small>’’',\\n    desc: '““<small>此规则仅限学习交流使用，请于导入后24小时内删除，任何组织或个人不得以任何方式方法传播此规则的整体或部分！</small>””',\\n    url: 'https://m.douban.com/movie/',\\n    col_type: 'text_center_1'\\n});\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"追剧\",\"path\":\"sources\",\"rule\":\"js:\\nsetPageTitle(MY_PARAMS.title);\\nsetPagePicUrl(MY_PARAMS.cover);\\nlet getEpisodes = $.require('function').getEpisodes;\\nlet getVideoUrl = $.require('function').getVideoUrl;\\nlet Episodes = getEpisodes(MY_PARAMS.id);\\nlet d = [];\\ngetItem('sequence' + MY_PARAMS.id, '1') == '0' ? Episodes.playList.map((item) => {\\n    return {\\n        title: item.title,\\n        list: item.list.reverse()\\n    }\\n}) : 0;\\nd.push({\\n    title: MY_PARAMS.title + '\\\\n' + MY_PARAMS.episodes_info,\\n    desc: MY_PARAMS.type == 'movie' ? ('影片时长：' + MY_PARAMS.durations) : ('单集时长：' + MY_PARAMS.durations),\\n    pic_url: MY_PARAMS.cover,\\n    url: 'hiker://empty',\\n    col_type: 'movie_1_vertical_pic_blur'\\n}, {\\n    title: '相关搜索',\\n    url: 'hiker://search?s=' + MY_PARAMS.title.replace(/\\\\s第[一二三四五六七八九十百]{1,5}季/g, ''),\\n    pic_url: 'https://s21.ax1x.com/2024/06/10/pkN2pHP.png',\\n    col_type: 'icon_small_4'\\n}, {\\n    title: '切换排序',\\n    url: $('#noLoading#').lazyRule((id) => {\\n        getItem('sequence' + id, '1') == 1 ? setItem('sequence' + id, '0') : setItem('sequence' + id, '1');\\n        refreshPage();\\n        return 'hiker://empty';\\n    }, MY_PARAMS.id),\\n    pic_url: 'https://s21.ax1x.com/2024/06/10/pkN2CAf.png',\\n    col_type: 'icon_small_4'\\n}, {\\n    title: '剧评短评',\\n    url: 'hiker://page/review?page=fypage#noHistory#',\\n    pic_url: 'https://s21.ax1x.com/2024/06/09/pkNsFVU.png',\\n    extra: {\\n        id: MY_PARAMS.id,\\n        type: MY_PARAMS.type\\n    },\\n    col_type: 'icon_small_4'\\n}, {\\n    title: '解析设置',\\n    url: 'hiker://page/parse#noHistory#',\\n    pic_url: 'https://s21.ax1x.com/2024/06/10/pkN2i4S.png',\\n    col_type: 'icon_small_4'\\n}, {\\n    col_type: 'line_blank'\\n}, {\\n    col_type: 'big_blank_block'\\n}, {\\n    col_type: 'big_blank_block'\\n});\\nif (Episodes.playList != null) {\\n    d.push({\\n        title: '全部片源',\\n        col_type: 'scroll_button',\\n        url: $('#noLoading#').lazyRule((id) => {\\n            setItem('sources' + id, '全部片源');\\n            refreshPage();\\n            return 'hiker://empty';\\n        }, MY_PARAMS.id)\\n    });\\n} else {\\n    d.push({\\n        title: '暂无片源',\\n        url: 'hiker://empty',\\n        col_type: 'text_center_1'\\n    }, {\\n        col_type: 'line_blank'\\n    });\\n}\\n\\nfor (let i in Episodes.playList) {\\n    d.push({\\n        title: getItem('sources' + MY_PARAMS.id, '全部片源') == Episodes.playList[i].title ? ('‘‘' + Episodes.playList[i].title + '’’') : Episodes.playList[i].title,\\n        col_type: 'scroll_button',\\n        url: $('#noLoading#').lazyRule((id, sources) => {\\n            setItem('sources' + id, sources);\\n            refreshPage();\\n            return 'hiker://empty';\\n        }, MY_PARAMS.id, Episodes.playList[i].title)\\n    });\\n}\\nfor (let i in Episodes.playList) {\\n    d.push({\\n        col_type: 'line'\\n    });\\n    if (getItem('sources' + MY_PARAMS.id, '全部片源') == '全部片源' || getItem('sources' + MY_PARAMS.id, '全部片源') == Episodes.playList[i].title) {\\n        d.push({\\n            title: Episodes.playList[i].title,\\n            col_type: 'text_center_1',\\n            url: 'hiker://empty'\\n        });\\n        for (let j in Episodes.playList[i].list) {\\n            d.push({\\n                title: Episodes.playList[i].list[j].ep,\\n                url: getVideoUrl(Episodes.playList[i].list[j].play_link),\\n                extra: {\\n                    id: Episodes.playList[i].list[j].play_link\\n                },\\n                col_type: 'text_3',\\n            });\\n        }\\n    }\\n    d.push({\\n        col_type: 'line_blank'\\n    });\\n}\\nd.push({\\n    title: '‘‘<small>以上数据来源于豆瓣，如您喜欢，请下载官方app</small>’’',\\n    desc: '““<small>此规则仅限学习交流使用，请于导入后24小时内删除，任何组织或个人不得以任何方式方法传播此规则的整体或部分！</small>””',\\n    url: 'https://m.douban.com/movie/#noHistory#',\\n    col_type: 'text_center_1'\\n});\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"院线热映\",\"path\":\"nowplaying\",\"rule\":\"js:\\nlet colorHtml=$.require('function').colorHtml;\\nlet getDoubanRes=$.require('function').getDoubanRes;\\nvar d = [];\\nvar tabs = [{\\n    name: '热度',\\n    type: 'recommend'\\n}, {\\n    name: '时间',\\n    type: 'time'\\n}, {\\n    name: '评分',\\n    type: 'rank'\\n}];\\ntabs.map((item) => {\\n    d.push({\\n        title: getMyVar('nowplayingType', 'recommend') == item.type ? colorHtml('#FF5D50', item.name) : item.name,\\n        url: $('#noLoading#').lazyRule((type) => {\\n            putMyVar('nowplayingType', type);\\n            refreshPage();\\n            return 'hiker://empty';\\n        }, item.type),\\n        col_type: 'flex_button'\\n    });\\n})\\nd.push({\\n    col_type: \\\"line_blank\\\"\\n});\\ngetDoubanRes('https://frodo.douban.com/api/v2/movie/movie_showing?area=全部&sort=' + getMyVar('nowplayingType', 'recommend') + '&playable=0&loc_id=108288&start=0&count=50').items.map((item) => {\\n    d.push({\\n        title: item.rating != null ? (item.title + '(' + item.rating.value + '分)\\\\n' + item.card_subtitle) : (item.title + '(暂无评分)\\\\n' + item.card_subtitle),\\n        desc: item.comment,\\n        pic_url: item.pic.large + '@Referer=https://m.douban.com/',\\n        url: 'hiker://page/movieDetail#noHistory##immersiveTheme#',\\n        col_type: 'movie_1_vertical_pic',\\n        extra: {\\n            title: item.title,\\n            id: item.id,\\n            target_type: item.type\\n        }\\n    })\\n})\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"预告花絮\",\"path\":\"trailer\",\"rule\":\"js:\\nlet getDoubanRes = $.require('function').getDoubanRes;\\nlet d = [];\\npdfa(getResCode(), 'body&&.mod').map((item) => {\\n    d.push({\\n        title: pdfh(item, 'h2&&Text').replace(/[\\\\s·]/g, ''),\\n        col_type: 'text_1',\\n        url: 'hiker://empty'\\n    });\\n    pdfa(item, 'ul&&li').map((item) => {\\n        d.push({\\n            title: pdfh(item, 'a:not([class])&&Text'),\\n            desc: pdfh(item, 'em&&Text'),\\n            pic_url: pdfh(item, 'img&&src'),\\n            url: $(pdfh(item, 'a&&href')).lazyRule(() => {\\n                return request(input, {}).match(/http.*?mp4/)[0];\\n            }),\\n            col_type: 'movie_2'\\n        });\\n    })\\n})\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"剧照\",\"path\":\"photos\",\"rule\":\"js:\\nsetPageTitle(MY_PARAMS.title);\\nlet getDoubanRes = $.require('function').getDoubanRes;\\nsetResult(getDoubanRes(MY_PARAMS.url.replace('hiker://empty', 'https://frodo.douban.com').replace('fypage', (parseInt(getParam('start')) - 1) * MY_PARAMS.count)).photos.map((item) => {\\n    return {\\n        desc: '0',\\n        pic_url: item.image.large.url + '@Referer=https://m.douban.com/',\\n        url: item.image.large.url + '@Referer=https://m.douban.com/',\\n        col_type: 'card_pic_2'\\n    }\\n}))\"},{\"col_type\":\"movie_3\",\"name\":\"演职员\",\"path\":\"workers\",\"rule\":\"js:\\nlet getDoubanRes = $.require('function').getDoubanRes;\\nsetResult(getDoubanRes('https://frodo.douban.com/api/v2/' + MY_PARAMS.type + '/' + MY_PARAMS.id + '/credits_stats?start=0&count=100').items.map((item) => {\\n    return {\\n        title: item.name + '\\\\n' + item.character,\\n        desc: '0',\\n        pic_url: item.avatar.normal + '@Referer=https://m.douban.com/',\\n        url: 'hiker://page/workerDetail#noHistory##immersiveTheme#',\\n        extra: {\\ntest:item,\\n            wid: item.id,\\n            id: item.uri.split('subject_id=')[1],\\n            name: item.name\\n        },\\n        col_type: 'card_pic_3_center'\\n    }\\n}));\"},{\"col_type\":\"movie_3\",\"name\":\"演员全部作品\",\"path\":\"allWorks\",\"rule\":\"js:\\nsetPageTitle('全部作品');\\nlet getDoubanRes = $.require('function').getDoubanRes;\\nlet url = 'https://frodo.douban.com/api/v2/elessar/work_collections/' + MY_PARAMS.id + '/works?start=' + 30 * (MY_PAGE - 1) + '&count=30&collection_title=' + MY_PARAMS.type;\\nsetResult(getDoubanRes(url).works.map((item) => {\\n    return {\\n        title: item.subject.title,\\n        desc: item.subject.extra.rating_group.rating != null ? (item.subject.extra.rating_group.rating.value + '分') : item.subject.extra.rating_group.null_rating_reason,\\n        pic_url: item.subject.cover.large.url + '@Referer=https://m.douban.com/',\\n        url: 'hiker://page/movieDetail#noHistory##immersiveTheme#',\\n        extra: {\\n            id: item.subject.id,\\n            title: item.subject.title,\\n            target_type: item.subject.subtype\\n        },\\n        col_type: 'movie_3'\\n    }\\n}))\"},{\"col_type\":\"movie_3\",\"name\":\"演员详情\",\"path\":\"workerDetail\",\"rule\":\"js:\\nsetPageTitle(MY_PARAMS.name);\\nlet getDoubanRes = $.require('function').getDoubanRes;\\nlet json = getDoubanRes('https://frodo.douban.com/api/v2/elessar/subject/' + MY_PARAMS.id + '?channel=Douban');\\nlet d = [];\\nd.push({\\n    title: json.title,\\n    desc: json.extra.short_info,\\n    pic_url: json.cover_img.url + '@Referer=https://m.douban.com/',\\n    url: 'hiker://empty',\\n    col_type: 'movie_1_vertical_pic_blur'\\n}, {\\n    col_type: 'line'\\n}, {\\n    title: pdfh(json.desc, '.content&&Text').replace(/[\\\\s\\\\n\\\\t]/g, ''),\\n    col_type: 'rich_text'\\n});\\nd.push({\\n    col_type: 'line_blank'\\n}, {\\n    title: '作品集',\\n    desc: '共' + json.modules[1].payload.collections[0].total + '部',\\n    url: 'hiker://empty',\\n    col_type: 'text_center_1'\\n});\\njson.modules[1].payload.collections[0].works.map((item, i) => {\\n    if (i < 6) {\\n        d.push({\\n            title: item.subject.title,\\n            desc: item.subject.extra.rating_group.rating != null ? (item.subject.extra.rating_group.rating.value + '分') : item.subject.extra.rating_group.null_rating_reason,\\n            pic_url: item.subject.cover.large.url + '@Referer=https://m.douban.com/',\\n            url: 'hiker://page/movieDetail#noHistory##immersiveTheme#',\\n            extra: {\\n                id: item.subject.id,\\n                title: item.subject.title,\\n                target_type: item.subject.subtype\\n            },\\n            col_type: 'movie_3'\\n        });\\n    }\\n});\\nd.push({\\n    col_type: 'line'\\n}, {\\n    title: '查看全部作品',\\n    url: 'hiker://page/allWorks?page=fypage#noHistory#',\\n    extra: {\\n        id:json.modules[1].payload.id,\\ntype:json.modules[1].payload.collections[0].title\\n    },\\n    col_type: 'text_center_1'\\n});\\nd.push({\\n    col_type: 'line_blank'\\n}, {\\n    title: '相册',\\n    desc: '共' + json.modules[2].payload.total + '张',\\n    url: 'hiker://empty',\\n    col_type: 'text_center_1'\\n});\\njson.modules[2].payload.photos.map((item, i) => {\\n    if (i < 4) {\\n        d.push({\\n            desc: '0',\\n            pic_url: item.image.large.url + '@Referer=https://m.douban.com/',\\n            url: item.image.large.url + '@Referer=https://m.douban.com/',\\n            col_type: 'card_pic_2'\\n        })\\n    }\\n});\\nd.push({\\n    col_type: 'line'\\n}, {\\n    title: '查看全部照片',\\n    url: 'hiker://page/photos#noHistory#',\\n    extra: {\\n        url: 'hiker://empty/api/v2/celebrity/' + MY_PARAMS.wid + '/photos?start=fypage&count=30',\\n        count: 30,\\n        title: '全部照片'\\n    },\\n    col_type: 'text_center_1'\\n});\\nif(json.modules[3].payload!=null){\\n    d.push({\\n        col_type: 'line_blank'\\n    }, {\\n        title: '获奖经历',\\n        desc: '共' + json.modules[3].payload.total + '次',\\n        url: 'hiker://empty',\\n        col_type: 'text_center_1'\\n    });\\n    json.modules[3].payload.awards.map((item, i) => {\\n        d.push({\\n            title: item.ceremony.title + '\\\\n' + item.is_won ? ('获得奖项:' + item.ceremony.title) : ('获得奖项:' + item.ceremony.title + '（提名）'),\\n            desc: '0',\\n            pic_url: item.ceremony.pic.large + '@Referer=https://m.douban.com/',\\n            url: $(item.ceremony.title + '\\\\n' + item.is_won ? ('获得奖项:' + item.ceremony.title) : ('获得奖项:' + item.ceremony.title + '（提名）')).confirm(() => {\\n                return input\\n            }),\\n            col_type: 'card_pic_3_center'\\n        })\\n    });\\n};\\nd.push({\\n    col_type: 'line_blank'\\n}, {\\n    title: '‘‘<small>以上数据来源于豆瓣，如您喜欢，请下载官方app</small>’’',\\n    desc: '““<small>此规则仅限学习交流使用，请于导入后24小时内删除，任何组织或个人不得以任何方式方法传播此规则的整体或部分！</small>””',\\n    url: 'https://m.douban.com/movie/',\\n    col_type: 'text_center_1'\\n});\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"搜索\",\"path\":\"search\",\"rule\":\"function searchMovie(word, page) {\\n    let getDoubanRes = $.require('function').getDoubanRes;\\n    let star = $.require('function').star;\\n    let url = 'https://frodo.douban.com/api/v2/search/subjects?q=' + word + '&type=movie&start=' + ((page - 1) * 20);\\n    let list = getDoubanRes(url).items\\n    return list.map((item) => {\\n        if (item.target_type == 'tv' || item.target_type == 'movie') {\\n            return {\\n                title: item.target.title,\\n                content: item.target.rating == null ? (item.target.null_rating_reason + '\\\\n' + item.target.card_subtitle) : (star(item.target.rating.value) + '\\\\n' + item.target.card_subtitle),\\n                desc: '上映年份：' + item.target.year,\\n                pic_url: item.target.cover_url + '@Referer=https://m.douban.com/',\\n                url: 'hiker://page/movieDetail#noHistory##immersiveTheme#',\\n                col_type: 'movie_1_vertical_pic',\\n                extra: {\\n                    id: item.target.id,\\n                    title: item.target.title,\\n                    target_type: item.target_type\\n                }\\n            }\\n        }\\n    })\\n}\\n\\nfunction searchDouList(word, page) {\\n    let url = 'https://m.so.com/nextpage?q=inurl：doulist+' + word + '&src=msearch_next_input&sug_pos=&sug=&nlpv=&ssid=&srcg=home_next&pn=' + page + '&ajax=1&psid=e8be2ac65d3562b65368248088ff0c82'\\n    let temp = [];\\n    let code = pdfa(fetch(url), 'body&&.res-list[data-pcurl]');\\n    for (let i in code) {\\n        temp.push({\\n            title: pdfh(code[i], '.res-title&&Text'),\\n            desc: pdfh(code[i].replace(pdfh(code[i], '.res-title&&Html'), ''), '.res-list&&Text'),\\n            url: 'hiker://page/getDouList?page=fypage',\\n            extra: {\\n                id: pdfh(code[i], '.res-list&&data-pcurl').match(/\\\\d+/g)[0],\\n                code: code[i]\\n            },\\n            col_type: 'text_1'\\n        });\\n        let list = pdfa(code[i], '.res-list&&li').slice(0, 3);\\n        for (let j in list) {\\n            temp.push({\\n                title: pdfh(list[j], '.title&&Text'),\\n                url: 'hiker://search?s=' + pdfh(list[j], '.title&&Text').split(' ', 2)[0] + '&rule=' + MY_RULE.title,\\n                pic_url: 'https:' + pdfh(list[j], 'img&&data-delay-src||src'),\\n                col_type: 'movie_3'\\n            });\\n        }\\n        temp.push({\\n            col_type: 'line_blank'\\n        });\\n        temp.push({\\n            col_type: 'big_blank_block'\\n        });\\n    }\\n    return temp;\\n}\\n$.exports = {\\n    'searchMovie': searchMovie,\\n    'searchDouList': searchDouList\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"剧评\",\"path\":\"review\",\"rule\":\"js:\\nlet colorHtml = $.require('function').colorHtml;\\nlet reviewTabs = [\\\"热门剧评\\\", \\\"最新剧评\\\", \\\"热门短评\\\", \\\"最新短评\\\", ];\\nlet reviewKey = getItem(\\\"reviewKey\\\", \\\"热门剧评\\\");\\nlet d = [];\\nif (MY_PAGE == 1) {\\n    d.push({\\n        col_type: 'big_blank_block'\\n    });\\n    for (let i in reviewTabs) {\\n        d.push({\\n            title: reviewKey == reviewTabs[i] ? colorHtml('#FF5D50', reviewTabs[i]) : reviewTabs[i],\\n            col_type: 'scroll_button',\\n            url: $('hiker://empty?key=' + reviewTabs[i]).lazyRule(() => {\\n                let parseQueryString = $.require('function').parseQueryString;\\n                setItem(\\\"reviewKey\\\", parseQueryString(input).key);\\n                refreshPage();\\n                return 'toast://已切换为' + parseQueryString(input).key;\\n            })\\n        });\\n    };\\n}\\n\\nfunction longReview(data, key, type, id, page) {\\n    let getDoubanRes = $.require('function').getDoubanRes;\\n    let star = $.require('function').star;\\n    let count = (15 * (parseInt(page) - 1)).toString();\\n    let url = \\\"https://frodo.douban.com/api/v2/\\\" + type + \\\"/\\\" + id + \\\"/reviews?start=\\\" + count + \\\"&count=15&order_by=\\\" + key;\\n    let code = getDoubanRes(url);\\n    if (page == 1) {\\n        data.push({\\n            col_type: \\\"blank_block\\\"\\n        });\\n        data.push({\\n            title: \\\"<big>共<strong> \\\" + code.total + \\\" </strong>条剧评</big>\\\",\\n            col_type: \\\"rich_text\\\"\\n        });\\n    }\\n    code.reviews.forEach((e => {\\n        let t = \\\"\\\";\\n        if (e.rating) {\\n            t = star(e.rating.value * 2);\\n        }\\n        let i = e.comments_count ? e.comments_count + \\\"回复\\\" : \\\"\\\",\\n            r = e.useful_count ? e.useful_count + \\\"有用\\\" : \\\"\\\",\\n            o = e.reshares_count ? e.reshares_count + \\\"转发\\\" : \\\"\\\";\\n\\n        r = i && r ? \\\"•\\\" + r : r;\\n        o = (i || r) && o ? \\\"•\\\" + o : o;\\n        data.push({\\n            title: e.user.name,\\n            img: e.user.avatar,\\n            url: e.user.url,\\n            col_type: \\\"avatar\\\"\\n        })\\n        data.push({\\n            title: \\\"<strong>\\\" + e.title + \\\"</strong><br/>\\\" + e.abstract + '   <small>(<a href=\\\"hiker://empty#noHistory#@rule=js:eval(JSON.parse(fetch(`hiker://page/dramaReviewView`)).rule);dramaReviewView(' + e.id + ')\\\">更多</a>)</small>' + (t ? '<br/><small>看过 <font color=' + '#ffac2d' + '>' + t + \\\"</font></small>\\\" : \\\"\\\") + '<br/><small><font color=\\\"grey\\\">' + i + r + o + \\\"</font></small>\\\",\\n            col_type: \\\"rich_text\\\"\\n        })\\n        data.push({\\n            col_type: \\\"line\\\"\\n        })\\n\\n    }));\\n}\\n\\nfunction shortReview(data, key, type, id, page) {\\n    let getDoubanRes = $.require('function').getDoubanRes;\\n    let star = $.require('function').star;\\n    let count = (30 * (parseInt(page) - 1)).toString();\\n    let url = \\\"https://frodo.douban.com/api/v2/\\\" + type + \\\"/\\\" + id + \\\"/interests?start=\\\" + count + \\\"&count=30&order_by=\\\" + key;\\n    let code = getDoubanRes(url);\\n    if (page == 1) {\\n        data.push({\\n            col_type: \\\"blank_block\\\"\\n        });\\n        data.push({\\n            title: \\\"<big>共<strong> \\\" + code.total + \\\" </strong>条短评</big>\\\",\\n            col_type: \\\"rich_text\\\"\\n        });\\n    }\\n    code.interests.forEach((e => {\\n        let t = \\\"\\\";\\n        if (e.rating) {\\n            t = star(e.rating.value * 2);\\n        }\\n        data.push({\\n            title: e.user.name,\\n            img: e.user.avatar,\\n            url: e.user.url,\\n            col_type: \\\"avatar\\\"\\n        });\\n        data.push({\\n            title: e.comment + (t ? '<br/><small>看过 <font color=' + '#ffac2d' + '>' + t + \\\"</font></small>\\\" : \\\"\\\") + '<br/><small><font color=\\\"grey\\\">' + e.vote_count + \\\"赞•\\\" + /\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}/g.exec(e.create_time) + \\\"</font></small>\\\",\\n            col_type: \\\"rich_text\\\"\\n        });\\n        data.push({\\n            col_type: \\\"line\\\"\\n        })\\n    }));\\n}\\nswitch (reviewKey) {\\n    default: longReview(d, 'hot', MY_PARAMS.type, MY_PARAMS.id, getParam('page'));\\n    break;\\n    case \\\"最新剧评\\\":\\n            longReview(d, 'latest', MY_PARAMS.type, MY_PARAMS.id, getParam('page'))\\n        break;\\n    case \\\"热门短评\\\":\\n            shortReview(d, 'hot', MY_PARAMS.type, MY_PARAMS.id, getParam('page'))\\n        break;\\n    case \\\"最新短评\\\":\\n            shortReview(d, 'latest', MY_PARAMS.type, MY_PARAMS.id, getParam('page'))\\n        break;\\n}\\n\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"主页面\",\"path\":\"main\",\"rule\":\"let getEpisodes = $.require('function').getEpisodes;\\nlet colorHtml = $.require('function').colorHtml;\\nlet getDoubanRes = $.require('function').getDoubanRes;\\nlet data = [];\\ndata.push({\\n    desc: '0',\\n    pic_url: 'https://s21.ax1x.com/2024/06/09/pkNrIgI.jpg',\\n    url: 'hiker://empty',\\n    col_type: 'card_pic_1'\\n});\\ndata.push({\\n    url: $.toString(() => {\\n        return $('hiker://empty/search?page=fypage&word=' + input + '#noRecordHistory#').rule(() => {\\n            let SMode = getItem(\\\"searchMode\\\", \\\"影片\\\");\\n            if (SMode == \\\"影片\\\") {\\n                let searchMovie = $.require('search').searchMovie;\\n                setResult(searchMovie(getParam('word'), getParam('page')));\\n            } else {\\n                let searchDouList = $.require('search').searchDouList;\\n                setResult(searchDouList(getParam('word'), getParam('page')));\\n            }\\n        })\\n    }),\\n    col_type: 'input',\\n    title: '搜' + getItem(\\\"searchMode\\\", \\\"影片\\\")\\n});\\ndata.push({\\n    title: '筛选影片',\\n    url: 'hiker://page/allMovies?page=fypage#noHistory#',\\n    pic_url: 'https://s21.ax1x.com/2024/06/09/pkNrLVS.png',\\n    col_type: 'icon_small_4'\\n});\\ndata.push({\\n    title: '院线热映',\\n    url: 'hiker://page/nowplaying#noHistory#',\\n    pic_url: 'https://s21.ax1x.com/2024/06/09/pkNrX5Q.png',\\n    col_type: 'icon_small_4'\\n});\\nlet searchMode = ['影片', '豆列'];\\ndata.push({\\n    title: '搜索模式',\\n    pic_url: 'https://s21.ax1x.com/2024/06/10/pkN2pHP.png',\\n    url: $(searchMode, 1, \\\"切换搜索模式\\\").select(() => {\\n        setItem(\\\"searchMode\\\", input);\\n        refreshPage(false);\\n        return \\\"toast://已切换为\\\" + input;\\n    }),\\n    col_type: 'icon_small_4'\\n});\\nlet hotClass = {\\n    \\\"收藏\\\": {\\n        \\\"影片\\\": \\\"影片\\\",\\n    },\\n    \\\"豆瓣\\\": {\\n        '热门华语电影': 'hot_gaia?area=华语',\\n        '热门欧美电影': 'hot_gaia?area=欧美',\\n        '热门韩国电影': 'hot_gaia?area=韩国',\\n        '热门日本电影': 'hot_gaia?area=日本',\\n        '热门国产剧': 'tv_domestic',\\n        '热门欧美剧': 'tv_american',\\n        '热门日剧': 'tv_japanese',\\n        '热门韩剧': 'tv_korean',\\n        '热门动画': 'tv_animation',\\n        '热门国内综艺': 'show_domestic',\\n        '热门国外综艺': 'show_foreign'\\n    },\\n    \\\"夸克\\\": {\\n        \\\"热搜电视剧\\\": \\\"电视剧\\\",\\n        \\\"热搜电影\\\": \\\"电影\\\",\\n        \\\"热搜动漫\\\": \\\"动漫\\\",\\n        \\\"热搜综艺\\\": \\\"综艺\\\"\\n    },\\n    \\\"百度\\\": {\\n        \\\"热搜电视剧\\\": \\\"teleplay\\\",\\n        \\\"热搜电影\\\": \\\"movie\\\"\\n    }\\n};\\nlet id = Date.now() + MY_RULE.title;\\nlet dataSource = Object.keys(hotClass);\\nlet selectsource = getItem(\\\"dataSource\\\", dataSource[0]);\\nlet hotkeys = Object.keys(hotClass[selectsource]);\\nlet selectkey = getItem(\\\"hotkey\\\", hotkeys[0]);\\nlet tabkey = hotClass[selectsource][selectkey];\\ndata.push({\\n    title: '推荐来源',\\n    pic_url: 'https://s21.ax1x.com/2024/06/09/pkNrOUg.png',\\n    url: $(dataSource, 1, \\\"切换数据源\\\").select(() => {\\n        setItem(\\\"dataSource\\\", input);\\n        clearItem(\\\"hotkey\\\");\\n        refreshPage(false);\\n        return \\\"toast://已切换为\\\" + input;\\n    }),\\n    col_type: 'icon_small_4'\\n});\\ndata.push({\\n    col_type: 'line'\\n});\\ndata.push({\\n    title: '<span style=\\\"color:#ff6601\\\"><b>' + selectsource + selectkey + '</b></span>',\\n    url: 'https://s21.ax1x.com/2024/06/09/pkNrvCj.png',\\n    url: $(hotkeys, 1, \\\"切换分类\\\").select(() => {\\n        setItem(\\\"hotkey\\\", input);\\n        refreshPage(false);\\n        return \\\"toast://已切换为\\\" + input;\\n    }),\\n    col_type: \\\"avatar\\\",\\n    pic_url: \\\"hiker://images/icon_fire\\\",\\n\\n});\\ndata.push({\\n    title: \\\"正在加载...\\\",\\n    url: \\\"hiker://empty\\\",\\n    col_type: \\\"text_center_1\\\",\\n    extra: {\\n        id: id + \\\":hotkey\\\",\\n        lineVisible: false\\n    }\\n});\\nsetResult(data);\\nlet sd = [];\\nlet setSearchKey = name => {\\n    putMyVar('s', name);\\n    refreshPage();\\n    return 'hiker://empty'\\n};\\nlet getTitle = (i, name) => {\\n    let color;\\n    switch (i) {\\n        case 0:\\n            color = \\\"#ff3300\\\";\\n            break;\\n        case 1:\\n            color = \\\"#ff6600\\\";\\n            break;\\n        case 2:\\n            color = \\\"#ff9900\\\"\\n            break;\\n        default:\\n            color = \\\"black\\\";\\n    }\\n    return \\\"““””\\\" + String(i + 1).fontcolor(color) + \\\"\\\\t\\\\t\\\\t\\\" + name;\\n}\\ntry {\\n    switch (selectsource) {\\n        default: let collection = JSON.parse(fetch('hiker://collection'));\\n        let newCollection = [];\\n        collection.map((item) => {\\n            try {\\n                if (item.mITitle != '网页浏览' && JSON.parse(item.params).title == MY_RULE.title && item.cUrl == 'hiker://page/sources#immersiveTheme#') {\\n                    newCollection.push(item);\\n                }\\n            } catch (e) {}\\n        });\\n        if (newCollection.length > 2) {\\n            newCollection.splice(2);\\n        };\\n        newCollection.map((item, index) => {\\n\\n            let did = JSON.parse(JSON.parse(item.params).params).id;\\n            let update = getEpisodes(did).update;\\n            if (update != getItem('update' + did, '暂无片源')) {\\n                setItem('update' + did, update);\\n                update = colorHtml('#FF5D50', '更新情况：' + update);\\n            }\\n            sd.push({\\n                title: item.mTitle,\\n                desc: update + '\\\\n上次看到：' + (item.lastClick == undefined ? '暂无足迹' : item.lastClick.split('@')[0]),\\n                pic_url: JSON.parse(JSON.parse(item.params).params).cover,\\n                url: item.cUrl,\\n                extra: item.params != null ? JSON.parse(item.params).params : {},\\n                col_type: 'movie_1_vertical_pic'\\n            });\\n        });\\n        if (newCollection.length < 2) {\\n            for (let i = 0; i < (2 - newCollection.length); i++) {\\n                sd.push({\\n                    title: '最近没有追剧',\\n                    desc: '追剧页面收藏的剧集将显示在这里，打开首页自动获取更新情况，只显示最近看过的两个!',\\n                    url: 'hiker://empty',\\n                    pic_url: 'https://img2.doubanio.com/cuphead/movie-static/pics/celebrity-default-large.png@Referer=https://m.douban.com/',\\n                    col_type: 'movie_1_vertical_pic'\\n                });\\n            }\\n        }\\n        break;\\n        case \\\"百度\\\":\\n                var json = request('https://top.baidu.com/api/board?platform=wise&tab=' + tabkey + '&tag=%7B%22category%22:%22%E5%85%A8%E9%83%A8%E7%B1%BB%E5%9E%8B%22%7D', {\\n                headers: {\\n                    'User-Agent': 'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.51 Mobile Safari/537.36',\\n                    'Host': 'top.baidu.com',\\n                    'Accept': 'application/json, text/plain, */*',\\n                    'Accept-Language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7',\\n                    'Accept-Encoding': 'gzip, deflate, br',\\n                    'Referer': 'https://top.baidu.com/board?tab=novel',\\n                }\\n            });\\n            var list = JSON.parse(json).data.cards[0].content;\\n            for (let i = 0; i < list.length; i++) {\\n                let item = list[i];\\n                let name = item.word + ' (' + item.show[2] + ')';\\n                let des = item.desc;\\n                sd.push({\\n                    title: getTitle(i, name),\\n                    url: 'hiker://search?s=' + name.split(' ', 2)[0] + '&rule=' + MY_RULE.title,\\n                    desc: des,\\n                    img: item.img,\\n                    col_type: \\\"movie_1_vertical_pic\\\"\\n                });\\n            }\\n            break;\\n        case \\\"夸克\\\":\\n                var json = request(\\\"https://news.myquark.cn/v2/toplist/movie?&channel=\\\" + tabkey + \\\"&rank_type=%E6%9C%80%E7%83%AD\\\");\\n            var xmlData = (JSON.parse(json).data || \\\"\\\").replace(/title>/g, \\\"h_title>\\\").replace(/src>/g, \\\"h_src>\\\").replace(/area>/g, \\\"h_area\\\");\\n            var list = pdfa(xmlData, \\\"body&&item\\\");\\n            var getText = t => t;\\n            var trend = [\\\"ㄧ\\\", \\\"↑\\\", \\\"↓\\\"];\\n            for (let i = 0; i < list.length; i++) {\\n                let item = list[i];\\n                let name = pdfh(item, \\\"h_title&&Text\\\");\\n                let des = \\\"热度：\\\" + pdfh(item, \\\"hot_score&&Text\\\") + \\\" \\\" + trend.at(pdfh(item, \\\"hot_trend&&Text\\\")) +\\n                    \\\"\\\\n评分：\\\" + pdfh(item, \\\"score_avg&&Text\\\").replace(/^0$/, \\\"暂无评分\\\") +\\n                    \\\"\\\\n\\\" + pdfh(item, \\\"year&&Text\\\") + \\\"·\\\" + pdfh(item, \\\"h_area&&Text\\\") + \\\"·\\\" + pdfh(item, \\\"category&&Text\\\").replace(\\\",\\\", \\\"·\\\");\\n                sd.push({\\n                    title: getTitle(i, name),\\n                    url: 'hiker://search?s=' + name + '&rule=' + MY_RULE.title,\\n                    desc: des,\\n                    img: pdfh(item, \\\"h_src&&Text\\\"),\\n                    col_type: \\\"movie_1_vertical_pic\\\"\\n                });\\n            }\\n            break;\\n        case \\\"豆瓣\\\":\\n                if (tabkey.indexOf('?') != -1) {\\n                let s = getDoubanRes(\\\"https://frodo.douban.com/api/v2/movie/\\\" + tabkey + \\\"&playable=0&sort=recommend&score_range=0,10&start=0&count=10&loc_id=108288\\\");\\n                l = s.items;\\n            } else {\\n                let s = getDoubanRes(\\\"https://frodo.douban.com/api/v2/subject_collection/\\\" + tabkey + \\\"/items?playable=0&sort=recommend&score_range=0,10&start=0&count=10\\\");\\n                l = s.subject_collection_items;\\n            }\\n            l.map((item, i) => {\\n                sd.push({\\n                    desc: item.card_subtitle,\\n                    title: getTitle(i, item.rating == null ? (item.title + '(' + item.null_rating_reason + ')\\\\n\\\\n' + '上映时间:' + item.year) : (item.title + '(' + item.rating.value + '分)' + '\\\\n\\\\n上映时间:' + item.year)),\\n                    pic_url: item.pic.large + '@Referer=https://m.douban.com/',\\n                    url: 'hiker://page/movieDetail#noHistory##immersiveTheme#',\\n                    col_type: 'movie_1_vertical_pic',\\n                    extra: {\\n                        id: item.id,\\n                        title: item.title,\\n                        target_type: item.type\\n                    }\\n                });\\n            });\\n            break;\\n    }\\n    addItemAfter(id + \\\":hotkey\\\", sd.slice(0, 10));\\n} catch (e) {\\n    log(e.toString());\\n} finally {\\n    deleteItem(id + \\\":hotkey\\\");\\n}\\nsetResult(data);\"},{\"col_type\":\"movie_3\",\"name\":\"剧评详情\",\"path\":\"dramaReviewView\",\"rule\":\"function dramaReviewView(id) {\\r\\n    setPageTitle('剧评详情');\\r\\n    let getDoubanRes = $.require('function').getDoubanRes;\\r\\n    let star = $.require('function').star;\\r\\n    let i = getDoubanRes(\\\"https://frodo.douban.com/api/v2/review/\\\" + id);\\r\\n    i.photos.forEach((e => {\\r\\n        i.content = i.content.replace('id=\\\"' + e.tag_name + '\\\"', 'src=\\\"' + e.image.large.url + \\\"@Referer=\\\" + e.image.large.url + '\\\"')\\r\\n    }));\\r\\n    let l = getDoubanRes(\\\"https://frodo.douban.com/api/v2/review/\\\" + id + \\\"/comments\\\");\\r\\n    let o = [{\\r\\n        col_type: \\\"blank_block\\\"\\r\\n    }, {\\r\\n        title: \\\"<big><strong>评论：</strong></big>\\\",\\r\\n        col_type: \\\"rich_text\\\"\\r\\n    }];\\r\\n    l.comments.length > 0 ? l.comments.forEach((e => {\\r\\n        o.push({\\r\\n            title: e.author.name,\\r\\n            img: e.author.avatar,\\r\\n            url: e.author.url,\\r\\n            col_type: \\\"avatar\\\"\\r\\n        })\\r\\n        o.push({\\r\\n            title: e.text + (e.replies.length > 0 ? ' <small><a href=\\\"hiker://empty#noHistory#@rule=js:eval(JSON.parse(fetch(`hiker://page/dramaReviewView`)).rule);dramaReviewReplyView(' + e.id + ');\\\">[查看回复]</a></small>' : \\\"\\\"),\\r\\n            col_type: \\\"rich_text\\\"\\r\\n        })\\r\\n        o.push({\\r\\n            col_type: \\\"line\\\"\\r\\n        })\\r\\n    })) : o.push({\\r\\n        title: '<font color=\\\"grey\\\">( •̥́ ˍ •̀ू )还没有人评论...</font>',\\r\\n        col_type: \\\"rich_text\\\"\\r\\n    });\\r\\n\\r\\n    let a = \\\"\\\";\\r\\n    if (i.rating) {\\r\\n        a = star(i.rating.value * 2);\\r\\n    }\\r\\n    let color = \\\"#ffac2d\\\";\\r\\n    let s = [{\\r\\n        title: \\\"<big><strong>\\\" + i.title + \\\"</strong></big>\\\",\\r\\n        col_type: \\\"rich_text\\\"\\r\\n    }, {\\r\\n        title: i.user.name + \\\" 的剧评\\\",\\r\\n        img: i.user.avatar,\\r\\n        url: i.user.url,\\r\\n        col_type: \\\"avatar\\\"\\r\\n    }, {\\r\\n        title: (i.spoiler ? \\\"<small><font color=#f20c00>这篇影评可能有剧透</font></small><br/>\\\" : \\\"\\\") + (a ? '<small>看过 <font color=' + color + '>' + a + \\\"</font><br/></small>\\\" : \\\"\\\") + '<small><font color=\\\"grey\\\">' + /\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}/g.exec(i.create_time) + \\\"</font></small>\\\",\\r\\n        col_type: \\\"rich_text\\\"\\r\\n    }, {\\r\\n        col_type: \\\"line_blank\\\"\\r\\n    }, {\\r\\n        title: i.content.replace(/<div\\\\s*[^>]*>(.*?)<\\\\/div>/g, \\\"$1\\\") + (i.is_original ? '<small><font color=\\\"grey\\\">&copy;本文版权归该作者所有，任何形式转载请联系作者。</font></small>' : \\\"\\\"),\\r\\n        col_type: \\\"rich_text\\\"\\r\\n    }];\\r\\n    setHomeResult({\\r\\n        data: s.concat(o)\\r\\n    })\\r\\n}\\r\\n\\r\\nfunction dramaReviewReplyView(id) {\\r\\n    setPageTitle('回复详情');\\r\\n    let getDoubanRes = $.require('function').getDoubanRes;\\r\\n    let t = getDoubanRes(\\\"https://frodo.douban.com/api/v2/review/comment/\\\" + id + \\\"/replies\\\");\\r\\n    let i = [];\\r\\n    t.replies.forEach((e => {\\r\\n        i.push({\\r\\n            title: e.author.name,\\r\\n            img: e.author.avatar,\\r\\n            url: e.author.url,\\r\\n            col_type: \\\"avatar\\\"\\r\\n        })\\r\\n        i.push({\\r\\n            title: (e.ref_comment.has_ref ? '回复@<font color=\\\"blue\\\">' + e.ref_comment.author.name + \\\"</font>：\\\" : \\\"\\\") + e.text,\\r\\n            col_type: \\\"rich_text\\\"\\r\\n        })\\r\\n        i.push({\\r\\n            col_type: \\\"line\\\"\\r\\n        })\\r\\n    }))\\r\\n    setHomeResult({\\r\\n        data: i\\r\\n    })\\r\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"解析\",\"path\":\"parse\",\"rule\":\"js:\\nvar d = [];\\nd.push({\\n    title: '新建解析',\\n    url: $(\\\"解析名###解析链接\\\").input(() => {\\n        var parse = JSON.parse(readFile('parse.json'));\\n        parse.push({\\n            name: input.split('###')[0],\\n            url: input.split('###')[1]\\n        });\\n        saveFile('parse.json', JSON.stringify(parse));\\n        refreshPage();\\n    }),\\n    col_type: 'text_center_1',\\n});\\nvar parse = JSON.parse(readFile('parse.json'));\\nfor (var i in parse) {\\n    d.push({\\n        title: parse[i].name,\\n        desc: parse[i].url,\\n        url: parse[i].url,\\n        col_type: 'text_1'\\n    }, {\\n        title: '置顶',\\n        url: $('是否置顶' + parse[i].name).confirm((num) => {\\n            var parse = JSON.parse(readFile('parse.json'));\\n            var temp = parse[num];\\n            parse.splice(num, 1);\\n            parse.unshift(temp);\\n            saveFile('parse.json', JSON.stringify(parse));\\n            refreshPage();\\n        }, i),\\n        col_type: 'text_3'\\n    }, {\\n        title: '修改',\\n        url: $(parse[i].name + '###' + parse[i].url).input((num) => {\\n            var parse = JSON.parse(readFile('parse.json'));\\n            parse[num].name = input.split('###')[0];\\n            parse[num].url = input.split('###')[1];\\n            saveFile('parse.json', JSON.stringify(parse));\\n            refreshPage();\\n            return 'hiker://empty';\\n        }, i),\\n        col_type: 'text_3'\\n    }, {\\n        title: '删除',\\n        url: $('是否确认删除' + parse[i].name).confirm((num) => {\\n            var parse = JSON.parse(readFile('parse.json'));\\n            parse.splice(num, 1);\\n            saveFile('parse.json', JSON.stringify(parse));\\n            refreshPage();\\n        }, i),\\n        col_type: 'text_3'\\n    });\\n}\\nsetResult(d);\"}]","proxy":"","icon":"https://pp.myapp.com/ma_icon/0/icon_52764383_1641458173/256"}
{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"一级轮播","path":"lunbo","rule":"js:\nfunction banner(title, start, arr, data, cfg) {\n    //log(data)\n    let id = title + 'lunbo';\n    var rnum = Math.floor(Math.random() * data.length);\n    var item = data[rnum]; //log(item)\n    putMyVar('rnum', rnum);\n    let time = 5000;\n    let col_type = 'pic_1_card';\n    let color = \"white\";\n    let desc = '';\n    if (cfg != undefined) {\n        time = cfg.time ? cfg.time : time;\n        col_type = cfg.col_type ? cfg.col_type : col_type;\n        desc = cfg.desc ? cfg.desc : desc;\n    }\n\n    arr.push({\n        col_type: col_type,\n        img: item.img,\n        desc: desc,\n        title: item.title,\n        url: item.url,\n        extra: {\n            //id: id+'bar',\n            vid: item.desc.split('#')[0],\n            cid: item.desc.split('#')[1],\n        }\n    })\n\n    if (start == false || getMyVar('benstart', 'true') == 'false') {\n        unRegisterTask(id)\n        return\n    }\n    \n    //log(data)\n\n    let obj = {\n        data: data,\n    };\n\n    registerTask(id, time, $.toString((obj,id) => {\n        var data = obj.data;\n        var rum = getMyVar('rnum');\n\n        var i = Number(getMyVar('banneri', '0'));\n        if (rum != '') {\n            i = Number(rum) + 1\n            clearMyVar('rnum')\n        } else {\n            i = i + 1;\n        }\n        //log(i)\n        //log(data.length)\n\n        if (i > data.length - 1) {\n            i = 0\n        }\n        var item = data[i];\n        //log(item)\n        try {\n            updateItem(id+'bar', {\n                title: item.title,\n                img: item.img,\n                url: item.url,\n                extra: {\n                    //name: item.title.replace(/<[^>]+>/g, ''),\n                    //sname: item.extra.sname,\n                    //stype: item.extra.stype,\n                    //surl: item.url,\n                    //img:item.img,\n                    //title: item.title.replace(/<[^>]+>/g, ''),\n                    vid: item.desc.split('#')[0],\n                    cid: item.desc.split('#')[1],\n                }\n            })\n        } catch (e) {\n            log(e.message)\n            unRegisterTask(id)\n        }\n        putMyVar('banneri', i);\n\n    }, obj,id))\n}"},{"col_type":"movie_3","name":"二级","path":"erji","rule":"js:\nvar d = [];\neval(JSON.parse(request('hiker://page/hanshu')).rule)\nvar html2 = gethtml('http://43.142.232.217:8090/app/video/detail?id=' + (MY_PARAMS.id || MY_PARAMS.vid), 'GET'); //log(html2)\nvar data = JSON.parse(html2).data; //log(data)\nvar Data = transformData(extractData(data))\nvar 简介 = data.content\nsetPageTitle(Data.titles[0])\nvar 标题 = '““””' + Data.titles[0] + '\\n' + (Data.titles.slice(1, 3).join('\\n')).small();\nvar 描述 = '““””' + (Data.descs.slice(0, 3).join('\\n')).small().fontcolor('#806d9e');\nd.push({\n    title: 标题,\n    desc: 描述,\n    img: data.pic,\n    url: data.pic,\n    col_type: \"movie_1_vertical_pic_blur\",\n    extra: {\n        gradient: true\n    }\n})\nsetDesc(d, 简介)\ndata.parts.forEach((data2) => {\n    data2.part.forEach((partTitle) => {\n        d.push({\n            title: partTitle, // 直接使用 part 数组中的标题\n            url: $(partTitle).lazyRule((data) => {\n                //log(data.id)\n                //log(data.parts[0].play)\n                eval(JSON.parse(request('hiker://page/hanshu')).rule)\n                var timestamp = new Date().getTime() / 1000; //log(timestamp)\n                var t = timestamp.toString().split('.')[0]; //log(t)\n                var html = gethtml('http://43.142.232.217:8090/app/video/play?id=' + data.id + '&play=' + data.parts[0].play + '&part=' + input, 'POST'); //log(html)\n                \n                var html2 = JSON.parse(html).data[0]; //log(html2)\n                var jx = html2.parse.match(/http.*?url=/)[0]; //log(jx)\n                //var player = html2.extension.player; //log(player)\n                var source = html2.extension.url; //log(source)\n                var hash = md5(source + 'v50gjcy' + t); //log(hash)\n                var modified_source = source + '$' + t + '$' + hash; //log(modified_source)\n\n                var headers = {\n                    'x-version': '2020-09-17',\n                    'user-agent': 'Dart/2.17 (dart:io)',\n                    'appid': '4150439554430529',\n                    'ts': '1724923917970',\n                    //'accept-encoding': 'gzip',\n                    'authentication': 'NHHqFspFXhfOBgNVq/MHfjSa5zJV/hnUNcFgUa+A75fnUGKweg5Mjqc3zNiy+Ao0ASFcsMtdSNfOjTvrb/4+kbiie1G8CnEkTLjhoyfQf7YwtNZgFSxcDJneJwQVbPCRnaVIEUTFnFeA+CkMshMRFQ\\u003d\\u003d',\n                    'host': '43.142.232.217:8090',\n                    'x-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVVUlEIjoiY2E3Njc0YTUtODliYS00NjNkLWE2OGUtMzNmZmFmMmYyODU3IiwiQnVmZmVyVGltZSI6ODY0MDAwMDAwMDAwMDAsImV4cCI6MTcyNTYyMzA1NCwibmJmIjoxNzI1MDE4MjU0fQ.2Zau9hdc88_ziP6jMx7geEN64JL0X7c2ANW_CMIui-U'\n                };\n                var html3 = fetch(jx + modified_source, {\n                    headers: headers,\n                    method: 'GET'\n                }); \n               \n                var play = JSON.parse(html3).url\n                $.require(\"danmu\").load(data.id, data.parts[0].play, input, play, headers);\n                \n                return JSON.stringify({\n                    urls: [play],\n                    danmu: 'hiker://files/cache/danmu/Jong_danmu.xml'\n                }) + '#isVideo=true#'\n            }, data),\n            col_type: 'text_4',\n        });\n    });\n});\n\nvar html2 = gethtml('http://43.142.232.217:8090/app/video/list?channel=' + MY_PARAMS.cid + '&sort=addtime&type=&area=&year=&limit=6&page=1', 'GET'); //log(html2)\nvar list = JSON.parse(html2).data.items; //log(list)\nif (MY_PARAMS.cid) {\n    d.push({\n        title: \"热门推荐\",\n        url: \"hiker://empty\",\n        img: \"https://hikerfans.com/tubiao/more/84.png\",\n        col_type: \"avatar\"\n    })\n    \n    list.forEach(data => {\n        d.push({\n            title: data.name,\n            desc: data.continu,\n            img: data.pic + '@Referer=' + data.pic.match(/(http.*\\/\\/.*)\\//)[1],\n            url: `hiker://page/erji#immersiveTheme#`,\n            col_type: 'movie_3',\n            extra: {\n                id: data.id,\n                cid: data.cid\n            }\n        })\n    })\n}\n\nsetResult(d)"},{"col_type":"movie_3","name":"函数","path":"hanshu","rule":"eval(getCryptoJS())\n\n//反转函数\nfunction reverseIV(iv) {\n  // 将输入字符串转换为字符数组\n  const ivArray = iv.split('');\n  \n  // 反转字符数组\n  ivArray.reverse();\n  \n  // 将反转后的字符数组连接回字符串\n  const reversedIV = ivArray.join('');\n  \n  return reversedIV;\n}\n\n//响应解密\nfunction Decrypt(word,key,iv) {\n    \n    let decrypt = CryptoJS.AES.decrypt(word, CryptoJS.enc.Utf8.parse(key), {\n        iv: CryptoJS.enc.Utf8.parse(iv),\n        mode: CryptoJS.mode.CBC, // 使用CBC模式\n        padding: CryptoJS.pad.Pkcs7 // 使用PKCS#7填充\n    });\n    \n    // 将解密后的数据转换为原始文本\n    let decryptedStr = decrypt.toString(CryptoJS.enc.Utf8);\n    \n    // 返回解密后的文本\n    return decryptedStr;\n}\n\n//日期\nfunction getUpcomingWeekDates() {\n    // 创建一个空数组来存储日期\n    let dates = [];\n    // 循环遍历未来7天（从今天开始）\n    for (let i = 0; i < 7; i++) {\n        // 获取当前日期，并加上i天\n        let date = new Date();\n        date.setDate(date.getDate() + i);\n        // 获取年、月、日\n        let year = date.getFullYear();\n        let month = (date.getMonth() + 1).toString().padStart(2, '0'); // 月份从0开始，所以加1\n        let day = date.getDate().toString().padStart(2, '0'); // 确保日期是两位数\n        // 组合年月日，并添加到数组中\n        let formattedDate = year + '-' + month + '-' + day;\n        dates.push(formattedDate); // 将日期添加到数组中\n    }\n    return dates; // 返回日期数组\n}\n\n//请求函数\nfunction gethtml(url,method){\nvar html = fetch(url,{\n    headers: {\n    'x-version': '2020-09-17',\n    'user-agent': 'Dart/2.17 (dart:io)',\n    'appid': '4150439554430529',\n    'ts': '1724923917970',\n    //'accept-encoding': 'gzip',\n    'authentication': 'NHHqFspFXhfOBgNVq/MHfjSa5zJV/hnUNcFgUa+A75fnUGKweg5Mjqc3zNiy+Ao0ASFcsMtdSNfOjTvrb/4+kbiie1G8CnEkTLjhoyfQf7YwtNZgFSxcDJneJwQVbPCRnaVIEUTFnFeA+CkMshMRFQ\\u003d\\u003d',\n    'host': '43.142.232.217:8090',\n    'x-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVVUlEIjoiZDlmZjUzODMtZTBkOS00NDcyLTkzZGQtM2ZkOTk1YzRkYTAyIiwiQnVmZmVyVGltZSI6ODY0MDAwMDAwMDAwMDAsImV4cCI6MTcyNjIzMTc0OSwibmJmIjoxNzI1NjI2OTQ5fQ.nGJgRy8rReJkWTjbZS4jkqX3c--wGe1deKt7RvdCUcU'\n  },\n    method: 'GET'\n}); //log(html)\nvar rsakey = 'MIIEowIBAAKCAQEAxm2Kzu9L/FNX42em9Xo73JXtJCtrhleKN9jqclpK6/Iyah/TUjH5RCNItWiTKHg6LcsGxZs9+4fP6uU8oO5Qp1akaOrJTg3QTQQFyRxDrv+LN/nL6/MpSf3SnihyVPQWwlkj3yHZWrVC9HI3q2JmzGV/kzwnpVIj2as8zl4cO7OZr0F9bR+G4jblqLPmB/x/BBOGrWWCxn+YI2RVHw23dev9jql284eN/KV4tlDlbtoJGy4+Cb7nEV/THvRVZYbHAp+fMY0+NyqyslLX/btJqT8eSH6Hb8c+BSC77Dry4G8/m/wUYPdvXiL3cVhZmEaqjs8rUafGyQmW3mrflAbIJwIDAQABAoIBAQCbRhUdIbzAUyevV+kapvA5CUlsyF133wDV+vRbT7TZNcmlqgnfhCOe4k1/R7oALTS5qOo/r9+s+PYGxiPPey26BN7bCv9ECSM7YS511ZxRUL9MqjidBscEk49BHD17pRY6Ny8O6JoBlV4zkz1k67etsq9GNAiCIejT6F/IzXQicmO5MaJWCjBNSP+IPTvd5NW3DUNlt2NcCBvO2sCgSq2Z4B0IdNWeSvd4ZmA2qSkqk60A8glNR4HdRTG9VWR0fUOd/qzpN1vjBUKMaIHeUX50NCRdK8EGqrVOCq4uUgBRj7bjt0DOb9ck4vYxgBdkyK4HMYsAGdirYKxdDkseicqhAoGBAOZ750Vky38kq3MucAE/uaFpaDUSeOKDy03fumM6TLlkeAxnTQZWNBDzlrqNgQPMLu+tmm+ZsEN5buF8C2oKc97+Rz21rvrOufr4sX2PqHfj/kerYGq/NzX1jpRbqsmcs+3JxveeozHuXBbOFpd8teCGZPFPHREFDe4sZFtFmwX1AoGBANxlJNlKIz0TVmPgGCUZ4j8BRBiLPHMeFkUoam6Djou2iJLYey3ZNHhyMiRER7Smia0fY/QjqJIeSRWQlZExu6s9ijl4VSmoh4hLanOxxAE+gFnuhgK4XwMV0hvHbqSaupQdfkULZ+t3rGKzt+t+0ob7xx+LjYWEwpLsKCQKRKgrAoGADLPvfyea/5rpyCNbEPaOKJNCpwopl3JkFhqqjyV7bQxYgXaADEVcAUMrn4SFA8yRGaybwmLaEB31OoA3sNR6pmOlUYVd63zRSz/BqIXuZw0tyo1rdvaq+FJcVVjoBMyaLhTc3nDj1bCpaqhZHmhFLea6UYJmu7VnmyTfMxiW/rECgYAh4MJLTGQiTUioTZgoi9QFT1KCW1TNdUCDHPVPS5Wr0EEqIXC92XeBVDx06rIDCN586ChbLOgKnfEqCXGUQgrRBcKrlt2wa6F5x+3zHs48Srk8Gbgrzt97/+yuLHfLgaVQg0AXqOsufNTYzztkTbha23T+WltEvOWT5A0/jPyExQKBgCGbq62piyIEeMNoP/SoLvh4hTq/eeNw5yCcLEsLrgt45Xb/2YgeyXWvxTXl4c8bPdZTFYQ9A7IUYvhizpH032tDouqCsvgu3KtDO/pW6IteL17YBco7fRMQJhBuQjGDCMEGEJW76GwlXj/xUW32TN/5KeQXtHHZ4z2lZlJLU81B'; //log(rsakey)\nvar data = html.split('.')[0]; //log(data)\nvar data2 = html.split('.')[1]; //log(data2)\nvar key = rsaDecrypt(data,rsakey); //log(key)\nvar iv = reverseIV(key); //log(iv)\nvar html2 = Decrypt(data2,key,iv); //log(html2)\nreturn html2\n}\n\n//二级美化\nfunction colorCode(d) {\n    var str = Array.from(d.toString().replace('#', ''));\n    if (str.length != 6) {\n        return false;\n    } else {\n        for (var k in str) {\n            if (!((str[k] >= '0' && str[k] <= '9') || (str[k] >= 'a' && str[k] <= 'f') || (str[k] >= 'A' && str[k] <= 'F'))) {\n                return false;\n            }\n        }\n        return true;\n    }\n}    \nfunction color(d, c) {if (colorCode(d) && !colorCode(c)) {\n        var tmp = d;\n        d = c;\n        c = tmp;\n    }\n    return '‘‘’’<font color=#' + (c || '000000') + '>' + d + '</font>';\n}\nfunction snum(index,title){\n    if (index < 10) {\n                    var num = String.fromCharCode(parseInt(index)  +0+10101);\n                } else if (index < 20) {\n                    var num = String.fromCharCode(parseInt(index) + 0 + 9440);\n                } else if (index < 35) {\n                    var num = String.fromCharCode(parseInt(index) + 0 + 12860);\n                } else if (index < 50) {\n                    var num = String.fromCharCode(parseInt(index) + 0 + 12941);\n                } else {\n                    var num = parseInt(index) + 0 + '.';\n                }\n     var Title = (index == 0 ? color(num, 'FF2244') : index == 1 ? color(num, 'FF6633') : index == 2 ? color(num, 'FFBB33') : color(num, '555555')) + color(' ' + title, 555555)\n     return Title\n}    \nfunction combinPath(dire, path) {\n    let Proto = '';\n    if (dire.includes(\"//\")) {\n        [Proto, _, dire] = dire.split(/(\\/{2})/);\n        Proto += _;\n    }\n    const Paths = java.nio.file.Paths;\n    dire = dire + path;\n    var p = Paths.get(dire).toAbsolutePath().normalize();\n    return Proto + String(p);\n}    \nfunction substr(str, maxLength) {\n  let len = 0;\n  for (let i = 0; i < str.length; i++) {\n    if (str.charCodeAt(i) > 255) {\n      len += 2;\n    } else {\n      len++;\n    }\n    if (len > maxLength) {\n      return str.slice(0, i) + '...';\n    }\n  }\n  return str;\n}\nfunction setDesc(arr, desc, num) {\n  //log(desc)\n  if (desc == undefined) {\n    return;\n  }\n  desc = desc.constructor == Array ? desc.join('<br>') : desc;\n  if (desc.replace(/(<br>|\\s+|<\\/?p>|&nbsp;)/g, '').length == 0) {\n    return;\n  }\n\n  const mark = 'desc';\n  num = typeof (num) == 'undefined' ? 100 : num\n  desc = desc.startsWith('　　') ? desc : '　　' + desc;\n  desc = desc.replace(/'/g, \"&#39;\");\n  desc = desc.replace(/\\r\\n/g, \"<br>\");\n  desc = desc.replace(/\\r/g, \"<br>\");\n  desc = desc.replace(/\\n/g, \"<br>\");\n  let sdesc = substr(desc, num);\n\n  var colors = {\n    show: \"black\",\n    hide: \"grey\"\n  }\n\n  var lazy = $(`#noLoading#`).lazyRule((dc, sdc, m, cs) => {\n    var show = storage0.getItem(m, '0');\n    var title = findItem('desc').title;\n    var re = /(<\\/small><br>.*?>).+/g;\n    var exp = '展开:';\n    var ret = '收起:';\n    if (show == '1') {\n      updateItem('desc', {\n        title: title\n          .replace(ret, exp)\n          .replace(re, '$1' + sdc + '</small>')\n          .replace(/(<\\/small><br>\\<font color=\").*?(\">)/, '$1' + cs.hide + '$2')\n\n      })\n      storage0.setItem(m, '0');\n    } else {\n      updateItem('desc', {\n        title: title\n          .replace(exp, ret)\n          .replace(re, '$1' + dc + '</small>')\n          .replace(/(<\\/small><br>\\<font color=\").*?(\">)/, '$1' + cs.show + '$2')\n      })\n      storage0.setItem(m, '1');\n    }\n    return `hiker://empty`\n  }, desc, sdesc, mark, colors)\n  var sc = storage0.getItem(mark, '0') == '0' ? '展开:' : '收起:';\n  var dc = storage0.getItem(mark, '0') == '0' ? sdesc : desc;\n  var cs = storage0.getItem(mark, '0') == '0' ? colors.hide : colors.show;\n  arr.push({\n    title: '' + '<b><font color=\"#098AC1\">∷剧情简介\t</font></b>' + \"<small><a style='text-decoration: none;' href='\" + lazy + \"'>\" + sc + '</a></small><br><font color=\"' + cs + '\">' + `${dc}` + '</small>',\n    col_type: 'rich_text',\n    extra: {\n      id: 'desc',\n      lineSpacing: 6,\n      textSize: 15,\n      lineVisible: true,\n    }\n  })\n} \nfunction extractData(data) {\n    const result = {};\n    const fields = {\n        name: \"标题\",\n        created_at: \"更新\",\n        director: \"导演\",\n        actor: \"主演\",\n        continu: \"评分\",\n        year: \"上映\",\n        created_at: \"添加时间\",\n    };\n\n    Object.keys(fields).forEach(key => {\n        if (data[key]) {\n            // 如果键存在，且值是数组，使用 join 连接，否则直接赋值\n            result[fields[key]] = Array.isArray(data[key]) ? data[key].join('/') : data[key];\n        }\n    });\n\n    return result;\n}\nfunction transformData(data) {\n    const descs = [];\n    const titles = [];\n\n    if (data[\"类型\"]) descs.push(`类型：${data[\"类型\"]}`);\n    if (data[\"评分\"]) descs.push(`状态：${data[\"评分\"]}`);\n    if (data[\"更新\"]) descs.push(`更新：${data[\"更新\"]}`);\n    if (data[\"地区\"]) descs.push(`地区：${data[\"地区\"]}`);\n    if (data[\"主演\"]) descs.push(`主演：${data[\"主演\"]}`);\n\n    if (data[\"标题\"]) titles.push(data[\"标题\"]);\n    if (data[\"导演\"]) titles.push(`导演：${data[\"导演\"]}`);\n    if (data[\"上映\"]) titles.push(`上映：${data[\"上映\"]}`);\n\n    return { descs, titles };\n}\nfunction Transforweek(dates){\nconst daysOfWeek = [\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"];\n\n// 遍历日期数组并转换为对应的星期几\nconst weekdays = dates.map(dateStr => {\n  const date = new Date(dateStr); // 将字符串转换为 Date 对象\n  const day = date.getDay();      // 获取星期几 (0-6 对应 星期日 到 星期六)\n  return daysOfWeek[day];         // 返回对应的中文星期几\n});\nreturn weekdays\n}"},{"col_type":"movie_3","name":"danmu","path":"danmu","rule":"js:\nfunction getVideoDuration(videoUrl) {\n    let retriever = new android.media.MediaMetadataRetriever();\n    try {\n        // 不要抓包会报错\n        retriever.setDataSource(videoUrl, new java.util.HashMap());\n        let time = retriever.extractMetadata(android.media.MediaMetadataRetriever.METADATA_KEY_DURATION);\n        return Number(time);\n    } catch (e) {\n        log(e.toString());\n        return 0;\n    } finally {\n        retriever.release();\n    }\n}\n$.exports.load = function(vid, play, part, playurl, headers) {\n    let millisecond = getVideoDuration(playurl) || 1000 * 60 * 20; //如果获取具体时长失败，就默认20分钟的弹幕\n    let minute = Math.ceil(millisecond / 60000);\n    let res = batchFetch(Array.from({length:minute},(v, i) => ({\n        url: 'http://43.142.232.217:8090/app/danmu?vid=' + vid + '&play=' + play + '&part=' + part + '&start_time_point=' + (i * 60000) + '&end_time_point=' + (i + 1) * 60000 + '&limit=10&page=1',\n        options: {\n            headers\n        }\n    })));\n    let count = 0;\n    let data = \"\";\n    for (let htmldm of res) {\n        var items = JSON.parse(htmldm).data.items; //log(items.length)\n        for (let i = 0; i < items.length; i++) {\n            var time_point = items[i].time_point / 1000; //log(time_point)\n            var contents = JSON.parse(items[i].content); //log(contents)\n            var color = contents.color; //log(color)\n            var content = contents.content; //log(content)\n\n            tempdata = `<d p=\"${time_point},1,25,${color},0\">${content}</d>\\n`; //log(tempdata)\n            data += tempdata;\n            count++;\n        }\n    }\n    data= `<d p=\"0,5,1,16711680,0\">前方共有${count}条弹幕~</d>\\n`+data;\n    danmustr = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<i>\\n${data}</i>`; //log(danmustr)\n    writeFile('hiker://files/cache/danmu/Jong_danmu.xml', danmustr);\n}"}],"title":"囧次元APP","author":"zhao","version":1,"type":"video","url":"hiker://empty##fypage","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nvar page = MY_PAGE\nvar getRangeColors = function() {       \n    return ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\nvar timestamp = new Date().getTime() / 1000; //log(timestamp)\nvar t = timestamp.toString().split('.')[0]; //log(t)\nif (MY_PAGE == 1) {\n    let nav = [\"首页\", \"分类\", \"周表\"];\n    for (let i = 0; i < nav.length; i++) {\n        let mytitle = nav[i];\n        d.push({\n            title: getMyVar('navtitle', \"首页\") == mytitle ? '““””<b><font color=#9F5F9F>' + mytitle + '</font></b>' : mytitle,\n            url: $('#noLoading##noHistory#')\n                .lazyRule((mytitle) => {\n                    putMyVar(\"navtitle\", mytitle);\n                    refreshPage();\n                    return 'hiker://empty'\n                }, mytitle),\n            col_type: \"text_3\"\n        });\n    }\n}\nif (getMyVar('navtitle', \"首页\") == \"首页\") {\neval(JSON.parse(request('hiker://page/hanshu')).rule)\nif(MY_PAGE == 1){\nvar html2 = gethtml('http://43.142.232.217:8090/app/banners/0','GET'); //log(html2)\nvar list = JSON.parse(html2).data; //log(list)\nvar lundata = list.map((x) => {\n            return {\n                title: x.vname,\n                desc: x.vid+'#'+'1',\n                img: x.img + '@Referer=' + x.img.match(/(http.*\\/\\/.*)\\//)[1],\n                url: `hiker://page/erji#immersiveTheme#`,\n            }\n        });\n        eval(JSON.parse(fetch(\"hiker://page/lunbo\", {})).rule);\n        banner(MY_RULE.title, true, d, lundata, {\n            time: 5000,\n            col_type: 'card_pic_1',\n            desc: '0'\n        })\nd.push({\n    url: \"hiker://empty\",\n    col_type: 'line'\n})\nd.push({\n    title: '推荐◎日漫',\n    url: \"hiker://empty\",\n    col_type: 'text_1',\n})\nvar html2 = gethtml('http://43.142.232.217:8090/app/video/list?channel=1&sort=weight&type=&area=&year=&limit=6&page=1','GET'); //log(html2)\nvar list = JSON.parse(html2).data.items; //log(list)\nlist.forEach(data => {\n    d.push({\n            title: data.name,\n            desc: data.continu,\n            img: data.pic + '@Referer=' + data.pic.match(/(http.*\\/\\/.*)\\//)[1],\n            url: `hiker://page/erji#immersiveTheme#`,\n            col_type: 'movie_2',\n            extra: {\n                id: data.id,\n                cid: data.cid\n            }\n        })\n})\nd.push({\n    url: \"hiker://empty\",\n    col_type: 'line'\n})\nd.push({\n    title: '推荐◎国漫',\n    url: \"hiker://empty\",\n    col_type: 'text_1',\n})\nvar html2 = gethtml('http://43.142.232.217:8090/app/video/list?channel=2&sort=weight&type=&area=&year=&limit=6&page=1','GET'); //log(html2)\nvar list = JSON.parse(html2).data.items; //log(list)\nlist.forEach(data => {\n    d.push({\n            title: data.name,\n            desc: data.continu,\n            img: data.pic + '@Referer=' + data.pic.match(/(http.*\\/\\/.*)\\//)[1],\n            url: `hiker://page/erji#immersiveTheme#`,\n            col_type: 'movie_2',\n            extra: {\n                id: data.id,\n                cid: data.cid\n            }\n        })\n})\nd.push({\n    url: \"hiker://empty\",\n    col_type: 'line'\n})\nd.push({\n    title: '推荐◎动漫电影',\n    url: \"hiker://empty\",\n    col_type: 'text_1',\n})\nvar html2 = gethtml('http://43.142.232.217:8090/app/video/list?channel=26&sort=weight&type=&area=&year=&limit=6&page=1','GET'); //log(html2)\nvar list = JSON.parse(html2).data.items; //log(list)\nlist.forEach(data => {\n    d.push({\n            title: data.name,\n            desc: data.continu,\n            img: data.pic + '@Referer=' + data.pic.match(/(http.*\\/\\/.*)\\//)[1],\n            url: `hiker://page/erji#immersiveTheme#`,\n            col_type: 'movie_2',\n            extra: {\n                id: data.id,\n                cid: data.cid\n            }\n        })\n})\nd.push({\n    url: \"hiker://empty\",\n    col_type: 'line'\n})\nd.push({\n    title: '推荐◎其他动漫',\n    url: \"hiker://empty\",\n    col_type: 'text_1',\n})\nvar html2 = gethtml('http://43.142.232.217:8090/app/video/list?channel=3&sort=weight&type=&area=&year=&limit=6&page=1','GET'); //log(html2)\nvar list = JSON.parse(html2).data.items; //log(list)\nlist.forEach(data => {\n    d.push({\n            title: data.name,\n            desc: data.continu,\n            img: data.pic + '@Referer=' + data.pic.match(/(http.*\\/\\/.*)\\//)[1],\n            url: `hiker://page/erji#immersiveTheme#`,\n            col_type: 'movie_2',\n            extra: {\n                id: data.id,\n                cid: data.cid\n            }\n        })\n})\n\n}\n} else if (getMyVar(\"navtitle\") == \"分类\") {\neval(JSON.parse(request('hiker://page/hanshu')).rule)\nvar he = [\"日漫\",\"国漫\",\"动漫电影\",\"其他动漫\"]\nvar subs = [\"1\",\"2\",\"26\",\"3\"]\nif(page=='1'){\nhe.forEach((x,i)=>{\n    var ctitle = x\n    var sub = subs[i]\n    d.push({\n        title: getMyVar('ctitle', \"日漫\") == ctitle ? '““””'+ctitle.fontcolor('#'+getRangeColors()):ctitle,\n        url: $('#noLoading##noHistory#').lazyRule((ctitle,sub) => {\n                putMyVar(\"ctitle\", ctitle);\n                putMyVar(\"sub\",sub);\n                refreshPage();\n                return 'hiker://empty'\n            }, ctitle,sub),\n        col_type: \"scroll_button\"\n    })\n})\n}\nvar sub = getMyVar(\"sub\",subs[0])\nvar html2 = gethtml('http://43.142.232.217:8090/app/video/list?channel='+sub+'&sort=addtime&type=&area=&year=&limit=30&page='+MY_PAGE,'GET'); //log(html2)\n\nvar list = JSON.parse(html2).data.items; //log(list)\ntry {\n    list.forEach(data => {\n        d.push({\n            title: data.name,\n            desc: data.continu,\n            img: data.pic + '@Referer=' + data.pic.match(/(http.*\\/\\/.*)\\//)[1],\n            url: `hiker://page/erji#immersiveTheme#`,\n            col_type: 'movie_3',\n            extra: {\n                id: data.id,\n                cid: data.cid\n            }\n        })\n    })\n} catch (e) {}\n} else if (getMyVar(\"navtitle\") == \"周表\") {\neval(JSON.parse(request('hiker://page/hanshu')).rule)\nvar subs2 = getUpcomingWeekDates();\nvar he2 = Transforweek(subs2)\nif(page=='1'){\nhe2.forEach((x,i)=>{\n    var ctitle = x\n    var sub2 = subs2[i]\n    d.push({\n        title: getMyVar('ctitle',he2[0]) == ctitle ? '““””'+ctitle.fontcolor('#'+getRangeColors()):ctitle,\n        url: $('#noLoading##noHistory#').lazyRule((ctitle,sub2) => {\n                putMyVar(\"ctitle\", ctitle);\n                putMyVar(\"sub2\",sub2);\n                refreshPage();\n                return 'hiker://empty'\n            }, ctitle,sub2),\n        col_type: \"scroll_button\"\n    })\n})\n}\nvar sub2 = getMyVar(\"sub2\",subs2[0]);//log(sub2)\nvar html2 = gethtml('http://43.142.232.217:8090/app/video_update_list/'+sub2+'?limit=500&page=1','GET'); //log(html2)\nvar list = JSON.parse(html2).data.items; //log(list)\n\nlist.forEach(data => {\n    d.push({\n        title: data.vod_name,\n        desc: '更新日期：'+data.date.split('T')[0]+'\\n'+'更新时间：'+data.date.split('T')[1].split('+')[0],\n        img: data.vod_pic + '@Referer=' + data.vod_pic.match(/(http.*\\/\\/.*)\\//)[1],\n        url: `hiker://page/erji#immersiveTheme#`,\n        col_type: 'movie_1_vertical_pic',\n        extra: {\n            vid: data.vid,\n            cid: '1'\n        }\n    })\n})\n}\n\nsetResult(d)","searchFind":"js:\nvar d = [];\neval(JSON.parse(request('hiker://page/hanshu')).rule)\nMY_URL = MY_URL.split(\"##\")[1];\nvar html2 = gethtml(MY_URL, 'GET'); //log(html2)\nvar list = JSON.parse(html2).data.items; //log(list)\ntry {\n    list.forEach(data => {\n        d.push({\n            title: data.name,\n            desc: '状态：' + data.continu,\n            content: '地区：' + data.area + '\\n' + '类型：' + data.type + '\\n' + '年代：' + data.year,\n            img: data.pic + '@Referer=' + data.pic.match(/(http.*\\/\\/.*)\\//)[1],\n            url: `hiker://page/erji#immersiveTheme#`,\n            col_type: 'movie_3',\n            extra: {\n                id: data.id,\n                cid: data.cid\n            }\n        })\n    })\n} catch (e) {}\nsetResult(d)","search_url":"hiker://empty##http://43.142.232.217:8090/app/video/search?key=**&limit=6&page=fypage","group":"①推荐","detail_col_type":"movie_3","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"一级轮播\",\"path\":\"lunbo\",\"rule\":\"js:\\nfunction banner(title, start, arr, data, cfg) {\\n    //log(data)\\n    let id = title + 'lunbo';\\n    var rnum = Math.floor(Math.random() * data.length);\\n    var item = data[rnum]; //log(item)\\n    putMyVar('rnum', rnum);\\n    let time = 5000;\\n    let col_type = 'pic_1_card';\\n    let color = \\\"white\\\";\\n    let desc = '';\\n    if (cfg != undefined) {\\n        time = cfg.time ? cfg.time : time;\\n        col_type = cfg.col_type ? cfg.col_type : col_type;\\n        desc = cfg.desc ? cfg.desc : desc;\\n    }\\n\\n    arr.push({\\n        col_type: col_type,\\n        img: item.img,\\n        desc: desc,\\n        title: item.title,\\n        url: item.url,\\n        extra: {\\n            //id: id+'bar',\\n            vid: item.desc.split('#')[0],\\n            cid: item.desc.split('#')[1],\\n        }\\n    })\\n\\n    if (start == false || getMyVar('benstart', 'true') == 'false') {\\n        unRegisterTask(id)\\n        return\\n    }\\n    \\n    //log(data)\\n\\n    let obj = {\\n        data: data,\\n    };\\n\\n    registerTask(id, time, $.toString((obj,id) => {\\n        var data = obj.data;\\n        var rum = getMyVar('rnum');\\n\\n        var i = Number(getMyVar('banneri', '0'));\\n        if (rum != '') {\\n            i = Number(rum) + 1\\n            clearMyVar('rnum')\\n        } else {\\n            i = i + 1;\\n        }\\n        //log(i)\\n        //log(data.length)\\n\\n        if (i > data.length - 1) {\\n            i = 0\\n        }\\n        var item = data[i];\\n        //log(item)\\n        try {\\n            updateItem(id+'bar', {\\n                title: item.title,\\n                img: item.img,\\n                url: item.url,\\n                extra: {\\n                    //name: item.title.replace(/<[^>]+>/g, ''),\\n                    //sname: item.extra.sname,\\n                    //stype: item.extra.stype,\\n                    //surl: item.url,\\n                    //img:item.img,\\n                    //title: item.title.replace(/<[^>]+>/g, ''),\\n                    vid: item.desc.split('#')[0],\\n                    cid: item.desc.split('#')[1],\\n                }\\n            })\\n        } catch (e) {\\n            log(e.message)\\n            unRegisterTask(id)\\n        }\\n        putMyVar('banneri', i);\\n\\n    }, obj,id))\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"二级\",\"path\":\"erji\",\"rule\":\"js:\\nvar d = [];\\neval(JSON.parse(request('hiker://page/hanshu')).rule)\\nvar html2 = gethtml('http://43.142.232.217:8090/app/video/detail?id=' + (MY_PARAMS.id || MY_PARAMS.vid), 'GET'); //log(html2)\\nvar data = JSON.parse(html2).data; //log(data)\\nvar Data = transformData(extractData(data))\\nvar 简介 = data.content\\nsetPageTitle(Data.titles[0])\\nvar 标题 = '““””' + Data.titles[0] + '\\\\n' + (Data.titles.slice(1, 3).join('\\\\n')).small();\\nvar 描述 = '““””' + (Data.descs.slice(0, 3).join('\\\\n')).small().fontcolor('#806d9e');\\nd.push({\\n    title: 标题,\\n    desc: 描述,\\n    img: data.pic,\\n    url: data.pic,\\n    col_type: \\\"movie_1_vertical_pic_blur\\\",\\n    extra: {\\n        gradient: true\\n    }\\n})\\nsetDesc(d, 简介)\\ndata.parts.forEach((data2) => {\\n    data2.part.forEach((partTitle) => {\\n        d.push({\\n            title: partTitle, // 直接使用 part 数组中的标题\\n            url: $(partTitle).lazyRule((data) => {\\n                //log(data.id)\\n                //log(data.parts[0].play)\\n                eval(JSON.parse(request('hiker://page/hanshu')).rule)\\n                var timestamp = new Date().getTime() / 1000; //log(timestamp)\\n                var t = timestamp.toString().split('.')[0]; //log(t)\\n                var html = gethtml('http://43.142.232.217:8090/app/video/play?id=' + data.id + '&play=' + data.parts[0].play + '&part=' + input, 'POST'); //log(html)\\n                \\n                var html2 = JSON.parse(html).data[0]; //log(html2)\\n                var jx = html2.parse.match(/http.*?url=/)[0]; //log(jx)\\n                //var player = html2.extension.player; //log(player)\\n                var source = html2.extension.url; //log(source)\\n                var hash = md5(source + 'v50gjcy' + t); //log(hash)\\n                var modified_source = source + '$' + t + '$' + hash; //log(modified_source)\\n\\n                var headers = {\\n                    'x-version': '2020-09-17',\\n                    'user-agent': 'Dart/2.17 (dart:io)',\\n                    'appid': '4150439554430529',\\n                    'ts': '1724923917970',\\n                    //'accept-encoding': 'gzip',\\n                    'authentication': 'NHHqFspFXhfOBgNVq/MHfjSa5zJV/hnUNcFgUa+A75fnUGKweg5Mjqc3zNiy+Ao0ASFcsMtdSNfOjTvrb/4+kbiie1G8CnEkTLjhoyfQf7YwtNZgFSxcDJneJwQVbPCRnaVIEUTFnFeA+CkMshMRFQ\\\\u003d\\\\u003d',\\n                    'host': '43.142.232.217:8090',\\n                    'x-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVVUlEIjoiY2E3Njc0YTUtODliYS00NjNkLWE2OGUtMzNmZmFmMmYyODU3IiwiQnVmZmVyVGltZSI6ODY0MDAwMDAwMDAwMDAsImV4cCI6MTcyNTYyMzA1NCwibmJmIjoxNzI1MDE4MjU0fQ.2Zau9hdc88_ziP6jMx7geEN64JL0X7c2ANW_CMIui-U'\\n                };\\n                var html3 = fetch(jx + modified_source, {\\n                    headers: headers,\\n                    method: 'GET'\\n                }); \\n               \\n                var play = JSON.parse(html3).url\\n                $.require(\\\"danmu\\\").load(data.id, data.parts[0].play, input, play, headers);\\n                \\n                return JSON.stringify({\\n                    urls: [play],\\n                    danmu: 'hiker://files/cache/danmu/Jong_danmu.xml'\\n                }) + '#isVideo=true#'\\n            }, data),\\n            col_type: 'text_4',\\n        });\\n    });\\n});\\n\\nvar html2 = gethtml('http://43.142.232.217:8090/app/video/list?channel=' + MY_PARAMS.cid + '&sort=addtime&type=&area=&year=&limit=6&page=1', 'GET'); //log(html2)\\nvar list = JSON.parse(html2).data.items; //log(list)\\nif (MY_PARAMS.cid) {\\n    d.push({\\n        title: \\\"热门推荐\\\",\\n        url: \\\"hiker://empty\\\",\\n        img: \\\"https://hikerfans.com/tubiao/more/84.png\\\",\\n        col_type: \\\"avatar\\\"\\n    })\\n    \\n    list.forEach(data => {\\n        d.push({\\n            title: data.name,\\n            desc: data.continu,\\n            img: data.pic + '@Referer=' + data.pic.match(/(http.*\\\\/\\\\/.*)\\\\//)[1],\\n            url: `hiker://page/erji#immersiveTheme#`,\\n            col_type: 'movie_3',\\n            extra: {\\n                id: data.id,\\n                cid: data.cid\\n            }\\n        })\\n    })\\n}\\n\\nsetResult(d)\"},{\"col_type\":\"movie_3\",\"name\":\"函数\",\"path\":\"hanshu\",\"rule\":\"eval(getCryptoJS())\\n\\n//反转函数\\nfunction reverseIV(iv) {\\n  // 将输入字符串转换为字符数组\\n  const ivArray = iv.split('');\\n  \\n  // 反转字符数组\\n  ivArray.reverse();\\n  \\n  // 将反转后的字符数组连接回字符串\\n  const reversedIV = ivArray.join('');\\n  \\n  return reversedIV;\\n}\\n\\n//响应解密\\nfunction Decrypt(word,key,iv) {\\n    \\n    let decrypt = CryptoJS.AES.decrypt(word, CryptoJS.enc.Utf8.parse(key), {\\n        iv: CryptoJS.enc.Utf8.parse(iv),\\n        mode: CryptoJS.mode.CBC, // 使用CBC模式\\n        padding: CryptoJS.pad.Pkcs7 // 使用PKCS#7填充\\n    });\\n    \\n    // 将解密后的数据转换为原始文本\\n    let decryptedStr = decrypt.toString(CryptoJS.enc.Utf8);\\n    \\n    // 返回解密后的文本\\n    return decryptedStr;\\n}\\n\\n//日期\\nfunction getUpcomingWeekDates() {\\n    // 创建一个空数组来存储日期\\n    let dates = [];\\n    // 循环遍历未来7天（从今天开始）\\n    for (let i = 0; i < 7; i++) {\\n        // 获取当前日期，并加上i天\\n        let date = new Date();\\n        date.setDate(date.getDate() + i);\\n        // 获取年、月、日\\n        let year = date.getFullYear();\\n        let month = (date.getMonth() + 1).toString().padStart(2, '0'); // 月份从0开始，所以加1\\n        let day = date.getDate().toString().padStart(2, '0'); // 确保日期是两位数\\n        // 组合年月日，并添加到数组中\\n        let formattedDate = year + '-' + month + '-' + day;\\n        dates.push(formattedDate); // 将日期添加到数组中\\n    }\\n    return dates; // 返回日期数组\\n}\\n\\n//请求函数\\nfunction gethtml(url,method){\\nvar html = fetch(url,{\\n    headers: {\\n    'x-version': '2020-09-17',\\n    'user-agent': 'Dart/2.17 (dart:io)',\\n    'appid': '4150439554430529',\\n    'ts': '1724923917970',\\n    //'accept-encoding': 'gzip',\\n    'authentication': 'NHHqFspFXhfOBgNVq/MHfjSa5zJV/hnUNcFgUa+A75fnUGKweg5Mjqc3zNiy+Ao0ASFcsMtdSNfOjTvrb/4+kbiie1G8CnEkTLjhoyfQf7YwtNZgFSxcDJneJwQVbPCRnaVIEUTFnFeA+CkMshMRFQ\\\\u003d\\\\u003d',\\n    'host': '43.142.232.217:8090',\\n    'x-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVVUlEIjoiZDlmZjUzODMtZTBkOS00NDcyLTkzZGQtM2ZkOTk1YzRkYTAyIiwiQnVmZmVyVGltZSI6ODY0MDAwMDAwMDAwMDAsImV4cCI6MTcyNjIzMTc0OSwibmJmIjoxNzI1NjI2OTQ5fQ.nGJgRy8rReJkWTjbZS4jkqX3c--wGe1deKt7RvdCUcU'\\n  },\\n    method: 'GET'\\n}); //log(html)\\nvar rsakey = 'MIIEowIBAAKCAQEAxm2Kzu9L/FNX42em9Xo73JXtJCtrhleKN9jqclpK6/Iyah/TUjH5RCNItWiTKHg6LcsGxZs9+4fP6uU8oO5Qp1akaOrJTg3QTQQFyRxDrv+LN/nL6/MpSf3SnihyVPQWwlkj3yHZWrVC9HI3q2JmzGV/kzwnpVIj2as8zl4cO7OZr0F9bR+G4jblqLPmB/x/BBOGrWWCxn+YI2RVHw23dev9jql284eN/KV4tlDlbtoJGy4+Cb7nEV/THvRVZYbHAp+fMY0+NyqyslLX/btJqT8eSH6Hb8c+BSC77Dry4G8/m/wUYPdvXiL3cVhZmEaqjs8rUafGyQmW3mrflAbIJwIDAQABAoIBAQCbRhUdIbzAUyevV+kapvA5CUlsyF133wDV+vRbT7TZNcmlqgnfhCOe4k1/R7oALTS5qOo/r9+s+PYGxiPPey26BN7bCv9ECSM7YS511ZxRUL9MqjidBscEk49BHD17pRY6Ny8O6JoBlV4zkz1k67etsq9GNAiCIejT6F/IzXQicmO5MaJWCjBNSP+IPTvd5NW3DUNlt2NcCBvO2sCgSq2Z4B0IdNWeSvd4ZmA2qSkqk60A8glNR4HdRTG9VWR0fUOd/qzpN1vjBUKMaIHeUX50NCRdK8EGqrVOCq4uUgBRj7bjt0DOb9ck4vYxgBdkyK4HMYsAGdirYKxdDkseicqhAoGBAOZ750Vky38kq3MucAE/uaFpaDUSeOKDy03fumM6TLlkeAxnTQZWNBDzlrqNgQPMLu+tmm+ZsEN5buF8C2oKc97+Rz21rvrOufr4sX2PqHfj/kerYGq/NzX1jpRbqsmcs+3JxveeozHuXBbOFpd8teCGZPFPHREFDe4sZFtFmwX1AoGBANxlJNlKIz0TVmPgGCUZ4j8BRBiLPHMeFkUoam6Djou2iJLYey3ZNHhyMiRER7Smia0fY/QjqJIeSRWQlZExu6s9ijl4VSmoh4hLanOxxAE+gFnuhgK4XwMV0hvHbqSaupQdfkULZ+t3rGKzt+t+0ob7xx+LjYWEwpLsKCQKRKgrAoGADLPvfyea/5rpyCNbEPaOKJNCpwopl3JkFhqqjyV7bQxYgXaADEVcAUMrn4SFA8yRGaybwmLaEB31OoA3sNR6pmOlUYVd63zRSz/BqIXuZw0tyo1rdvaq+FJcVVjoBMyaLhTc3nDj1bCpaqhZHmhFLea6UYJmu7VnmyTfMxiW/rECgYAh4MJLTGQiTUioTZgoi9QFT1KCW1TNdUCDHPVPS5Wr0EEqIXC92XeBVDx06rIDCN586ChbLOgKnfEqCXGUQgrRBcKrlt2wa6F5x+3zHs48Srk8Gbgrzt97/+yuLHfLgaVQg0AXqOsufNTYzztkTbha23T+WltEvOWT5A0/jPyExQKBgCGbq62piyIEeMNoP/SoLvh4hTq/eeNw5yCcLEsLrgt45Xb/2YgeyXWvxTXl4c8bPdZTFYQ9A7IUYvhizpH032tDouqCsvgu3KtDO/pW6IteL17YBco7fRMQJhBuQjGDCMEGEJW76GwlXj/xUW32TN/5KeQXtHHZ4z2lZlJLU81B'; //log(rsakey)\\nvar data = html.split('.')[0]; //log(data)\\nvar data2 = html.split('.')[1]; //log(data2)\\nvar key = rsaDecrypt(data,rsakey); //log(key)\\nvar iv = reverseIV(key); //log(iv)\\nvar html2 = Decrypt(data2,key,iv); //log(html2)\\nreturn html2\\n}\\n\\n//二级美化\\nfunction colorCode(d) {\\n    var str = Array.from(d.toString().replace('#', ''));\\n    if (str.length != 6) {\\n        return false;\\n    } else {\\n        for (var k in str) {\\n            if (!((str[k] >= '0' && str[k] <= '9') || (str[k] >= 'a' && str[k] <= 'f') || (str[k] >= 'A' && str[k] <= 'F'))) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n}    \\nfunction color(d, c) {if (colorCode(d) && !colorCode(c)) {\\n        var tmp = d;\\n        d = c;\\n        c = tmp;\\n    }\\n    return '‘‘’’<font color=#' + (c || '000000') + '>' + d + '</font>';\\n}\\nfunction snum(index,title){\\n    if (index < 10) {\\n                    var num = String.fromCharCode(parseInt(index)  +0+10101);\\n                } else if (index < 20) {\\n                    var num = String.fromCharCode(parseInt(index) + 0 + 9440);\\n                } else if (index < 35) {\\n                    var num = String.fromCharCode(parseInt(index) + 0 + 12860);\\n                } else if (index < 50) {\\n                    var num = String.fromCharCode(parseInt(index) + 0 + 12941);\\n                } else {\\n                    var num = parseInt(index) + 0 + '.';\\n                }\\n     var Title = (index == 0 ? color(num, 'FF2244') : index == 1 ? color(num, 'FF6633') : index == 2 ? color(num, 'FFBB33') : color(num, '555555')) + color(' ' + title, 555555)\\n     return Title\\n}    \\nfunction combinPath(dire, path) {\\n    let Proto = '';\\n    if (dire.includes(\\\"//\\\")) {\\n        [Proto, _, dire] = dire.split(/(\\\\/{2})/);\\n        Proto += _;\\n    }\\n    const Paths = java.nio.file.Paths;\\n    dire = dire + path;\\n    var p = Paths.get(dire).toAbsolutePath().normalize();\\n    return Proto + String(p);\\n}    \\nfunction substr(str, maxLength) {\\n  let len = 0;\\n  for (let i = 0; i < str.length; i++) {\\n    if (str.charCodeAt(i) > 255) {\\n      len += 2;\\n    } else {\\n      len++;\\n    }\\n    if (len > maxLength) {\\n      return str.slice(0, i) + '...';\\n    }\\n  }\\n  return str;\\n}\\nfunction setDesc(arr, desc, num) {\\n  //log(desc)\\n  if (desc == undefined) {\\n    return;\\n  }\\n  desc = desc.constructor == Array ? desc.join('<br>') : desc;\\n  if (desc.replace(/(<br>|\\\\s+|<\\\\/?p>|&nbsp;)/g, '').length == 0) {\\n    return;\\n  }\\n\\n  const mark = 'desc';\\n  num = typeof (num) == 'undefined' ? 100 : num\\n  desc = desc.startsWith('　　') ? desc : '　　' + desc;\\n  desc = desc.replace(/'/g, \\\"&#39;\\\");\\n  desc = desc.replace(/\\\\r\\\\n/g, \\\"<br>\\\");\\n  desc = desc.replace(/\\\\r/g, \\\"<br>\\\");\\n  desc = desc.replace(/\\\\n/g, \\\"<br>\\\");\\n  let sdesc = substr(desc, num);\\n\\n  var colors = {\\n    show: \\\"black\\\",\\n    hide: \\\"grey\\\"\\n  }\\n\\n  var lazy = $(`#noLoading#`).lazyRule((dc, sdc, m, cs) => {\\n    var show = storage0.getItem(m, '0');\\n    var title = findItem('desc').title;\\n    var re = /(<\\\\/small><br>.*?>).+/g;\\n    var exp = '展开:';\\n    var ret = '收起:';\\n    if (show == '1') {\\n      updateItem('desc', {\\n        title: title\\n          .replace(ret, exp)\\n          .replace(re, '$1' + sdc + '</small>')\\n          .replace(/(<\\\\/small><br>\\\\<font color=\\\").*?(\\\">)/, '$1' + cs.hide + '$2')\\n\\n      })\\n      storage0.setItem(m, '0');\\n    } else {\\n      updateItem('desc', {\\n        title: title\\n          .replace(exp, ret)\\n          .replace(re, '$1' + dc + '</small>')\\n          .replace(/(<\\\\/small><br>\\\\<font color=\\\").*?(\\\">)/, '$1' + cs.show + '$2')\\n      })\\n      storage0.setItem(m, '1');\\n    }\\n    return `hiker://empty`\\n  }, desc, sdesc, mark, colors)\\n  var sc = storage0.getItem(mark, '0') == '0' ? '展开:' : '收起:';\\n  var dc = storage0.getItem(mark, '0') == '0' ? sdesc : desc;\\n  var cs = storage0.getItem(mark, '0') == '0' ? colors.hide : colors.show;\\n  arr.push({\\n    title: '' + '<b><font color=\\\"#098AC1\\\">∷剧情简介\\t</font></b>' + \\\"<small><a style='text-decoration: none;' href='\\\" + lazy + \\\"'>\\\" + sc + '</a></small><br><font color=\\\"' + cs + '\\\">' + `${dc}` + '</small>',\\n    col_type: 'rich_text',\\n    extra: {\\n      id: 'desc',\\n      lineSpacing: 6,\\n      textSize: 15,\\n      lineVisible: true,\\n    }\\n  })\\n} \\nfunction extractData(data) {\\n    const result = {};\\n    const fields = {\\n        name: \\\"标题\\\",\\n        created_at: \\\"更新\\\",\\n        director: \\\"导演\\\",\\n        actor: \\\"主演\\\",\\n        continu: \\\"评分\\\",\\n        year: \\\"上映\\\",\\n        created_at: \\\"添加时间\\\",\\n    };\\n\\n    Object.keys(fields).forEach(key => {\\n        if (data[key]) {\\n            // 如果键存在，且值是数组，使用 join 连接，否则直接赋值\\n            result[fields[key]] = Array.isArray(data[key]) ? data[key].join('/') : data[key];\\n        }\\n    });\\n\\n    return result;\\n}\\nfunction transformData(data) {\\n    const descs = [];\\n    const titles = [];\\n\\n    if (data[\\\"类型\\\"]) descs.push(`类型：${data[\\\"类型\\\"]}`);\\n    if (data[\\\"评分\\\"]) descs.push(`状态：${data[\\\"评分\\\"]}`);\\n    if (data[\\\"更新\\\"]) descs.push(`更新：${data[\\\"更新\\\"]}`);\\n    if (data[\\\"地区\\\"]) descs.push(`地区：${data[\\\"地区\\\"]}`);\\n    if (data[\\\"主演\\\"]) descs.push(`主演：${data[\\\"主演\\\"]}`);\\n\\n    if (data[\\\"标题\\\"]) titles.push(data[\\\"标题\\\"]);\\n    if (data[\\\"导演\\\"]) titles.push(`导演：${data[\\\"导演\\\"]}`);\\n    if (data[\\\"上映\\\"]) titles.push(`上映：${data[\\\"上映\\\"]}`);\\n\\n    return { descs, titles };\\n}\\nfunction Transforweek(dates){\\nconst daysOfWeek = [\\\"星期日\\\", \\\"星期一\\\", \\\"星期二\\\", \\\"星期三\\\", \\\"星期四\\\", \\\"星期五\\\", \\\"星期六\\\"];\\n\\n// 遍历日期数组并转换为对应的星期几\\nconst weekdays = dates.map(dateStr => {\\n  const date = new Date(dateStr); // 将字符串转换为 Date 对象\\n  const day = date.getDay();      // 获取星期几 (0-6 对应 星期日 到 星期六)\\n  return daysOfWeek[day];         // 返回对应的中文星期几\\n});\\nreturn weekdays\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"danmu\",\"path\":\"danmu\",\"rule\":\"js:\\nfunction getVideoDuration(videoUrl) {\\n    let retriever = new android.media.MediaMetadataRetriever();\\n    try {\\n        // 不要抓包会报错\\n        retriever.setDataSource(videoUrl, new java.util.HashMap());\\n        let time = retriever.extractMetadata(android.media.MediaMetadataRetriever.METADATA_KEY_DURATION);\\n        return Number(time);\\n    } catch (e) {\\n        log(e.toString());\\n        return 0;\\n    } finally {\\n        retriever.release();\\n    }\\n}\\n$.exports.load = function(vid, play, part, playurl, headers) {\\n    let millisecond = getVideoDuration(playurl) || 1000 * 60 * 20; //如果获取具体时长失败，就默认20分钟的弹幕\\n    let minute = Math.ceil(millisecond / 60000);\\n    let res = batchFetch(Array.from({length:minute},(v, i) => ({\\n        url: 'http://43.142.232.217:8090/app/danmu?vid=' + vid + '&play=' + play + '&part=' + part + '&start_time_point=' + (i * 60000) + '&end_time_point=' + (i + 1) * 60000 + '&limit=10&page=1',\\n        options: {\\n            headers\\n        }\\n    })));\\n    let count = 0;\\n    let data = \\\"\\\";\\n    for (let htmldm of res) {\\n        var items = JSON.parse(htmldm).data.items; //log(items.length)\\n        for (let i = 0; i < items.length; i++) {\\n            var time_point = items[i].time_point / 1000; //log(time_point)\\n            var contents = JSON.parse(items[i].content); //log(contents)\\n            var color = contents.color; //log(color)\\n            var content = contents.content; //log(content)\\n\\n            tempdata = `<d p=\\\"${time_point},1,25,${color},0\\\">${content}</d>\\\\n`; //log(tempdata)\\n            data += tempdata;\\n            count++;\\n        }\\n    }\\n    data= `<d p=\\\"0,5,1,16711680,0\\\">前方共有${count}条弹幕~</d>\\\\n`+data;\\n    danmustr = `<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\\\n<i>\\\\n${data}</i>`; //log(danmustr)\\n    writeFile('hiker://files/cache/danmu/Jong_danmu.xml', danmustr);\\n}\"}]","proxy":"","icon":"https://img.meituan.net/csc/56b770f6ac608a8a10649f87925663dc27506.png"}
{"last_chapter_rule":"","pageList":[{"col_type":"text_1","name":"settings","path":"settings","rule":"js:\nvar d = [];\nd.push({\n    url: \"https://pan.quark.cn/\",\n    col_type: \"x5_webview_single\",\n    desc: \"100%&&float\",\n    extra: {\n        js: $.toString(() => {\n            fba.setAppBarColor(\"pink\")\n            var url = location.href\n            if (url == \"https://pan.quark.cn/list#/list/all\") {\n                fba.writeFile(\"hiker://files/rules/Joe/Quark.txt\", fba.getCookie(\"\"))\n                alert(\"已获取到cookie\")\n                fba.back()\n            }\n        }),\n        ua: PC_UA,\n        canBack: true\n    }\n})\nsetResult(d);"},{"col_type":"movie_3","name":"code","path":"code","rule":"$.exports.getIcon = function(content) {\n    let {\n        getHzm\n    } = $.require(\"hiker://page/code\")\n    let root = \"https://gitcode.net/qq_32394351/dr/-/raw/master/img/文件类型2/\";\n    if (!content.file) {\n        img = root + \"文件夹.svg\"\n    } else {\n        let files = 'ai|apk|avi|css|dmg|exe|flv|gif|hiker|html|iso|jpg|js|json|log|mov|mp3|mp4|otf|php|png|ppt|psd|table|txt|wav|xls|zip|css|doc|epub|exc|htm|xlsx'.split('|');\n        let fileName = content.file_name\n        let hzm = getHzm(fileName)\n        if (files.includes(hzm)) {\n            img = root + hzm + '.svg';\n        } else {\n            img = root + \"文件.svg\"\n        }\n    }\n    return img\n}\n$.exports.getHzm = function(fileName) {\n    return fileName.substr(fileName.lastIndexOf(\".\") + 1)\n}\n$.exports.getLink = function(item, cookie, ext) {\n    var url = $().lazyRule((fid, cookie, ext) => {\n        let res = JSON.parse(post(\"https://drive.quark.cn/1/clouddrive/file/download?pr=ucpro&fr=pc\", {\n            headers: {\n                \"Cookie\": cookie,\n                \"Accept\": \"application/json, text/plain, */*\",\n                \"Referer\": \"https://pan.quark.cn/\"\n            },\n            body: JSON.stringify({\n                \"fids\": [fid]\n            })\n        }))\n        if (ext == \"movie\") {\n            return JSON.stringify({\n                urls: [res.data[0].download_url + \"/1/clouddrive/file/v2/play?pr=\" + \"#isVideo=true#\"],\n                headers: {\n                    \"Cookie\": cookie.replace(/;/g, \"；；\"),\n                    \"Referer\": \"https://pan.quark.cn/\"\n                }\n            })\n        } else if (ext == \"audio\") {\n            return JSON.stringify({\n                urls: [res.data[0].download_url + \"#isMusic=true#\"],\n                headers: {\n                    \"Cookie\": cookie.replace(/;/g, \"；；\"),\n                    \"Referer\": \"https://pan.quark.cn/\"\n                }\n            })\n        } else if (ext == \"img\") {\n            return res.data[0].download_url + `@Referer=https://pan.quark.cn/@Cookie=${cookie}`\n        } else {\n            return \"download://\" + res.data[0].download_url + `@Referer=https://pan.quark.cn/@Cookie=${cookie}`\n        }\n    }, item.fid, cookie, ext)\n    return url\n}"},{"col_type":"movie_3","name":"主页","path":"main","rule":"js:\nvar d = [];\nrc(fetchPC('https://gitee.com/mistywater/hiker_info/raw/master/githubproxy.json') + 'https://raw.githubusercontent.com/mistywater/hiker/main/f', 24);\n\n//eval(JSON.parse(fetch('hiker://page/远程')).rule)\neval(JSON.parse(fetch('hiker://page/组件')).rule)\n\ntry {\n    if (fileExist(\"hiker://files/rules/Joe/Quark.txt\")) {\n        const {\n            getIcon,\n            getHzm,\n            getLink\n        } = $.require(\"hiker://page/code\")\n        var cookie = request(\"hiker://files/rules/Joe/Quark.txt\")\n        let userinfo = JSON.parse(request(\"https://pan.quark.cn/account/info\", {\n            headers: {\n                \"Cookie\": cookie\n            }\n        }))\n\n        //log(cookie)\n        let tk = cookie.split(\";\");\n        tk = tk.filter(x => x.includes(\"puus=\"))[0]\n        //log(tk)\n\n\n        let paths = storage0.getMyVar(\"paths\", [{\n            \"id\": \"0\",\n            \"name\": \"根目录\"\n        }])\n        if (MY_PAGE == 1) {\n            d.push({\n                title: userinfo.data.nickname,\n                img: userinfo.data.avatarUri,\n                url: \"hiker://page/settings\",\n                col_type: \"avatar\"\n            })\n            paths.forEach((item, i) => {\n                d.push({\n                    title: item.name,\n                    col_type: \"scroll_button\",\n                    url: $().lazyRule((paths, i) => {\n                        storage0.putMyVar(\"paths\", paths.slice(0, i + 1))\n                        refreshPage()\n                        return \"hiker://empty\"\n                    }, paths, i)\n                })\n            })\n        }\n        let res = JSON.parse(request(buildUrl(\"https://drive.quark.cn/1/clouddrive/file/sort\", {\n            \"pdir_fid\": paths[paths.length - 1].id,\n            \"fr\": \"pc\",\n            \"pr\": \"ucpro\",\n            \"_size\": 10,\n            \"_fetch_total\": \"1\",\n            \"_sort\": \"file_type:asc,file_name:asc\",\n            \"_page\": getParam(\"page\")\n        }), {\n            headers: {\n                \"Cookie\": cookie,\n                \"Accept\": \"application/json, text/plain, */*\",\n                \"Referer\": \"https://pan.quark.cn/\"\n            }\n        }))\n        res.data.list.forEach(item => {\n            //log(item)\n            if (!item.file) {\n                var url = $().lazyRule((item, paths) => {\n                    paths.push({\n                        id: item.fid,\n                        name: item.file_name\n                    })\n                    storage0.putMyVar(\"paths\", paths)\n                    refreshPage()\n                    return \"hiker://empty\"\n                }, item, paths)\n            } else if ($.movie.includes(getHzm(item.file_name))) {\n                var url = getLink(item, cookie, \"movie\")\n            } else if ($.audio.includes(getHzm(item.file_name))) {\n                var url = getLink(item, cookie, \"audio\")\n            } else if ($.img.includes(getHzm(item.file_name))) {\n                var url = getLink(item, cookie, \"img\")\n            } else {\n                var url = getLink(item, cookie)\n            }\n            var title = item.file_name\n            if (item.file_name.match(/\\.mp4|\\.m3u8|\\.flv|\\.avi|\\.mpeg|\\.wmv|\\.mov|\\.rmvb|\\.dat|qqBFdownload|mime=video%2F|video_mp4/)) {\n                var desc = !item.isdir ? gfs(item.size) : sj;\n                var col = 'movie_3'\n            } else if (item.file_name.match(/\\.jpg|\\.png|\\.jpeg|\\.gif|\\.svg|\\.raw/)) {\n\n                var col = 'movie_3'\n            } else {\n                title = color2(title, '333333');\n                y = '‘‘’’<big>' + \"📂 \" + '‘‘’’</big>';\n                // var desc = !item.isdir ? gfs(item.size) : '';\n                // desc: !item.isdir ? gfs(item.size) : sj;\n                var title = y + title\n                var col = 'text_1'\n\n            }\n            let img = getIcon(item);\n            if (item.preview_url) {\n                img = item.preview_url;\n                if (item.obj_category == \"video\") {\n                    img = \"https://drive-pc.quark.cn/1/clouddrive/file/video/thumbnail?fid=\" + item.fid + \"&pr=ucpro&fr=pc\" + `@headers={\"cookie\": \"${tk}\", \"Referer\":\"https://pan.quark.cn\"}`\n                }\n            }\n            d.push({\n                title: title,\n                desc:desc,\n                img: img,\n                url: url,\n                col_type: col\n            })\n        })\n    } else {\n        if (MY_PAGE == 1) {\n            d.push({\n                title: \"登陆\",\n                url: \"hiker://page/settings\"\n            })\n        }\n    }\n} catch (e) {\n    log(e.message)\n}\nsetResult(d);"},{"col_type":"movie_3","name":"组件","path":"组件","rule":"function blank(num, num1, num2) {\n    for (let i = 0; i < num; i++) {\n        d.push({\n            col_type: 'blank_block'\n        })\n    }\n    for (let i = 0; i < num1; i++) {\n        d.push({\n            //  col_type: 'line_blank'\n            col_type: 'line'\n        })\n    }\n    for (let i = 0; i < num2; i++) {\n        d.push({\n            col_type: 'blank_block'\n        })\n    }\n}\nfunction color(d, c) {\n    return '<b><font color=#' + (c || '000000') + '>' + d + '</font>';\n}\nfunction color0(d, c) {\n    return '‘‘’’<b><font color=#' + (c || '000000') + '>' + d + '</font>';\n}\nfunction color1(d, c) {\n    return '<font color=#' + (c || '000000') + '>' + d + '</font>';\n}\n\nfunction color2(d, c) {\n    return '<font color=#' + (c || '000000') + '>' + d + '</font>';\n}\n"},{"col_type":"movie_3","name":"play","path":"play","rule":"js:\nlet fromDrive = module.importParam;\nlet pr, homeUrl, api, cookie;\nif (fromDrive === \"uc\") {\n    homeUrl = \"https://drive.uc.cn/\";\n    pr = \"UCBrowser\";\n    api = \"https://pc-api.uc.cn\";\n    cookie = getItem(\"ucCookie\", \"\");\n} else {\n    homeUrl = \"https://drive.quark.cn/\";\n    pr = \"ucpro\";\n    api = \"https://drive.quark.cn\";\n    cookie = getItem(\"quarkCookie\", \"\");\n}\n\nfunction CookieManage(cookie) {\n    this.cookie = {};\n    this.add(cookie);\n}\nObject.assign(CookieManage.prototype, {\n    add(cookie) {\n        let cookies = [];\n        if (typeof cookie === \"string\") {\n            cookies = cookie.split(\";\");\n        } else if (Array.isArray(cookie)) {\n            cookies = cookie;\n        }\n        cookies.forEach(v => {\n            v = v.split(\"=\");\n            if (v.length < 2) return;\n            let key = v.shift().trim();\n            this.cookie[key] = v.join(\"=\").trim();\n        });\n    },\n    get() {\n        return Object.entries(this.cookie).map(v => v[0] + \"=\" + v[1]).join(\";\");\n    }\n});\nconst cookieManage = new CookieManage(cookie);\nlet httpRequest = $.require(\"httpRequest\");\n\nfunction waitSleep(time) {\n    java.lang.Thread.sleep(time || 600);\n}\n\nfunction requestHttp(url) {\n    return new httpRequest(url)\n        .success((body, res) => {\n            if (body.status !== 200) {\n                throw new Error(body.message);\n            }\n            \n            cookieManage.add(res.headers[\"set-cookie\"]);\n            return body;\n        })\n        .errorType((err, res) => {\n            return new Error(JSON.parse(res.body).message);\n        })\n        .bodyToString(true)\n        .headers({\n            cookie: cookieManage.get(),\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) quark-cloud-drive/2.5.20 Chrome/100.0.4896.160 Electron/18.3.5.4-b478491100 Safari/537.36 Channel/pckk_other_ch\",\n            \"referer\": homeUrl\n        });\n}\n\nfunction getDriveInfo() {\n    return requestHttp(api + \"/1/clouddrive/share/sharepage/dir?pr=\" + pr + \"&fr=pc&aver=1\").start(true);\n}\n\nfunction createSaveTask(fid, fid_token, pwd_id, stoken) {\n    let driveInfo = getDriveInfo();\n    return requestHttp(api + \"/1/clouddrive/share/sharepage/save?pr=\" + pr + \"&fr=pc\").setStartRequestFunc(post).body({\n        \"fid_list\": [\n            fid\n        ],\n        \"fid_token_list\": [\n            fid_token\n        ],\n        \"to_pdir_fid\": driveInfo.data.dir.fid,\n        \"pwd_id\": pwd_id,\n        \"stoken\": stoken,\n        \"pdir_fid\": driveInfo.data.dir.pdir_fid\n    }).start(true);\n}\n\nfunction createDeleteTask(fid) {\n    let driveInfo = getDriveInfo();\n    return requestHttp(api + \"/1/clouddrive/file/delete?pr=\" + pr + \"&fr=pc\").setStartRequestFunc(post).body({\n        \"action_type\": 2,\n        \"filelist\": [\n            fid\n        ],\n        \"exclude_fids\": []\n    }).start(true);\n}\n\nfunction task(task_id, retry_index) {\n    return requestHttp(api + \"/1/clouddrive/task\").buildUrl({\n        pr: pr,\n        fr: \"pc\",\n        task_id: task_id,\n        retry_index: retry_index\n    }).start(true);\n}\n\nfunction queryTask(task_id) {\n    for (let i = 0; i < 9; i++) {\n        try {\n            let res = task(task_id, i + \"\");\n            if (res.data.status === 2) {\n                waitSleep(1000);\n                return res.data.save_as.save_as_top_fids[0];\n            }\n            waitSleep(300 * (i + 1));\n        } catch (e) {}\n    }\n    return void(0);\n}\n\nfunction queryTaskStatus(task_id) {\n    for (let i = 0; i < 6; i++) {\n        try {\n            let res = task(task_id, i + \"\");\n            if (res.data.status === 2) {\n                waitSleep(1000);\n                return true;\n            }\n            waitSleep(300);\n        } catch (e) {}\n    }\n    return false;\n}\n\nfunction getPreviewVideo(fid) {\n    return requestHttp(api + \"/1/clouddrive/file/v2/play?pr=\" + pr + \"&fr=pc\").body({\n        \"fid\": fid,\n        \"resolutions\": \"normal,low,high,super,2k,4k\",\n        \"supports\": \"fmp4,m3u8\"\n    }).setStartRequestFunc(post).start(true);\n}\n\n\n\nfunction getDownloadUrl(fid) {\n    return requestHttp(api + \"/1/clouddrive/file/download?pr=\" + pr + \"&fr=pc\").body({\n        \"fids\": [fid]\n    }).setStartRequestFunc(post).start(true);\n}\n\nfunction getPlayUrl(fid, fid_token, pwd_id, stoken, category) {\n    try {\n        if (!cookie) return \"toast://请登录账号\";\n        let taskId = createSaveTask(fid, fid_token, pwd_id, stoken).data.task_id;\n        let asfid = queryTask(taskId);\n        if (!asfid) {\n            return \"toast://获取失败\";\n        }\n        let playCookie = cookieManage.get();\n        /*if (pr === \"UCBrowser\") {\n            playCookie = cookie;\n        }*/\n        let playHeader = {\n            Referer: homeUrl,\n            cookie: playCookie,\n            \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/100.0.4896.58 UCBrowser/16.5.8.1309 Mobile Safari/537.36\"\n        };\n        let playHeaders = Object.assign({}, playHeader, {\n            \"User-Agent\": \"LogStatistic\"\n        });\n        if (category == \"video\") {\n            let playMode = getItem(\"quark_playMode\", \"转码\");\n            if (playMode === \"转码\") {\n                let videoRes = getPreviewVideo(asfid);\n\n                let videoList = videoRes.data.video_list;\n                let playList = {\n                    names: [],\n                    urls: [],\n                    headers: []\n                };\n                videoList.filter(v => v.accessable).forEach(v => {\n                    playList.names.push(v.resolution);\n                    playList.urls.push(v.video_info.url + \"#isVideo=true#\");\n                    playList.headers.push(playHeaders);\n                });\n                createDeleteTask(asfid);\n                return JSON.stringify(playList);\n            } else {\n\n                let playUrl = getDownloadUrl(asfid).data[0].download_url;\n                playHeaders.cookie=cookieManage.get();\n                let playList = {\n                    names: [playMode],\n                    urls: [playUrl + \"#isVideo=true#\"+(playMode===\"原画\"?\"#fastPlayMode##threads=\" + getItem(\"speedThread\", \"10\") + \"#\":\"\")],\n                    headers: [playHeaders]\n                }\n                createDeleteTask(asfid);\n                return JSON.stringify(playList);\n            }\n        } else {\n            let playUrl = getDownloadUrl(asfid).data[0].download_url;\n\n            createDeleteTask(asfid);\n            if (category === 'audio') {\n                let playList = {\n                    names: [\"音频\"],\n                    urls: [playUrl + \"#isVideo=true#\"],\n                    headers: [playHeader],\n                    lyric: \"\"\n                }\n                return JSON.stringify(playList);\n            } else if (category === 'image') {\n                return $(playUrl, playHeader).image();\n            } else {\n                playHeader = Object.keys(playHeader).map(key => key + \"@\" + String(playHeader[key]).replace(/;/g, \"；；\"));\n                return \"download://\" + playUrl + \";{\" + playHeader.join(\"&&\") + \"}\";\n            }\n        }\n    } catch (e) {\n        if (e.message.includes(\"require login\")) {\n            toast(\"未登录或登录过期，请重新登录\");\n            return \"hiker://page/login#noRecordHistory##noHistory#?from=\"+fromDrive;\n        }\n        return \"toast://\" + e.toString();\n    }\n}\n\n$.exports = {\n    getPlayUrl\n};"}],"title":"夸克网盘","author":"Joe","version":1,"type":"video","url":"hiker://empty?page=fypage","col_type":"text_1","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:$.require(\"hiker://page/main\")","searchFind":"","search_url":"","group":"④网盘","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"$.extend({\n    movie: [\"mp4\", \"mkv\", \"avi\", \"mov\", \"rmvb\", \"webm\", \"flv\", \"m4v\", \"m3u8\", \"ts\"],\n    img: [\"jpg\", \"png\", \"jpeg\", \"gif\", \"svg\", \"raw\"],\n    audio: [\"mp3\", \"flac\", \"ogg\", \"m4a\", \"wav\", \"opus\"]\n})","pages":"[{\"col_type\":\"text_1\",\"name\":\"settings\",\"path\":\"settings\",\"rule\":\"js:\\nvar d = [];\\nd.push({\\n    url: \\\"https://pan.quark.cn/\\\",\\n    col_type: \\\"x5_webview_single\\\",\\n    desc: \\\"100%&&float\\\",\\n    extra: {\\n        js: $.toString(() => {\\n            fba.setAppBarColor(\\\"pink\\\")\\n            var url = location.href\\n            if (url == \\\"https://pan.quark.cn/list#/list/all\\\") {\\n                fba.writeFile(\\\"hiker://files/rules/Joe/Quark.txt\\\", fba.getCookie(\\\"\\\"))\\n                alert(\\\"已获取到cookie\\\")\\n                fba.back()\\n            }\\n        }),\\n        ua: PC_UA,\\n        canBack: true\\n    }\\n})\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"code\",\"path\":\"code\",\"rule\":\"$.exports.getIcon = function(content) {\\n    let {\\n        getHzm\\n    } = $.require(\\\"hiker://page/code\\\")\\n    let root = \\\"https://gitcode.net/qq_32394351/dr/-/raw/master/img/文件类型2/\\\";\\n    if (!content.file) {\\n        img = root + \\\"文件夹.svg\\\"\\n    } else {\\n        let files = 'ai|apk|avi|css|dmg|exe|flv|gif|hiker|html|iso|jpg|js|json|log|mov|mp3|mp4|otf|php|png|ppt|psd|table|txt|wav|xls|zip|css|doc|epub|exc|htm|xlsx'.split('|');\\n        let fileName = content.file_name\\n        let hzm = getHzm(fileName)\\n        if (files.includes(hzm)) {\\n            img = root + hzm + '.svg';\\n        } else {\\n            img = root + \\\"文件.svg\\\"\\n        }\\n    }\\n    return img\\n}\\n$.exports.getHzm = function(fileName) {\\n    return fileName.substr(fileName.lastIndexOf(\\\".\\\") + 1)\\n}\\n$.exports.getLink = function(item, cookie, ext) {\\n    var url = $().lazyRule((fid, cookie, ext) => {\\n        let res = JSON.parse(post(\\\"https://drive.quark.cn/1/clouddrive/file/download?pr=ucpro&fr=pc\\\", {\\n            headers: {\\n                \\\"Cookie\\\": cookie,\\n                \\\"Accept\\\": \\\"application/json, text/plain, */*\\\",\\n                \\\"Referer\\\": \\\"https://pan.quark.cn/\\\"\\n            },\\n            body: JSON.stringify({\\n                \\\"fids\\\": [fid]\\n            })\\n        }))\\n        if (ext == \\\"movie\\\") {\\n            return JSON.stringify({\\n                urls: [res.data[0].download_url + \\\"/1/clouddrive/file/v2/play?pr=\\\" + \\\"#isVideo=true#\\\"],\\n                headers: {\\n                    \\\"Cookie\\\": cookie.replace(/;/g, \\\"；；\\\"),\\n                    \\\"Referer\\\": \\\"https://pan.quark.cn/\\\"\\n                }\\n            })\\n        } else if (ext == \\\"audio\\\") {\\n            return JSON.stringify({\\n                urls: [res.data[0].download_url + \\\"#isMusic=true#\\\"],\\n                headers: {\\n                    \\\"Cookie\\\": cookie.replace(/;/g, \\\"；；\\\"),\\n                    \\\"Referer\\\": \\\"https://pan.quark.cn/\\\"\\n                }\\n            })\\n        } else if (ext == \\\"img\\\") {\\n            return res.data[0].download_url + `@Referer=https://pan.quark.cn/@Cookie=${cookie}`\\n        } else {\\n            return \\\"download://\\\" + res.data[0].download_url + `@Referer=https://pan.quark.cn/@Cookie=${cookie}`\\n        }\\n    }, item.fid, cookie, ext)\\n    return url\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"主页\",\"path\":\"main\",\"rule\":\"js:\\nvar d = [];\\nrc(fetchPC('https://gitee.com/mistywater/hiker_info/raw/master/githubproxy.json') + 'https://raw.githubusercontent.com/mistywater/hiker/main/f', 24);\\n\\n//eval(JSON.parse(fetch('hiker://page/远程')).rule)\\neval(JSON.parse(fetch('hiker://page/组件')).rule)\\n\\ntry {\\n    if (fileExist(\\\"hiker://files/rules/Joe/Quark.txt\\\")) {\\n        const {\\n            getIcon,\\n            getHzm,\\n            getLink\\n        } = $.require(\\\"hiker://page/code\\\")\\n        var cookie = request(\\\"hiker://files/rules/Joe/Quark.txt\\\")\\n        let userinfo = JSON.parse(request(\\\"https://pan.quark.cn/account/info\\\", {\\n            headers: {\\n                \\\"Cookie\\\": cookie\\n            }\\n        }))\\n\\n        //log(cookie)\\n        let tk = cookie.split(\\\";\\\");\\n        tk = tk.filter(x => x.includes(\\\"puus=\\\"))[0]\\n        //log(tk)\\n\\n\\n        let paths = storage0.getMyVar(\\\"paths\\\", [{\\n            \\\"id\\\": \\\"0\\\",\\n            \\\"name\\\": \\\"根目录\\\"\\n        }])\\n        if (MY_PAGE == 1) {\\n            d.push({\\n                title: userinfo.data.nickname,\\n                img: userinfo.data.avatarUri,\\n                url: \\\"hiker://page/settings\\\",\\n                col_type: \\\"avatar\\\"\\n            })\\n            paths.forEach((item, i) => {\\n                d.push({\\n                    title: item.name,\\n                    col_type: \\\"scroll_button\\\",\\n                    url: $().lazyRule((paths, i) => {\\n                        storage0.putMyVar(\\\"paths\\\", paths.slice(0, i + 1))\\n                        refreshPage()\\n                        return \\\"hiker://empty\\\"\\n                    }, paths, i)\\n                })\\n            })\\n        }\\n        let res = JSON.parse(request(buildUrl(\\\"https://drive.quark.cn/1/clouddrive/file/sort\\\", {\\n            \\\"pdir_fid\\\": paths[paths.length - 1].id,\\n            \\\"fr\\\": \\\"pc\\\",\\n            \\\"pr\\\": \\\"ucpro\\\",\\n            \\\"_size\\\": 10,\\n            \\\"_fetch_total\\\": \\\"1\\\",\\n            \\\"_sort\\\": \\\"file_type:asc,file_name:asc\\\",\\n            \\\"_page\\\": getParam(\\\"page\\\")\\n        }), {\\n            headers: {\\n                \\\"Cookie\\\": cookie,\\n                \\\"Accept\\\": \\\"application/json, text/plain, */*\\\",\\n                \\\"Referer\\\": \\\"https://pan.quark.cn/\\\"\\n            }\\n        }))\\n        res.data.list.forEach(item => {\\n            //log(item)\\n            if (!item.file) {\\n                var url = $().lazyRule((item, paths) => {\\n                    paths.push({\\n                        id: item.fid,\\n                        name: item.file_name\\n                    })\\n                    storage0.putMyVar(\\\"paths\\\", paths)\\n                    refreshPage()\\n                    return \\\"hiker://empty\\\"\\n                }, item, paths)\\n            } else if ($.movie.includes(getHzm(item.file_name))) {\\n                var url = getLink(item, cookie, \\\"movie\\\")\\n            } else if ($.audio.includes(getHzm(item.file_name))) {\\n                var url = getLink(item, cookie, \\\"audio\\\")\\n            } else if ($.img.includes(getHzm(item.file_name))) {\\n                var url = getLink(item, cookie, \\\"img\\\")\\n            } else {\\n                var url = getLink(item, cookie)\\n            }\\n            var title = item.file_name\\n            if (item.file_name.match(/\\\\.mp4|\\\\.m3u8|\\\\.flv|\\\\.avi|\\\\.mpeg|\\\\.wmv|\\\\.mov|\\\\.rmvb|\\\\.dat|qqBFdownload|mime=video%2F|video_mp4/)) {\\n                var desc = !item.isdir ? gfs(item.size) : sj;\\n                var col = 'movie_3'\\n            } else if (item.file_name.match(/\\\\.jpg|\\\\.png|\\\\.jpeg|\\\\.gif|\\\\.svg|\\\\.raw/)) {\\n\\n                var col = 'movie_3'\\n            } else {\\n                title = color2(title, '333333');\\n                y = '‘‘’’<big>' + \\\"📂 \\\" + '‘‘’’</big>';\\n                // var desc = !item.isdir ? gfs(item.size) : '';\\n                // desc: !item.isdir ? gfs(item.size) : sj;\\n                var title = y + title\\n                var col = 'text_1'\\n\\n            }\\n            let img = getIcon(item);\\n            if (item.preview_url) {\\n                img = item.preview_url;\\n                if (item.obj_category == \\\"video\\\") {\\n                    img = \\\"https://drive-pc.quark.cn/1/clouddrive/file/video/thumbnail?fid=\\\" + item.fid + \\\"&pr=ucpro&fr=pc\\\" + `@headers={\\\"cookie\\\": \\\"${tk}\\\", \\\"Referer\\\":\\\"https://pan.quark.cn\\\"}`\\n                }\\n            }\\n            d.push({\\n                title: title,\\n                desc:desc,\\n                img: img,\\n                url: url,\\n                col_type: col\\n            })\\n        })\\n    } else {\\n        if (MY_PAGE == 1) {\\n            d.push({\\n                title: \\\"登陆\\\",\\n                url: \\\"hiker://page/settings\\\"\\n            })\\n        }\\n    }\\n} catch (e) {\\n    log(e.message)\\n}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"组件\",\"path\":\"组件\",\"rule\":\"function blank(num, num1, num2) {\\n    for (let i = 0; i < num; i++) {\\n        d.push({\\n            col_type: 'blank_block'\\n        })\\n    }\\n    for (let i = 0; i < num1; i++) {\\n        d.push({\\n            //  col_type: 'line_blank'\\n            col_type: 'line'\\n        })\\n    }\\n    for (let i = 0; i < num2; i++) {\\n        d.push({\\n            col_type: 'blank_block'\\n        })\\n    }\\n}\\nfunction color(d, c) {\\n    return '<b><font color=#' + (c || '000000') + '>' + d + '</font>';\\n}\\nfunction color0(d, c) {\\n    return '‘‘’’<b><font color=#' + (c || '000000') + '>' + d + '</font>';\\n}\\nfunction color1(d, c) {\\n    return '<font color=#' + (c || '000000') + '>' + d + '</font>';\\n}\\n\\nfunction color2(d, c) {\\n    return '<font color=#' + (c || '000000') + '>' + d + '</font>';\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"play\",\"path\":\"play\",\"rule\":\"js:\\nlet fromDrive = module.importParam;\\nlet pr, homeUrl, api, cookie;\\nif (fromDrive === \\\"uc\\\") {\\n    homeUrl = \\\"https://drive.uc.cn/\\\";\\n    pr = \\\"UCBrowser\\\";\\n    api = \\\"https://pc-api.uc.cn\\\";\\n    cookie = getItem(\\\"ucCookie\\\", \\\"\\\");\\n} else {\\n    homeUrl = \\\"https://drive.quark.cn/\\\";\\n    pr = \\\"ucpro\\\";\\n    api = \\\"https://drive.quark.cn\\\";\\n    cookie = getItem(\\\"quarkCookie\\\", \\\"\\\");\\n}\\n\\nfunction CookieManage(cookie) {\\n    this.cookie = {};\\n    this.add(cookie);\\n}\\nObject.assign(CookieManage.prototype, {\\n    add(cookie) {\\n        let cookies = [];\\n        if (typeof cookie === \\\"string\\\") {\\n            cookies = cookie.split(\\\";\\\");\\n        } else if (Array.isArray(cookie)) {\\n            cookies = cookie;\\n        }\\n        cookies.forEach(v => {\\n            v = v.split(\\\"=\\\");\\n            if (v.length < 2) return;\\n            let key = v.shift().trim();\\n            this.cookie[key] = v.join(\\\"=\\\").trim();\\n        });\\n    },\\n    get() {\\n        return Object.entries(this.cookie).map(v => v[0] + \\\"=\\\" + v[1]).join(\\\";\\\");\\n    }\\n});\\nconst cookieManage = new CookieManage(cookie);\\nlet httpRequest = $.require(\\\"httpRequest\\\");\\n\\nfunction waitSleep(time) {\\n    java.lang.Thread.sleep(time || 600);\\n}\\n\\nfunction requestHttp(url) {\\n    return new httpRequest(url)\\n        .success((body, res) => {\\n            if (body.status !== 200) {\\n                throw new Error(body.message);\\n            }\\n            \\n            cookieManage.add(res.headers[\\\"set-cookie\\\"]);\\n            return body;\\n        })\\n        .errorType((err, res) => {\\n            return new Error(JSON.parse(res.body).message);\\n        })\\n        .bodyToString(true)\\n        .headers({\\n            cookie: cookieManage.get(),\\n            \\\"User-Agent\\\": \\\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) quark-cloud-drive/2.5.20 Chrome/100.0.4896.160 Electron/18.3.5.4-b478491100 Safari/537.36 Channel/pckk_other_ch\\\",\\n            \\\"referer\\\": homeUrl\\n        });\\n}\\n\\nfunction getDriveInfo() {\\n    return requestHttp(api + \\\"/1/clouddrive/share/sharepage/dir?pr=\\\" + pr + \\\"&fr=pc&aver=1\\\").start(true);\\n}\\n\\nfunction createSaveTask(fid, fid_token, pwd_id, stoken) {\\n    let driveInfo = getDriveInfo();\\n    return requestHttp(api + \\\"/1/clouddrive/share/sharepage/save?pr=\\\" + pr + \\\"&fr=pc\\\").setStartRequestFunc(post).body({\\n        \\\"fid_list\\\": [\\n            fid\\n        ],\\n        \\\"fid_token_list\\\": [\\n            fid_token\\n        ],\\n        \\\"to_pdir_fid\\\": driveInfo.data.dir.fid,\\n        \\\"pwd_id\\\": pwd_id,\\n        \\\"stoken\\\": stoken,\\n        \\\"pdir_fid\\\": driveInfo.data.dir.pdir_fid\\n    }).start(true);\\n}\\n\\nfunction createDeleteTask(fid) {\\n    let driveInfo = getDriveInfo();\\n    return requestHttp(api + \\\"/1/clouddrive/file/delete?pr=\\\" + pr + \\\"&fr=pc\\\").setStartRequestFunc(post).body({\\n        \\\"action_type\\\": 2,\\n        \\\"filelist\\\": [\\n            fid\\n        ],\\n        \\\"exclude_fids\\\": []\\n    }).start(true);\\n}\\n\\nfunction task(task_id, retry_index) {\\n    return requestHttp(api + \\\"/1/clouddrive/task\\\").buildUrl({\\n        pr: pr,\\n        fr: \\\"pc\\\",\\n        task_id: task_id,\\n        retry_index: retry_index\\n    }).start(true);\\n}\\n\\nfunction queryTask(task_id) {\\n    for (let i = 0; i < 9; i++) {\\n        try {\\n            let res = task(task_id, i + \\\"\\\");\\n            if (res.data.status === 2) {\\n                waitSleep(1000);\\n                return res.data.save_as.save_as_top_fids[0];\\n            }\\n            waitSleep(300 * (i + 1));\\n        } catch (e) {}\\n    }\\n    return void(0);\\n}\\n\\nfunction queryTaskStatus(task_id) {\\n    for (let i = 0; i < 6; i++) {\\n        try {\\n            let res = task(task_id, i + \\\"\\\");\\n            if (res.data.status === 2) {\\n                waitSleep(1000);\\n                return true;\\n            }\\n            waitSleep(300);\\n        } catch (e) {}\\n    }\\n    return false;\\n}\\n\\nfunction getPreviewVideo(fid) {\\n    return requestHttp(api + \\\"/1/clouddrive/file/v2/play?pr=\\\" + pr + \\\"&fr=pc\\\").body({\\n        \\\"fid\\\": fid,\\n        \\\"resolutions\\\": \\\"normal,low,high,super,2k,4k\\\",\\n        \\\"supports\\\": \\\"fmp4,m3u8\\\"\\n    }).setStartRequestFunc(post).start(true);\\n}\\n\\n\\n\\nfunction getDownloadUrl(fid) {\\n    return requestHttp(api + \\\"/1/clouddrive/file/download?pr=\\\" + pr + \\\"&fr=pc\\\").body({\\n        \\\"fids\\\": [fid]\\n    }).setStartRequestFunc(post).start(true);\\n}\\n\\nfunction getPlayUrl(fid, fid_token, pwd_id, stoken, category) {\\n    try {\\n        if (!cookie) return \\\"toast://请登录账号\\\";\\n        let taskId = createSaveTask(fid, fid_token, pwd_id, stoken).data.task_id;\\n        let asfid = queryTask(taskId);\\n        if (!asfid) {\\n            return \\\"toast://获取失败\\\";\\n        }\\n        let playCookie = cookieManage.get();\\n        /*if (pr === \\\"UCBrowser\\\") {\\n            playCookie = cookie;\\n        }*/\\n        let playHeader = {\\n            Referer: homeUrl,\\n            cookie: playCookie,\\n            \\\"User-Agent\\\": \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/100.0.4896.58 UCBrowser/16.5.8.1309 Mobile Safari/537.36\\\"\\n        };\\n        let playHeaders = Object.assign({}, playHeader, {\\n            \\\"User-Agent\\\": \\\"LogStatistic\\\"\\n        });\\n        if (category == \\\"video\\\") {\\n            let playMode = getItem(\\\"quark_playMode\\\", \\\"转码\\\");\\n            if (playMode === \\\"转码\\\") {\\n                let videoRes = getPreviewVideo(asfid);\\n\\n                let videoList = videoRes.data.video_list;\\n                let playList = {\\n                    names: [],\\n                    urls: [],\\n                    headers: []\\n                };\\n                videoList.filter(v => v.accessable).forEach(v => {\\n                    playList.names.push(v.resolution);\\n                    playList.urls.push(v.video_info.url + \\\"#isVideo=true#\\\");\\n                    playList.headers.push(playHeaders);\\n                });\\n                createDeleteTask(asfid);\\n                return JSON.stringify(playList);\\n            } else {\\n\\n                let playUrl = getDownloadUrl(asfid).data[0].download_url;\\n                playHeaders.cookie=cookieManage.get();\\n                let playList = {\\n                    names: [playMode],\\n                    urls: [playUrl + \\\"#isVideo=true#\\\"+(playMode===\\\"原画\\\"?\\\"#fastPlayMode##threads=\\\" + getItem(\\\"speedThread\\\", \\\"10\\\") + \\\"#\\\":\\\"\\\")],\\n                    headers: [playHeaders]\\n                }\\n                createDeleteTask(asfid);\\n                return JSON.stringify(playList);\\n            }\\n        } else {\\n            let playUrl = getDownloadUrl(asfid).data[0].download_url;\\n\\n            createDeleteTask(asfid);\\n            if (category === 'audio') {\\n                let playList = {\\n                    names: [\\\"音频\\\"],\\n                    urls: [playUrl + \\\"#isVideo=true#\\\"],\\n                    headers: [playHeader],\\n                    lyric: \\\"\\\"\\n                }\\n                return JSON.stringify(playList);\\n            } else if (category === 'image') {\\n                return $(playUrl, playHeader).image();\\n            } else {\\n                playHeader = Object.keys(playHeader).map(key => key + \\\"@\\\" + String(playHeader[key]).replace(/;/g, \\\"；；\\\"));\\n                return \\\"download://\\\" + playUrl + \\\";{\\\" + playHeader.join(\\\"&&\\\") + \\\"}\\\";\\n            }\\n        }\\n    } catch (e) {\\n        if (e.message.includes(\\\"require login\\\")) {\\n            toast(\\\"未登录或登录过期，请重新登录\\\");\\n            return \\\"hiker://page/login#noRecordHistory##noHistory#?from=\\\"+fromDrive;\\n        }\\n        return \\\"toast://\\\" + e.toString();\\n    }\\n}\\n\\n$.exports = {\\n    getPlayUrl\\n};\"}]","proxy":"","icon":"http://fc5tn.baidu.com/it/u=453085766,879744170&fm=203&src=787&fc_m=cvican"}
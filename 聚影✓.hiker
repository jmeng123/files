{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"依赖文件","path":"config","rule":"js:\n$.exports.version = 3;"},{"col_type":"movie_3","name":"云口令导入","path":"import","rule":"js:\nfunction cloudimport() {\n    let JYCode = fetch(\"hiker://home@聚影✓\");\n    if (JYCode) {\n        writeFile(\"hiker://files/_cache/juying2/cloudimport.txt\", input);\n        return \"hiker://page/importConfirm#fullTheme#?rule=聚影✓\"\n    } else {\n        return \"toast://没有聚影✓小程序，要是新版哦\";\n    }\n}\n$.exports = cloudimport();"},{"col_type":"movie_3","name":"代理管理","path":"ghproxy","rule":"js:\nlet cfgfile = \"hiker://files/rules/Src/Juying2/config.json\";\nlet Juconfig = {};\nlet Jucfg = fetch(cfgfile);\nif (Jucfg != \"\") {\n    eval(\"Juconfig=\" + Jucfg + \";\");\n}\nlet proxylist = Juconfig['ghproxy'] || [];\n\nfunction getproxy() {\n    return proxylist.filter(v => !v.stop).map(it => it.url);\n}\n\nfunction setproxy(input, zt) {\n    input = input.trim();\n    if (input) {\n        let index = proxylist.findIndex(it => it.url == input);\n        if (index == -1) {\n            proxylist.push({\n                url: input\n            });\n        } else if (zt == 1) {\n            delete proxylist[index].stop;\n        } else if (zt == 0) {\n            proxylist[index].stop = 1;\n        } else if (zt == 2) {\n            proxylist = proxylist.filter(v => v.url != input);\n        }\n        Juconfig['ghproxy'] = proxylist;\n        writeFile(cfgfile, JSON.stringify(Juconfig));\n    }\n}\n\nfunction proxyPage() {\n    setPageTitle('github代理管理页');\n    let d = [];\n    d.push({\n        title: '需要github代理来获取代码，或指定代码仓',\n        desc: '有代理：' + proxylist.length + '，有效的：' + getproxy().length,\n        url: $(getItem('依赖', ''), \"指定聚影代码仓地址\").input(() => {\n            setItem('依赖', input);\n            refreshPage();\n            return \"toast://已设置\"\n        }),\n        col_type: \"text_1\"\n    });\n    d.push({\n        title: '添加',\n        col_type: 'input',\n        desc: '请输入代理地址',\n        url: $.toString(() => {\n            if (!/^http/.test(input)) {\n                return \"toast://错误\";\n            }\n            $.require('ghproxy').setproxy(input);\n            refreshPage();\n            return \"hiker://empty\";\n        }),\n        extra: {\n            titleVisible: true\n        }\n    });\n    d.push({\n        col_type: \"line\"\n    });\n    proxylist.reverse();\n    proxylist.forEach(it => {\n        d.push({\n            title: it.stop ? '‘‘’’<font color=\"#f20c00\">' + it.url + '</font>' : it.url,\n            url: $([it.stop ? \"启用\" : \"停用\", \"删除\", \"复制\"], 1, \"\").select((url) => {\n                if (input == \"启用\") {\n                    $.require('ghproxy').setproxy(url, 1);\n                } else if (input == \"停用\") {\n                    $.require('ghproxy').setproxy(url, 0);\n                } else if (input == \"删除\") {\n                    $.require('ghproxy').setproxy(url, 2);\n                } else if (input == \"复制\") {\n                    copy(url);\n                    return \"hiker://empty\";\n                }\n                refreshPage(false);\n                return \"hiker://empty\";\n            }, it.url),\n            col_type: \"text_1\"\n        });\n    })\n    setResult(d);\n}\n$.exports = {\n    getproxy: getproxy,\n    setproxy: setproxy,\n    proxyPage: proxyPage\n};"},{"col_type":"movie_3","name":"导入确认页","path":"importConfirm","rule":"js:\neval(JSON.parse(fetch(\"hiker://home@聚影✓\")).preRule);\nif (!config.依赖) {\n    initConfig({\n        依赖: \"https://gitcode.net/src48597962/juying/-/raw/master/SrcJuying.js\"\n    });\n}\nrequire(config.依赖.match(/http(s)?:\\/\\/.*\\//)[0] + 'SrcJySet.js');\nimportConfirm();"}],"title":"聚影✓","author":"","version":3,"type":"video","url":"hiker://empty","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nif(config.依赖){\n    try{\n        require(config.依赖);\n        yiji();\n    }catch(e){\n        log(e.message);\n        toast(e.message);\n        confirm({\n            title:'依赖地址加载失败', \n            content:'是否重新获取依赖？', \n            confirm:$.toString(()=>{\n                clearItem('依赖');\n                initConfig({依赖:''});\n                refreshPage(false);\n                toast('偿试刷新依赖地址');\n            }), \n            cancel:$.toString(()=>{\n                toast('重进或换网再试一次');\n            })\n        })\n    }\n}else{\n    $.require('ghproxy').proxyPage();\n}","searchFind":"js:\nrequire(config.依赖);\nsousuo()","search_url":"hiker://empty##**##fypage","group":"①推荐","detail_col_type":"movie_3","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"pc","preRule":"/*<$>\n@include start\nhttp://hiker.nokia.press/hikerule/rulelist.json?id=6916&auth=1d35e8f0-22e8-5270-a9d1-826f53f177ad\n@include end\n<$>*/\n\nif (!config.依赖) {\n    let srcHome = getItem('依赖', '');\n    if (!srcHome) {\n        //远程依赖索引文件代理地址列表\n        let ghproxy = $.require('ghproxy').getproxy();\n        if(ghproxy.length==0){\n            ghproxy.push(\"\");\n        }\n        for (let i = 0; i < ghproxy.length; i++) {\n            try { //远程依赖索引\n                require(ghproxy[i] + 'https://raw.githubusercontent.com/src48597962/hk/master/JyRequire.js', {\n                    timeout: 3000\n                });\n                if (relyfile) {\n                    srcHome = relyfile.includes('raw.github') ? ghproxy[i] + relyfile : relyfile;\n                    setItem('依赖', srcHome);\n                    break;\n                }\n            } catch (e) {\n                $.require('ghproxy').setproxy(ghproxy[i], 0);\n                log(e.message);\n            }\n        }\n    }\n    initConfig({\n        依赖: srcHome\n    });\n}\n//by.帅√`人才","pages":"[{\"col_type\":\"movie_3\",\"name\":\"依赖文件\",\"path\":\"config\",\"rule\":\"js:\\n$.exports.version = 3;\"},{\"col_type\":\"movie_3\",\"name\":\"云口令导入\",\"path\":\"import\",\"rule\":\"js:\\nfunction cloudimport() {\\n    let JYCode = fetch(\\\"hiker://home@聚影✓\\\");\\n    if (JYCode) {\\n        writeFile(\\\"hiker://files/_cache/juying2/cloudimport.txt\\\", input);\\n        return \\\"hiker://page/importConfirm#fullTheme#?rule=聚影✓\\\"\\n    } else {\\n        return \\\"toast://没有聚影✓小程序，要是新版哦\\\";\\n    }\\n}\\n$.exports = cloudimport();\"},{\"col_type\":\"movie_3\",\"name\":\"代理管理\",\"path\":\"ghproxy\",\"rule\":\"js:\\nlet cfgfile = \\\"hiker://files/rules/Src/Juying2/config.json\\\";\\nlet Juconfig = {};\\nlet Jucfg = fetch(cfgfile);\\nif (Jucfg != \\\"\\\") {\\n    eval(\\\"Juconfig=\\\" + Jucfg + \\\";\\\");\\n}\\nlet proxylist = Juconfig['ghproxy'] || [];\\n\\nfunction getproxy() {\\n    return proxylist.filter(v => !v.stop).map(it => it.url);\\n}\\n\\nfunction setproxy(input, zt) {\\n    input = input.trim();\\n    if (input) {\\n        let index = proxylist.findIndex(it => it.url == input);\\n        if (index == -1) {\\n            proxylist.push({\\n                url: input\\n            });\\n        } else if (zt == 1) {\\n            delete proxylist[index].stop;\\n        } else if (zt == 0) {\\n            proxylist[index].stop = 1;\\n        } else if (zt == 2) {\\n            proxylist = proxylist.filter(v => v.url != input);\\n        }\\n        Juconfig['ghproxy'] = proxylist;\\n        writeFile(cfgfile, JSON.stringify(Juconfig));\\n    }\\n}\\n\\nfunction proxyPage() {\\n    setPageTitle('github代理管理页');\\n    let d = [];\\n    d.push({\\n        title: '需要github代理来获取代码，或指定代码仓',\\n        desc: '有代理：' + proxylist.length + '，有效的：' + getproxy().length,\\n        url: $(getItem('依赖', ''), \\\"指定聚影代码仓地址\\\").input(() => {\\n            setItem('依赖', input);\\n            refreshPage();\\n            return \\\"toast://已设置\\\"\\n        }),\\n        col_type: \\\"text_1\\\"\\n    });\\n    d.push({\\n        title: '添加',\\n        col_type: 'input',\\n        desc: '请输入代理地址',\\n        url: $.toString(() => {\\n            if (!/^http/.test(input)) {\\n                return \\\"toast://错误\\\";\\n            }\\n            $.require('ghproxy').setproxy(input);\\n            refreshPage();\\n            return \\\"hiker://empty\\\";\\n        }),\\n        extra: {\\n            titleVisible: true\\n        }\\n    });\\n    d.push({\\n        col_type: \\\"line\\\"\\n    });\\n    proxylist.reverse();\\n    proxylist.forEach(it => {\\n        d.push({\\n            title: it.stop ? '‘‘’’<font color=\\\"#f20c00\\\">' + it.url + '</font>' : it.url,\\n            url: $([it.stop ? \\\"启用\\\" : \\\"停用\\\", \\\"删除\\\", \\\"复制\\\"], 1, \\\"\\\").select((url) => {\\n                if (input == \\\"启用\\\") {\\n                    $.require('ghproxy').setproxy(url, 1);\\n                } else if (input == \\\"停用\\\") {\\n                    $.require('ghproxy').setproxy(url, 0);\\n                } else if (input == \\\"删除\\\") {\\n                    $.require('ghproxy').setproxy(url, 2);\\n                } else if (input == \\\"复制\\\") {\\n                    copy(url);\\n                    return \\\"hiker://empty\\\";\\n                }\\n                refreshPage(false);\\n                return \\\"hiker://empty\\\";\\n            }, it.url),\\n            col_type: \\\"text_1\\\"\\n        });\\n    })\\n    setResult(d);\\n}\\n$.exports = {\\n    getproxy: getproxy,\\n    setproxy: setproxy,\\n    proxyPage: proxyPage\\n};\"},{\"col_type\":\"movie_3\",\"name\":\"导入确认页\",\"path\":\"importConfirm\",\"rule\":\"js:\\neval(JSON.parse(fetch(\\\"hiker://home@聚影✓\\\")).preRule);\\nif (!config.依赖) {\\n    initConfig({\\n        依赖: \\\"https://gitcode.net/src48597962/juying/-/raw/master/SrcJuying.js\\\"\\n    });\\n}\\nrequire(config.依赖.match(/http(s)?:\\\\/\\\\/.*\\\\//)[0] + 'SrcJySet.js');\\nimportConfirm();\"}]","proxy":"","icon":"hiker://files/cache/src/聚影.png"}
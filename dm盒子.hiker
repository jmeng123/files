{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"Instruction_Book.html","path":"Instruction_Book.html","rule":"<!doctype html>\n<html>\n<head>\n<meta charset='UTF-8'><meta name='viewport' content='width=device-width initial-scale=1'>\n\n<style type='text/css'>html {overflow-x: initial !important;}:root { --bg-color:#ffffff; --text-color:#333333; --select-text-bg-color:#B5D6FC; --select-text-font-color:auto; --monospace:\"Lucida Console\",Consolas,\"Courier\",monospace; --title-bar-height:20px; }\n.mac-os-11 { --title-bar-height:28px; }\nhtml { font-size: 14px; background-color: var(--bg-color); color: var(--text-color); font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif; -webkit-font-smoothing: antialiased; }\nbody { margin: 0px; padding: 0px; height: auto; inset: 0px; font-size: 1rem; line-height: 1.42857; overflow-x: hidden; background: inherit; tab-size: 4; }\niframe { margin: auto; }\na.url { word-break: break-all; }\na:active, a:hover { outline: 0px; }\n.in-text-selection, ::selection { text-shadow: none; background: var(--select-text-bg-color); color: var(--select-text-font-color); }\n#write { margin: 0px auto; height: auto; width: inherit; word-break: normal; overflow-wrap: break-word; position: relative; white-space: normal; overflow-x: visible; padding-top: 36px; }\n#write.first-line-indent p { text-indent: 2em; }\n#write.first-line-indent li p, #write.first-line-indent p * { text-indent: 0px; }\n#write.first-line-indent li { margin-left: 2em; }\n.for-image #write { padding-left: 8px; padding-right: 8px; }\nbody.typora-export { padding-left: 30px; padding-right: 30px; }\n.typora-export .footnote-line, .typora-export li, .typora-export p { white-space: pre-wrap; }\n.typora-export .task-list-item input { pointer-events: none; }\n@media screen and (max-width: 500px) {\n  body.typora-export { padding-left: 0px; padding-right: 0px; }\n  #write { padding-left: 20px; padding-right: 20px; }\n  .CodeMirror-sizer { margin-left: 0px !important; }\n  .CodeMirror-gutters { display: none !important; }\n}\n#write li > figure:last-child { margin-bottom: 0.5rem; }\n#write ol, #write ul { position: relative; }\nimg { max-width: 100%; vertical-align: middle; image-orientation: from-image; }\nbutton, input, select, textarea { color: inherit; font: inherit; }\ninput[type=\"checkbox\"], input[type=\"radio\"] { line-height: normal; padding: 0px; }\n*, ::after, ::before { box-sizing: border-box; }\n#write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p, #write pre { width: inherit; }\n#write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p { position: relative; }\np { line-height: inherit; }\nh1, h2, h3, h4, h5, h6 { break-after: avoid-page; break-inside: avoid; orphans: 4; }\np { orphans: 4; }\nh1 { font-size: 2rem; }\nh2 { font-size: 1.8rem; }\nh3 { font-size: 1.6rem; }\nh4 { font-size: 1.4rem; }\nh5 { font-size: 1.2rem; }\nh6 { font-size: 1rem; }\n.md-math-block, .md-rawblock, h1, h2, h3, h4, h5, h6, p { margin-top: 1rem; margin-bottom: 1rem; }\n.hidden { display: none; }\n.md-blockmeta { color: rgb(204, 204, 204); font-weight: 700; font-style: italic; }\na { cursor: pointer; }\nsup.md-footnote { padding: 2px 4px; background-color: rgba(238, 238, 238, 0.7); color: rgb(85, 85, 85); border-radius: 4px; cursor: pointer; }\nsup.md-footnote a, sup.md-footnote a:hover { color: inherit; text-transform: inherit; text-decoration: inherit; }\n#write input[type=\"checkbox\"] { cursor: pointer; width: inherit; height: inherit; }\nfigure { overflow-x: auto; margin: 1.2em 0px; max-width: calc(100% + 16px); padding: 0px; }\nfigure > table { margin: 0px; }\ntr { break-inside: avoid; break-after: auto; }\nthead { display: table-header-group; }\ntable { border-collapse: collapse; border-spacing: 0px; width: 100%; overflow: auto; break-inside: auto; text-align: left; }\ntable.md-table td { min-width: 32px; }\n.CodeMirror-gutters { border-right: 0px; background-color: inherit; }\n.CodeMirror-linenumber { user-select: none; }\n.CodeMirror { text-align: left; }\n.CodeMirror-placeholder { opacity: 0.3; }\n.CodeMirror pre { padding: 0px 4px; }\n.CodeMirror-lines { padding: 0px; }\ndiv.hr:focus { cursor: none; }\n#write pre { white-space: pre-wrap; }\n#write.fences-no-line-wrapping pre { white-space: pre; }\n#write pre.ty-contain-cm { white-space: normal; }\n.CodeMirror-gutters { margin-right: 4px; }\n.md-fences { font-size: 0.9rem; display: block; break-inside: avoid; text-align: left; overflow: visible; white-space: pre; background: inherit; position: relative !important; }\n.md-fences-adv-panel { width: 100%; margin-top: 10px; text-align: center; padding-top: 0px; padding-bottom: 8px; overflow-x: auto; }\n#write .md-fences.mock-cm { white-space: pre-wrap; }\n.md-fences.md-fences-with-lineno { padding-left: 0px; }\n#write.fences-no-line-wrapping .md-fences.mock-cm { white-space: pre; overflow-x: auto; }\n.md-fences.mock-cm.md-fences-with-lineno { padding-left: 8px; }\n.CodeMirror-line, twitterwidget { break-inside: avoid; }\n.footnotes { opacity: 0.8; font-size: 0.9rem; margin-top: 1em; margin-bottom: 1em; }\n.footnotes + .footnotes { margin-top: 0px; }\n.md-reset { margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: top; background: 0px 0px; text-decoration: none; text-shadow: none; float: none; position: static; width: auto; height: auto; white-space: nowrap; cursor: inherit; -webkit-tap-highlight-color: transparent; line-height: normal; font-weight: 400; text-align: left; box-sizing: content-box; direction: ltr; }\nli div { padding-top: 0px; }\nblockquote { margin: 1rem 0px; }\nli .mathjax-block, li p { margin: 0.5rem 0px; }\nli blockquote { margin: 1rem 0px; }\nli { margin: 0px; position: relative; }\nblockquote > :last-child { margin-bottom: 0px; }\nblockquote > :first-child, li > :first-child { margin-top: 0px; }\n.footnotes-area { color: rgb(136, 136, 136); margin-top: 0.714rem; padding-bottom: 0.143rem; white-space: normal; }\n#write .footnote-line { white-space: pre-wrap; }\n@media print {\n  body, html { border: 1px solid transparent; height: 99%; break-after: avoid; break-before: avoid; font-variant-ligatures: no-common-ligatures; }\n  #write { margin-top: 0px; padding-top: 0px; border-color: transparent !important; }\n  .typora-export * { -webkit-print-color-adjust: exact; }\n  .typora-export #write { break-after: avoid; }\n  .typora-export #write::after { height: 0px; }\n  .is-mac table { break-inside: avoid; }\n  .typora-export-show-outline .typora-export-sidebar { display: none; }\n}\n.footnote-line { margin-top: 0.714em; font-size: 0.7em; }\na img, img a { cursor: pointer; }\npre.md-meta-block { font-size: 0.8rem; min-height: 0.8rem; white-space: pre-wrap; background: rgb(204, 204, 204); display: block; overflow-x: hidden; }\np > .md-image:only-child:not(.md-img-error) img, p > img:only-child { display: block; margin: auto; }\n#write.first-line-indent p > .md-image:only-child:not(.md-img-error) img { left: -2em; position: relative; }\np > .md-image:only-child { display: inline-block; width: 100%; }\n#write .MathJax_Display { margin: 0.8em 0px 0px; }\n.md-math-block { width: 100%; }\n.md-math-block:not(:empty)::after { display: none; }\n.MathJax_ref { fill: currentcolor; }\n[contenteditable=\"true\"]:active, [contenteditable=\"true\"]:focus, [contenteditable=\"false\"]:active, [contenteditable=\"false\"]:focus { outline: 0px; box-shadow: none; }\n.md-task-list-item { position: relative; list-style-type: none; }\n.task-list-item.md-task-list-item { padding-left: 0px; }\n.md-task-list-item > input { position: absolute; top: 0px; left: 0px; margin-left: -1.2em; margin-top: calc(1em - 10px); border: none; }\n.math { font-size: 1rem; }\n.md-toc { min-height: 3.58rem; position: relative; font-size: 0.9rem; border-radius: 10px; }\n.md-toc-content { position: relative; margin-left: 0px; }\n.md-toc-content::after, .md-toc::after { display: none; }\n.md-toc-item { display: block; color: rgb(65, 131, 196); }\n.md-toc-item a { text-decoration: none; }\n.md-toc-inner:hover { text-decoration: underline; }\n.md-toc-inner { display: inline-block; cursor: pointer; }\n.md-toc-h1 .md-toc-inner { margin-left: 0px; font-weight: 700; }\n.md-toc-h2 .md-toc-inner { margin-left: 2em; }\n.md-toc-h3 .md-toc-inner { margin-left: 4em; }\n.md-toc-h4 .md-toc-inner { margin-left: 6em; }\n.md-toc-h5 .md-toc-inner { margin-left: 8em; }\n.md-toc-h6 .md-toc-inner { margin-left: 10em; }\n@media screen and (max-width: 48em) {\n  .md-toc-h3 .md-toc-inner { margin-left: 3.5em; }\n  .md-toc-h4 .md-toc-inner { margin-left: 5em; }\n  .md-toc-h5 .md-toc-inner { margin-left: 6.5em; }\n  .md-toc-h6 .md-toc-inner { margin-left: 8em; }\n}\na.md-toc-inner { font-size: inherit; font-style: inherit; font-weight: inherit; line-height: inherit; }\n.footnote-line a:not(.reversefootnote) { color: inherit; }\n.md-attr { display: none; }\n.md-fn-count::after { content: \".\"; }\ncode, pre, samp, tt { font-family: var(--monospace); }\nkbd { margin: 0px 0.1em; padding: 0.1em 0.6em; font-size: 0.8em; color: rgb(36, 39, 41); background: rgb(255, 255, 255); border: 1px solid rgb(173, 179, 185); border-radius: 3px; box-shadow: rgba(12, 13, 14, 0.2) 0px 1px 0px, rgb(255, 255, 255) 0px 0px 0px 2px inset; white-space: nowrap; vertical-align: middle; }\n.md-comment { color: rgb(162, 127, 3); opacity: 0.6; font-family: var(--monospace); }\ncode { text-align: left; vertical-align: initial; }\na.md-print-anchor { white-space: pre !important; border-width: initial !important; border-style: none !important; border-color: initial !important; display: inline-block !important; position: absolute !important; width: 1px !important; right: 0px !important; outline: 0px !important; background: 0px 0px !important; text-decoration: initial !important; text-shadow: initial !important; }\n.os-windows.monocolor-emoji .md-emoji { font-family: \"Segoe UI Symbol\", sans-serif; }\n.md-diagram-panel > svg { max-width: 100%; }\n[lang=\"flow\"] svg, [lang=\"mermaid\"] svg { max-width: 100%; height: auto; }\n[lang=\"mermaid\"] .node text { font-size: 1rem; }\ntable tr th { border-bottom: 0px; }\nvideo { max-width: 100%; display: block; margin: 0px auto; }\niframe { max-width: 100%; width: 100%; border: none; }\n.highlight td, .highlight tr { border: 0px; }\nmark { background: rgb(255, 255, 0); color: rgb(0, 0, 0); }\n.md-html-inline .md-plain, .md-html-inline strong, mark .md-inline-math, mark strong { color: inherit; }\n.md-expand mark .md-meta { opacity: 0.3 !important; }\nmark .md-meta { color: rgb(0, 0, 0); }\n@media print {\n  .typora-export h1, .typora-export h2, .typora-export h3, .typora-export h4, .typora-export h5, .typora-export h6 { break-inside: avoid; }\n}\n.md-diagram-panel .messageText { stroke: none !important; }\n.md-diagram-panel .start-state { fill: var(--node-fill); }\n.md-diagram-panel .edgeLabel rect { opacity: 1 !important; }\n.md-fences.md-fences-math { font-size: 1em; }\n.md-fences-advanced:not(.md-focus) { padding: 0px; white-space: nowrap; border: 0px; }\n.md-fences-advanced:not(.md-focus) { background: inherit; }\n.typora-export-show-outline .typora-export-content { max-width: 1440px; margin: auto; display: flex; flex-direction: row; }\n.typora-export-sidebar { width: 300px; font-size: 0.8rem; margin-top: 80px; margin-right: 18px; }\n.typora-export-show-outline #write { --webkit-flex:2; flex: 2 1 0%; }\n.typora-export-sidebar .outline-content { position: fixed; top: 0px; max-height: 100%; overflow: hidden auto; padding-bottom: 30px; padding-top: 60px; width: 300px; }\n@media screen and (max-width: 1024px) {\n  .typora-export-sidebar, .typora-export-sidebar .outline-content { width: 240px; }\n}\n@media screen and (max-width: 800px) {\n  .typora-export-sidebar { display: none; }\n}\n.outline-content li, .outline-content ul { margin-left: 0px; margin-right: 0px; padding-left: 0px; padding-right: 0px; list-style: none; }\n.outline-content ul { margin-top: 0px; margin-bottom: 0px; }\n.outline-content strong { font-weight: 400; }\n.outline-expander { width: 1rem; height: 1.42857rem; position: relative; display: table-cell; vertical-align: middle; cursor: pointer; padding-left: 4px; }\n.outline-expander::before { content: \"\"; position: relative; font-family: Ionicons; display: inline-block; font-size: 8px; vertical-align: middle; }\n.outline-item { padding-top: 3px; padding-bottom: 3px; cursor: pointer; }\n.outline-expander:hover::before { content: \"\"; }\n.outline-h1 > .outline-item { padding-left: 0px; }\n.outline-h2 > .outline-item { padding-left: 1em; }\n.outline-h3 > .outline-item { padding-left: 2em; }\n.outline-h4 > .outline-item { padding-left: 3em; }\n.outline-h5 > .outline-item { padding-left: 4em; }\n.outline-h6 > .outline-item { padding-left: 5em; }\n.outline-label { cursor: pointer; display: table-cell; vertical-align: middle; text-decoration: none; color: inherit; }\n.outline-label:hover { text-decoration: underline; }\n.outline-item:hover { border-color: rgb(245, 245, 245); background-color: var(--item-hover-bg-color); }\n.outline-item:hover { margin-left: -28px; margin-right: -28px; border-left: 28px solid transparent; border-right: 28px solid transparent; }\n.outline-item-single .outline-expander::before, .outline-item-single .outline-expander:hover::before { display: none; }\n.outline-item-open > .outline-item > .outline-expander::before { content: \"\"; }\n.outline-children { display: none; }\n.info-panel-tab-wrapper { display: none; }\n.outline-item-open > .outline-children { display: block; }\n.typora-export .outline-item { padding-top: 1px; padding-bottom: 1px; }\n.typora-export .outline-item:hover { margin-right: -8px; border-right: 8px solid transparent; }\n.typora-export .outline-expander::before { content: \"+\"; font-family: inherit; top: -1px; }\n.typora-export .outline-expander:hover::before, .typora-export .outline-item-open > .outline-item > .outline-expander::before { content: \"−\"; }\n.typora-export-collapse-outline .outline-children { display: none; }\n.typora-export-collapse-outline .outline-item-open > .outline-children, .typora-export-no-collapse-outline .outline-children { display: block; }\n.typora-export-no-collapse-outline .outline-expander::before { content: \"\" !important; }\n.typora-export-show-outline .outline-item-active > .outline-item .outline-label { font-weight: 700; }\n.md-inline-math-container mjx-container { zoom: 0.95; }\n\n\n.CodeMirror { height: auto; }\n.CodeMirror.cm-s-inner { background: inherit; }\n.CodeMirror-scroll { overflow: auto hidden; z-index: 3; }\n.CodeMirror-gutter-filler, .CodeMirror-scrollbar-filler { background-color: rgb(255, 255, 255); }\n.CodeMirror-gutters { border-right: 1px solid rgb(221, 221, 221); background: inherit; white-space: nowrap; }\n.CodeMirror-linenumber { padding: 0px 3px 0px 5px; text-align: right; color: rgb(153, 153, 153); }\n.cm-s-inner .cm-keyword { color: rgb(119, 0, 136); }\n.cm-s-inner .cm-atom, .cm-s-inner.cm-atom { color: rgb(34, 17, 153); }\n.cm-s-inner .cm-number { color: rgb(17, 102, 68); }\n.cm-s-inner .cm-def { color: rgb(0, 0, 255); }\n.cm-s-inner .cm-variable { color: rgb(0, 0, 0); }\n.cm-s-inner .cm-variable-2 { color: rgb(0, 85, 170); }\n.cm-s-inner .cm-variable-3 { color: rgb(0, 136, 85); }\n.cm-s-inner .cm-string { color: rgb(170, 17, 17); }\n.cm-s-inner .cm-property { color: rgb(0, 0, 0); }\n.cm-s-inner .cm-operator { color: rgb(152, 26, 26); }\n.cm-s-inner .cm-comment, .cm-s-inner.cm-comment { color: rgb(170, 85, 0); }\n.cm-s-inner .cm-string-2 { color: rgb(255, 85, 0); }\n.cm-s-inner .cm-meta { color: rgb(85, 85, 85); }\n.cm-s-inner .cm-qualifier { color: rgb(85, 85, 85); }\n.cm-s-inner .cm-builtin { color: rgb(51, 0, 170); }\n.cm-s-inner .cm-bracket { color: rgb(153, 153, 119); }\n.cm-s-inner .cm-tag { color: rgb(17, 119, 0); }\n.cm-s-inner .cm-attribute { color: rgb(0, 0, 204); }\n.cm-s-inner .cm-header, .cm-s-inner.cm-header { color: rgb(0, 0, 255); }\n.cm-s-inner .cm-quote, .cm-s-inner.cm-quote { color: rgb(0, 153, 0); }\n.cm-s-inner .cm-hr, .cm-s-inner.cm-hr { color: rgb(153, 153, 153); }\n.cm-s-inner .cm-link, .cm-s-inner.cm-link { color: rgb(0, 0, 204); }\n.cm-negative { color: rgb(221, 68, 68); }\n.cm-positive { color: rgb(34, 153, 34); }\n.cm-header, .cm-strong { font-weight: 700; }\n.cm-del { text-decoration: line-through; }\n.cm-em { font-style: italic; }\n.cm-link { text-decoration: underline; }\n.cm-error { color: red; }\n.cm-invalidchar { color: red; }\n.cm-constant { color: rgb(38, 139, 210); }\n.cm-defined { color: rgb(181, 137, 0); }\ndiv.CodeMirror span.CodeMirror-matchingbracket { color: rgb(0, 255, 0); }\ndiv.CodeMirror span.CodeMirror-nonmatchingbracket { color: rgb(255, 34, 34); }\n.cm-s-inner .CodeMirror-activeline-background { background: inherit; }\n.CodeMirror { position: relative; overflow: hidden; }\n.CodeMirror-scroll { height: 100%; outline: 0px; position: relative; box-sizing: content-box; background: inherit; }\n.CodeMirror-sizer { position: relative; }\n.CodeMirror-gutter-filler, .CodeMirror-hscrollbar, .CodeMirror-scrollbar-filler, .CodeMirror-vscrollbar { position: absolute; z-index: 6; display: none; outline: 0px; }\n.CodeMirror-vscrollbar { right: 0px; top: 0px; overflow: hidden; }\n.CodeMirror-hscrollbar { bottom: 0px; left: 0px; overflow: auto hidden; }\n.CodeMirror-scrollbar-filler { right: 0px; bottom: 0px; }\n.CodeMirror-gutter-filler { left: 0px; bottom: 0px; }\n.CodeMirror-gutters { position: absolute; left: 0px; top: 0px; padding-bottom: 10px; z-index: 3; overflow-y: hidden; }\n.CodeMirror-gutter { white-space: normal; height: 100%; box-sizing: content-box; padding-bottom: 30px; margin-bottom: -32px; display: inline-block; }\n.CodeMirror-gutter-wrapper { position: absolute; z-index: 4; background: 0px 0px !important; border: none !important; }\n.CodeMirror-gutter-background { position: absolute; top: 0px; bottom: 0px; z-index: 4; }\n.CodeMirror-gutter-elt { position: absolute; cursor: default; z-index: 4; }\n.CodeMirror-lines { cursor: text; }\n.CodeMirror pre { border-radius: 0px; border-width: 0px; background: 0px 0px; font-family: inherit; font-size: inherit; margin: 0px; white-space: pre; overflow-wrap: normal; color: inherit; z-index: 2; position: relative; overflow: visible; }\n.CodeMirror-wrap pre { overflow-wrap: break-word; white-space: pre-wrap; word-break: normal; }\n.CodeMirror-code pre { border-right: 30px solid transparent; width: fit-content; }\n.CodeMirror-wrap .CodeMirror-code pre { border-right: none; width: auto; }\n.CodeMirror-linebackground { position: absolute; inset: 0px; z-index: 0; }\n.CodeMirror-linewidget { position: relative; z-index: 2; overflow: auto; }\n.CodeMirror-wrap .CodeMirror-scroll { overflow-x: hidden; }\n.CodeMirror-measure { position: absolute; width: 100%; height: 0px; overflow: hidden; visibility: hidden; }\n.CodeMirror-measure pre { position: static; }\n.CodeMirror div.CodeMirror-cursor { position: absolute; visibility: hidden; border-right: none; width: 0px; }\n.CodeMirror div.CodeMirror-cursor { visibility: hidden; }\n.CodeMirror-focused div.CodeMirror-cursor { visibility: inherit; }\n.cm-searching { background: rgba(255, 255, 0, 0.4); }\nspan.cm-underlined { text-decoration: underline; }\nspan.cm-strikethrough { text-decoration: line-through; }\n.cm-tw-syntaxerror { color: rgb(255, 255, 255); background-color: rgb(153, 0, 0); }\n.cm-tw-deleted { text-decoration: line-through; }\n.cm-tw-header5 { font-weight: 700; }\n.cm-tw-listitem:first-child { padding-left: 10px; }\n.cm-tw-box { border-style: solid; border-right-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-color: inherit; border-top-width: 0px !important; }\n.cm-tw-underline { text-decoration: underline; }\n@media print {\n  .CodeMirror div.CodeMirror-cursor { visibility: hidden; }\n}\n\n\n:root {\n    --primary-color: #37352f;\n    --bg-color: #ffffff;\n    --bg-color-dark: #f7f6f3;\n    --dark-trait: #e9e9e7;\n    --light-trait-100: #ecedec;\n    --light-trait-200: #c70000;\n    --light-trait-300: #37352f;\n    --light-trait-400: #f7f6f3;\n    --text-color: #37352f;\n    --text-color-secondary: #73726e;\n    --text-highlight-color: #fff;\n    --text-highlight-bg: rgba(var(--primary-color-rgb), 0.3);\n    --select-text-bg-color: #c0e5f4;\n\t--search-select-text-color:#448361;\n    --search-select-bg-color: #edf3ec;\n    --code-color: #9a6e3a;\n    --border-radius: 4px;\n    --font-size: 16px;\n    --font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, \"Apple Color Emoji\", Arial, sans-serif, \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n    --monospace: 'SF Mono Medium', 'Fira Code', 'Cousine', 'Consolas', monospace;\n    --heading-char-color: var(--light-trait-400);\n    --color-popover-bg-color: var(--text-color);\n    --rawblock-edit-panel-bd: var(--bg-color-dark);\n    --control-text-color: #72706b;\n    --meta-content-color: var(--primary-color);\n    --primary-btn-border-color: var(--primary-color);\n    --side-bar-bg-color: var(--bg-color-dark);\n    --item-hover-bg-color: #e8e7e4;\n    --active-file-bg-color: #e8e7e4;\n    --active-file-border-color: var(--bg-color);\n    --window-border: 1px solid var(--bg-color);\n    --focus-ring-color: transparent;\n}\n\nhtml {\n    font-size: var(--font-size);\n}\n\nbody {\n    font-family: var(--font-family);\n    -webkit-font-smoothing: antialiased;\n    color: var(--text-color);\n    line-height: 1.6;\n}\n\ncode {\n    color: #ec5757;\n    background-color: #eeedeb;\n    padding: 0 2px 0 2px;\n}\n\n#write {\n    max-width: 860px;\n    margin: 0 auto;\n    padding: 30px;\n    padding-bottom: 100px;\n}\n\n@media only screen and (min-width: 1400px) {\n    #write {\n        max-width: 1024px;\n    }\n}\n\n@media only screen and (min-width: 1800px) {\n    #write {\n        max-width: 1200px;\n    }\n}\n\n#write>ul:first-child, #write>ol:first-child {\n    margin-top: 30px;\n}\n\na {\n    color: var(--primary-color);\n}\n\nh1, h2, h3, h4, h5, h6 {\n    position: relative;\n    margin-top: 2rem;\n    margin-bottom: 1rem;\n    font-weight: 700;\n    line-height: 1.4;\n    cursor: text;\n}\n\nh1:hover a.anchor, h2:hover a.anchor, h3:hover a.anchor, h4:hover a.anchor, h5:hover a.anchor, h6:hover a.anchor {\n    text-decoration: none;\n}\n\nh1 tt, h1 code, h2 tt, h2 code, h3 tt, h3 code, h4 tt, h4 code, h5 tt, h5 code, h6 tt, h6 code {\n    font-size: inherit;\n}\n\nh1 {\n    padding-bottom: 0.3em;\n    font-size: 2.2em;\n    line-height: 1.3;\n}\n\nh2 {\n    padding-bottom: 0.3em;\n    font-size: 1.75em;\n    line-height: 1.225;\n}\n\nh3 {\n    font-size: 1.4em;\n    line-height: 1.43;\n}\n\nh4 {\n    font-size: 1.2em;\n}\n\nh5 {\n    font-size: 1em;\n}\n\nh6 {\n    font-size: 1em;\n    color: var(--light-trait-300);\n}\n\np, blockquote, ul, ol, dl, table {\n    margin: 0.8em 0;\n}\n\nli>ol, li>ul {\n    margin: 0 0;\n}\n\nhr {\n    background-color: var(--light-trait-100);\n    height: 1.5px;\n    border: none\n}\n\na,\n.md-def-url {\n    color: var(--text-color);\n    text-decoration: none;\n    border-bottom:0.05em solid;\n    border-color: #37352f;\n    opacity:0.6;\n    transition: all .1s ease-in; \n}\n\na:hover {\n    text-decoration: none;\n    opacity:1;\n}\n\nsup.md-footnote {\n    background-color: var(--light-trait-400);\n    color: #888884;\n}\n\nli p.first {\n    display: inline-block;\n}\n\nul, ol {\n    padding-left: 30px;\n}\n\nul:first-child, ol:first-child {\n    margin-top: 0.35%;\n}\n\nul:last-child, ol:last-child {\n    margin-bottom: 0;\n}\n\nmark, .ty-file-search-match-text, .md-search-hit {\n    background: #fdebec;\n\tcolor: #d44c47;\n}\n\nmark {\n    border-radius: 4px;\n    color: #402c1b;\n    font-weight: inherit;\n    background-color: #fdecc8;\n    padding-left: 4px;\n    padding-right: 4px;\n    padding-top: 2px;\n    padding-bottom: 2px;\n    margin-left: 2px;\n    margin-right: 2px;\n}\n\n.md-search-hit * {\n    color: var(--search-select-text-color);\n}\n\n/* Search highlight */\n.cm-search-hit.CodeMirror-selectedtext, .md-search-hit.md-search-select, .md-search-select {\n    outline: 0px solid var(--search-select-text-color);\n}\n\n.outline-item.select, .ty-search-item-line.select, .ty-search-item.select {\n    outline-width: 2px;\n}\n\n.outline-item.select {\n    outline-offset: 0px;\n}\n\nblockquote {\n    margin-left: 1.75px;\n    margin-right: 0px;\n    border-left: 4px solid var(--text-color);\n    padding: 10px 14px 7px 22px;\n}\n\nblockquote blockquote {\n    padding-right: 0;\n}\n\ntable {\n    padding: 0;\n    word-break: initial;\n}\n\ntable tr {\n    border-top: 1px solid var(--dark-trait);\n    margin: 0;\n    padding: 0;\n}\n\ntable tr th {\n    font-weight: bold;\n    border: 1px solid var(--dark-trait);\n    border-bottom: 0;\n    margin: 0;\n    padding: 6px 13px;\n}\n\ntable tr td {\n    border: 1px solid var(--dark-trait);\n    margin: 0;\n    padding: 6px 13px;\n}\n\ntable tr th:first-child, table tr td:first-child {\n    margin-top: 0;\n}\n\ntable tr th:last-child, table tr td:last-child {\n    margin-bottom: 0;\n}\n\n\nkbd {\n    font-size: 0.875rem;\n    background: var(--bg-color-dark);\n    border: 1px solid var(--dark-trait);\n    box-shadow: 0 2px 0 var(--dark-trait);\n    color: var(--text-color-secondary);\n}\n\n.md-fences, code, tt {\n    border: none;\n    background-color: #f7f6f3;\n    border-radius: var(--border-radius);\n    padding: 2px 4px 0px 4px;\n    font-size: 0.975em;\n    font-weight: medium;\n    font-family: var(--monospace)\n}\n.md-fences {\n    margin-bottom: 15px;\n    margin-top: 15px;\n    padding-top: 8px;\n    padding-bottom: 6px;\n}\n\n#write pre.md-meta-block {\n    padding: 1rem;\n    font-size: 85%;\n    line-height: 1.45;\n    background-color: var(--bg-color-dark);\n    border: 0;\n    border-radius: var(--border-radius);\n    color: var(--text-color-secondary);\n    margin-top: 0 !important;\n}\n\n#write .mathjax-block .md-rawblock-tooltip {\n    border-top-left-radius: var(--border-radius);\n    border-top-right-radius: var(--border-radius);\n}\n\n#write .mathjax-block .md-math-container {\n    border-top-left-radius: var(--border-radius);\n    border-bottom-right-radius: var(--border-radius);\n    border-bottom-left-radius: var(--border-radius);\n}\n\n#write .md-mathblock-panel .md-rawblock-control:first-of-type {\n    border-top-left-radius: var(--border-radius);\n}\n\n.md-mathjax-midline {\n    background-color: var(--bg-color);\n    color: var(--text-color);\n}\n\n.md-inline-math script {\n    color: var(--code-color);\n}\n\n.CodeMirror-lines {\n    padding-left: 4px;\n}\n\n.code-tooltip {\n    box-shadow: none;\n    border-radius: var(--border-radius);\n}\n\n#write .code-tooltip {\n    bottom: initial;\n    top: 100%;\n    left: initial;\n    right: -1px;\n    background: var(--bg-color-dark);\n    border: 1px solid var(--dark-trait);\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n    border-top: 0;\n    font-family: var(--monospace);\n}\n\n#write .md-mathblock-panel .code-tooltip {\n    right: 0;\n    border: none;\n}\n\n/* TODO */\n#write .md-task-list-item>input {\n    -webkit-appearance: initial;\n    display: inline-block;\n    text-align: center;\n    vertical-align: middle;\n    position: absolute;\n    border: 1px solid var(--text-color);\n    /* border-radius: 100%; */\n    margin-left: -1.45rem;\n    height: 0.95rem;\n    width: 0.95rem;\n    transition: all 0.35s;\n}\n\n#write .md-task-list-item>input:focus {\n    outline: none;\n    box-shadow: none;\n}\n\n#write .md-task-list-item>input[checked] {\n    background: #2eaadc;\n    border: 1px solid #2eaadc;\n    text-decoration: line-through;\n}\n\n#write .md-task-list-item>input[checked]::before {\n    display: inline-block;\n    vertical-align: middle;\n    content: '✓';\n    position: absolute;\n    margin-top: 0.05rem;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    text-align: absolute;\n    color: var(--bg-color);\n    font-size: 0.75em;\n    font-weight: 760;\n}\n\n#write .md-task-list-item>input[checked]::after {\n    text-decoration: line-through;\n}\n\n/* TODO */\n.md-image>.md-meta {\n    border-radius: var(--border-radius);\n    padding: 2px 0px 0px 4px;\n    font-size: 0.9em;\n    color: inherit;\n}\n\n.md-toc {\n    margin-top: 20px;\n    padding-bottom: 20px;\n}\n\n/* Source mode */\n.CodeMirror.cm-s-typora-default *, .cm-s-typora-default * {\n    background: inherit;\n    color: var(--text-color);\n    font-family: var(--monospace);\n    font-size: var(--font-size) !important;\n    font-style: normal;\n    font-weight: medium;\n}\n\n.CodeMirror.cm-s-typora-default div.CodeMirror-cursor {\n    border-left: 2px solid var(--text-color);\n}\n\n.sidebar-tabs {\n    border-bottom: none;\n}\n\n.outline-expander {\n    width: 1.5rem;\n    vertical-align: initial;\n}\n\n.outline-expander:before, .outline-expander:hover:before, .outline-item-open>.outline-item>.outline-expander:before, .outline-item-open>.outline-item>.outline-expander:hover:before {\n    content: \"\\f125\";\n    transition: transform 125ms ease-in-out;\n}\n\n.outline-item-open>.outline-item>.outline-expander:hover:before, .outline-item-open>.outline-item>.outline-expander:before {\n    transform: rotate(90deg);\n}\n\n.outline-label:hover {\n    text-decoration: none;\n}\n\n#toc-dropmenu {\n    background: var(--bg-color-dark);\n}\n\n#toc-dropmenu .outline-title {\n    font-size: 1rem;\n    text-transform: uppercase;\n}\n\n.dropdown-menu .divider {\n    display: none;\n}\n\n.context-menu {\n    border: none!important;\n    backdrop-filter: saturate(180%) blur(20px) brightness(1.1);\n    background-color: var(--bg-color-dark);\n    box-shadow: 0 25.6px 57.6px 0 rgba(0, 0, 0, .22), 0 4.8px 14.4px 0 rgba(0, 0, 0, .18)!important;\n}\n\n.file-node-background {\n    height: 31px;\n}\n\n.file-node-content:hover .file-node-icon, .file-node-content:hover .file-node-open-state {\n    visibility: visible;\n}\n\n.file-node-icon {\n    margin-right: 8px;\n}\n\n.file-library-node:not(.file-node-root):focus>.file-node-content {\n    outline: none;\n}\n\n/* New file animation */\n.blink-area {\n    animation: none;\n}\n\n.file-list-item-summary {\n    font-size: var(--font-size);\n    font-family: var(--font-family);\n}\n\n#md-searchpanel input {\n    border-radius: var(--border-radius);\n    box-shadow: none;\n}\n\n#md-searchpanel input:focus {\n    box-shadow: none;\n    border-color: var(--meta-content-color);\n}\n\n#md-searchpanel .search-type-selection {\n    width: auto;\n}\n\n#md-searchpanel .btn:not(.close-btn):hover {\n    box-shadow: none;\n}\n\n.mac-seamless-mode #typora-sidebar {\n    background-color: var(--side-bar-bg-color);\n}\n\n#md-notification .btn {\n    border: 0;\n}\n\n/* CODE HIGHLIGHT */\npre.CodeMirror-line {\n    color: #999999!important\n}\n\n.cm-variable {\n    color: #37352f!important;\n}\n\n.cm-keyword {\n    color: #0277aa !important\n}\n\n.cm-tag {\n    color: #ff5a5a!important\n}\n\n.cm-variable-3 {\n    color: #48ff00!important;\n}\n\n.cm-bracket, .cm-error {\n    color: #ff5a5a!important\n}\n\n.cm-attribute {\n    color: #0277aa!important;\n}\n\n.cm-def {\n    color: #dc4a68!important;\n}\n\n.cm-comment {\n    color: #708090!important;\n}\n\n.cm-string {\n    color: #669900!important;\n    font-variant-ligatures: common-ligatures!important;\n}\n\n.cm-tag:not() {\n    font-weight: 700;\n}\n\n.cm-operator {\n    color: #9a6e3b!important;\n}\n\n.cm-number {\n    color: #990055!important;\n}\n\n.cm-meta {\n    color: var(--text-color) !important;\n    font-weight: 700!important;\n}\n\n.cm-atom { color: #845dc4; }\n\n.cm-builtin {\n    color: #669900 !important;\n}\n\n.cm-property {\n    color: var(--text-color) !important;\n}\n\n.cm-variable-2 {\n    color: var(--text-color) !important;\n}\n\n.cm-variable-3 {\n    color: #845dc4;\n}\n\n/* CODE HIGHLIGHT */\n.file-tree-node.active>.file-node-background {\n    background-color: var(--active-file-bg-color);\n    border-left: 0px solid #dad9d6!important;\n    border-color: #dad9d6!important;\n    background-color: #e8e7e4!important;\n}\n\n.CodeMirror-gutters {\n    border-right: 1px solid #f1f3f450;\n    background: inherit;\n    white-space: nowrap;\n}\n\n.ty-footer, .sidebar-footer, footer {\n    backdrop-filter: saturate(120%) blur(20px) brightness(0.85);\n    border: none!important;\n    background: none;\n    background-color: #f7f6f3;\n}\n\n.code-tooltip {\n    border-radius: 4px;\n    background-color: #313334;\n    box-shadow: 0 25.6px 57.6px 0 rgba(0, 0, 0, .52), 0 4.8px 14.4px 0 rgba(0, 0, 0, .28)!important;\n}\n\n#sidebar-files-menu {\n    border-radius: 4px;\n    border: none!important;\n    box-shadow: 0 25.6px 57.6px 0 #f7f6f3, 0 4.8px 14.4px 0 rgba(0, 0, 0, .28);\n}\n\n.code-tooltip.md-tooltip-hide.md-hover-tip {\n    box-shadow: 0 25.6px 57.6px 0 rgba(0, 0, 0, .52), 0 4.8px 14.4px 0 rgba(0, 0, 0, .28);\n}\n\n#typora-sidebar {\n    border: none !important;\n}\n\n#footer-word-count-info, #spell-check-panel {\n    border: none!important;\n    backdrop-filter: saturate(120%) blur(20px) brightness(0.85)!important;\n    box-shadow: 0 25.6px 57.6px 0 rgba(0, 0, 0, .32), 0 4.8px 14.4px 0 rgba(0, 0, 0, .28)!important;\n}\n\n/* Windows/Linux unibody mode */\n.megamenu-content,\n.megamenu-opened header {\n    color:  var(--primary-color);\n    background: var(--bg-color-dark);\n}\n\n#recent-file-panel-action-btn {\n    background: inherit;\n    border: 1px var(--light-trait-300) solid;\n}\n\n.megamenu-menu-panel table td:nth-child(1) {\n    color: var(--text-color);\n    background: var(--bg-color-dark);\n}\n\n.megamenu-menu-panel table td:nth-child(2) {\n    color: var(--text-color);\n    background: var(--bg-color-dark);\n}\n\n.megamenu-menu-panel tbody tr:hover td:nth-child(1) {\n    color: var(--text-color);\n    background: var( --active-file-bg-color);\n}\n\n.megamenu-menu-panel tbody tr:hover td:nth-child(2) {\n    color: var(--text-color);\n    background: var( --active-file-bg-color);\n}\n\n.megamenu-menu-panel input[type='text'] {\n    background: inherit;\n    border: 1px var(--control-text-color) solid;\n}\n\n#recent-file-panel-action-btn {\n    background: inherit;\n}\n\n.megamenu-menu, .megamenu-content {\n\tbackground: var(--side-bar-bg-color);\n\tcolor: var(--text-color);\n}\n\n#top-titlebar, #top-titlebar * {\n    background: inherit;\n\tcolor: var(--text-color);\n}\n\n.megamenu-menu-header #megamenu-menu-header-title:before {\n\tcolor:  var(--text-color);\n}\n\nmegamenu-back-btn {\n\tcolor: var(--text-color);\n\tborder-color: var(--text-color);\n}\n\n.megamenu-menu-header #megamenu-menu-header-title,\n.megamenu-menu-header:hover,\n.megamenu-menu-header:focus {\n\tcolor: inherit;\n}\n\n.megamenu-menu-panel table tr:nth-child(2n + 1) {\n    background-color:  var(--side-bar-bg-color);\n}\n\n\n</style><title>使用说明</title>\n</head>\n<body class='typora-export os-windows'><div class='typora-export-content'>\n<div id='write'  class=''><blockquote><h1 id='前言'><span>前言</span></h1><p><span>使用说明有点长，请自行选择模块进行跳转阅读。本使用说明不仅写了dm盒子的一些事项，也一定程度上作了关于解析和断插的说明。推荐长按下方的目录索引章节然后在弹框选择打开网页——&gt;（会在浏览器打开并跳转到相应的章节，支持页面缩放）的方式进行阅读。</span></p></blockquote><div class='md-toc' mdtype='toc'><p class=\"md-toc-content\" role=\"list\"><span role=\"listitem\" class=\"md-toc-item md-toc-h1\" data-ref=\"n7\"><a class=\"md-toc-inner\" href=\"#何为dm盒子\">何为dm盒子</a></span><span role=\"listitem\" class=\"md-toc-item md-toc-h1\" data-ref=\"n25\"><a class=\"md-toc-inner\" href=\"#如何使用\">如何使用</a></span><span role=\"listitem\" class=\"md-toc-item md-toc-h2\" data-ref=\"n26\"><a class=\"md-toc-inner\" href=\"#x5公钥和json公钥\">x5公钥和json公钥</a></span><span role=\"listitem\" class=\"md-toc-item md-toc-h2\" data-ref=\"n29\"><a class=\"md-toc-inner\" href=\"#通免公钥\">通免公钥</a></span><span role=\"listitem\" class=\"md-toc-item md-toc-h2\" data-ref=\"n41\"><a class=\"md-toc-inner\" href=\"#断插公钥\">断插公钥</a></span><span role=\"listitem\" class=\"md-toc-item md-toc-h2\" data-ref=\"n44\"><a class=\"md-toc-inner\" href=\"#聚合函数新版已移除\">聚合函数【新版已移除】</a></span><span role=\"listitem\" class=\"md-toc-item md-toc-h2\" data-ref=\"n50\"><a class=\"md-toc-inner\" href=\"#飞传新\">飞传【新】</a></span><span role=\"listitem\" class=\"md-toc-item md-toc-h2\" data-ref=\"n298\"><a class=\"md-toc-inner\" href=\"#刷新公钥文件\">刷新公钥文件</a></span><span role=\"listitem\" class=\"md-toc-item md-toc-h1\" data-ref=\"n56\"><a class=\"md-toc-inner\" href=\"#公钥本质\">公钥本质</a></span><span role=\"listitem\" class=\"md-toc-item md-toc-h1\" data-ref=\"n84\"><a class=\"md-toc-inner\" href=\"#小白科普\">小白科普</a></span><span role=\"listitem\" class=\"md-toc-item md-toc-h2\" data-ref=\"n85\"><a class=\"md-toc-inner\" href=\"#何谓解析\">何谓解析</a></span><span role=\"listitem\" class=\"md-toc-item md-toc-h2\" data-ref=\"n126\"><a class=\"md-toc-inner\" href=\"#解析从哪来\">解析从哪来</a></span><span role=\"listitem\" class=\"md-toc-item md-toc-h2\" data-ref=\"n166\"><a class=\"md-toc-inner\" href=\"#一份普接清单\">一份普接清单</a></span><span role=\"listitem\" class=\"md-toc-item md-toc-h2\" data-ref=\"n189\"><a class=\"md-toc-inner\" href=\"#何谓断插------魔断\">何谓断插——&gt;魔断</a></span><span role=\"listitem\" class=\"md-toc-item md-toc-h2\" data-ref=\"n192\"><a class=\"md-toc-inner\" href=\"#魔断的使用\">魔断的使用</a></span><span role=\"listitem\" class=\"md-toc-item md-toc-h2\" data-ref=\"n203\"><a class=\"md-toc-inner\" href=\"#何谓cms模板\">何谓CMS模板</a></span><span role=\"listitem\" class=\"md-toc-item md-toc-h2\" data-ref=\"n219\"><a class=\"md-toc-inner\" href=\"#何谓断插类小程序\">何谓断插类小程序</a></span><span role=\"listitem\" class=\"md-toc-item md-toc-h2\" data-ref=\"n222\"><a class=\"md-toc-inner\" href=\"#何谓通免小程序\">何谓通免小程序</a></span><span role=\"listitem\" class=\"md-toc-item md-toc-h2\" data-ref=\"n224\"><a class=\"md-toc-inner\" href=\"#何谓免嗅小程序\">何谓免嗅小程序</a></span><span role=\"listitem\" class=\"md-toc-item md-toc-h1\" data-ref=\"n228\"><a class=\"md-toc-inner\" href=\"#隐藏操作\">隐藏操作</a></span><span role=\"listitem\" class=\"md-toc-item md-toc-h2\" data-ref=\"n229\"><a class=\"md-toc-inner\" href=\"#公钥与私钥\">公钥与私钥</a></span><span role=\"listitem\" class=\"md-toc-item md-toc-h2\" data-ref=\"n233\"><a class=\"md-toc-inner\" href=\"#飞瓜弹幕库\">飞瓜弹幕库</a></span><span role=\"listitem\" class=\"md-toc-item md-toc-h1\" data-ref=\"n258\"><a class=\"md-toc-inner\" href=\"#注意事项\">注意事项</a></span></p></div><p>&nbsp;</p><p>&nbsp;</p><h1 id='何为dm盒子'><span>何为dm盒子</span></h1><ul><li><p><span>dm盒子，又名弹幕盒子，内部封装了弹幕函数。</span></p></li><li><p><span>dm盒子只是一个收纳dm数据的盒子，不提供在线播放和地址采集功能。</span></p></li><li><p><span>dm盒子提供</span><code>公钥</code><span>可以让解析本身拥有从dm盒子获取数据的能力</span></p><ul><li><span>令所有断插类的小程序都能畅享弹幕——&gt;不再局限于个别的小程序</span></li><li><span>公钥对x5嗅探的普通接口和json接口都支持——&gt;解决优质x5无法使用问题</span></li></ul></li><li><p><span>dm盒子可以供外部小程序简单调用</span></p></li><li><p><span>dm盒子可以支持获取弹幕文件并以xml格式分享——方便在其他设备上支持加载弹幕的播放器上加载播放，例如“弹弹Play”</span></p></li></ul><p><span>如上所述，</span><strong><span>dm盒子打破了小程序之间的壁垒，让弹幕能在各个小程序自由流动</span></strong><span>，如此一来，弹幕功能也就不显得只是一个装饰性的功能了。推荐配合使用的断插类小程序有新番、搜狗Q、cms小程序等等。至于如何获取小程序，看这里：(部分规则由作者限时分享，不可强求~)</span></p><p><span>点击链接查看QQ频道帖子【小白初入门-新手入门，如何获取小程序】：</span><a href='https://qun.qq.com/qqweb/qunpro/share?_wv=3&amp;_wwv=128&amp;appChannel=share&amp;inviteCode=1wBvs1&amp;appChannel=share&amp;contentID=TjUA&amp;businessType=2&amp;from=246610&amp;biz=ka&amp;shareSource=5' target='_blank' class='url'>https://qun.qq.com/qqweb/qunpro/share?_wv=3&_wwv=128&appChannel=share&inviteCode=1wBvs1&appChannel=share&contentID=TjUA&businessType=2&from=246610&biz=ka&shareSource=5</a></p><p>&nbsp;</p><h1 id='如何使用'><span>如何使用</span></h1><h2 id='x5公钥和json公钥'><span>x5公钥和json公钥</span></h2><p><span>点击生成x5公钥和json公钥，按格式填写，添加了公钥的解析口将会复制到剪切板，点击魔断配置然后添加即可使用</span></p><p><span>使用添加了公钥的解析口去解析视频无视规则（特别注意必须关闭新番的弹幕开关；不支持魔断多线路），都可以获取弹幕数据</span></p><h2 id='通免公钥'><span>通免公钥</span></h2><p><span>通免公钥是一个能调取dm盒子数据的嗅探模式的动态解析模板</span></p><p><span>只需要</span><strong><span>替换</span></strong><span>现有通免小程序的动态解析的lazy即可。举个例子例如给1920通免小程序替换lazy：</span></p><p><img src=\"https://i0.hdslb.com/bfs/album/fa98f2386b7f7c73df0fc61d0ef0d90f240fed2f.png\" referrerpolicy=\"no-referrer\" alt=\"image-20220622235139668\"></p><p><span>成品小程序如下：</span></p><pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\" spellcheck=\"false\" lang=\"text\"><div class=\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap\" lang=\"text\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 10.4px; left: 8px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><span><span>​</span>x</span></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">https://cmd.im/c465</span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">小程序：1920pki</span></pre></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 74px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 74px;\"></div></div></div></pre><p><span>但是这个动态解析模板如果套在url加密的通免小程序那么将无法匹配到弹幕数据，例如影视工厂，如下图所示</span></p><p><img src=\"https://i0.hdslb.com/bfs/album/3338d8ce8a67e700bff0bde82579df37cdcc7d3f.png\" referrerpolicy=\"no-referrer\" alt=\"image-20220625091909591\"></p><p><span>但动态解析模板依旧可用，依旧会按照弹幕格式拼接链接返回预留的弹幕接口方便自己手动添加弹幕数据（请阅读隐藏操作-飞瓜弹幕库部分），非常适合优质切片路线的通免小程序，那么直接套就是了（如果不懂什么是切片，请阅读小白科普部分）。</span></p><p><mark><span>Tip：通免公钥套用的是通用匹配模板，对于需要大量请求参数比如UA、referer、cookie等的少部分视频嗅探出来的链接无法正常播放。香免暂时搞不定，先用匹配顶着。</span></mark><span>体现在上方小程序的就是芒果线路几乎不可播放，但并不是套这个动态解析芒果线路就无法播放，只是上方小程序的芒果线路所用解析，通用匹配无法嗅探得到可播放链接。像下方小程序就可以（比较不错了）：</span></p><pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\" spellcheck=\"false\" lang=\"text\"><div class=\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap\" lang=\"text\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 10.4px; left: 8px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><pre><span>xxxxxxxxxx</span></pre></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">https://cmd.im/6fhk</span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span cm-text=\"\" cm-zwsp=\"\">\n</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">小程序：ABmoviedmPKI</span></pre></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 74px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 74px;\"></div></div></div></pre><p>&nbsp;</p><h2 id='断插公钥'><span>断插公钥</span></h2><p><span>断插公钥是调用断插模式的动态解析模板。</span><mark><span>必须搭配x5公钥或者json公钥套壳的解析口使用才能获取弹幕数据否则就和普通的断插二级差不多，因为如果直接设置断插附加弹幕的模式那么就会和添加了公钥的解析口发生数据冲突，不如直接给接口添加公钥支持，何必让断插动态解析单独实现</span></mark><span>。与通免公钥同理，url加密的通免小程序那么将无法匹配到弹幕数据。此外断插公钥</span><strong><span>只有官方线路才会走断插</span></strong><span>，其余切片和直链线路都是嗅探。</span></p><p>&nbsp;</p><h2 id='聚合函数新版已移除'><span>聚合函数【新版已移除】</span></h2><p><span>json聚合函数，可以达到魔断多线路效果。因为和魔断多线路冲突，添加这个模块便捷生成聚合函数【和魔断一样只支持json】</span></p><p><span>只要按格式输入就可以了，逗号是中文的逗号，#也是中文的（虽然貌似没有区别）【注意：和json公钥同理，聚合函数生成后需要自行修改特殊json的取出url方式，详见公钥本质】</span></p><p><span>输入完后点确定生成的聚合函数会复制到剪贴板，再点击魔断配置快捷跳转粘贴在输入框点击保存即可添加添加聚合函数解析配置。</span></p><p><img src=\"https://i0.hdslb.com/bfs/album/bb5756c70dd143a7e9622dc40dd0517f3c6c9fb4.png\" referrerpolicy=\"no-referrer\" alt=\"image-20220625014919383\"></p><p>&nbsp;</p><h2 id='飞传新'><span>飞传【新】</span></h2><p><span>输入官网地址，即可获取弹幕文件并转换为xml格式弹幕文件快捷分享到其它设备支持加载弹幕的播放器进行播放。</span></p><p><span>官网地址建议不要携带后面的参数：</span></p><p><span>例如这样一个官网链接：</span><a href='https://www.iqiyi.com/v_1ynlpqbaip0.html?vfrm=pcw_home&amp;vfrmblk=B&amp;vfrmrst=fcs_0_p11' target='_blank' class='url'>https://www.iqiyi.com/v_1ynlpqbaip0.html?vfrm=pcw_home&vfrmblk=B&vfrmrst=fcs_0_p11</a></p><p><span>你应该输入的是：</span><a href='https://www.iqiyi.com/v_1ynlpqbaip0.html' target='_blank' class='url'>https://www.iqiyi.com/v_1ynlpqbaip0.html</a></p><p><span>推荐使用</span><strong><span>弹弹Play播放器</span></strong><span>，有着完善的弹幕过滤功能，如下：</span></p><p><span>重要的参数设置示例，</span></p><p><img src=\"https://i0.hdslb.com/bfs/album/5bc8fee999ae2319c537e2b67fe183907e02f0bc.png\" referrerpolicy=\"no-referrer\"></p><p><img src=\"https://i0.hdslb.com/bfs/album/8c6934ec17bef01ccd3b106ed1cae09fdf11e511.png\" referrerpolicy=\"no-referrer\"></p><p><span>因为获取到的弹幕数量非常多，因此这个设置非常必要！</span></p><blockquote><p><span>最新版的弹弹Play支持串流播放，所以推荐阿里云盘小白羊保存视频到网盘并设置弹弹Play为默认第三方播放器，那么就可以不需要下载视频到本地，而直接网盘播放并加载弹幕</span></p><p><span>【附：弹弹Play默认支持一些动漫站、腾讯、奇异、bili和bili漫游弹幕，其中腾讯和奇异需要手动输入网址，哔哩可以直接搜索】</span></p></blockquote><h2 id='刷新公钥文件'><span>刷新公钥文件</span></h2><p><span>公钥的远程代码基于远程，如果发生变动可能影响使用，这时候可以使用点击dm盒子的首页欢迎图案即可清除缓存</span></p><p><img src=\"https://i0.hdslb.com/bfs/album/bc76b862fcc2d9646fca87e972f4f0f54ff9599b.png\" referrerpolicy=\"no-referrer\" alt=\"image-20220625011929626\"></p><p><span>其实不用理会，因为一般情况下不会动远程文件，而且很大可能未来很长很长一段时间都不会有更新，，</span></p><p><span>如若清除缓存后发现通免小程序没有刷新，可以前往使用了通免公钥的相应小程序长按小程序标题，然后在弹框中选择清除缓存即可。</span></p><p><img src=\"https://i0.hdslb.com/bfs/album/219314f73547769adc531dfd3956b22b8a6b6443.png\" referrerpolicy=\"no-referrer\" alt=\"image-20220625233444063\"></p><h1 id='公钥本质'><span>公钥本质</span></h1><p><span>其实所谓公钥就是专门为解析调用dm盒子内弹幕数据而写的一个函数，分为x5和json函数，那么知道了公钥本质之后完全不需要借助dm盒子自带的生成公钥模块，可以自己填充接口或许会更便捷。</span><mark><span>只需要记住一点，dm盒子只是一个收纳dm数据的盒子！</span></mark><span>公钥壳子如下：</span></p><ul><li><p><span>x5公钥</span></p><pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\" spellcheck=\"false\" lang=\"js\"><div class=\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap\" lang=\"js\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 10.4px; left: 8px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">修改★名称★</span></span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">function</span> (<span class=\"cm-def\">vipUrl</span>) {</span></pre><div class=\"\" style=\"position: relative;\"><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">try</span> {</span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">var</span> <span class=\"cm-def\">originUrl</span> <span class=\"cm-operator\">=</span> <span class=\"cm-string\">'解析接口'</span><span class=\"cm-operator\">+</span><span class=\"cm-variable-2\">vipUrl</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">rc</span>(<span class=\"cm-string\">\"https://chenying2.coding.net/p/hiker/d/jsWithdm/git/raw/master/x5PKI.js\"</span>, <span class=\"cm-number\">24</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">return</span> <span class=\"cm-variable\">getFor</span>(<span class=\"cm-variable-2\">vipUrl</span>,<span class=\"cm-variable-2\">originUrl</span>);</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  }</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">catch</span> (<span class=\"cm-def\">e</span>) {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">return</span> <span class=\"cm-string\">\"\"</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  }</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 273px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 273px;\"></div></div></div></pre><p>&nbsp;</p></li><li><p><span>普适性json公钥</span></p><pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\" spellcheck=\"false\" lang=\"js\"><div class=\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap\" lang=\"js\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 10.4px; left: 8px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><pre>x</pre></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">修改★名称★</span></span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">function</span> (<span class=\"cm-def\">vipUrl</span>) {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">try</span> {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> <span class=\"cm-keyword\">var</span> <span class=\"cm-def\">bfurl</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">JSON</span>.<span class=\"cm-property\">parse</span>(<span class=\"cm-variable\">request</span>(<span class=\"cm-string\">\"解析接口\"</span> <span class=\"cm-operator\">+</span> <span class=\"cm-variable-2\">vipUrl</span>, {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-property\">timeout</span>: <span class=\"cm-number\">5000</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp;  })).<span class=\"cm-property\">url</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-variable\">rc</span>(<span class=\"cm-string\">\"https://chenying2.coding.net/p/hiker/d/jsWithdm/git/raw/master/jsonPKI.js\"</span>, <span class=\"cm-number\">24</span>);</span></pre><div class=\"\" style=\"position: relative;\"><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">return</span> <span class=\"cm-variable\">getFor</span>(<span class=\"cm-variable-2\">vipUrl</span>,<span class=\"cm-variable-2\">bfurl</span>)<span class=\"cm-operator\">+</span><span class=\"cm-string\">\";{User-Agent@''&amp;&amp;Referer@''}\"</span>;</span></pre></div><div class=\"\" style=\"position: relative;\"><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  }</span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-keyword\">catch</span> (<span class=\"cm-def\">e</span>) {</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-keyword\">return</span> <span class=\"cm-string\">\"\"</span>;</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  }</span></pre><div class=\"\" style=\"position: relative;\"><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre></div></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 322px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 322px;\"></div></div></div></pre><p><span>普适性json公钥针对大部分的json解析，json解析返回的数据大部分都可以通过这个公钥取出播放地址,具体情况具体分析。但不管如何，只要记住修改bfurl变量即可</span></p><p><img src=\"https://i0.hdslb.com/bfs/album/13a46e28ed5729bd2bedc0e07076416859c5ed35.png\" referrerpolicy=\"no-referrer\" alt=\"image-20220622085914219\"></p><p><span>举个比较综合的例子，如下</span></p><pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\" spellcheck=\"false\" lang=\"js\"><div class=\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap\" lang=\"js\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 10.4px; left: 8px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><pre><span>xxxxxxxxxx</span></pre></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">var</span> <span class=\"cm-def\">bfurl</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">JSON</span>.<span class=\"cm-property\">parse</span>(<span class=\"cm-variable\">request</span>(<span class=\"cm-string\">\"解析口\"</span> <span class=\"cm-operator\">+</span> <span class=\"cm-variable\">vipUrl</span>, {<span class=\"cm-property\">headers</span>: {<span class=\"cm-string cm-property\">\"User-Agent\"</span>: <span class=\"cm-string\">\"例如，Dart/2.14 (dart:io)\"</span>,<span class=\"cm-string cm-property\">\"referer\"</span>: <span class=\"cm-string\">\"大概率是网站域名\"</span>}})).<span class=\"cm-property\">data</span>.<span class=\"cm-property\">url</span>;</span></pre></div></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 50px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 50px;\"></div></div></div></pre><p><span>header是携带的访问来源信息</span></p><ul><li><span>User-Agent：UA，简单的说就是让解析系统判断你是从哪个浏览器访问的网站页面，更多请自行百度</span></li><li><span>除了UA，还有Referer参数：即来源，简单的说就是让解析系统判断你是从哪里访问的网页，比如是不是从自家网站进行的访问和数据请求</span></li></ul><p><code>JSON.parse(request(&quot;解析口&quot; + vipUrl, {headers: {&quot;User-Agent&quot;: &quot;例如，Dart/2.14 (dart:io)&quot;,&quot;referer&quot;: &quot;大概率是网站域名&quot;}}))</code><span>这一段字符串最终会解析得到json字符串，假设获得的是一段形如下方格式的json字符串：</span></p><pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\" spellcheck=\"false\" lang=\"json\"><div class=\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap\" lang=\"json\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 10.4px; left: 8px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><pre><span>xxxxxxxxxx</span></pre></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\" style=\"\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">{</span></pre></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-string cm-property\">'code'</span>:<span class=\"cm-number\">200</span>,</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-string cm-property\">'data'</span>:{</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-string cm-property\">'url'</span>:<span class=\"cm-string\">'返回的播放链接，也是我们要取出来的播放链接'</span>,</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"cm-string cm-property\">'msg'</span>:<span class=\"cm-string\">'sucess，解析商或解析作者或解析购买者预先设定的消息'</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp;  <span class=\"cm-tab\" role=\"presentation\" cm-text=\"\t\">    </span>},</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-string cm-property\">'type'</span>:<span class=\"cm-string\">'视频的格式类型，例如m3u8、mp4、flv等'</span>,</span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"> &nbsp; &nbsp;<span class=\"cm-string cm-property\">'player'</span>:<span class=\"cm-string\">'可以理解为推荐使用的播放器'</span></span></pre><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\">}</span></pre></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 223px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 223px;\"></div></div></div></pre><p><span>这一段返回的数据就是</span></p><pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\" spellcheck=\"false\" lang=\"js\"><div class=\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap\" lang=\"js\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 10.4px; left: 8px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><pre><span>xxxxxxxxxx</span></pre></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-keyword\">var</span> <span class=\"cm-def\">bfurl</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">JSON</span>.<span class=\"cm-property\">parse</span>(<span class=\"cm-variable\">request</span>(<span class=\"cm-string\">\"解析口\"</span> <span class=\"cm-operator\">+</span> <span class=\"cm-variable\">vipUrl</span>, {<span class=\"cm-property\">headers</span>: {<span class=\"cm-string cm-property\">\"User-Agent\"</span>: <span class=\"cm-string\">\"例如，Dart/2.14 (dart:io)\"</span>,<span class=\"cm-string cm-property\">\"referer\"</span>: <span class=\"cm-string\">\"大概率是网站域名\"</span>}}))</span></pre></div></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 50px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 50px;\"></div></div></div></pre><p><span>然后从上方这一段数据中取出data中的url，通过对象</span><strong><span>&#39;.&#39;</span></strong><span>的方式获取，如下</span></p><pre class=\"md-fences md-end-block ty-contain-cm modeLoaded\" spellcheck=\"false\" lang=\"js\"><div class=\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap\" lang=\"js\"><div style=\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 10.4px; left: 8px;\"><textarea autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" tabindex=\"0\" style=\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\"></textarea></div><div class=\"CodeMirror-scrollbar-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-gutter-filler\" cm-not-content=\"true\"></div><div class=\"CodeMirror-scroll\" tabindex=\"-1\"><div class=\"CodeMirror-sizer\" style=\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\"><div style=\"position: relative; top: 0px;\"><div class=\"CodeMirror-lines\" role=\"presentation\"><div role=\"presentation\" style=\"position: relative; outline: none;\"><div class=\"CodeMirror-measure\"><pre><span>xxxxxxxxxx</span></pre></div><div class=\"CodeMirror-measure\"></div><div style=\"position: relative; z-index: 1;\"></div><div class=\"CodeMirror-code\" role=\"presentation\"><div class=\"CodeMirror-activeline\" style=\"position: relative;\"><div class=\"CodeMirror-activeline-background CodeMirror-linebackground\"></div><div class=\"CodeMirror-gutter-background CodeMirror-activeline-gutter\" style=\"left: 0px; width: 0px;\"></div><pre class=\" CodeMirror-line \" role=\"presentation\"><span role=\"presentation\" style=\"padding-right: 0.1px;\"><span class=\"cm-variable\">url</span><span class=\"cm-operator\">=</span><span class=\"cm-variable\">bfurl</span>.<span class=\"cm-property\">data</span>.<span class=\"cm-property\">url</span></span></pre></div></div></div></div></div></div><div style=\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 25px;\"></div><div class=\"CodeMirror-gutters\" style=\"display: none; height: 25px;\"></div></div></div></pre><p><span>那么如果将上述两步连起来写，就是上面的综合例子了。</span></p><p>&nbsp;</p></li></ul><h1 id='小白科普'><span>小白科普</span></h1><h2 id='何谓解析'><span>何谓解析</span></h2><ul><li><p><span>解析，简单的说就是解析视频的网页地址并返回一个可播放的视频链接</span></p></li><li><p><span>那负责解析的接口就是解析接口,解析接口大都长这样：</span><strong><span>https://域名/各种路径字符/一长串乱七八糟的字符（Key）/?url=</span></strong></p><ul><li><span>最明显的特点就是以</span><strong><span>?url=结束</span></strong></li><li><strong><span>?url=</span></strong><span>后面接的就是视频的网页地址</span></li></ul><p><span>举个例子：在浏览器的地址栏输入解析接口+视频地址后，回车或刷新，浏览器就会播放视频，如下图所示</span></p><p><img src=\"https://i0.hdslb.com/bfs/album/8dd6e57249226f2b4dc2bbf37c9a91b6e7ff45aa.png\" referrerpolicy=\"no-referrer\" alt=\"image-20220622014622874\"></p></li><li><p><span>那么原理是什么？根据原理的不同，解析也大致可以分为：</span></p><ul><li><p><span>算法类：通过解析系统内置的vip账号从网站上取出地址</span></p></li><li><p><span>切片类：</span></p><ul><li><span>从算法类解析出的结果中缓存并自动上传到解析系统</span></li><li><span>根据云盘或磁力等多种途径途径获取到资源并上传到解析系统</span></li></ul></li><li><p><span>谈不上谁优谁劣，具体情况具体分析</span></p></li></ul></li><li><p><span>其实我们不关心原理的话，解析口应该分为以下两类：</span></p><ul><li><span>普通解析口：如上方图例就是一个普通解析口，也就是说解析口后面拼接地址后回车刷新就会自动返回视频数据经由浏览器嗅探出结果并开始播放（自带播放器所以可以播放）。</span></li><li><span>json解析口：json接口按上方格式拼接好后回车刷新返回的是一个json字符串，不可以直接播放，必须从中提取出url然后让播放器加载才能播放（json解析口不提供播放器，至于如何取出url可以参照下文的公钥本质部分）。如下图所示返回的就是json字符串（可以自行百度了解什么是json格式）</span><img src=\"https://i0.hdslb.com/bfs/album/93113d6c23a9912b475d27850eb2f68512fc8a9d.png\" referrerpolicy=\"no-referrer\" alt=\"image-20220622085043523\"><span>一般来说影视app使用的都是json解析口，有自建的，有从解析商买的，也有从解析商那里偷来的。因为json返回的数据是明文数据，相应的解析速度可能会更快，具体情况具体分析。</span></li></ul></li><li><p><span>从解析片源的角度来说，可以为两类：</span></p><ul><li><span>官解解析：顾名思义，就是给一个官方网址，返回一个可播放的地址</span></li><li><span>切片解析：解析商自行对视频资源进行切片上传到图床等云端，生成特定的字符串秘钥，只有拥有相应秘钥的解析口才能解析出视频数据，一般来说海外影片都是切片资源</span></li></ul></li></ul><h2 id='解析从哪来'><span>解析从哪来</span></h2><p><span>解析从哪来，无非就以下几种</span></p><ul><li><p><span>从解析商处购买</span></p><ul><li><span>很多影视网站都也是使用的解析为用户提供视频播放服务，而影视网站他们所用的解析大多就来自专门做解析系统的站点</span></li><li><span>当然部分部分影视网站和app是自身独立切片存储不依赖解析，比如小苹果影视、飞瓜or火龙果影视、酷云等app以及哔嘀等影视网站</span></li><li><span>截至目前优质的解析商有扶风、左岸、江湖、飞云等等，|不指路可以自行百度搜索（说一个搜索引擎的小技巧，如果百度啥也搜不到可以换用其他的搜索引擎搜索，同时学会利用时间检索去获取最新的搜索数据，那么基本上可以搜到你想要的东西）</span></li></ul></li><li><p><span>解析商开放的普通接口</span></p><ul><li><span>部分大型的解析商都是有开放免费的优质普通解析口放出。一般来说就官解而言普通接口与json接口相比较基本上就是响应速度和资源是否可见的区别。开放的接口一般不支持切片，具体情况具体分析。</span></li><li><span>不是说开放的普通接口就不好，就比json解析口差，具体问题具体分析。</span><strong><span>不然就不会有x5公钥了</span></strong></li></ul></li><li><p><span>网上网友分享的解析</span></p><ul><li><span>说白了网友分享的解析基本上最终都是来自解析商，当然也有可能是自建的解析系统，是的解析系统可以自建但绝不是一般人考虑的</span></li><li><span>拿网上分享的解析可以从哪里找呢，举个例子比如脚本网站上诸如某某vip视频解析脚本其实都是内置的解析，当然一般来说这些脚本上的解析都是一些比较普通的解析，当然也有可能出现一些优质的解析</span></li><li><span>其实有一个网站帖子就专门收集一些解析，比如：</span><a href='https://www.yqkf100.cn/1725/.html'><span>站长必备！福利！影视vip解析接口汇总！不定期更新-益思俱乐部 (yqkf100.cn)</span></a><span>其实道长仓库里就有一个小程序叫做魔断解析爬虫（数据来源就是这个网址），可以自行在道长仓库搜索并导入</span></li><li><span>一些影视Q群和影视频道可能会出现有人分享解析，而这些解析往往相对算得上比较可用的解析</span></li></ul></li><li><p><span>自行抓取</span></p><ul><li><span>其实解析最终都是来自解析商，很多影视网站和影视app都是使用的解析</span></li><li><span>那么就可以对网站审查网络数据或者抓取app数据从中发现解析口&lt;——&gt;具体的自行百度或从其他的地方了解</span></li><li><span>当然现在的影视网站和影视app大多都是有防盗机制的，所以可能遇到无法抓包的问题</span></li></ul></li></ul><p>&nbsp;</p><h2 id='一份普接清单'><span>一份普接清单</span></h2><p><span>不保证可用性，不保证清晰度，不保证响应速度、不保证...</span></p><p><span>只能保证它们都活了很久..都是老牌子..</span></p><ol start='' ><li><a href='https://jx.m3u8.tv/jiexi/?url=' target='_blank' class='url'>https://jx.m3u8.tv/jiexi/?url=</a></li><li><a href='https://www.8090.la/8090/?url=' target='_blank' class='url'>https://www.8090.la/8090/?url=</a></li><li><a href='https://jx.m3u8.pw/?url=' target='_blank' class='url'>https://jx.m3u8.pw/?url=</a></li><li><a href='https://jx.mmkv.cn/json.php?url=' target='_blank' class='url'>https://jx.mmkv.cn/json.php?url=</a></li></ol><hr /><p><span>下方看资源，上方都还行</span></p><ol start='' ><li><a href='https://api.okjx.cc:3389/jx.php?url=' target='_blank' class='url'>https://api.okjx.cc:3389/jx.php?url=</a></li><li><a href='https://jx.parwix.com:4433/player/?url=' target='_blank' class='url'>https://jx.parwix.com:4433/player/?url=</a></li></ol><p><span>只有一句话，那就是接口在精不在多，很多解析口都是相互套娃，资源来源都是同一个，所以很有可能一个解析解析不出来，其他的解析也解析不出来，因为它们的根源很可能都是同一个。</span></p><p><strong><span>这份清单仅供参考和测试，都只是x5普通接口仅仅为方便了解什么是解析而已。</span></strong></p><p>&nbsp;</p><p>&nbsp;</p><h2 id='何谓断插------魔断'><span>何谓断插——&gt;魔断</span></h2><p><span>了解完解析究竟是一个什么东西之后，那么断插就很好理解了，</span><code>断插是一个工具</code><span>，可以帮你配置好解析，配置好后只要点击封装好的视频影片的官网网址那么就会自动拼接格式并提交请求最后调用播放器播放，不用自己在浏览器拼接然后再刷新从而解放双手，所以断插只是一个</span><code>工具</code><span>，不提供任何内容</span></p><p><span>那魔断又是什么，魔断也只是一个</span><code>工具</code><span>不提供任何内容，可以理解为断插的加强版，能更好的解放双手。魔断又名MyFiled，仓库自取。</span></p><h2 id='魔断的使用'><span>魔断的使用</span></h2><p><span>知道了什么是解析了吧，也知道了什么是魔断了吧？那么如何使用魔断应该是见名知意了，太过详细的不讲，挑一些重点来讲一下入门。首先第一步选择小白一键拉取，无论是真小白还是有有资源认识解析的朋友都推荐第一步直接拉取，然后自己再手动删除和添加自己的解析配置，因为一键拉取会帮你直接把环境都配置好，包括主题等而不用去过多的管这些闲杂事项。</span></p><p><span>下面是一张路线指南图：</span></p><p><img src=\"https://i0.hdslb.com/bfs/album/643102a29b09ab331a46b5029324c8a71e6731a1.png\" referrerpolicy=\"no-referrer\" alt=\"魔断使用教程\"></p><p><span>其中魔断的多线路，初步了解魔断之后可以去熟悉一下，以下是官方解释</span></p><p><img src=\"https://i0.hdslb.com/bfs/album/8a030128998c535b06d26e296ddea93736599b1b.png\" referrerpolicy=\"no-referrer\" alt=\"image-20220622205753311\"></p><p><span>还有一点很重要的就是备份，如果我有很多解析，怕丢失，可以直接导出！也可以直接导入！（</span><strong><span>魔断主页的横条是可以滑动的</span></strong><span>），如图所示右滑可以看到，只要按格式来那么一般就没有问题。其实点击三角箭头可以弹窗直接选择，也可以发现里边还有批量操作（删除）的功能</span></p><p><img src=\"https://i0.hdslb.com/bfs/album/67667b669c5e469bba8f2c4409526ead9e346e85.png\" referrerpolicy=\"no-referrer\" alt=\"image-20220622213927012\"></p><p><span>在补充一点：在断插接口设置页面点击任意一个解析可以单独对其进行特定操作：</span></p><p><img src=\"https://i0.hdslb.com/bfs/album/48e4b30795ca735c796b636ca1b5ab0ebbdacf30.png\" referrerpolicy=\"no-referrer\" alt=\"image-20220622215236136\"></p><p><mark><span>注意的是：dm盒子的公钥和多线路是冲突的</span></mark><span>，剩下的自己摸索，讲到的基本都是核心没讲到的都不是很重要</span></p><h2 id='何谓cms模板'><span>何谓CMS模板</span></h2><p><span>CMS可以简单的理解为一种采集官网视频网址的自动化软件，并按照指定的格式封装存储好后可以通过给出的API接口去访问这些数据，而这类API接口可以称之为cms接口。因为解析是需要视频网址的，所以cms的作用就不言而喻。</span></p><p><span>回到cms模板，cms模板是道长的一个小程序，通过填写cms接口就可以生成cms小程序的一个小程序，也是一个</span><code>工具</code><span>不提供任何实质内容。</span></p><p><span>那cms接口从哪里获取？来源于cms采集资源网、来源于app抓包、网站抓包、一些解析也会放出采集（采集即cms）...</span></p><p><span>其实更直接的方法，可以从写好的cms小程序中提取出cms接口：</span></p><ol start='' ><li><p><span>长按小程序名字，弹窗点击编辑规则，找到小程序链接，即可获得cms接口</span></p><p><img src=\"https://i0.hdslb.com/bfs/album/449889da1c575498f71092328509d4e02b2c446a.png\" referrerpolicy=\"no-referrer\" alt=\"image-20220622094817380\"></p></li><li><p><span>如果你看不到小程序链接，那是因为没有开发者签名</span></p><p><span>——&gt;找到设置——&gt;选择开发手册与模式——&gt;选择开发者签名——&gt;自定义开发者昵称</span></p><p><span>那么就可以看到了</span></p></li></ol><p><span>下面是一个cms资源网合集的使用教程，里面都是cms小程序可以直接使用</span></p><p><span>点击链接查看QQ频道帖子【用心采集使用方法(非魔断版)】：</span><a href='https://qun.qq.com/qqweb/qunpro/share?_wv=3&amp;_wwv=128&amp;appChannel=share&amp;inviteCode=1wBvs1&amp;appChannel=share&amp;contentID=UgJW&amp;businessType=2&amp;from=246610&amp;biz=ka&amp;shareSource=5' target='_blank' class='url'>https://qun.qq.com/qqweb/qunpro/share?_wv=3&_wwv=128&appChannel=share&inviteCode=1wBvs1&appChannel=share&contentID=UgJW&businessType=2&from=246610&biz=ka&shareSource=5</a></p><p><span>与其寻找cms接口，不如直接使用已有的cms小程序，频道也会有大佬偶尔分享cms小程序</span></p><h2 id='何谓断插类小程序'><span>何谓断插类小程序</span></h2><p><span>顾名思义就是支持断插调用解析的小程序，像cms模板生成的cms小程序就是断插类的小程序</span></p><p><span>还有的大佬写好封装有断插调用方法的网站小程序或者app小程序</span></p><h2 id='何谓通免小程序'><span>何谓通免小程序</span></h2><p><span>通免小程序就是大佬写好的</span><strong><span>不需要断插解析</span></strong><span>的网站小程序或者app小程序，而是直接从源站嗅探获得视频播放链接，也就是说这是原滋原味的小程序，网站内容是啥，他就是啥。也是数量最多的小程序。</span></p><h2 id='何谓免嗅小程序'><span>何谓免嗅小程序</span></h2><p><span>免嗅小程序也是原滋原味的小程序，但相比通免小程序，它不需要从网站嗅探视频播放链接，而是通过解密代码直接获取视频播放链接的url然后直接播放，所以一般来说免嗅小程序会快于通免小程序响应资源的速度。</span></p><p>&nbsp;</p><p>&nbsp;</p><h1 id='隐藏操作'><span>隐藏操作</span></h1><h2 id='公钥与私钥'><span>公钥与私钥</span></h2><p><span>有公钥，那肯定有私钥了啦，不过没给出来罢了，我是不是很坏~</span></p><p><span>净瞎说，dm盒子代码清晰可见，有能力自己改一下公钥就可以得到私钥了~</span></p><p><span>至于原因嘛，那肯定是有原因的，私钥体验未必就比公钥要好，而且</span><mark><span>私钥不一定稳定</span></mark><span>——&gt;所以还是我自己来承受吧！</span></p><h2 id='飞瓜弹幕库'><span>飞瓜弹幕库</span></h2><p><span>公、私钥不重要啦，</span><strong><span>重要的是其实dm盒子内置了飞瓜弹幕库搜索引擎</span></strong><span>。</span></p><p><span>那如何使用呢？步骤如下：</span></p><ol start='' ><li><p><span>选择dm盒子作为搜索引擎，搜索需要获取弹幕数据的视频，这里以人世间为例</span></p><p><img src=\"https://i0.hdslb.com/bfs/album/6b3af93c4b06afd9aa9d74c8f5f7bfb428096be8.png\" referrerpolicy=\"no-referrer\" alt=\"image-20220621234822667\"></p></li><li><p><span>搜索到想要的视频结果后，再选择视频相应的集数进行播放——&gt;</span><mark><span>dm盒子只是一个数据收纳盒子，不提供在线视频播放、采集等功能</span></mark><span>——&gt;所以肯定是播放不了的啦——&gt;但是别忘记我们的目的是什么</span></p></li><li><p><span>进入视频播放页面后就可以获取飞瓜弹幕数据了，操作如下：</span></p><p><img src=\"https://i0.hdslb.com/bfs/album/cc4203f7225c409c8ef370cce650de0553a7074e.png\" referrerpolicy=\"no-referrer\" alt=\"image-20220622000126124\"></p><p><span>复制的弹幕地址就是我们要获取的弹幕数据啦</span></p><p><span>接下来就是找一个支持断插的如cms小程序、或者套有dm盒子二级动态解析模板的通免or免嗅小程序来播放相应的影视剧集</span></p><p><span>到了这一步其实也能猜到了。下面做展示：</span></p><p><img src=\"https://i0.hdslb.com/bfs/album/9ff8eba0c6daacaa4174cdd2ae2d9d71a677110b.png\" referrerpolicy=\"no-referrer\" alt=\"image-20220622001122030\"></p><p><span>填入弹幕地址之后，那么就会有弹幕数据加载出来了（如图）</span></p><p><img src=\"https://i0.hdslb.com/bfs/album/eb42d30cb4c4e030afd57e8ab9f0c351163e7adc.png\" referrerpolicy=\"no-referrer\" alt=\"image-20220622001517705\"></p><p>&nbsp;</p></li></ol><p><span>那么问题来了啥时候用飞瓜引擎获取弹幕呢，我的建议是当官方弹幕或者其他的第三方弹幕无法获取到或者不能满足的时候使用</span></p><p><span>其实</span><mark><span>更值得一提的应该是，飞瓜弹幕不仅仅只是拥有国内视频的弹幕数据，他还有外片和各种类型片源的弹幕</span></mark><span>，这个时候如果你需要弹幕，那么飞瓜搜索引擎就有大用了！</span></p><p><span>补充一点：弹幕地址是可以移植到任意小程序视频播放地址的，那么自然是</span><strong><span>不需要解析也不需要断插也不需要dm盒子动态解析也能加载弹幕</span></strong><span>了当然有些小程序加载的视频地址是有</span><strong><span>时效性</span></strong><span>的，所以可能会出现播放不了的情况——&gt;移植的时候需要注意下弹幕的格式，如下：（小白尤其注意花括号&#39;{}&#39;的存在）</span><img src=\"https://i0.hdslb.com/bfs/album/cd84445879ca6ba7f03936288b99c9d27c2f2803.png\" referrerpolicy=\"no-referrer\" alt=\"image-20220622002905582\"></p><p><span>可能你发现了上方截图里是有</span><strong><span>预留弹幕接口和dm:&#39;&#39;</span></strong><span>写好的格式存在的，那其实就是因为这个小程序套了dm盒子动态解析或者是断插类型的小程序，可以方便给没有弹幕数据的视频快速添加弹幕而不用自己修改格式。</span></p><p>&nbsp;</p><p>&nbsp;</p><h1 id='注意事项'><span>注意事项</span></h1><ol start='' ><li><p><del><span>公钥没法和魔断并发多线路一起使用。但是针对公钥，dm盒子增加了一个自</span><strong><span>动拼接多线路接口的功能模块</span></strong><span>——&gt;方便将常用的优质接口自动拼接成一个返回多线路的函数接口。事实上这已经足矣，将手头用的多的，好用的json结合聚合在一起就可以了。</span></del></p><p><del><span>Tip：海阔多线路的实现目前都是</span><strong><span>并发</span></strong><span>的方式包括魔断多线路（很费解析），也就是说点击解析一个视频的时候必须先把所有解析都尝试解析获取可播放链接，最后将所有得到的结果返回，组成多线路格式。但是部分解析部分视频资源的链接解析出来后是有时效性的，所以可能链接失效。所以正确的食用方式是多线路出来后如果当前线路能播画质满足就当前线路直接看，如若解析失败马上切换，不推荐看剧中途切换因为大概率链接已经失效（魔断添加了多路缓存，但是实际体验感觉效果并不是很理想，dm盒子的聚合函数也没有提供多线路缓存）</span></del><mark><span>该功能已在新版移除，并替换为“飞传”</span></mark></p></li><li><p><span>带有弹幕数据的解析口解析新番视频时会和新番自带的弹幕数据冲突所以需要关闭新番的弹幕开关</span></p></li><li><p><span>如若使用解析测试、魔断解析测试出现数据错乱的问题可以不用理会，这是正常现象（虽然我并不是很清楚具体原因...），但这并不妨碍你在新番、搜狗Q、cms小程序等断插类小程序中正常使用</span></p></li><li><p><span>逻辑都是先获取弹幕再加载视频（Tencent路线的弹幕数据存储到本地耗时可能相对较长）</span></p></li><li><p><span>普适性json公钥只适合大部分json生成公钥，详细的使用方法参见公钥本质部分</span></p></li><li><p><span>嗅探动态解析模板和断插动态解析模板只适用于url未经加密的通免小程序</span></p><p><del><span>通免模板对于有些小程序的部分解析线路支持并不是很好，有嗅探失败的可能</span></del></p><p><del><mark><span>通免公钥已经替换成了香免强力x5嗅探，香免能播的都能播，不能播的基本上都是网站本身无法播放</span></mark></del></p><p><strong><span>网站和解析的防嗅探能力也在增强，不保证一直更新所以可能会出现嗅探失败的几率</span></strong></p></li><li><p><mark><span>不要更改dm盒子小程序的名字</span></mark><span>，否则其他二级动态解析依赖dm盒子的通免小程序和断插类将无法获取数据并报错</span></p></li></ol><div align=\"right\">\n    <h6>\n        侠名\n    </h6>\n    <h6>初版2022/6/25</h6>\n    <h6>第二版-修订2022/7/12</h6>\n</div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p></div></div>\n</body>\n</html>"},{"col_type":"movie_3","name":"文档展示","path":"doc","rule":"js:\nd = [];\ndocType = MY_PARAMS.docType;\nif (docType == 'help') {\n    // path = 'hiker://files/cache/Instruction_Book.html';\n    d.push({\n        col_type: 'x5_webview_single',\n        url: 'https://docs.qq.com/doc/DU25zWmZSSmhLd1RH',\n        // url: getPath(path),\n        desc: 'float&&100%',\n        col_type: 'x5_webview_single', extra: { canBack: true }\n    });\n} else {\n    d.push({\n        title: JSON.parse(request('hiker://page/API.html')).rule,\n        col_type: 'rich_text'\n    });\n}\nsetResult(d);\n"},{"col_type":"movie_3","name":"API文档","path":"API.html","rule":"<p>““——↓使用文档↓——””</p>\n基本上参数是规范的官方地址链接，根据dm盒子中的参数设置来执行方法，完成后返回成功写入到本地的弹幕文件地址，若获取弹幕失败会返回false。\n可以在全局范围通过\n<pre><code>getVar('dm_share')</code></pre> 获取成功写入到本地的弹幕文件地址\n<h2 id=\"函数路由调用\">路由函数调用</h2>\n面向用户的路由函数，只需要传url就能获得弹幕地址\n<pre><code>dm = $.require('hiker://page/dmFun?rule=dm盒子').dmRoute(官链);</code></pre>\n<h2 id=\"小程序通免调用方法\">小程序通免调用方法</h2>\n封装好的通免函数，对应video、仓库通免、经典的香佬嗅探，只是在这些通免函数的基础上在返回地址加上了danmmu选项。如若嗅探线路能自动探查到官方链接那么就会调用路由方法获取弹幕并携带；如若探查不到官链那么携带的弹幕地址就是通过 < pre > <code>getVar('dm_share')</code></pre > 获取的上次成功解析得到的弹幕地址。像云盘君dm等规则自动挂载弹幕的原理就是如此，那么你会改规则了嘛，。\n<pre><code>lazy = $('').lazyRule(() => {\n    return $.require('hiker://page/lazyToX5?rule=dm盒子').videoX5();\n})\nlazy = $('').lazyRule(() => {\n    return $.require('hiker://page/lazyToX5?rule=dm盒子').drX5();\n})\nlazy = $('').lazyRule(() => {\n    return $.require('hiker://page/lazyToX5?rule=dm盒子').classicalX5();\n})\n</code></pre>\n<h2 id=\"断插函数调用\">断插函数调用</h2>\n<h3 id=\"借助配置助手\">借助配置助手</h3>\n参数皆为数组，将会和配置助手里边保存启用的解析拼接返回多线路，弹幕的开关与否由配置助手管理。魔断函数可以调用该函数达到免嗅首发的效果，既使用了免嗅函数又能加上配置助手中一堆解析不浪费作为保底。\n<pre><code>return $.require(\"hiker://page/mulParse?rule=配置助手\").mulParse(['vipUrl'], ['bfurl'], ['解析名'], [{ \"User-Agent\": \"Mozilla/5.0\" }]);\n</code></pre>\n<h3 id=\"断插-魔断\">断插-魔断</h3>\n专门写给魔断用的，相比前面提及的mulParse函数，下面的函数只是单纯在返回链接中加上danmu参数而已。对应道长通免dm、香佬通免dm以及供JSON解析使用的Jsondm（参数为官链和执行逻辑后解析出来的播放链接）\n<pre><code>return $.require('hiker://page/lazyToJiexi?rule=dm盒子').drX5('标准官链', '播放url');\nreturn $.require('hiker://page/lazyToJiexi?rule=dm盒子').classicalX5('标准官链', '播放url');\nreturn $.require('hiker://page/lazyToJiexi?rule=dm盒子').Jsondm('标准官链', '播放url');\n</code></pre>\n<h2 id=\"获取指定弹幕源的弹幕文件\">获取指定弹幕源的弹幕文件</h2>\n返回值是弹幕文件的本地路径, 参数是标准的官方链接。如若失败则返回false\n<pre><code>dm = $.require('hiker://page/dmFun?rule=dm盒子').hlsdm(官链);\ndm = $.require('hiker://page/dmFun?rule=dm盒子').zuoandm(官链);\ndm = $.require('hiker://page/dmFun?rule=dm盒子').gonggongdm(官链);\ndm = $.require('hiker://page/dmFun?rule=dm盒子').shayvdm(官链);\ndm = $.require('hiker://page/dmFun?rule=dm盒子').MGdm(官链);\ndm = $.require('hiker://page/dmFun?rule=dm盒子').YKdm(官链);\ndm = $.require('hiker://page/dmFun?rule=dm盒子').QYdm(官链);\ndm = $.require('hiker://page/dmFun?rule=dm盒子').TXdm(官链);\ndm = $.require('hiker://page/dmFun?rule=dm盒子').bilidm(官链);\n</code></pre>\n"},{"col_type":"movie_3","name":"弹幕函数汇总","path":"dmFun","rule":"// 入口函数——路由\n$.exports.dmRoute = function (vipUrl) {\n    dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\n    dmFrom = dmSettings.dmFrom;\n    for (let from in dmFrom) {\n        let reg = new RegExp(`${from}`, \"g\");\n        if (vipUrl.match(reg)) {\n            eval(\"dm = $.require('hiker://page/dmFun?rule=dm盒子').\" + dmFrom[from] + \"(vipUrl);\");\n            // log(countDanmu(getPath(dm)));\n            tipInfo = `弹幕解析源:${dmFrom[from]}，弹幕数量共计：${countDanmu(getPath(dm))}条`\n            toast(tipInfo);\n            return dm;\n        }\n    }\n    return false;\n}\n\n// 入口函数——下载路由\n$.exports.downloadRoute = function (title, vipUrl, isPage) {\n    showLoading('下载中:' + title);\n    dm = $.require('hiker://page/dmFun?rule=dm盒子').dmRoute(vipUrl);\n    hideLoading();\n    if (dm === false) {\n        return \"toast://下载出错，请尝试切换弹幕源！\";\n    }\n    dmPath = getPath(getVar('dm_share')).slice(7);\n    // newFileName = dmPath.substring(dmPath.lastIndexOf(\"/\") + 1).replace(/(\\.[^.]+)$/, '_' + i + \"$1\");\n    newFileName = dmPath.substring(dmPath.lastIndexOf(\"/\") + 1).split('from')[0] + title + '.xml';\n    innerFilepath = getPath('hiker://files/cache/danmu/').slice(7) + newFileName;\n    var { renameFile, copyFile, moveFile } = $.require(\"hiker://page/fileAPI?rule=dm盒子\");\n    dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\n    saveLocal = dmSettings.saveLocal;\n    doubleWrite = dmSettings.doubleWrite;\n    if (saveLocal) {\n        destinationDir = '/storage/emulated/0/Download/海阔视界/danmu/';\n        renameFile(dmPath, newFileName);\n        if (doubleWrite) {\n            copyFile(innerFilepath, destinationDir);\n        } else {\n            moveFile(innerFilepath, destinationDir);\n        }\n    } else {\n        renameFile(dmPath, newFileName);\n    }\n    if (isPage) {\n        log(\"来源于界面...\");\n        putVar('dm_share', innerFilepath.replace('/storage/emulated/0/Android/data/com.example.hikerview/files/Documents/', 'hiker://files/'));\n        return getVar('dm_share');\n    } else {\n        log(\"来源于播放器...\");\n        clearVar(\"dm_share\");\n        return innerFilepath.replace('/storage/emulated/0/Android/data/com.example.hikerview/files/Documents/', 'hiker://files/');\n    }\n}\n\nvar javaImport = new JavaImporter(java.io, java.util.regex, android.util);\n\n// 统计弹幕数量\nfunction countDanmu(filePath) {\n    with (javaImport) {\n        var count = 0;\n        var reader = null;\n        try {\n            // 一次性读取全文内容（直接使用 filePath，无需 Uri 解析）\n            var content = new java.lang.StringBuilder();\n            var localPath = android.net.Uri.parse(filePath).getPath();\n            reader = new BufferedReader(new FileReader(new File(localPath))); // 直接传入 File 对象\n\n            // 使用 Java 的 char[] 缓冲区\n            var buffer = java.lang.reflect.Array.newInstance(java.lang.Character.TYPE, 4096);\n            var charsRead;\n            while ((charsRead = reader.read(buffer)) != -1) {\n                content.append(buffer, 0, charsRead); // 正确追加字符数组\n            }\n\n            // 将 StringBuilder 转为 String 再匹配\n            var pattern = Pattern.compile(\"<d\\\\b\");\n            var matcher = pattern.matcher(content.toString()); // 必须转为 String\n            while (matcher.find()) {\n                count++;\n            }\n        } catch (e) {\n            log(\"弹幕统计\" + e.message);\n        } finally {\n            if (reader != null) {\n                try {\n                    reader.close();\n                } catch (e) { }\n            }\n        }\n        return count;\n    }\n}\n\n\n//官方弹幕函数| qq\n$.exports.TXdm = function (realurl) {\n    filePath = 'hiker://files/cache/danmu/' + 'TX_from_' + getPageTitle() + '.xml';\n    // 字体大小、弹幕步长、解析记录\n    var danmuSetting = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\n    var size = danmuSetting.fontSize;\n    var step = danmuSetting.step;\n    var history = danmuSetting.history;\n    if (history['TX_from_' + getPageTitle()] == realurl && fileExist(filePath)) {\n        dm = filePath;\n        putVar('dm_share', dm);\n        return dm;\n    }\n    try {\n        var vid;\n        // 适配PC端链接（豆瓣电视剧通用）\n        try {\n            vid = realurl.split('.html')[0].split('/').pop();\n            log(vid);\n        } catch (e) {\n            // 携带vid参数的移动端链接\n            vid = realurl.split('=')[1];\n        }\n        var data = '';\n        // 弹幕样式\n        var ct = 1;\n        try {\n            danmuData = JSON.parse(fetch('https://dm.video.qq.com/barrage/base/' + vid, {\n                headers: {\n                    'User-Agent': PC_UA,\n                    \"Referer\": \"https://v.qq.com/\"\n                },\n                method: \"GET\"\n            })).segment_index;\n        } catch (e) {\n            // 聚影、豆瓣、搜狗等腾讯电影链接\n            log('vid参数错误,现将其视为cid重新获取');\n            data = request('https://pbaccess.video.qq.com/trpc.videosearch.search_cgi.http/load_playsource_list_info?pageNum=0&id=' + vid + '&dataType=2&pageContext=need_async%3Dtrue&scene=2&platform=2&appId=10718&site=qq&vappid=34382579&vsecret=e496b057758aeb04b3a2d623c952a1c47e04ffb0a01e19cf&g_tk=&g_vstk=&g_actk=');\n            vid = JSON.parse(data).data.normalList.itemList[0].videoInfo.firstBlockSites[0].episodeInfoList[0].id;\n            log('真实vid:' + vid);\n            danmuData = JSON.parse(fetch('https://dm.video.qq.com/barrage/base/' + vid, {\n                headers: {\n                    'User-Agent': PC_UA,\n                    \"Referer\": \"https://v.qq.com/\"\n                },\n                method: \"GET\"\n            })).segment_index;\n        }\n        url = [];\n        for (var prop in danmuData) {\n            url.push({\n                url: 'https://dm.video.qq.com/barrage/segment/' + vid + '/' + danmuData[prop].segment_name\n            });\n        }\n        // Todo:弹幕数据读写溢出问题触发，https://v.qq.com/x/cover/mzc002008v8rka3/d0046v4pddg.html，流浪地球2，共计347个分页，而每一个分页的数据量都贼大\n        batchFetch(url).map(function (a) {\n            danmuData = JSON.parse(a).barrage_list;\n            // 弹幕为空\n            if (JSON.stringify(danmuData) === '[]') {\n                log('此页为空');\n            } else {\n                try {\n                    for (let i = 0; i < danmuData.length; i += step) {\n                        // 弹幕发送时间\n                        timepoint = danmuData[i].time_offset / 1000;\n                        // 弹幕颜色(默认)\n                        color = 16777215;\n                        if (danmuData[i].content_style != '') {\n                            colorHex = danmuData[i].content_style.match(/\\[\"[\\S\\s]+(?=\",\")/)[0].replace('[\"', '');\n                            color = parseInt(colorHex, 16);\n                        }\n                        // 弹幕内容\n                        content = danmuData[i].content;\n                        if (content.indexOf('<') != -1 || content.indexOf('>') != -1 || content.indexOf('&') != -1 || content.indexOf('\\u0000') != -1 || content.indexOf('\\b') != -1) {\n                            continue;\n                        }\n                        tempdata = `<d p=\"${timepoint},${ct},${size},${color},0\">${content}</d>\\n`;\n                        data += tempdata;\n                    }\n                } catch (e) {\n                    log('不知缘由的异常，直接跳过:' + e)\n                }\n            }\n        });\n        // 最终待写入的弹幕数据\n        danmustr = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<i>\\n${data}</i>`;\n        // 写入弹幕\n        dm = 'hiker://files/cache/danmu/' + 'TX_from_' + getPageTitle() + '.xml';\n        saveFile(dm, danmustr);\n        history['TX_from_' + getPageTitle()] = realurl;\n        saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(danmuSetting));\n        putVar('dm_share', dm);\n        return dm;\n    } catch (e) {\n        log('出错了：' + e);\n        showLoading('天呐撸，获取失败了呢！');\n        // return 'hiker://files/cache/danmu/' + 'TX_from_' + getPageTitle() + '.xml';\n        return false;\n    }\n}\n\n// 官方API|bili\n$.exports.bilidm = function (realurl) {\n    function overrideSave(dm, size, step) {\n        var danmuData = request(dm);\n        var data = '';\n        td = pdfa(danmuData, 'i&&d');\n        for (let i = 0; i < td.length; i += step) {\n            timepoint = pdfh(td[i], 'd&&p').split(\",\")[0];\n            ct = pdfh(td[i], 'd&&p').split(\",\")[1];\n            color = pdfh(td[i], 'd&&p').split(\",\")[3];\n            // 弹幕内容\n            content = pdfh(td[i], 'd&&Text');\n            if (content.indexOf('<') != -1 || content.indexOf('>') != -1 || content.indexOf('&') != -1 || content.indexOf('\\u0000') != -1 || content.indexOf('\\b') != -1) {\n                continue;\n            }\n            tempdata = `<d p=\"${timepoint},${ct},${size},${color},0\">${content}</d>\\n`;\n            data += tempdata;\n        }\n        danmustr = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<i>\\n${data}</i>`;\n        saveFile(dm, danmustr);\n    }\n\n    filePath = 'hiker://files/cache/danmu/' + 'bili_from_' + getPageTitle() + '.xml';\n    // 字体大小、弹幕步长、解析记录\n    var danmuSetting = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\n    var size = danmuSetting.fontSize;\n    var step = danmuSetting.step;\n    var history = danmuSetting.history;\n    if (history['bili_from_' + getPageTitle()] == realurl && fileExist(filePath)) {\n        dm = filePath;\n        putVar('dm_share', dm);\n        return dm;\n    }\n    try {\n        var epid, data, cid, dm;\n        if (realurl.match(/ep/)) {\n            epid = realurl.split('ep')[1].split('?')[0];\n            fetch_url = \"https://api.bilibili.com/pgc/view/web/season?ep_id=\" + epid;\n        } else if (realurl.match(/av/)) {\n            // aid最小单位-单集\n            aid = realurl.split('av')[1].split('?')[0];\n            log('aid:' + aid);\n            fetch_url = \"https://api.bilibili.com/x/web-interface/view?aid=\" + aid;\n            cid = JSON.parse(fetch(fetch_url, {\n                \"headers\": {\n                    \"User-Agent\": PC_UA\n                },\n                \"referrer\": realurl,\n                \"method\": \"GET\",\n            })).data.cid;\n            file = 'https://comment.bilibili.com/' + cid + '.xml';\n            dm = 'hiker://files/cache/danmu/' + 'bili_from_' + getPageTitle() + '.xml';\n            downloadFile(file, dm);\n            overrideSave(dm, size, step);\n            history['bili_from_' + getPageTitle()] = realurl;\n            saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(danmuSetting));\n            putVar('dm_share', dm);\n            return dm;\n        } else if (realurl.match(/ss|md/)) {\n            if (realurl.match(/ss/)) {\n                // 采集到的ss链接多半就是电影，season_id也能代表单集对其处理\n                season_id = realurl.split('ss')[1].split('?')[0];\n                log('season_id:' + season_id);\n            } else {\n                // 由番剧md查询season_id，再经同样逻辑处理（当做单集处理-未验证）\n                md = realurl.split('md')[1].split('?')[0];\n                log('md:' + md);\n                fetch_url = \"https://api.bilibili.com/pgc/review/user?media_id=\" + epid;\n                season_id = JSON.parse(fetch(fetch_url, {\n                    \"headers\": {\n                        \"User-Agent\": PC_UA\n                    },\n                    \"referrer\": realurl,\n                    \"method\": \"GET\",\n                })).result.media.season_id;\n            }\n            fetch_url = 'https://api.bilibili.com/pgc/web/season/section?season_id=' + season_id;\n            cid = JSON.parse(fetch(fetch_url, {\n                \"headers\": {\n                    \"User-Agent\": PC_UA\n                },\n                \"referrer\": realurl,\n                \"method\": \"GET\",\n            })).result.main_section.episodes[0].cid\n            file = 'https://comment.bilibili.com/' + cid + '.xml';\n            dm = 'hiker://files/cache/danmu/' + 'bili_from_' + getPageTitle() + '.xml';\n            downloadFile(file, dm);\n            overrideSave(dm, size, step);\n            history['bili_from_' + getPageTitle()] = realurl;\n            saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(danmuSetting));\n            putVar('dm_share', dm);\n            return dm;\n        }\n        data = JSON.parse(fetch(fetch_url, {\n            \"headers\": {\n                \"User-Agent\": PC_UA\n            },\n            \"referrer\": realurl,\n            \"method\": \"GET\",\n        }));\n        try {\n            data.result.episodes.forEach(ep => {\n                if (ep.link == realurl) {\n                    cid = (ep.cid).toString();\n                    //break;\n                    throw Error()\n                }\n            });\n        } catch (e) {\n            file = 'https://comment.bilibili.com/' + cid + '.xml';\n            dm = 'hiker://files/cache/danmu/' + 'bili_from_' + getPageTitle() + '.xml';\n            downloadFile(file, dm);\n            overrideSave(dm, size, step);\n            history['bili_from_' + getPageTitle()] = realurl;\n            saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(danmuSetting));\n            putVar('dm_share', dm);\n        }\n        return dm;\n    } catch (e) {\n        log('出错了：' + e);\n        showLoading('天呐撸，获取失败了呢！');\n        // return 'hiker://files/cache/danmu/' + 'bili_from_' + getPageTitle() + '.xml';\n        return false;\n    }\n}\n\n//官方弹幕函数| mgtv\n$.exports.MGdm = function (realurl) {\n    filePath = 'hiker://files/cache/danmu/' + 'Mg_from_' + getPageTitle() + '.xml';\n    // 字体大小、弹幕步长、解析记录\n    var danmuSetting = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\n    var size = danmuSetting.fontSize;\n    var step = danmuSetting.step;\n    var history = danmuSetting.history;\n    if (history['Mg_from_' + getPageTitle()] == realurl && fileExist(filePath)) {\n        dm = filePath;\n        putVar('dm_share', dm);\n        return dm;\n    }\n    try {\n        log(realurl);\n        var vid = realurl.split('/')[5].split('.html')[0];\n        var cid = realurl.split('/')[4];\n        var fileNum = 0;\n        var data = ''\n        // 容错处理\n        var errNum = 0;\n        danmuFrom = JSON.parse(fetch(`https://galaxy.bz.mgtv.com/getctlbarrage?version=3.0.0&vid=${vid}&abroad=0&pid=0&os=&uuid=&deviceid=2cc092cb-f9df-4f4f-a1ce-33c7fe3575cf&cid=393717&ticket=&mac=&platform=0&appVersion=3.0.0&reqtype=form-post&callback=jsonp_1658216873648_19074&allowedRC=1`, {\n            headers: {\n                'User-Agent': PC_UA,\n                'Referer': realurl\n            },\n            method: 'GET'\n        }).match(/{[\\S\\s]+}/)).data.cdn_version;\n        // DVD、电影、少部分剧集\n        if (danmuFrom == undefined) {\n            var time = 0;\n            while (true) {\n                // 请求弹幕\n                try {\n                    danmuData = JSON.parse(fetch(`https://galaxy.bz.mgtv.com/cdn/opbarrage?version=3.0.0&vid=${vid}&abroad=0&pid=0&os=&uuid=&deviceid=2cc092cb-f9df-4f4f-a1ce-33c7fe3575cf&cid=${cid}&ticket=&mac=&platform=0&time=${time}&device=0&allowedRC=1&appVersion=3.0.0&reqtype=form-post&callback=jsonp_1658459178998_5150&allowedRC=1`, {\n                        headers: {\n                            'User-Agent': PC_UA,\n                            'Referer': realurl\n                        },\n                        method: 'GET'\n                    }).match(/{[\\S\\s]+}/)).data;\n                } catch (e) {\n                    log('请求失败');\n                    break;\n                }\n                danmu = danmuData.items;\n                // 直至弹幕为空——真的是，如果弹幕太少导致某一页没有数据那岂不是误杀？？？给他个允许(连续)空值的最大次数吧。。\n                if (danmu == null) {\n                    errNum += 1;\n                    log(`${time / 1000}-${time / 1000 + 60}时间段无数据，数据连续空页次数:${+errNum}`);\n                    if (errNum > 2) {\n                        log(\"弹幕数据获取Ending!\");\n                        break;\n                    } else {\n                        // fix,漏掉了时间节点的推移\n                        time = danmuData.next;\n                        continue;\n                    }\n                }\n                // 如果能获取到数据就将空值次数清0，保证错误空值是连续的，尽可能避免误杀\n                errNum = 0;\n                for (let i = 0; i < danmu.length; i += step) {\n                    // 弹幕发送时间\n                    timepoint = danmu[i].time / 1000;\n                    // 弹幕样式\n                    ct = 1;\n                    if (danmu[i].v2_position) {\n                        // 顶端弹幕\n                        ct = 5;\n                    }\n                    // 弹幕颜色(默认)\n                    color = 16777215;\n                    // 颜色设置——可自行修改替换left为right(原来是左右渐变的颜色，但xml格式本身并不支持，所以二选一吧，left一般颜色比较深，right一般颜色比较浅)\n                    if (danmu[i].v2_color) {\n                        color = (danmu[i].v2_color.color_left.r << 16) + (danmu[i].v2_color.color_left.g << 8) + (danmu[i].v2_color.color_left.b);\n                    }\n                    // 弹幕内容\n                    content = danmu[i].content;\n                    if (content.indexOf('<') != -1 || content.indexOf('>') != -1 || content.indexOf('&') != -1 || content.indexOf('\\u0000') != -1 || content.indexOf('\\b') != -1) {\n                        continue;\n                    }\n                    tempdata = `<d p=\"${timepoint},${ct},${size},${color},0\">${content}</d>\\n`\n                    data += tempdata;\n                }\n                time = danmuData.next;\n            }\n        } else {\n            // 一般剧集和综艺\n            while (true) {\n                // 请求弹幕\n                try {\n                    danmuData = JSON.parse(fetch(`https://bullet-ws.hitv.com/${danmuFrom}/${fileNum}.json`, {\n                        headers: {\n                            'User-Agent': PC_UA,\n                            'Referer': realurl\n                        },\n                        method: 'GET'\n                    })).data;\n                } catch (e) {\n                    log('弹幕数据获取完毕');\n                    break;\n                }\n                danmu = danmuData.items;\n                if (danmu == null) {\n                    log('这一页没有数据');\n                    // 差点忘记加1了，死循环要崩溃~\n                    fileNum += 1;\n                    continue;\n                }\n                for (let i = 0; i < danmu.length; i += step) {\n                    // 弹幕发送时间\n                    timepoint = danmu[i].time / 1000;\n                    // 弹幕样式\n                    ct = 1;\n                    if (danmu[i].v2_position) {\n                        // 顶端弹幕\n                        ct = 5;\n                    }\n                    // 弹幕颜色(默认)\n                    color = 16777215;\n                    // 颜色设置——可自行修改替换left为right(原来是左右渐变的颜色，但xml格式本身并不支持，所以二选一吧，left一般颜色比较深，right一般颜色比较浅)\n                    if (danmu[i].v2_color) {\n                        color = (danmu[i].v2_color.color_left.r << 16) + (danmu[i].v2_color.color_left.g << 8) + (danmu[i].v2_color.color_left.b);\n                    }\n                    // 弹幕内容\n                    content = danmu[i].content;\n                    if (content.indexOf('<') != -1 || content.indexOf('>') != -1 || content.indexOf('&') != -1 || content.indexOf('\\u0000') != -1 || content.indexOf('\\b') != -1) {\n                        continue;\n                    }\n                    tempdata = `<d p=\"${timepoint},${ct},${size},${color},0\">${content}</d>\\n`\n                    data += tempdata;\n                }\n                fileNum += 1;\n            }\n        }\n        // 最终待写入的弹幕数据\n        danmustr = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<i>\\n${data}</i>`;\n        // 写入弹幕\n        dm = 'hiker://files/cache/danmu/' + 'Mg_from_' + getPageTitle() + '.xml';\n        saveFile(dm, danmustr);\n        history['Mg_from_' + getPageTitle()] = realurl;\n        saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(danmuSetting));\n        putVar('dm_share', dm);\n        return dm;\n    } catch (e) {\n        log('出错了:' + e)\n        showLoading('天呐撸，获取失败了呢！');\n        // return 'hiker://files/cache/danmu/' + 'Mg_from_' + getPageTitle() + '.xml';\n        return false;\n    }\n}\n\n//官方弹幕函数| YK\n$.exports.YKdm = function (realurl) {\n    const parseCookie = (cookieStr) => {\n        const cookies = {};\n        cookieStr.split(\";\").forEach((cookie) => {\n            const parts = cookie.split(\"=\");\n            const key = parts[0].trim();\n            const value = parts[1] ? decodeURIComponent(parts[1].trim()) : \"\";\n            cookies[key] = value;\n        }\n        );\n        return cookies;\n    }\n\n    const get_tk_enc = () => {\n        const api_url = \"https://acs.youku.com/h5/mtop.com.youku.aplatform.weakget/1.0/?jsv=2.5.1&appKey=24679788\";\n        let cookies = undefined;\n        while (cookies === undefined) {\n            cookies = JSON.parse(fetchCookie(api_url, { headers: { \"content-type\": \"application/json\" }, body: \"\", method: \"GET\" }));\n        }\n        let targetCookie = {};\n        for (let cookieStr of cookies) {\n            targetCookie = Object.assign(targetCookie, parseCookie(cookieStr));\n        }\n        return targetCookie;\n    }\n\n    const get_cna = () => {\n        const api_url = \"https://log.mmstat.com/eg.js\";\n        cookies = JSON.parse(fetchCookie(api_url, { headers: { \"content-type\": \"application/json\" }, body: \"\", method: \"GET\" }));\n        let targetCookie = {};\n        for (let cookieStr of cookies) {\n            targetCookie = Object.assign(targetCookie, parseCookie(cookieStr));\n        }\n        return targetCookie[\"cna\"];\n    }\n\n    const yk_msg_sign = (msg) => {\n        return md5(msg + \"MkmC9SoIw6xCkSKHhJ7b5D2r51kBiREr\");\n    }\n\n    const yk_t_sign = (token, t, appkey, data) => {\n        const text = [token, t, appkey, data].join(\"&\");\n        return md5(text);\n    }\n\n    const get_vinfos_by_video_id = (url) => {\n        const pathSegments = url.split(\"/\");\n        const video_id = pathSegments[pathSegments.length - 1].split(\".\")[0].slice(3);\n        if (video_id) {\n            const api_url = \"https://openapi.youku.com/v2/videos/show.json\";\n            const params = { client_id: \"53e6cc67237fc59a\", video_id: video_id, package: \"com.huawei.hwvplayer.youku\", ext: \"show\" };\n            const res = JSON.parse(request(buildUrl(api_url, params)));\n            const duration = res.duration;\n            return [video_id, duration];\n        }\n    }\n\n    const resolve = (url) => {\n        filePath = 'hiker://files/cache/danmu/' + 'YK_from_' + getPageTitle() + '.xml';\n        // 字体大小、弹幕步长、解析记录\n        var danmuSetting = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\n        var size = danmuSetting.fontSize;\n        var step = danmuSetting.step;\n        var history = danmuSetting.history;\n        if (history['YK_from_' + getPageTitle()] == url && fileExist(filePath)) {\n            dm = filePath;\n            putVar('dm_share', dm);\n            return dm;\n        }\n        const cna = get_cna();\n        const tk_enc = get_tk_enc();\n        const headers = {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n            \"Cookie\": \"_m_h5_tk=\" + tk_enc[\"_m_h5_tk\"] + \";_m_h5_tk_enc=\" + tk_enc[\"_m_h5_tk_enc\"] + \";\",\n            \"Referer\": \"https://v.youku.com\",\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.88 Safari/537.36\"\n        };\n        const [vid, duration] = get_vinfos_by_video_id(url);\n        const max_mat = Math.floor(duration / 60) + 1;\n        var xmlData = '';\n        // 弹幕样式\n        var ct = 1;\n        const api_url = \"https://acs.youku.com/h5/mopen.youku.danmu.list/1.0/\";\n        try {\n            for (let mat = 0; mat < max_mat; mat++) {\n                let msg = { \"ctime\": Date.now(), \"ctype\": 10004, \"cver\": \"v1.0\", \"guid\": cna, \"mat\": mat, \"mcount\": 1, \"pid\": 0, \"sver\": \"3.1.0\", \"type\": 1, \"vid\": vid };\n                let str = JSON.stringify(msg);\n                let msg_b64encode = base64Encode(str);\n                msg[\"msg\"] = msg_b64encode;\n                msg[\"sign\"] = yk_msg_sign(msg_b64encode);\n                let data = JSON.stringify(msg);\n                // const t = Date.now();有毒，海阔上会得到一个科学计数法表示的时间\n                let t = Date.now() + \"\";\n                let params = {\n                    \"jsv\": \"2.5.6\",\n                    \"appKey\": \"24679788\",\n                    \"t\": t,\n                    \"sign\": yk_t_sign(tk_enc[\"_m_h5_tk\"].slice(0, 32), t, \"24679788\", data),\n                    \"api\": \"mopen.youku.danmu.list\",\n                    \"v\": \"1.0\",\n                    \"type\": \"originaljson\",\n                    \"dataType\": \"jsonp\",\n                    \"timeout\": \"20000\",\n                    \"jsonpIncPrefix\": \"utility\"\n                };\n                let tempLink = buildUrl(api_url, params);\n                let res = post(tempLink,\n                    {\n                        body: { \"data\": data },\n                        headers: headers\n                    }\n                );\n                danmuInfo = JSON.parse(res).data.result;\n                if (danmuInfo.code === '-1') {\n                    continue;\n                }\n                danmuData = JSON.parse(danmuInfo).data.result;\n                for (let i = 0; i < danmuData.length; i += step) {\n                    // 弹幕发送时间\n                    timepoint = danmuData[i].playat / 1000;\n                    // 弹幕颜色(默认)\n                    color = 16777215;\n                    propertis = JSON.parse(danmuData[i].propertis);\n                    if (propertis.color && typeof (propertis.color) === \"number\") {\n                        color = propertis.color;\n                    } else {\n                        // 奇葩，神话电视剧8-9集竟然还有字符串\n                        color = propertis.color.match(/\\d+/g)[0];\n                    }\n                    // 弹幕内容\n                    content = danmuData[i].content;\n                    if (content.indexOf('<') != -1 || content.indexOf('>') != -1 || content.indexOf('&') != -1 || content.indexOf('\\u0000') != -1 || content.indexOf('\\b') != -1) {\n                        continue;\n                    }\n                    tempdata = `<d p=\"${timepoint},${ct},${size},${color},0\">${content}</d>\\n`;\n                    // log(tempdata);\n                    xmlData += tempdata;\n                }\n            }\n            // 最终待写入的弹幕数据\n            danmustr = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<i>\\n${xmlData}</i>`;\n            // 写入弹幕\n            dm = 'hiker://files/cache/danmu/' + 'YK_from_' + getPageTitle() + '.xml';\n            saveFile(dm, danmustr);\n            history['YK_from_' + getPageTitle()] = url;\n            saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(danmuSetting));\n            putVar('dm_share', dm);\n            return dm;\n        } catch (e) {\n            log('出错了：' + e);\n            showLoading('天呐撸，获取失败了呢！');\n            return false;\n        }\n    }\n    return resolve(realurl);\n}\n\n//官方弹幕函数| QY  Java+多线程\n$.exports.QYdm = function (realurl) {\n    // m:s转换s\n    const time_to_second = (time) => {\n        let t = time.split(\":\");\n        let s = 0;\n        let m = 1;\n        while (t.length > 0) {\n            s += m * parseInt(t.pop(), 10);\n            m *= 60;\n        }\n        return s;\n    }\n    // xml项抽取\n    const extract = (xml, tag) => {\n        const reg = new RegExp(`<${tag}>(.*?)</${tag}>`, \"g\");\n        const matches = xml.match(reg);\n        if (!matches) {\n            return [];\n        }\n        const res = matches.map(x => x.substring(tag.length + 2, x.length - tag.length - 3));\n        return res;\n    }\n    // 核心\n    const resolve = (url) => {\n        var filePath = 'hiker://files/cache/danmu/' + 'QY_from_' + getPageTitle() + '.xml';\n        // 字体大小、弹幕步长、解析记录\n        var danmuSetting = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\n        var size = danmuSetting.fontSize;\n        var step = danmuSetting.step;\n        var history = danmuSetting.history;\n        var dm = '';\n        if (history['QY_from_' + getPageTitle()] == url && fileExist(filePath)) {\n            log('弹幕文件已存在：' + filePath + '\\t对应来源：' + url);\n            dm = filePath;\n            putVar('dm_share', dm);\n            return dm;\n        }\n        // var xmlData = '';\n        // 弹幕样式\n        var ct = 1;\n        // const data = fetchPC(url);\n        const data = fetch(url);\n        // let result = data.match(/window.Q.PageInfo.playPageInfo=(.*);/);\n        let result = data.match(/\"videoInfo\":({.*?})\\s*,\\s*/);\n        let page_info = JSON.parse(result[1]);\n        // log(page_info);\n        // let duration = time_to_second(page_info.duration);\n        let duration = page_info.duration;\n        let albumid = page_info.albumId;\n        // let tvid = page_info.tvId.toString();\n        let tvid = page_info.tvid.toString();\n        let categoryid = page_info.cid;\n        //一页5分钟\n        let page = Math.round(duration / (60 * 5));\n        let params = {\n            rn: \"0.0123456789123456\",\n            business: \"danmu\",\n            is_iqiyi: \"true\",\n            is_video_page: \"true\",\n            tvid: tvid,\n            albumid: albumid,\n            categoryid: categoryid,\n            qypid: \"01010021010000000000\"\n        };\n        try {\n            var results = []\n            dm = 'hiker://files/cache/danmu/' + 'QY_from_' + getPageTitle() + '.xml';\n            var task = function (obj) {\n                // 引入解压库Zlib\n                Zlib = $.require(\"hiker://page/zlib?rule=dm盒子\");\n                // 多线程，可能导致请求得到的数据不完整（某一次被拒绝了，然后就[Zlib] Input too short）\n                // 定义带重试的fetch函数【针对HEX字符串】\n                function fetchWithRetry(url, retries) {\n                    let attempt = 0;\n                    while (attempt < retries) {\n                        try {\n                            let res = fetch(url, { toHex: true });\n                            // 检查数据长度是否合法（HEX字符串至少4字符）\n                            if (res && res.length >= 4 && res.length % 2 === 0) {\n                                return res;\n                            } else {\n                                log(`[Retry] Invalid data length: ${res.length || 0}, attempt ${attempt + 1}`);\n                                try {\n                                    java.lang.Thread.sleep(2000);\n                                } catch (e) {\n                                    // java.lang.Thread.currentThread().interrupt();\n                                    log(\"Thread was interrupted during sleep.\");\n                                }\n                                attempt++;\n                            }\n                        } catch (e) {\n                            log(`[Retry] Fetch error: ${e.message}, attempt ${attempt + 1}`);\n                            attempt++;\n                        }\n                    }\n                    return null; // 重试后仍失败\n                }\n\n                let xml = '';\n                try {\n                    let res = fetchWithRetry(obj.url, 3);\n                    if (!res) {\n                        minStart=Number(obj.url.split('_300_')[1].split('.z')[0]);\n                        tipInfo=`${(minStart-1)*5}-${(minStart)*5}min弹幕数据丢失`;\n                        log(tipInfo);\n                        toast(tipInfo);\n                        throw new Error(`Failed to fetch valid data after retries from ${obj.url}`);\n                    }\n                    xml = Zlib.uncompress(res); // 自动处理HEX转换\n                } catch (e) {\n                    log(\"Error during fetch or decompression:\"+e.message);\n                    return '';\n                }\n\n                let danmaku = extract(xml, \"content\");\n                let showTime = extract(xml, \"showTime\");\n                let colors = extract(xml, \"color\");\n                let partXml = '';\n                for (let i = 0; i < danmaku.length; i += step) {\n                    // 弹幕发送时间\n                    timepoint = showTime[i];\n                    // 弹幕颜色(默认)\n                    color = parseInt(colors[i], 16);\n                    // 弹幕内容\n                    content = danmaku[i];\n                    if (content.indexOf('<') != -1 || content.indexOf('>') != -1 || content.indexOf('&') != -1 || content.indexOf('\\u0000') != -1 || content.indexOf('\\b') != -1) {\n                        continue;\n                    }\n                    tempdata = `<d p=\"${timepoint},${ct},${size},${color},0\">${content}</d>\\n`;\n                    partXml += tempdata;\n                }\n                return partXml;\n            };\n            var tasks = [];\n            for (let i = 0; i < page; i++) {\n                // showLoading(`进度：${i}/${page}`);\n                let api_url = `https://cmts.iqiyi.com/bullet/${tvid.slice(-4, -2)}/${tvid.slice(-2)}/${tvid}_300_${i + 1}.z`;\n                // 看一看第一个链接是否正确\n                let tempLink = buildUrl(api_url, params);\n                tasks.push({\n                    func: task,\n                    param: {\n                        url: tempLink\n                    },\n                    id: \"task\" + i\n                })\n            }\n            var count = tasks.length;\n            be(tasks, {\n                func: function (obj, id, error, taskResult) {\n                    if (error) {\n                        log(\"task:\" + id + \"\\t,error:\" + error.message);\n                    }\n                    obj.results.push(taskResult)\n                    count = count - 1;\n                    if (count == 1) {\n                        let xmlData = obj.results.join('');\n                        // 最终待写入的弹幕数据\n                        let danmustr = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<i>\\n${xmlData}</i>`;\n                        saveFile(dm, danmustr);\n                        history['QY_from_' + getPageTitle()] = url;\n                        saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(danmuSetting));\n                        putVar('dm_share', dm);\n                        hideLoading();\n                        // toast(\"Qydm执行完成\");\n                        return \"break\";\n                    } else if (count > 0) {\n                        showLoading(\"下载中，剩余任务：\" + count)\n                    } else {\n                        hideLoading();\n                    }\n                },\n                param: {\n                    results: results,\n                    dm: dm\n                }\n            });\n            return dm;\n        } catch (e) {\n            log('出错了：' + e.message);\n            showLoading('天呐撸，获取失败了呢！');\n            return false;\n        }\n    };\n    return resolve(realurl);\n}\n\n\n//左岸弹幕库|官 （彩处理【基本全白】、全right【top（基本就系统的一条数据）】；）\n$.exports.zuoandm = function (realurl) {\n    filePath = 'hiker://files/cache/danmu/' + 'zuoan_from_' + getPageTitle() + '.xml';\n    // 字体大小、弹幕步长、解析记录\n    var danmuSetting = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\n    var size = danmuSetting.fontSize;\n    var step = danmuSetting.step;\n    var history = danmuSetting.history;\n    if (history['zuoan_from_' + getPageTitle()] == realurl && fileExist(filePath)) {\n        dm = filePath;\n        putVar('dm_share', dm);\n        return dm;\n    }\n    try {\n        var data = '';\n        // 弹幕样式\n        var ct = 1;\n        try {\n            var danmuData = JSON.parse(fetch('https://dmku.thefilehosting.com/?ac=dm&url=' + realurl)).danmuku;\n        } catch (e) {\n            log(\"请求失败:\" + e.message);\n        }\n        for (let i = 0; i < danmuData.length; i += step) {\n            // 弹幕发送时间\n            timepoint = danmuData[i][0];\n            // 弹幕样式\n            ct = 1;\n            if (danmuData[i][1] == 'top') {\n                // 顶端弹幕\n                ct = 5;\n            }\n            // 颜色设置\n            var hex = danmuData[i][2].replace('#', '');\n            if (hex.length == 3) {\n                let t = ''\n                for (let i = 0; i < hex.length; i++) {\n                    t += hex.slice(i, i + 1).concat(hex.slice(i, i + 1))\n                }\n                hex = t\n            }\n            color = parseInt(hex, 16);\n            // 弹幕内容\n            content = danmuData[i][4];\n            if (content.indexOf('<') != -1 || content.indexOf('>') != -1 || content.indexOf('&') != -1 || content.indexOf('\\u0000') != -1 || content.indexOf('\\b') != -1) {\n                continue;\n            }\n            tempdata = `<d p=\"${timepoint},${ct},${size},${color},0\">${content}</d>\\n`;\n            data += tempdata;\n        }\n        // 最终待写入的弹幕数据\n        danmustr = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<i>\\n${data}</i>`;\n        // 写入弹幕\n        dm = 'hiker://files/cache/danmu/' + 'zuoan_from_' + getPageTitle() + '.xml';\n        saveFile(dm, danmustr);\n        history['zuoan_from_' + getPageTitle()] = realurl;\n        saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(danmuSetting));\n        putVar('dm_share', dm);\n        return dm;\n    } catch (e) {\n        log('出错了:' + e);\n        showLoading('天呐撸，获取失败了呢！');\n        return false;\n    }\n}\n\n//hls|官 虾米(彩处理，返回数据全right不处理)\n$.exports.hlsdm = function (realurl) {\n    filePath = 'hiker://files/cache/danmu/' + 'hls_from_' + getPageTitle() + '.xml';\n    // 字体大小、弹幕步长、解析记录\n    var danmuSetting = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\n    var size = danmuSetting.fontSize;\n    var step = danmuSetting.step;\n    var history = danmuSetting.history;\n    if (history['hls_from_' + getPageTitle()] == realurl && fileExist(filePath)) {\n        dm = filePath;\n        putVar('dm_share', dm);\n        return dm;\n    }\n    try {\n        var data = '';\n        // 弹幕样式\n        var ct = 1;\n        try {\n            var danmuData = JSON.parse(fetch('https://dmku.hls.one?ac=dm&url=' + realurl)).danmuku;\n        } catch (e) {\n            log(\"请求失败:\" + e.message);\n        }\n        for (let i = 0; i < danmuData.length; i += step) {\n            // 弹幕发送时间\n            timepoint = danmuData[i][0];\n            // 弹幕样式\n            ct = 1;\n            // 颜色设置\n            var hex = danmuData[i][2].replace('#', '');\n            if (hex.length == 3) {\n                let t = ''\n                for (let i = 0; i < hex.length; i++) {\n                    t += hex.slice(i, i + 1).concat(hex.slice(i, i + 1))\n                }\n                hex = t\n            }\n            color = parseInt(hex, 16);\n            // 弹幕内容\n            content = danmuData[i][4];\n            if (content.indexOf('<') != -1 || content.indexOf('>') != -1 || content.indexOf('&') != -1 || content.indexOf('\\u0000') != -1 || content.indexOf('\\b') != -1) {\n                continue;\n            }\n            tempdata = `<d p=\"${timepoint},${ct},${size},${color},0\">${content}</d>\\n`;\n            data += tempdata;\n        }\n        // 最终待写入的弹幕数据\n        danmustr = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<i>\\n${data}</i>`;\n        // 写入弹幕\n        dm = 'hiker://files/cache/danmu/' + 'hls_from_' + getPageTitle() + '.xml';\n        saveFile(dm, danmustr);\n        history['hls_from_' + getPageTitle()] = realurl;\n        saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(danmuSetting));\n        putVar('dm_share', dm);\n        return dm;\n    } catch (e) {\n        log('出错了:' + e);\n        showLoading('天呐撸，获取失败了呢！');\n        return false;\n    }\n}\n"},{"col_type":"movie_3","name":"解析调用汇总","path":"lazyToJiexi","rule":"// video嗅探解析，主要供配置助手调用，参数为数组\n$.exports.videoX5 = function (vipUrl, urls, names, headers) {\n    dm=$.require('hiker://page/dmFun?rule=dm盒子').dmRoute(vipUrl);\n    if(dm===false)log('弹幕获取出错了...');\n    dmPath = getPath(getVar('dm_share')).slice(7);\n    var {copyFile,moveFile} = $.require(\"hiker://page/fileAPI?rule=dm盒子\");\n    dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\n    saveLocal=dmSettings.saveLocal;\n    doubleWrite=dmSettings.doubleWrite;\n    if (saveLocal) {\n        destinationDir='/storage/emulated/0/Download/海阔视界/danmu/';\n        if (doubleWrite) {\n            copyFile(dmPath,destinationDir);\n        }else{\n            moveFile(dmPath,destinationDir);\n        }\n    }\n    if (headers) {\n        var headers = headers;\n    } else {\n        var headers = [];\n    }\n    return JSON.stringify({\n        names: names,\n        urls: urls,\n        danmu: getVar('dm_share', '获取失败'),\n        headers: headers\n    })\n}\n\n//香免版，未验证可用性\n$.exports.classicalX5 = function (vipUrl, originUrl) {\n    // 感谢香佬提供通免——dm魔改\n    function x5rule(jiexurl, srcurl) {\n        showLoading(\"网页访问检索中，请稍候...\");\n        var video = 'webRule://' + jiexurl + '@' + $.toString((srcurl) => {\n            //fba.log(fba.getUrls());\n            var urls = _getUrls();\n            if (window.__count == null || window.__count == undefined) {\n                window.__count = 0\n            }\n            if (window.__count >= 23) {\n                // return srcurl\n                bfurl = srcurl.split(';')[0];\n                args = srcurl.match(/;[\\S\\s]+}/g)[0];\n                return JSON.stringify({\n                    urls: [bfurl],\n                    names: ['dm盒子'],\n                    danmu: fba.getVar('dm_share', '获取失败')\n                }) + args;\n            }\n            window.__count = window.__count + 1;\n            if (window.__count > 1 && window.__count <= 3 && window.__count != null && window.__count != undefined) {\n                if (document.querySelector('body').innerText.search(/触发了防盗链|未授权|接口防盗|请到主站观看/) != -1) {\n                    if (!srcurl) {\n                        fba.log('尝试跳防盗验证一');\n                        location.href = location.href;\n                    } else {\n                        fba.log('尝试跳防盗验证二');\n                        location.href = srcurl\n                    }\n                };\n            } else if (window.__count > 3 && window.__count != null && window.__count != undefined) {\n                if (urls.length < 1) {\n                    fba.hideLoading();\n                    return 'toast://检索失败，可能链接无法访问。';\n                } else if (urls.length == 1) {\n                    fba.log('尝试直链与JSON解析');\n                    if (urls[0].match(/dycdn\\-tos\\.pstatp|\\.m3u8|\\.mp4|\\.flv|netease\\.com|video_mp4|type\\=m3u8|pt\\=m3u8|\\/video\\/tos\\//) && !urls[0].match(/\\.html|m3u8\\.tv|m3u8\\.pw|\\&next|ac\\=dm|\\=http|https\\:\\/\\/[\\d]\\.m3u8|\\?url\\=\\/m3u8/)) {\n                        //fy_bridge_app.log(urls[0])\n                        if (urls[0].indexOf('bilivideo') != -1) {\n                            // return urls[0] + ';{Referer@https://www.bilibili.com&&User-Agent@Mozilla/5.0}';\n                            return JSON.stringify({\n                                urls: [urls[0]],\n                                names: ['dm盒子'],\n                                danmu: fba.getVar('dm_share', '获取失败'),\n                                headers: [{\n                                    'Referer': 'https://www.bilibili.com',\n                                    'User-Agent': 'Mozilla/5.0'\n                                }]\n                            });\n                        } else if (urls[0].indexOf('titan.mgtv.com') != -1) {\n                            // return urls[0] + '#isVideo=true#' + ';{Referer@www.mgtv.com&&User-Agent@Mozilla/5.0}';\n                            return JSON.stringify({\n                                urls: [urls[0] + '#isVideo=true#'],\n                                names: ['dm盒子'],\n                                danmu: fba.getVar('dm_share', '获取失败'),\n                                headers: [{\n                                    'Referer': 'www.mgtv.com',\n                                    'User-Agent': 'Mozilla/5.0'\n                                }]\n                            });\n                        } else {\n                            // return urls[0]\n                            bfurl = urls[0].split(';')[0];\n                            args = urls[0].match(/;[\\S\\s]+}/g)[0];\n                            return JSON.stringify({\n                                urls: [bfurl],\n                                names: ['dm盒子'],\n                                danmu: fba.getVar('dm_share', '获取失败')\n                            }) + args;\n                        }\n                    } else if (location.href.match(/dycdn\\-tos\\.pstatp|\\.m3u8|\\.mp4|\\.flv|netease\\.com|video_mp4|type\\=m3u8|pt\\=m3u8|\\/video\\/tos\\//) && !location.href.match(/\\.html|m3u8\\.tv|m3u8\\.pw|\\&next|ac\\=dm|\\=http|https\\:\\/\\/[\\d]\\.m3u8|\\?url\\=\\/m3u8/)) {\n                        // return location.href;\n                        bfurl = location.href.split(';')[0];\n                        args = location.href.match(/;[\\S\\s]+}/g)[0];\n                        return JSON.stringify({\n                            urls: [bfurl],\n                            names: ['dm盒子'],\n                            danmu: fba.getVar('dm_share', '获取失败')\n                        }) + args;\n                    } else {\n                        var html = fba.fetch(location.href, {});\n                        if (!/\\<meta/.test(html) && !/\\<html/.test(html)) {\n                            // return JSON.parse(html).url;\n                            bfurl = JSON.parse(html).url.split(';')[0];\n                            args = JSON.parse(html).url.match(/;[\\S\\s]+}/g)[0];\n                            return JSON.stringify({\n                                urls: [bfurl],\n                                names: ['dm盒子'],\n                                danmu: fba.getVar('dm_share', '获取失败')\n                            }) + args;\n                        } else if (/没有找到站点|网页无法打开|404 Not Found|备案后可继续访问/.test(html)) {\n                            // return location.href.substring(location.href.indexOf('=http') + 1);\n                            bfurl = location.href.substring(location.href.indexOf('=http') + 1).split(';')[0];\n                            args = location.href.substring(location.href.indexOf('=http') + 1).match(/;[\\S\\s]+}/g)[0];\n                            return JSON.stringify({\n                                urls: [bfurl],\n                                names: ['dm盒子'],\n                                danmu: fba.getVar('dm_share', '获取失败')\n                            }) + args;\n                        } else {\n                            // return location.href\n                            bfurl = location.href.split(';')[0];\n                            args = location.href.match(/;[\\S\\s]+}/g)[0];\n                            return JSON.stringify({\n                                urls: [bfurl],\n                                names: ['dm盒子'],\n                                danmu: fba.getVar('dm_share', '获取失败')\n                            }) + args;\n                        }\n                    };\n                } else {\n                    fba.log('日志检索第' + window.__count + '次');\n                    for (var i in urls) {\n                        if (urls[i].match(/dycdn\\-tos\\.pstatp|\\.m3u8|\\.mp4|\\.flv|netease\\.com|video_mp4|type\\=m3u8|pt\\=m3u8|\\/video\\/tos\\//) && !urls[i].match(/\\.html|m3u8\\.tv|m3u8\\.pw|\\&next|ac\\=dm|\\=http|https\\:\\/\\/[\\d]\\.m3u8|\\?url\\=\\/m3u8|\\.css|\\.js\\?/)) {\n                            //fy_bridge_app.log(urls[i])\n                            if (fy_bridge_app.getHeaderUrl) {\n                                // return fy_bridge_app.getHeaderUrl(urls[i]).replace(\";{\", \"#ignoreImg=true##isVideo=true#;{\");\n                                bfurl = fy_bridge_app.getHeaderUrl(urls[i]).replace(\";{\", \"#ignoreImg=true##isVideo=true#;{\").split(';')[0];\n                                args = fy_bridge_app.getHeaderUrl(urls[i]).replace(\";{\", \"#ignoreImg=true##isVideo=true#;{\").match(/;[\\S\\s]+}/g)[0];\n                                return JSON.stringify({\n                                    urls: [bfurl],\n                                    names: ['dm盒子'],\n                                    danmu: fba.getVar('dm_share', '获取失败')\n                                }) + args;\n                            } else {\n                                if (urls[i].indexOf('bilivideo') != -1) {\n                                    // return urls[i] + ';{Referer@https://www.bilibili.com&&User-Agent@Mozilla/5.0}';\n                                    return JSON.stringify({\n                                        urls: [urls[i]],\n                                        names: ['dm盒子'],\n                                        danmu: fba.getVar('dm_share', '获取失败'),\n                                        headers: [{\n                                            'Referer': 'https://www.bilibili.com',\n                                            'User-Agent': 'Mozilla/5.0'\n                                        }]\n                                    });\n                                } else if (urls[i].indexOf('titan.mgtv.com') != -1) {\n                                    // return urls[i] + '#isVideo=true#' + ';{Referer@www.mgtv.com&&User-Agent@Mozilla/5.0}';\n                                    return JSON.stringify({\n                                        urls: [urls[i] + '#isVideo=true#'],\n                                        names: ['dm盒子'],\n                                        danmu: fba.getVar('dm_share', '获取失败'),\n                                        headers: [{\n                                            'Referer': 'www.mgtv.com',\n                                            'User-Agent': 'Mozilla/5.0'\n                                        }]\n                                    });\n                                } else if (urls[i].indexOf('juhaokan') != -1) {\n                                    // return urls[i] + ';{Referer@https://www.juhaokan.cc/}';\n                                    return JSON.stringify({\n                                        urls: [urls[i]],\n                                        names: ['dm盒子'],\n                                        danmu: fba.getVar('dm_share', '获取失败'),\n                                        headers: [{\n                                            'Referer': 'https://www.juhaokan.cc/'\n                                        }]\n                                    });\n                                } else if (urls[i].indexOf('ojbk') != -1) {\n                                    // return urls[i] + ';{Referer@https://v.ojbkjx.com/}';\n                                    return JSON.stringify({\n                                        urls: [urls[i]],\n                                        names: ['dm盒子'],\n                                        danmu: fba.getVar('dm_share', '获取失败'),\n                                        headers: [{\n                                            'Referer': 'https://v.ojbkjx.com/'\n                                        }]\n                                    });\n                                } else if (urls[i].indexOf('wkfile') != -1) {\n                                    // return urls[i] + ';{Referer@https://fantuan.wkfile.com/}';\n                                    return JSON.stringify({\n                                        urls: [urls[i]],\n                                        names: ['dm盒子'],\n                                        danmu: fba.getVar('dm_share', '获取失败'),\n                                        headers: [{\n                                            'Referer': 'https://fantuan.wkfile.com/'\n                                        }]\n                                    });\n                                } else if (urls[i].indexOf('shenglinyiyang') != -1) {\n                                    // return urls[i] + ';{Referer@https://zyz.sdljwomen.com/}';\n                                    return JSON.stringify({\n                                        urls: [urls[i]],\n                                        names: ['dm盒子'],\n                                        danmu: fba.getVar('dm_share', '获取失败'),\n                                        headers: [{\n                                            'Referer': 'https://zyz.sdljwomen.com/'\n                                        }]\n                                    });\n                                } else if (urls[i].indexOf('peizq.online') != -1) {\n                                    // return urls[i] + ';{Referer@https://play.peizq.online/}';\n                                    return JSON.stringify({\n                                        urls: [urls[i]],\n                                        names: ['dm盒子'],\n                                        danmu: fba.getVar('dm_share', '获取失败'),\n                                        headers: [{\n                                            'Referer': 'https://play.peizq.online/'\n                                        }]\n                                    });\n                                } else {\n                                    // return urls[i] + '#isVideo=true#'\n                                    bfurl = (urls[i] + '#isVideo=true#').split(';')[0];\n                                    args = (urls[i] + '#isVideo=true#').match(/;[\\S\\s]+}/g)[0];\n                                    return JSON.stringify({\n                                        urls: [bfurl],\n                                        names: ['dm盒子'],\n                                        danmu: fba.getVar('dm_share', '获取失败')\n                                    }) + args;\n                                }\n                            }\n                        }\n                    } //end for i\n                }\n            }\n        }, srcurl);\n        return video\n    }\n    // 判断弹幕线路来源\n    dm=$.require('hiker://page/dmFun?rule=dm盒子').dmRoute(vipUrl);\n    dmPath = getPath(getVar('dm_share')).slice(7);\n    var {copyFile,moveFile} = $.require(\"hiker://page/fileAPI?rule=dm盒子\");\n    dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\n    saveLocal=dmSettings.saveLocal;\n    doubleWrite=dmSettings.doubleWrite;\n    if (saveLocal) {\n        destinationDir='/storage/emulated/0/Download/海阔视界/danmu/';\n        if (doubleWrite) {\n            copyFile(dmPath,destinationDir);\n        }else{\n            moveFile(dmPath,destinationDir);\n        }\n    }\n    return x5rule(originUrl, originUrl);\n}\n\n\n\n// 道长仓库通免版本，未验证可用性\n$.exports.drX5 = function (vipUrl, playUrl) {\n    function x5rule(playUrl, ms, tm, rechange) {\n        // log('调用仓库免嗅探传参超时为:'+ms);\n        tm = parseInt(tm) || 5000;\n        const {\n            isVideo,\n            getHeaders,\n            isBadVideo\n        } = $.require('hiker://page/globalParse?rule=道长仓库Pro');\n        let realUrl = isVideo(playUrl, rechange);\n        //log(realUrl);\n        if (typeof (realUrl) == 'string') { //bool值就是失败\n            try {\n                let rurl = realUrl.split(\";\")[0].split(\"#\")[0];\n                return JSON.parse(request(rurl, {\n                    timeout: tm\n                })).url\n            } catch (e) {\n                return realUrl\n            }\n            //return realUrl\n        }\n        //log(\"访问超时:\"+tm);\n        log(\"尝试道长仓库x5免嗅:\" + playUrl);\n        clearVar(\"_x5jxUrl\");\n        let bad = $(\"网络不佳或者疑似对方网站挂了，你要查看其网页吗？\").confirm((playUrl) => {\n            log(\"网站看起来挂了:\" + playUrl);\n            return playUrl\n        }, playUrl);\n        try {\n            var back = request(playUrl, {\n                headers: getHeaders(playUrl),\n                timeout: tm\n            });\n            //var back=fetch(playUrl,{headers: {'User-Agent': PC_UA}});\n            if (!back) {\n                log(\"网站\" + playUrl + \"确实啥也没返回\");\n                return bad\n            } else if (/#EXTINF/.test(back)) {\n                //let lcache=\"/storage/emulated/0/Android/data/com.example.hikerview/files/Documents/cache/video.m3u8\";\n                //writeFile(lcache,back);\n                //return lcache+\"##\"+playUrl+\"#isVideo=true#\"\n                playUrl = cacheM3u8(playUrl);\n                return playUrl\n            } else if ((!/触发了防盗链|未授权|接口防盗/.test(back)) && (!/http|url/.test(back)) && (!/msg|code|html/.test(back))) {\n                log(back);\n                return 'toast://疑似对方数据加密了，具体数据看日志'\n            }\n        } catch (e) {\n            log(e.message);\n            return bad\n        }\n        log('开始x5免嗅探');\n        // require('https://hjdhnx.coding.net/p/hiker/d/dr/git/raw/master/js/lsg.js');//引用本地储存插件\n        const lsg = $.require(\"hiker://page/localStorage?rule=道长仓库Pro\"); //引用子页面本地储存插件\n        let local_ms = lsg.getItem('timeout');\n        let ms = parseInt(ms) || parseInt(local_ms) || 5000;\n        let max_count = Math.ceil(ms / 250);\n        log(\"本次嗅探超时:\" + ms + \"共计待抓包:\" + max_count + \"次\");\n        showLoading('嗅探中，若失败就切换web嗅探...');\n        let _x5 = $.toString((isVideo, rechange, playUrl, max_count, PC_UA, isBadVideo) => {\n            try {\n                if (typeof (fba) == 'undefined' || !fba) {\n                    var fba = fy_bridge_app;\n                }\n                try {\n                    if (typeof (request) == 'undefined' || !request) {\n                        eval(fba.getInternalJs());\n                    }\n                } catch (e) {\n                    fba.log(e.message);\n                }\n                fba.putVar(\"_x5jxUrl\", playUrl);\n                if (window.count == null) {\n                    window.count = 1;\n                }\n                let text = '';\n                try {\n                    text = document.querySelector(\"body\").innerText;\n                } catch (e) {\n                    fba.log(e.message)\n                }\n                if (/触发了防盗链|未授权|接口防盗/.test(text) && window.count === 1) {\n                    fba.log(\"检测到有授权，开始过授权\");\n                    //location.reload();\n                    location.href = fba.getVar(\"_x5jxUrl\");\n                }\n                window.count++;\n                // fba.log('count:'+window.count+',max_count:'+max_count);\n                if (window.count >= max_count) {\n                    fba.log(\"超过\" + max_count * 250 + \"毫秒未获取到资源地址，跳到源网页,以下是加载过的地址\");\n                    try {\n                        let text = document.querySelector(\"body\").innerText;\n                        // fba.log(text);\n                    } catch (e) {\n                        fba.log(e.message)\n                    }\n                    fba.log(JSON.stringify(_getUrls()));\n                    return fba.getVar(\"_x5jxUrl\");\n                }\n\n                function muteMe(elem) {\n                    try {\n                        elem.pause();\n                    } catch (e) { }\n                }\n                var videos = document.querySelectorAll(\"video\"),\n                    audios = document.querySelectorAll(\"audio\"),\n                    v2 = document.querySelectorAll(\"embed\"),\n                    v3 = document.querySelectorAll(\"#player\");\n                try {\n                    [].forEach.call(videos, function (video) {\n                        muteMe(video);\n                    });\n                } catch (e) { }\n                try {\n                    [].forEach.call(audios, function (audio) {\n                        muteMe(audio);\n                    });\n                } catch (e) { }\n                try {\n                    [].forEach.call(v2, function (v) {\n                        muteMe(v);\n                    });\n                } catch (e) { }\n                try {\n                    [].forEach.call(v3, function (v) {\n                        muteMe(v);\n                    });\n                } catch (e) { }\n                var urls = _getUrls();\n                // fba.log(JSON.stringify(urls));\n                try {\n                    for (let i in urls) {\n                        let u = urls[i];\n                        try {\n                            u = decodeURIComponent(u);\n                        } catch (e) {\n                            u = unescape(u);\n                        }\n                        //\n                        if (/url=http/.test(u)) {\n                            u = u.split(\"url=\").slice(-1)[0];\n                            // fba.log(\"url分割:\"+u);\n                        } else if (/url=\\//.test(u) && /\\.m3u8/.test(u)) {\n                            let host = u.match(/(.*)\\/\\/(.*?)\\//)[0];\n                            u = host + u.split(\"url=\").slice(-1)[0];\n                            // fba.log(\"url分割:\"+u);\n                        } else if (/vid=http/.test(u)) {\n                            u = u.split(\"vid=\").slice(-1)[0];\n                            fba.log(\"vid分割:\" + u);\n                        } else if (/vid=\\//.test(u) && /\\.m3u8/.test(u)) {\n                            let host = u.match(/(.*)\\/\\/(.*?)\\//)[0];\n                            u = host + u.split(\"vid=\").slice(-1)[0];\n                            fba.log(\"vid分割:\" + u);\n                        } else if (/\\?(.*)=http/.test(u) && /\\.m3u8/.test(u)) {\n                            u = \"http\" + u.split(/\\?(.*)=http/).slice(-1)[0];\n                            fba.log(\"其他分割:\" + u);\n                        }\n                        //|index\\.m3u8$\n                        else if (/\\/1\\.m3u8/.test(u)) {\n                            continue;\n                        }\n                        u = u.replace(/&from=.*|&next=.*|&jump=.*/, '');\n                        let realUrl = isVideo(u, rechange);\n                        if (typeof (realUrl) == 'string' && !isBadVideo(u)) { //过滤吊毛视频\n                            //fy_bridge_app.setWebUa(PC_UA);\n                            if (typeof (fba.getHeaderUrl) !== 'undefined' && typeof (rechange) !== 'function') {\n                                // let backUrl = fba.getHeaderUrl(u.replace(\";{\",\"#isVideo=true#;{\"));\n                                let backUrl = fba.getHeaderUrl(urls[i]).replace(';{', '#ignoreImg=true##isVideo=true#;{');\n                                let u1 = backUrl.split('#ignoreImg')[0];\n                                let u2 = '#ignoreImg' + backUrl.split('#ignoreImg')[1];\n                                u1 = u1.replace(/&from=.*|&next=.*|&jump=.*/, '');\n                                if (/url=http/.test(u1)) {\n                                    u1 = u1.split(\"url=\").slice(-1)[0];\n                                } else if (/url=\\//.test(u1) && /\\.m3u8/.test(u1)) {\n                                    let host1 = u1.match(/(.*)\\/\\/(.*?)\\//)[0];\n                                    u1 = host1 + u1.split(\"url=\").slice(-1)[0];\n                                    // fba.log(\"url分割:\"+u);\n                                } else if (/vid=http/.test(u1)) {\n                                    u1 = u1.split(\"vid=\").slice(-1)[0];\n                                } else if (/vid=\\//.test(u1) && /\\.m3u8/.test(u1)) {\n                                    let host1 = u1.match(/(.*)\\/\\/(.*?)\\//)[0];\n                                    u1 = host1 + u1.split(\"vid=\").slice(-1)[0];\n                                } else if (/\\?(.*)=http/.test(u1) && /\\.m3u8/.test(u1)) {\n                                    u1 = \"http\" + u1.split(/\\?(.*)=http/).slice(-1)[0];\n                                }\n                                backUrl = u1 + u2;\n                                // fba.log('返回自动加cookie链接:'+backUrl);\n                                fba.log('返回链接:' + u + '并自动加了cookie,具体cookie在视频播放处查看');\n                                // return backUrl;\n                                return JSON.stringify({\n                                    urls: [u1 + '#ignoreImg=true##isVideo=true#'],\n                                    names: ['dm盒子'],\n                                    danmu: fba.getVar('dm_share', '获取失败')\n                                }) + u2.replace('#ignoreImg=true##isVideo=true#;', ';');\n                            } else {\n                                fba.log(\"返回仓库x5免嗅结果:\" + realUrl);\n                                return realUrl\n                            }\n                        }\n                    }\n                } catch (e) {\n                    fba.log(e.message)\n                }\n            } catch (e) {\n                // fy_bridge_app.log('x5大范围错误:'+e.message);\n                alert('x5大范围错误:' + e.message);\n                return 'toast://报错结束x5'\n            }\n        }, isVideo, rechange, playUrl, max_count, PC_UA, isBadVideo);\n        let useWeb = lsg.getItem(\"通免\", \"X5\") === \"WEB\";\n        //log(\"仓库使用web通免替代x5:\"+useWeb);\n        let ruleHead = useWeb && parseInt(getAppVersion()) >= 2339 ? \"webRule://\" : \"x5Rule://\";\n        let x5Url = ruleHead + playUrl + '@' + _x5;\n        return x5Url\n    }\n    // 判断弹幕线路来源\n    dm=$.require('hiker://page/dmFun?rule=dm盒子').dmRoute(vipUrl);\n    dmPath = getPath(getVar('dm_share')).slice(7);\n    var {copyFile,moveFile} = $.require(\"hiker://page/fileAPI?rule=dm盒子\");\n    dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\n    saveLocal=dmSettings.saveLocal;\n    doubleWrite=dmSettings.doubleWrite;\n    if (saveLocal) {\n        destinationDir='/storage/emulated/0/Download/海阔视界/danmu/';\n        if (doubleWrite) {\n            copyFile(dmPath,destinationDir);\n        }else{\n            moveFile(dmPath,destinationDir);\n        }\n    }\n    return x5rule(playUrl, 8000);\n}\n\n// 魔断JSON免嗅解析调用\n$.exports.Jsondm = function (vipUrl, bfurl) {\n    dm=$.require('hiker://page/dmFun?rule=dm盒子').dmRoute(vipUrl);\n    dmPath = getPath(getVar('dm_share')).slice(7);\n    var {copyFile,moveFile} = $.require(\"hiker://page/fileAPI?rule=dm盒子\");\n    dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\n    saveLocal=dmSettings.saveLocal;\n    doubleWrite=dmSettings.doubleWrite;\n    if (saveLocal) {\n        destinationDir='/storage/emulated/0/Download/海阔视界/danmu/';\n        if (doubleWrite) {\n            copyFile(dmPath,destinationDir);\n        }else{\n            moveFile(dmPath,destinationDir);\n        }\n    }\n    return JSON.stringify({\n        urls: [bfurl],\n        names: ['dm盒子'],\n        danmu: getVar('dm_share', '获取失败')\n    });\n}\n\n// 魔断弹幕解析引擎调用\n$.exports.parseDm = function (vipUrl, searchType, searchName) {\n    try {\n        // 获取弹幕\n        dm=$.require('hiker://page/dmFun?rule=dm盒子').dmRoute(vipUrl);\n        if (dm===false) {\n            log(\"弹幕获取出错了呜呜呜\");\n        }\n        dmPath = getPath(getVar('dm_share')).slice(7);\n        var {copyFile,moveFile} = $.require(\"hiker://page/fileAPI?rule=dm盒子\");\n        dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\n        saveLocal=dmSettings.saveLocal;\n        doubleWrite=dmSettings.doubleWrite;\n        if (saveLocal) {\n            destinationDir='/storage/emulated/0/Download/海阔视界/danmu/';\n            if (doubleWrite) {\n                copyFile(dmPath,destinationDir);\n            }else{\n                moveFile(dmPath,destinationDir);\n            }\n        }\n        // 调用搜索\n        filmName = getPageTitle().replace(\"芒果 TV-\",\"\").replace(\"优酷视频-\",\"\").replace(\"腾讯视频-\",\"\").replace(\"爱奇艺-\",\"\").replace(\"哔哩哔哩-\",\"\");\n        switch (searchType) {\n            case 1:\n                return \"hiker://search?s=\" + filmName + \"&rule=\" + searchName + \"&simple=true\";\n            case 2:\n                return \"hiker://search?s=\" + filmName + \"&group=\" + searchName + \"&simple=true\";\n            default:\n                return \"toast://不要乱写参数！1-调用小程序搜索；2-调用小程序分组搜索\";\n        }\n    } catch (e) {\n        return \"toast://出错了！就这样吧！\";\n    }\n}\n"},{"col_type":"movie_3","name":"通免调用汇总","path":"lazyToX5","rule":"// 原生嗅探-通免\n$.exports.videoX5 = function () {\n    // 定位真实线路-常规\n    let ts = /ixigua|iqiyi|qq.com|mgtv|le.com|bili|sohu|youku|pptv|cctv|1905.com/;\n    if (!input.match(ts)) {\n        try {\n            let From = JSON.parse(request(input).match(/var player_.*?=(.*?)</)[1]);\n            let 加密 = From.encrypt;\n            // let 来自 = From.from;\n            原链 = From.url;\n            //log(From)\n            if (加密 == '1') {\n                原链 = unescape(原链);\n            } else if (加密 == '2') {\n                原链 = unescape(base64Decode(原链));\n            }\n            if (/\\.mp4|\\.m3u8|\\.flv/.test(原链)) {\n                showLoading('获取不到官网地址，将直链播放');\n                return JSON.stringify({\n                    urls: [原链],\n                    names: ['预留弹幕接口'],\n                    danmu: getVar('dm_share', '')\n                });\n            } else if (ts.test(原链)) {\n                官链 = 原链;\n            } else {\n                showLoading('获取不到官网地址，将直链播放');\n                //盗版站地址\n                return JSON.stringify({\n                    urls: [playParse.playerS(input)],\n                    names: ['预留弹幕接口'],\n                    danmu: getVar('dm_share', '')\n                });\n            }\n        } catch (e) {\n            // 若发生异常则直接为空链走嗅探\n            官链 = 'hiker://empty';\n        }\n    } else {\n        官链 = input;\n    }\n    // 判断弹幕线路来源\n    dm = $.require('hiker://page/dmFun?rule=dm盒子').dmRoute(官链);\n    dmPath = getPath(getVar('dm_share')).slice(7);\n    var {copyFile,moveFile} = $.require(\"hiker://page/fileAPI?rule=dm盒子\");\n    dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\n    saveLocal=dmSettings.saveLocal;\n    doubleWrite=dmSettings.doubleWrite;\n    if (saveLocal) {\n        destinationDir='/storage/emulated/0/Download/海阔视界/danmu/';\n        if (doubleWrite) {\n            copyFile(dmPath,destinationDir);\n        }else{\n            moveFile(dmPath,destinationDir);\n        }\n    }\n    return JSON.stringify({\n        urls: [\"video://\" + input],\n        names: ['dm盒子'],\n        danmu: getVar(\"dm_share\")\n    })\n}\n\n// 道长仓库通免\n$.exports.drX5 = function () {\n    function x5rule(playUrl, ms, tm, rechange) {\n        // log('调用仓库免嗅探传参超时为:'+ms);\n        tm = parseInt(tm) || 5000;\n        const {\n            isVideo,\n            getHeaders,\n            isBadVideo\n        } = $.require('hiker://page/globalParse?rule=道长仓库Pro');\n        let realUrl = isVideo(playUrl, rechange);\n        //log(realUrl);\n        if (typeof (realUrl) == 'string') { //bool值就是失败\n            try {\n                let rurl = realUrl.split(\";\")[0].split(\"#\")[0];\n                return JSON.parse(request(rurl, {\n                    timeout: tm\n                })).url\n            } catch (e) {\n                return realUrl\n            }\n            //return realUrl\n        }\n        //log(\"访问超时:\"+tm);\n        log(\"尝试道长仓库x5免嗅:\" + playUrl);\n        clearVar(\"_x5jxUrl\");\n        let bad = $(\"网络不佳或者疑似对方网站挂了，你要查看其网页吗？\").confirm((playUrl) => {\n            log(\"网站看起来挂了:\" + playUrl);\n            return playUrl\n        }, playUrl);\n        try {\n            var back = request(playUrl, {\n                headers: getHeaders(playUrl),\n                timeout: tm\n            });\n            //var back=fetch(playUrl,{headers: {'User-Agent': PC_UA}});\n            if (!back) {\n                log(\"网站\" + playUrl + \"确实啥也没返回\");\n                return bad\n            } else if (/#EXTINF/.test(back)) {\n                //let lcache=\"/storage/emulated/0/Android/data/com.example.hikerview/files/Documents/cache/video.m3u8\";\n                //writeFile(lcache,back);\n                //return lcache+\"##\"+playUrl+\"#isVideo=true#\"\n                playUrl = cacheM3u8(playUrl);\n                return playUrl\n            } else if ((!/触发了防盗链|未授权|接口防盗/.test(back)) && (!/http|url/.test(back)) && (!/msg|code|html/.test(back))) {\n                log(back);\n                return 'toast://疑似对方数据加密了，具体数据看日志'\n            }\n        } catch (e) {\n            log(e.message);\n            return bad\n        }\n        log('开始x5免嗅探');\n        // require('https://hjdhnx.coding.net/p/hiker/d/dr/git/raw/master/js/lsg.js');//引用本地储存插件\n        const lsg = $.require(\"hiker://page/localStorage?rule=道长仓库Pro\"); //引用子页面本地储存插件\n        let local_ms = lsg.getItem('timeout');\n        let ms = parseInt(ms) || parseInt(local_ms) || 5000;\n        let max_count = Math.ceil(ms / 250);\n        log(\"本次嗅探超时:\" + ms + \"共计待抓包:\" + max_count + \"次\");\n        showLoading('嗅探中，若失败就切换web嗅探...');\n        let _x5 = $.toString((isVideo, rechange, playUrl, max_count, PC_UA, isBadVideo) => {\n            try {\n                if (typeof (fba) == 'undefined' || !fba) {\n                    var fba = fy_bridge_app;\n                }\n                try {\n                    if (typeof (request) == 'undefined' || !request) {\n                        eval(fba.getInternalJs());\n                    }\n                } catch (e) {\n                    fba.log(e.message);\n                }\n                fba.putVar(\"_x5jxUrl\", playUrl);\n                if (window.count == null) {\n                    window.count = 1;\n                }\n                let text = '';\n                try {\n                    text = document.querySelector(\"body\").innerText;\n                } catch (e) {\n                    fba.log(e.message)\n                }\n                if (/触发了防盗链|未授权|接口防盗/.test(text) && window.count === 1) {\n                    fba.log(\"检测到有授权，开始过授权\");\n                    //location.reload();\n                    location.href = fba.getVar(\"_x5jxUrl\");\n                }\n                window.count++;\n                // fba.log('count:'+window.count+',max_count:'+max_count);\n                if (window.count >= max_count) {\n                    fba.log(\"超过\" + max_count * 250 + \"毫秒未获取到资源地址，跳到源网页,以下是加载过的地址\");\n                    try {\n                        let text = document.querySelector(\"body\").innerText;\n                        // fba.log(text);\n                    } catch (e) {\n                        fba.log(e.message)\n                    }\n                    fba.log(JSON.stringify(_getUrls()));\n                    return fba.getVar(\"_x5jxUrl\");\n                }\n\n                function muteMe(elem) {\n                    try {\n                        elem.pause();\n                    } catch (e) { }\n                }\n                var videos = document.querySelectorAll(\"video\"),\n                    audios = document.querySelectorAll(\"audio\"),\n                    v2 = document.querySelectorAll(\"embed\"),\n                    v3 = document.querySelectorAll(\"#player\");\n                try {\n                    [].forEach.call(videos, function (video) {\n                        muteMe(video);\n                    });\n                } catch (e) { }\n                try {\n                    [].forEach.call(audios, function (audio) {\n                        muteMe(audio);\n                    });\n                } catch (e) { }\n                try {\n                    [].forEach.call(v2, function (v) {\n                        muteMe(v);\n                    });\n                } catch (e) { }\n                try {\n                    [].forEach.call(v3, function (v) {\n                        muteMe(v);\n                    });\n                } catch (e) { }\n                var urls = _getUrls();\n                // fba.log(JSON.stringify(urls));\n                try {\n                    for (let i in urls) {\n                        let u = urls[i];\n                        try {\n                            u = decodeURIComponent(u);\n                        } catch (e) {\n                            u = unescape(u);\n                        }\n                        //\n                        if (/url=http/.test(u)) {\n                            u = u.split(\"url=\").slice(-1)[0];\n                            // fba.log(\"url分割:\"+u);\n                        } else if (/url=\\//.test(u) && /\\.m3u8/.test(u)) {\n                            let host = u.match(/(.*)\\/\\/(.*?)\\//)[0];\n                            u = host + u.split(\"url=\").slice(-1)[0];\n                            // fba.log(\"url分割:\"+u);\n                        } else if (/vid=http/.test(u)) {\n                            u = u.split(\"vid=\").slice(-1)[0];\n                            fba.log(\"vid分割:\" + u);\n                        } else if (/vid=\\//.test(u) && /\\.m3u8/.test(u)) {\n                            let host = u.match(/(.*)\\/\\/(.*?)\\//)[0];\n                            u = host + u.split(\"vid=\").slice(-1)[0];\n                            fba.log(\"vid分割:\" + u);\n                        } else if (/\\?(.*)=http/.test(u) && /\\.m3u8/.test(u)) {\n                            u = \"http\" + u.split(/\\?(.*)=http/).slice(-1)[0];\n                            fba.log(\"其他分割:\" + u);\n                        }\n                        //|index\\.m3u8$\n                        else if (/\\/1\\.m3u8/.test(u)) {\n                            continue;\n                        }\n                        u = u.replace(/&from=.*|&next=.*|&jump=.*/, '');\n                        let realUrl = isVideo(u, rechange);\n                        if (typeof (realUrl) == 'string' && !isBadVideo(u)) { //过滤吊毛视频\n                            //fy_bridge_app.setWebUa(PC_UA);\n                            if (typeof (fba.getHeaderUrl) !== 'undefined' && typeof (rechange) !== 'function') {\n                                // let backUrl = fba.getHeaderUrl(u.replace(\";{\",\"#isVideo=true#;{\"));\n                                let backUrl = fba.getHeaderUrl(urls[i]).replace(';{', '#ignoreImg=true##isVideo=true#;{');\n                                let u1 = backUrl.split('#ignoreImg')[0];\n                                let u2 = '#ignoreImg' + backUrl.split('#ignoreImg')[1];\n                                u1 = u1.replace(/&from=.*|&next=.*|&jump=.*/, '');\n                                if (/url=http/.test(u1)) {\n                                    u1 = u1.split(\"url=\").slice(-1)[0];\n                                } else if (/url=\\//.test(u1) && /\\.m3u8/.test(u1)) {\n                                    let host1 = u1.match(/(.*)\\/\\/(.*?)\\//)[0];\n                                    u1 = host1 + u1.split(\"url=\").slice(-1)[0];\n                                    // fba.log(\"url分割:\"+u);\n                                } else if (/vid=http/.test(u1)) {\n                                    u1 = u1.split(\"vid=\").slice(-1)[0];\n                                } else if (/vid=\\//.test(u1) && /\\.m3u8/.test(u1)) {\n                                    let host1 = u1.match(/(.*)\\/\\/(.*?)\\//)[0];\n                                    u1 = host1 + u1.split(\"vid=\").slice(-1)[0];\n                                } else if (/\\?(.*)=http/.test(u1) && /\\.m3u8/.test(u1)) {\n                                    u1 = \"http\" + u1.split(/\\?(.*)=http/).slice(-1)[0];\n                                }\n                                backUrl = u1 + u2;\n                                // fba.log('返回自动加cookie链接:'+backUrl);\n                                fba.log('返回链接:' + u + '并自动加了cookie,具体cookie在视频播放处查看');\n                                // return backUrl;\n                                return JSON.stringify({\n                                    urls: [u1 + '#ignoreImg=true##isVideo=true#'],\n                                    names: ['dm盒子'],\n                                    danmu: fba.getVar(\"dm_share\")\n                                }) + u2.replace('#ignoreImg=true##isVideo=true#;', ';');\n                            } else {\n                                fba.log(\"返回仓库x5免嗅结果:\" + realUrl);\n                                return realUrl\n                            }\n                        }\n                    }\n                } catch (e) {\n                    fba.log(e.message)\n                }\n            } catch (e) {\n                // fy_bridge_app.log('x5大范围错误:'+e.message);\n                alert('x5大范围错误:' + e.message);\n                return 'toast://报错结束x5'\n            }\n        }, isVideo, rechange, playUrl, max_count, PC_UA, isBadVideo);\n        let useWeb = lsg.getItem(\"通免\", \"X5\") === \"WEB\";\n        //log(\"仓库使用web通免替代x5:\"+useWeb);\n        let ruleHead = useWeb && parseInt(getAppVersion()) >= 2339 ? \"webRule://\" : \"x5Rule://\";\n        let x5Url = ruleHead + playUrl + '@' + _x5;\n        return x5Url\n    }\n    // 定位真实线路-常规\n    let ts = /ixigua|iqiyi|qq.com|mgtv|le.com|bili|sohu|youku|pptv|cctv|1905.com/;\n    if (!input.match(ts)) {\n        try {\n            let From = JSON.parse(request(input).match(/var player_.*?=(.*?)</)[1]);\n            let 加密 = From.encrypt;\n            // let 来自 = From.from;\n            原链 = From.url;\n            //log(From):\n            if (加密 == '1') {\n                原链 = unescape(原链);\n            } else if (加密 == '2') {\n                原链 = unescape(base64Decode(原链));\n            }\n            if (/\\.mp4|\\.m3u8|\\.flv/.test(原链)) {\n                showLoading('获取不到官网地址，将直链播放');\n                return JSON.stringify({\n                    urls: [原链],\n                    names: ['预留弹幕接口'],\n                    danmu: getVar(\"dm_share\",'hiker://files/dm盒子/dm.xml')\n                });\n            } else if (ts.test(原链)) {\n                官链 = 原链;\n            } else {\n                showLoading('获取不到官网地址，将直链播放');\n                //盗版站地址\n                return JSON.stringify({\n                    urls: [playParse.playerS(input)],\n                    names: ['预留弹幕接口'],\n                    danmu: getVar(\"dm_share\",'hiker://files/dm盒子/dm.xml')\n                });\n            }\n        } catch (e) {\n            // 若发生异常则直接为空链走嗅探\n            官链 = 'https://empty.html';\n        }\n    } else {\n        官链 = input;\n    }\n    // 判断弹幕线路来源\n    dm = $.require('hiker://page/dmFun?rule=dm盒子').dmRoute(官链);\n    dmPath = getPath(getVar('dm_share')).slice(7);\n    var {copyFile,moveFile} = $.require(\"hiker://page/fileAPI?rule=dm盒子\");\n    dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\n    saveLocal=dmSettings.saveLocal;\n    doubleWrite=dmSettings.doubleWrite;\n    if (saveLocal) {\n        destinationDir='/storage/emulated/0/Download/海阔视界/danmu/';\n        if (doubleWrite) {\n            copyFile(dmPath,destinationDir);\n        }else{\n            moveFile(dmPath,destinationDir);\n        }\n    }\n    return x5rule(input, 8000);\n}\n\n\n// 香佬通免\n$.exports.classicalX5 = function () {\n    function x5rule(jiexurl, srcurl) {\n        showLoading(\"网页访问检索中，请稍候...\");\n        var video = 'webRule://' + jiexurl + '@' + $.toString((srcurl) => {\n            //fba.log(fba.getUrls());\n            var urls = _getUrls();\n            if (window.__count == null || window.__count == undefined) {\n                window.__count = 0\n            }\n            if (window.__count >= 23) {\n                // return srcurl\n                bfurl = srcurl.split(';')[0];\n                args = srcurl.match(/;[\\S\\s]+}/g)[0];\n                return JSON.stringify({\n                    urls: [bfurl],\n                    names: ['dm盒子'],\n                    danmu: fba.getVar(\"dm_share\")\n                }) + args;\n            }\n            window.__count = window.__count + 1;\n            if (window.__count > 1 && window.__count <= 3 && window.__count != null && window.__count != undefined) {\n                if (document.querySelector('body').innerText.search(/触发了防盗链|未授权|接口防盗|请到主站观看/) != -1) {\n                    if (!srcurl) {\n                        fba.log('尝试跳防盗验证一');\n                        location.href = location.href;\n                    } else {\n                        fba.log('尝试跳防盗验证二');\n                        location.href = srcurl\n                    }\n                };\n            } else if (window.__count > 3 && window.__count != null && window.__count != undefined) {\n                if (urls.length < 1) {\n                    fba.hideLoading();\n                    return 'toast://检索失败，可能链接无法访问。';\n                } else if (urls.length == 1) {\n                    fba.log('尝试直链与JSON解析');\n                    if (urls[0].match(/dycdn\\-tos\\.pstatp|\\.m3u8|\\.mp4|\\.flv|netease\\.com|video_mp4|type\\=m3u8|pt\\=m3u8|\\/video\\/tos\\//) && !urls[0].match(/\\.html|m3u8\\.tv|m3u8\\.pw|\\&next|ac\\=dm|\\=http|https\\:\\/\\/[\\d]\\.m3u8|\\?url\\=\\/m3u8/)) {\n                        //fy_bridge_app.log(urls[0])\n                        if (urls[0].indexOf('bilivideo') != -1) {\n                            // return urls[0] + ';{Referer@https://www.bilibili.com&&User-Agent@Mozilla/5.0}';\n                            return JSON.stringify({\n                                urls: [urls[0]],\n                                names: ['dm盒子'],\n                                danmu: fba.getVar(\"dm_share\"),\n                                headers: [{\n                                    'Referer': 'https://www.bilibili.com',\n                                    'User-Agent': 'Mozilla/5.0'\n                                }]\n                            });\n                        } else if (urls[0].indexOf('titan.mgtv.com') != -1) {\n                            // return urls[0] + '#isVideo=true#' + ';{Referer@www.mgtv.com&&User-Agent@Mozilla/5.0}';\n                            return JSON.stringify({\n                                urls: [urls[0] + '#isVideo=true#'],\n                                names: ['dm盒子'],\n                                danmu: fba.getVar(\"dm_share\"),\n                                headers: [{\n                                    'Referer': 'www.mgtv.com',\n                                    'User-Agent': 'Mozilla/5.0'\n                                }]\n                            });\n                        } else {\n                            // return urls[0]\n                            bfurl = urls[0].split(';')[0];\n                            args = urls[0].match(/;[\\S\\s]+}/g)[0];\n                            return JSON.stringify({\n                                urls: [bfurl],\n                                names: ['dm盒子'],\n                                danmu: fba.getVar(\"dm_share\")\n                            }) + args;\n                        }\n                    } else if (location.href.match(/dycdn\\-tos\\.pstatp|\\.m3u8|\\.mp4|\\.flv|netease\\.com|video_mp4|type\\=m3u8|pt\\=m3u8|\\/video\\/tos\\//) && !location.href.match(/\\.html|m3u8\\.tv|m3u8\\.pw|\\&next|ac\\=dm|\\=http|https\\:\\/\\/[\\d]\\.m3u8|\\?url\\=\\/m3u8/)) {\n                        // return location.href;\n                        bfurl = location.href.split(';')[0];\n                        args = location.href.match(/;[\\S\\s]+}/g)[0];\n                        return JSON.stringify({\n                            urls: [bfurl],\n                            names: ['dm盒子'],\n                            danmu: fba.getVar(\"dm_share\")\n                        }) + args;\n                    } else {\n                        var html = fba.fetch(location.href, {});\n                        if (!/\\<meta/.test(html) && !/\\<html/.test(html)) {\n                            // return JSON.parse(html).url;\n                            bfurl = JSON.parse(html).url.split(';')[0];\n                            args = JSON.parse(html).url.match(/;[\\S\\s]+}/g)[0];\n                            return JSON.stringify({\n                                urls: [bfurl],\n                                names: ['dm盒子'],\n                                danmu: fba.getVar(\"dm_share\")\n                            }) + args;\n                        } else if (/没有找到站点|网页无法打开|404 Not Found|备案后可继续访问/.test(html)) {\n                            // return location.href.substring(location.href.indexOf('=http') + 1);\n                            bfurl = location.href.substring(location.href.indexOf('=http') + 1).split(';')[0];\n                            args = location.href.substring(location.href.indexOf('=http') + 1).match(/;[\\S\\s]+}/g)[0];\n                            return JSON.stringify({\n                                urls: [bfurl],\n                                names: ['dm盒子'],\n                                danmu: fba.getVar(\"dm_share\")\n                            }) + args;\n                        } else {\n                            // return location.href\n                            bfurl = location.href.split(';')[0];\n                            args = location.href.match(/;[\\S\\s]+}/g)[0];\n                            return JSON.stringify({\n                                urls: [bfurl],\n                                names: ['dm盒子'],\n                                danmu: fba.getVar(\"dm_share\")\n                            }) + args;\n                        }\n                    };\n                } else {\n                    fba.log('日志检索第' + window.__count + '次');\n                    for (var i in urls) {\n                        if (urls[i].match(/dycdn\\-tos\\.pstatp|\\.m3u8|\\.mp4|\\.flv|netease\\.com|video_mp4|type\\=m3u8|pt\\=m3u8|\\/video\\/tos\\//) && !urls[i].match(/\\.html|m3u8\\.tv|m3u8\\.pw|\\&next|ac\\=dm|\\=http|https\\:\\/\\/[\\d]\\.m3u8|\\?url\\=\\/m3u8|\\.css|\\.js\\?/)) {\n                            //fy_bridge_app.log(urls[i])\n                            if (fy_bridge_app.getHeaderUrl) {\n                                // return fy_bridge_app.getHeaderUrl(urls[i]).replace(\";{\", \"#ignoreImg=true##isVideo=true#;{\");\n                                bfurl = fy_bridge_app.getHeaderUrl(urls[i]).replace(\";{\", \"#ignoreImg=true##isVideo=true#;{\").split(';')[0];\n                                args = fy_bridge_app.getHeaderUrl(urls[i]).replace(\";{\", \"#ignoreImg=true##isVideo=true#;{\").match(/;[\\S\\s]+}/g)[0];\n                                return JSON.stringify({\n                                    urls: [bfurl],\n                                    names: ['dm盒子'],\n                                    danmu: fba.getVar(\"dm_share\")\n                                }) + args;\n                            } else {\n                                if (urls[i].indexOf('bilivideo') != -1) {\n                                    // return urls[i] + ';{Referer@https://www.bilibili.com&&User-Agent@Mozilla/5.0}';\n                                    return JSON.stringify({\n                                        urls: [urls[i]],\n                                        names: ['dm盒子'],\n                                        danmu: fba.getVar(\"dm_share\"),\n                                        headers: [{\n                                            'Referer': 'https://www.bilibili.com',\n                                            'User-Agent': 'Mozilla/5.0'\n                                        }]\n                                    });\n                                } else if (urls[i].indexOf('titan.mgtv.com') != -1) {\n                                    // return urls[i] + '#isVideo=true#' + ';{Referer@www.mgtv.com&&User-Agent@Mozilla/5.0}';\n                                    return JSON.stringify({\n                                        urls: [urls[i] + '#isVideo=true#'],\n                                        names: ['dm盒子'],\n                                        danmu: fba.getVar(\"dm_share\"),\n                                        headers: [{\n                                            'Referer': 'www.mgtv.com',\n                                            'User-Agent': 'Mozilla/5.0'\n                                        }]\n                                    });\n                                } else if (urls[i].indexOf('juhaokan') != -1) {\n                                    // return urls[i] + ';{Referer@https://www.juhaokan.cc/}';\n                                    return JSON.stringify({\n                                        urls: [urls[i]],\n                                        names: ['dm盒子'],\n                                        danmu: fba.getVar(\"dm_share\"),\n                                        headers: [{\n                                            'Referer': 'https://www.juhaokan.cc/'\n                                        }]\n                                    });\n                                } else if (urls[i].indexOf('ojbk') != -1) {\n                                    // return urls[i] + ';{Referer@https://v.ojbkjx.com/}';\n                                    return JSON.stringify({\n                                        urls: [urls[i]],\n                                        names: ['dm盒子'],\n                                        danmu: fba.getVar(\"dm_share\"),\n                                        headers: [{\n                                            'Referer': 'https://v.ojbkjx.com/'\n                                        }]\n                                    });\n                                } else if (urls[i].indexOf('wkfile') != -1) {\n                                    // return urls[i] + ';{Referer@https://fantuan.wkfile.com/}';\n                                    return JSON.stringify({\n                                        urls: [urls[i]],\n                                        names: ['dm盒子'],\n                                        danmu: fba.getVar(\"dm_share\"),\n                                        headers: [{\n                                            'Referer': 'https://fantuan.wkfile.com/'\n                                        }]\n                                    });\n                                } else if (urls[i].indexOf('shenglinyiyang') != -1) {\n                                    // return urls[i] + ';{Referer@https://zyz.sdljwomen.com/}';\n                                    return JSON.stringify({\n                                        urls: [urls[i]],\n                                        names: ['dm盒子'],\n                                        danmu: fba.getVar(\"dm_share\"),\n                                        headers: [{\n                                            'Referer': 'https://zyz.sdljwomen.com/'\n                                        }]\n                                    });\n                                } else if (urls[i].indexOf('peizq.online') != -1) {\n                                    // return urls[i] + ';{Referer@https://play.peizq.online/}';\n                                    return JSON.stringify({\n                                        urls: [urls[i]],\n                                        names: ['dm盒子'],\n                                        danmu: fba.getVar(\"dm_share\"),\n                                        headers: [{\n                                            'Referer': 'https://play.peizq.online/'\n                                        }]\n                                    });\n                                } else {\n                                    // return urls[i] + '#isVideo=true#'\n                                    bfurl = (urls[i] + '#isVideo=true#').split(';')[0];\n                                    args = (urls[i] + '#isVideo=true#').match(/;[\\S\\s]+}/g)[0];\n                                    return JSON.stringify({\n                                        urls: [bfurl],\n                                        names: ['dm盒子'],\n                                        danmu: fba.getVar(\"dm_share\")\n                                    }) + args;\n                                }\n                            }\n                        }\n                    } //end for i\n                }\n            }\n        }, srcurl);\n        return video\n    }\n    // 定位真实线路-常规\n    let ts = /ixigua|iqiyi|qq.com|mgtv|le.com|bili|sohu|youku|pptv|cctv|1905.com/;\n    if (!input.match(ts)) {\n        try {\n            let From = JSON.parse(request(input).match(/var player_.*?=(.*?)</)[1]);\n            let 加密 = From.encrypt;\n            // let 来自 = From.from;\n            原链 = From.url;\n            //log(From):\n            if (加密 == '1') {\n                原链 = unescape(原链);\n            } else if (加密 == '2') {\n                原链 = unescape(base64Decode(原链));\n            }\n            if (/\\.mp4|\\.m3u8|\\.flv/.test(原链)) {\n                showLoading('获取不到官网地址，将直链播放');\n                return JSON.stringify({\n                    urls: [原链],\n                    names: ['预留弹幕接口'],\n                    danmu: getVar(\"dm_share\",'hiker://files/dm盒子/dm.xml')\n                });\n            } else if (ts.test(原链)) {\n                官链 = 原链;\n            } else {\n                showLoading('获取不到官网地址，将直链播放');\n                //盗版站地址\n                return JSON.stringify({\n                    urls: [playParse.playerS(input)],\n                    names: ['预留弹幕接口'],\n                    danmu: getVar(\"dm_share\",'hiker://files/dm盒子/dm.xml')\n                });\n            }\n        } catch (e) {\n            // 若发生异常则直接为空链走嗅探\n            官链 = 'https://empty.html';\n        }\n    } else {\n        官链 = input;\n    }\n    // 判断弹幕线路来源\n    dm = $.require('hiker://page/dmFun?rule=dm盒子').dmRoute(官链);\n    dmPath = getPath(getVar('dm_share')).slice(7);\n    var {copyFile,moveFile} = $.require(\"hiker://page/fileAPI?rule=dm盒子\");\n    dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\n    saveLocal=dmSettings.saveLocal;\n    doubleWrite=dmSettings.doubleWrite;\n    if (saveLocal) {\n        destinationDir='/storage/emulated/0/Download/海阔视界/danmu/';\n        if (doubleWrite) {\n            copyFile(dmPath,destinationDir);\n        }else{\n            moveFile(dmPath,destinationDir);\n        }\n    }\n    return x5rule(input, input);\n}\n"},{"col_type":"movie_3","name":"聚合搜索","path":"search_rules","rule":""},{"name":"影视二级","path":"filmerji","rule":"js:\nvar danmuSetting = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\nif (danmuSetting.erjiPage == '弹幕列表') {\n    eval(JSON.parse(request('hiker://page/danmuListpage?rule=dm盒子')).rule);\n} else {\n    var d = [];\n    putMyVar('简插', $.toString(() => {\n        let titleArr = [];\n        setFile = readFile('hiker://files/rules/DuanNian/MyParse.json');\n        try {\n            eval('json=' + setFile);\n        } catch (e) {\n            log('Json解析发生了错误:' + e.message);\n        }\n        titleArr = json.title;\n        let barry1 = ['✍️辅助'];\n        let barry2 = ['📦️魔断'];\n        let barry3 = ['🔍搜索'];\n        titleArr = barry3.concat(titleArr);\n        titleArr = barry2.concat(titleArr);\n        titleArr = barry1.concat(titleArr);\n        eval('op=json.settings.' + 来源);\n        titleArr = titleArr.map((it) => {\n            return it === op ? '👉' + it : it;\n        });\n        putMyVar('解析数组', titleArr);\n        putMyVar('setFile', setFile);\n    }))\n    eval(JSON.parse(request('hiker://page/lazy')).rule);\n    switch (MY_PARAMS.from) {\n        case 'qiyi':\n            MY_URL = MY_PARAMS.url.replace('www', 'm');\n            html = request(MY_URL);\n            viedeoInfo = JSON.parse(html.match(/\"albumInfo\"[\\S\\s]+(?=,\"albumListInfo\")/)[0].replace('\"albumInfo\":', ''));\n            infoAdd = JSON.parse(html.match(/\"videoInfo\":{[\\S\\s]+}(?=,\"videoType\")/)[0].replace('\"videoInfo\":', ''));\n            影片名称 = viedeoInfo.albumName ? viedeoInfo.albumName : infoAdd.videoName;\n            // 第二标题 = html.match(/\"focus\"[\\S\\s]+(?=,\"isEffect\")/)[0].replace('\"focus\":', '');\n            第二标题 = infoAdd.focus;\n            得分 = infoAdd.score;\n            封面 = viedeoInfo.imageUrl ? 'https:' + viedeoInfo.imageUrl.replace('\\u002F', '/').replace('.jpg', '_260_360.jpg') + \"@Referer=\" : 'https:' + infoAdd.imageUrl.replace('\\u002F', '/') + \"@Referer=\";\n            类型 = infoAdd.channelName;\n            简介 = viedeoInfo.desc ? viedeoInfo.desc : infoAdd.desc;\n            导演 = infoAdd.directors;\n            主演 = infoAdd.mainActors;\n            标签 = infoAdd.tags;\n            try {\n                更新日历 = viedeoInfo.updateStrategy;\n                更新进度 = viedeoInfo.showContent.replace('\\u002F', '/') ? viedeoInfo.showContent.replace('\\u002F', '/') : viedeoInfo.showContent;\n                追剧日历 = 更新日历 == '' ? '<font color=\"red\">' + 更新进度 + '</font>' : 更新日历 + '\\t<font color=\"red\">' + 更新进度 + '</font>';\n            } catch (e) {\n                追剧日历 = '没有更新计划~';\n            }\n            上映时间 = infoAdd.issueTime;\n            剧集ID = infoAdd.albumQipuId;\n            短讯 = \"⭐\" + 类型 + \"⭐\" + (第二标题 ? 第二标题.replace(/\"/g, '') : '') + (得分 == 0 ? '' : '-' + 得分 + '分-') + 上映时间 + '\\n' + 标签;\n            // 重定义二级页面数据\n            setPageTitle(影片名称);\n            setPagePicUrl(封面);\n            // 前置参数和预处理---\n            var Color = \"#19B89D\";\n            var 每页集数 = 20;\n            var 搜索模式 = '分组';\n            var 调用名称 = '简影';\n            putMyVar('折叠', '关');\n            putMyVar('日历', '关');\n\n            // 清除变量\n            addListener('onClose', $.toString(() => {\n                clearMyVar('分集起');\n                clearMyVar('分集终');\n                clearMyVar('lazy');\n                clearMyVar('剧集列表');\n                clearMyVar('影片类型');\n            }))\n            // 设置动态最新章节\n            setLastChapterRule('js:' + $.toString((MY_URL) => {\n                eval(JSON.parse(request('hiker://page/getUpdate?rule=爱奇艺.cy')).rule);\n            }, MY_URL));\n            // 页面内容正文---\n            // 基本信息模块\n            d.push({\n                title: 短讯,\n                desc: 简介 == '' ? '暂无简介' : 简介.substring(0, 45) + '‘‘’’…<font color=\"#1C1C1C\">详情</font>',\n                img: 封面,\n                url: $().rule((简介) => {\n                    res = {};\n                    var d = [];\n                    d.push({\n                        title: '影片简介：' + '\\n\\t\\t\\t\\t\\t\\t\\t' + 简介,\n                        col_type: 'long_text'\n                    });\n                    res.data = d;\n                    setHomeResult(res);\n                }, 简介),\n                col_type: 'movie_1_vertical_pic_blur',\n                extra: {\n                    longClick: [{\n                        title: '预告、花絮开关', js: $.toString(() => {\n                            if (getItem('previewSwitch', 'fold') == 'fold') {\n                                setItem('previewSwitch', 'open');\n                                refreshPage(true);\n                                return \"toast://预告已经切换为展示~\";\n                            } else {\n                                setItem('previewSwitch', 'fold');\n                                refreshPage(true);\n                                return \"toast://预告不再展示~\";\n                            }\n                        }),\n                    }]\n                }\n            });\n            // 追剧日历模块\n            d.push({\n                title: '‘‘’’<small><font><font color=\"#098AC1\">📅追剧</font></small>',\n                url: $('#noLoading#').lazyRule((追剧日历) => {\n                    if (getMyVar('日历', '关') == '开') {\n                        deleteItem('追剧日历');\n                        putMyVar('日历', '关');\n                    } else {\n                        addItemAfter('显示模式', {\n                            title: 追剧日历,\n                            col_type: \"rich_text\",\n                            extra: {\n                                id: '追剧日历'\n                            }\n                        });\n                        putMyVar('日历', '开');\n                    }\n                    return 'toast://已切换日历为:' + getMyVar('日历', '开')\n                }, 追剧日历),\n                col_type: 'text_4'\n            });\n            // 豆瓣影讯模块\n            d.push({\n                title: '‘‘’’<small><font color=\"#098AC1\">🍃豆瓣</font></small>',\n                url: 'hiker://search?s=' + 影片名称 + '&rule=青豆',\n                col_type: 'text_4',\n                extra: {\n                    id: '豆瓣影讯'\n                }\n            });\n            // 演职人员模块\n            if (导演 && 主演) {\n                d.push({\n                    title: '‘‘’’<small><font color=\"#098AC1\">⬇️演职</font></small>',\n                    url: $('#noLoading#').lazyRule((导演, 主演) => {\n                        if (getMyVar('折叠', '关') == '开') {\n                            deleteItem('演职数据');\n                            putMyVar('折叠', '关');\n                        } else {\n                            addItemAfter('显示模式', {\n                                title: '<b>导演:</b>' + 导演 + '<br><b>主演:</b>' + 主演,\n                                col_type: \"rich_text\",\n                                extra: {\n                                    id: '演职数据'\n                                }\n                            });\n                            putMyVar('折叠', '开');\n                        }\n                        return 'toast://已切换折叠为:' + getMyVar('折叠', '开')\n                    }, 导演, 主演),\n                    col_type: 'text_4',\n                    extra: {\n                        id: '演职人员'\n                    }\n                })\n            }\n            // 显示模式更改模块\n            d.push({\n                title: '‘‘’’<small><font color=\"#098AC1\">🔃' + getItem('模式', '双边') + '</font></small>',\n                url: $('#noLoading#').lazyRule((每页集数) => {\n                    if (getItem('模式', '双边') == '列表') {\n                        for (let index = 1; index <= 每页集数; index++) {\n                            updateItem('qiyi' + index, {\n                                col_type: 'movie_2',\n                            });\n                        }\n                        setItem('模式', '双边')\n                    } else {\n                        for (let index = 1; index <= 每页集数; index++) {\n                            updateItem('qiyi' + index, {\n                                col_type: 'movie_1_left_pic',\n                            });\n                        }\n                        setItem('模式', '列表')\n                    }\n                    updateItem('显示模式', {\n                        title: '‘‘’’<small><font color=\"#098AC1\">🔃' + getItem('模式', '双边') + '</font></small>',\n                    });\n                    return 'toast://已切换模式为:' + getItem('模式', '双边')\n                }, 每页集数),\n                col_type: 'text_4',\n                extra: {\n                    id: '显示模式'\n                }\n            });\n            // 选插模块——局部刷新版\n            来源 = 'qy';\n            eval(getMyVar('简插'));\n            d.push({\n                title: '解析：🔘<font color=\"' + Color + '\">' + op + '</font>\\t\\t页码：<font color=\"' + Color + '\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\n                url: $('#noLoading#').lazyRule((json, 来源, Color, op, 影片名称, 搜索模式, 调用名称) => {\n                    eval(getMyVar('简插'));\n                    return $(eval(getMyVar('解析数组')), 3).select((json, 来源, Color, op, 影片名称, 搜索模式, 调用名称) => {\n                        setFile = getMyVar('setFile');\n                        input = input.replace(/👉/g, '');\n                        if (input === '✍️辅助') {\n                            return $().rule(() => {\n                                eval(JSON.parse(request('hiker://page/home?rule=配置助手')).rule);\n                            })\n                        } else if (input === '📦️魔断') {\n                            return \"hiker://page/Route?rule=MyFieldᴰⁿ&type=编辑#noHistory#\";\n                        } else if (input === '🔍搜索') {\n                            if (搜索模式 == '分组') {\n                                return \"hiker://search?s=\" + 影片名称 + \"&group=\" + 调用名称;\n                            } else {\n                                return \"hiker://search?s=\" + 影片名称 + \"&rule=\" + 调用名称;\n                            }\n                        }\n                        // 原先的配置\n                        originSettings = JSON.stringify(json.settings);\n                        // 修改配置\n                        eval('json.settings.' + 来源 + '=input;');\n                        setFile = setFile.replace(originSettings, JSON.stringify(json.settings));\n                        saveFile('hiker://files/rules/DuanNian/MyParse.json', setFile);\n                        // 刷新元素\n                        eval(getMyVar('简插'));\n                        updateItem('op', {\n                            title: '解析：🔘<font color=\"' + Color + '\">' + op + '</font>\\t\\t页码：<font color=\"' + Color + '\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\n                        });\n                        return \"toast://切换解析口为:\" + input;\n                    }, json, 来源, Color, op, 影片名称, 搜索模式, 调用名称)\n                }, json, 来源, Color, op, 影片名称, 搜索模式, 调用名称),\n                img: 'hiker://files/rules/cy/tubiao/iqiyi.svg',\n                col_type: \"avatar\",\n                extra: {\n                    id: 'op'\n                }\n            });\n            // 同时设置选集和展示---\n            // 因为电影没有summary字段所以if单独出来——预告也这样处理吧~\n            if (类型 == '电影' || infoAdd.videoName.match(/预告/)) {\n                d.push({\n                    title: \"点我播放\",\n                    col_type: \"text_center_1\",\n                    url: MY_URL.replace('m', 'www') + lazy,\n                    desc: \"观影不等待...\"\n                });\n            } else {\n                // 有一部分奇葩的纪录片也是有年份的，普通接口还没有数据只好这样判断了，注意是'\"\"'~\n                if (html.match(/\"summary\":[\\S\\s]+(?=,\"count\")/)[0].replace('\"summary\":', '') != '\"\"') {\n                    putMyVar('影片类型', '综艺类型');\n                    时间线选集 = JSON.parse(html.match(/\"summary\":[\\S\\s]+(?=,\"count\")/)[0].replace('\"summary\":', ''));\n                    剧集列表 = [];\n                    // 偷懒！按啥年份和月份选集，简直浪费时间~\n                    时间线选集.forEach(list => {\n                        年份 = list.year;\n                        剧集信息 = JSON.parse(request(\"https://pcw-api.iqiyi.com/album/source/svlistinfo?cid=6&sourceid=\" + 剧集ID + \"&timelist=\" + 年份 + \"&callback=window.Q.__callbacks__.cbp5bps9\").match(/{\"code\"[\\S\\s]+}(?=\\);}catch\\(e\\){})/)[0]);\n                        剧集列表 = 剧集列表.concat(剧集信息.data[年份]);\n                    });\n                    剧集长度 = 剧集列表.length;\n                } else {\n                    putMyVar('影片类型', '电视剧');\n                    剧集信息 = JSON.parse(fetch(\"https://pcw-api.iqiyi.com/albums/album/avlistinfo?aid=\" + 剧集ID + \"&size=\" + 每页集数 + \"&page=1\" + \"&callback=window.Q.__callbacks__.cbu0ch7s\").match(/{\"code\"[\\S\\s]+}(?=\\);}catch\\(e\\){})/)[0]).data;\n                    当前集数 = 剧集信息.latestOrder;\n                    正片列表 = 剧集信息.epsodelist;\n                    预告列表 = 剧集信息.updateprevuelist;\n                    if (getItem('previewSwitch', 'fold') == 'fold') {\n                        显示的剧集列表 = 正片列表;\n                    } else {\n                        try {\n                            显示的剧集列表 = 正片列表.concat(预告列表);\n                        } catch (e) {\n                            显示的剧集列表 = 正片列表;\n                        }\n                    }\n                    剧集长度 = 当前集数;\n                }\n\n                // 滚动剧集条栏\n                if (剧集长度 > 每页集数) {\n                    putMyVar('刷新选集', $.toString(() => {\n                        putMyVar('分集起', start);\n                        putMyVar('分集终', end);\n                        eval(getMyVar('简插'));\n                        updateItem('op', {\n                            title: '解析：🔘<font color=\"' + Color + '\">' + op + '</font>\\t\\t页码：<font color=\"' + Color + '\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\n                        })\n                        // 删除\n                        for (let i = 1; i <= 每页集数; i++) {\n                            deleteItem('qiyi' + i);\n                        }\n                        // 添加\n                        lazy = getMyVar('lazy');\n                        if (getMyVar('影片类型') == '综艺类型') {\n                            剧集列表 = JSON.parse(getMyVar('剧集列表'));\n                            显示的剧集列表 = 剧集列表.slice(start - 1, end);\n                        } else {\n                            剧集信息 = JSON.parse(fetch(\"https://pcw-api.iqiyi.com/albums/album/avlistinfo?aid=\" + 剧集ID + \"&size=\" + 每页集数 + \"&page=\" + page + \"&callback=window.Q.__callbacks__.cbu0ch7s\").match(/{\"code\"[\\S\\s]+}(?=\\);}catch\\(e\\){})/)[0]).data;\n                            正片列表 = 剧集信息.epsodelist;\n                            预告列表 = 剧集信息.updateprevuelist;\n                            if (getItem('previewSwitch', 'fold') == 'fold') {\n                                显示的剧集列表 = 正片列表;\n                            } else {\n                                try {\n                                    显示的剧集列表 = 正片列表.concat(预告列表);\n                                } catch (e) {\n                                    显示的剧集列表 = 正片列表;\n                                }\n                            }\n                        }\n                        newArray = [];\n                        index = 1;\n                        显示的剧集列表.forEach(list => {\n                            if (getItem('模式', '双边') == '列表') {\n                                newArray.push({\n                                    title: list.subtitle,\n                                    img: list.imageUrl.replace('.jpg', '_480_270.jpg') + \"@Referer=\",\n                                    url: list.playUrl + lazy,\n                                    desc: (list.order ? '第' + list.order + '集' + '\\t' : '') + list.duration + '\\n更新时间:' + list.period,\n                                    col_type: 'movie_1_left_pic',\n                                    extra: {\n                                        id: 'qiyi' + index\n                                    }\n                                });\n                            } else {\n                                newArray.push({\n                                    title: list.subtitle,\n                                    img: list.imageUrl.replace('.jpg', '_480_270.jpg') + \"@Referer=\",\n                                    url: list.playUrl + lazy,\n                                    desc: (list.order ? '第' + list.order + '集' + '\\t' : '') + list.duration + '\\n更新时间:' + list.period,\n                                    col_type: 'movie_2',\n                                    extra: {\n                                        id: 'qiyi' + index\n                                    }\n                                });\n                            }\n                            index += 1;\n                        });\n                        addItemAfter(getMyVar('末页'), newArray);\n                        // putMyVar('显示的剧集列表', 显示的剧集列表);\n                    }));\n                    d.push({\n                        col_type: 'scroll_button',\n                        url: 'hiker://empty',\n                        title: '∷',\n                        extra: {\n                            id: '占位符',\n                        }\n                    })\n                    putMyVar('分集起', 1);\n                    putMyVar('分集终', 每页集数);\n                    try {\n                        putMyVar('剧集列表', 剧集列表);\n                    } catch (e) {\n                        log('电视剧没有现成的剧集列表');\n                    }\n                    总页数 = Math.ceil(剧集长度 / 每页集数);\n                    start = 1;\n                    end = 每页集数;\n                    for (let page = 1; page <= 总页数; page++) {\n                        if (end > 剧集长度) {\n                            end = 剧集长度;\n                        }\n                        d.push({\n                            title: start + '-' + end,\n                            url: $('#noLoading##noHistory#').lazyRule((start, end, Color, 来源, page, 剧集ID, 每页集数) => {\n                                eval(getMyVar('刷新选集'));\n                                return \"hiker://empty\";\n                            }, start, end, Color, 来源, page, 剧集ID, 每页集数),\n                            col_type: 'scroll_button',\n                            extra: {\n                                id: start + '-' + end\n                            }\n                        });\n                        if (end < 剧集长度) {\n                            start += 每页集数;\n                            end += 每页集数;\n                        }\n                    }\n                    // 记录末页的id\n                    putMyVar('末页', start + '-' + end);\n                } else {\n                    putMyVar('分集起', 1);\n                    putMyVar('分集终', 剧集长度);\n                }\n                // 展示剧集:\n                if (getMyVar('影片类型') == '综艺类型') {\n                    putMyVar('剧集列表', 剧集列表);\n                    显示的剧集列表 = 剧集列表.slice(0, getMyVar('分集终'));\n                }\n                // putMyVar('显示的剧集列表', 显示的剧集列表);\n                index = 1;\n                显示的剧集列表.forEach(list => {\n                    if (getItem('模式', '双边') == '列表') {\n                        d.push({\n                            title: list.subtitle,\n                            img: list.imageUrl.replace('.jpg', '_480_270.jpg') + \"@Referer=\",\n                            url: list.playUrl + lazy,\n                            desc: (list.order ? '第' + list.order + '集' + '\\t' : '') + list.duration + '\\n更新时间:' + list.period,\n                            col_type: 'movie_1_left_pic',\n                            extra: {\n                                id: 'qiyi' + index\n                            }\n                        });\n                    } else {\n                        d.push({\n                            title: list.subtitle,\n                            img: list.imageUrl.replace('.jpg', '_480_270.jpg') + \"@Referer=\",\n                            url: list.playUrl + lazy,\n                            desc: (list.order ? '第' + list.order + '集' + '\\t' : '') + list.duration + '\\n更新时间:' + list.period,\n                            col_type: 'movie_2',\n                            extra: {\n                                id: 'qiyi' + index\n                            }\n                        });\n                    }\n                    index += 1;\n                });\n            }\n            setResult(d);\n\n            break;\n        case 'youku':\n            html = request(MY_PARAMS.url);\n            try {\n                // 重新定位了\n                影片信息 = JSON.parse(html.match(/\"播放页简介组件\",\"dataNode\":\\[{[\\S\\s]+showImg[\\S\\s]+desc[\\S\\s]{0,1000}(?=,\"id\")/)[0].replace('\"播放页简介组件\",\"dataNode\":[{\"data\":', ''));\n            } catch (e) {\n                try {\n                    影片信息 = JSON.parse(html.match(/\"data\":[\\S\\s]{0,50}scorePrefix[\\S\\s]{0,30}area[\\S\\s]{0,100}img[\\S\\s]{0,300}subTitles[\\S\\s]+introTitle[\\S\\s]{0,200}desc[\\S\\s]{0,800}(?=,\"id\")/)[0].replace('\"data\":', ''));\n                } catch (e) {\n                    try {\n                        影片信息 = JSON.parse(html.match(/播放页简介组件\",\"dataNode\":\\[{\"data\":[\\S\\s]+(?=,\"id\":[0-9]{0,20},\"type\":[0-9]{0,20}},{\"data\":{\"title\":[\\S\\s]{0,200},\"isAliStar)/)[0].replace('播放页简介组件\",\"dataNode\":[{\"data\":', ''));\n                    } catch (e) {\n                        影片信息 = '';\n                    }\n                }\n            }\n            // 影片名称 = pdfh(html, 'head&&title&&Text');综艺的话标题不等于影片名称\n            影片名称 = pdfh(html, '.module-name&&Text');\n            setPageTitle(影片名称)\n            if (影片信息) {\n                剧集ID = 影片信息.showId;\n                简介 = 影片信息.desc;\n                封面 = 影片信息.img.replace('\\u002F', '/') + \"@Referer=\";\n                // 动态设置二级收藏图片（网页拦截重定向后需要自行设置）\n                setPagePicUrl(封面);\n                // 有些剧集或者说电影的更新状态或者是评分数据或者说动漫的类型是空甚至根本没有所以单独获取并做异常处理\n                try {\n                    类型 = 影片信息.mark.data.text;\n                } catch (e) {\n                    类型 = '';\n                }\n                简述 = 影片信息.subTitles[0].subtitle;\n                状态 = 影片信息.subTitles[1].subtitle;\n                if (状态 == undefined) {\n                    状态 = '完结'\n                }\n                标签 = 影片信息.showGenre;\n                if (标签 == undefined) {\n                    标签 = '';\n                }\n            } else {\n                // 针对筐出未来电影赏析而写的，事实上教育栏目最后多数也是走这里\n                try {\n                    影片地图 = JSON.parse(html.match(/\"videoMap\":[\\S\\s]+(?=,\"pushInfo\")/)[0].replace('\"videoMap\":', ''));\n                    影片名称 = 影片地图.showSubtitle;\n                    setPageTitle(影片名称);\n                    // try没获取到这里记得重新获取\n                    剧集ID = 影片地图.showId;\n                    简介 = 影片地图.showName;\n                    封面 = 影片地图.videoImg.replace('\\u002F', '/') + \"@Referer=\";\n                    setPagePicUrl(封面);\n                    类型 = 影片地图.videoCategory;\n                    状态 = '共' + 影片地图.episodeLast + '集\\n' + 影片地图.showReleaseTime;\n                    简述 = '';\n                    标签 = '';\n                } catch (e) {\n                    简介 = '没有简介，大概是一些短视频，科技、生活、娱乐分栏~';\n                    封面 = 'https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg.zcool.cn%2Fcommunity%2F010097613ad72c11013eaf7098e28a.jpg%402o.jpg&refer=http%3A%2F%2Fimg.zcool.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1661226719&t=75dab3a3ff2d817e6f388f89505ea2e4@Referer=';\n                    类型 = '';\n                    状态 = '';\n                    简述 = '';\n                    标签 = '';\n                }\n            }\n            // 评分不一定有,处理一下\n            try {\n                评分 = '';\n                if (pdfh(html, '.brief-score&&span,-4&&Text').match(/分/)) {\n                    评分 = pdfh(html, '.brief-score&&span,-4&&Text');\n                }\n            } catch (e) {\n                评分 = ''\n            }\n            if (类型 == '') {\n                短讯 = 简述 + '-' + 评分 + '-' + 状态 + '\\n' + 标签;\n            } else {\n                短讯 = \"⭐\" + 类型 + \"⭐ \" + 简述 + '-' + 评分 + '-' + 状态 + '\\n' + 标签;\n            }\n            // 导演、剧集图片、url等关键信息——正则匹配大法---------------------------------------\n            演职人员信息 = html.match(/\"img\":[\\S\\s]{0,120}\"title\":[\\S\\s]{0,15}isAliStar\"[\\S\\s]{0,120}(?=,\"action)/g);\n            // 前置参数和预处理---\n            var Color = \"#19B89D\";\n            var 每页集数 = 30;\n            var 搜索模式 = '分组';\n            var 调用名称 = '简影';\n            putMyVar('折叠', '关');\n            putMyVar('日历', '关');\n\n            // 清除变量\n            addListener('onClose', $.toString(() => {\n                clearMyVar('分集起');\n                clearMyVar('分集终');\n                clearMyVar('lazy');\n                clearMyVar('剧集列表');\n            }))\n            // 设置动态最新章节\n            setLastChapterRule('js:' + $.toString(() => {\n                eval(JSON.parse(request('hiker://page/getUpdate?rule=优酷.cy')).rule);\n            }));\n            // 页面内容正文---\n            // 基本功能栏\n            function 基本功能栏() {\n                // 基本信息模块\n                d.push({\n                    title: 短讯,\n                    desc: 简介.substring(0, 45) + '‘‘’’…<font color=\"#1C1C1C\">详情</font>',\n                    img: 封面,\n                    url: $().rule((简介) => {\n                        res = {};\n                        var d = [];\n                        d.push({\n                            title: '影片简介：' + '\\n\\t\\t\\t\\t\\t\\t\\t' + 简介,\n                            col_type: 'long_text'\n                        });\n                        res.data = d;\n                        setHomeResult(res);\n                    }, 简介),\n                    col_type: 'movie_1_vertical_pic_blur',\n                    extra: {\n                        longClick: [{\n                            title: '预告、花絮开关', js: $.toString(() => {\n                                if (getItem('previewSwitch', 'fold') == 'fold') {\n                                    setItem('previewSwitch', 'open');\n                                    refreshPage(true);\n                                    return \"toast://预告已经切换为展示~\";\n                                } else {\n                                    setItem('previewSwitch', 'fold');\n                                    refreshPage(true);\n                                    return \"toast://预告不再展示~\";\n                                }\n                            }),\n                        }]\n                    }\n                });\n                // 追剧日历模块\n                d.push({\n                    title: '‘‘’’<small><font color=\"#098AC1\">📅追剧日历</font></small>',\n                    url: $('#noLoading#').lazyRule((短讯, 类型标识, 剧集列表, 演职人员信息, 追剧日历) => {\n                        if (短讯.match(/预告/)) {\n                            return \"toast://当前是预告状态，暂无更新计划，敬请期待！\"\n                        } else if (短讯.match(/电影/)) {\n                            return \"toast://电影你也要追啊！\"\n                        } else {\n                            if (getMyVar('日历', '关') == '开') {\n                                // 太苦逼了~因为海阔自身的bug导致不能直接批量删除（会导致失焦让选集栏折叠消失...）——只能采取循环删除的方式~\n                                deleteItem('追剧日历')\n                                deleteItem('追剧日历')\n                                putMyVar('日历', '关');\n                            } else {\n                                // 因为综艺、纪录片、文化相关等节目和普通剧集的集数排序是倒过来的\n                                if (类型标识 == 3 || 类型标识 == 9 || 类型标识 == 178) {\n                                    data1 = JSON.parse(request('https://openapi.youku.com/v2/videos/show.json?client_id=53e6cc67237fc59a&package=com.huawei.hwvplayer.youku&ext=show&video_id=' + 剧集列表[剧集列表.length - 1].videoId));\n                                    data2 = JSON.parse(request('https://openapi.youku.com/v2/videos/show.json?client_id=53e6cc67237fc59a&package=com.huawei.hwvplayer.youku&ext=show&video_id=' + 剧集列表[0].videoId));\n                                } else {\n                                    data1 = JSON.parse(request('https://openapi.youku.com/v2/videos/show.json?client_id=53e6cc67237fc59a&package=com.huawei.hwvplayer.youku&ext=show&video_id=' + 剧集列表[0].videoId));\n                                    data2 = JSON.parse(request('https://openapi.youku.com/v2/videos/show.json?client_id=53e6cc67237fc59a&package=com.huawei.hwvplayer.youku&ext=show&video_id=' + 剧集列表[剧集列表.length - 1].videoId));\n                                }\n                                上映时间 = data1.published;\n                                最后更新 = data2.published + '\\n' + data2.show.type + '\\t' + data2.title\n                                if (演职人员信息) {\n                                    addItemAfter('演职人员',\n                                        [{\n                                            title: 追剧日历,\n                                            col_type: \"rich_text\",\n                                            extra: {\n                                                id: '追剧日历'\n                                            }\n                                        }, {\n                                            title: \"更新状态\",\n                                            col_type: \"text_1\",\n                                            desc: '上映时间：' + 上映时间 + '\\n最后更新：' + 最后更新,\n                                            extra: {\n                                                id: '追剧日历'\n                                            }\n                                        }]\n                                    );\n                                } else {\n                                    addItemAfter('豆瓣影讯',\n                                        [{\n                                            title: 追剧日历,\n                                            col_type: \"rich_text\",\n                                            extra: {\n                                                id: '追剧日历'\n                                            }\n                                        }, {\n                                            title: \"更新状态\",\n                                            col_type: \"text_1\",\n                                            desc: '上映时间：' + 上映时间 + '\\n最后更新：' + 最后更新,\n                                            extra: {\n                                                id: '追剧日历'\n                                            }\n                                        }]\n                                    );\n                                }\n                                putMyVar('日历', '开');\n                            }\n                            return 'toast://已切换日历为:' + getMyVar('日历', '开')\n                        }\n                    }, 短讯, 类型标识, 剧集列表, 演职人员信息, 追剧日历),\n                    col_type: 'text_3'\n                });\n                // 豆瓣影讯模块\n                d.push({\n                    title: '‘‘’’<small><font><font color=\"#098AC1\">🍃豆瓣影讯</font>' + '</small>',\n                    url: 'hiker://search?s=' + 影片名称 + '&rule=青豆',\n                    col_type: 'text_3',\n                    extra: {\n                        id: '豆瓣影讯'\n                    }\n                });\n                // 演职人员模块\n                if (演职人员信息) {\n                    d.push({\n                        title: '‘‘’’<small><font color=\"#098AC1\">⬇️演职人员</font></small>',\n                        url: $('#noLoading#').lazyRule((演职人员信息) => {\n                            if (getMyVar('折叠', '关') == '开') {\n                                for (var i = 0; i < 演职人员信息.length; i++) {\n                                    deleteItem('演职人员展示');\n                                }\n                                putMyVar('折叠', '关');\n                            } else {\n                                temArr = [];\n                                for (var i = 0; i < 演职人员信息.length; i++) {\n                                    dataJson = JSON.parse('{' + 演职人员信息[i] + '}');\n                                    temArr.push({\n                                        title: dataJson.title + '\\t' + dataJson.subtitle,\n                                        img: dataJson.img.replace('\\u002F', '/') + \"@Referer=\",\n                                        col_type: 'icon_2_round',\n                                        url: 'hiker://search?s=' + dataJson.title + '&rule=青豆',\n                                        extra: {\n                                            id: '演职人员展示'\n                                        }\n                                    });\n\n                                }\n                                addItemAfter('演职人员', temArr);\n                                putMyVar('折叠', '开');\n                            }\n                            return 'toast://已切换折叠为:' + getMyVar('折叠', '开')\n                        }, 演职人员信息),\n                        col_type: 'text_3',\n                        extra: {\n                            id: '演职人员'\n                        }\n                    })\n                }\n                // 选插模块——局部刷新版\n                来源 = 'yk';\n                eval(getMyVar('简插'));\n                d.push({\n                    title: '就绪解析：🔘<font color=\"' + Color + '\">' + op + '</font>\\t\\t\\t\\t页码：<font color=\"' + Color + '\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\n                    url: $('#noLoading#').lazyRule((json, 来源, Color, op, 影片名称, 搜索模式, 调用名称) => {\n                        eval(getMyVar('简插'));\n                        return $(eval(getMyVar('解析数组')), 3).select((json, 来源, Color, op, 影片名称, 搜索模式, 调用名称) => {\n                            setFile = getMyVar('setFile');\n                            input = input.replace(/👉/g, '');\n                            if (input === '✍️辅助') {\n                                return $().rule(() => {\n                                    eval(JSON.parse(request('hiker://page/home?rule=配置助手')).rule);\n                                })\n                            } else if (input === '📦️魔断') {\n                                return \"hiker://page/Route?rule=MyFieldᴰⁿ&type=编辑#noHistory#\";\n                            } else if (input === '🔍搜索') {\n                                if (搜索模式 == '分组') {\n                                    return \"hiker://search?s=\" + 影片名称 + \"&group=\" + 调用名称;\n                                } else {\n                                    return \"hiker://search?s=\" + 影片名称 + \"&rule=\" + 调用名称;\n                                }\n                            }\n                            // 原先的配置\n                            originSettings = JSON.stringify(json.settings);\n                            // 修改配置\n                            eval('json.settings.' + 来源 + '=input;');\n                            setFile = setFile.replace(originSettings, JSON.stringify(json.settings));\n                            saveFile('hiker://files/rules/DuanNian/MyParse.json', setFile);\n                            // 刷新元素\n                            eval(getMyVar('简插'));\n                            updateItem('op', {\n                                title: '就绪解析：🔘<font color=\"' + Color + '\">' + op + '</font>\\t\\t\\t\\t页码：<font color=\"' + Color + '\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\n                            });\n                            return \"toast://切换解析口为:\" + input;\n                        }, json, 来源, Color, op, 影片名称, 搜索模式, 调用名称)\n                    }, json, 来源, Color, op, 影片名称, 搜索模式, 调用名称),\n                    img: 'hiker://files/rules/cy/tubiao/youku.svg',\n                    col_type: \"avatar\",\n                    extra: {\n                        id: 'op'\n                    }\n                });\n            }\n\n            // 匹配电影\n            if (html.match(/\"播放页电影选集\",\"dataNode\":\\[{[\\S\\s]+(?=,\"title\":\"(系列电影|播放列表)\")/)) {\n                // 对电影的基本功能栏初始参值做下防错处理\n                追剧日历 = '', 剧集列表 = '', 类型标识 = 2, 短讯 = '电影';\n                putMyVar('日历', '关')\n                基本功能栏();\n                上映日期 = JSON.parse('{' + html.match(/\"videoPublishTime\"[\\S\\s]+(?=,\"videoTitle\")/)[0] + '}').videoPublishTime;\n                d.push({\n                    title: '‘‘’’<small><font><font color=\"red\">上映日期：' + 上映日期 + '</font></small>',\n                    url: \"toast://点我干嘛~\",\n                    col_type: 'scroll_button'\n                })\n                d.push({\n                    title: '系列电影',\n                    col_type: 'text_1',\n                    // desc: '‘‘’’<small><font><font color=\"red\">上映日期：' + 上映日期 + '</font></small>',\n                });\n                try {\n                    电影信息 = JSON.parse(html.match(/\"播放页电影选集\",\"dataNode\":\\[{[\\S\\s]+(?=,\"title\":\"(系列电影|播放列表)\")/)[0].replace('\"播放页电影选集\",\"dataNode\":', ''));\n                    电影信息.forEach(list => {\n                        if (list.data.summary) {\n                            d.push({\n                                title: list.data.title,\n                                img: list.data.img.replace('\\u002F', '/') + \"@Referer=\",\n                                url: 'https://v.youku.com/v_show/id_' + list.data.action.value + '.html' + lazy,\n                                desc: list.data.videoType + '\\t' + list.data.summary,\n                                col_type: 'movie_2'\n                            });\n                        } else {\n                            d.push({\n                                title: list.data.title,\n                                img: list.data.img.replace('\\u002F', '/') + \"@Referer=\",\n                                url: 'https://v.youku.com/v_show/id_' + list.data.action.value + '.html' + lazy,\n                                desc: list.data.videoType,\n                                col_type: 'movie_2'\n                            });\n                        }\n                    });\n                } catch (e) {\n                    try {\n                        // 分成多种语言版本的电影\n                        电影信息 = JSON.parse(html.match(/\"播放页电影选集\",\"dataNode\":\\[{[\\S\\s]+(?=,\"title\":\"播放列表\")/)[0].replace('\"播放页电影选集\",\"dataNode\":', ''));\n                        for (let i = 0; i < 电影信息.length; i++) {\n                            if (电影信息[i].data.summary) {\n                                d.push({\n                                    title: 电影信息[i].data.title,\n                                    img: 电影信息[i].data.img.replace('\\u002F', '/') + \"@Referer=\",\n                                    url: 'https://v.youku.com/v_show/id_' + 电影信息[i].data.audioLang[i].videoId + '.html' + lazy,\n                                    desc: 电影信息[i].data.videoType + '\\t' + 电影信息[i].data.summary,\n                                    col_type: 'movie_2'\n                                });\n                            } else {\n                                d.push({\n                                    title: 电影信息[i].data.title,\n                                    img: 电影信息[i].data.img.replace('\\u002F', '/') + \"@Referer=\",\n                                    url: 'https://v.youku.com/v_show/id_' + 电影信息[i].data.audioLang[i].videoId + '.html' + lazy,\n                                    desc: 电影信息[i].data.videoType,\n                                    col_type: 'movie_2'\n                                });\n                            }\n                        }\n                    } catch (e) {\n                        // 本来是打算动态刷新系列电影元素的desc，但是不知道为什么一点反应都没有,直接在后面添加新元素好了，烦\n                        d.push({\n                            title: '‘‘’’<small><font color=\"red\">当前可能是预告状态，没有任何数据~</font></small>',\n                            col_type: 'text_1'\n                        });\n                    }\n                }\n\n            } else {\n                try {\n                    // 一般剧集（含电影、综艺）——但电影不走这条线，因为没有系列电影的数据~\n                    剧集信息 = JSON.parse(request(\"https://search.youku.com/api/search?appScene=show_episode&showIds=\" + 剧集ID + \"&appCaller=h5\"));\n                    类型标识 = 剧集信息.cateId;\n                    剧集列表 = 剧集信息.serisesList;\n                    if (剧集信息.updateNotice) {\n                        追剧日历 = 剧集信息.updateNotice\n                    } else {\n                        追剧日历 = '——已完结——'\n                    }\n                    // 先尝试获取剧集数据，如果获取失败，异常会在上方出现，因为没有serisesList，那就走栏目路线\n                    基本功能栏();\n                    // 设置选集列表\n                    剧集长度 = 剧集列表.length\n                    if (剧集长度 > 每页集数) {\n                        putMyVar('刷新选集', $.toString(() => {\n                            putMyVar('分集起', start);\n                            putMyVar('分集终', end);\n                            eval(getMyVar('简插'));\n                            updateItem('op', {\n                                title: '就绪解析：🔘<font color=\"' + Color + '\">' + op + '</font>\\t\\t\\t\\t页码：<font color=\"' + Color + '\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\n                            })\n                            // 删除\n                            for (let i = 1; i <= getMyVar('分集终'); i++) {\n                                deleteItem('youku' + i);\n                            }\n                            // 添加\n                            lazy = getMyVar('lazy');\n                            剧集列表 = JSON.parse(getMyVar('剧集列表'));\n                            显示的剧集列表 = 剧集列表.slice(start - 1, end);\n                            newArray = [];\n                            index = 1;\n                            if (类型标识 == 3 || 类型标识 == 9 || 类型标识 == 178) {\n                                显示的剧集列表.forEach(list => {\n                                    if (list.iconCorner&&list.iconCorner.tagText) {\n                                        状态 = list.iconCorner.tagText;\n                                    } else {\n                                        状态 = '';\n                                    }\n                                    if (getItem('previewSwitch', 'fold') == 'fold' && 状态.match(/预|花絮/)) {\n                                        return;\n                                    } else {\n                                        if (list.thumbUrl === null || undefined) {\n                                            data = JSON.parse(request('https://openapi.youku.com/v2/videos/show.json?client_id=53e6cc67237fc59a&package=com.huawei.hwvplayer.youku&ext=show&video_id=' + list.videoId));\n                                            封面 = data.thumbnail;\n                                        } else {\n                                            封面 = list.thumbUrl;\n                                        }\n                                        newArray.push({\n                                            title: list.title,\n                                            img: 封面 + \"@Referer=\",\n                                            url: 'https://v.youku.com/v_show/id_' + list.videoId + '.html' + lazy,\n                                            desc: 状态 + '\\t' + list.stripeBottom + '\\n' + list.displayName,\n                                            col_type: 'movie_1_left_pic',\n                                            extra: {\n                                                id: 'youku' + index,\n                                            }\n                                        });\n                                        index += 1;\n                                    }\n                                });\n                            } else {\n                                显示的剧集列表.forEach(list => {\n                                    if (list.iconCorner&&list.iconCorner.tagText) {\n                                        状态 = list.iconCorner.tagText;\n                                    } else {\n                                        状态 = '';\n                                    }\n                                    if (getItem('previewSwitch', 'fold') == 'fold' && 状态.match(/预|花絮/)) {\n                                        return;\n                                    } else {\n                                        if (list.thumbUrl === null || undefined) {\n                                            data = JSON.parse(request('https://openapi.youku.com/v2/videos/show.json?client_id=53e6cc67237fc59a&package=com.huawei.hwvplayer.youku&ext=show&video_id=' + list.videoId));\n                                            封面 = data.thumbnail;\n                                        } else {\n                                            封面 = list.thumbUrl;\n                                        }\n                                        newArray.push({\n                                            title: list.title,\n                                            img: 封面 + \"@Referer=\",\n                                            url: 'https://v.youku.com/v_show/id_' + list.videoId + '.html' + lazy,\n                                            desc: 状态 + '\\t' + list.displayName,\n                                            col_type: 'movie_2',\n                                            extra: {\n                                                id: 'youku' + index,\n                                            }\n                                        });\n                                        index += 1;\n                                    }\n                                });\n                            }\n                            addItemAfter(getMyVar('末页'), newArray);\n                        }));\n                        d.push({\n                            col_type: 'scroll_button',\n                            url: 'hiker://empty',\n                            title: '∷',\n                            extra: {\n                                id: '占位符',\n                            }\n                        })\n                        putMyVar('分集起', 1);\n                        putMyVar('分集终', 每页集数);\n                        putMyVar('剧集列表', 剧集列表);\n                        总页数 = Math.ceil(剧集长度 / 每页集数);\n                        start = 1;\n                        end = 每页集数;\n                        for (let page = 1; page <= 总页数; page++) {\n                            if (end > 剧集长度) {\n                                end = 剧集长度;\n                            }\n                            d.push({\n                                title: start + '-' + end,\n                                url: $('#noLoading##noHistory#').lazyRule((start, end, Color, 来源, 类型标识) => {\n                                    eval(getMyVar('刷新选集'));\n                                    return \"hiker://empty\";\n                                }, start, end, Color, 来源, 类型标识),\n                                col_type: 'scroll_button',\n                                extra: {\n                                    id: start + '-' + end\n                                }\n                            });\n                            if (end < 剧集长度) {\n                                start += 每页集数;\n                                end += 每页集数;\n                            }\n                        }\n                        // 记录末页的id\n                        putMyVar('末页', start + '-' + end);\n                    } else {\n                        putMyVar('分集起', 1);\n                        putMyVar('分集终', 剧集长度);\n                    }\n                    // 展示剧集:如果是综艺、纪录片、文化等节目类型的以条栏样式显示，并且综艺类型的剧集是按最新时间来排序的~这个接口预告没有封面需要手动搞搞了\n                    if (类型标识 == 3 || 类型标识 == 9 || 类型标识 == 178) {\n                        for (let i = 0; i < getMyVar('分集终'); i++) {\n                            if (剧集列表[i].iconCorner&&剧集列表[i].iconCorner.tagText) {\n                                状态 = 剧集列表[i].iconCorner.tagText;\n                            } else {\n                                状态 = '';\n                            }\n                            if (getItem('previewSwitch', 'fold') == 'fold' && 状态.match(/预|花絮/)) {\n                                continue;\n                            } else {\n                                if (剧集列表[i].thumbUrl === null || undefined) {\n                                    data = JSON.parse(request('https://openapi.youku.com/v2/videos/show.json?client_id=53e6cc67237fc59a&package=com.huawei.hwvplayer.youku&ext=show&video_id=' + 剧集列表[i].videoId));\n                                    封面 = data.thumbnail;\n                                } else {\n                                    封面 = 剧集列表[i].thumbUrl;\n                                }\n                                d.push({\n                                    title: 剧集列表[i].title,\n                                    img: 封面 + \"@Referer=\",\n                                    url: 'https://v.youku.com/v_show/id_' + 剧集列表[i].videoId + '.html' + lazy,\n                                    desc: 状态 + '\\t' + 剧集列表[i].stripeBottom + '\\n' + 剧集列表[i].displayName,\n                                    col_type: 'movie_1_left_pic',\n                                    extra: {\n                                        id: 'youku' + (i + 1),\n                                    }\n                                });\n                            }\n                        }\n                    } else {\n                        for (let i = 0; i < getMyVar('分集终'); i++) {\n                            if (剧集列表[i].iconCorner&&剧集列表[i].iconCorner.tagText) {\n                                状态 = 剧集列表[i].iconCorner.tagText;\n                            } else {\n                                状态 = '';\n                            }\n                            if (getItem('previewSwitch', 'fold') == 'fold' && 状态.match(/预|花絮/)) {\n                                continue;\n                            } else {\n                                if (剧集列表[i].thumbUrl === null) {\n                                    data = JSON.parse(request('https://openapi.youku.com/v2/videos/show.json?client_id=53e6cc67237fc59a&package=com.huawei.hwvplayer.youku&ext=show&video_id=' + 剧集列表[i].videoId));\n                                    封面 = data.thumbnail;\n                                } else {\n                                    封面 = 剧集列表[i].thumbUrl;\n                                }\n                                d.push({\n                                    title: 剧集列表[i].title,\n                                    img: 封面 + \"@Referer=\",\n                                    url: 'https://v.youku.com/v_show/id_' + 剧集列表[i].videoId + '.html' + lazy,\n                                    desc: 状态 + '\\t' + 剧集列表[i].displayName,\n                                    col_type: 'movie_2',\n                                    extra: {\n                                        id: 'youku' + (i + 1),\n                                    }\n                                });\n                            }\n                        }\n                    }\n                } catch (e) {\n                    // 滑动图片选集型（音乐、娱乐、生活等栏目）——烦了，直接正则全局匹配成数组好了。。。\n                    选集信息 = html.match(/\"播放页ugc选集\",\"dataNode\":\\[{[\\S\\s]+}(?=\\],\"title\")/)[0].replace('\"播放页ugc选集\",\"dataNode\":[', '');\n                    选集信息 = 选集信息.match(/{\"data\":{[\\S\\s]{0,2000},\"id\":[0-9]{0,20},\"type\":[0-9]{0,20}}/g)\n                    setPageTitle('栏目列表')\n                    选集信息.forEach(list => {\n                        list = JSON.parse(list);\n                        d.push({\n                            title: list.data.title,\n                            img: list.data.img.replace('\\u002F', '/') + \"@Referer=\",\n                            url: 'https://v.youku.com/v_show/id_' + list.data.action.value + '.html' + lazy,\n                            desc: list.data.publishTime,\n                            col_type: 'movie_1_left_pic',\n                        });\n                    });\n                }\n\n            }\n\n            setResult(d);\n            break;\n        case 'tx':\n            MY_URL = MY_PARAMS.url;\n            if (MY_URL.match(/cover/)) {\n                // 手机搜索结果链接\n                cid = MY_URL.split('/')[5].split('.html')[0];\n                if (MY_URL.split('=')[1]) {\n                    vid = MY_URL.split('=')[1];\n                    MY_URL = 'https://v.qq.com/x/cover/' + cid + '/' + vid + '.html';\n                } else {\n                    MY_URL = 'https://v.qq.com/x/cover/' + cid + '.html';\n                }\n            } else {\n                // 手机首页跳转链接\n                cid = MY_URL.split('=')[1].split('&')[0];\n                if (cid == '') {\n                    vid = MY_URL.split('=')[2]\n                    // 这个cid貌似是错的，，算了就尝试一下，多半还是要404~\n                    data = fetch('https://union.video.qq.com/fcgi-bin/data?otype=json&tid=682&appid=20001238&appkey=6c03bbe9658448a4&union_platform=1&idlist=' + vid);\n                    cid = JSON.parse(data.match(/{[\\S\\s]+}/)[0]).results[0].fields.cover_list[0]\n                }\n                MY_URL = 'https://v.qq.com/x/cover/' + cid + '.html';\n            }\n            var res = JSON.parse(fetch(buildUrl(\"https://pbaccess.video.qq.com/trpc.universal_backend_service.page_server_rpc.PageServer/GetPageData\", {\n                video_appid: \"3000010\",\n                vplatform: \"2\",\n                vversion_name: \"8.2.96\"\n            }), {\n                body: {\n                    \"page_params\": {\n                        \"req_from\": \"web_vsite\",\n                        \"page_id\": \"vsite_episode_list\",\n                        \"page_type\": \"detail_operation\",\n                        \"id_type\": \"1\",\n                        \"page_size\": \"\",\n                        \"cid\": cid,\n                        \"vid\": \"\",\n                        \"lid\": \"\",\n                        \"page_num\": \"\",\n                        \"page_context\": \"\",\n                        \"detail_page_type\": \"1\"\n                    },\n                    \"has_cache\": 1\n                },\n                headers: {\n                    \"User-Agent\": PC_UA,\n                    \"Referer\": \"https://v.qq.com\"\n                },\n                method: \"POST\"\n            }));\n            追剧日历 = res.data.module_list_datas[0].module_datas[0].module_params.sub_title\n            // 更新状态=Data2.introData.list[0].item_params.detail_info.split('·')[1]+'/'+Data2.introData.list[0].item_params.detail_info.split('·')[2];\n    \n            演职人员 = MY_PARAMS.演职人员;\n            简介 = MY_PARAMS.简介;\n            类型 = MY_PARAMS.类型;\n            全集数 = MY_PARAMS.全集数;\n            影片名称 = MY_PARAMS.影片名称;\n            // 第二标题 = MY_PARAMS.第二标题;\n            地区 = MY_PARAMS.地区;\n            标签 = MY_PARAMS.标签;\n            年份 = MY_PARAMS.年份;\n            语言 = MY_PARAMS.语言;\n            封面 = MY_PARAMS.封面;\n            // 相关热榜 = MY_PARAMS.相关热榜;\n            // 相关热榜 = html.match(/\"topList\":[\\S\\s]+(?=,\"knowledgeIntro\")/)[0];\n            相关热榜 = \"\";\n    \n    \n            短讯 = \"⭐\" + 类型 + \"⭐\" + (年份 ? 年份 : '') + '\\t' + (地区 ? 地区 : '') + '\\t' + (语言 ? 语言 : '') + '\\n' + 标签;\n            // 重定义二级页面数据\n            setPageTitle(影片名称);\n            setPagePicUrl(封面);\n            // 前置参数和预处理---\n            var Color = \"#19B89D\";\n            var 每页集数 = 20\n            var 搜索模式 = '分组';\n            var 调用名称 = '简影';\n            putMyVar('折叠', '关');\n            putMyVar('日历', '关');\n\n            // putMyVar('剧集列表', 剧集列表);\n            // 清除变量\n            addListener('onClose', $.toString(() => {\n                clearMyVar('分集起');\n                clearMyVar('分集终');\n                clearMyVar('lazy');\n                clearMyVar('剧集列表');\n            }))\n            // 设置动态最新章节\n            setLastChapterRule('js:' + $.toString((MY_URL) => {\n                eval(JSON.parse(request('hiker://page/getUpdate?rule=腾讯.cy')).rule);\n            }, MY_URL));\n            // 页面内容正文---\n            // 基本信息模块\n            d.push({\n                title: 短讯,\n                desc: 简介 == '' ? '暂无简介' : 简介.substring(0, 45) + '‘‘’’…<font color=\"#1C1C1C\">详情</font>',\n                img: 封面,\n                url: $().rule((简介, 演职人员) => {\n                    res = {};\n                    var d = [];\n                    d.push({\n                        title: 演职人员 + '\\n简介：' + '\\n\\t\\t\\t\\t\\t\\t\\t' + 简介,\n                        col_type: 'long_text'\n                    });\n                    res.data = d;\n                    setHomeResult(res);\n                }, 简介, 演职人员),\n                col_type: 'movie_1_vertical_pic_blur',\n                extra: {\n                    longClick: [{\n                        title: '预告、花絮开关', js: $.toString(() => {\n                            if (getItem('previewSwitch', 'fold') == 'fold') {\n                                setItem('previewSwitch', 'open');\n                                refreshPage(true);\n                                return \"toast://预告已经切换为展示~\";\n                            } else {\n                                setItem('previewSwitch', 'fold');\n                                refreshPage(true);\n                                return \"toast://预告不再展示~\";\n                            }\n                        }),\n                    }]\n                }\n            });\n            // 追剧日历模块\n            d.push({\n                title: '‘‘’’<small><font><font color=\"#098AC1\">📅追剧</font>' + '</small>',\n                url: $('#noLoading#').lazyRule((追剧日历, 全集数) => {\n                    if (getMyVar('日历', '关') == '开') {\n                        deleteItem('追剧日历');\n                        putMyVar('日历', '关');\n                    } else {\n                        addItemAfter('显示模式', {\n                            title: 追剧日历 == '' ? '-已完结or无更新计划-' : (全集数 == '' ? '暂无集数数据<br>' + 追剧日历 : '共' + 全集数 + '集<br>' + 追剧日历),\n                            col_type: \"rich_text\",\n                            extra: {\n                                id: '追剧日历'\n                            }\n                        });\n                        putMyVar('日历', '开');\n                    }\n                    return 'toast://已切换日历为:' + getMyVar('日历', '开')\n                }, 追剧日历, 全集数),\n                col_type: 'text_4'\n            });\n            // 豆瓣影讯模块\n            d.push({\n                title: '‘‘’’<small><font color=\"#098AC1\">🍃豆瓣</font></small>',\n                url: 'hiker://search?s=' + 影片名称 + '&rule=青豆',\n                col_type: 'text_4'\n            });\n            // 相关热榜模块\n            d.push({\n                title: '‘‘’’<small><font><font color=\"#098AC1\">🏷️' + 相关热榜.title + '热榜</font>' + '</small>',\n                url: $('#noLoading#').lazyRule((相关热榜) => {\n                    if (相关热榜.title == '') {\n                        return 'toast://没有分类榜单！'\n                    }\n                    return $().rule((相关热榜) => {\n                        res = {};\n                        d = [];\n                        setPageTitle(相关热榜.title + '热榜');\n                        榜单列表 = 相关热榜.data;\n                        num = 1;\n                        榜单列表.forEach(list => {\n                            link = 'https://v.qq.com/x/cover/' + list.id + '.html';\n                            d.push({\n                                title: '‘‘’’<big><font color=\"red\">Num.' + num + '</font></big>' + list.title,\n                                img: list.pic.replace('\\u002F', '/') + \"@Referer=\",\n                                url: $('#noLoading#').lazyRule((link) => {\n                                    return $('hiker://empty#immersiveTheme#').rule((link) => {\n                                        MY_URL = link + '#immersiveTheme#';\n                                        eval(JSON.parse(request('hiker://page/qq?rule=腾讯.cy')).rule);\n                                    }, link)\n                                }, link),\n                                desc: list.timelong + '\\n' + list.secondTitle,\n                                col_type: 'movie_1_left_pic'\n                            });\n                            num += 1;\n                        });\n                        res.data = d;\n                        setHomeResult(res);\n                    }, 相关热榜)\n                }, 相关热榜),\n                col_type: 'text_4',\n                extra: {\n                    id: '相关热榜'\n                }\n            });\n            // 显示模式更改模块\n            d.push({\n                title: '‘‘’’<small><font color=\"#098AC1\">🔃' + getItem('模式', '双边') + '</font></small>',\n                url: $('#noLoading#').lazyRule((每页集数) => {\n                    if (getItem('模式', '双边') == '列表') {\n                        for (let index = 1; index <= 每页集数; index++) {\n                            updateItem('tx' + index, {\n                                col_type: 'movie_2',\n                            });\n                        }\n                        setItem('模式', '双边')\n                    } else {\n                        for (let index = 1; index <= 每页集数; index++) {\n                            updateItem('tx' + index, {\n                                col_type: 'movie_1_left_pic',\n                            });\n                        }\n                        setItem('模式', '列表')\n                    }\n                    updateItem('显示模式', {\n                        title: '‘‘’’<small><font color=\"#098AC1\">🔃' + getItem('模式', '双边') + '</font></small>',\n                    });\n                    return 'toast://已切换模式为:' + getItem('模式', '双边')\n                }, 每页集数),\n                col_type: 'text_4',\n                extra: {\n                    id: '显示模式'\n                }\n            });\n            // 选插模块——局部刷新版\n            来源 = 'tx';\n            eval(getMyVar('简插'));\n            d.push({\n                title: '解析：🔘<font color=\"' + Color + '\">' + op + '</font>\\t\\t页码：<font color=\"' + Color + '\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\n                url: $('#noLoading#').lazyRule((json, 来源, Color, op, 影片名称, 搜索模式, 调用名称) => {\n                    eval(getMyVar('简插'));\n                    return $(eval(getMyVar('解析数组')), 3).select((json, 来源, Color, op, 影片名称, 搜索模式, 调用名称) => {\n                        setFile = getMyVar('setFile');\n                        input = input.replace(/👉/g, '');\n                        if (input === '✍️辅助') {\n                            return $().rule(() => {\n                                eval(JSON.parse(request('hiker://page/home?rule=配置助手')).rule);\n                            })\n                        } else if (input === '📦️魔断') {\n                            return \"hiker://page/Route?rule=MyFieldᴰⁿ&type=编辑#noHistory#\";\n                        } else if (input === '🔍搜索') {\n                            if (搜索模式 == '分组') {\n                                return \"hiker://search?s=\" + 影片名称 + \"&group=\" + 调用名称;\n                            } else {\n                                return \"hiker://search?s=\" + 影片名称 + \"&rule=\" + 调用名称;\n                            }\n                        }\n                        // 原先的配置\n                        originSettings = JSON.stringify(json.settings);\n                        // 修改配置\n                        eval('json.settings.' + 来源 + '=input;');\n                        setFile = setFile.replace(originSettings, JSON.stringify(json.settings));\n                        saveFile('hiker://files/rules/DuanNian/MyParse.json', setFile);\n                        // 刷新元素\n                        eval(getMyVar('简插'));\n                        updateItem('op', {\n                            title: '解析：🔘<font color=\"' + Color + '\">' + op + '</font>\\t\\t页码：<font color=\"' + Color + '\">' + getMyVar(\"页码\", \"首页\") + '</font>',\n                        });\n                        return \"toast://切换解析口为:\" + input;\n                    }, json, 来源, Color, op, 影片名称, 搜索模式, 调用名称)\n                }, json, 来源, Color, op, 影片名称, 搜索模式, 调用名称),\n                img: 'hiker://files/rules/cy/tubiao/tx.svg',\n                col_type: \"avatar\",\n                extra: {\n                    id: 'op'\n                }\n            });\n            // 获取剧集信息\n            putMyVar('刷新选集', $.toString(() => {\n                // 删除\n                for (let i = 1; i <= 300; i++) {\n                    deleteItem('tx' + i);\n                }\n                // 判断执行的接口方案\n                // 添加\n                lazy = getMyVar('lazy');\n                function formatTime(seconds) {\n                    var minutes = Math.floor(seconds / 60);\n                    var remainingSeconds = seconds % 60;\n                    var formattedTime = minutes.toString().padStart(2, '0') + \":\" + remainingSeconds.toString().padStart(2, '0');\n                    return formattedTime;\n                }\n                newArray = [];\n                index = 1;\n                if (el.title) {\n                    title = el.title;\n                    data = JSON.parse(fetch(buildUrl('https://pbaccess.video.qq.com/trpc.videosearch.search_cgi.http/load_playsource_list_info', {\n                        pageNum: '0',\n                        id: cid,\n                        dataType: '2',\n                        pageContext: encodeURIComponent(el.asnycParams),\n                        scene: '2',\n                        platform: '2',\n                        appId: '10718',\n                        site: 'qq'\n                    }))).data.normalList.itemList[0].videoInfo.firstBlockSites[0];\n                    episodeInfoList = data.episodeInfoList;\n                    正片列表 = episodeInfoList.filter((it) => {\n                        lable = it.markLabel;\n                        if (lable.match(/限免/) || !lable.match(/预|花絮/)) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                        // !it.markLabel.match(/预|花絮/)\n                    });\n                    (getItem('previewSwitch', 'fold') == 'fold' ? 正片列表 : episodeInfoList).forEach(list => {\n                        if (getItem('模式', '双边') == '列表') {\n                            newArray.push({\n                                title: list.title + '\\t' + list.checkUpTime,\n                                img: list.imgUrl.replace('/160', '') + \"@Referer=\",\n                                url: list.url + lazy,\n                                desc: formatTime(list.duration) + '\\n' + list.checkUpTime,\n                                col_type: 'movie_1_left_pic',\n                                extra: {\n                                    id: 'tx' + index\n                                }\n                            });\n                        } else {\n                            newArray.push({\n                                title: list.checkUpTime,\n                                img: list.imgUrl.replace('/160', '') + \"@Referer=\",\n                                url: list.url + lazy,\n                                desc: list.title + '\\t' + formatTime(list.duration),\n                                col_type: 'movie_2',\n                                extra: {\n                                    id: 'tx' + index\n                                }\n                            });\n                        }\n                        index += 1;\n                    });\n                } else {\n                    title = el.begin + '-' + el.end;\n                    pageContext = el.page_context;\n                    data = JSON.parse(fetch('https://pbaccess.video.qq.com/trpc.universal_backend_service.page_server_rpc.PageServer/GetPageData?video_appid=3000010&vplatform=2&vversion_name=8.2.96', {\n                        body: {\n                            \"page_params\": {\n                                \"req_from\": \"web_vsite\",\n                                \"page_id\": \"vsite_episode_list\",\n                                \"page_type\": \"detail_operation\",\n                                \"id_type\": \"1\",\n                                \"page_size\": \"\",\n                                \"cid\": cid,\n                                \"vid\": \"\",\n                                \"lid\": \"\",\n                                \"page_num\": \"\",\n                                \"page_context\": pageContext,\n                                \"detail_page_type\": \"1\"\n                            },\n                            \"has_cache\": 1\n                        },\n                        headers: {\n                            'Referer': 'https://v.qq.com/'\n                        }\n                    })).data.module_list_datas[0].module_datas[0];\n                    episodeInfoList = data.item_data_lists.item_datas.filter((it) => it.item_type === \"1\");\n                    正片列表 = episodeInfoList.filter((it) => it.item_params.is_trailer !== \"1\");\n                    (getItem('previewSwitch', 'fold') == 'fold' ? 正片列表 : episodeInfoList).forEach(list => {\n                        parms = list.item_params;\n                        tag = parms.is_trailer !== \"1\" ? '正片' : '预';\n                        if (getItem('模式', '双边') == '列表') {\n                            newArray.push({\n                                title: parms.play_title,\n                                img: parms.image_url.replace('/160', '') + \"@Referer=\",\n                                url: 'https://v.qq.com/x/cover/' + parms.cid + '/' + parms.vid + '.html' + lazy,\n                                desc: tag + '\\t' + formatTime(parms.duration),\n                                col_type: 'movie_1_left_pic',\n                                extra: {\n                                    id: 'tx' + index\n                                }\n                            });\n                        } else {\n                            newArray.push({\n                                title: parms.play_title,\n                                img: parms.image_url.replace('/160', '') + \"@Referer=\",\n                                url: 'https://v.qq.com/x/cover/' + parms.cid + '/' + parms.vid + '.html' + lazy,\n                                desc: tag + '\\t' + formatTime(parms.duration),\n                                col_type: 'movie_2',\n                                extra: {\n                                    id: 'tx' + index\n                                }\n                            });\n                        }\n                        index += 1;\n                    });\n                }\n                addItemAfter(getMyVar('末页'), newArray);\n                eval(getMyVar('简插'));\n                updateItem('op', {\n                    title: '解析：🔘<font color=\"' + Color + '\">' + op + '</font>\\t\\t页码：<font color=\"' + Color + '\">' + title + '</font>',\n                })\n                putMyVar(\"页码\", title);\n            }));\n            // 展示剧集区域\n            index = 1;\n            function formatTime(seconds) {\n                var minutes = Math.floor(seconds / 60);\n                var remainingSeconds = seconds % 60;\n                var formattedTime = minutes.toString().padStart(2, '0') + \":\" + remainingSeconds.toString().padStart(2, '0');\n                return formattedTime;\n            }\n            try {\n                pageContext = 'lid=&cid=' + cid + '&page_num=0&page_size=30&id_type=1&req_type=6&req_from=web_vsite&req_from_second_type=&detail_page_type=1';\n                curtag = 0; tablen = 1;\n                data = JSON.parse(fetch('https://pbaccess.video.qq.com/trpc.universal_backend_service.page_server_rpc.PageServer/GetPageData?video_appid=3000010&vplatform=2&vversion_name=8.2.96', {\n                    body: {\n                        \"page_params\": {\n                            \"req_from\": \"web_vsite\",\n                            \"page_id\": \"vsite_episode_list\",\n                            \"page_type\": \"detail_operation\",\n                            \"id_type\": \"1\",\n                            \"page_size\": \"\",\n                            \"cid\": cid,\n                            \"vid\": \"\",\n                            \"lid\": \"\",\n                            \"page_num\": \"\",\n                            \"page_context\": pageContext,\n                            \"detail_page_type\": \"1\"\n                        },\n                        \"has_cache\": 1\n                    },\n                    headers: {\n                        'Referer': 'https://v.qq.com/'\n                    }\n                })).data.module_list_datas[0].module_datas[0];\n                // 打补丁，一刀切，存在特殊分季，如动漫诛仙\n                分季列表 = data.item_data_lists.item_datas.filter((it) => it.item_type === \"28\");\n                if (分季列表.length > 0) throw new Error('存在特殊的分季，尝试备用接口方案...');\n                if (data.module_params.tabs == \"\") {\n                    tabs = [];\n                } else {\n                    tabs = JSON.parse(data.module_params.tabs);\n                }\n                if (tabs.length > 0) {\n                    d.push({\n                        col_type: 'scroll_button',\n                        url: 'hiker://empty',\n                        title: '∷',\n                        extra: {\n                            id: '占位符',\n                        }\n                    })\n                    tabs.forEach(el => {\n                        d.push({\n                            title: el.begin + '-' + el.end,\n                            url: $('#noLoading##noHistory#').lazyRule((el, cid, 来源, Color) => {\n                                eval(getMyVar('刷新选集'));\n                                return \"hiker://empty\";\n                            }, el, cid, 来源, Color),\n                            col_type: 'scroll_button',\n                            extra: {\n                                id: el.begin + '-' + el.end\n                            }\n                        });\n                    });\n                    末页 = tabs[tabs.length - 1];\n                    putMyVar('末页', 末页.begin + '-' + 末页.end);\n                }\n                episodeInfoList = data.item_data_lists.item_datas.filter((it) => it.item_type === \"1\");\n                正片列表 = episodeInfoList.filter((it) => it.item_params.is_trailer !== \"1\");\n                (getItem('previewSwitch', 'fold') == 'fold' ? 正片列表 : episodeInfoList).forEach(list => {\n                    parms = list.item_params;\n                    tag = parms.is_trailer !== \"1\" ? '正片' : '预';\n                    if (getItem('模式', '双边') == '列表') {\n                        d.push({\n                            title: parms.union_title,\n                            img: parms.image_url.replace('/160', '') + \"@Referer=\",\n                            url: 'https://v.qq.com/x/cover/' + parms.cid + '/' + parms.vid + '.html' + lazy,\n                            desc: tag + '\\t' + formatTime(parms.duration),\n                            col_type: 'movie_1_left_pic',\n                            extra: {\n                                id: 'tx' + index\n                            }\n                        });\n                    } else {\n                        d.push({\n                            title: parms.union_title,\n                            img: parms.image_url.replace('/160', '') + \"@Referer=\",\n                            url: 'https://v.qq.com/x/cover/' + parms.cid + '/' + parms.vid + '.html' + lazy,\n                            desc: tag + '\\t' + formatTime(parms.duration),\n                            col_type: 'movie_2',\n                            extra: {\n                                id: 'tx' + index\n                            }\n                        });\n                    }\n                    index += 1;\n                });\n            } catch (e) {\n                log('首选接口出错：' + e);\n                // 综艺、电影（无标题）\n                pageContext = 'need_async=true';\n                data = JSON.parse(fetch(buildUrl('https://pbaccess.video.qq.com/trpc.videosearch.search_cgi.http/load_playsource_list_info', {\n                    pageNum: '0',\n                    id: cid,\n                    dataType: '2',\n                    pageContext: encodeURIComponent(pageContext),\n                    scene: '2',\n                    platform: '2',\n                    appId: '10718',\n                    site: 'qq'\n                }))).data.normalList.itemList[0].videoInfo.firstBlockSites[0];\n                tabs = data.tabs;\n                if (tabs.length > 0) {\n                    d.push({\n                        col_type: 'scroll_button',\n                        url: 'hiker://empty',\n                        title: '∷',\n                        extra: {\n                            id: '占位符',\n                        }\n                    })\n                    tabs.forEach(el => {\n                        d.push({\n                            title: el.title,\n                            url: $('#noLoading##noHistory#').lazyRule((el, cid, 来源, Color) => {\n                                eval(getMyVar('刷新选集'));\n                                return \"hiker://empty\";\n                            }, el, cid, 来源, Color),\n                            col_type: 'scroll_button',\n                            extra: {\n                                id: el.title\n                            }\n                        });\n                    });\n                    末页 = tabs[tabs.length - 1];\n                    putMyVar('末页', 末页.title);\n                }\n                episodeInfoList = data.episodeInfoList;\n                正片列表 = episodeInfoList.filter((it) => {\n                    lable = it.markLabel;\n                    if (lable.match(/限免/) || !lable.match(/预|花絮/)) {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                    // !it.markLabel.match(/预|花絮/)\n                });\n                (getItem('previewSwitch', 'fold') == 'fold' ? 正片列表 : episodeInfoList).forEach(list => {\n                    if (getItem('模式', '双边') == '列表') {\n                        d.push({\n                            title: list.title,\n                            img: list.imgUrl.replace('/160', '') + \"@Referer=\",\n                            url: list.url + lazy,\n                            desc: formatTime(list.duration) + '\\n' + list.checkUpTime,\n                            col_type: 'movie_1_left_pic',\n                            extra: {\n                                id: 'tx' + index\n                            }\n                        });\n                    } else {\n                        d.push({\n                            title: list.checkUpTime,\n                            img: list.imgUrl.replace('/160', '') + \"@Referer=\",\n                            url: list.url + lazy,\n                            desc: list.title + '\\t' + formatTime(list.duration),\n                            col_type: 'movie_2',\n                            extra: {\n                                id: 'tx' + index\n                            }\n                        });\n                    }\n                    index += 1;\n                });\n\n            }\n            setResult(d);\n\n            break;\n        case 'mgtv':\n            MY_URL = MY_PARAMS.url;\n            html = request(MY_URL);\n            try {\n                vid = MY_URL.split('/')[5].split('.')[0];\n            } catch (e) {\n                link = html.match(/window.location = \"[\\S\\s]+(?=\" \\+ window.location.search)/)[0].replace('window.location = \"', '');\n                vid = link.split('/')[5].split('.')[0];\n                html = request(link);\n            }\n            剧集详情 = html.match(/\"videoinfo\":[\\S\\s]+(?=,\"fullVideoListInfo\")/)[0].replace('\"videoinfo\":', '');\n            // log(剧集详情);\n            类型 = JSON.parse(剧集详情)[0];\n            地区 = JSON.parse(剧集详情)[1];\n            电视台 = JSON.parse(剧集详情)[2];//电视台或导演\n            if (JSON.parse(剧集详情)[4].match(/简介/)) {\n                简介 = JSON.parse(剧集详情)[4];\n            } else if (JSON.parse(剧集详情)[5].match(/简介/)) {\n                简介 = JSON.parse(剧集详情)[5]\n            } else {\n                简介 = JSON.parse(剧集详情)[6];\n            }\n            更新状态 = JSON.parse(剧集详情).updateInfo\n            封面 = JSON.parse(剧集详情).colImage.replace('\\u002F', '/').split('.jpg')[0] + \".jpg@Referer=\";\n            setPagePicUrl(封面);\n            // 获取首页信息（30一页，可能多于30，因为番外，size不建议修改会出错）\n            剧集信息 = JSON.parse(fetch(`https://pcweb.api.mgtv.com/episode/list?_support=10000000&version=5.5.35&video_id=${vid}&page=1&size=30&allowedRC=1&_support=10000000`, {\n                headers: {\n                    'User-Agent': PC_UA\n                },\n                referrer: MY_URL,\n                method: 'GET'\n            })).data;\n            影片名称 = 剧集信息.info.title;\n            setPageTitle(影片名称);\n            // 播出时间=pdfh(html,'.desc&&.t3,3&&Text');用json接口获取比较精准\n            追更日历 = 剧集信息.info.desc;\n            if (追更日历 == '\\r\\n' || 追更日历 == '') {\n                追更日历 = '获取不到更新计划~';\n            }\n            剧集列表 = 剧集信息.list\n            短讯 = \"⭐\" + 类型 + \"⭐\" + '\\t' + 地区 + '\\n' + 电视台 + '\\n' + 更新状态;\n            // 前置参数和预处理---\n            var Color = \"#19B89D\";\n            // var 每页集数 = 20;芒果小程序不能修改页集数~！\n            var 搜索模式 = '分组';\n            var 调用名称 = '简影';\n            putMyVar('折叠', '关');\n            putMyVar('日历', '关');\n\n            putMyVar('本页长度', 剧集列表.length);\n            putMyVar('剧集信息', 剧集信息);\n            // 清除变量\n            addListener('onClose', $.toString(() => {\n                clearMyVar('分集起');\n                clearMyVar('分集终');\n                clearMyVar('lazy');\n                clearMyVar('剧集信息');\n            }))\n            // 设置动态最新章节\n            setLastChapterRule('js:' + $.toString(() => {\n                eval(JSON.parse(request('hiker://page/getUpdate?rule=芒果.cy')).rule);\n            }));\n            // 页面内容正文---\n            // 基本信息模块\n            d.push({\n                title: 短讯,\n                desc: 简介.substring(0, 45) + '‘‘’’…<font color=\"#1C1C1C\">详情</font>',\n                img: 封面,\n                url: $().rule((html, 简介) => {\n                    res = {};\n                    var d = [];\n                    导演 = pdfh(html, '.desc&&.t3,-2&&Text');\n                    演员 = pdfh(html, '.desc&&.t3,-1&&Text');\n                    d.push({\n                        title: '影片简介：' + '\\n\\t\\t\\t\\t\\t\\t\\t' + 导演 + '\\n\\t\\t\\t\\t\\t\\t\\t' + 演员 + '\\n\\t\\t\\t\\t\\t\\t\\t' + 简介,\n                        col_type: 'long_text'\n                    });\n                    res.data = d;\n                    setHomeResult(res);\n                }, html, 简介),\n                col_type: 'movie_1_vertical_pic_blur',\n                extra: {\n                    longClick: [{\n                        title: '预告、花絮开关', js: $.toString(() => {\n                            if (getItem('previewSwitch', 'fold') == 'fold') {\n                                setItem('previewSwitch', 'open');\n                                refreshPage(true);\n                                return \"toast://预告已经切换为展示~\";\n                            } else {\n                                setItem('previewSwitch', 'fold');\n                                refreshPage(true);\n                                return \"toast://预告不再展示~\";\n                            }\n                        }),\n                    }]\n                }\n            });\n            // 追剧日历模块\n            d.push({\n                title: '‘‘’’<small><font><font color=\"#098AC1\">📅追剧</font>' + '</small>',\n                url: $('#noLoading##noHistory#').lazyRule((更新状态, 追更日历) => {\n                    if (getMyVar('日历', '关') == '开') {\n                        deleteItem('追剧日历');\n                        putMyVar('日历', '关');\n                    } else {\n                        addItemAfter('显示模式', {\n                            title: '追剧日历：' + '\\n\\t\\t\\t\\t\\t\\t\\t' + 更新状态 + '\\n\\t\\t\\t\\t\\t\\t\\t' + 追更日历,\n                            col_type: 'long_text',\n                            extra: {\n                                id: '追剧日历'\n                            }\n                        });\n                        putMyVar('日历', '开');\n                    }\n                    return 'toast://已切换日历为:' + getMyVar('日历', '开')\n                }, 更新状态, 追更日历),\n                col_type: 'text_4'\n            });\n            // 豆瓣影讯模块\n            d.push({\n                title: '‘‘’’<small><font color=\"#098AC1\">🍃豆瓣</font></small>',\n                url: 'hiker://search?s=' + 影片名称 + '&rule=青豆',\n                col_type: 'text_4'\n            });\n            // 精彩继续模块（周边+系列）\n            d.push({\n                title: '‘‘’’<small><font color=\"#098AC1\">ღ精彩</font></small>',\n                url: $('#noLoading##noHistory#').lazyRule(() => {\n                    周边数组 = [\"🤣花絮\", \"🏷️系列\"];\n                    return $(周边数组, 1, 'ღ精彩继续').select(() => {\n                        剧集信息 = JSON.parse(getMyVar('剧集信息'));\n                        lazy = getMyVar('lazy');\n                        if (input === '🤣花絮') {\n                            return $().rule((剧集信息, lazy) => {\n                                res = {};\n                                d = [];\n                                setPageTitle('🤣花絮列表');\n                                花絮列表 = 剧集信息.short;\n                                if (花絮列表 == '') {\n                                    d.push({\n                                        title: '‘‘’’<big><font color=\"red\">⭐该影片没有相关花絮哦~⭐</font></big>',\n                                        url: 'toast://都没有，，你点啥呀~',\n                                        desc: '敬请期待~',\n                                        col_type: 'text_center_1'\n                                    });\n                                }\n                                花絮列表.forEach(list => {\n                                    d.push({\n                                        title: list.t3,\n                                        img: list.img.split('.jpg')[0] + \".jpg@Referer=\",\n                                        url: 'https://www.mgtv.com' + list.url + lazy,\n                                        desc: list.t2,\n                                        col_type: 'movie_1_left_pic'\n                                    });\n                                });\n                                res.data = d;\n                                setHomeResult(res);\n                            }, 剧集信息, lazy)\n                        } else if (input === '🏷️系列') {\n                            return $().rule((剧集信息) => {\n                                res = {};\n                                d = [];\n                                setPageTitle('🏷️相关系列');\n                                系列列表 = 剧集信息.series;\n                                if (系列列表 == '') {\n                                    d.push({\n                                        title: '‘‘’’<big><font color=\"red\">⭐芒果表示该影片暂无系列数据~⭐</font></big>',\n                                        url: 'toast://都没有，，你点啥呀~',\n                                        desc: '敬请期待~',\n                                        col_type: 'text_center_1'\n                                    });\n                                } else {\n                                    系列列表.forEach(list => {\n                                        d.push({\n                                            title: '‘‘’’<big><font color=\"blue\">' + list.t1 + '</font></big>',\n                                            img: list.img.split('.jpg')[0] + \".jpg@Referer=\",\n                                            url: $('#noLoading##noHistory#').lazyRule((link) => {\n                                                return $('hiker://empty#immersiveTheme#').rule((link) => {\n                                                    html = request(link)\n                                                    link = html.match(/window.location = \"[\\S\\s]+(?=\" \\+ window.location.search)/)[0].replace('window.location = \"', '');\n                                                    MY_URL = link + '#immersiveTheme#';\n                                                    eval(JSON.parse(request('hiker://page/mgtv?rule=芒果.cy')).rule);\n                                                }, link)\n                                            }, list.url),\n                                            desc: \"⭐播放量⭐\\t\" + list.playcnt,\n                                            col_type: 'movie_1_left_pic'\n                                        });\n                                    });\n                                }\n                                res.data = d;\n                                setHomeResult(res);\n                            }, 剧集信息)\n                        }\n                    })\n                }),\n                col_type: 'text_4',\n                extra: {\n                    id: '精彩继续'\n                }\n            });\n            // 显示模式更改模块\n            d.push({\n                title: '‘‘’’<small><font color=\"#098AC1\">🔃' + getItem('模式', '双边') + '</font></small>',\n                url: $('#noLoading##noHistory#').lazyRule(() => {\n                    if (getItem('模式', '双边') == '列表') {\n                        for (let index = 1; index <= getMyVar('本页长度'); index++) {\n                            updateItem('mgtv' + index, {\n                                col_type: 'movie_2',\n                            });\n                        }\n                        setItem('模式', '双边')\n                    } else {\n                        for (let index = 1; index <= getMyVar('本页长度'); index++) {\n                            updateItem('mgtv' + index, {\n                                col_type: 'movie_1_left_pic',\n                            });\n                        }\n                        setItem('模式', '列表')\n                    }\n                    updateItem('显示模式', {\n                        title: '‘‘’’<small><font color=\"#098AC1\">🔃' + getItem('模式', '双边') + '</font></small>',\n                    });\n                    return 'toast://已切换模式为:' + getItem('模式', '双边')\n                }),\n                col_type: 'text_4',\n                extra: {\n                    id: '显示模式'\n                }\n            });\n            // 选插模块——局部刷新版\n            来源 = 'mg';\n            eval(getMyVar('简插'));\n            d.push({\n                title: '解析：🔘<font color=\"' + Color + '\">' + op + '</font>\\t\\t页码：<font color=\"' + Color + '\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\n                url: $('#noLoading##noHistory#').lazyRule((json, 来源, Color, op, 影片名称, 搜索模式, 调用名称) => {\n                    eval(getMyVar('简插'));\n                    return $(eval(getMyVar('解析数组')), 3).select((json, 来源, Color, op, 影片名称, 搜索模式, 调用名称) => {\n                        setFile = getMyVar('setFile');\n                        input = input.replace(/👉/g, '');\n                        if (input === '✍️辅助') {\n                            return $().rule(() => {\n                                eval(JSON.parse(request('hiker://page/home?rule=配置助手')).rule);\n                            })\n                        } else if (input === '📦️魔断') {\n                            return \"hiker://page/Route?rule=MyFieldᴰⁿ&type=编辑#noHistory#\";\n                        } else if (input === '🔍搜索') {\n                            if (搜索模式 == '分组') {\n                                return \"hiker://search?s=\" + 影片名称 + \"&group=\" + 调用名称;\n                            } else {\n                                return \"hiker://search?s=\" + 影片名称 + \"&rule=\" + 调用名称;\n                            }\n                        }\n                        // 原先的配置\n                        originSettings = JSON.stringify(json.settings);\n                        // 修改配置\n                        eval('json.settings.' + 来源 + '=input;');\n                        setFile = setFile.replace(originSettings, JSON.stringify(json.settings));\n                        saveFile('hiker://files/rules/DuanNian/MyParse.json', setFile);\n                        // 刷新元素\n                        eval(getMyVar('简插'));\n                        updateItem('op', {\n                            title: '解析：🔘<font color=\"' + Color + '\">' + op + '</font>\\t\\t页码：<font color=\"' + Color + '\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\n                        });\n                        return \"toast://切换解析口为:\" + input;\n                    }, json, 来源, Color, op, 影片名称, 搜索模式, 调用名称)\n                }, json, 来源, Color, op, 影片名称, 搜索模式, 调用名称),\n                img: 'hiker://files/rules/cy/tubiao/mgtv.svg',\n                col_type: \"avatar\",\n                extra: {\n                    id: 'op'\n                }\n            });\n            // 滚动剧集条栏\n            剧集长度 = 剧集信息.count;\n            if (剧集长度 > 30) {\n                putMyVar('刷新选集', $.toString(() => {\n                    putMyVar('分集起', start);\n                    putMyVar('分集终', end);\n                    eval(getMyVar('简插'));\n                    updateItem('op', {\n                        title: '解析：🔘<font color=\"' + Color + '\">' + op + '</font>\\t\\t页码：<font color=\"' + Color + '\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\n                    })\n                    // 删除\n                    for (let i = 1; i <= getMyVar('本页长度'); i++) {\n                        deleteItem('mgtv' + i);\n                    }\n                    // 添加\n                    lazy = getMyVar('lazy');\n                    剧集信息 = JSON.parse(fetch(`https://pcweb.api.mgtv.com/episode/list?_support=10000000&version=5.5.35&video_id=${vid}&page=${page}&size=30&allowedRC=1&_support=10000000`, {\n                        headers: {\n                            'User-Agent': PC_UA\n                        },\n                        referrer: MY_URL,\n                        method: 'GET'\n                    })).data;\n                    剧集列表 = 剧集信息.list\n                    putMyVar('本页长度', 剧集列表.length);\n                    newArray = [];\n                    index = 1;\n                    剧集列表.forEach(list => {\n                        // 可能为空数组\n                        try {\n                            状态或集数标识 = list.corner[0].font;\n                        } catch (e) {\n                            状态或集数标识d = '';\n                        }\n                        try {\n                            集数标识 = list.corner[1].font\n                        } catch (e) {\n                            集数标识 = '';\n                        }\n                        if (getItem('previewSwitch', 'fold') == 'fold' && 状态或集数标识.match(/预|花絮/)) {\n                            return;\n                        } else {\n                            // 考虑一些彩蛋章是没有集数的情况，取list.t1，同时考虑到电影的集数标识和time的值一样\n                            if (集数标识 == '' || 集数标识 == list.time) {\n                                if (getItem('模式', '双边') == '列表') {\n                                    newArray.push({\n                                        title: list.t2,\n                                        img: list.img.split('.jpg')[0] + \".jpg@Referer=\",\n                                        url: 'https://www.mgtv.com' + list.url + lazy,\n                                        desc: 状态或集数标识 + '\\t' + list.t1 + '\\t' + list.time,\n                                        col_type: 'movie_1_left_pic',\n                                        extra: {\n                                            id: 'mgtv' + index\n                                        }\n                                    });\n                                } else {\n                                    newArray.push({\n                                        title: list.t2,\n                                        img: list.img.split('.jpg')[0] + \".jpg@Referer=\",\n                                        url: 'https://www.mgtv.com' + list.url + lazy,\n                                        desc: 状态或集数标识 + '\\t' + list.t1 + '\\t' + list.time,\n                                        col_type: 'movie_2',\n                                        extra: {\n                                            id: 'mgtv' + index\n                                        }\n                                    });\n                                }\n                            } else {\n                                if (getItem('模式', '双边') == '列表') {\n                                    newArray.push({\n                                        title: list.t2,\n                                        img: list.img.split('.jpg')[0] + \".jpg@Referer=\",\n                                        url: 'https://www.mgtv.com' + list.url + lazy,\n                                        desc: 状态或集数标识 + '\\t' + 集数标识 + '\\t' + list.time,\n                                        col_type: 'movie_1_left_pic',\n                                        extra: {\n                                            id: 'mgtv' + index\n                                        }\n                                    });\n                                } else {\n                                    newArray.push({\n                                        title: list.t2,\n                                        img: list.img.split('.jpg')[0] + \".jpg@Referer=\",\n                                        url: 'https://www.mgtv.com' + list.url + lazy,\n                                        desc: 状态或集数标识 + '\\t' + 集数标识 + '\\t' + list.time,\n                                        col_type: 'movie_2',\n                                        extra: {\n                                            id: 'mgtv' + index\n                                        }\n                                    });\n                                }\n                            }\n                            index += 1;\n                        }\n                    });\n                    addItemAfter(getMyVar('末页'), newArray);\n                    // putMyVar('显示的剧集列表', 显示的剧集列表);\n                }));\n                d.push({\n                    col_type: 'scroll_button',\n                    url: 'hiker://empty',\n                    title: '∷',\n                    extra: {\n                        id: '占位符',\n                    }\n                })\n                putMyVar('分集起', 1);\n                putMyVar('分集终', 30);\n                总页数 = 剧集信息.total_page;\n                start = 1;\n                end = 30;\n                for (let page = 1; page <= 总页数; page++) {\n                    if (end > 剧集长度) {\n                        end = 剧集长度;\n                    }\n                    d.push({\n                        title: start + '-' + end,\n                        url: $('#noLoading##noHistory##noHistory#').lazyRule((start, end, Color, 来源, page, vid) => {\n                            eval(getMyVar('刷新选集'));\n                            return \"hiker://empty\";\n                        }, start, end, Color, 来源, page, vid),\n                        col_type: 'scroll_button',\n                        extra: {\n                            id: start + '-' + end\n                        }\n                    });\n                    if (end < 剧集长度) {\n                        start += 30;\n                        end += 30;\n                    }\n                }\n                // 记录末页的id\n                putMyVar('末页', start + '-' + end);\n            } else {\n                putMyVar('分集起', 1);\n                putMyVar('分集终', 剧集长度);\n            }\n            // 剧集展示\n            index = 1;\n            剧集列表.forEach(list => {\n                // 可能为空数组\n                try {\n                    状态或集数标识 = list.corner[0].font;\n                } catch (e) {\n                    状态或集数标识d = '';\n                }\n                try {\n                    集数标识 = list.corner[1].font\n                } catch (e) {\n                    集数标识 = '';\n                }\n                if (getItem('previewSwitch', 'fold') == 'fold' && 状态或集数标识.match(/预|花絮/)) {\n                    return;\n                } else {\n                    // 考虑一些彩蛋章是没有集数的情况，取list.t1，同时考虑到电影的集数标识和time的值一样\n                    if (集数标识 == '' || 集数标识 == list.time) {\n                        if (getItem('模式', '双边') == '列表') {\n                            d.push({\n                                title: list.t2,\n                                img: list.img.split('.jpg')[0] + \".jpg@Referer=\",\n                                url: 'https://www.mgtv.com' + list.url + lazy,\n                                desc: 状态或集数标识 + '\\t' + list.t1 + '\\t' + list.time,\n                                col_type: 'movie_1_left_pic',\n                                extra: {\n                                    id: 'mgtv' + index\n                                }\n                            });\n                        } else {\n                            d.push({\n                                title: list.t2,\n                                img: list.img.split('.jpg')[0] + \".jpg@Referer=\",\n                                url: 'https://www.mgtv.com' + list.url + lazy,\n                                desc: 状态或集数标识 + '\\t' + list.t1 + '\\t' + list.time,\n                                col_type: 'movie_2',\n                                extra: {\n                                    id: 'mgtv' + index\n                                }\n                            });\n                        }\n                    } else {\n                        if (getItem('模式', '双边') == '列表') {\n                            d.push({\n                                title: list.t2,\n                                img: list.img.split('.jpg')[0] + \".jpg@Referer=\",\n                                url: 'https://www.mgtv.com' + list.url + lazy,\n                                desc: 状态或集数标识 + '\\t' + 集数标识 + '\\t' + list.time,\n                                col_type: 'movie_1_left_pic',\n                                extra: {\n                                    id: 'mgtv' + index\n                                }\n                            });\n                        } else {\n                            d.push({\n                                title: list.t2,\n                                img: list.img.split('.jpg')[0] + \".jpg@Referer=\",\n                                url: 'https://www.mgtv.com' + list.url + lazy,\n                                desc: 状态或集数标识 + '\\t' + 集数标识 + '\\t' + list.time,\n                                col_type: 'movie_2',\n                                extra: {\n                                    id: 'mgtv' + index\n                                }\n                            });\n                        }\n                    }\n                    index += 1;\n                }\n            });\n            setResult(d);\n\n            break;\n        case 'bili':\n            if (MY_PARAMS.season_id) {\n                season_id = MY_PARAMS.season_id + \"\";\n                Data = JSON.parse(fetch('https://api.bilibili.com/pgc/view/web/season?season_id=' + season_id)).result;\n            } else {\n                Data = JSON.parse(fetch('https://api.bilibili.com/pgc/view/web/season?ep_id=' + MY_PARAMS.ep_id)).result;\n            }\n            if (!Data.cover.match(/https/)) {\n                封面 = Data.cover.replace('http', 'https') + \"@Referer=\";\n            } else {\n                封面 = Data.cover + \"@Referer=\";\n            }\n            try {\n                地区 = Data.areas[0].name;\n            } catch (e) {\n                地区 = '地区暂无';\n            }\n            简介 = Data.evaluate;\n            // 正片\n            类型 = Data.positive.title;\n            上映时间 = Data.publish.pub_time;\n            try {\n                得分 = Data.rating.score;\n            } catch (e) {\n                得分 = '暂无得';\n            }\n            追剧日历 = Data.new_ep.desc;\n            更新进度 = Data.new_ep.title;\n            影片名称 = Data.title;\n            第二标题 = Data.share_sub_title;\n            剧集列表 = Data.episodes;\n            短讯 = \"⭐\" + 类型 + \"⭐\" + 第二标题 + '\\n' + 地区 + '-' + 得分 + '分\\n-' + 上映时间 + '-';\n            // 重定义二级页面数据\n            setPageTitle(影片名称);\n            setPagePicUrl(封面);\n            // 前置参数和预处理---\n            imgLink = storage0.getMyVar('图标');\n            var Color = \"#19B89D\";\n            var 每页集数 = 30;\n            var 搜索模式 = '分组';\n            var 调用名称 = '简影';\n            putMyVar('折叠', '关');\n            putMyVar('日历', '关');\n            putMyVar('Data', Data);\n\n            // 清除变量\n            addListener('onClose', $.toString(() => {\n                clearMyVar('分集起');\n                clearMyVar('分集终');\n                clearMyVar('折叠');\n                clearMyVar('日历');\n                clearMyVar('Data');\n                clearMyVar('lazy');\n                clearMyVar('剧集列表');\n            }))\n            // 设置动态最新章节\n            setLastChapterRule('js:' + $.toString(() => {\n                eval(JSON.parse(request('hiker://page/getUpdate?rule=哔哩.cy')).rule);\n            }));\n            // 页面内容正文---\n            // 基本信息模块\n            d.push({\n                title: 短讯,\n                desc: 简介 == '' ? '暂无简介' : 简介.substring(0, 45) + '‘‘’’…<font color=\"#1C1C1C\">详情</font>',\n                img: 封面,\n                url: $().rule((简介) => {\n                    res = {};\n                    var d = [];\n                    d.push({\n                        title: '影片简介：' + '\\n\\t\\t\\t\\t\\t\\t\\t' + 简介,\n                        col_type: 'long_text'\n                    });\n                    res.data = d;\n                    setHomeResult(res);\n                }, 简介),\n                col_type: 'movie_1_vertical_pic_blur',\n            });\n            // 更新日历模块\n            d.push({\n                title: '日历',\n                img: imgLink.日历,\n                url: $('#noLoading#').lazyRule((追剧日历, 更新进度) => {\n                    if (getMyVar('日历', '关') == '开') {\n                        deleteItem('追剧日历');\n                        putMyVar('日历', '关');\n                    } else {\n                        addItemAfter('显示模式', {\n                            title: 追剧日历.match(/完结|期待/) ? 追剧日历 : 追剧日历 + '<br><font color=\"red\">更新至' + (更新进度.match(/[\\u4e00-\\u9fa5]/) ? 更新进度 : ('第' + (更新进度 == '' ? 0 : 更新进度) + '话')) + '</font>',\n                            col_type: \"rich_text\",\n                            extra: {\n                                id: '追剧日历'\n                            }\n                        });\n                        putMyVar('日历', '开');\n                    }\n                    return 'toast://已切换日历为:' + getMyVar('日历', '开')\n                }, 追剧日历, 更新进度),\n                col_type: 'icon_5'\n            });\n            // 订阅模块\n            d.push({\n                title: '订阅',\n                img: imgLink.订阅,\n                url: $('#noLoading#').lazyRule(() => {\n                    selectionList = ['订阅', '取消订阅'];\n                    return $(selectionList, 2).select(() => {\n                        season_id = JSON.parse(getMyVar('Data')).season_id;\n                        if (input == '订阅') {\n                            res = $.require(\"hiker://page/api?rule=哔哩.cy\").subscribeFilm(season_id);\n                        } else {\n                            res = $.require(\"hiker://page/api?rule=哔哩.cy\").cancelSubscribeFilm(season_id);\n                        }\n                        return 'toast://' + res;\n                    });\n                }),\n                col_type: 'icon_5'\n            });\n            // 评论模块\n            d.push({\n                title: '评论',\n                img: imgLink.查看评论,\n                url: $('#noLoading#').lazyRule(() => {\n                    return $('hiker://empty').rule(() => {\n                        var d = [];\n                        List = JSON.parse(getMyVar('Data')).episodes;\n                        List.forEach(item => {\n                            d.push({\n                                title: item.share_copy + '<font color=\"#33cccc\">\t➮</font>',\n                                img: item.cover + '@Referer=',\n                                url: 'hiker://page/Comments?p=fypage&rule=哔哩.cy',\n                                col_type: \"avatar\",\n                                extra: {\n                                    \"id\": item.aid,\n                                    \"type\": 1\n                                }\n                            });\n                        });\n                        setResult(d);\n                    });\n                }),\n                col_type: 'icon_5'\n            });\n\n            // 精彩继续模块\n            d.push({\n                title: '周边',\n                img: imgLink.周边,\n                url: $('#noLoading#').lazyRule(() => {\n                    Data = JSON.parse(getMyVar('Data'));\n                    // 有些没有直接去掉懒得处理~\n                    if (Data.section) {\n                        周边数组 = [\"🏷️相关系列\", \"🤣PV&花絮\", \"🍉竖屏也精彩\", \"🔥精彩二创\"];\n                    } else {\n                        周边数组 = [\"🏷️相关系列\"];\n                    }\n                    // 周边数组 = [\"🏷️相关系列\", \"🤣PV&花絮\", \"竖屏也精彩\", \"精彩二创\"];\n                    return $(周边数组, 1, 'ღ精彩继续').select(() => {\n                        Data = JSON.parse(getMyVar('Data'));\n                        lazy = getMyVar('lazy');\n                        if (input === '🏷️相关系列') {\n                            系列名称 = Data.season_title\n                            系列数据 = Data.seasons;\n                            return $().rule((系列数据) => {\n                                d = [];\n                                setPageTitle('🏷️相关系列');\n                                if (系列数据 == [] || 系列数据 == '') {\n                                    d.push({\n                                        title: '‘‘’’<big><font color=\"red\">⭐该影片没有相关系列哦~⭐</font></big>',\n                                        url: 'toast://都没有，，你点啥呀~',\n                                        desc: '敬请期待~',\n                                        col_type: 'text_center_1'\n                                    });\n                                }\n                                系列数据.forEach(list => {\n                                    d.push({\n                                        title: list.season_title,\n                                        img: (list.horizontal_cover_1610 == '' ? (list.horizontal_cover_169 == '' ? list.cover : list.horizontal_cover_169) : list.horizontal_cover_1610) + \"@Referer=\",\n                                        url: 'hiker://page/filmerji#immersiveTheme#',\n                                        desc: list.new_ep.index_show,\n                                        col_type: 'movie_1_left_pic',\n                                        extra: {\n                                            \"ep_id\": list.new_ep.id\n                                        }\n                                    });\n                                });\n                                setHomeResult(d);\n                            }, 系列数据)\n                        } else if (input === '🤣PV&花絮') {\n                            try {\n                                PV和花絮数据 = Data.section[0].episodes;\n                                return $().rule((PV和花絮数据, lazy) => {\n                                    d = [];\n                                    setPageTitle('🤣PV&花絮');\n                                    if (PV和花絮数据 == [] || PV和花絮数据 == '') {\n                                        d.push({\n                                            title: '‘‘’’<big><font color=\"red\">⭐该影片/视频没有相关PV和花絮哦~⭐</font></big>',\n                                            url: 'toast://都没有，，你点啥呀~',\n                                            desc: '敬请期待~',\n                                            col_type: 'text_center_1'\n                                        });\n                                    }\n                                    PV和花絮数据.forEach(list => {\n                                        d.push({\n                                            title: list.title,\n                                            img: list.cover + \"@Referer=\",\n                                            url: list.link + lazy,\n                                            desc: list.subtitle + '\\n' + list.long_title,\n                                            col_type: 'movie_1_left_pic',\n                                            extra: {\n                                                id: list.link,\n                                                aid: list.aid,\n                                                bvid: list.bvid,\n                                                cid: list.cid,\n                                                badge: list.badge\n                                            }\n                                        });\n                                    });\n                                    setHomeResult(d);\n                                }, PV和花絮数据, lazy)\n                            } catch (e) {\n                                return 'toast://没有数据哦~'\n                            }\n                        } else if (input === '🍉竖屏也精彩') {\n                            try {\n                                竖屏也精彩数据 = Data.section[1].episodes;\n                                return $().rule((竖屏也精彩数据, lazy) => {\n                                    d = [];\n                                    setPageTitle('🍉竖屏也精彩');\n                                    if (竖屏也精彩数据 == [] || 竖屏也精彩数据 == '') {\n                                        d.push({\n                                            title: '‘‘’’<big><font color=\"red\">⭐该影片/视频没有相关竖屏短视频哦~⭐</font></big>',\n                                            url: 'toast://都没有，，你点啥呀~',\n                                            desc: '敬请期待~',\n                                            col_type: 'text_center_1'\n                                        });\n                                    }\n                                    竖屏也精彩数据.forEach(list => {\n                                        d.push({\n                                            title: list.title,\n                                            img: list.cover + \"@Referer=\",\n                                            url: list.link + lazy,\n                                            desc: list.subtitle + '\\n' + list.long_title,\n                                            col_type: 'movie_1_left_pic',\n                                            extra: {\n                                                id: list.link,\n                                                aid: list.aid,\n                                                bvid: list.bvid,\n                                                cid: list.cid,\n                                                badge: list.badge\n                                            }\n                                        });\n                                    });\n                                    setHomeResult(d);\n                                }, 竖屏也精彩数据, lazy)\n                            } catch (e) {\n                                return 'toast://没有数据哦~'\n                            }\n                        } else if (input === '🔥精彩二创') {\n                            try {\n                                精彩二创数据 = Data.section[2].episodes;\n                                return $().rule((精彩二创数据, lazy) => {\n                                    d = [];\n                                    setPageTitle('🔥精彩二创');\n                                    if (精彩二创数据 == [] || 精彩二创数据 == '') {\n                                        d.push({\n                                            title: '‘‘’’<big><font color=\"red\">⭐该影片/视频没有二创作品哦~⭐</font></big>',\n                                            url: 'toast://都没有，，你点啥呀~',\n                                            desc: '敬请期待~',\n                                            col_type: 'text_center_1'\n                                        });\n                                    }\n                                    精彩二创数据.forEach(list => {\n                                        // 针对部分参数缺失的情况如凡人修仙传写的，，\n                                        if (list.aid == 0 || list.cid == 0) {\n                                            viedeoData = JSON.parse(fetch(\"https://api.bilibili.com/x/web-interface/view?aid=\" + list.link.split('av')[1], {\n                                                headers: {\n                                                    \"User-Agent\": PC_UA,\n                                                    \"Referer\": 'https://www.bilibili.com/'\n                                                },\n                                                method: \"GET\"\n                                            })).data;\n                                            aid = viedeoData.aid;\n                                            bvid = viedeoData.bvid;\n                                            cid = viedeoData.cid;\n                                        } else {\n                                            aid = list.aid;\n                                            bvid = list.bvid;\n                                            cid = list.cid;\n                                        }\n                                        d.push({\n                                            title: list.title,\n                                            img: list.cover + \"@Referer=\",\n                                            url: list.link + lazy,\n                                            desc: list.subtitle + '\\n' + list.long_title,\n                                            col_type: 'movie_1_left_pic',\n                                            extra: {\n                                                id: list.link,\n                                                aid: aid,\n                                                bvid: bvid,\n                                                cid: cid,\n                                                badge: list.badge\n                                            }\n                                        });\n                                    });\n                                    setHomeResult(d);\n                                }, 精彩二创数据, lazy)\n                            } catch (e) {\n                                return 'toast://没有数据哦~'\n                            }\n                        }\n                        return \"toast://正在进入\" + input + \"界面...\";\n                    })\n                }),\n                col_type: \"icon_5\",\n                extra: {\n                    id: '精彩继续'\n                }\n            });\n            // 显示模式更改模块\n            d.push({\n                title: getItem('模式', '双边'),\n                img: getItem('模式', '双边') == '列表' ? imgLink.列表 : imgLink.双边,\n                url: $('#noLoading#').lazyRule(() => {\n                    显示的剧集列表 = JSON.parse(getMyVar('显示的剧集列表'));\n                    if (getItem('模式', '双边') == '列表') {\n                        显示的剧集列表.forEach(el => {\n                            updateItem(el.link, {\n                                col_type: 'movie_2',\n                            });\n                        });\n                        setItem('模式', '双边')\n                    } else {\n                        显示的剧集列表.forEach(el => {\n                            updateItem(el.link, {\n                                col_type: 'movie_1_left_pic',\n                            });\n                        });\n                        setItem('模式', '列表')\n                    }\n                    imgLink = storage0.getMyVar('图标');\n                    updateItem('显示模式', {\n                        title: getItem('模式', '双边'),\n                        img: getItem('模式', '双边') == '列表' ? imgLink.列表 : imgLink.双边,\n                    });\n                    return 'toast://已切换模式为:' + getItem('模式', '双边')\n                }),\n                col_type: 'icon_5',\n                extra: {\n                    id: '显示模式'\n                }\n            }, {\n                col_type: 'line_blank',\n            });\n            // 选插模块——局部刷新版\n            来源 = 'bl';\n            eval(getMyVar('简插'));\n            d.push({\n                title: '解析：🔘<font color=\"' + Color + '\">' + op + '</font>\\t\\t页码：<font color=\"' + Color + '\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\n                url: $('#noLoading#').lazyRule((json, 来源, Color, op, 影片名称, 搜索模式, 调用名称) => {\n                    eval(getMyVar('简插'));\n                    return $(eval(getMyVar('解析数组')), 3).select((json, 来源, Color, op, 影片名称, 搜索模式, 调用名称) => {\n                        setFile = getMyVar('setFile');\n                        input = input.replace(/👉/g, '');\n                        if (input === '✍️辅助') {\n                            return $().rule(() => {\n                                eval(JSON.parse(request('hiker://page/home?rule=配置助手')).rule);\n                            })\n                        } else if (input === '📦️魔断') {\n                            return \"hiker://page/Route?rule=MyFieldᴰⁿ&type=编辑#noHistory#\";\n                        } else if (input === '🔍搜索') {\n                            if (搜索模式 == '分组') {\n                                return \"hiker://search?s=\" + 影片名称 + \"&group=\" + 调用名称;\n                            } else {\n                                return \"hiker://search?s=\" + 影片名称 + \"&rule=\" + 调用名称;\n                            }\n                        }\n                        // 原先的配置\n                        originSettings = JSON.stringify(json.settings);\n                        // 修改配置\n                        eval('json.settings.' + 来源 + '=input;');\n                        setFile = setFile.replace(originSettings, JSON.stringify(json.settings));\n                        saveFile('hiker://files/rules/DuanNian/MyParse.json', setFile);\n                        // 刷新元素\n                        eval(getMyVar('简插'));\n                        updateItem('op', {\n                            title: '解析：🔘<font color=\"' + Color + '\">' + op + '</font>\\t\\t页码：<font color=\"' + Color + '\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\n                        });\n                        return \"toast://切换解析口为:\" + input;\n                    }, json, 来源, Color, op, 影片名称, 搜索模式, 调用名称)\n                }, json, 来源, Color, op, 影片名称, 搜索模式, 调用名称),\n                img: 'hiker://files/rules/cy/tubiao/bilibili.svg',\n                col_type: \"avatar\",\n                extra: {\n                    id: 'op'\n                }\n            });\n            // 滚动剧集条栏\n            剧集长度 = 剧集列表.length;\n            if (剧集长度 > 每页集数) {\n                putMyVar('刷新选集', $.toString(() => {\n                    putMyVar('分集起', start);\n                    putMyVar('分集终', end);\n                    eval(getMyVar('简插'));\n                    updateItem('op', {\n                        title: '解析：🔘<font color=\"' + Color + '\">' + op + '</font>\\t\\t页码：<font color=\"' + Color + '\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\n                    })\n                    // 删除\n                    显示的剧集列表 = JSON.parse(getMyVar('显示的剧集列表'));\n                    显示的剧集列表.forEach(el => {\n                        deleteItem(el.link);\n                    });\n                    // 添加\n                    lazy = getMyVar('lazy');\n                    剧集列表 = JSON.parse(getMyVar('剧集列表'));\n                    显示的剧集列表 = 剧集列表.slice(start - 1, end);\n                    newArray = [];\n                    index = 1;\n                    显示的剧集列表.forEach(list => {\n                        if (getItem('模式', '双边') == '列表') {\n                            newArray.push({\n                                title: list.long_title,\n                                img: list.cover + \"@Referer=\",\n                                url: list.link + lazy,\n                                desc: list.title.match(/[0-9]/) ? (list.badge + '第' + list.title + '话') : list.title,\n                                col_type: 'movie_1_left_pic',\n                                extra: {\n                                    id: list.link,\n                                    aid: list.aid,\n                                    bvid: list.bvid,\n                                    cid: list.cid,\n                                    badge: list.badge\n                                }\n                            });\n                        } else {\n                            newArray.push({\n                                title: list.long_title,\n                                img: list.cover + \"@Referer=\",\n                                url: list.link + lazy,\n                                desc: list.title.match(/[0-9]/) ? (list.badge + '第' + list.title + '话') : list.title,\n                                col_type: 'movie_2',\n                                extra: {\n                                    id: list.link,\n                                    aid: list.aid,\n                                    bvid: list.bvid,\n                                    cid: list.cid,\n                                    badge: list.badge\n                                }\n                            });\n                        }\n                        index += 1;\n                    });\n                    addItemAfter(getMyVar('末页'), newArray);\n                    putMyVar('显示的剧集列表', 显示的剧集列表);\n                }));\n                d.push({\n                    col_type: 'scroll_button',\n                    url: 'hiker://empty',\n                    title: '∷',\n                    extra: {\n                        id: '占位符',\n                    }\n                })\n                putMyVar('分集起', 1);\n                putMyVar('分集终', 每页集数);\n                putMyVar('剧集列表', 剧集列表);\n                总页数 = Math.ceil(剧集长度 / 每页集数);\n                start = 1;\n                end = 每页集数;\n                for (let page = 1; page <= 总页数; page++) {\n                    if (end > 剧集长度) {\n                        end = 剧集长度;\n                    }\n                    d.push({\n                        title: start + '-' + end,\n                        url: $('#noLoading##noHistory#').lazyRule((start, end, Color, 来源) => {\n                            eval(getMyVar('刷新选集'));\n                            return \"hiker://empty\";\n                        }, start, end, Color, 来源),\n                        col_type: 'scroll_button',\n                        extra: {\n                            id: start + '-' + end\n                        }\n                    });\n                    if (end < 剧集长度) {\n                        start += 每页集数;\n                        end += 每页集数;\n                    }\n                }\n                // 记录末页的id\n                putMyVar('末页', start + '-' + end);\n            } else {\n                putMyVar('分集起', 1);\n                putMyVar('分集终', 剧集长度);\n            }\n            // 展示剧集:\n            显示的剧集列表 = 剧集列表.slice(0, getMyVar('分集终'));\n            putMyVar('显示的剧集列表', 显示的剧集列表);\n            index = 1;\n            显示的剧集列表.forEach(list => {\n                if (getItem('模式', '双边') == '列表') {\n                    d.push({\n                        title: list.long_title,\n                        img: list.cover + \"@Referer=\",\n                        url: list.link + lazy,\n                        desc: list.title.match(/[0-9]/) ? (list.badge + '第' + list.title + '话') : list.title,\n                        col_type: 'movie_1_left_pic',\n                        extra: {\n                            id: list.link,\n                            aid: list.aid,\n                            bvid: list.bvid,\n                            cid: list.cid,\n                            badge: list.badge\n                        }\n                    });\n                } else {\n                    d.push({\n                        title: list.long_title,\n                        img: list.cover + \"@Referer=\",\n                        url: list.link + lazy,\n                        desc: list.title.match(/[0-9]/) ? (list.badge + '第' + list.title + '话') : list.title,\n                        col_type: 'movie_2',\n                        extra: {\n                            id: list.link,\n                            aid: list.aid,\n                            bvid: list.bvid,\n                            cid: list.cid,\n                            badge: list.badge\n                        }\n                    });\n                }\n                index += 1;\n            });\n            setResult(d);\n            break;\n    }\n}\n"},{"name":"解析路由","path":"lazy","rule":"var lazy = $('#noLoading#').lazyRule(() => {\n    vipUrl = input;\n    var danmuSetting = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\n    var jiexiArr = [\n        { name: '虾米xmflv', url: 'https://jx.xmflv.cc/?url=' },\n        { name: \"咸鱼77flv\", url: \"https://jx.77flv.cc/?url=\" },\n        { name: \"极速2s0\", url: \"https://jx.2s0.cn/player/?url=\" },\n        { name: \"爱看ik9\", url: \"https://yparse.ik9.cc/index.php?url=\" },\n        { name: \"m3u8\", url: \"https://jx.m3u8.tv/jiexi/?url=\" }\n    ];\n    switch (danmuSetting.useway) {\n        case '仅用魔断':\n            eval(fetch('hiker://files/cache/Parse_Dn.js', {}));\n            return aytmParse(vipUrl)\n        case '仅用内置':\n            urls = [];\n            names = [];\n            jiexiArr.forEach(el => {\n                names.push(el.name);\n                urls.push('video://' + el.url + vipUrl);\n            });\n            showLoading(\"获取弹幕中~\");\n            return $.require(\"hiker://page/lazyToJiexi?rule=dm盒子\").videoX5(vipUrl, urls, names);\n        case '仅下弹幕':\n            showLoading(\"正在获取...\");\n            dm = $.require('hiker://page/dmFun?rule=dm盒子').dmRoute(vipUrl);\n            dmPath = getPath(getVar('dm_share')).slice(7);\n            var { copyFile, moveFile } = $.require(\"hiker://page/fileAPI?rule=dm盒子\");\n            dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\n            saveLocal = dmSettings.saveLocal;\n            doubleWrite = dmSettings.doubleWrite;\n            if (saveLocal) {\n                destinationDir = '/storage/emulated/0/Download/海阔视界/danmu/';\n                if (doubleWrite) {\n                    copyFile(dmPath, destinationDir);\n                } else {\n                    moveFile(dmPath, destinationDir);\n                }\n            }\n            hideLoading();\n            if (dm === false) {\n                return \"toast://貌似下载出错了呜呜呜\";\n            } else {\n                return \"toast://下载成功，快去观影吧，。\";\n            }\n        case '调用搜索':\n            dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\n            if (dmSettings.search) {\n                searchType = dmSettings.search.searchType;\n                searchName = dmSettings.search.searchName;\n            } else {\n                searchType = 1;\n                searchName = \"云盘君dm\";\n            }\n            showLoading(\"获取弹幕中~\");\n            return $.require(\"hiker://page/lazyToJiexi?rule=dm盒子\").parseDm(vipUrl, searchType, searchName);\n        case '常规':\n            return $(['魔断解析', '内置解析', '调用搜索', '仅下弹幕', '下载分享', '修改设置', '勾选/取消', '下载勾选'], 2).select((vipUrl, jiexiArr) => {\n                if (input == '魔断解析') {\n                    // 不做处理，是否带弹幕看自己配的解析\n                    eval(fetch('hiker://files/cache/Parse_Dn.js', {}));\n                    return aytmParse(vipUrl)\n                } else if (input == '内置解析') {\n                    urls = [];\n                    names = [];\n                    jiexiArr.forEach(el => {\n                        names.push(el.name);\n                        urls.push('video://' + el.url + vipUrl);\n                    });\n                    showLoading(\"获取弹幕中~\");\n                    return $.require(\"hiker://page/lazyToJiexi?rule=dm盒子\").videoX5(vipUrl, urls, names);\n                } else if (input == '调用搜索') {\n                    dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\n                    if (dmSettings.search) {\n                        searchType = dmSettings.search.searchType;\n                        searchName = dmSettings.search.searchName;\n                    } else {\n                        searchType = 1;\n                        searchName = \"云盘君dm\";\n                    }\n                    showLoading(\"获取弹幕中~\");\n                    return $.require(\"hiker://page/lazyToJiexi?rule=dm盒子\").parseDm(vipUrl, searchType, searchName);\n                } else if (input == '下载分享') {\n                    showLoading(\"正在获取...\");\n                    dm = $.require('hiker://page/dmFun?rule=dm盒子').dmRoute(vipUrl);\n                    hideLoading();\n                    if (dm === false) {\n                        return \"toast://貌似下载出错了呜呜呜\";\n                    } else {\n                        return \"share://\" + getVar('dm_share', dm);\n                    }\n                } else if (input == '仅下弹幕') {// 获取弹幕\n                    showLoading(\"正在获取...\");\n                    dm = $.require('hiker://page/dmFun?rule=dm盒子').dmRoute(vipUrl);\n                    dmPath = getPath(getVar('dm_share')).slice(7);\n                    var { copyFile, moveFile } = $.require(\"hiker://page/fileAPI?rule=dm盒子\");\n                    dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\n                    saveLocal = dmSettings.saveLocal;\n                    doubleWrite = dmSettings.doubleWrite;\n                    if (saveLocal) {\n                        destinationDir = '/storage/emulated/0/Download/海阔视界/danmu/';\n                        if (doubleWrite) {\n                            copyFile(dmPath, destinationDir);\n                        } else {\n                            moveFile(dmPath, destinationDir);\n                        }\n                    }\n                    hideLoading();\n                    if (dm === false) {\n                        return \"toast://貌似下载出错了呜呜呜\";\n                    } else {\n                        return \"toast://下载成功，快去观影吧，。\";\n                    }\n                } else if (input == '勾选/取消') {// 勾选\n                    function removeDuplicatesAndArrange(array, element) {\n                        var index = array.indexOf(element);\n                        var result = [];\n                        if (index !== -1) {\n                            result = array.filter(function (value, i) {\n                                return i !== index;\n                            });\n                        } else {\n                            result = array.concat(element);\n                        }\n                        return result;\n                    }\n                    let checkArr = storage0.getMyVar('checkArr', []);\n                    olength = checkArr.length;\n                    checkArr = removeDuplicatesAndArrange(checkArr, vipUrl);\n                    alength = checkArr.length;\n                    storage0.putMyVar('checkArr', checkArr);\n                    if (alength > olength) {\n                        return \"toast://加入下载列表成功\";\n                    } else {\n                        return \"toast://从下载列表中移除\";\n                    }\n                } else if (input == '下载勾选') {// 批量下载\n                    return $('', \"请输入开始集数\").input(() => {\n                        var javaImport = new JavaImporter(java.io, Packages.android.util);\n                        function renameFile(filePath, newFileName) {\n                            with (javaImport) {\n                                var file = new File(filePath);\n                                var newFilePath = new File(file.getParent(), newFileName);\n                                if (file.renameTo(newFilePath)) {\n                                    log(\"文件重命名成功！\");\n                                } else {\n                                    log(\"文件重命名失败！\");\n                                }\n                            }\n                        }\n                        let ep = Number(input);\n                        let checkArr = storage0.getMyVar('checkArr', []);\n                        log('批量下载列表：' + JSON.stringify(checkArr));\n                        checkArr.forEach(vipUrl => {\n                            showLoading(\"下载进度：第\" + ep + \"集\");\n                            dm = $.require('hiker://page/dmFun?rule=dm盒子').dmRoute(vipUrl);\n                            hideLoading();\n                            if (dm === false) {\n                                log('第' + ep + '集下载出错');\n                            }\n                            dmPath = getPath(getVar('dm_share'));\n                            newFileName = dmPath.substring(dmPath.lastIndexOf(\"/\") + 1).replace(/(\\.[^.]+)$/, '_' + ep + \"$1\");\n                            localPath = android.net.Uri.parse(dmPath).getPath();\n                            renameFile(localPath, newFileName);\n                            var { copyFile, moveFile } = $.require(\"hiker://page/fileAPI?rule=dm盒子\");\n                            dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\n                            saveLocal = dmSettings.saveLocal;\n                            doubleWrite = dmSettings.doubleWrite;\n                            newPath = getPath('hiker://files/cache/danmu/').slice(7) + newFileName;\n                            if (saveLocal) {\n                                destinationDir = '/storage/emulated/0/Download/海阔视界/danmu/';\n                                if (doubleWrite) {\n                                    copyFile(newPath, destinationDir);\n                                } else {\n                                    moveFile(newPath, destinationDir);\n                                }\n                            }\n                            ep++;\n                        });\n                        clearMyVar('checkArr');\n                        return \"toast://已全部下载，快去观影吧，。\";\n                    })\n                } else {\n                    return 'hiker://page/setting?rule=dm盒子'\n                }\n            }, vipUrl, jiexiArr)\n    }\n});\nputMyVar('lazy', lazy);\n"},{"name":"文件管理","path":"filesSystem","rule":"js:\nlet d = [];\nvar javaImport = new JavaImporter(java.io, Packages.android.util);\n// 读取目录下的所有文件\nfunction listFilesInDir(dirPath) {\n    with (javaImport) {\n        var files = [];\n        var localPath = android.net.Uri.parse(dirPath).getPath();\n        var dir = new File(localPath);\n        if (dir.isDirectory()) {\n            var fileArr = dir.listFiles();\n            for (let i = 0; i < fileArr.length; i++) {\n                var file = fileArr[i];\n                if (file.isFile()) {\n                    var danmuCount = 0;\n                    var filePath = file.getAbsolutePath();\n                    // 读取文件全文内容\n                    var reader = null;\n                    try {\n                        reader = new BufferedReader(new FileReader(filePath));\n                        var sb = new java.lang.StringBuilder();\n                        var line;\n                        while ((line = reader.readLine()) != null) {\n                            sb.append(line);\n                        }\n                        var content = sb.toString();\n                        // 统计 <d 开头的标签数量\n                        danmuCount = parseInt((content.match(/<d\\b/g) || []).length);\n                    } catch (e) {\n                        log(\"弹幕统计读取失败: \"+e.message);\n                    } finally {\n                        if (reader != null) reader.close();\n                    }\n                    // 添加文件信息（含弹幕数和MB格式大小）\n                    files.push({\n                        name: file.getName(),\n                        path: filePath,\n                        size: (file.length() / (1024 * 1024)).toFixed(2), // 转为MB保留2位小数\n                        danmuNum: danmuCount\n                    });\n                }\n            }\n        }\n        // 自然排序文件名\n        files.sort((a, b) => a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' }));\n        return files;\n    }\n}\n\n// 路径选择\nselect = getMyVar('filePath', '0');\npathMap = {\n    \"0\": \"hiker://files/cache/danmu/\",\n    \"1\": \"/storage/emulated/0/Download/海阔视界/danmu/\"\n}\ndmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\nsaveLocal = dmSettings.saveLocal;\ndoubleWrite = dmSettings.doubleWrite;\nd.push({\n    title: select == '0' ? '““””<b><span style=\"color: red\">内部文件</span></b>' : '内部文件',\n    url: $('#noLoading#').lazyRule((path, name) => {\n        putMyVar('filePath', '0');\n        refreshPage(true);\n        return 'hiker://empty';\n    }),\n    col_type: 'scroll_button'\n}, {\n    title: select == '1' ? '““””<b><span style=\"color: red\">外部文件</span></b>' : '外部文件',\n    url: $('#noLoading#').lazyRule((path, name) => {\n        putMyVar('filePath', '1');\n        refreshPage(true);\n        return 'hiker://empty';\n    }),\n    col_type: 'scroll_button'\n}, {\n    col_type: 'line'\n}, {\n    title: '转存:' + (saveLocal == true ? '开' : '关'),\n    url: $('#noLoading#').lazyRule(() => {\n        dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\n        if (dmSettings.saveLocal == true) {\n            dmSettings.saveLocal = false;\n        } else {\n            dmSettings.saveLocal = true;\n        }\n        saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(dmSettings));\n        refreshPage(true);\n        return 'toast://弹幕存储路径已更改~'\n    }),\n    col_type: 'scroll_button'\n}, {\n    title: '双写:' + (doubleWrite == true ? '开' : '关'),\n    url: $('#noLoading#').lazyRule(() => {\n        dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\n        if (dmSettings.doubleWrite == true) {\n            dmSettings.doubleWrite = false;\n        } else {\n            dmSettings.doubleWrite = true;\n        }\n        saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(dmSettings));\n        refreshPage(true);\n        return 'toast://双写模式已更改~'\n    }),\n    col_type: 'scroll_button'\n}, {\n    title: '📤️打包分享📨',\n    url: $('#noLoading#').lazyRule((pathMap) => {\n        select = getMyVar('filePath', '0');\n        shareDirectory(pathMap[select], '来自dm盒子的弹幕合集文件.zip');\n        return 'hiker://empty';\n    }, pathMap),\n    col_type: 'scroll_button'\n})\n\n\n// 调用 listFilesInDir 函数，获取所有文件信息\n/* if (select=='0') {\n    var path = getPath('hiker://files/cache/danmu/');\n} else {\n    var path = getPath('/storage/emulated/0/Download/海阔视界/danmu/');\n} */\nvar path = getPath(pathMap[select]);\nvar files = listFilesInDir(path);\nd.push({\n    title: '🗑️清空♻️',\n    url: $(\"你确定嘛\").confirm((files) => {\n        if (files.length == 0) {\n            return 'toast://没有垃圾，。'\n        }\n        showLoading('删除中...');\n        files.forEach(el => deleteFile(el.path));\n        hideLoading();\n        refreshPage(true);\n        return 'toast://清空完毕'\n    }, files),\n    desc: '内部文件三天内自动删除|外部文件请定期删除',\n    col_type: 'text_center_1'\n})\nd.push({\n    col_type: 'line_blank'\n})\nif (files.length == 0) {\n    d.push({\n        title: '““””<font color=\"red\">暂时没有产生垃圾！</font>',\n        url: 'toast://去制造垃圾啊，。',\n        col_type: 'text_center_1'\n    });\n} else {\n    files.forEach(el => {\n        with (javaImport) {\n            avatar = ((new File(el.path)).isDirectory()) ? 'hiker://files/icon/文件类型/文件夹.svg' : 'hiker://files/icon/文件类型/文件.svg';\n        }\n        d.push({\n            title: el.name,\n            url: $('#noLoading#').lazyRule((path, name) => {\n                return $(['查阅', '分享', '删除'], 3, name).select((path) => {\n                    if (input == '查阅') {\n                        return 'openFile://' + path.replace('/storage/emulated/0/Android/data/com.example.hikerview/files/Documents/', 'hiker://files/');\n                    } else if (input == '分享') {\n                        return 'share://' + path;\n                    } else {\n                        deleteFile(path);\n                        refreshPage(true);\n                        return 'toast://删除成功';\n                    }\n                }, path)\n            }, el.path, el.name),\n            img: avatar,\n            desc: `弹幕数量：${el.danmuNum}条`,\n            col_type: 'avatar'\n        })\n    });\n}\nsetResult(d);\n"},{"name":"设置页","path":"setting","rule":"js:\nvar d = [];\ndmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\nfontSize = dmSettings.fontSize;\nstep = dmSettings.step;\nsearchType = dmSettings.search.searchType == 1 ? '指定小程序搜索' : '指定分组';\nsearchName = dmSettings.search.searchName;\ndmFrom = dmSettings.dmFrom;\nparseMethod = dmSettings.parseMethod;\nuseway = dmSettings.useway;\nd.push({\n    title: '📁 文件管理',\n    url: 'hiker://page/filesSystem#noHistory#',\n    col_type: 'text_1'\n});\n// 弹幕来源设置\nd.push({\n    title: '🌐 弹幕来源设置',\n    col_type: 'text_1'\n}, {\n    title: '<b>原生官源：</b>TXdm、bilidm、QYdm、YKdm、MGdm<br><b>野生官源：</b>zuoandm、hlsdm<br><b>建议：</b>自行搭配，优选官源（默认），具体情况自行选择。',\n    col_type: 'rich_text',\n    extra: { \"textSize\": 12 }\n});\nlet icons = {\n    'qq.com': 'hiker://files/rules/cy/tubiao/tx.svg',\n    'bilibili.com': 'hiker://files/rules/cy/tubiao/bilibili.svg',\n    'iqiyi.com': 'hiker://files/rules/cy/tubiao/iqiyi.svg',\n    'mgtv.com': 'hiker://files/rules/cy/tubiao/mgtv.svg',\n    'youku.com': 'hiker://files/rules/cy/tubiao/youku.svg'\n};\nfor (let from in dmFrom) {\n    d.push({\n        title: dmFrom[from],\n        url: $(\"\").lazyRule((parseMethod, from) => {\n            options = parseMethod.slice(5);\n            switch (from) {\n                case 'qq.com':\n                    options.unshift('TXdm');\n                    break;\n                case 'bilibili.com':\n                    options.unshift('bilidm');\n                    break;\n                case 'iqiyi.com':\n                    options.unshift('QYdm');\n                    break;\n                case 'mgtv.com':\n                    options.unshift('MGdm');\n                    break;\n                case 'youku.com':\n                    options.unshift('YKdm');\n                    break;\n            }\n            return $(options, 1).select((from) => {\n                curSettings = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\n                curSettings.dmFrom[from] = input;\n                let dmPath = getVar('dm_share', '');\n                const filenameWithExt = dmPath.split('/').pop();\n                const index = filenameWithExt.lastIndexOf('.');\n                const filename = index !== -1 ? filenameWithExt.substring(0, index) : filenameWithExt;\n                // 清除上一次解析的记忆\n                if (filename) {\n                    delete curSettings.history[filename];\n                    log('更改生效，上次解析记录已清除');\n                }\n                saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(curSettings));\n                refreshPage(true);\n                return \"toast://更改生效，请重新下载弹幕和挂载\";\n            }, from)\n        }, parseMethod, from),\n        img: icons[from],\n        col_type: 'icon_5'\n    });\n}\n// 弹幕参数设置\nd.push({\n    col_type: 'line_blank'\n});\nd.push({\n    title: '⚙ 弹幕参数设置',\n    col_type: 'rich_text'\n}, {\n    title: '““””弹幕大小:' + fontSize,\n    url: $(fontSize, \"请输入数字\").input(() => {\n        curSettings = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\n        try {\n            curSettings.fontSize = parseInt(input);\n        } catch (e) {\n            return 'toast://请输入数字！'\n        }\n        let dmPath = getVar('dm_share', '');\n        const filenameWithExt = dmPath.split('/').pop();\n        const index = filenameWithExt.lastIndexOf('.');\n        const filename = index !== -1 ? filenameWithExt.substring(0, index) : filenameWithExt;\n        // 清除上一次解析的记忆\n        if (filename) {\n            delete curSettings.history[filename];\n            log('更改生效，上次解析记录已清除');\n        }\n        saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(curSettings));\n        refreshPage(true);\n        return \"toast://更改生效，请重新下载弹幕和挂载\";\n    }),\n    desc: '““””弹幕大小请自行根据设备调整，默认25',\n    col_type: 'text_center_1'\n}, {\n    title: '““””弹幕步长:' + step,\n    url: $(step, \"请输入数字\").input(() => {\n        curSettings = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\n        try {\n            curSettings.step = parseInt(input);\n        } catch (e) {\n            return 'toast://请输入数字！'\n        }\n        let dmPath = getVar('dm_share', '');\n        const filenameWithExt = dmPath.split('/').pop();\n        const index = filenameWithExt.lastIndexOf('.');\n        const filename = index !== -1 ? filenameWithExt.substring(0, index) : filenameWithExt;\n        // 清除上一次解析的记忆\n        if (filename) {\n            delete curSettings.history[filename];\n            log('更改生效，上次解析记录已清除');\n        }\n        saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(curSettings));\n        refreshPage(true);\n        return \"toast://更改生效，请重新下载弹幕和挂载\";\n    }),\n    desc: '““””默认是1，数值越大弹幕数量越少，请合理更改数值',\n    col_type: 'text_center_1'\n});\n// 调用搜索设置\nd.push({\n    col_type: 'line_blank'\n});\nd.push({\n    title: '🔎 调用搜索设置',\n    col_type: 'rich_text'\n}, {\n    title: '““””搜索方式:' + searchType,\n    url: $(\"\").lazyRule(() => {\n        curSettings = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\n        curSettings.search.searchType = curSettings.search.searchType == 1 ? 2 : 1;\n        saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(curSettings));\n        refreshPage(true);\n        return \"hiker://empty\";\n    }),\n    desc: '““””1-调用小程序搜索\\n2-调用小程序分组搜索',\n    col_type: 'text_center_1'\n}, {\n    title: '““””小程序名/分组名:' + searchName,\n    url: $(\"\", \"请输入小程序名或分组名\").input(() => {\n        curSettings = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\n        curSettings.search.searchName = input;\n        saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(curSettings));\n        refreshPage(true);\n        return \"hiker://empty\";\n    }),\n    desc: '““””填写你喜欢的影视小程序或分组',\n    col_type: 'text_center_1'\n});\n// 更多设置\nd.push({\n    col_type: 'line_blank'\n});\nd.push({\n    title: '🦄 More',\n    col_type: 'rich_text'\n}, {\n    title: '““””观影方式:' + useway+'\\t【仅常规二级模式生效】',\n    url: $(\"\").lazyRule(() => {\n        return $(['仅用魔断', '仅用内置', '调用搜索', '仅下弹幕', '常规'], 2).select(() => {\n            curSettings = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\n            curSettings.useway = input;\n            saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(curSettings));\n            refreshPage(true);\n            return \"hiker://empty\";\n        })\n    }),\n    desc: '““””<small>常规模式可以自由选择；剩下的模式无需选择点击执行（其中仅用魔断和内置解析支持自动下一集挂载弹幕）</small>',\n    col_type: 'text_center_1'\n}, {\n    title: '““””下载弹幕',\n    url: $('', \"请输入标准的官方链接\").input(() => {\n        showLoading(\"正在获取...\");\n        dm = $.require('hiker://page/dmFun?rule=dm盒子').dmRoute(input);\n        hideLoading();\n        if (dm === false) {\n            log('下载出错');\n        }\n        dmPath = getPath(getVar('dm_share')).slice(7);\n        newFileName = input.substring(input.lastIndexOf(\"/\") + 1).replace('.html', '') + '.xml';\n        innerFilepath = getPath('hiker://files/cache/danmu/').slice(7) + newFileName;\n        var { renameFile, copyFile, moveFile } = $.require(\"hiker://page/fileAPI?rule=dm盒子\");\n        dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\n        saveLocal = dmSettings.saveLocal;\n        doubleWrite = dmSettings.doubleWrite;\n        if (saveLocal) {\n            destinationDir = '/storage/emulated/0/Download/海阔视界/danmu/';\n            renameFile(dmPath, newFileName);\n            if (doubleWrite) {\n                copyFile(innerFilepath, destinationDir);\n            } else {\n                moveFile(innerFilepath, destinationDir);\n            }\n        } else {\n            renameFile(dmPath, newFileName);\n        }\n        putVar('dm_share', innerFilepath.replace('/storage/emulated/0/Android/data/com.example.hikerview/files/Documents/', 'hiker://files/'));\n        return \"toast://下载完成，快去观影吧，。\";\n    }),\n    desc: '““””输入指定的官方链接，下载对应的弹幕',\n    col_type: 'text_center_1'\n}, {\n    title: '““””导入投屏辅助规则',\n    url: $(\"\").lazyRule(() => {\n        let rule = {\n            \"js\": JSON.stringify(\"hiker://page/setting#noHistory#?rule=dm盒子\"),\n            \"name\": \"弹幕配置\"\n        };\n        return \"rule://\" + base64Encode(\"￥projection_screen￥\" + JSON.stringify(rule));\n    }),\n    desc: '““””导入规则后可以在播放器竖屏界面从投屏规则进入本页面',\n    col_type: 'text_center_1'\n});\n\nsetHomeResult(d);\n"},{"name":"Parse_Dn.js","path":"Parse_Dn.js","rule":"//============免嗅调用============\n//－－－=^_^=\n\nvar version = \"3.49221205\";//1205\n\nvar updateDate = '2022/12/05/ 13:18';\nvar _mySet = {\n    qju: '默认',\n    oth:'道长仓库通免',\n    cjcache: 'hiker://files/cache/Parse_Dn.js',\n    themecache: 'hiker://files/cache/MyTheme.json',\n    jiexicache: 'hiker://files/cache/MyJiexi.json',\n    x5cache: 'hiker://files/cache/Parse_Dn.html',\n    dmCache: 'hiker://files/cache/diaomao.txt',\n    oldConfig: 'hiker://files/cache/MyParseSet.json',\n    ckLink: 'https://code.aliyun.com/AI957/Hiker/raw/master/v/',\n    // cj: 'https://code.aliyun.com/AI957/Hiker/raw/master/v/CloudParse-V2_Dn.js',\n    cj: 'https://gitcode.net/qq_32394351/dr/-/raw/master/dp/Parse_Dn.js',\n    // x5Url: 'https://code.aliyun.com/AI957/Hiker/raw/master/v/Parse_Dn.html',\n    x5Url: 'http://dr.nokia.press/html/Parse_Dn-vue.html',\n    parseRoute: 'hiker://files/rules/DuanNian/MyParse.json',\n    // x5Route: 'file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/cache/Parse_Dn.html'\n    x5Route: getPath('hiker://files/cache/Parse_Dn.html'),\n    batchRoute:getPath('hiker://files/cache/plscParse.html')\n};\nvar MyParseS = {};\nvar mySet = _mySet;\nif (fileExist(_mySet.parseRoute)) {\n    eval('var parseFile =' + fetch(_mySet.parseRoute));\n    MyParseS = parseFile.codes;\n    mySet = parseFile.settings;\n}\nvar parseTitle = [\n    \"yun1717\",\n    \"PanGu\",\n    \"FuXing\",\n    \"isVideo\",\n    \"defaultParse\",\n    \"道长仓库通免\",\n    \"timeOut\",\n    \"源码匹配\",\n    \"defaultParseWeb\",\n    \"OK解析\",\n    \"M3U8TV\",\n];\n//－－－=^_^=\n\n//接口设置.\n\nvar setUrl = \"hiker://page/Route?rule=MyFieldᴰⁿ&type=设置#noRecordHistory#\";\nvar set_switch = setUrl;\nvar lazy = `eval('var config_dp =' + fetch(getVar('oldConfig')));eval(fetch(config_dp.cj));aytmParse(input)`;\n\n//var parwix = `var yurl='https://daili.mayixiongdi.cn/?url=';Referer': 'https://www.mayixiongdi.cn/ys?id=';'https://daili.mayixiongdi.cn/api.php', 'Referer':'https://daili.mayixiongdi.cn';\n// 全民https://pcvideoaliyun.tianshangrenjian.mgtv.com.88wuma.com/?url=\n\n//－－－备 用－－－\n/*\n * 影视工场： https://ysgc.cc/\n * 江湖: 555电影 https://www.555dy2.com/phone.html ｜ 17看 http://17kanyy.cn/ http://jhjiexi.30vr.cn/?url= ｜ http://api.maizimall.com/index.php?url=\n * 江湖: http://www.tianshuyun.net/index.php/vod/play/id/448377/sid/1/nid/1.html\n * 江湖2: http://98hyk.cn/index.php/vod/play/id/72841/sid/1/nid/1.html\n * 人人迷: https://vip.susou.tv/player/?url= ｜ https://www.momdm.cc/\n *\n * wuigen: https://www.5igen.com/dmplayer/player/?url=\n * 干饭(人人迷): https://jx.zui.cm/?url=\n * https://2.66movie.top/player/?url=\n *\n */\n\n\nvar tools = {\n    MD5: function(data) {\n        eval(getCryptoJS());\n        return CryptoJS.MD5(data).toString(CryptoJS.enc.Hex);\n    },\n    AES: function(text, key, iv, isEncrypt) {\n        eval(getCryptoJS());\n        var key = CryptoJS.enc.Utf8.parse(key);\n        var iv = CryptoJS.enc.Utf8.parse(iv);\n        if (isEncrypt) {\n            return CryptoJS.AES.encrypt(text, key, {\n                iv: iv,\n                mode: CryptoJS.mode.CBC,\n                padding: CryptoJS.pad.Pkcs7\n            }).toString();\n        };\n        return CryptoJS.AES.decrypt(text, key, {\n            iv: iv,\n            padding: CryptoJS.pad.Pkcs7\n        }).toString(CryptoJS.enc.Utf8);\n    },\n    //ascii\n    nextCharacter: function(asciiValue, k) {\n        var s = asciiValue;\n        return String.fromCharCode(s + k);\n    },\n    //凯撒\n    caesarCipher: function(stringValue, k) {\n        var newString = \"\";\n        for (var i = 0; i < stringValue.length; i++) {\n            newString += this.nextCharacter(stringValue[i].charCodeAt(), k);\n        }\n        return newString;\n    },\n    nowDate: function() {\n        var date1 = new Date();\n        var dateStr = \"\";\n        if (date1) {\n            dateStr = date1.getFullYear();\n            var month = date1.getMonth() + 1;\n            var day = date1.getDate();\n            if (month < 10) {\n                dateStr += \"-0\" + month;\n            } else {\n                dateStr += \"-\" + month;\n            }\n            if (day < 10) {\n                dateStr += \"-0\" + day;\n            } else {\n                dateStr += \"-\" + day;\n            }\n        }\n        return dateStr;\n    },\n    nowDateStr:function (){ // 利用$工具获取格式化后的当前时间\n        return  $.dateFormat(new Date(),\"yyyy-MM-dd HH:mm:ss\");\n    },\n    toJSON: function(json) {\n        return JSON.stringify(json, (key, value) => {\n            if (typeof value == 'function') {\n                return value.toString();\n            } else {\n                return value;\n            }\n        }, 4);\n    },\n    toVNum: function(a) {\n        var a = a.toString();\n        var c = a.split('.');\n        var num_place = [\"\", \"0\", \"00\", \"000\", \"0000\"],\n            r = num_place.reverse();\n        for (var i = 0; i < c.length; i++) {\n            var len = c[i].length;\n            c[i] = r[len] + c[i];\n        }\n        var res = c.join('');\n        return res;\n    },\n    cprVersion: function(a, b) {\n        var _a = parseInt(this.toVNum(a)),\n            _b = parseInt(this.toVNum(b));\n        b = isNaN(_b) ? version : b;\n        if (_a > _b) {\n            putVar('jxNewV', '有新版本: ' + a);\n        } else {\n            clearVar('jxNewV');\n        }\n        putVar('jxOldV', b);\n    },\n    atob:function (str){\n        require('https://cdn.jsdelivr.net/npm/js-base64@3.7.2/base64.min.js');\n        return Base64.atob(str);\n    },\n    btoa:function (str){\n        require('https://cdn.jsdelivr.net/npm/js-base64@3.7.2/base64.min.js');\n        return Base64.btoa(str);\n    },\n    江湖:function (config_url, tem, token) {\n        require('https://cdn.jsdelivr.net/npm/js-base64@3.7.2/base64.min.js');\n        var atob=Base64.atob;\n        var btoa=Base64.btoa;\n        var config_a = tem || \"ffsirllq\";\n        var video = '';\n        var tem = [];\n        var config_arry = [];\n        var config_b = config_a.length;\n        if (token == 0x1) {\n            var config_url = atob(config_url);\n        } else {\n            var config_url = encodeURIComponent(config_url);\n        }\n        var config_c = config_url.length;\n        for (i = 0x0; i < 0x100; i++) {\n            tem[i] = config_a[i % config_b].charCodeAt();\n            config_arry[i] = i;\n        }\n        for (j = i = 0x0; i < 0x100; i++) {\n            j = (j + config_arry[i] + tem[i]) % 0x100;\n            tmp = config_arry[i];\n            config_arry[i] = config_arry[j];\n            config_arry[j] = tmp;\n        }\n        for (a = j = i = 0x0; i < config_c; i++) {\n            a = (a + 0x1) % 0x100;\n            j = (j + config_arry[a]) % 0x100;\n            tmp = config_arry[a];\n            config_arry[a] = config_arry[j];\n            config_arry[j] = tmp;\n            k = config_arry[(config_arry[a] + config_arry[j]) % 0x100];\n            video += String.fromCharCode(config_url[i].charCodeAt() ^ k);\n        }\n        log(decodeURIComponent(video));\n        if (token == 0x1) {\n            return decodeURIComponent(video);\n        } else {\n            return btoa(video);\n        }\n    }\n};\nif (getVar(\"jxOldV\", \"0\") != version) {\n    putVar('cjCache', _mySet.cjcache);\n    putVar('x5Cache', _mySet.x5Cache);\n    putVar('oldConfig', _mySet.oldConfig);\n    putVar('parseRoute', _mySet.parseRoute);\n    // let jxNewV = fetch('https://gitee.com/Duan-Nian/Dn/raw/master/hikerview/ParseVersion.txt');\n    let jxNewV = fetch('https://gitcode.net/qq_32394351/dr/-/raw/master/dp/ParseVersion.txt');\n    let jxOldV = (fetch(_mySet.cjcache).split('version = \"')[1] + '').split('\"')[0];\n    tools.cprVersion(jxNewV, jxOldV);\n}\n\nvar ParseS = {};\nvar originalParseS = {\n    // updateDate: updateDate,\n    parseLc:'https://code.aliyun.com/AI957/Hiker/raw/master/p/parseLc.js',\n    CityIP: 'http://pv.sohu.com/cityjson',\n    pcUA: 'User-Agent@Mozilla/5.0 (Windows NT 10.0\\；\\； WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.87 Safari/537.36',\n    cacheM3u8: function(vUrl, ref) {\n        let paramas = ref?{headers:{Referer:ref}}:{};\n        return cacheM3u8(url, paramas)\n    },\n    isVideo:function(playUrl){\n        const {isVideo} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\n        return isVideo(playUrl)\n    },\n    timeOut:function () {\n        const lsg=$.require(\"hiker://page/localStorage?rule=道长仓库Pro\");\n        return parseInt(lsg.getItem('timeout', '5000'));  //超时\n    },\n    源码匹配:function (vipUrl,regex,pos,headers){\n        if(!regex||!vipUrl){\n            return 'toast://解析播放链接和正则匹配字符串必填!'\n        }\n        if((!pos&&pos!==0)||(pos&&typeof(pos)!=\"number\")){//match匹配位置\n            pos = 1\n        }\n        headers = headers||{};\n        headers['User-Agent'] = headers['User-Agent']||MOBILE_UA;\n        let html = fetch(vipUrl, {headers:headers,timeout:this.timeOut()});\n        try {\n            let realUrl = html.match(new RegExp(regex))[pos];\n            return this.isVideo(realUrl);\n        } catch (e) {\n            log(e.message);\n            return vipUrl;\n        }\n    },\n    defaultParse: function(url,timeout) {\n        return ParseS.defaultParseWeb(url,timeout);\n    },\n    defaultParseWeb: function(playUrl,timeout,extra) {\n        // log('传入defaultParseWeb的超时:'+timeout);\n        timeout = parseInt(timeout)||parseInt(getVar('dp.jxTimeout','5000'))||5000;\n        extra = extra||{};\n        let playUrlList = extra.playUrlList||[];\n        if(typeof(playUrlList)==='object'&&playUrlList.length>0){\n            playUrlList.unshift(playUrl);\n            let playUrls=playUrlList.slice(0,4);\n            let names=extra.nameList.slice(0,4);\n            // log('开始批量解析(已去重,只取前3个备胎，加道长群:486722328获取最新魔断动态):'+names);\n            playUrls=playUrls.map((it,id)=>it+\";\"+names[id]);\n            //log(playUrls);\n            const {LazyParseFast} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\n            let ret = LazyParseFast(playUrls,timeout,timeout);\n            if(typeof(ret)==='object'&&ret.length>0){\n                //return ret[0]\n                //log(ret);\n                let v = getAppVersion();\n                if(parseInt(v)>=2194&&ret.length>1){\n                    let urls = Array.from(new Set(ret));\n                    names=urls.map((it,id)=>it.split(\"★\").length>1?it.split(\"★\")[1]:\"线路:\"+parseInt(id+1));\n                    urls=urls.map(it=>it.split(\"★\")[0]);\n                    let headers = urls.map((it)=>{\n                        if(!/;/.test(it)||it.split(';').length<2){\n                            return {}\n                        }else{\n                            let head = it.split(';')[1];\n                            if(!/@/.test(head)||!/{|}/.test(head)){\n                                return {}\n                            }\n                            head=head.split(\"{\")[1].split(\"}\")[0];\n                            //head = head.replace(/{|}/g,'');\n                            head = head.split('&&');\n                            let obj = {};\n                            for(let i in head){\n                                let key = head[i].split('@')[0];\n                                let value = head[i].split('@')[1].replace(/;/,'；；');\n                                obj[key] = value;\n                            }\n                            return obj\n                        }\n                    });\n                    urls = urls.map((it)=>{\n                        let turl=it.split(';')[0];\n                        if(it.includes(\"#isVideo=true#\")&&!turl.includes(\"#isVideo=true#\")){\n                            turl+=\"#isVideo=true#\";\n                        }\n                        return turl\n                    });\n                    return JSON.stringify({urls:urls,headers:headers,names:names});\n                }else{\n                    return ret[0].split(\"★\")[0]\n                }\n            }else{\n                return ret\n            }\n        }else{\n            const {lazyParse} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\n            let x5Play=lazyParse(playUrl,timeout);\n            if(typeof(x5Play)==\"undefined\"||!x5Play){\n                return \"toast://道长仓库解析失败\"\n            }\n            let tips=/x5Rule|webRule/.test(x5Play)?\"x5/web免嗅开始\":\"极速免嗅探完毕，地址:\"+(/^http/.test(x5Play)?x5Play:'非正常链接');\n            log(tips);\n            return x5Play;\n        }\n    },\n    \"maoss\":\n        function (jxurl, ref, key) {\n            return this.猫(jxurl, ref, key)\n        },\n    免嗅:function(vipUrl,k){\n        k=k||[\"url\",\"data.url\"];\n        try{\n            let rjson=JSON.parse(fetch(vipUrl));\n            //log(rjson);\n            let realUrl='';\n            if(typeof(k)=='string'){\n                realUrl=eval(`rjson.${k}`);\n            }else if(Array.isArray(k)){\n                for(let i of k){\n                    //log(i);\n                    realUrl=eval(`rjson.${i}`);\n                    if(realUrl){\n                        break;\n                    }\n                }\n            }\n            if(realUrl.startsWith('/')){\n                realUrl = 'https://'+realUrl;\n            }\n            return this.isVideo(realUrl)||\"\";\n        }catch(e){\n            log(e.message);\n            return \"\"\n        }\n    },\n    X5:function(vipUrl,ref){// https://api.52wyb.com/webcloud/?v=http://vip.1905.com/play/691940.shtml http://www.cdcer.net/\n        let _x5 = $.toString((vipUrl) => {\n            if(!location.href.includes(vipUrl)){\n                location.href = vipUrl;\n            }\n            if(window.count == null){\n                window.count=1;\n            }\n            window.count++;\n            if( window.count >= 20){\n                fba.log(\"未获取到资源地址，跳到解析页\");\n                return vipUrl\n            }\n            var urls = _getUrls();\n            for (var i in urls) {\n                if (!/playm3u8|m3u8\\.tv/.test(urls[i]) && urls[i].match(/\\.mp3|\\.mp4|\\.m3u8|\\.flv/)) {\n                    fba.log(urls[i]);\n                    return urls[i]\n                }\n            }\n        },vipUrl);\n        let playUrl = ref?ref:vipUrl;\n        let x5Url = 'webRule://'+playUrl+ '@' +_x5;\n        showLoading('魔断.js嗅探中...');\n        return x5Url\n    },\n    '道长':function (vipUrl){\n        evalPrivateJS('zSWve+eeA6iL+f2fGTI+1pR8jnLd0SiyV6yvgcPMWwBMP5aYpqhTFbISxnvhb0bd5VgizyUMHe4dmsnGhWLBkqfb5HfNbIW4MBMxzLpP/9TjNT8SIQAfjdTj4P8oX35ekKNvGVxDolyfcYrpoKwNoQ==');\n        return this.免嗅(vipUrl+'&secret='+secret)\n    },\n    '猫':function (jxurl, ref, key) {\n        try {\n            var getVideoInfo = function (text) {\n                return tools.AES(text, key, iv);\n            };\n            let headers = {headers: {\"Referer\": ref||''}};\n            key = key == undefined ? \"dvyYRQlnPRCMdQSe\" : key;\n            var html = ref?request(jxurl, headers):request(jxurl);\n            if (/&btwaf=/.test(html)) {\n                html = request(jxurl + \"&btwaf\" + html.match(/&btwaf(.*?)\"/)[1], headers);\n            }\n            var iv = html.split(\"_token = \\\"\")[1].split(\"\\\"\")[0];\n            eval(html.match(/var config = {[\\s\\S]*?}/)[0] + \"\");\n            if (!/^http/.test(config.url)) {\n                config.url = decodeURIComponent(tools.AES(config.url, key, iv));\n            }\n            return config.url;\n        }\n        catch (e) {\n            // return \"\";\n            return jxurl;\n        }\n    },\n    LLQ: function(jxurl) {\n        try {\n            var api = jxurl.split('?url=')[0] + \"api.php\";\n            var b64id = base64Encode(jxurl.split('url=')[1]);\n            var parseid = tools.caesarCipher(b64id, -1);\n            var json = JSON.parse(request(api, {\n                headers: {\n                    'Referer': jxurl\n                },\n                method: 'POST',\n                body: 'url=' + parseid\n            }));\n            url = (json.code == 200 ? base64Decode(tools.caesarCipher(json.url, -1)) : '');\n            return url;\n        } catch (e) {\n            return '';\n        }\n    },\n    PanGu: function(vipUrl, data) {\n        try {\n            /*var ref = 'https://www.pangujiexi.com/';\n            var parse = 'https://panguapi.ntryjd.net/jiexi/?url=' + vipUrl;\n            var api = 'https://panguapi.ntryjd.net/jiexi/api.php';\n            */\n            //var ref = 'https://xmystv.com/';\n            //var parse = 'https://www.99kpw.com/pangu/index.php?url=' + tailUrl;\n            //var api = 'https://www.99kpw.com/pangu/api.php';\n            var parse = 'https://www.pangujiexi.com/pangu/?url=' + vipUrl;\n            var api = 'https://panguapi.ntryjd.net/pangu2021/api.php';\n            if (data) {\n                ref = data[0];\n                parse = data[1];\n                api = data[2];\n            }\n            var Time = (Math.floor(new Date().getTime() / 1000) * 1).toString();\n            var url = JSON.parse(request(api, {\n                headers: {\n                    'Referer': parse\n                },\n                body: 'url=' + vipUrl + '&referer=' + base64Encode(parse) + '&ref=1&time=' + Time + '&type=&other=' + base64Encode(vipUrl) + '&ios=0',\n                method: 'POST'\n            })).url;\n            return url;\n        } catch (e) {\n            return '';\n        }\n    },\n    yun1717: function (vipUrl) {\n        var isyk = vipUrl.indexOf('youku');\n        var ref = \"https://www.1717yun.com/jx/ty.php?url=\" + vipUrl;\n        var parse = \"https://1717yun.com.zh188.net/0828/?url=\" + vipUrl;\n        var api = \"https://1717yun.com.zh188.net/1004/..index..php\";\n        return isyk == -1 ? this.PanGu(vipUrl, [ref, parse, api]) : this.PanGu(vipUrl, [ref + ',vip:', parse + ',vip:', api]);\n    },\n    OK解析:'https://okjx.cc/?url=',\n    M3U8TV:'https://jx.m3u8.tv/jiexi/?url=',\n    道长仓库通免:function (url,timeout){\n        return ParseS.defaultParseWeb(url,timeout);\n    },\n    FuXing: function(vipUrl) {\n        try {\n            //if(vipUrl.indexOf('v.youku')!=-1){\n            //    vipUrl = (JSON.parse(request(vipUrl, {redirect:false, withHeaders:true})).headers.location + '').replace(/\\?.*/,'');\n            //}\n            var ref = 'https://jx.xuetuiguang.cn/jiexi/?url=' + vipUrl;\n            var parse = ref;\n            var api = 'https://jx.xuetuiguang.cn/jiexi/apiu_fx.php';\n            return this.PanGu(vipUrl, [ref, parse, api]);\n        } catch (e) {\n            return '';\n        }\n    },\n};\n\nObject.assign(ParseS, originalParseS, MyParseS);\n//覆盖顺序，第三个覆盖第二个然后覆盖第一个\n\n\nfunction aytmParse(vipUrl,strTitle,timeout,playUrl) {\n    // 参数1:正版网址地址 参数2 定向解析接口名称 参数3 x5解析超时 参数4 完整的播放链接\n    strTitle = strTitle||'';\n    vipUrl = decodeURIComponent(vipUrl);\n    if(!/miguvideo/.test(vipUrl)){\n        vipUrl=vipUrl.split('#')[0].split('?')[0];\n    }\n    playUrl=decodeURIComponent(playUrl)||vipUrl||'';\n    // log('传入aytmParse的超时:'+timeout);\n    timeout = parseInt(timeout)||parseInt(getVar('dp.jxTimeout','5000'))||5000;\n\n    //-------------------------------------------------\n    let jxsRoute = \"hiker://files/cache/MyJiexi.json\";\n    let MyJiexi = {};\n    let jiexis = {};\n    try {\n        MyJiexi = JSON.parse(fetch(jxsRoute));\n        jiexis = MyJiexi.jiexis.filter(it=>it.name===MyJiexi.now)[0];\n    }catch (e) {}\n    function getPlayJx(key){\n        let playUrlList = [];//批量播放地址列表\n        let nameList = [];\n        let jxs = jiexis[key]; // 适用于这个网站的解析列表\n        if(jxs){\n            for(let i in jxs){\n                if(typeof ParseS[jxs[i]] == 'string'&&ParseS[jxs[i]].match(/http.*?=/)){\n                    playUrlList.push(ParseS[jxs[i]]+vipUrl);\n                    nameList.push(jxs[i]);\n                }\n            }\n        }\n        // return playUrlList\n        return {playUrlList:playUrlList,nameList:nameList}\n    }\n    function getLazyList(key){//只获取备胎列表的免嗅探解析列表\n        let parses = [];\n        let jxs = jiexis[key]||[]; // 适用于这个网站的解析列表\n        // log(jxs);\n        if(jxs){\n            for(let i in jxs){\n                if(typeof ParseS[jxs[i]] == 'function'&&!/通免/.test(ParseS[jxs[i]].toString())){\n                    parses.push({\n                        name:jxs[i],\n                        // rule:ParseS[jxs[i]]\n                    })\n                }\n            }\n        }\n        return parses\n    }\n    var extra = {};\n    var parses = []; //免嗅探列表\n    //-------------------------------------------------------\n    if(!strTitle){\n        if(/LT/.test(vipUrl)){\n            str = mySet.lt;\n            extra = getPlayJx('lt');\n            parses = getLazyList('lt',str);\n        } else if(/renrenmi/.test(vipUrl)){\n            str = mySet.rr;\n            extra = getPlayJx('rr');\n            parses = getLazyList('rr',str);\n        }else if(/wuduyun/.test(vipUrl)){\n            str = mySet.wd;\n            extra = getPlayJx('wd');\n            parses = getLazyList('wd',str);\n        }else if(/yanaifei|xinluan|LT|ruifenglb|suoyo|xfy|renrenmi|RongXingVR|xueren|wuduyun|laodi|Naifeimi|daodm|XMMT|v020c/.test(vipUrl)){\n            str = mySet.oth;\n            extra = getPlayJx('oth');\n            parses = getLazyList('oth',str);\n        }else{\n            var host;\n            try{\n                host = vipUrl.match(/\\.(.*?)\\//)[1];\n            }catch(e){\n                if(!/^http/.test(playUrl)){\n                    return \"断插调用失败！\\n非正常的vip正版地址且未识别原站解析播放地址\";\n                }else{\n                    return ParseS.道长仓库通免(playUrl,timeout)\n                }\n            }\n            //host = decodeURIComponent(host);\n            switch (mySet.qju) {\n                case \"默认\":\n                    switch (host) {\n                        case \"qq.com\":\n                            str = mySet.tx;\n                            extra = getPlayJx('tx');\n                            parses = getLazyList('tx');\n                            break;\n                        case \"iqiyi.com\":\n                            str = mySet.qy;\n                            extra = getPlayJx('qy');\n                            parses = getLazyList('qy');\n                            break;\n                        case \"youku.com\":\n                            str = mySet.yk;\n                            extra = getPlayJx('yk');\n                            parses = getLazyList('yk');\n                            break;\n                        case \"alizy\":\n                            str = mySet.al;\n                            extra = getPlayJx('al');\n                            parses = getLazyList('alizy');\n                            break;\n                        case \"mgtv.com\":\n                            str = mySet.mg;\n                            extra = getPlayJx('mg');\n                            parses = getLazyList('mg');\n                            break;\n                        case \"bilibili.com\":\n                            str = mySet.bl;\n                            extra = getPlayJx('bl');\n                            parses = getLazyList('bl');\n                            break;\n                        case \"sohu.com\":\n                            str = mySet.sh;\n                            extra = getPlayJx('sh');\n                            parses = getLazyList('sh');\n                            break;\n                        case \"tv.sohu.com\":\n                            str = mySet.sh;\n                            extra = getPlayJx('sh');\n                            parses = getLazyList('sh');\n                            break;\n                        case \"ixigua.com\":\n                            str = mySet.xg;\n                            extra = getPlayJx('xg');\n                            parses = getLazyList('xg');\n                            break;\n                        case \"pptv.com\":\n                            str = mySet.pp;\n                            extra = getPlayJx('pp');\n                            parses = getLazyList('pp');\n                            break;\n                        case \"miguvideo.com\":\n                            str = mySet.mi;\n                            extra = getPlayJx('mi');\n                            parses = getLazyList('mi');\n                            break;\n                        case \"le.com\":\n                            str = mySet.le;\n                            extra = getPlayJx('le');\n                            parses = getLazyList('le');\n                            break;\n                        case \"1905.com\":\n                            str = mySet.one;\n                            extra = getPlayJx('one');\n                            parses = getLazyList('one');\n                            break;\n                        case \"fun.tv\":\n                            str = mySet.fun;\n                            extra = getPlayJx('fun');\n                            parses = getLazyList('fun');\n                            break;\n                        default:\n                            str = mySet.oth;\n                            extra = getPlayJx('oth');\n                            parses = getLazyList('oth');\n                            break;\n                    }\n                    break;\n                default:\n                    str = mySet.qju;\n                    break;\n            }\n        }\n    }else{\n        log('魔断执行定向解析线路头:'+strTitle);\n        str = strTitle;\n    }\n    let withBatch = !!(MyJiexi.isAuto && MyJiexi.autoMode === '速度优先');\n    let withBatchOrder = !!(MyJiexi.isAuto && /顺序优先|嗅探优先/.test(MyJiexi.autoMode));\n    let singleBack = MyJiexi.singleBack||false; //吊毛模式。单个结果直接返回，停止后面的\n    let ignore_mx = MyJiexi.ignore_mx||false; //忽略免嗅,嗅探优先模式使用\n    let use_mx = !(MyJiexi.autoMode === '嗅探优先' && MyJiexi.ignore_mx); // 只要不是免嗅优先模式下的忽略免嗅,都使用免嗅\n    let dmPath = 'hiker://files/cache/diaomao.txt';//吊毛模式过滤文件路径\n    let dmUrls;\n    try {\n        dmUrls = fetch(dmPath).trim().split('\\n').filter(it=>it&&!it.startsWith('//'));\n    }catch (e) {\n        dmUrls = [];\n    }\n    function hasDm(videoUrl,dmUrls){//播放地址是否为吊毛视频\n        if(dmUrls.length<1){\n            return false\n        }\n        for(let dmUrl of dmUrls){\n            if((new RegExp(dmUrl)).test(videoUrl)){//播放地址包含吊毛标志的地址\n                return true\n            }\n        }\n        return false\n    }\n\n    function unique2(array){//去重函数\n        return Array.from(new Set(array));\n    }\n    function ArrSet(Arr, id) {//对象数组去重\n        var obj = {};\n        const arrays = Arr.reduce((setArr, item) => {\n            obj[item[id]] ? '' : obj[item[id]] = true && setArr.push(item);\n            return setArr;\n        }, []);\n        return arrays;\n    }\n    function sortByKey(array, key, order) {//对象数组按某个键值排序\n        return array.sort(function(a, b) {\n            var x = parseInt(a[key].match(/(\\d+)/)[1]);//修复大于10出问题\n            var y = parseInt(b[key].match(/(\\d+)/)[1]);\n            // log('x:'+x+\",y:\"+y);\n            if (order) {\n                return ((x < y) ? -1 : ((x > y) ? 1 : 0))\n            } else {\n                return ((x < y) ? ((x > y) ? 1 : 0) : -1)\n            }\n        })\n    }\n    if (typeof ParseS[str] == 'function') { // 主配置放免嗅才会触发(不太友好,躺平不想优化)\n        if(/通免/.test(str)){\n            return ParseS[str](vipUrl,timeout);\n        }\n        var url;\n        var task = function(obj) {\n            eval('var config_dp =' + fetch(getVar('oldConfig')));\n            eval(fetch(config_dp.cj));\n            return aytmParse(obj.vipUrl,obj.name,obj.timeout);\n        };\n        let t = (new Date()).getTime();\n        if (Array.isArray(extra.playUrlList) && extra.playUrlList.length > 0) {\n            extra.nameList = unique2(extra.nameList);\n            extra.playUrlList = unique2(extra.playUrlList);\n        }else{\n            extra.nameList = [];\n            extra.playUrlList = [];\n        }\n        function getMyUrls(urls){\n            return urls.map((it) => {\n                let turl = it.split(';')[0];\n                if (it.includes(\"#isVideo=true#\") && !turl.includes(\"#isVideo=true#\")) {\n                    turl += \"#isVideo=true#\";\n                }\n                return turl\n            });\n        }\n\n        function getMyHeaders(urls){\n            return urls.map((it) => {\n                if (!/;/.test(it) || it.split(';').length < 2) {\n                    return {}\n                } else {\n                    let head = it.split(';')[1];\n                    if (!/@/.test(head) || !/{|}/.test(head)) {\n                        return {}\n                    }\n                    head = head.split(\"{\")[1].split(\"}\")[0];\n                    //head = head.replace(/{|}/g,'');\n                    head = head.split('&&');\n                    let obj = {};\n                    for (let i in head) {\n                        let key = head[i].split('@')[0];\n                        let value = head[i].split('@')[1].replace(/;/, '；；');\n                        obj[key] = value;\n                    }\n                    return obj\n                }\n            });\n        }\n\n        function getMyPlayUrlList(){\n            if(Array.isArray(extra.playUrlList)){\n                // return extra.playUrlList.map(it=>'video://'+it.replace('?url=','?id='+t+'&url=').replace('?v=','?id='+t+'&v='));\n                return extra.playUrlList.map(it=>'video://'+it);\n            }\n            return []\n        }\n\n\n        if(!withBatchOrder||strTitle) {//不开多线路顺序优先或者指定了解析\n            url = ParseS[str](vipUrl,timeout);\n        }\n        else{//开了多线路顺序优先执行免嗅多任务\n            if(typeof ParseS[str] == 'function'&&!/通免/.test(ParseS[str].toString())){\n                parses.unshift({name:str}); //把主配置的免嗅探加入到多任务列表\n            }\n            parses = ArrSet(parses,'name'); //去重\n            if(use_mx) { // 如果使用免嗅,先多任务跑免嗅\n                var count = parses.length; //设置任务数量\n                log('魔断开启多任务解析,任务数量:' + count);\n                log('解析列表:' + JSON.stringify(parses));\n                var parseRet = []; //解析结果列表\n                let tasks = parses.map((it, idex) => {\n                    return {\n                        func: task,\n                        param: {\n                            name: it.name,\n                            // rule:it.rule,\n                            vipUrl: vipUrl,\n                            timeout: timeout\n                        },\n                        id: \"task\" + idex\n                    }\n                });\n                showLoading(\"魔断并发解析中，剩余解析:\" + count);\n\n                function isDm(ret) {\n                    if (!ret) {\n                        return true\n                    }\n                    return hasDm(ret.split('#')[0].split(';')[0], dmUrls)\n                }\n\n                be(tasks, {\n                    func: function (obj, id, error, ret) {\n                        log(\"监听到任务\" + id + '已结束,error:' + error + ',ret:' + ret);\n                        ret = ret || '';\n                        parseRet.push({\n                            task: id,\n                            ret: ret,\n                            name: tasks.filter(it => it.id === id)[0].param.name\n                        });\n\n                        if (singleBack) {//吊毛模式开始的话,判断ret有效性\n                            log('任务' + id + '结果是吊毛?' + isDm(ret));\n                            if (!isDm(ret) && ParseS.isVideo(ret.split('#')[0].split(';')[0])) {\n                                hideLoading();\n                                log('吊毛模式中断解析并返回视频' + ret);\n                                return 'break'\n                            }\n                        }\n                        count -= 1; //完成了任务，任务数量-1\n                        //log(obj);\n                        if (count > 0) {\n                            showLoading(\"魔断并发解析中，剩余解析:\" + count)\n                        } else {\n                            hideLoading();\n                        }\n                    },\n                    param: {//传到监听函数的obj参数里\n                        hi: \"ccc\",\n                    }\n                });//执行多任务\n                // let valuable = parseRet.filter(it=>/m3u8|mp4/.test(it.ret));\n                log(\"多任务执行结果数:\" + parseRet.length);\n                let valuable = [];\n                parseRet.forEach((it)=>{\n                    if(it.ret){\n                        if(/names/.test(it.ret)&&/urls/.test(it.ret)){\n                            log('尝试聚合解析解包:'+it.ret);\n                            try {\n                                let rets = JSON.parse(it.ret.replace(/#isVideo=true#/g,''));\n                                rets.names.forEach((name,idex)=>{\n                                    valuable.push({\n                                        name:name,\n                                        ret:rets.urls[idex],\n                                        task:it.task,\n                                    });\n                                });\n                            }catch (e) {\n                                log('解包发生错误:'+e.message);\n                            }\n                        }else if(ParseS.isVideo(it.ret.split('#')[0].split(';')[0])){\n                            valuable.push(it);\n                        }else if(it.ret.startsWith('video://')){\n                            valuable.push(it);\n                        }\n                    }\n                });\n                // let valuable = parseRet.filter(it => it.ret && ParseS.isVideo(it.ret.split('#')[0].split(';')[0]));\n                valuable = valuable.filter(it => !isDm(it.ret));//过滤吊毛视频\n                log('多任务顺序执行有效结果:' + JSON.stringify(valuable));\n                if (valuable.length > 1) {//多线路\n                    valuable = sortByKey(valuable, 'task', true);//升序排列\n                    let urls = valuable.map(it => it.ret);//取出链接,缓存前的\n                    if (getVar('dp.cacheVideo', 'true') === 'true' && parseInt(getAppVersion()) >= 2255) {//开始缓存\n                        log(\"尊敬的魔断用户，视频缓存已启用，请尽情享受看剧时光\");\n                        let videosCache = urls.map((it) => {\n                            let headers = {};\n                            if (it.split(\";\").length > 1) {\n                                let head = it.split(';')[1];\n                                if (/@/.test(head) && /{|}/.test(head)) {\n                                    //head = head.replace(/{|}/g,'');\n                                    head = head.split(\"{\")[1].split(\"}\")[0];\n                                    head = head.split('&&');\n                                    for (let i in head) {\n                                        let key = head[i].split('@')[0];\n                                        let value = head[i].split('@')[1].replace(/;/, '；；');\n                                        headers[key] = value;\n                                    }\n                                }\n                            }\n                            return {\n                                url: it.split(\";\")[0].split(\"#\")[0],\n                                options: {\n                                    headers: headers\n                                }\n                            }\n                        });\n                        var data = batchCacheM3u8(videosCache);\n                        data = data.map((it, id) => {\n                            let extra = \"\";\n                            if (urls[id].split(\";\").length > 1) {\n                                extra = \";\" + urls[id].split(\";\")[1];\n                            } else if (urls[id].split(\"★\").length > 1) {\n                                extra = \"★\" + urls[id].split(\"★\")[1];\n                            }\n                            if (it + \"\" !== \"null\") {\n                                return it + extra\n                            } else {\n                                return urls[id]\n                            }\n                        });\n                        urls = data\n                    }\n                    // log('排序完毕后结果:'+JSON.stringify(valuable));\n                    let names = valuable.map(it => it.name);\n                    let headers = getMyHeaders(urls);\n                    urls = getMyUrls(urls);\n                    if(MyJiexi.autoMode === '嗅探优先'){\n                        urls = urls.concat(getMyPlayUrlList());\n                        names = names.concat(extra.nameList);\n                        // headers = headers.concat(extra.nameList.map((it)=>{return {}}));\n                    }\n                    return JSON.stringify({urls: urls, headers: headers, names: names});\n\n                } else if (valuable.length === 0) {\n                    if (extra.nameList.length < 1) {\n                        hideLoading();\n                        return 'toast://芭比Q了,多任务免嗅解析全军覆没并且没有可用的json|x5解析了'\n                    }\n                    showLoading(\"魔断多任务免嗅失败,尝试json|x5\");\n                    //排除第一个\n                    let extra2 = {\n                        nameList: extra.nameList,\n                        playUrlList: extra.playUrlList.slice(1),\n                    }\n                    if(MyJiexi.autoMode === '嗅探优先'){\n                        return JSON.stringify({\n                            urls: getMyPlayUrlList(),\n                            names: extra.nameList\n                        });\n                    }else{\n                        return ParseS.defaultParseWeb ? ParseS.defaultParseWeb(extra.playUrlList[0], timeout, extra2) : extra.playUrlList[0];\n                    }\n                    // log(extra.playUrlList[0]);\n                    // log(extra2);\n\n                } else {\n                    // 免嗅后只有一个结果,嗅探优先自动拼x5和json, 顺序优先自动返回一个播放链接\n                    if(MyJiexi.autoMode === '嗅探优先') {\n                        let urls = valuable.map(it => it.ret);//取出链接,缓存前的\n                        let names = valuable.map(it => it.name);\n                        let headers = getMyHeaders(urls);\n                        urls = getMyUrls(urls);\n                        names = names.concat(extra.nameList);\n                        urls = urls.concat(getMyPlayUrlList());\n                        // headers = headers.concat(extra.nameList.map((it)=>{return {}}));\n                        return JSON.stringify({\n                            urls: urls,\n                            names: names,\n                            headers:headers\n                        });\n                    }else{\n                        return valuable[0].ret\n                    }\n                }\n            }else{ // 纯video://分支\n                if (extra.nameList.length < 1) {\n                    hideLoading();\n                    return 'toast://芭比Q了,多任务免嗅解析全军覆没并且没有可用的json|x5解析了'\n                }\n                log(\"魔断多任务免嗅失败,尝试json|x5\");\n                return JSON.stringify({\n                    urls: getMyPlayUrlList(),\n                    names: extra.nameList\n                });\n            }\n        }\n        if(/^hiker:|^toast:|^rule:|^x5Rule:|^webRule:|^select/.test(url)){\n            return url;\n        }\n        if(!url&&!/^http/.test(vipUrl)){\n            return 'toast://魔断解析失败>'+vipUrl\n        }\n        // log(vipUrl+'免嗅探结果:'+url);\n        if (/^\\//.test(url)) {\n            url = 'https:' + url\n        }\n        // 魔断免嗅截取\n        // if (/=http/.test(url)) {\n        //     url = /&url=/.test(url) ? url : 'http' + decodeURIComponent(url.split('=http')[1]);\n        // }\n        /*if(url.match(/mgtv.com/g)=='mgtv.com'){\n            url = url + ';{Referer@https://www.mgtv.com}';\n        } else */\n        if (/\\.flv/.test(url)&&!/User-Agent/.test(url)) {\n            url = url + ';{User-Agent@app&&Referer@' + vipUrl + '}';\n        }\n        if (url === '' || url === vipUrl) {\n            return vipUrl;\n        } else if(!/#isVideo=true#/.test(url)){\n            return url + '#isVideo=true#';\n        }else{\n            return url\n        }\n    } else if (typeof ParseS[str] == 'string'&&ParseS[str].match(/http.*?=/)) {\n        // log(\"断插开始通用执行免嗅 defaultParseWeb:\"+timeout);\n        //log(\"默认x5\"+ParseS.defaultParseWeb);\n        if(withBatch){ // 速度优先\n            if(Array.isArray(extra.playUrlList)&&extra.playUrlList.length>0){\n                extra.playUrlList = extra.playUrlList.filter(it=>it!==(ParseS[str]||str) + vipUrl);\n                let nameList = extra.nameList;\n                nameList.unshift(str);\n                extra.nameList=unique2(nameList);\n                extra.playUrlList = unique2(extra.playUrlList);\n            }\n        }else{\n            extra = {}\n        }\n        return ParseS.defaultParseWeb?ParseS.defaultParseWeb((ParseS[str]||str) + vipUrl,timeout,extra):(ParseS[str]||str) + vipUrl;\n    } else if(typeof(str)==='string'&&str.length>1&&(typeof ParseS[str]=='undefined'||!ParseS[str])&&!/^http/.test(str)){\n        return 'toast://请先进行断插配置确保该解析存在!\\n检测到无效的解析配置:'+str;\n    }else {\n        return ParseS.defaultParse(str + vipUrl,timeout);\n    }\n}\n\nvar playParse = {\n    player_xx: function(jurl, Label) {\n        return $(jurl).lazyRule((k) => {\n            var jsUrl = JSON.parse(fetch(getVar('oldConfig'))).cj;\n            var Label = k;\n            var fa = ['letv', 'pptv', 'qq', 'youku', 'qiyi', 'iqiyi', 'mgtv', 'bilibili', 'sohu', 'migu', 'm1905', 'vip'];\n            var html = parseDom(request(input), Label);\n            eval(html.replace(/player_.*?={/, 'pdata={'));\n            eval(fetch(jsUrl));\n            if (pdata.url.substr(0, 8).match(/JT..JT../)) {\n                pdata.url = base64Decode(pdata.url);\n            }\n            if (pdata.url.substr(0, 8).match(/%..%../)) {\n                pdata.url = unescape(pdata.url);\n            }\n            if (fa.includes(pdata.from)) {\n                return aytmParse(pdata.url);\n            } else {\n                return pdata.url + '#isVideo=true#';\n            }\n        }, Label)\n    }\n};\nfunction mzPopup() {\n    /*\n    if (getVar(\"ijk-tx\", \"\") == \"1\") {\n        setItem(\"tixing\", \"1\")\n        clearVar(\"ijk-tx\")\n    }\n    if (getItem(\"tixing\", \"\") == \"\") {\n        confirm({\n            title: '免责声明',\n            content: '本程序不提供视频解析服务\\n所有内容均从用户分享中收集\\n仅供测试和学习交流\\n\\n确定即认可，不再提醒',\n            confirm: $.toString(() => {\n                putVar(\"ijk-tx\", \"1\");\n                refreshPage(false);\n                return \"toast://点击了确认\"\n\n            })\n        })\n    }\n     */\n}\n/*\nif (!getVar(\"tixing\")) {\n    mzPopup();\n    putVar('tixing','ok');\n}\n*/\nfunction saveButton(content,name) {\n    name = name||'';\n    var data = content.split('★★★');\n    if (data.length === 2) {\n        var _dt = parsePaste(data[0]);\n        content = _dt.substr(0, 6) !== 'error:' ? _dt : '';\n    }\n    data = content.split('★');\n    var type = data[0];\n    var arrList = [];\n    var objCode = {};\n    if (data.length > 2 && data[0] !== '直链') {\n        var objKey = data[1];\n        var objValue = data[2];\n        if (type === 'MyParseS') {\n            objValue = base64Decode(objValue);\n        }\n        if (objValue.split('function').length > 1) {\n            eval('objValue=' + objValue);\n        }\n        arrList.splice(0, 0, objKey); //添加项目非删除\n        objCode[objKey] = objValue;\n\n    } else if (type === '直链') {\n        arrList = data;\n        arrList.splice(0, 1);\n    } else {\n        arrList = null;\n    }\n    if (arrList != null) {\n        var parseRoute = getVar('parseRoute');\n        eval('var json =' + fetch(parseRoute));\n        Array.prototype.remove = function(val) {\n            let index = this.indexOf(val);\n            if (index > -1) {\n                this.splice(index, 1);\n            }\n        };\n        if(name){//删除名称列表和代码\n            json.title.remove(name);\n            delete json.codes[name];\n        }\n        arrList = arrList.concat(json.title);\n        json.title = Array.from(new Set(arrList));\n        Object.assign(json.codes, objCode);\n        if (type === '测试') {\n            eval('var config =' + fetch(getVar('oldConfig')));\n            eval(fetch(config.cj));\n            if (typeof ParseS[data[1]] == \"function\") {\n                return ParseS[data[1]](data[2]);\n            } else {\n                return ParseS.defaultParseWeb(ParseS[data[1]] + data[2]);\n            }\n        } else {\n            writeFile(parseRoute, $.stringify(json));\n            return \"toast://已保存内容\";\n        }\n    } else {\n        return \"toast://无法识别这个内容呢\"\n    }\n}\n// 以下代码千万不要放出来否则报错\nif (getItem('updateDate') != updateDate) {\n// if (true) {\n    // 把function变成string\n    let functionCode = saveButton + ';'+mzPopup;\n    // writeFile('hiker://files/cache/plscParse.html', fetch(_mySet.ckLink + 'plscParse.html'));\n    setItem('myFunction', functionCode);\n    setItem('updateDate', updateDate);\n}\nvar bjItem = {\n    hfPlugin: function(parseRoute) {\n        return $('#noLoading#').lazyRule((k) => {\n            if (fileExist(k)) {\n                var cjcache = getVar('cjCache');\n                eval('var json =' + fetch(k));\n                json.settings.cj = cjcache;\n                writeFile(k, $.stringify(json));\n                var oldRoute = getVar('oldConfig');\n                var oldConfig = json.settings;\n                oldConfig.cj = cjcache;\n                writeFile(oldRoute, $.stringify(oldConfig));\n                refreshPage(false);\n                return 'toast://恢复成功';\n            } else {\n                return 'toast://需要先拉取列表'\n            }\n        }, parseRoute)\n    },\n    pullCode: function(k) {\n        return $('#noLoading#').lazyRule((k) => {\n            var pullMode = k[0];\n            var parseRoute = k[1];\n            var parseFile = fetch(parseRoute);\n            if (!parseFile) {\n                var settings = fetch(getVar('oldConfig'));\n                settings = !settings ? {} : JSON.parse(settings);\n                var json = {};\n                json.settings = settings;\n                json.title = [];\n                json.codes = {};\n            } else {\n                eval('var json =' + parseFile);\n            }\n            var parseTitle = [];\n            var parseCode={};\n            var cjLink = getVar('pluginLink');\n            try {\n                if(/@base64:\\/\\//.test(cjLink)){\n                    eval(base64Decode(cjLink.split('@base64://')[1]));\n                }else if(/插件名/.test(cjLink)){\n                    let realLink = cjLink.split('插件名')[0].replace(/[\\s]/g,'');\n                    log('解析云剪切板:'+realLink);\n                    let yPaste = parsePaste(realLink);\n                    if(/@base64:\\/\\//.test(yPaste)){\n                        try {\n                            eval(base64Decode(yPaste.split('@base64://')[1]));\n                            if(typeof ParseS==='undefined'){\n                                return 'toast://拉取个鸡毛插件,里面连ParseS对象都没有!'\n                            }\n                        }catch (e) {\n                            return 'toast://鸡毛插件执行报错:\\n'+e.message;\n                        }\n                    }else{\n                        return 'toast://未能识别云剪切板中的内容:\\n'+yPaste.substring(0,100);\n                    }\n                } else if (cjLink === 'Q神') {\n                    let jiexi = fetch('hiker://files/jiexi/jiexi.txt').split('\\n');\n                    for (i in jiexi) {\n                        let title=jiexi[i].split('&&')[0];\n                        let code=jiexi[i].split('&&')[1];\n                        parseTitle.push(title);\n                        parseCode[title]=code;\n                    }\n                }\n                // }else if(/^#[a-zA-Z0-9]{2,10}$/.test(cjLink)){//福利口令2到10位\n                else if(/^#[\\S]{2,10}$/.test(cjLink)){//福利口令2到10位任意非空字符串\n                    const {taskCall, taskRun,taskReq} = $.require(\"hiker://page/taskCall?rule=道长仓库Pro\");\n                    // log('开始执行任务仓库获取断念插件福利口令');\n                    let result = taskCall(17,'DnFuli',[cjLink]);\n                    if (result.status === 0) {\n                        let ret = JSON.parse(result.result);\n                        // log(ret);\n                        if(ret.opt==='error'){\n                            return 'toast://'+ret.msg;\n                        }else if(ret.opt==='url'){\n                            let html = fetch(ret.ret);\n                            let arr = html.includes('http')? html:base64Decode(html);\n                            let jiexi = arr.match(/[\\S]*?,.*?[\\s]/g);\n                            for (let i in jiexi) {\n                                let title=jiexi[i].split(',')[0];\n                                let code=jiexi[i].split(',')[1].split(\"\\n\")[0];\n                                if(!/^http|function/.test(code)&&code.length>20){//base64编码的函数\n                                    code = base64Decode(code);\n                                }\n                                parseTitle.push(title);\n                                parseCode[title]=/function/.test(code)?eval(code):code;\n                            }\n                        }else if(ret.opt==='jx'){\n                            if(/[\\S]*?,http[\\S]/.test(ret.ret)){\n                                let title = ret.ret.split(',')[0];\n                                let code = ret.ret.split(',')[1].split('\\n')[0];\n                                parseTitle.push(title);\n                                parseCode[title]=code;\n                            }else if(/^http/.test(ret.ret)){\n                                let title = cjLink.split('#')[1];\n                                let code = ret.ret.split('\\n')[0];\n                                parseTitle.push(title);\n                                parseCode[title]=code;\n                            }else{\n                                return 'toast://未知的福利:\\n'+ret.ret;\n                            }\n                        }else if(ret.opt==='vipJx'){\n                            let title = cjLink.split('#')[1];\n                            let code = ret.ret;\n                            // log(code);\n                            parseTitle.push(title);\n                            parseCode[title]=/function/.test(code)?eval(code):code;\n                        }\n                    }else{\n                        return 'toast://仓库非最新版或者福利社功能开发中'\n                    }\n                }else if(cjLink==='断插'){\n                    eval(fetch(\"hiker://files/cache/Parse_Dn.js\"));\n                    parseTitle=Object.keys(ParseS);\n                }else if(/^hiker:\\/\\/|^file:\\/\\/|^http|^\\/storage\\/|^\\/sdcard\\//.test(cjLink)){\n                    if(/^\\/storage\\/|^\\/sdcard\\//.test(cjLink)){\n                        cjLink = 'file://'+cjLink;\n                    }\n                    eval(fetch(cjLink));\n                    parseTitle=Object.keys(ParseS);\n                }else{\n                    return 'toast://拉取口令有误'\n                }\n            } catch (e) {\n                log(e.message);\n            }\n            var jxJudge = typeof ParseS == 'object';\n            var lbJudge = typeof(parseTitle) == 'object';\n            if (jxJudge || lbJudge) {\n                // if (pullMode === '列表') {\n                //     if (!lbJudge) {\n                //         parseTitle = Object.keys(ParseS);\n                //     }\n                //     var newParseTitle = json.title.concat(parseTitle);\n                //     json.title = Array.from(new Set(newParseTitle));\n                // }\n                // 不管拉取代码还是列表都要把列表拉了\n                if (!lbJudge) {\n                    parseTitle = Object.keys(ParseS);\n                    log(parseTitle);\n                }\n                var scObject = [\"CityIP\", \"pcUA\", \"cacheM3u8\",\"isVideo\",\"timeOut\",\"源码匹配\", \"defaultParse\",\"defaultParseWeb\",\"maoss\", \"LLQ\",\"parseLc\"];\n                parseTitle = parseTitle?parseTitle.filter(it=>!scObject.includes(it)):[];\n                var newParseTitle = json.title.concat(parseTitle);\n                json.title = Array.from(new Set(newParseTitle));\n\n                if (pullMode === '代码') {\n                    if (typeof originalParseS == 'object') {\n                        for (let i in scObject) {\n                            delete originalParseS[scObject[i]];\n                        }\n                        // originalParseS =originalParseS.filter(it=>!scObject.includes(Object.getOwnPropertyNames(it)[0]));\n                        Object.assign(json.codes, originalParseS);\n                    } else {\n                        if(typeof(ParseS)==\"undefined\"){\n                            Object.assign(json.codes, parseCode);\n                            //return \"toast://没有代码，不可拉取\"\n                        }else{\n                            Object.assign(json.codes, ParseS);\n                        }\n                    }\n                }\n                //var newFile = tools.toJSON(json);//自定义stringify函数，带有转义字符\n                var newFile = $.stringify(json); //JSON.parse会报错\n                writeFile(parseRoute, newFile);\n                refreshPage(false);\n                return 'toast://拉取' + pullMode + '成功';\n            } else {\n                return 'toast://未获取到对象';\n            }\n        }, [k, _mySet.parseRoute])\n    },\n    pullScript: function(cj, x5) {\n        return $('#noLoading#').lazyRule((k) => {\n            var cjFrom = 'hiker://page/Parse_Dn.js?rule=MyFieldᴰⁿ';\n            var x5From = 'hiker://page/Parse_Dn.html?rule=MyFieldᴰⁿ';\n            try {\n                var cjFile = JSON.parse(fetch(cjFrom)).rule;\n                var x5File = JSON.parse(fetch(x5From)).rule;\n                writeFile(k[0], cjFile);\n                writeFile(k[1], x5File);\n                clearVar('jxOldV');\n                clearVar('jxNewV');\n                refreshPage(false);\n                return 'toast://拉取成功';\n            } catch (e) {\n                return 'toast://未成功获取内容';\n            }\n        }, [cj, x5])\n    },\n    xlSelect: function(bianji, lbLength) {\n        return \"select://\" + JSON.stringify({\n            options: ['‘‘’’<span style=\"color:red\" title=\"删除||' + bianji + '\">删 除', '‘‘’’<span style=\"color:#F57474\" title=\"隐藏||' + bianji + '\">隐 藏', '‘‘’’<span style=\"color:#FF8000\" title=\"修改||' + bianji + '\">修 改', '‘‘’’<span style=\"color:#098AC1\" title=\"置顶||' + bianji + '0' + '\">置 顶', '‘‘’’<span style=\"color:#098AC1\" title=\"移动||' + bianji + '\">移 动', '‘‘’’<span style=\"color:#098AC1\" title=\"置底||' + bianji + lbLength + '\">置 底', '‘‘’’<span style=\"color:#04B431\" title=\"分享||' + bianji + '\">地板分享', '‘‘’’<span style=\"color:#04B431\" title=\"云分享||' + bianji + '\">云板分享'],\n            col: '2',\n            js: $.toString(() => {\n                var parseRoute = getVar('parseRoute');\n                eval('var json =' + fetch(parseRoute));\n                var newInput = parseDomForHtml(input, 'span&&title').split('||');\n                // 修改,迪迪,0   操作类型,名称,索引\n                var type = newInput[0];\n                var name = newInput[1];\n                var num = newInput[2];\n                var num2 = newInput[3];\n                switch (type) {\n                    case \"删除\":\n                        let k = [name, num];\n                        // 总感觉筛选或者搜索后，由于num的位置不对可能会删除错,事实如此,已修?\n                        return $(\"即将删除: \" + name).confirm((k) => {\n                            var name = k[0];\n                            var num = k[1];\n                            var parseRoute = getVar('parseRoute');\n                            eval('var json =' + fetch(parseRoute));\n                            if (json.codes.hasOwnProperty(name)) {\n                                delete json.codes[name];\n                            }\n                            num = json.title.indexOf(name); //这样才会得到正确的索引\n                            json.title.splice(num, 1);\n                            writeFile(parseRoute, $.stringify(json));\n                            refreshPage(false);\n                            return \"toast://已将〖\" + name + \"〗删除\";\n                        }, k);\n                    case \"隐藏\":\n                        return $(\"hiker://empty#noLoading#\").lazyRule((k) => {\n                            var name = k[0];\n                            var num = k[1];\n                            var parseRoute = getVar('parseRoute');\n                            eval('var json =' + fetch(parseRoute));\n                            if (json.codes.hasOwnProperty(name)) {\n                                num = json.title.indexOf(name); //这样才会得到正确的索引\n                                json.title.splice(num, 1);\n                                writeFile(parseRoute, $.stringify(json));\n                                refreshPage(false);\n                                return \"toast://已将〖\" + name + \"〗隐藏\";\n                            } else {\n                                return \"toast://可能是个网址, 您可选择删除\";\n                            }\n                        }, [name, num]);\n                    case \"修改\":\n                        //if (json.codes[name]) {\n                        var nCode = name;\n                        var titles = json.title;\n                        var nName = \"这是名称\";\n                        if (json.codes[name]) {\n                            nCode = json.codes[name].toString();\n                            nName = name;\n                        }\n                        return $(\"hiker://empty#noRecordHistory#\").rule((k,titles) => {\n                            var d = [];\n                            eval(getItem('myFunction'));\n                            var name = k[0];\n                            var code = k[1];\n                            d.push({\n                                title: '保 存',\n                                url: saveButton + \"saveButton(getVar('input_edit'),name);back();\",\n                                col_type: \"input\",\n                                desc: \"建议按默认的代码格式修改哦\",\n                                extra: {\n                                    onChange: \"putVar('input_edit', input)\",\n                                    type: \"textarea\",\n                                    height: \"-1\",\n                                    highlight: true,\n                                    titleVisible: false,\n                                    defaultValue: '修改★' + name + '★' + code,\n                                }\n                            });\n                            d.push({\n                                title: '‘‘’’<small><span style=\"color:#6EB897\">格式为：操作类型★标题★function(){自定义内容}<br>请勿填入其他格式',\n                                url: $('#noLoading#').lazyRule((saveButton,name,titles) => {\n                                    let tmpAr = getVar('input_edit').split('★');\n                                    if(tmpAr.length<2){\n                                        return 'toast://修改格式有误，访问被拒绝'\n                                    }\n                                    let newName = tmpAr[1];\n                                    if(newName!==name&&titles.includes(newName)){\n                                        return $('检测到同名接口:'+newName+',是否覆盖?').confirm((saveButton,name)=>{\n                                            let code = saveButton(getVar('input_edit'),name);\n                                            back();\n                                            return 'toast://已保存修改\\n请自行检测覆盖后的内容';\n                                        },saveButton,name);\n                                    }else{\n                                        let code = saveButton(getVar('input_edit'),name);\n                                        back();\n                                        return 'toast://已保存修改';\n                                    }\n                                    // if(typeof(code)==='string'&&code.length>2){\n                                    //     return code\n                                    // }else{\n                                    //     return 'toast://已保存修改';\n                                    // }\n                                }, saveButton,name,titles),\n                                desc: '‘‘’’<big><big><span style=\"color:#298A08\">保 存',\n                                col_type: 'text_center_1'\n                            });\n                            setResult(d);\n                        }, [nName, nCode],titles) //[name, json.codes[name].toString()])\n                    /*} else {\n                        return \"toast://只有网址或者标题, 不支持修改\"\n                    }*/\n                    case \"置顶\":\n                    case \"置底\":\n                        eval('var json =' + fetch(parseRoute));\n                        num = json.title.indexOf(name); //这样才会得到正确的索引\n                        if(num>-1){\n                            var item = json.title.splice(num, 1);\n                            json.title.splice(num2, 0, item[0]);\n                            writeFile(parseRoute, $.stringify(json));\n                            refreshPage(false);\n                        }else{\n                            return 'toast://没找到:'+name;\n                        }\n                        break;\n                    case \"移动\":\n                        return $('hiker://empty#noLoading#').lazyRule((k) => {\n                            putVar('bianji', '移动#' + k);\n                            refreshPage(false);\n                            return input;\n                        }, num);\n                    case \"分享\":\n                    case \"云分享\":\n                        if (json.codes[name]) {\n                            var parseText = typeof json.codes[name] == 'function' ? $.stringify(json.codes[name]) : json.codes[name];\n                            parseText = 'MyParseS★' + name + '★' + base64Encode(parseText);\n                        } else {\n                            var parseText = '直链★' + json.title[num];\n                        }\n                        if (type == '云分享' && parseText.substr(0, 8) == 'MyParseS') {\n                            parseText = sharePaste(parseText);\n                            return parseText.substr(0, 6) != 'error:' ? 'copy://' + parseText + '\\n★★★\\n' + 'MyParseS：' + name : 'toast://分享失败!!云剪贴板可能挂了';\n                        } else {\n                            return 'copy://' + parseText;\n                        }\n                    default:\n                        return 'toast://暂不支持';\n                } //switch的\n            }) //String的\n        }) //stringify的\n    },\n    xjParse: function() {\n        return $(\"hiker://empty#noHistory#\").rule(() => {\n            var d = [];\n            eval(getItem('myFunction'));\n            d.push({\n                title: '保 存',\n                url: saveButton + \"saveButton(input);back();clearVar('input_add')\",\n                col_type: \"input\",\n                desc: \"输入正确格式内容\",\n                extra: {\n                    onChange: 'putVar(\"input_add\", input)',\n                    type: \"textarea\",\n                    height: \"-1\",\n                    highlight: true,\n                    titleVisible: false,\n                    defaultValue: getVar('input_add'),\n                }\n            });\n            d.push({\n                title: '‘‘’’<small><span style=\"color:#6EB897\">按描述诉格式输入, 请勿填入其他格式<br>本地口令: 操作类型★名称★代码<br>云口令: 链接★★★名称; 纯网址: 直链★url1★url2',\n                desc: '‘‘’’<big><big><span style=\"color:#298A08\">保 存',\n                url: $('noLoading').lazyRule((saveButton) => {\n                    return saveButton(getVar('input_add'));\n                }, saveButton),\n                col_type: 'text_center_1'\n            });\n            setResult(d);\n        })\n    },\n    ydParse: function(BJmode, i) {\n        return $('#noLoading#').lazyRule((k) => {\n            var A = k[0].split('#')[1];\n            var B = k[1];\n            var parseRoute = getVar('parseRoute');\n            eval('var json =' + fetch(parseRoute));\n            var item = json.title.splice(A, 1); // 1: 标记开始位置，2: 删除到哪个位置\n            json.title.splice(B, 0, item[0]); // 1: 同上，2: 0表示不删除，3: 添加对象\n            writeFile(parseRoute, $.stringify(json));\n            clearVar('bianji');\n            refreshPage(false);\n            return 'hiker://empty';\n        }, [BJmode, i])\n    },\n    plscParse: function() {\n        return $('hiker://empty#noRecordHistory#').rule(() => {\n            var d = [];\n            d.push({\n                title: '批量修改/删除解析',\n                desc: 'auto&&float',\n                // url: 'file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/cache/plscParse.html',\n                url: _mySet.batchRoute,\n                col_type: 'x5_webview_single'\n            })\n            setResult(d);\n        })\n    }\n};\n\nfunction setParse() {\n    $.require(\"hiker://page/Route?rule=MyFieldᴰⁿ\").setParse();\n}"},{"name":"Parse_Dn-vue.html","path":"Parse_Dn.html","rule":"<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no\" />\n    <title>Parse_Dn_vue</title>\n    <script>\n        const vuePath = 'hiker://files/rules/dzHouse/js/vue.js';\n        if(typeof(fba)=='undefined'||!fba){\n            var fba = fy_bridge_app;\n        }\n        try {\n            if(typeof(request)=='undefined'||!request){\n                eval(fba.getInternalJs());\n            }\n            window.request = window.request00 || window.request;\n            // fba.log(vuePath);\n            if(!request(vuePath)){\n                fba.writeFile(vuePath,request('http://hiker.nokia.press/hikerule/rulelist.json?id=1823'));\n            }\n            try {\n                eval(fba.fetch(vuePath));\n            }catch (e) {\n                // console.log(e.message);\n                fba.log(e.message);\n            }\n            // fba.log('加载vue组件完毕');\n        }catch (e) {\n            alert(e.message);\n        }\n    </script>\n    <!--    <script src=\"https://unpkg.com/vue@next\"></script>-->\n    <!--    <script src=\"file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/rules/dzHouse/js/vue.js\"></script>-->\n    <style>\n        body {\n            margin: 0 5px 0 5px;\n            padding: 0 0px 0 0px;\n            /*            background: #F9F0DA;*/\n            font-weight: 0;\n            font-family: \"Microsoft YaHei\",\"宋体\",\"Segoe UI\", \"Lucida Grande\", Helvetica, Arial,sans-serif, FreeSans, Arimo;\n        }\n        #app{\n            margin-top:-10px;\n        }\n        #tips{\n            margin-top:-10px;\n            margin-bottom:5px;\n        }\n        .fung{\n            text-align:center\n        }\n        div.box {\n            margin-top:-1px;\n            height: 43px;\n            line-height: 20px;\n        }\n        /*输入框尺寸*/\n        form {\n            background: transparent;\n            position: relative;\n            width: 100%;\n        }\n\n        input, label, select {\n            border: none;\n            outline: none;\n        }\n        /*字体位置*/\n        input {\n            width: 77%;\n            height: 32px;\n            padding-left: 66px;\n            padding-right: 0px;\n        }\n\n        label {\n            text-align:center;\n            line-height: 43px;\n            height: 40px;\n            width: 60px;\n            cursor: pointer;\n            position: absolute;\n        }\n\n        /*小框*/\n        .bar label {\n            /*background: #D06B6C;*/\n            border-radius: 5px 555px 555px 5px;\n            width: 60px;\n            font-size: 13px;\n            top: 0;\n            left: 3px;\n        }\n\n        /*输入框样式*/\n        .bar input {\n            /*border-radius: 5px 555px 555px 5px;\n             */\n            border-radius: 4px;\n        }\n\n        /*列表*/\n        select {\n            text-align:center;\n            line-height:40px;\n            height: 40px;\n            width: 20px;\n            cursor: pointer;\n            position: absolute;\n        }\n\n        /*列表*/\n        .lieb select{\n            /*border-radius: 4px;*/\n            border-radius: 555px 5px 5px 555px;\n            width: 80px;\n            text-align:center;\n            font-size: 13px;\n            top: 0;\n            right: 2px;\n        }\n\n        /*头像*/\n        .round_icon{\n            width: 40px;\n            height: 40px;\n            display: flex;\n            border-radius: 50%;\n            align-items: center;\n            justify-content: center;\n            overflow: hidden;\n        }\n    </style>\n</head>\n<body>\n<div class=\"fung\">\n    <a style=\"float:left;\">\n        <button  :style=\"'border: none;border-radius:10px;background: '+themes.closeBtn.background+';width: 80px; font-size: 18px;color: '+themes.closeBtn.color\" onclick=\"cancel();\">关 闭</button>\n    </a>\n    <a class=\"btn btn-primary\">\n        <!--        <button  :style=\"'border: none;border-radius:10px;background: '+themes.tipsBtn.background+';width: 120px; font-size: 18px;color: '+themes.tipsBtn.color\" @click=\"showTips=!showTips\">{{showTips?\"隐藏提示\":\"显示提示\"}}</button>-->\n        <button  :style=\"'border: none;border-radius:10px;background: '+themes.tipsBtn.background+';width: 120px; font-size: 18px;color: '+themes.tipsBtn.color\" @click=\"showTips=!showTips\" v-text=\"showTips?'隐藏提示':'显示提示'\"></button>\n    </a>\n    <a style=\"float:right\">\n        <button :style=\"'border: none;border-radius:10px;background: '+themes.saveBtn.background+';width: 80px; font-size: 18px;color: '+themes.saveBtn.color\" onclick=\"clickme('配 置 已 保 存 ！', 1000, '开');\">保 存</button>\n    </a>\n\n</div>\n<br>\n<div id=\"app\">\n    <h6 id=\"tips\" v-html=\"tips\" v-show=\"showTips\"></h6>\n    <div class=\"box bar\" v-for=\"option in options\">\n        <form>\n            <!--            <label type=\"submit\" :style=\"'background:'+themes.barlabel.background+';color:'+themes.barlabel.color\">{{ option.name }}</label>-->\n            <label type=\"submit\" :style=\"'background:'+themes.barlabel.background+';color:'+themes.barlabel.color\" v-text=\"option.name\"></label>\n            <input :style=\"'background:'+themes.barInput.background+';border: 3px solid '+themes.barInput.color\" type=\"text\" onclick=\"resetSelect(this.id)\" :placeholder=\"option.placeholder||placeholder\" v-model=\"option.value\" v-bind:id=\"option.id\">\n            <div class=\"lieb\">\n                <select :style=\"'background:'+themes.select.background+';color:'+themes.select.color\" :clearable=\"true\" size=\"2\" :id=\"option.id+'Select'\" :name=\"option.id\" onchange=\"getOption(this.id,this.name)\"  v-model=\"option.value\">\n                    <!--                    <option v-if=\"option.id!=='qju'&&option.id!=='cj'\" :value=\"sel\" :key=\"index\" v-for=\"(sel,index) in mySelect\">{{ sel }}</option>-->\n                    <option v-if=\"option.id!=='qju'&&option.id!=='cj'\" :value=\"sel\" :key=\"index\" v-for=\"(sel,index) in mySelect\" v-text=\"sel\"></option>\n                    <!--                    <option v-else-if=\"option.id==='qju'\" :value=\"sel\" :key=\"index\" v-for=\"(sel,index) in ['默认'].concat(mySelect)\">{{ sel }}</option>-->\n                    <option v-else-if=\"option.id==='qju'\" :value=\"sel\" :key=\"index\" v-for=\"(sel,index) in ['默认'].concat(mySelect)\" v-text=\"sel\"></option>\n                    <!--                    <option :value=\"sel\" :key=\"index\" v-else v-for=\"(sel,index) in cjSel\">{{ sel }}</option>-->\n                    <option :value=\"sel\" :key=\"index\" v-else v-for=\"(sel,index) in cjSel\" v-text=\"sel\"></option>\n                </select>\n            </div>\n        </form>\n    </div>\n</div>\n<div>\n    <a v-for=\"ver in verinfo\" style=\"float:left;margin-top:1px;margin-right: 20px\" v-bind:id='ver.id' onclick=\"doOption(this.id)\">\n        <img :src=\"ver.avatar\" class=\"round_icon\"  alt=\"\">\n        <!--        <span style=\"margin-left:10px;line-height:10px;font-size:12px;color: grey;\">{{ ver.author }}</span>-->\n        <span style=\"margin-left:10px;line-height:10px;font-size:12px;color: grey;\" v-text=\"ver.author\"></span>\n    </a>\n    <a style=\"float:right;margin-top:10px;\">\n        <button :style=\"'border: none;border-radius:10px;background:'+themes.saveCloseBtn.background+';width: 160px;height:40px; font-size: 18px;color: '+themes.saveCloseBtn.color\" onclick=\"clickme('配 置 已 保 存 ！', 1000, '关');\">保存并关闭界面</button>\n    </a>\n</div>\n<script>\n    let tips = `提示：<br>①注意插件选项，没有手动导入插件的话不用动它。如设置不当会导致规则无法使用，<br>解决办法：视界打开更多设置→文件管理→点cache→长按MyParseSet.json删除掉；<br>②全局设置如果选择了非默认那么全部的解析会使用这一设置，不想这样的话请填入默认；<br>③绿色保存按钮仅仅保存配置不会关闭设置页面，配置后想保存并关闭设置页面的话请点蓝色按钮；<br>④如果遇到保存按钮点不动或者报错的情况，以下路径挨着删除一遍，然后重新拉取插件，网页再打开此网页[不要先拉代码]。记得备份<br>\n主插件存放路径: /cache/Parse_Dn.js<br>\n网页脚本存放路径: /cache/Parse_Dn.html<br>\n旧断插配置路径:/cache/MyParseSet.json<br>\n新断插配置路径/rules/DuanNian/MyParse.json<br>\n主题文件:/cache/MyTheme.json<br>\n主题文件:/cache/MyTheme.json<br>\n自动档解析:/cache/MyJiexi.json<br>\n    ⑤阅读完提示点关闭加载完整设置页面，如出问题无法自行解决点图片进入论坛向我反馈。<br>`;\n    let placeholder='输入解析名或者URL......';\n    //#aa96da #fc5185\n    let themes = {\n        name:'默认主题',\n        closeBtn:{color:'#f6f6f6',background:'#aa96da'},\n        saveBtn:{color:'#F9F0DA',background:'#068006'},\n        saveCloseBtn:{color:'#F9F0DA',background:'#05BFC5'},\n        tipsBtn:{color:'#F9F0DA',background:'#05BFC5'},\n        barlabel:{color:'#F9F0DA',background:'#aa96da'},\n        barInput:{color:'#aa96da',background:'#ffffd2'},\n        select:{color:'#F9F0DA',background:'#aa96da'},\n    };\n    let themeDef = {\"name\":\"断念原皮\",\"closeBtn\":{\"color\":\"#F9F0DA\",\"background\":\"#c5464a\"},\"saveBtn\":{\"color\":\"#F9F0DA\",\"background\":\"#068006\"},\"saveCloseBtn\":{\"color\":\"#F9F0DA\",\"background\":\"#05BFC5\"},\"tipsBtn\":{\"color\":\"#F9F0DA\",\"background\":\"#05BFC5\"},\"barlabel\":{\"color\":\"#F9F0DA\",\"background\":\"#D06B6C\"},\"barInput\":{\"color\":\"#D06B6C\",\"background\":\"#F9F0DA\"},\"select\":{\"color\":\"#F9F0DA\",\"background\":\"#D06B6C\"}};\n    var themeRoute = \"hiker://files/cache/MyTheme.json\";\n    if(!fba.fetch(themeRoute)){\n        fba.writeFile(themeRoute,JSON.stringify({now_theme:'默认主题',themes:[themes,themeDef]}))\n    }\n    try {\n        let myThemes = JSON.parse(fba.fetch(themeRoute));\n        let nowTheme = myThemes.themes.filter(it=>it.name === myThemes.now_theme);\n        themes = nowTheme?nowTheme[0]:myThemes.themes[0];\n    }catch (e) {}\n\n    // 断念初始化部分\n    const allApi=['https://test.rongxingvr.com/test/?url=','http://cache.languang.icu:88/didi.php?url='];\n    var settings = {\n        qy: '万能解析Ⓙ',\n        yk: '万能解析Ⓙ',\n        tx: '万能解析Ⓙ',\n        mg: '万能解析Ⓙ',\n        bl: '万能解析Ⓙ',\n        sh: '万能解析Ⓙ',\n        xg: '万能解析Ⓙ',\n        // al: '万能解析Ⓙ',\n        pp: '万能解析Ⓙ',\n        mi: '万能解析Ⓙ',\n        le: '万能解析Ⓙ',\n        lt: '万能解析Ⓙ',//龙腾\n        rr:'万能解析Ⓙ',//人人迷\n        wd:'万能解析Ⓙ',//五毒云\n        oth: '道长仓库通免',\n        one: '1080',\n        fun: '融兴',\n        qju: '默认',\n        cj: 'hiker://files/cache/Parse_Dn.js'\n    };\n    var oldRoute = \"hiker://files/cache/MyParseSet.json\";\n    var mySet = fba.fetch(oldRoute);\n    var newRoute = \"hiker://files/rules/DuanNian/MyParse.json\";\n    if(!fba.fetch(newRoute)){\n        fba.writeFile(newRoute,JSON.stringify({settings:settings,title:[\"yun1717\",\"你爹科技\",\"融兴\",\"人人迷-优酷\"],codes:{\"你爹科技\":\"http://cache.languang.icu:88/didi.php?url=\",\"融兴\":\"https://test.rongxingvr.com/test/?url=\",\"人人迷-优酷\":\"https://svip.renrenmi.cc:2222/api/?key=nn4j8rukPXSVzR78E9&url=\"}}))\n    }\n    var newConfig = fba.fetch(newRoute);\n    var mySelect = [];\n    function compare(list) {\n        return function (it) {\n            return !list.includes(it)\n        }\n    }\n    if(newConfig&&newConfig.length>20){\n        eval(\"newConfig =\" + newConfig + \";\");\n        let newKeys = Object.keys(newConfig.settings);\n        let nowKeys = Object.keys(settings);\n        for(let i in newKeys){//清除多余的节点\n            if(!nowKeys.includes(newKeys[i])){\n                delete newConfig.settings[newKeys[i]]\n            }\n        }\n        settings = Object.assign(settings,newConfig.settings);\n        var ycTitle = ['defaultParse', 'defaultParseWeb','maoss', 'CityIP', 'cacheM3u8', 'pcUA', 'parseLc', 'gparse', 'nparse'];\n        mySelect = newConfig.title.filter(compare(ycTitle));\n        // mySelect = mySelect.map((it)=>{\n        //     let flag = 'Ⓤ';\n        //     if(typeof(newConfig.codes[it])==='function'){\n        //         flag = 'Ⓙ';\n        //     }else if(typeof(newConfig.codes[it])==='undefined'){\n        //         flag = '';\n        //     }\n        //     return flag+it\n        // });\n    }\n    //fba.log(JSON.stringify(mySelect));\n\n    let options = [\n        {\n            name:'爱奇艺',\n            id:'qy',\n            value:settings.qy,\n            placeholder:'设置爱奇艺'\n        },\n        {\n            name:'优酷',\n            id:'yk',\n            value:settings.yk\n        },\n        {\n            name:'腾讯',\n            id:'tx',\n            value:settings.tx\n        },\n        {\n            name:'芒果',\n            id:'mg',\n            value:settings.mg\n        },\n        {\n            name:'哔哩哔哩',\n            id:'bl',\n            value:settings.bl\n        },\n        {\n            name:'搜狐',\n            id:'sh',\n            value:settings.sh\n        },\n        {\n            name:'西瓜',\n            id:'xg',\n            value:settings.xg\n        },\n        {\n            name:'PPTV',\n            id:'pp',\n            value:settings.pp\n        },\n        {\n            name:'咪咕',\n            id:'mi',\n            value:settings.mi\n        },\n        {\n            name:'乐视',\n            id:'le',\n            value:settings.le\n        },\n        {\n            name:'1905',\n            id:'one',\n            value:settings.one\n        },\n        {\n            name:'风行',\n            id:'fun',\n            value:settings.fun\n        },\n        {\n            name:'龙腾',\n            id:'lt',\n            value:settings.lt\n        },\n        {\n            name:'人人迷',\n            id:'rr',\n            value:settings.rr\n        },\n        {\n            name:'五毒',\n            id:'wd',\n            value:settings.wd\n        },\n        {\n            name:'其他',\n            id:'oth',\n            value:settings.oth\n        },\n        {\n            name:'全局',\n            id:'qju',\n            value:settings.qju\n        },\n        {\n            name:'插件',\n            id:'cj',\n            value:settings.cj\n        },\n    ];\n\n    function Did(id){\n        return document.getElementById(id);\n    }\n    function getOption(id,title) {\n        var obj = Did(id);\n        Did(title).value = obj.options[obj.selectedIndex].text;\n        // Did(title).value = obj.options[obj.selectedIndex].text.replace(/Ⓤ|Ⓙ/g,'');\n    }\n    function resetSelect(id){\n        Did(id+\"Select\").options.selectedIndex = -1;\n    }\n\n    //函数部分\n\n    function Toast(msg,duration){\n        duration=isNaN(duration)?2000:duration;\n        var m = document.createElement('div');\n        m.innerHTML = msg;\n        m.style.cssText=\"width:45%; min-width:150px; background:#311; opacity:0.6; height:auto;min-height: 45px; color:#fff; line-height:45px; text-align:center; border-radius:10px; position:fixed; top:60%; left:26%; z-index:999999;\";\n        document.body.appendChild(m);\n        setTimeout(function() {\n            var d = 0.5;\n            m.style.webkitTransition = '-webkit-transform ' + d + 's ease-in, opacity ' + d + 's ease-in';\n            m.style.opacity = '0';\n            setTimeout(function() { document.body.removeChild(m) }, d * 1000);\n        }, duration);\n    }\n\n    function openDnPage(){\n        fba.open(JSON.stringify({\n            rule: \"=^_^=\",\n            title: \"编辑解析\",\n            url: \"hiker://page/Route?rule=MyFieldᴰⁿ&type=编辑#noHistory##noRecordHistory#\",\n            group: \"\",\n            col_type: \"\",\n            //findRule: \"js:this.d=[];$.require(\\\"hiker://page/Parse_Dn.js?rule=MyFieldᴰⁿ\\\").edit();setResult(d);\",\n            preRule: \"\",\n            extra: {}\n        }));\n    }\n    function openTheme(){\n        fba.open(JSON.stringify({\n            rule: \"=^_^=\",\n            title: \"主题管理\",\n            url: \"hiker://page/Route?rule=MyFieldᴰⁿ&type=主题#noHistory##noRecordHistory#\",\n            group: \"\",\n            col_type: \"\",\n            preRule: \"\",\n            extra: {}\n        }));\n    }\n    function openJxManage(){\n        fba.open(JSON.stringify({\n            rule: \"=^_^=\",\n            title: \"解析配置管理\",\n            url: \"hiker://page/Route?rule=MyFieldᴰⁿ&type=解析#noHistory##noRecordHistory#\",\n            group: \"\",\n            col_type: \"\",\n            preRule: \"\",\n            extra: {}\n        }));\n    }\n    function cancel(){\n        if(!mySet){\n            fba.writeFile(oldRoute, JSON.stringify(settings, null, 4));\n            fba.refreshPage(true);\n        }else{\n            fba.back(false);\n        }\n    }\n    function clickme(msg,duration,title){\n        try{\n            for(let key in settings){\n                // fba.log(Did(key)+''+key);\n                try{\n                    //settings[key] = Did(key).value.replace(/Ⓤ|Ⓙ/g,'');\n                    settings[key] = Did(key).value;\n                }catch(e){\n                    alert(\"未获取到节点:\"+key+\"\\n\"+e.message);\n                }\n\n            }\n            if(mySelect){\n                Object.assign(newConfig.settings, settings);\n                fba.writeFile(newRoute, $$$.stringify(newConfig));\n            }\n            fba.writeFile(oldRoute, $$$.stringify(settings));\n            Toast(msg,duration);\n            if(title===\"关\"){\n                fba.back();\n            }else{\n                fba.refreshPage(true);\n            }\n        }catch(e){\n            alert(e.message)\n        }\n    }\n\n    //let width=window.screen.availWidth;\n    //let widthPx=width-393+52;\n    //alert(\"当前分辨率:\"+window.screen.availWidth+\"*\"+window.screen.height);\n    var verinfo = [{\n        id:'dn',\n        author:'断念',\n        avatar:'https://s3.ax1x.com/2021/02/22/y7wb9O.jpg',\n        option:openDnPage,\n    },\n        {\n            id:'dz',\n            author:'道长',\n            avatar:'http://q1.qlogo.cn/g?b=qq&nk=434857005&s=640',\n            option:openTheme\n        },\n        {\n            id:'lm',\n            author: '蓝莓',\n            avatar: 'http://q1.qlogo.cn/g?b=qq&nk=2579949378&s=640',\n            option:openJxManage\n        }\n    ];\n\n    function doOption(option_id){\n        let ver = verinfo.filter(it=>it.id===option_id)[0];\n        ver.option();\n    }\n\n    const RenderHtmlApp = {\n        data() {\n            return {\n                // rawHtml: '<span style=\"color: red\">这里会显示红色！</span>',\n                options:options,\n                verinfo:verinfo,\n                placeholder:placeholder,\n                tips:tips,\n                themes:themes,\n                mySelect:mySelect,\n                // cjSel:['请选择插件 (只作用lazyRule)','hiker://files/cache/Parse_Dn.js','hiker://files/rules/dzHouse/js/srcauto.js','hiker://files/rules/js/Parse-V2_Dn.js'],\n                cjSel:['请选择插件 (只作用lazyRule)','hiker://files/cache/Parse_Dn.js','hiker://files/rules/dzHouse/js/srcauto.js'],\n                settings:settings,\n                showTips:false,\n                //widthPx:widthPx\n            }\n        },\n        methods:{\n            // changeVal:function(event){\n            //     getOption(this.id,this.name);\n            //     this.selOption = event.target.value;\n            //     alert(\"你选中了\"+event.target.value);\n            // }\n            doOption:doOption\n        }\n    }\n    try {\n        const app=Vue.createApp(RenderHtmlApp);\n        app.mount('body');\n    }catch (e) {\n        console.log(e.message)\n    }\n\n</script>\n\n</body>\n</html>"},{"name":"图标下载","path":"saveLocal","rule":"$.exports.saveLocal = () => {\n    const base64ToHex = (base64Str) => {\n        // 删除前缀并解码Base64字符串\n        var binaryStr = window0.atob(base64Str.split(',')[1]);\n\n        // 转换为16进制字符串\n        var hexStr = '';\n        for (var i = 0; i < binaryStr.length; i++) {\n            var hex = binaryStr.charCodeAt(i).toString(16);\n            hexStr += (hex.length === 2 ? hex : '0' + hex);\n        }\n        return hexStr;\n    };\n    showLoading(\"图标初始化中...\");\n    var tubiao = {};\n    try {\n        // 剪贴板线路\n        html = request('https://netcut.cn/p/a1fcf0d3b0a27f13');\n        data = html.match(/{.*note_content.*updated_at.*}/)[0];\n        eval('tubiao =' + JSON.parse(data).note_content);\n    } catch (e) {\n        log('剪贴板出错,切换托管线路');\n        route = [\n            'https://gitcode.net/qq_23847819/hiker/-/raw/master/tubiao.json',\n            'https://gitea.com/cy/hiker/raw/commit/be2160c6a01db873d9f9681ba7e86eebfa118d86/tubiao.json',\n            'https://raw.codehub.cn/p/hiker/d/tubiao/git/raw/master/tubiao.json?token=GGdlIuVGqY3b3LydIowrksbUBCfMyx2fF31WUZeo4m',\n            'https://gitee.com/mxxl-cy/hiker/raw/master/tubiao.json'\n        ];\n        for (let i = 0; i < route.length; i++) {\n            try {\n                eval('tubiao =' + request(route[i]));\n                if (tubiao[\"五大\"] && tubiao[\"哔哩\"]) {\n                    break;\n                } else {\n                    log('线路：' + tubiao[i] + '被墙了...');\n                }\n            } catch (e) {\n                log('线路：' + tubiao[i] + '出错了...');\n            }\n        }\n    }\n    try {\n        var wuda = tubiao[\"五大\"];\n        var bili = tubiao[\"哔哩\"];\n        var index = 0;\n        for (let item in wuda) {\n            writeHexFile(`hiker://files/rules/cy/tubiao/${item}.svg`, base64ToHex(wuda[item]));\n            log(`初始化第${index++}个图标:${item}...`);\n        }\n        for (let item in bili) {\n            writeHexFile(`hiker://files/rules/cy/bili_pic/${item}.png`, base64ToHex(bili[item]));\n            log(`初始化第${index++}个图标:${item}...`);\n        }\n        showLoading('图标初始化完成：共计' + index + '个图标');\n        hideLoading();\n    } catch (e) {\n        showLoading('图标初始化失败');\n        log('图标初始化失败:' + e);\n        hideLoading();\n    }\n\n};\n"},{"name":"数据列表","path":"danmuListpage","rule":"js:\nvar d = [];\nvar 影片名称 = '';\nvar 正片列表 = [];封面\nvar 最新集数 = '';\nvar 更新进度 = '';\n// 清除变量\naddListener('onClose', $.toString(() => {\n    clearMyVar('360_tab');\n    clearMyVar('360_tab_year');\n}))\n// 获取eplist\n/* 需要过滤预告片*/\nswitch (MY_PARAMS.from) {\n    case 'qiyi':\n        MY_URL = MY_PARAMS.url.replace('www', 'm');\n        html = request(MY_URL);\n        viedeoInfo = JSON.parse(html.match(/\"albumInfo\"[\\S\\s]+(?=,\"albumListInfo\")/)[0].replace('\"albumInfo\":', ''));\n        infoAdd = JSON.parse(html.match(/\"videoInfo\":{[\\S\\s]+}(?=,\"videoType\")/)[0].replace('\"videoInfo\":', ''));\n        影片名称 = viedeoInfo.albumName ? viedeoInfo.albumName : infoAdd.videoName;\n        封面 = viedeoInfo.imageUrl ? 'https:' + viedeoInfo.imageUrl.replace('\\u002F', '/').replace('.jpg', '_260_360.jpg') + \"@Referer=\" : 'https:' + infoAdd.imageUrl.replace('\\u002F', '/') + \"@Referer=\";\n        类型 = infoAdd.channelName;\n        剧集ID = infoAdd.albumQipuId;\n        setPageTitle(影片名称);\n        setPagePicUrl(封面);\n        if (类型 == '电影' || infoAdd.videoName.match(/预告/)) {\n            正片列表.push({\n                title: 影片名称,\n                url: MY_URL.replace('m', 'www'),\n                desc: ''\n            });\n            更新进度 = '电影&预告';\n        } else {\n            // 有一部分奇葩的纪录片也是有年份的，普通接口还没有数据只好这样判断了，注意是'\"\"'~\n            if (html.match(/\"summary\":[\\S\\s]+(?=,\"count\")/)[0].replace('\"summary\":', '') != '\"\"') {\n                时间线选集 = JSON.parse(html.match(/\"summary\":[\\S\\s]+(?=,\"count\")/)[0].replace('\"summary\":', ''));\n                剧集列表 = [];\n                // 偷懒！按啥年份和月份选集，简直浪费时间~\n                时间线选集.forEach(list => {\n                    年份 = list.year;\n                    剧集信息 = JSON.parse(request(\"https://pcw-api.iqiyi.com/album/source/svlistinfo?cid=6&sourceid=\" + 剧集ID + \"&timelist=\" + 年份 + \"&callback=window.Q.__callbacks__.cbp5bps9\").match(/{\"code\"[\\S\\s]+}(?=\\);}catch\\(e\\){})/)[0]);\n                    剧集列表 = 剧集列表.concat(剧集信息.data[年份]);\n                });\n                更新进度 = '综艺';\n                正片列表 = 剧集列表;\n            } else {\n                page = 1; size = 200;\n                totalPage = 2;\n                while (totalPage - page >= 0) {\n                    剧集信息 = JSON.parse(fetch(\"https://pcw-api.iqiyi.com/albums/album/avlistinfo?aid=\" + 剧集ID + \"&size=\" + size + \"&page=\" + page + \"&callback=window.Q.__callbacks__.cbu0ch7s\").match(/{\"code\"[\\S\\s]+}(?=\\);}catch\\(e\\){})/)[0]).data;\n                    正片列表 = 正片列表.concat(剧集信息.epsodelist);\n                    page++;\n                    totalPage = 剧集信息.page;\n                }\n                最新集数 = 剧集信息.latestOrder;\n                剧集长度 = 剧集信息.total;\n                更新进度 = 最新集数 + '/' + 剧集长度;\n            }\n            正片列表 = 正片列表.map((it) => {\n                return {\n                    // title: it.shortTitle,老剧集会啥也不显示，没数据\n                    title: it.name + \"_\" + it.subtitle,\n                    url: it.playUrl,\n                    desc: it.period\n                }\n            })\n        }\n        break;\n    case 'youku':\n        html = request(MY_PARAMS.url);\n        try {\n            // 重新定位了\n            影片信息 = JSON.parse(html.match(/\"播放页简介组件\",\"dataNode\":\\[{[\\S\\s]+showImg[\\S\\s]+desc[\\S\\s]{0,1000}(?=,\"id\")/)[0].replace('\"播放页简介组件\",\"dataNode\":[{\"data\":', ''));\n        } catch (e) {\n            try {\n                影片信息 = JSON.parse(html.match(/\"data\":[\\S\\s]{0,50}scorePrefix[\\S\\s]{0,30}area[\\S\\s]{0,100}img[\\S\\s]{0,300}subTitles[\\S\\s]+introTitle[\\S\\s]{0,200}desc[\\S\\s]{0,800}(?=,\"id\")/)[0].replace('\"data\":', ''));\n            } catch (e) {\n                try {\n                    影片信息 = JSON.parse(html.match(/播放页简介组件\",\"dataNode\":\\[{\"data\":[\\S\\s]+(?=,\"id\":[0-9]{0,20},\"type\":[0-9]{0,20}},{\"data\":{\"title\":[\\S\\s]{0,200},\"isAliStar)/)[0].replace('播放页简介组件\",\"dataNode\":[{\"data\":', ''));\n                } catch (e) {\n                    影片信息 = '';\n                }\n            }\n        }\n        影片名称 = pdfh(html, '.module-name&&Text');\n        setPageTitle(影片名称)\n        if (影片信息) {\n            剧集ID = 影片信息.showId;\n            封面 = 影片信息.img.replace('\\u002F', '/') + \"@Referer=\";\n            // 动态设置二级收藏图片（网页拦截重定向后需要自行设置）\n            setPagePicUrl(封面);\n            // 有些剧集或者说电影的更新状态或者是评分数据或者说动漫的类型是空甚至根本没有所以单独获取并做异常处理\n            try {\n                类型 = 影片信息.mark.data.text;\n            } catch (e) {\n                类型 = '';\n            }\n            简述 = 影片信息.subTitles[0].subtitle;\n            状态 = 影片信息.subTitles[1].subtitle;\n            if (状态 == undefined) {\n                状态 = '完结'\n            }\n            标签 = 影片信息.showGenre;\n            if (标签 == undefined) {\n                标签 = '';\n            }\n        } else {\n            // 针对筐出未来电影赏析而写的，事实上教育栏目最后多数也是走这里\n            try {\n                影片地图 = JSON.parse(html.match(/\"videoMap\":[\\S\\s]+(?=,\"pushInfo\")/)[0].replace('\"videoMap\":', ''));\n                影片名称 = 影片地图.showSubtitle;\n                setPageTitle(影片名称);\n                剧集ID = 影片地图.showId;\n                简介 = 影片地图.showName;\n                封面 = 影片地图.videoImg.replace('\\u002F', '/') + \"@Referer=\";\n                setPagePicUrl(封面);\n                类型 = 影片地图.videoCategory;\n                状态 = '共' + 影片地图.episodeLast + '集\\n' + 影片地图.showReleaseTime;\n                简述 = '';\n                标签 = '';\n            } catch (e) {\n                简介 = '没有简介，大概是一些短视频，科技、生活、娱乐分栏~';\n                封面 = 'https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg.zcool.cn%2Fcommunity%2F010097613ad72c11013eaf7098e28a.jpg%402o.jpg&refer=http%3A%2F%2Fimg.zcool.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1661226719&t=75dab3a3ff2d817e6f388f89505ea2e4@Referer=';\n                类型 = '';\n                状态 = '';\n                简述 = '';\n                标签 = '';\n            }\n        }\n        // 匹配电影\n        if (html.match(/\"播放页电影选集\",\"dataNode\":\\[{[\\S\\s]+(?=,\"title\":\"(系列电影|播放列表)\")/)) {\n            上映日期 = JSON.parse('{' + html.match(/\"videoPublishTime\"[\\S\\s]+(?=,\"videoTitle\")/)[0] + '}').videoPublishTime;\n            try {\n                电影信息 = JSON.parse(html.match(/\"播放页电影选集\",\"dataNode\":\\[{[\\S\\s]+(?=,\"title\":\"(系列电影|播放列表)\")/)[0].replace('\"播放页电影选集\",\"dataNode\":', ''));\n                电影信息.forEach(list => {\n                    if (list.data.summary) {\n                        正片列表.push({\n                            title: list.data.title,\n                            url: 'https://v.youku.com/v_show/id_' + list.data.action.value + '.html',\n                            desc: list.data.videoType + '\\t' + list.data.summary,\n                        });\n                    } else {\n                        正片列表.push({\n                            title: list.data.title,\n                            url: 'https://v.youku.com/v_show/id_' + list.data.action.value + '.html',\n                            desc: list.data.videoType,\n                        });\n                    }\n                });\n            } catch (e) {\n                try {\n                    // 分成多种语言版本的电影\n                    电影信息 = JSON.parse(html.match(/\"播放页电影选集\",\"dataNode\":\\[{[\\S\\s]+(?=,\"title\":\"播放列表\")/)[0].replace('\"播放页电影选集\",\"dataNode\":', ''));\n                    for (let i = 0; i < 电影信息.length; i++) {\n                        if (电影信息[i].data.summary) {\n                            正片列表.push({\n                                title: 电影信息[i].data.title,\n                                url: 'https://v.youku.com/v_show/id_' + 电影信息[i].data.audioLang[i].videoId + '.html',\n                                desc: 电影信息[i].data.videoType + '\\t' + 电影信息[i].data.summary\n                            });\n                        } else {\n                            正片列表.push({\n                                title: 电影信息[i].data.title,\n                                url: 'https://v.youku.com/v_show/id_' + 电影信息[i].data.audioLang[i].videoId + '.html',\n                                desc: 电影信息[i].data.videoType,\n                            });\n                        }\n                    }\n                } catch (e) {\n                    正片列表 = [];\n                }\n            }\n            更新进度 = '电影';\n        } else {\n            try {\n                // 一般剧集（含电影、综艺）——但电影不走这条线，因为没有系列电影的数据~\n                剧集信息 = JSON.parse(request(\"https://search.youku.com/api/search?appScene=show_episode&showIds=\" + 剧集ID + \"&appCaller=h5\"));\n                剧集列表 = 剧集信息.serisesList;\n                // 先尝试获取剧集数据，如果获取失败，异常会在上方出现，因为没有serisesList，那就走栏目路线\n                剧集长度 = 剧集列表.length;\n                正片列表 = 剧集列表.filter((it) => {\n                    if (it.iconCorner&&it.iconCorner.tagText) {\n                        状态 = it.iconCorner.tagText;\n                    } else {\n                        状态 = '';\n                    }\n                    if (!状态.match(/预|花絮/)) return true;\n                }).map((it) => {\n                    flag = /\\d/.test(it.title.split(' ')[1]);\n                    // log(it);\n                    if (flag) {\n                        title = it.title;\n                        // desc = 状态 + '\\t' + it.stripeBottom + '\\n' + it.displayName;\n                        desc = '';\n                    } else {\n                        // title=it.title+'_'+it.displayName;\n                        // desc=状态 + '\\t' + it.stripeBottom + '\\n' + it.displayName;\n                        // 动漫\n                        title = 影片名称+'_'+it.displayName+ '_' +(it.stripeBottom ? it.stripeBottom : it.title);\n                        desc = '';\n                    }\n                    return {\n                        title: title,\n                        url: 'https://v.youku.com/v_show/id_' + it.videoId + '.html',\n                        desc: desc\n                    }\n                })\n                更新进度 = '剧集&综艺'\n            } catch (e) {\n                log('what?message:'+e.message);\n                // 滑动图片选集型（音乐、娱乐、生活等栏目）——烦了，直接正则全局匹配成数组好了。。。\n                选集信息 = html.match(/\"播放页ugc选集\",\"dataNode\":\\[{[\\S\\s]+}(?=\\],\"title\")/)[0].replace('\"播放页ugc选集\",\"dataNode\":[', '');\n                选集信息 = 选集信息.match(/{\"data\":{[\\S\\s]{0,2000},\"id\":[0-9]{0,20},\"type\":[0-9]{0,20}}/g)\n                setPageTitle('栏目列表')\n                选集信息.forEach(list => {\n                    list = JSON.parse(list);\n                    正片列表.push({\n                        title: list.data.title,\n                        url: 'https://v.youku.com/v_show/id_' + list.data.action.value + '.html',\n                        desc: list.data.publishTime\n                    });\n                });\n                更新进度 = '栏目';\n            }\n        }\n        break;\n    case 'tx':\n        MY_URL = MY_PARAMS.url;\n        if (MY_URL.match(/cover/)) {\n            // 手机搜索结果链接\n            cid = MY_URL.split('/')[5].split('.html')[0];\n            if (MY_URL.split('=')[1]) {\n                vid = MY_URL.split('=')[1];\n                MY_URL = 'https://v.qq.com/x/cover/' + cid + '/' + vid + '.html';\n            } else {\n                MY_URL = 'https://v.qq.com/x/cover/' + cid + '.html';\n            }\n        } else {\n            // 手机首页跳转链接\n            cid = MY_URL.split('=')[1].split('&')[0];\n            if (cid == '') {\n                vid = MY_URL.split('=')[2]\n                // 这个cid貌似是错的，，算了就尝试一下，多半还是要404~\n                data = fetch('https://union.video.qq.com/fcgi-bin/data?otype=json&tid=682&appid=20001238&appkey=6c03bbe9658448a4&union_platform=1&idlist=' + vid);\n                cid = JSON.parse(data.match(/{[\\S\\s]+}/)[0]).results[0].fields.cover_list[0]\n            }\n            MY_URL = 'https://v.qq.com/x/cover/' + cid + '.html';\n        }\n        // log(MY_URL);\n        全集数 = MY_PARAMS.全集数;\n        影片名称 = MY_PARAMS.影片名称;\n        封面 = MY_PARAMS.封面;\n        更新进度 = '全集数:' + 全集数;\n        // 重定义二级页面数据\n        setPageTitle(影片名称);\n        setPagePicUrl(封面);\n        try {\n            // 郑娟、动漫（部分）\n            pageContext = 'lid=&cid=' + cid + '&page_num=0&page_size=30&id_type=1&req_type=6&req_from=web_vsite&req_from_second_type=&detail_page_type=1';\n            curtag = 0; tablen = 1;\n            episodeInfoList = [];\n            while (tablen - curtag > 0) {\n                data = JSON.parse(fetch('https://pbaccess.video.qq.com/trpc.universal_backend_service.page_server_rpc.PageServer/GetPageData?video_appid=3000010&vplatform=2&vversion_name=8.2.96', {\n                    body: {\n                        \"page_params\": {\n                            \"req_from\": \"web_vsite\",\n                            \"page_id\": \"vsite_episode_list\",\n                            \"page_type\": \"detail_operation\",\n                            \"id_type\": \"1\",\n                            \"page_size\": \"\",\n                            \"cid\": cid,\n                            \"vid\": \"\",\n                            \"lid\": \"\",\n                            \"page_num\": \"\",\n                            \"page_context\": pageContext,\n                            \"detail_page_type\": \"1\"\n                        },\n                        \"has_cache\": 1\n                    },\n                    headers: {\n                        'Referer': 'https://v.qq.com/'\n                    }\n                })).data.module_list_datas[0].module_datas[0];\n                // 打补丁，一刀切，存在特殊分季，如动漫诛仙\n                分季列表 = data.item_data_lists.item_datas.filter((it) => it.item_type === \"28\");\n                if (分季列表.length > 0) throw new Error('存在特殊的分季，尝试备用接口方案...');\n                // 无集数分栏\n                if (data.module_params.tabs == \"\") {\n                    tabs = [];\n                } else {\n                    tabs = JSON.parse(data.module_params.tabs);\n                }\n                tablen = tabs.length;\n                curtag++;\n                if (curtag < tablen) pageContext = tabs[curtag].page_context;\n                episodeInfoList = episodeInfoList.concat(data.item_data_lists.item_datas);\n            }\n            正片列表 = episodeInfoList.filter((it) => {\n                // item_type不是1可能不是正片剧集\n                if (it.item_type != \"1\") return false;\n                if (it.item_params.is_trailer != \"1\") return true;\n            }).map((it) => {\n                showTitle = (!it.item_params.union_title.match(/彩蛋/) ? it.item_params.union_title : it.item_params.play_title) + '_' + it.item_params.video_subtitle;\n                return {\n                    title: showTitle,\n                    url: `https://v.qq.com/x/cover/${cid}/${it.item_params.vid}.html`,\n                    desc: ''\n                }\n            })\n        } catch (e) {\n            log('首选接口出错：' + e);\n            // 综艺、电影（无标题）\n            pageContext = 'need_async=true';\n            curtag = 0; tablen = 1;\n            episodeInfoList = [];\n            while (tablen - curtag > 0) {\n                data = JSON.parse(fetch(buildUrl('https://pbaccess.video.qq.com/trpc.videosearch.search_cgi.http/load_playsource_list_info', {\n                    pageNum: '0',\n                    id: cid,\n                    dataType: '2',\n                    pageContext: encodeURIComponent(pageContext),\n                    scene: '2',\n                    platform: '2',\n                    appId: '10718',\n                    site: 'qq'\n                }))).data.normalList.itemList[0].videoInfo.firstBlockSites[0];\n                tabs = data.tabs;\n                tablen = tabs.length;\n                curtag++;\n                if (curtag < tablen) pageContext = tabs[curtag].asnycParams;\n                episodeInfoList = episodeInfoList.concat(data.episodeInfoList);\n            }\n            正片列表 = episodeInfoList.filter((it) => {\n                lable = it.markLabel;\n                if (lable.match(/限免/) || !lable.match(/预|花絮/)) {\n                    return true;\n                } else {\n                    return false;\n                }\n                // !it.markLabel.match(/预|花絮/)\n            }).map((it) => {\n                title = /^\\d+$/.test(it.title) ? 影片名称 + '_' + it.title : it.title;\n                return {\n                    title: title,\n                    url: it.url,\n                    desc: ''\n                }\n            })\n        }\n        break;\n    case 'mgtv':\n        MY_URL = MY_PARAMS.url;\n        html = request(MY_URL);\n        try {\n            vid = MY_URL.split('/')[5].split('.')[0];\n        } catch (e) {\n            link = html.match(/window.location = \"[\\S\\s]+(?=\" \\+ window.location.search)/)[0].replace('window.location = \"', '');\n            vid = link.split('/')[5].split('.')[0];\n            html = request(link);\n        }\n        try {\n            类型 = pdfh(html, '.desc&&.t3,0&&Text').split('：')[1];\n        } catch (e) {\n            类型 = '';\n        }\n        剧集详情 = html.match(/\"videoinfo\":[\\S\\s]+(?=,\"fullVideoListInfo\")/)[0].replace('\"videoinfo\":', '');\n        更新进度 = JSON.parse(剧集详情).updateInfo\n        封面 = JSON.parse(剧集详情).colImage.replace('\\u002F', '/').split('.jpg')[0] + \".jpg@Referer=\";\n        setPagePicUrl(封面);\n        // 获取首页信息（30一页，可能多于30，因为番外，size不建议修改会出错）\n        剧集信息 = JSON.parse(fetch(`https://pcweb.api.mgtv.com/episode/list?_support=10000000&version=5.5.35&video_id=${vid}&page=1&size=30&allowedRC=1&_support=10000000`, {\n            headers: {\n                'User-Agent': PC_UA\n            },\n            referrer: MY_URL,\n            method: 'GET'\n        })).data;\n        影片名称 = 剧集信息.info.title;\n        setPageTitle(影片名称);\n        剧集长度 = 剧集信息.count;\n        总页数 = 剧集信息.total_page;\n        剧集列表 = 剧集信息.list;\n        for (let page = 2; page <= 总页数; page++) {\n            剧集列表 = 剧集列表.concat(JSON.parse(fetch(`https://pcweb.api.mgtv.com/episode/list?_support=10000000&version=5.5.35&video_id=${vid}&page=${page}&size=30&allowedRC=1&_support=10000000`, {\n                headers: {\n                    'User-Agent': PC_UA\n                },\n                referrer: MY_URL,\n                method: 'GET'\n            })).data.list);\n        }\n        正片列表 = 剧集列表.filter((it) => {\n            // corner可能为空数组\n            try {\n                状态或集数标识 = it.corner[0].font;\n            } catch (e) {\n                状态或集数标识 = '';\n            }\n            if (!状态或集数标识.match(/预|花絮/)) return true;\n        }).map((it) => {\n            if (类型.match(/综艺/)) {\n                showTitle = it.t1 + '_' + it.t2 + '_' + it.ts.split(' ')[0];\n            } else {\n                showTitle = it.t1 + '_' + it.t2;\n            }\n            return {\n                title: showTitle,\n                url: 'https://www.mgtv.com' + it.url,\n                desc: '时长：' + it.time + '\\t发布：' + it.ts\n            }\n        })\n        break;\n    case 'bili':\n        if (MY_PARAMS.season_id) {\n            season_id = MY_PARAMS.season_id + \"\";\n            Data = JSON.parse(fetch('https://api.bilibili.com/pgc/view/web/season?season_id=' + season_id)).result;\n        } else {\n            Data = JSON.parse(fetch('https://api.bilibili.com/pgc/view/web/season?ep_id=' + MY_PARAMS.ep_id)).result;\n        }\n        if (!Data.cover.match(/https/)) {\n            封面 = Data.cover.replace('http', 'https') + \"@Referer=\";\n        } else {\n            封面 = Data.cover + \"@Referer=\";\n        }\n        更新进度 = '最新:' + Data.new_ep.title;\n        影片名称 = Data.title;\n        剧集列表 = Data.episodes;\n        // 重定义二级页面数据\n        setPageTitle(影片名称);\n        setPagePicUrl(封面);\n        正片列表 = 剧集列表.filter((it) => {\n            if (!it.badge.match(/预|花絮/)) return true;\n        }).map((it) => {\n            return {\n                title: it.share_copy,\n                url: it.link,\n                desc: (it.title.match(/[0-9]/ && !it.title.match(/集|话/)) ? ('第' + it.title + '话') : it.title) + it.long_title\n            }\n        })\n        break;\n    case '360':\n        site = MY_PARAMS.site;\n        uniqueSites = MY_PARAMS.uniqueSites;\n        catId = MY_PARAMS.catId;\n        enId = MY_PARAMS.enId;\n        cover = MY_PARAMS.cover;\n        info = MY_PARAMS.info;\n        title = MY_PARAMS.title;\n        zongyiInfo = MY_PARAMS.zongyiInfo;\n        var 封面 = cover + \"@Referer=\";\n        // 1,电影\n        if (catId == \"1\") {\n            Data = JSON.parse(fetch(buildUrl('https://api.web.360kan.com/v1/detail', {\n                cat: catId,\n                id: enId\n            }))).data;\n            更新进度 = '上映:' + Data.pubdate;\n            影片名称 = Data.title;\n            // 封面 = Data.cdncover+\"@Referer=\";\n            // 重定义二级页面数据\n            setPageTitle(影片名称);\n            setPagePicUrl(封面);\n            playlinksdetail = Data.playlinksdetail;\n            var targets = [\"qq\", \"youku\", \"qiyi\", \"bilibili1\", \"imgo\"];\n            for (var site in playlinksdetail) {\n                if (playlinksdetail.hasOwnProperty(site)) {\n                    if (targets.includes(playlinksdetail[site].site)) {\n                        // 如果site在targets数组中，则处理这个对象\n                        console.log(\"Found target:\", site);\n                        // ... 这里可以执行相关的操作 ...\n                        正片列表.push({\n                            title: site + '_' + 影片名称,\n                            url: playlinksdetail[site].default_url.split('?')[0],\n                            desc: playlinksdetail[site].description\n                        })\n                    } else {\n                        // 如果site不在targets数组中，则跳过\n                        console.log(\"Skipping non-target:\", site);\n                    }\n                }\n            }\n        } else if (catId == \"3\") {\n            // 综艺\n            // 添加线路和年份标签\n            // 使用Object.keys()获取对象的所有键名\n            let tabs = Object.keys(zongyiInfo);\n            for (var site in zongyiInfo) {\n                d.push({\n                    title: site == getMyVar('360_tab', tabs[0]) ? '““””<b><span style=\"color: red\">' + site + '</span></b>' : site,\n                    url: $('#noLoading#').lazyRule((site) => {\n                        putMyVar('360_tab', site);\n                        // 防止出错\n                        clearMyVar('360_tab_year')\n                        refreshPage(true);\n                        return 'hiker://empty';\n                    }, site),\n                    col_type: 'scroll_button'\n                })\n            }\n            d.push({\n                col_type: 'line'\n            });\n            zongyiInfo[getMyVar('360_tab', tabs[0])].forEach(it => {\n                d.push({\n                    title: it+'' == getMyVar('360_tab_year', zongyiInfo[getMyVar('360_tab', tabs[0])][0]+'') ? '““””<b><span style=\"color: red\">' + it + '</span></b>' : it,\n                    url: $('#noLoading#').lazyRule((it) => {\n                        putMyVar('360_tab_year', it);\n                        refreshPage(true);\n                        return 'hiker://empty';\n                    }, it+''),\n                    col_type: 'scroll_button'\n                })\n            })\n            Data = JSON.parse(fetch(buildUrl('https://api.web.360kan.com/v1/detail', {\n                cat: catId,\n                id: enId,\n                site: getMyVar('360_tab', tabs[0]),\n                year:getMyVar('360_tab_year', zongyiInfo[getMyVar('360_tab', tabs[0])][0]+'')\n            }))).data;\n            更新进度 = info;\n            影片名称 = title;\n            // 重定义二级页面数据\n            setPageTitle(影片名称);\n            setPagePicUrl(封面);\n            defaultepisode = Data.defaultepisode;\n            var targets = [\"qq\", \"youku\", \"qiyi\", \"bilibili1\", \"imgo\"];\n            defaultepisode.forEach((it)=>{\n                正片列表.push({\n                    title: it.period + '' + it.name,\n                    url: it.url.split('?')[0],\n                    desc: '序：'+it.period_alias+' '+it.pubdate\n                })\n            })\n        } else {\n            // 2电视剧,4动漫\n            if (site && uniqueSites.length == 1) {\n                let queryData = {\n                    cat_id: catId,\n                    ent_id: enId,\n                    site: site\n                };\n                // 将JavaScript对象转换为JSON字符串\n                let jsonData = JSON.stringify([queryData]);\n                // 使用encodeURIComponent确保JSON字符串被正确编码\n                let encodedData = encodeURIComponent(jsonData);\n                // 构建完整的URL\n                let url = `https://api.so.360kan.com/episodesv2?s=${encodedData}`;\n                Data = JSON.parse(fetch(url)).data[0].seriesHTML.seriesPlaylinks;\n                // 封面=cover;\n                更新进度 = info;\n                影片名称 = title;\n                // 重定义二级页面数据\n                setPageTitle(影片名称);\n                setPagePicUrl(封面);\n                let index = 1;\n                正片列表 = Data.map((it) => {\n                    const result = {\n                        title: 影片名称 + '_' + index,\n                        url: it.url.split('?')[0],\n                        desc: it.free_icon == 1 ? '免费' : 'vip'\n                    }\n                    index++; // 在每次迭代中递增索引\n                    return result;\n                })\n            } else if (site && uniqueSites.length > 1) {\n                log('该影片实则可能多条线路')\n                // 添加线路标签\n                uniqueSites.forEach(it => {\n                    d.push({\n                        title: it == getMyVar('360_tab', uniqueSites[0]) ? '““””<b><span style=\"color: red\">' + it + '</span></b>' : it,\n                        url: $('#noLoading#').lazyRule((it) => {\n                            putMyVar('360_tab', it);\n                            refreshPage(true);\n                            return 'hiker://empty';\n                        }, it),\n                        col_type: 'scroll_button'\n                    })\n                })\n                let queryData = {\n                    cat_id: catId,\n                    ent_id: enId,\n                    site: getMyVar('360_tab', uniqueSites[0])\n                };\n                // 将JavaScript对象转换为JSON字符串\n                let jsonData = JSON.stringify([queryData]);\n                // 使用encodeURIComponent确保JSON字符串被正确编码\n                let encodedData = encodeURIComponent(jsonData);\n                // 构建完整的URL\n                let url = `https://api.so.360kan.com/episodesv2?s=${encodedData}`;\n                Data = JSON.parse(fetch(url)).data[0].seriesHTML.seriesPlaylinks;\n                // 封面=cover;\n                更新进度 = info;\n                影片名称 = title;\n                // 重定义二级页面数据\n                setPageTitle(影片名称);\n                setPagePicUrl(封面);\n                let index = 1;\n                正片列表 = Data.map((it) => {\n                    const result = {\n                        title: 影片名称 + '_' + index,\n                        url: it.url.split('?')[0],\n                        desc: it.free_icon == 1 ? '免费' : 'vip'\n                    }\n                    index++; // 在每次迭代中递增索引\n                    return result;\n                })\n            }\n\n        }\n        break;\n}\n\n// 处理弹幕列表\nstorage0.putMyVar('checkArr', 正片列表);\ndmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\nsaveLocal = dmSettings.saveLocal;\ndoubleWrite = dmSettings.doubleWrite;\nd.push({\n    title: 影片名称 + \"<small><small><font color='grey'>（👇️单项下载🫱批量下载*⃣长按设置）</font></small></small>\",\n    desc: 更新进度,\n    col_type: \"avatar\",\n    url: $(\"\", \"请输入下载范围(1,\" + 正片列表.length + \")\\n支持输入单个序号\").input(() => {\n        var checkArr = storage0.getMyVar('checkArr', []);\n        let [a, b] = input.split(/,|，/);\n        // 检查是否只有一个数字输入\n        if (a && !b) {\n            a = Number(a);\n            if (Number.isNaN(a)) {\n                return \"toast://请按格式输入数字\";\n            } else {\n                try {\n                    if (a < 1) return \"toast://请输入规定范围内的数字\";\n                    // 只有一个数字输入，处理这种情况\n                    title = checkArr[a - 1].title;\n                    vipUrl = checkArr[a - 1].url;\n                    showLoading('下载中:' + title);\n                    dm = $.require('hiker://page/dmFun?rule=dm盒子').dmRoute(vipUrl);\n                    hideLoading();\n                    if (dm === false) {\n                        log('下载出错');\n                    }\n                    dmPath = getPath(getVar('dm_share')).slice(7);\n                    // newFileName = dmPath.substring(dmPath.lastIndexOf(\"/\") + 1).replace(/(\\.[^.]+)$/, '_' + i + \"$1\");\n                    newFileName = dmPath.substring(dmPath.lastIndexOf(\"/\") + 1).split('from')[0] + title + '.xml';\n                    innerFilepath = getPath('hiker://files/cache/danmu/').slice(7) + newFileName;\n                    var { renameFile, copyFile, moveFile } = $.require(\"hiker://page/fileAPI?rule=dm盒子\");\n                    dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\n                    saveLocal = dmSettings.saveLocal;\n                    doubleWrite = dmSettings.doubleWrite;\n                    if (saveLocal) {\n                        destinationDir = '/storage/emulated/0/Download/海阔视界/danmu/';\n                        renameFile(dmPath, newFileName);\n                        if (doubleWrite) {\n                            copyFile(innerFilepath, destinationDir);\n                        } else {\n                            moveFile(innerFilepath, destinationDir);\n                        }\n                    } else {\n                        renameFile(dmPath, newFileName);\n                    }\n                    putVar('dm_share', innerFilepath.replace('/storage/emulated/0/Android/data/com.example.hikerview/files/Documents/', 'hiker://files/'));\n                    return \"toast://下载完成，快去观影吧，。\";\n                } catch (e) {\n                    log(title + '下载出错:' + e);\n                }\n            }\n        } else {\n            a = Number(a), b = Number(b);\n            if (Number.isNaN(a) || Number.isNaN(b)) {\n                return \"toast://请按格式输入数字\";\n            }\n            if (a < 1 || b > checkArr.length) {\n                return \"toast://请输入规定范围内的数字\";\n            }\n            for (let i = a - 1; i < b; i++) {\n                // ep=i+1;\n                title = checkArr[i].title;\n                try {\n                    showLoading('进度:' + title);\n                    // showLoading(\"下载进度：第\" + ep + \"集\");\n                    dm = $.require('hiker://page/dmFun?rule=dm盒子').dmRoute(checkArr[i].url);\n                    hideLoading();\n                    if (dm === false) {\n                        log(title + '下载出错');\n                    }\n                    dmPath = getPath(getVar('dm_share')).slice(7);\n                    // newFileName = dmPath.substring(dmPath.lastIndexOf(\"/\") + 1).replace(/(\\.[^.]+)$/, '_' + i + \"$1\");\n                    newFileName = dmPath.substring(dmPath.lastIndexOf(\"/\") + 1).split('from')[0] + title + '.xml';\n                    innerFilepath = getPath('hiker://files/cache/danmu/').slice(7) + newFileName;\n                    var { renameFile, copyFile, moveFile } = $.require(\"hiker://page/fileAPI?rule=dm盒子\");\n                    dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\n                    saveLocal = dmSettings.saveLocal;\n                    doubleWrite = dmSettings.doubleWrite;\n                    if (saveLocal) {\n                        destinationDir = '/storage/emulated/0/Download/海阔视界/danmu/';\n                        renameFile(dmPath, newFileName);\n                        if (doubleWrite) {\n                            copyFile(innerFilepath, destinationDir);\n                        } else {\n                            moveFile(innerFilepath, destinationDir);\n                        }\n                    } else {\n                        renameFile(dmPath, newFileName);\n                    }\n                } catch (e) {\n                    log(title + '下载出错:' + e);\n                }\n            }\n        }\n        clearMyVar('checkArr');\n        return \"toast://已全部下载，快去观影吧，。\";\n    }),\n    // pic_url: \"https://hikerfans.com/tubiao/movie/14.svg\"\n    pic_url: 封面,\n    extra: {\n        longClick: [{\n            title: '转存:' + (saveLocal == true ? '开' : '关'), js: $.toString(() => {\n                dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\n                if (dmSettings.saveLocal == true) {\n                    dmSettings.saveLocal = false;\n                } else {\n                    dmSettings.saveLocal = true;\n                }\n                saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(dmSettings));\n                refreshPage(true);\n                return 'toast://弹幕存储路径已更改~'\n            })\n        }, {\n            title: '双写:' + (doubleWrite == true ? '开' : '关'), js: $.toString(() => {\n                dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\n                if (dmSettings.doubleWrite == true) {\n                    dmSettings.doubleWrite = false;\n                } else {\n                    dmSettings.doubleWrite = true;\n                }\n                saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(dmSettings));\n                refreshPage(true);\n                return 'toast://双写模式已更改~'\n            })\n        }, {\n            title: '弹幕配置', js: $.toString(() => {\n                return 'hiker://page/setting#noHistory#';\n            })\n        }, {\n            title: '文件管理', js: $.toString(() => {\n                return 'hiker://page/filesSystem#noHistory#';\n            })\n        }]\n    }\n});\nd.push({\n    col_type: \"line\"\n});\nfor (let i = 0; i < 正片列表.length; i++) {\n    try {\n        title = 正片列表[i].title;\n        url = 正片列表[i].url;\n        desc = 正片列表[i].desc;\n        d.push({\n            title: '““””<b><span style=\"color: red\">' + (i + 1) + '-</span></b>' + title,\n            url: $().lazyRule((vipUrl, title) => {\n                showLoading('下载中:' + title);\n                dm = $.require('hiker://page/dmFun?rule=dm盒子').dmRoute(vipUrl);\n                hideLoading();\n                if (dm === false) {\n                    return \"toast://下载出错，请尝试切换弹幕源！\";\n                }\n                dmPath = getPath(getVar('dm_share')).slice(7);\n                // newFileName = dmPath.substring(dmPath.lastIndexOf(\"/\") + 1).replace(/(\\.[^.]+)$/, '_' + i + \"$1\");\n                newFileName = dmPath.substring(dmPath.lastIndexOf(\"/\") + 1).split('from')[0] + title + '.xml';\n                innerFilepath = getPath('hiker://files/cache/danmu/').slice(7) + newFileName;\n                var { renameFile, copyFile, moveFile } = $.require(\"hiker://page/fileAPI?rule=dm盒子\");\n                dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\n                saveLocal = dmSettings.saveLocal;\n                doubleWrite = dmSettings.doubleWrite;\n                if (saveLocal) {\n                    destinationDir = '/storage/emulated/0/Download/海阔视界/danmu/';\n                    renameFile(dmPath, newFileName);\n                    if (doubleWrite) {\n                        copyFile(innerFilepath, destinationDir);\n                    } else {\n                        moveFile(innerFilepath, destinationDir);\n                    }\n                } else {\n                    renameFile(dmPath, newFileName);\n                }\n                putVar('dm_share', innerFilepath.replace('/storage/emulated/0/Android/data/com.example.hikerview/files/Documents/', 'hiker://files/'));\n                return \"toast://下载完成，快去观影吧，。\";\n            }, url, title),\n            desc: desc,\n            col_type: 'text_1'\n        });\n    } catch (e) {\n        d.push({\n            title: '正片列表为空',\n            url: 'hiker://empty',\n            desc: e,\n            col_type: 'text_center_1'\n        })\n    }\n\n}\nsetResult(d);\n"},{"name":"主页","path":"homePage","rule":"js:\ndmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\nvar fontSize = dmSettings.fontSize;\nvar erjiPage=dmSettings.erjiPage;\nvar helpFrom = 'hiker://page/Instruction_Book.html?rule=dm盒子';\nvar APIFrom = 'hiker://page/API.html?rule=dm盒子';\ntry {\n    var helpFile = JSON.parse(fetch(helpFrom)).rule;\n    var APIFile = JSON.parse(fetch(APIFrom)).rule;\n    saveFile('hiker://files/cache/Instruction_Book.html', helpFile);\n    saveFile('hiker://files/cache/API.html', APIFile);\n} catch (e) {\n    log('拉取异常')\n}\nvar d = [{\n    title: \"🔍️\",\n    desc: '搜搜看~点击封面有惊喜ψ(｀∇´)ψ',\n    col_type: \"input\",\n    url: $.toString(() => {\n        var seaword = getMyVar('key_word', '');\n        if (seaword == '') {\n            return 'toast://请输入搜索关键字！'\n        }\n        return \"hiker://search?s=\" + seaword;\n    }),\n    extra: {\n        onChange: \"putMyVar('key_word',input)\",\n        rules: $.toString((MY_URL) => {\n            evalPrivateJS(JSON.parse(request('hiker://page/search_rules')).rule);\n            return JSON.stringify(rs)\n        }, MY_URL)\n    }\n}, {\n    img: 'https://gimg2.baidu.com/image_search/src=http%3A%2F%2Finews.gtimg.com%2Fnewsapp_match%2F0%2F10683661571%2F0.jpg&refer=http%3A%2F%2Finews.gtimg.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1658369890&t=18f955fc2c73ebd658607cc608081cf5',\n    title: 'dm盒子配置',\n    col_type: \"card_pic_1\",\n    desc: '0',\n    url: 'hiker://page/setting'\n}, {\n    title: \"弹幕大小:\" + fontSize,\n    col_type: \"text_2\",\n    url: $(fontSize, \"请输入数字\").input(() => {\n        curSettings = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\n        try {\n            curSettings.fontSize = parseInt(input);\n        } catch (e) {\n            return 'toast://请输入数字！'\n        }\n        let dmPath = getVar('dm_share', '');\n        const filenameWithExt = dmPath.split('/').pop();\n        const index = filenameWithExt.lastIndexOf('.');\n        const filename = index !== -1 ? filenameWithExt.substring(0, index) : filenameWithExt;\n        // 清除上一次解析的记忆\n        if (filename) {\n            delete curSettings.history[filename];\n            log('更改生效，上次解析记录已清除');\n        }\n        saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(curSettings));\n        refreshPage(true);\n        return \"hiker://empty\";\n    }),\n    extra: {\n        id: '弹幕大小'\n    }\n}, {\n    title: \"二级:\" + erjiPage,\n    col_type: \"text_2\",\n    url: $(['弹幕列表', '常规二级'], 1).select(() => {\n        curSettings = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\n        curSettings.erjiPage = input;\n        saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(curSettings));\n        refreshPage(true);\n        return \"hiker://empty\";\n    }),\n    extra: {\n        id: '二级模式'\n    }\n}, {\n    title: '使用手册',\n    col_type: 'text_2',\n    url: 'hiker://page/doc#immersiveTheme#',\n    extra: {\n        newWindow: false,\n        docType: 'help'\n    }\n}, {\n    title: '文件管理',\n    col_type: 'text_2',\n    // url: single_dnpluin_newWindow_init(),\n    url: 'hiker://page/filesSystem#noHistory#',\n    extra: {\n        newWindow: true\n    }\n}, {\n    title: 'API文档',\n    desc: '调用必看',\n    col_type: 'text_center_1',\n    url: 'hiker://page/doc',\n    extra: {\n        newWindow: false,\n        docType: 'API'\n    }\n}, {\n    title: '<big><b>欢迎来到dm盒子：</b></big><br><font color=blue>弹幕收纳盒，提供弹幕数据解析、下载、分享、观影多重方式让弹幕可以在海阔规则内和各类外部场景自由使用\\t\\t★)^-^(★</font><div style=\"text-align: center;\">当前版本：' + MY_RULE.version + '<br><a href=\"https://txc.qq.com/products/662723#noRecordHistory#\">点击反馈</a>\\t\\t<a href=\"hiker://page/Donate.v#noHistory##noRecordHistory#\">点击赞赏</a>\\t\\tOr2</div>',\n    col_type: 'rich_text',\n    url: $().lazyRule(() => {\n        return \"toast://疼，别点！\"\n    })\n}]\nsetResult(d);\n"},{"name":"声明","path":"Main","rule":"if (getItem(\"first\") == MY_RULE.version) {\n    $.require(\"homePage\");\n} else if (MY_PAGE === 1) {\n    let d = []\n    let time = 10;\n    let id = Date.now();\n    let subPass = \"海阔视界规则分享，当前分享的是：合集规则订阅￥home_sub￥dm盒子@@http://hiker.nokia.press/hikerule/rulelist.json?id=5923&debug=true\";\n    let content=`\n    1. 本小程序核心代码99%开源，且本规则为学习目的，请于导入24小时内删除！！！\n    2. 本小程序<b>完全免费</b>，如果你是付费购买的恭喜你被骗了。当然如果有能力想鼓励作者的可以${\"支持一下\".link('hiker://page/Donate.v#noHistory##noRecordHistory#')}</a>(<small>点击链接可进行赞赏</a>，稍后亦可在主页菜单进入</small>)。\n    3. 初次使用务必先访问本程序首页并点击同意刷新首页后再使用\n    4. 相关说明参见规则主页内部的使用手册，你亦可访问网址<a href='https://docs.qq.com/doc/DU25zWmZSSmhLd1RH#noHistory##noRecordHistory#'>https://docs.qq.com/doc/DU25zWmZSSmhLd1RH</a>进行查阅。\n    5. 本小程序目前功能基本齐全，不再更新请勿提交任何新功能请求。\n    5. 使用过程如遇错误，可前往<a href='https://txc.qq.com/products/662723#noRecordHistory#'>https://txc.qq.com/products/662723</a>或者海阔频道进行反馈与交流学习Or2\n    6. 20240220以上版本请保持bili规则同步最新\n    开始使用本规则即代表遵守规则,当前版本：${MY_RULE.version}\n    如果你想保持最新版请${\"订阅此规则\".link(\"rule://\" + base64Encode(subPass))}\n    ----------\n    *本次更新：以优化使用体验为主，具体前往频道或在线手册获取详细更新内容\n    *心有余力不足，江湖再见>—_-(\n    `\n    d.push({\n        title: \"““””<strong>使用前须知</strong>\".big(),\n        col_type: \"text_center_1\",\n        url: \"hiker://empty\",\n        extra: {\n            lineVisible: false\n        }\n    });\n    d.push({\n        title: content.trim().replace(/\\n\\s*?/g, \"<br>\"),\n        \"col_type\": \"rich_text\"\n    }, {\n        col_type: \"line\"\n    }, {\n        title: time + \"秒后继续\",\n        url: \"toast://请认真阅读以上内容\",\n        col_type: \"text_center_1\",\n        extra: {\n            id: id + \"timer\"\n        }\n    });\n    setResult(d);\n    while (time != 0) {\n        java.lang.Thread.sleep(1000);\n        time -= 1;\n        updateItem(id + \"timer\", {\n            title: time + \"秒后继续\"\n        });\n    }\n    updateItem(id + \"timer\", {\n        title: \"““我同意以上要求””\",\n        url: $(\"#noLoading#\").lazyRule((v) => {\n            setItem(\"first\", String(v));\n            refreshPage();\n            return \"toast://感谢您的理解\";\n        }, MY_RULE.version),\n        col_type: \"text_center_1\"\n    });\n}\n"},{"name":"文件管理API","path":"fileAPI","rule":"\n$.exports.checkFileExists = function (filePath) {\n    var javaImport = new JavaImporter(java.io);\n    with (javaImport) {\n        var file = new File(filePath);\n        return file.exists();\n    }\n}\n$.exports.createDirectory = function (directoryPath) {\n    var javaImport = new JavaImporter(java.io);\n    with (javaImport) {\n        var directory = new File(directoryPath);\n        if (!directory.exists()) {\n            if (!directory.mkdirs()) {\n                console.log(\"目标文件夹创建失败：\" + directoryPath);\n            }\n        }\n    }\n}\n$.exports.renameFile = function (filePath, newFileName) {\n    var javaImport = new JavaImporter(java.io);\n    with (javaImport) {\n        var file = new File(filePath);\n        var parentDir = file.getParent();\n        var newFilePath = parentDir + \"/\" + newFileName;\n\n        if (!$.require(\"hiker://page/fileAPI?rule=dm盒子\").checkFileExists(filePath)) {\n            console.log(\"源文件不存在，请检查路径：\" + filePath);\n            return;\n        }\n\n        try {\n            if (!file.renameTo(new File(newFilePath))) {\n                console.log(\"文件重命名失败！\");\n            }\n        } catch (e) {\n            console.log(\"文件重命名失败！\");\n            console.log(\"失败原因：\" + e.message);\n        }\n    }\n}\n$.exports.copyFile = function (sourcePath, destinationDir) {\n    var javaImport = new JavaImporter(java.io);\n    with (javaImport) {\n        var file = new File(sourcePath);\n        var destDir = new File(destinationDir);\n\n        if (!$.require(\"hiker://page/fileAPI?rule=dm盒子\").checkFileExists(sourcePath)) {\n            console.log(\"源文件不存在，请检查路径：\" + sourcePath);\n            return;\n        }\n\n        try {\n            if (!destDir.exists()) {\n                console.log(\"目标文件夹不存在，将创建文件夹：\" + destDir);\n                $.require(\"hiker://page/fileAPI?rule=dm盒子\").createDirectory(destDir.getPath());\n            }\n\n            var destFilePath = destinationDir + \"/\" + file.getName();\n            var input = new FileInputStream(file);\n            var output = new FileOutputStream(destFilePath);\n            var buffer = java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE, 1024);\n            var length;\n            while ((length = input.read(buffer)) > 0) {\n                output.write(buffer, 0, length);\n            }\n            input.close();\n            output.close();\n\n            console.log(\"文件拷贝成功！\");\n        } catch (e) {\n            console.log(\"文件拷贝失败！\");\n            console.log(\"失败原因：\" + e.message);\n        }\n    }\n}\n$.exports.moveFile = function (sourcePath, destinationDir) {\n    var javaImport = new JavaImporter(java.io);\n    with (javaImport) {\n        var file = new File(sourcePath);\n        var destDir = new File(destinationDir);\n\n        if (!$.require(\"hiker://page/fileAPI?rule=dm盒子\").checkFileExists(sourcePath)) {\n            console.log(\"源文件不存在，请检查路径：\" + sourcePath);\n            return;\n        }\n\n        try {\n            if (!destDir.exists()) {\n                console.log(\"目标文件夹不存在，将创建文件夹：\" + destDir);\n                $.require(\"hiker://page/fileAPI?rule=dm盒子\").createDirectory(destDir.getPath());\n            }\n\n            var destFilePath = destinationDir + \"/\" + file.getName();\n            if (!file.renameTo(new File(destFilePath))) {\n                console.log(\"文件移动失败！\");\n            }\n        } catch (e) {\n            console.log(\"文件移动失败！\");\n            console.log(\"失败原因：\" + e.message);\n        }\n    }\n}\n"},{"name":"赞赏","path":"Donate.v","rule":"js:\nlet d = [];\nsetPageTitle(\"捐赠/支持\");\nd.push({\n    title: \"捐赠/支持\",\n    desc: \"这个捐赠不能为你带来特权，但您的支持是我更新创作的动力。\",\n    col_type: \"text_center_1\",\n    url: \"toast://感谢您的支持\"\n});\nd.push({\n    col_type: \"pic_1_full\",\n    url: \"https://i0.hdslb.com/bfs/article/84d01007559b7b1e89675c7e05ba77f1688545001.jpg@Referer=\",\n    pic_url: \"https://i0.hdslb.com/bfs/article/84d01007559b7b1e89675c7e05ba77f1688545001.jpg@Referer=\"\n});\nd.push({\n    col_type: \"text_center_1\",\n    title: \"““””\" + \"图片加载缓慢请稍等\".small().fontcolor(\"Gray\"),\n    url: \"hiker://empty\",\n    extra: {\n        lineVisible: false\n    }\n});\nsetResult(d);\n"},{"name":"360°","path":"danmu#360°","rule":"js:\nfunction search(name) {\n    listData = search360(name);\n    let d = [];\n    listData.forEach(rs => {\n        // 将seriesSite转换为数组并合并到vipSite数组中\n        let combinedSites = rs.vipSite.concat(rs.seriesSite);\n        // 使用filter()排除null值，然后使用Set去除重复项，最后转换回数组\n        let uniqueSites = Array.from(new Set(combinedSites.filter(item => item !== null && item !== undefined)));\n        var targets = [\"qq\", \"youku\", \"qiyi\", \"bilibili1\", \"imgo\"];\n        if (targets.some(target => uniqueSites.includes(target))) {\n            d.push({\n                title: rs.titleTxt + \"[⭐来源：\" + uniqueSites.join(',') + ']',\n                url: $().lazyRule((catId, enId, site, title, uniqueSites, zongyiInfo) => {\n                    // 1,电影\n                    if (catId == \"1\") {\n                        let d=[];\n                        Data = JSON.parse(fetch(buildUrl('https://api.web.360kan.com/v1/detail', {\n                            cat: catId,\n                            id: enId\n                        }))).data;\n                        playlinksdetail = Data.playlinksdetail;\n                        var targets = [\"qq\", \"youku\", \"qiyi\", \"bilibili1\", \"imgo\"];\n                        for (var site in playlinksdetail) {\n                            if (playlinksdetail.hasOwnProperty(site)) {\n                                if (targets.includes(playlinksdetail[site].site)) {\n                                    console.log(\"Found target:\", site);\n                                    let itemTitle = site + '_' + Data.title;\n                                    vipUrl = playlinksdetail[site].default_url.split('?')[0];\n                                    d.push({\n                                        title: itemTitle,\n                                        url: $().lazyRule((title, vipUrl) => {\n                                            return $.require('hiker://page/dmFun?rule=dm盒子').downloadRoute(title, vipUrl,false);\n                                        },itemTitle, vipUrl)\n                                    })\n                                } else {\n                                    console.log(\"Skipping non-target:\", site);\n                                }\n                            }\n                        }\n                        return d;\n                    } else if (catId == \"3\") {\n                        // 综艺\n                        let d=[];\n                        for (var site in zongyiInfo) {\n                            let d=[];\n                            d.push({\n                                title: site,\n                                url: $('#noLoading#').lazyRule((catId,enId,zongyiInfo,site) => {\n                                    let d=[];\n                                    zongyiInfo[site].forEach(it => {\n                                        d.push({\n                                            title: it + '',\n                                            url: $('#noLoading#').lazyRule((catId,enId,site,it) => {\n                                                let d=[];\n                                                Data = JSON.parse(fetch(buildUrl('https://api.web.360kan.com/v1/detail', {\n                                                    cat: catId,\n                                                    id: enId,\n                                                    site: site,\n                                                    year: it\n                                                }))).data;\n                                                defaultepisode = Data.defaultepisode;\n                                                defaultepisode.forEach((it) => {\n                                                    let itemTitle=it.period + '' + it.name;\n                                                    let vipUrl=it.url.split('?')[0];\n                                                    d.push({\n                                                        title: itemTitle,\n                                                        url: $().lazyRule((title, vipUrl) => {\n                                                            return $.require('hiker://page/dmFun?rule=dm盒子').downloadRoute(title, vipUrl,false);\n                                                        },itemTitle, vipUrl)\n                                                    })\n                                                })\n                                                return d;\n                                            }, catId,enId,site,it),\n                                        })\n                                    })\n                                    return d;\n                                },catId,enId,zongyiInfo,site),\n                            });\n                            return d;\n                        }\n                        return d;\n                    } else {\n                        // 2电视剧,4动漫\n                        if (site && uniqueSites.length == 1) {\n                            let d=[];\n                            let queryData = {\n                                cat_id: catId,\n                                ent_id: enId,\n                                site: site\n                            };\n                            // 将JavaScript对象转换为JSON字符串\n                            let jsonData = JSON.stringify([queryData]);\n                            // 使用encodeURIComponent确保JSON字符串被正确编码\n                            let encodedData = encodeURIComponent(jsonData);\n                            // 构建完整的URL\n                            let url = `https://api.so.360kan.com/episodesv2?s=${encodedData}`;\n                            Data = JSON.parse(fetch(url)).data[0].seriesHTML.seriesPlaylinks;\n                            let index = 1;\n                            d = Data.map((it) => {\n                                let itemTitle = title + '_' + index;\n                                vipUrl = it.url.split('?')[0];\n                                const result = {\n                                    title: itemTitle,\n                                    url: $().lazyRule((title, vipUrl) => {\n                                        return $.require('hiker://page/dmFun?rule=dm盒子').downloadRoute(title, vipUrl,false);\n                                    },itemTitle, vipUrl)\n                                };\n                                index++; // 在每次迭代中递增索引\n                                return result;\n                            })\n                            return d;\n                        } else if (site && uniqueSites.length > 1) {\n                            log('该影片实则可能多条线路')\n                            // 添加线路标签\n                            let d = [];\n                            uniqueSites.forEach(it => {\n                                d.push({\n                                    title: it,\n                                    url: $('#noLoading#').lazyRule((it,catId,enId,title) => {\n                                        let d=[];\n                                        let queryData = {\n                                            cat_id: catId,\n                                            ent_id: enId,\n                                            site: it\n                                        };\n                                        // 将JavaScript对象转换为JSON字符串\n                                        let jsonData = JSON.stringify([queryData]);\n                                        // 使用encodeURIComponent确保JSON字符串被正确编码\n                                        let encodedData = encodeURIComponent(jsonData);\n                                        // 构建完整的URL\n                                        let url = `https://api.so.360kan.com/episodesv2?s=${encodedData}`;\n                                        Data = JSON.parse(fetch(url)).data[0].seriesHTML.seriesPlaylinks;\n                                        let index = 1;\n                                        d = Data.map((it) => {\n                                            let itemTitle = title + '_' + index;\n                                            vipUrl = it.url.split('?')[0];\n                                            const result = {\n                                                title: itemTitle,\n                                                url: $().lazyRule((title, vipUrl) => {\n                                                    return $.require('hiker://page/dmFun?rule=dm盒子').downloadRoute(title, vipUrl,false);\n                                                },itemTitle, vipUrl)\n                                            }\n                                            index++; // 在每次迭代中递增索引\n                                            return result;\n                                        })\n                                        return d;\n                                    }, it,catId,enId,title),\n                                    col_type: 'scroll_button'\n                                })\n                            })\n                            return d;\n                        }\n                    }\n                }, rs.cat_id, rs.en_id, rs.seriesSite, rs.titleTxt, uniqueSites, rs.cat_id == '3' ? rs.playlinks_year : undefined),\n            });\n        }\n    });\n    return d;\n}\n\nfunction search360(seaword) {\n    return JSON.parse(fetch(buildUrl(\"https://api.so.360kan.com/index\", {\n        force_v: 1,\n        kw: seaword,\n        from: '',\n        pageno: 1,\n        v_ap: 1,\n        tab: 'all'\n    }))).data.longData.rows;\n}\n\n\nsearch(input)\n"},{"name":"🐬","path":"danmu#🐬","rule":"js:\nevalPrivateJS('')"},{"name":"Zlib","path":"zlib","rule":"var Zlib = (function () {\n    var GZIPInputStream = java.util.zip.GZIPInputStream;\n    var InflaterInputStream = java.util.zip.InflaterInputStream;\n    var ByteArrayInputStream = java.io.ByteArrayInputStream;\n    var ByteArrayOutputStream = java.io.ByteArrayOutputStream;\n    var StandardCharsets = java.nio.charset.StandardCharsets;\n\n    function detectFormat(bytes) {\n        if (bytes.length < 2) return 0;\n        var b0 = java.lang.reflect.Array.getByte(bytes, 0) & 0xFF;\n        var b1 = java.lang.reflect.Array.getByte(bytes, 1) & 0xFF;\n        if (b0 === 0x1F && b1 === 0x8B) return 1;\n        if (b0 === 0x78) return 2;\n        return 0;\n    }\n\n    function toJavaByteArray(input) {\n        try {\n            var bytes;\n            if (typeof input === 'string') {\n                if (!/^[0-9a-fA-F]+$/.test(input)) {\n                    throw new Error(\"HEX format error\");\n                }\n                if (input.length % 2 !== 0) {\n                    throw new Error(\"HEX length error\");\n                }\n                bytes = java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE, input.length / 2);\n                for (var i = 0; i < input.length; i += 2) {\n                    var val = parseInt(input.substr(i, 2), 16);\n                    if (isNaN(val)) throw new Error(\"Invalid HEX at \" + i);\n                    var byteVal = val > 127 ? val - 256 : val;\n                    java.lang.reflect.Array.setByte(bytes, i / 2, byteVal);\n                }\n            } else if (input instanceof Uint8Array) {\n                bytes = java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE, input.length);\n                for (var j = 0; j < input.length; j++) {\n                    var num = input[j];\n                    java.lang.reflect.Array.setByte(bytes, j, num > 127 ? num - 256 : num);\n                }\n            } else {\n                throw new Error(\"Unsupported type\");\n            }\n            return bytes;\n        } catch (e) {\n            log(\"[Zlib] Input Error: \" + e.message);\n            throw e;\n        }\n    }\n\n    // 为原始Deflate数据添加伪zlib头 (RFC 1950)\n    function addZlibHeader(bytes) {\n        var newBytes = java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE, bytes.length + 2);\n        java.lang.reflect.Array.setByte(newBytes, 0, 0x78); // CMF\n        java.lang.reflect.Array.setByte(newBytes, 1, 0x9C); // FLG\n        for (var i = 0; i < bytes.length; i++) {\n            java.lang.reflect.Array.setByte(newBytes, i + 2, java.lang.reflect.Array.getByte(bytes, i));\n        }\n        return newBytes;\n    }\n\n    function decompressCore(input) {\n        var bis = null, cis = null, bos = null;\n        try {\n            var bytes = toJavaByteArray(input);\n            var format = detectFormat(bytes);\n            var inflater;\n\n            bis = new ByteArrayInputStream(bytes);\n            // cis = format === 1 ?\n            //     new GZIPInputStream(bis) :\n            //     new InflaterInputStream(bis);\n\n            // 处理 Android 低版本 Inflater 兼容\n            if (format === 0) { // 无标准头\n                try {\n                    inflater = new java.util.zip.Inflater(true);\n                } catch (e) {\n                    bytes = addZlibHeader(bytes);\n                    bis = new ByteArrayInputStream(bytes);\n                    inflater = new java.util.zip.Inflater();\n                }\n                cis = new InflaterInputStream(bis, inflater);\n            } else {\n                cis = format === 1 ?\n                    new GZIPInputStream(bis) :\n                    new InflaterInputStream(bis);\n            }\n\n            bos = new ByteArrayOutputStream();\n            var buffer = java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE, 8192);\n            var len;\n\n            while ((len = cis.read(buffer)) !== -1) {\n                bos.write(buffer, 0, len);\n            }\n\n            return bos.toByteArray();\n        } catch (e) {\n            log(\"[Zlib] Decompress Error: \" + e.message);\n            return null;\n        } finally {\n            try { if (cis) cis.close(); } catch (ee) { }\n            try { if (bis) bis.close(); } catch (ee) { }\n            try { if (bos) bos.close(); } catch (ee) { }\n        }\n    }\n\n    return {\n        uncompress: function (input, options) {\n            try {\n                if (!input || (typeof input === 'string' && input.length < 4) ||\n                    (input instanceof Uint8Array && input.length < 2)) {\n                    log(\"[Zlib] Input too short\");\n                    return null;\n                }\n                var bytes = decompressCore(input);\n                if (!bytes) return null;\n\n                var encoding = (options && options.encoding) ?\n                    options.encoding :\n                    StandardCharsets.UTF_8.name();\n\n                return String(new java.lang.String(bytes, encoding));\n            } catch (e) {\n                log(\"[Zlib] Process Error: \" + e.message);\n                return null;\n            }\n        }\n    };\n})();\n\n$.exports = Zlib;\n"},{"name":"腾X","path":"danmu#腾X","rule":"js:\nfunction search(name) {\n    baseData = searchQQ(name);\n    let d = [];\n    let tempD = [];\n    // 普通结果\n    var baseList = baseData.normalList.itemList;\n    //  系列结果\n    var SerieList = baseData.areaBoxList;\n    try {\n        baseList.forEach(rs => {\n            if (rs.videoInfo != null) {\n                videoInfo = rs.videoInfo;\n                playSites = videoInfo.playSites[0];\n                tempD.push({\n                    title: videoInfo.title + \"⭐\" + videoInfo.typeName + '-' + videoInfo.year+'-来源:' + playSites.enName,\n                    url: playSites.episodeInfoList[0].url,\n                    影片名称:videoInfo.title\n                });\n            }\n        });\n    } catch (e) {\n        // 系列结果\n        log('系列结果');\n        SerieList.forEach(item => {\n            if (!item.boxShowName.match(/短视频/)) {\n                item.itemList.forEach(rs => {\n                    if (rs.videoInfo != null) {\n                        videoInfo = rs.videoInfo;\n                        playSites = videoInfo.playSites[0];\n                        tempD.push({\n                            title: videoInfo.title + \"⭐\" + videoInfo.typeName + '-' + videoInfo.year+'-来源:' + playSites.enName,\n                            url: playSites.episodeInfoList[0].url,\n                            影片名称:videoInfo.title\n                        });\n                    }\n                });\n            }\n        });\n\n    }\n    // 重组数据结构\n    d = tempD.map((it) => {\n        return {\n            title: it.title,\n            url: $().lazyRule((indexLink,影片名称) => {\n                if (indexLink.match(/cover/)) {\n                    // 手机搜索结果链接\n                    cid = indexLink.split('/')[5].split('.html')[0];\n                    if (indexLink.split('=')[1]) {\n                        vid = indexLink.split('=')[1];\n                        indexLink = 'https://v.qq.com/x/cover/' + cid + '/' + vid + '.html';\n                    } else {\n                        indexLink = 'https://v.qq.com/x/cover/' + cid + '.html';\n                    }\n                } else {\n                    // 手机首页跳转链接\n                    cid = indexLink.split('=')[1].split('&')[0];\n                    if (cid == '') {\n                        vid = indexLink.split('=')[2]\n                        // 这个cid貌似是错的，，算了就尝试一下，多半还是要404~\n                        data = fetch('https://union.video.qq.com/fcgi-bin/data?otype=json&tid=682&appid=20001238&appkey=6c03bbe9658448a4&union_platform=1&idlist=' + vid);\n                        cid = JSON.parse(data.match(/{[\\S\\s]+}/)[0]).results[0].fields.cover_list[0]\n                    }\n                    indexLink = 'https://v.qq.com/x/cover/' + cid + '.html';\n                }\n                let d = [];\n                try {\n                    // 郑娟、动漫（部分）\n                    pageContext = 'lid=&cid=' + cid + '&page_num=0&page_size=30&id_type=1&req_type=6&req_from=web_vsite&req_from_second_type=&detail_page_type=1';\n                    curtag = 0; tablen = 1;\n                    episodeInfoList = [];\n                    while (tablen - curtag > 0) {\n                        data = JSON.parse(fetch('https://pbaccess.video.qq.com/trpc.universal_backend_service.page_server_rpc.PageServer/GetPageData?video_appid=3000010&vplatform=2&vversion_name=8.2.96', {\n                            body: {\n                                \"page_params\": {\n                                    \"req_from\": \"web_vsite\",\n                                    \"page_id\": \"vsite_episode_list\",\n                                    \"page_type\": \"detail_operation\",\n                                    \"id_type\": \"1\",\n                                    \"page_size\": \"\",\n                                    \"cid\": cid,\n                                    \"vid\": \"\",\n                                    \"lid\": \"\",\n                                    \"page_num\": \"\",\n                                    \"page_context\": pageContext,\n                                    \"detail_page_type\": \"1\"\n                                },\n                                \"has_cache\": 1\n                            },\n                            headers: {\n                                'Referer': 'https://v.qq.com/'\n                            }\n                        })).data.module_list_datas[0].module_datas[0];\n                        // 打补丁，一刀切，存在特殊分季，如动漫诛仙\n                        分季列表 = data.item_data_lists.item_datas.filter((it) => it.item_type === \"28\");\n                        if (分季列表.length > 0) throw new Error('存在特殊的分季，尝试备用接口方案...');\n                        // 无集数分栏\n                        if (data.module_params.tabs == \"\") {\n                            tabs = [];\n                        } else {\n                            tabs = JSON.parse(data.module_params.tabs);\n                        }\n                        tablen = tabs.length;\n                        curtag++;\n                        if (curtag < tablen) pageContext = tabs[curtag].page_context;\n                        episodeInfoList = episodeInfoList.concat(data.item_data_lists.item_datas);\n                    }\n                    正片列表 = episodeInfoList.filter((it) => {\n                        // item_type不是1可能不是正片剧集\n                        if (it.item_type != \"1\") return false;\n                        if (it.item_params.is_trailer != \"1\") return true;\n                    }).map((it) => {\n                        // log(it);\n                        showTitle = (it.item_params.tag_right_text ? it.item_params.tag_right_text + '\\t' : '') + ((!it.item_params.union_title.match(/彩蛋/) ? it.item_params.union_title : it.item_params.play_title) + '_' + it.item_params.video_subtitle);\n                        return {\n                            title: showTitle,\n                            url: `https://v.qq.com/x/cover/${cid}/${it.item_params.vid}.html`,\n                            desc: ''\n                        }\n                    })\n                    d = 正片列表.map((it) => {\n                        let itemTitle = it.title;\n                        let vipUrl = it.url;\n                        return {\n                            title: itemTitle,\n                            url: $().lazyRule((title, vipUrl) => {\n                                return $.require('hiker://page/dmFun?rule=dm盒子').downloadRoute(title, vipUrl, false);\n                            }, itemTitle, vipUrl)\n                        }\n                    })\n                } catch (e) {\n                    log('首选接口出错：' + e);\n                    // 综艺、电影（无标题）\n                    pageContext = 'need_async=true';\n                    curtag = 0; tablen = 1;\n                    episodeInfoList = [];\n                    while (tablen - curtag > 0) {\n                        data = JSON.parse(fetch(buildUrl('https://pbaccess.video.qq.com/trpc.videosearch.search_cgi.http/load_playsource_list_info', {\n                            pageNum: '0',\n                            id: cid,\n                            dataType: '2',\n                            pageContext: encodeURIComponent(pageContext),\n                            scene: '2',\n                            platform: '2',\n                            appId: '10718',\n                            site: 'qq'\n                        }))).data.normalList.itemList[0].videoInfo.firstBlockSites[0];\n                        tabs = data.tabs;\n                        tablen = tabs.length;\n                        curtag++;\n                        if (curtag < tablen) pageContext = tabs[curtag].asnycParams;\n                        episodeInfoList = episodeInfoList.concat(data.episodeInfoList);\n                    }\n                    正片列表 = episodeInfoList.filter((it) => {\n                        lable = it.markLabel;\n                        if (lable.match(/限免/) || !lable.match(/预|花絮/)) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                        // !it.markLabel.match(/预|花絮/)\n                    }).map((it) => {\n                        // log(it);\n                        title = (it.checkUpTime.split(' ')[0] + '\\t') + (/^\\d+$/.test(it.title) ? 影片名称 + '_' + it.title : it.title);\n                        return {\n                            title: title,\n                            url: it.url,\n                            desc: ''\n                        }\n                    })\n                    d = 正片列表.map((it) => {\n                        let itemTitle = it.title;\n                        let vipUrl = it.url;\n                        return {\n                            title: itemTitle,\n                            url: $().lazyRule((title, vipUrl) => {\n                                return $.require('hiker://page/dmFun?rule=dm盒子').downloadRoute(title, vipUrl, false);\n                            }, itemTitle, vipUrl)\n                        }\n                    })\n                }\n                return d;\n            }, it.url,it.影片名称)\n        }\n    })\n    return d;\n}\n\nfunction searchQQ(seaword) {\n    var res = JSON.parse(fetch(\"https://pbaccess.video.qq.com/trpc.videosearch.mobile_search.MultiTerminalSearch/MbSearch?vplatform=2\", {\n        body: { \"version\": \"24072901\", \"clientType\": 1, \"filterValue\": \"undefined\", \"uuid\": \"9C771991-2BD9-4200-AE44-898D626738EE\", \"retry\": 0, \"query\": seaword, \"pagenum\": 0, \"pagesize\": 30, \"queryFrom\": 110, \"searchDatakey\": \"\", \"transInfo\": \"\", \"isneedQc\": true, \"preQid\": \"\", \"adClientInfo\": \"\", \"extraInfo\": { \"isNewMarkLabel\": \"1\", \"multi_terminal_pc\": \"1\" } },\n        headers: {\n            \"User-Agent\": PC_UA,\n            \"Referer\": \"https://v.qq.com\",\n            \"origin\": \"https://v.qq.com\",\n            \"content-type\": \"application/json\",\n            \"accept\": \"application/json\",\n            \"sec-ch-ua-platform\": \"Windows\"\n        },\n        method: \"POST\"\n    }));\n    return res.data;\n}\n\n\nsearch(input)\n"},{"name":"芒G","path":"danmu#芒G","rule":"js:\nfunction search(name) {\n    listData = searchMG(name);\n    let d = [];\n    listData.forEach(movie => {\n        if (movie.name == '媒资头部') {\n            from = '芒果TV';\n            if (!movie.data[0].url.match(/qq|youku|qiyi|bili/)) {\n                itemTitle = movie.data[0].title.replace(/(<B>|<\\/B>)/g, '');\n                vipUrl = (from == '芒果TV' ? \"https://www.mgtv.com\" + movie.data[0].url : movie.data[0].url.replace('m', 'www'));\n                d.push({\n                    title: itemTitle,\n                    url: $().lazyRule((indexLink) => {\n                        let d = [];\n                        html = request(indexLink);\n                        try {\n                            vid = indexLink.split('/')[5].split('.')[0];\n                        } catch (e) {\n                            link = html.match(/window.location = \"[\\S\\s]+(?=\" \\+ window.location.search)/)[0].replace('window.location = \"', '');\n                            vid = link.split('/')[5].split('.')[0];\n                            html = request(link);\n                        }\n\n                        // 获取首页信息（30一页，可能多于30，因为番外，size不建议修改会出错）\n                        剧集信息 = JSON.parse(fetch(`https://pcweb.api.mgtv.com/episode/list?_support=10000000&version=5.5.35&video_id=${vid}&page=1&size=30&allowedRC=1&_support=10000000`, {\n                            headers: {\n                                'User-Agent': PC_UA\n                            },\n                            referrer: indexLink,\n                            method: 'GET'\n                        })).data;\n                        总页数 = 剧集信息.total_page;\n                        剧集列表 = 剧集信息.list;\n                        for (let page = 2; page <= 总页数; page++) {\n                            剧集列表 = 剧集列表.concat(JSON.parse(fetch(`https://pcweb.api.mgtv.com/episode/list?_support=10000000&version=5.5.35&video_id=${vid}&page=${page}&size=30&allowedRC=1&_support=10000000`, {\n                                headers: {\n                                    'User-Agent': PC_UA\n                                },\n                                referrer: indexLink,\n                                method: 'GET'\n                            })).data.list);\n                        }\n                        正片列表 = 剧集列表.filter((it) => {\n                            // corner可能为空数组\n                            try {\n                                状态或集数标识 = it.corner[0].font;\n                            } catch (e) {\n                                状态或集数标识 = '';\n                            }\n                            if (!状态或集数标识.match(/预|花絮/)) return true;\n                        }).map((it) => {\n                            log(it);\n                            showTitle=it.ts.split(' ')[0]+'\\t'+it.t1 + '_' + it.t2;\n                            return {\n                                title: showTitle,\n                                url: 'https://www.mgtv.com' + it.url,\n                                desc: '时长：' + it.time + '\\t发布：' + it.ts\n                            }\n                        })\n                        d = 正片列表.map(it => {\n                            let itemTitle = it.title;\n                            let vipUrl = it.url;\n                            return {\n                                title: itemTitle,\n                                url: $().lazyRule((title, vipUrl) => {\n                                    return $.require('hiker://page/dmFun?rule=dm盒子').downloadRoute(title, vipUrl,false);\n                                }, itemTitle, vipUrl)\n                            }\n                        })\n\n                        return d;\n\n                    }, vipUrl)\n                });\n            }\n        }\n    });\n    return d;\n}\n\nfunction searchMG(seaword) {\n    list = JSON.parse(fetch(\"https://mobileso.bz.mgtv.com/msite/search/v2?q=\" + seaword + \"&pc=30&pn=1&sort=0&ty=0&du=0&pt=0&corr=1&abroad=0&_support=10000000000000000&callback=jsonp_ltdyqd2pcfsnbnr\", {\n        headers: {\n            'User-Agent': PC_UA\n        },\n        method: 'GET'\n    }).match(/{[\\S\\s]+}/)).data.contents;\n    return list;\n}\n\n\nsearch(input)\n"},{"name":"奇Y","path":"danmu#奇Y","rule":"js:\nfunction search(name) {\n    listData = searchQY(name);\n    let d = [];\n    let tempD = [];\n    listData.forEach(rs => {\n        if (rs.videoDocType == 1 && rs.siteName.match(/奇/)) {\n            tempD.push({\n                title: rs.g_title + \"⭐来源：\" + rs.siteName,\n                url: rs.g_main_link\n            });\n        }\n    });\n    if (html.data.formatData.intentList) {\n        addList = html.data.formatData.intentList;\n        // 应该根据rs.g_meta过滤下\n        addList.forEach(rs => {\n            tempD.push({\n                title: rs.g_title + \"⭐\" + rs.g_meta,\n                url: rs.g_main_link\n            });\n        });\n    }\n    d = tempD.map(it => {\n        itemTitle = it.title;\n        vipUrl = it.url;\n        return {\n            title: itemTitle,\n            url: $().lazyRule((indexLink) => {\n                let d = [];\n                var 正片列表=[];\n                indexLink = indexLink.replace('www', 'm');\n                html = request(indexLink);\n                viedeoInfo = JSON.parse(html.match(/\"albumInfo\"[\\S\\s]+(?=,\"albumListInfo\")/)[0].replace('\"albumInfo\":', ''));\n                infoAdd = JSON.parse(html.match(/\"videoInfo\":{[\\S\\s]+}(?=,\"videoType\")/)[0].replace('\"videoInfo\":', ''));\n                影片名称 = viedeoInfo.albumName ? viedeoInfo.albumName : infoAdd.videoName;\n                类型 = infoAdd.channelName;\n                剧集ID = infoAdd.albumQipuId;\n                if (类型 == '电影' || infoAdd.videoName.match(/预告/)) {\n                    正片列表.push({\n                        title: 影片名称,\n                        url: indexLink.replace('m', 'www'),\n                    });\n                } else {\n                    // 有一部分奇葩的纪录片也是有年份的，普通接口还没有数据只好这样判断了，注意是'\"\"'~\n                    if (html.match(/\"summary\":[\\S\\s]+(?=,\"count\")/)[0].replace('\"summary\":', '') != '\"\"') {\n                        时间线选集 = JSON.parse(html.match(/\"summary\":[\\S\\s]+(?=,\"count\")/)[0].replace('\"summary\":', ''));\n                        剧集列表 = [];\n                        // 偷懒！按啥年份和月份选集，简直浪费时间~\n                        时间线选集.forEach(list => {\n                            年份 = list.year;\n                            剧集信息 = JSON.parse(request(\"https://pcw-api.iqiyi.com/album/source/svlistinfo?cid=6&sourceid=\" + 剧集ID + \"&timelist=\" + 年份 + \"&callback=window.Q.__callbacks__.cbp5bps9\").match(/{\"code\"[\\S\\s]+}(?=\\);}catch\\(e\\){})/)[0]);\n                            剧集列表 = 剧集列表.concat(剧集信息.data[年份]);\n                        });\n                        正片列表 = 剧集列表;\n                    } else {\n                        page = 1; size = 200;\n                        totalPage = 2;\n                        while (totalPage - page >= 0) {\n                            剧集信息 = JSON.parse(fetch(\"https://pcw-api.iqiyi.com/albums/album/avlistinfo?aid=\" + 剧集ID + \"&size=\" + size + \"&page=\" + page + \"&callback=window.Q.__callbacks__.cbu0ch7s\").match(/{\"code\"[\\S\\s]+}(?=\\);}catch\\(e\\){})/)[0]).data;\n                            正片列表 = 正片列表.concat(剧集信息.epsodelist);\n                            page++;\n                            totalPage = 剧集信息.page;\n                        }\n                    }\n                    正片列表 = 正片列表.map((it) => {\n                        // log(it)\n                        return {\n                            // title: it.shortTitle,老剧集会啥也不显示，没数据\n                            title: it.period+'\\t'+it.name + \"_\" + it.subtitle,\n                            url: it.playUrl\n                        }\n                    })\n                }\n                d = 正片列表.map(it => {\n                    itemTitle = it.title;\n                    vipUrl = it.url;\n                    return {\n                        title: itemTitle,\n                        url: $().lazyRule((title, vipUrl) => {\n                            return $.require('hiker://page/dmFun?rule=dm盒子').downloadRoute(title, vipUrl,false);\n                        }, itemTitle, vipUrl)\n                    }\n                })\n                return d;\n            }, vipUrl)\n        }\n    })\n    return d;\n}\n\nfunction searchQY(seaword) {\n    html = JSON.parse(fetch(\"https://pcw-api.iqiyi.com/strategy/pcw/data/soBaseCardLeftSide?pageNum=1&key=\" + seaword));\n    list = html.data.formatData.list;\n    return list;\n}\n\n\nsearch(input)\n"},{"name":"哔B","path":"danmu#哔B","rule":"js:\nfunction search(name) {\n    listData = searchBili(name);\n    let d = [];\n    let tempD=[];\n    if (listData.番剧) {\n        listData.番剧.forEach(item => {\n            tempD.push({\n                title: item.title.replace(/<em class=\"keyword\">/g, '').replace(/<\\/em>/g, '')+'[⭐番剧]',\n                url: item.season_id\n            });\n        });\n    }\n    if (listData.影视) {\n        listData.影视.forEach(item => {\n            tempD.push({\n                title: item.title.replace(/<em class=\"keyword\">/g, '').replace(/<\\/em>/g, '')+'[⭐影视]',\n                url: item.season_id\n            });\n        });\n    }\n    d=tempD.map(it=>{\n        itemTitle=it.title;\n        season_id=it.url;\n        return {\n            title:itemTitle,\n            url:  $().lazyRule((season_id) => {\n                let d = [];\n                if (season_id) {\n                    season_id = season_id + \"\";\n                    Data = JSON.parse(fetch('https://api.bilibili.com/pgc/view/web/season?season_id=' + season_id)).result;\n                } else {\n                    Data = JSON.parse(fetch('https://api.bilibili.com/pgc/view/web/season?ep_id=' + MY_PARAMS.ep_id)).result;\n                }\n                剧集列表 = Data.episodes;\n                正片列表 = 剧集列表.filter((it) => {\n                    if (!it.badge.match(/预|花絮/)) return true;\n                }).map((it) => {\n                    return {\n                        title: it.share_copy,\n                        url: it.link,\n                        desc: (it.title.match(/[0-9]/ && !it.title.match(/集|话/)) ? ('第' + it.title + '话') : it.title) + it.long_title\n                    }\n                })\n                d = 正片列表.map(it => {\n                    let itemTitle = it.title;\n                    let vipUrl = it.url;\n                    return {\n                        title: itemTitle,\n                        url: $().lazyRule((title, vipUrl) => {\n                            return $.require('hiker://page/dmFun?rule=dm盒子').downloadRoute(title, vipUrl,false);\n                        }, itemTitle, vipUrl)\n                    }\n                })\n                return d;\n            }, season_id)\n        }\n    })\n    return d;\n}\n\nfunction searchBili(seaword) {\n    getSearchRes = (search_type, seaword, page, pageSize) => {\n        getWbiEnc = (queryJson) => {\n            const mixinKeyEncTab = [\n                46, 47, 18, 2, 53, 8, 23, 32, 15, 50, 10, 31, 58, 3, 45, 35, 27, 43, 5, 49,\n                33, 9, 42, 19, 29, 28, 14, 39, 12, 38, 41, 13, 37, 48, 7, 16, 24, 55, 40,\n                61, 26, 17, 0, 1, 60, 51, 30, 4, 22, 25, 54, 21, 56, 59, 6, 63, 57, 62, 11,\n                36, 20, 34, 44, 52\n            ];\n\n            // 对 imgKey 和 subKey 进行字符顺序打乱编码\n            function getMixinKey(orig) {\n                let temp = '';\n                mixinKeyEncTab.forEach((n) => {\n                    temp += orig[n]\n                });\n                return temp.slice(0, 32);\n            }\n\n            // 为请求参数进行 wbi 签名\n            function encWbi(params, img_key, sub_key) {\n                const mixin_key = getMixinKey(img_key + sub_key),\n                    curr_time = Math.round(Date.now() / 1000),\n                    chr_filter = /[!'\\(\\)*]/g\n                let query = [];\n                params = Object.assign(params, { wts: curr_time });    // 添加 wts 字段\n                // 按照 key 重排参数\n                Object.keys(params).sort().forEach((key) => {\n                    query.push(\n                        encodeURIComponent(key) +\n                        '=' +\n                        // 过滤 value 中的 \"!'()*\" 字符\n                        encodeURIComponent(('' + params[key]).replace(chr_filter, ''))\n                    )\n                })\n                query = query.join('&');\n                const wbi_sign = md5(query + mixin_key); // 计算 w_rid\n                return query + '&w_rid=' + wbi_sign;\n            }\n\n            // 获取最新的 img_key 和 sub_key\n            function getWbiKeys() {\n                const json_content = JSON.parse(fetch('https://api.bilibili.com/x/web-interface/nav', {\n                    headers: {\n                        \"User-Agent\": PC_UA,\n                        \"Referer\": \"https://www.bilibili.com/\"\n                    },\n                    method: 'GET'\n                })).data;\n                img_url = json_content.wbi_img.img_url;\n                sub_url = json_content.wbi_img.sub_url;\n                return {\n                    img_key: img_url.substring(img_url.lastIndexOf('/') + 1, img_url.length).split('.')[0],\n                    sub_key: sub_url.substring(sub_url.lastIndexOf('/') + 1, sub_url.length).split('.')[0]\n                }\n            }\n\n            const wbi_keys = getWbiKeys();\n\n            const query = encWbi(\n                queryJson,\n                wbi_keys.img_key,\n                wbi_keys.sub_key\n            );\n            return query;\n        }\n        queryJson = {\n            __refresh__: true,\n            _extra: '',\n            context: '',\n            page: page,\n            page_size: pageSize,\n            order: '',\n            duration: '',\n            from_source: '',\n            from_spmid: 333.337,\n            platform: 'pc',\n            highlight: 1,\n            single_column: 0,\n            keyword: seaword,\n            search_type: search_type,\n            preload: true,\n            com2co: true\n        }\n        parms = getWbiEnc(queryJson);\n        dataLink = 'https://api.bilibili.com/x/web-interface/wbi/search/type?' + parms;\n        try {\n            var cookie = JSON.parse(request(\"hiker://files/rules/cy/bili.txt\")).userList[0].cookie;\n        } catch (error) {\n            var cookie = 'buvid3=4C9DDF2B-D0D3-0F14-0D73-571BAEA2BDFE70910infoc; b_nut=1729179070; _uuid=6AF10ABBC-742D-399B-52C9-417D46D358F471757infoc; buvid_fp=50ac8e58ab5d8360e510ce6f13173c9f; enable_web_push=DISABLE; buvid4=EF4C5C71-42F3-E22A-F592-B5915721952072075-024101715-dgwdBqSTxphrdyiBaOMHcP5tHGFAdgVy8TpjvEY9Am%2FblvsaaDEOrJs%2FYa0qFsVr; home_feed_column=4; browser_resolution=987-847; CURRENT_FNVAL=4048; bili_ticket=eyJhbGciOiJIUzI1NiIsImtpZCI6InMwMyIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3Mjk0Mzg4MTMsImlhdCI6MTcyOTE3OTU1MywicGx0IjotMX0.ivmIOTUWD6Li1b96P4nkNIVV1b6gLH_KKOl1SJYSr90; bili_ticket_expires=1729438753; sid=gwi3fupj; header_theme_version=CLOSE; b_lsid=F21537DD_1929B35656E';\n        }\n        res = JSON.parse(fetch(dataLink, {\n            headers: {\n                \"User-Agent\": PC_UA,\n                \"Referer\": \"https://www.bilibili.com/\",\n                \"Cookie\": cookie\n            },\n            method: \"GET\"\n        }))\n        return res.data;\n    }\n    // 可以获取到总页数，但就先这样吧，懒得写翻页，尽量搜精准点\n    fyPage = 1;\n    // 番剧\n    list1 = getSearchRes('media_bangumi', seaword, fyPage, 12).result;\n    // 影视\n    list2 = getSearchRes('media_ft', seaword, fyPage, 12).result;\n    // result = list1.concat(list2).filter(Boolean);\n    return {\n        '番剧':list1,\n        '影视':list2\n    }; // 返回合并后排除null的数组\n}\n\n\nsearch(input)\n"},{"name":"优K","path":"danmu#优K","rule":"js:\nfunction search(name) {\n    list = searchYK(name);\n    let d = [];\n    for (var j in list) {\n        // 循环判断来源，没有来源，设置为youku\n        from = pdfh(list[j], '.show-sourcename&&Text')\n        if (from == '') {\n            d.push({\n                title: pdfh(list[j], '.show-name&&Text') + \"⭐来源：youku\",\n                url: $().lazyRule((indexLink) => {\n                    let d = [];\n                    html = request(indexLink);\n                    try {\n                        // 重新定位了\n                        影片信息 = JSON.parse(html.match(/\"播放页简介组件\",\"dataNode\":\\[{[\\S\\s]+showImg[\\S\\s]+desc[\\S\\s]{0,1000}(?=,\"id\")/)[0].replace('\"播放页简介组件\",\"dataNode\":[{\"data\":', ''));\n                    } catch (e) {\n                        try {\n                            影片信息 = JSON.parse(html.match(/\"data\":[\\S\\s]{0,50}scorePrefix[\\S\\s]{0,30}area[\\S\\s]{0,100}img[\\S\\s]{0,300}subTitles[\\S\\s]+introTitle[\\S\\s]{0,200}desc[\\S\\s]{0,800}(?=,\"id\")/)[0].replace('\"data\":', ''));\n                        } catch (e) {\n                            try {\n                                影片信息 = JSON.parse(html.match(/播放页简介组件\",\"dataNode\":\\[{\"data\":[\\S\\s]+(?=,\"id\":[0-9]{0,20},\"type\":[0-9]{0,20}},{\"data\":{\"title\":[\\S\\s]{0,200},\"isAliStar)/)[0].replace('播放页简介组件\",\"dataNode\":[{\"data\":', ''));\n                            } catch (e) {\n                                影片信息 = '';\n                            }\n                        }\n                    }\n                    影片名称 = pdfh(html, '.module-name&&Text');\n                    if (影片信息) {\n                        剧集ID = 影片信息.showId;\n                        // 有些剧集或者说电影的更新状态或者是评分数据或者说动漫的类型是空甚至根本没有所以单独获取并做异常处理\n                        try {\n                            类型 = 影片信息.mark.data.text;\n                        } catch (e) {\n                            类型 = '';\n                        }\n                        简述 = 影片信息.subTitles[0].subtitle;\n                        状态 = 影片信息.subTitles[1].subtitle;\n                        if (状态 == undefined) {\n                            状态 = '完结'\n                        }\n                        标签 = 影片信息.showGenre;\n                        if (标签 == undefined) {\n                            标签 = '';\n                        }\n                    } else {\n                        // 针对筐出未来电影赏析而写的，事实上教育栏目最后多数也是走这里\n                        try {\n                            影片地图 = JSON.parse(html.match(/\"videoMap\":[\\S\\s]+(?=,\"pushInfo\")/)[0].replace('\"videoMap\":', ''));\n                            剧集ID = 影片地图.showId;\n                            简介 = 影片地图.showName;\n                            类型 = 影片地图.videoCategory;\n                            状态 = '共' + 影片地图.episodeLast + '集\\n' + 影片地图.showReleaseTime;\n                            简述 = '';\n                            标签 = '';\n                        } catch (e) {\n                            简介 = '没有简介，大概是一些短视频，科技、生活、娱乐分栏~';\n                            封面 = 'https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg.zcool.cn%2Fcommunity%2F010097613ad72c11013eaf7098e28a.jpg%402o.jpg&refer=http%3A%2F%2Fimg.zcool.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1661226719&t=75dab3a3ff2d817e6f388f89505ea2e4@Referer=';\n                            类型 = '';\n                            状态 = '';\n                            简述 = '';\n                            标签 = '';\n                        }\n                    }\n                    正片列表=[];\n                    // 匹配电影\n                    if (html.match(/\"播放页电影选集\",\"dataNode\":\\[{[\\S\\s]+(?=,\"title\":\"(系列电影|播放列表)\")/)) {\n                        上映日期 = JSON.parse('{' + html.match(/\"videoPublishTime\"[\\S\\s]+(?=,\"videoTitle\")/)[0] + '}').videoPublishTime;\n                        try {\n                            电影信息 = JSON.parse(html.match(/\"播放页电影选集\",\"dataNode\":\\[{[\\S\\s]+(?=,\"title\":\"(系列电影|播放列表)\")/)[0].replace('\"播放页电影选集\",\"dataNode\":', ''));\n                            电影信息.forEach(list => {\n                                if (list.data.summary) {\n                                    正片列表.push({\n                                        title: list.data.title,\n                                        url: 'https://v.youku.com/v_show/id_' + list.data.action.value + '.html',\n                                        desc: list.data.videoType + '\\t' + list.data.summary,\n                                    });\n                                } else {\n                                    正片列表.push({\n                                        title: list.data.title,\n                                        url: 'https://v.youku.com/v_show/id_' + list.data.action.value + '.html',\n                                        desc: list.data.videoType,\n                                    });\n                                }\n                            });\n                        } catch (e) {\n                            try {\n                                // 分成多种语言版本的电影\n                                电影信息 = JSON.parse(html.match(/\"播放页电影选集\",\"dataNode\":\\[{[\\S\\s]+(?=,\"title\":\"播放列表\")/)[0].replace('\"播放页电影选集\",\"dataNode\":', ''));\n                                for (let i = 0; i < 电影信息.length; i++) {\n                                    if (电影信息[i].data.summary) {\n                                        正片列表.push({\n                                            title: 电影信息[i].data.title,\n                                            url: 'https://v.youku.com/v_show/id_' + 电影信息[i].data.audioLang[i].videoId + '.html',\n                                            desc: 电影信息[i].data.videoType + '\\t' + 电影信息[i].data.summary\n                                        });\n                                    } else {\n                                        正片列表.push({\n                                            title: 电影信息[i].data.title,\n                                            url: 'https://v.youku.com/v_show/id_' + 电影信息[i].data.audioLang[i].videoId + '.html',\n                                            desc: 电影信息[i].data.videoType,\n                                        });\n                                    }\n                                }\n                            } catch (e) {\n                                正片列表 = [];\n                            }\n                        }\n                        更新进度 = '电影';\n                    } else {\n                        try {\n                            // 一般剧集（含电影、综艺）——但电影不走这条线，因为没有系列电影的数据~\n                            剧集信息 = JSON.parse(request(\"https://search.youku.com/api/search?appScene=show_episode&showIds=\" + 剧集ID + \"&appCaller=h5\"));\n                            剧集列表 = 剧集信息.serisesList;\n                            // 先尝试获取剧集数据，如果获取失败，异常会在上方出现，因为没有serisesList，那就走栏目路线\n                            剧集长度 = 剧集列表.length;\n                            正片列表 = 剧集列表.filter((it) => {\n                                if (it.iconCorner&&it.iconCorner.tagText) {\n                                    状态 = it.iconCorner.tagText;\n                                } else {\n                                    状态 = '';\n                                }\n                                if (!状态.match(/预|花絮/)) return true;\n                            }).map((it) => {\n                                flag = /\\d/.test(it.title.split(' ')[1]);\n                                if (flag) {\n                                    title = it.title;\n                                    // desc = 状态 + '\\t' + it.stripeBottom + '\\n' + it.displayName;\n                                    desc = '';\n                                } else {\n                                    // title=it.title+'_'+it.displayName;\n                                    // desc=状态 + '\\t' + it.stripeBottom + '\\n' + it.displayName;\n                                    // title = (it.stripeBottom ? it.stripeBottom : it.title) + '_' + it.displayName;\n                                    title = 影片名称+'_'+it.displayName+ '_' +(it.stripeBottom ? it.stripeBottom : it.title);\n                                    desc = '';\n                                }\n                                return {\n                                    title: title,\n                                    url: 'https://v.youku.com/v_show/id_' + it.videoId + '.html',\n                                    desc: desc\n                                }\n                            })\n                        } catch (e) {\n                            log('what?message:'+e);\n                            // 滑动图片选集型（音乐、娱乐、生活等栏目）——烦了，直接正则全局匹配成数组好了。。。\n                            选集信息 = html.match(/\"播放页ugc选集\",\"dataNode\":\\[{[\\S\\s]+}(?=\\],\"title\")/)[0].replace('\"播放页ugc选集\",\"dataNode\":[', '');\n                            选集信息 = 选集信息.match(/{\"data\":{[\\S\\s]{0,2000},\"id\":[0-9]{0,20},\"type\":[0-9]{0,20}}/g)\n                            setPageTitle('栏目列表')\n                            选集信息.forEach(list => {\n                                list = JSON.parse(list);\n                                正片列表.push({\n                                    title: list.data.title,\n                                    url: 'https://v.youku.com/v_show/id_' + list.data.action.value + '.html',\n                                    desc: list.data.publishTime\n                                });\n                            });\n                        }\n                    }\n                    d = 正片列表.map(it => {\n                        let itemTitle = it.title;\n                        let vipUrl = it.url;\n                        return {\n                            title: itemTitle,\n                            url: $().lazyRule((title, vipUrl) => {\n                                return $.require('hiker://page/dmFun?rule=dm盒子').downloadRoute(title, vipUrl,false);\n                            }, itemTitle, vipUrl)\n                        }\n                    })\n                    return d;\n                }, pdfh(list[j], '.h5-show-card&&href'))\n            });\n        }\n    }\n    return d;\n}\n\nfunction searchYK(seaword) {\n    cookie = JSON.parse(fetchCookie('https://m.youku.com/', {\n        headers: {\n            \"User-Agent\": PC_UA,\n            \"Referer\": \"https://www.youku.com/\",\n        },\n        method: \"GET\"\n    }))[0];\n    // 获取到的html还偶尔可能出现不全的情况？比如搜嗨放派，第三季会不出现的问题\n    html = fetch(\"https://search.youku.com/search_video?keyword=\" + seaword, {\n        headers: {\n            \"User-Agent\": PC_UA,\n            \"Referer\": \"https://www.youku.com/\",\n            \"Cookie\": cookie\n        },\n        method: \"GET\"\n    })\n    var list = pdfa(html, 'body&&.h5-show-card-wrapper');\n    return list;\n}\n\n\nsearch(input)\n"},{"name":"弹弹Play2.0","path":"danmu#ttplay","rule":"js:\nevalPrivateJS('M0yZK0K8DGRWBJXNIbMHUu98J69Ke4AEtA0RUbIMudPdRb8kVZSSIoS+5N2E6A8Ksl3lomx/Dt7DQn1YCoSAjK8l9P8KvepUPzFOQi/I/8AngAjwagh+8I/Pv0IknBvNIHmJH3r+Jkw2bDQjx4dA6UraD9a36u5geX/TLLoDdi4VwrG2VC7PG0cK50NVZXck+5JlwJu7mxTRU4WXAnBP16/6pVBcpFXUfDkDfVddrUx/AJNo6mZsh7D8+oHsB8dPQEN99qOtuMTo2m4zVwNiaJmfKp/TRH1xUy5hLWOb7zd2E3Be6y/AKbvnolYhdV4sIQ+YjhRkIc2cxbR/emyJcIyVjkdNoSRjaXvyzKGoL3BuG53GIqfs2K+MNDKS+B5zbH2QPUuj/MAGaZVbxZ1eWgIzcutRUazL2eBZUmacpU2UOyf7cU1YOocmGHROl+MisiuaKgnppFuymC/S919lpntoA/HtE8Cu0PLmQFSLaZNpyCq/jet8OheV20MObTYxIX74XaQvhposv76fcGeg+HLrpSU3UAWf/7DILbEqinpPE3IsIJv780Phy0dWQy2cy2NBEhR2jZ4S4H4Uvjrg98I+1oqM9FQDE9LfZdlNExmx5dfJpXzMCM3cUd2stK3iINWczu/ufNG9Df74WzzV4V6JYw2K5zA5UTcdS3lU61Iuui8MxhUJx3EbHQvUUMc/nSCwIrDFxOdS4j0dTMECg33Et7JZGOPBO0cWZeKhjwzGztIP92zRA9RyTJ1TKAY/QtrFIANru4ge2dQkr++9l/siikz0yMK56vpGU2l/D7lvnkUqziHDSzwTfnAgDyPlMk/MfK92nYWNUoXm8n0d4dE7YYHqFzltJ8KRZA0APIxjTLKRbVgq+p9YPZ1oGadkptKL/oUBiOyQeqnu7Ya3ucsry0jWVnP7CJ/71kgB1PaSboOLExg5XK3EX+n2gs22aZOnsbRtnXKYojlS51TJWMsry0jWVnP7CJ/71kgB1PZUDBqH7hwc+JwUXRZFv7x/bJiVE1Y59tYB6nCezidBvKq8Brwy2LyDK9iH4sJzmIuAHKsJyFOBuajcNHo0v16f1FZUO8+4hrQcu8CUxf4YExRzhqQltxdbhWxfk8QKvIjLK8tI1lZz+wif+9ZIAdT2jgKbfeUiczER7omTrXydL6b+04uc8NXD4vsWsSaPuBDLK8tI1lZz+wif+9ZIAdT2ehesJ4wa3seqqbM1SEJEG0f5Y5cN2dxcE8AMvThkJoSmn82a9cS1Neq4CNHcS3ERp55Q6ulIKydhrk5TATzM2ssry0jWVnP7CJ/71kgB1Pa8+//W8E4pICUifMlGoU6gaADopqFSv05t3D5eg0rY2SKYt1xBCdgB6muMNkWqwoTLK8tI1lZz+wif+9ZIAdT2mOMB9X/v+l7Uw4rUkG6pkWmh2XAtnFNxp/4j/sFGeOLnT829awHItV2KeuciZB4ysaI5PXkyRV6gTinKg/b2Gy+Ol+MG276dtltSXcIx85m9FxjXrxKMX6qjzDCVCH3MoD2YZnByR9ZaCrcYB5IhNssry0jWVnP7CJ/71kgB1PahVCAHpTQAOLqu8sGCALhy4CmpXbMqBDjeNLe0i+WqDyrNWRcP9VL3Td8HaUO6fSnLK8tI1lZz+wif+9ZIAdT2DKceiBxenDZmxj+y2LuESut0tSUVNnO6FpJsWBHhTdDLK8tI1lZz+wif+9ZIAdT294p46Us/g+iuWHA2sdHuEMsry0jWVnP7CJ/71kgB1PY/v7NRTVBbT/TK9Io4sP/CyyvLSNZWc/sIn/vWSAHU9oXDUr3B69hWKrdXkiQ5gIiVqCGhaMSAxnoc82+IHuREyyvLSNZWc/sIn/vWSAHU9sM5E64qOIwER+mcE16UZR+z3byYOBSvHJfkAHDYGd7vxYwJ+h4XT0CFF3JED4/2dqLmR3RC5TqX9zyF/IGyfsB5BrZFrjFzuOfJUxucd2u5XIVR+LP79C62HcvS/nirZWhuMUPstQPXGA2X/XFRgEbLK8tI1lZz+wif+9ZIAdT2BJgvkrfk8thW4XQILR7QhzqatFyOGzWDUW161GhozSpZyFXYST9BY+xmCAVMWGt8Ks1ZFw/1UvdN3wdpQ7p9Kcsry0jWVnP7CJ/71kgB1PaQZN5WAVPQtGSzW1DtUg3vid4nnuFJPi4g2rbz+rRyFIZ2hZz9paAA965yRCRT6FTLK8tI1lZz+wif+9ZIAdT2MiA0ju4tV+iE5spoEXpvsyBtG9+OMxP/w/QHoAFsQgXLK8tI1lZz+wif+9ZIAdT2beb0HYqaajE5WdiPd18opYKKDu84sKEmR2S5nKdkXKy/eoYpRtg3glTFRUk7DP2iyyvLSNZWc/sIn/vWSAHU9jrEdDePvOAoGH5J5NJFt4JqaoLlfWyXB7h1mZ2972BRyyvLSNZWc/sIn/vWSAHU9uiLI09SqtuelJ77lDLP/Px3Ic64Kgul40dWkhCn0295yyvLSNZWc/sIn/vWSAHU9hEaONnIVwlD9Dpolu/QukR/CkhrT3q5Xx+WhH5n3copyyvLSNZWc/sIn/vWSAHU9muW6gqw4k0zBcdDsdy+30vOlDL7DvzzsOQnK+/bCc4nQXhwVC2p4Oq8vv3UVeTdxMsry0jWVnP7CJ/71kgB1PYZJVaqh6zl+tOKrpAto64LyyvLSNZWc/sIn/vWSAHU9jL0gArdkEhk3WxNCfX1E+ueM8nju9cr5ofz3A/vgX6iy9hV+yFCZBMChjZtlUZtEqeeUOrpSCsnYa5OUwE8zNrLK8tI1lZz+wif+9ZIAdT2bOhB1UexRzcoD/hjahfOu7eUQBExUoDmPK/NxX92293hDdf23B8stEDssB/8SUTfz+OtN3/6eayZauSOK26rzE8DgpEC2hcU3vArm7pFqpH7zlingQHBe9g7kvz9/LyeyyvLSNZWc/sIn/vWSAHU9nxvCLiXkqmI3Gyz19pgdZMpXfBO9nVkNKWhnMpD4LlQdNQ/kmzmf3QYKZtKW1zv6gAKROfQHQTxYJe0sHmziHXLK8tI1lZz+wif+9ZIAdT2GnwkFuJzSy27F9FVYWJQpyeACPBqCH7wj8+/QiScG80geYkfev4mTDZsNCPHh0DpG2iNYvdFzqxe1rLeZC8a0Cb7UIdc97nV8BVSCgGuh2fa1X31G0Ei7V4Zn7Xc7TvW0gzM+ojmentqpJZit+B8TqNvR3jCPAx+cRQglauoHyrLK8tI1lZz+wif+9ZIAdT2mDwunc/tkEVPDzd9JsN6lcDZ/VoNdQx7GoFH9HrwoDecUOvDmjsIZOT0l3yw9U2VzpQy+w7887DkJyvv2wnOJ8sry0jWVnP7CJ/71kgB1PYWuIZnfj2o+BU8rb9+kh9WyyvLSNZWc/sIn/vWSAHU9ssry0jWVnP7CJ/71kgB1PZN7kXLUkqyXROITwx6hH4HKfVYKHTYQUVtDSLZ8tvER3n+v+YlKQpUpIEQXPCP72XLK8tI1lZz+wif+9ZIAdT2jPXBiXKMLwSsECcBftPPP2+uK82oCg0mrNz72H5/siTHfBAFRrx3QGEu8KDFgu2+dvpL2PXnPnx7nA7qBKwnG8sry0jWVnP7CJ/71kgB1PbLK8tI1lZz+wif+9ZIAdT2YaUbjlRa3lxUqit4O2bDXMsry0jWVnP7CJ/71kgB1PYB9dGz8yjzVTcRuz+pxG6UyyvLSNZWc/sIn/vWSAHU9lM9BuZD2YZv8qdWbmshvGspuR9RywYXrMGTOVblwCaZyyvLSNZWc/sIn/vWSAHU9ssry0jWVnP7CJ/71kgB1PbpgFSjphjL1Czw4cub5tYoxeyDUYjGW6LsJgoEYE59UucSoWhKXySzw0eabe6kRSnLK8tI1lZz+wif+9ZIAdT2FJs+H98e5DZalWVDGzrjNMRjqtsAKyK1YjK4880tAk2OgTOww76NNUM6UPjHXgkPfMHwBwuGiOrzx5F3LzY93dNAqA0RFh8wriszxfv89pHLK8tI1lZz+wif+9ZIAdT2kYHYid9brAu7sa0Osf1d5ZJV2VPo8Pw10nGGHD1AVUolJAS+Rj3liwM00cJh8XX51Vi/QR4jiSBeXJM5jqvwNcsry0jWVnP7CJ/71kgB1PbBMdN5I/5k5TrX/r4FSvpjiydpAVeuiV9yYC/ulecWb6VDTDC2af854W76QMzr16vu7Ydw9NvQZhqCIGzGN0df7WOXLQv7sX1tQhYsXbqjm96kW6cegSfvsrcp0brf6altPNKyXScAyimI/m4vL2aAyyvLSNZWc/sIn/vWSAHU9lM9BuZD2YZv8qdWbmshvGsO6QcINdaL6CwoLz0pOkdI/BbqLgRZjKSUrQZI9zdIN8sry0jWVnP7CJ/71kgB1PZggSzMDX2LCiNyfylIf30UtW9wcg3Z1jYPozRlUDlicU7FQHj2ABNVlS/xtXThDJjLK8tI1lZz+wif+9ZIAdT2ZPk9wlO7gRS2NR/577nIxPFS5BnBJucZqCC8Kixij7bCnP7whAertTY7DYfsN+I5fukoSv17pPh4sj76t/LQK/GnOQa8ii+UGEn5IoRxElHLK8tI1lZz+wif+9ZIAdT2anxGCRJ/TmQr6A88MroTLt1ETJpihKv840c/Gz+9Xl4+k2h4t7yKKxIMsYs3CZ98yyvLSNZWc/sIn/vWSAHU9rA7myUV+iA2T84/LcEOknIpqOLEfAd2Mb2VkgAoGNAwzpQy+w7887DkJyvv2wnOJ8sry0jWVnP7CJ/71kgB1PbvE4DBalsoR3Q3qJMTMmEq1VWLAcUXrkqxhYa93SzuLcsry0jWVnP7CJ/71kgB1PbLK8tI1lZz+wif+9ZIAdT2TRYktR3qGI6QdWFd4JmWdx13igVCRf47UH652yLnsmfLK8tI1lZz+wif+9ZIAdT2yyvLSNZWc/sIn/vWSAHU9hQ+0+pf1RhafQlnqUagFL3f4WgEojd2HLqqN6lC85x3ybDIFHf+x/yuahWLVCWj6csry0jWVnP7CJ/71kgB1PbLK8tI1lZz+wif+9ZIAdT2JJIbwcJQCeO0uU1MU1/KQcsry0jWVnP7CJ/71kgB1PbLK8tI1lZz+wif+9ZIAdT2UvOp/PjrJCrbISuILpolIMsry0jWVnP7CJ/71kgB1PZID6aJuROl7KmBIf0BWClbtQ0lIOZoVjjqjBfmAAVwhcsry0jWVnP7CJ/71kgB1PbLK8tI1lZz+wif+9ZIAdT2haAaPdu54AadltXMhov2Ah4JPiVp5lTKRqlRNdsQG/zLK8tI1lZz+wif+9ZIAdT2yyvLSNZWc/sIn/vWSAHU9mg3dlr77brWZA8nOk2hSDr9gbGHDsic8SVB2NtgyeS1yyvLSNZWc/sIn/vWSAHU9ssry0jWVnP7CJ/71kgB1PbT/drCgPUivvzR7Kn9dwjryyvLSNZWc/sIn/vWSAHU9ssry0jWVnP7CJ/71kgB1Pa7UBHtW5Wnht7IaTmUSY6iyyvLSNZWc/sIn/vWSAHU9ssry0jWVnP7CJ/71kgB1PaNUpX9lApjQq/26WOppyemMekTX0Mekh9yXuL49KusZxlifpQGjnsTshc38ecQG8Zha4vpP1SVI9oc4wFwUG3xyyvLSNZWc/sIn/vWSAHU9ssry0jWVnP7CJ/71kgB1PZJu8pmrg6xru65RNRemmnoWLyqTWRrCnvv5KvWCw73DlB8O1fjxzASRf1ytoLDaufLK8tI1lZz+wif+9ZIAdT2yyvLSNZWc/sIn/vWSAHU9jmUlVA6eep5yvDo9G665vQQvY7KnPg/YCtljZr6Nrhr3EECf4iy0GihO8WDevpwKMsry0jWVnP7CJ/71kgB1PbLK8tI1lZz+wif+9ZIAdT2M21SkWQVfHzRFAmitHBuzcWvJ2h69l3+RsdV5cTeAC3LK8tI1lZz+wif+9ZIAdT2ohMjk0/I+RKdi089DgoMb8sry0jWVnP7CJ/71kgB1PbLK8tI1lZz+wif+9ZIAdT2NmFlm9ucLn3Rxn+edG2gMrAnfZbp/n2I2kSUOO3vIa/LK8tI1lZz+wif+9ZIAdT2wgEG5sBpQxAHzosqrai0Pcsry0jWVnP7CJ/71kgB1PbLK8tI1lZz+wif+9ZIAdT2HiPugEHWd6ikKk5I4lVaa6/Nf+QDRipYS9aGUiTVtkzLK8tI1lZz+wif+9ZIAdT2yyvLSNZWc/sIn/vWSAHU9psHj3uNR0yOjISZQFXfhdXLK8tI1lZz+wif+9ZIAdT2wgyGRgt6as6D66mR/jatHhsO8K42y4h/wpaiA3daM0jLK8tI1lZz+wif+9ZIAdT2sDubJRX6IDZPzj8twQ6ScnXihSBbvFjBFh59uWS2LX01l5+HTkHvcRBCoHNpwiFIyrhYvJY/ux1LlFmAXki9R85iDAibobUEmWlVF56bRIVAb8Hmpss1SEkImSxDrfYCyyvLSNZWc/sIn/vWSAHU9uKuqmh9Pe6g8KUNl520q3kX0ybK7LhnW2CMpLIz/HOHedMzX15U/xeNhkfMcdeF//BbuBgBM+NesbWmJooqdCjf53aBUbAUPzZZCRaSR+L8yhZMSQLl8cf7GoEvsUQCWEwG8G1cnvY94KPuNAsuRhHLK8tI1lZz+wif+9ZIAdT294p46Us/g+iuWHA2sdHuEMsry0jWVnP7CJ/71kgB1PYkO2eF2Fuli9GZNUwtZZglPxNZMPrkwitNKUTRPOP7BMsry0jWVnP7CJ/71kgB1PbUVlQ7z7iGtBy7wJTF/hgTr5aNCY/5c7OXwllyy9UXAfGebn10hmm+n4bZjaMS4sOa/DNRzX1tW+1ocCtAx6XCyxAj+MRCw/e5KPseeVzyg7b//0xxp9+GYUbW2o3whonLK8tI1lZz+wif+9ZIAdT2z4mnW7bruOHmC44nXkfswgtluA11ZRTZwL/xej3CD5Q/iQdON9PG/zisYe4+wAqRqDHaTm24WYVSXW9e06hFTRsPbVPPIY9+okXaTD7Mu+jjmKpGYzdabtxdUnxWNU2t11cxgaL3bIlwOXb3zAGWmssry0jWVnP7CJ/71kgB1PbzGkhSG/eFV56Bci1EGOM9Ef3AE/y03yT2QyrExb3JTyF7XrpTNN3RbhfBF99Cf1vLK8tI1lZz+wif+9ZIAdT2EmNGcM4sB6Zve6lKLPCUhHbxoSqyyI8mtdcgadizLcyiEyOTT8j5Ep2LTz0OCgxvyyvLSNZWc/sIn/vWSAHU9lM9BuZD2YZv8qdWbmshvGsrg0SeHQUfFwM9E172a/9VoAe9Y/ZiINVgdT1LOiXECbcr61HxNPDdDktyC9UxouH87sGbLvKLGWd8pGmyg/vY9eOPd4LPnBxuBhZ2eu1IXLA7myUV+iA2T84/LcEOknL67YzICKSAGHx6hvbe/vcb+MJU4ot/nXh+mYUe8NSGP8sry0jWVnP7CJ/71kgB1PYpiV6XOOEcRXF8ONJ60pbUID8uP/YagNfISbhTeTJv1IK6wL2kRjtaLxiTV86U7WBrzaHkBDcwEnSbD8xynvYryyvLSNZWc/sIn/vWSAHU9hEaONnIVwlD9Dpolu/QukQ6thfKIRU8mWw+CE3pRrX/mpuanfinoJJBEjhvJEEHqdYTndKryFrf5AhAUF2m2KvLK8tI1lZz+wif+9ZIAdT2WNEJ76DiARMjFdm1RbYwXQRCwaSWOStIMIDk1lOhpz2rCgVAnWNF01AaDaxQzVcQk+I9rX65eiuZHs9N0rolM8T4LofxdYUIvU6v1hPXmTSW2v3uaJj02okrY9rSF4K4e6+GUoQZg2WEspcivJpPDZgp3MCVdOYzJwQH4vd9+MF1Mpd42ytFzQ/e87/tmsm0QEWr4dsZb0NFErd+inib6Q==')"}],"title":"dm盒子","author":"cy","version":20250218,"type":"tool","url":"hiker://empty##","col_type":"text_center_1","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"影视","year_url":"","find_rule":"js:$.require(\"Main\");","searchFind":"js:\r\nvar d = [];\r\nlet key = MY_URL.split('##')[1];\r\n\r\n//log(rs)\r\nsetResult([{\r\n    title: \"点我开始聚合搜索\" + key,\r\n    url: \"hiker://search?s=\" + key,\r\n    extra: {\r\n        rules: $.toString((MY_URL) => {\r\n            evalPrivateJS(JSON.parse(request('hiker://page/search_rules')).rule);\r\n            return JSON.stringify(rs)\r\n        }, MY_URL)\r\n    }\r\n}])\r\n","search_url":"hiker://empty##**##fypage","group":"⑧工具","detail_col_type":"text_5","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"js:\ntry {\n    // L佬图标\n    if (!fileExist('hiker://files/icon/文件类型')) {\n        try {\n            log('初始化L佬文件库图标');\n            let fileSelectRoot = 'https://gitcode.net/qq_32394351/dr/-/raw/master/';\n            let iconHttp = Object.entries({\n                \"js\": fileSelectRoot + \"img/文件类型/js.svg\",\n                \"log\": fileSelectRoot + \"img/文件类型/log.svg\",\n                \"html\": fileSelectRoot + \"img/文件类型/html.svg\",\n                \"apk\": fileSelectRoot + \"img/文件类型/apk.svg\",\n                \"json\": fileSelectRoot + \"img/文件类型/json.svg\",\n                \"css\": fileSelectRoot + \"img/文件类型/css.svg\",\n                \"zip\": fileSelectRoot + \"img/文件类型/zip.svg\",\n                \"hiker\": fileSelectRoot + \"img/文件类型/hiker.svg\",\n                \"mp4\": fileSelectRoot + \"img/文件类型/mp4.svg\",\n                \"gif\": fileSelectRoot + \"img/文件类型/gif.svg\",\n                \"mp3\": fileSelectRoot + \"img/文件类型/mp3.svg\",\n                \"txt\": fileSelectRoot + \"img/文件类型/txt.svg\",\n                \"文件\": fileSelectRoot + \"img/文件类型/文件.svg\",\n                \"文件夹\": fileSelectRoot + \"img/文件类型/文件夹.svg\"\n            });\n            for (let icon of iconHttp) {\n                saveImage(icon[1], `hiker://files/icon/文件类型/${icon[0]}.svg`);\n            }\n        } catch (e) {\n            log('L佬文件库图标初始化失败：' + e);\n        }\n    }\n    // 图片预处理\n    imgLocation = {\n        \"已收藏\": 'hiker://files/rules/cy/bili_pic/已收藏.png',\n        \"未收藏\": 'hiker://files/rules/cy/bili_pic/未收藏.png',\n        \"稍后再看\": 'hiker://files/rules/cy/bili_pic/稍后再看.png',\n        \"未点赞\": 'hiker://files/rules/cy/bili_pic/未点赞.png',\n        \"已点赞\": 'hiker://files/rules/cy/bili_pic/已点赞.png',\n        \"添加关注\": 'hiker://files/rules/cy/bili_pic/添加关注.png',\n        \"已关注\": 'hiker://files/rules/cy/bili_pic/已关注.png',\n        \"专栏\": 'hiker://files/rules/cy/bili_pic/专栏.png',\n        \"查看评论\": 'hiker://files/rules/cy/bili_pic/查看评论.png',\n        \"周边\": 'hiker://files/rules/cy/bili_pic/周边.png',\n        \"双边\": 'hiker://files/rules/cy/bili_pic/双边.png',\n        \"列表\": 'hiker://files/rules/cy/bili_pic/列表.png',\n        \"订阅\": 'hiker://files/rules/cy/bili_pic/订阅.png',\n        \"日历\": 'hiker://files/rules/cy/bili_pic/日历.png',\n        \"动态\": 'hiker://files/rules/cy/bili_pic/动态.png'\n    }\n    storage0.putMyVar('图标', imgLocation);\n    // 判断这个就好了，。只保证基本的环境（完整去仓库找𝑀𝑦𝐹𝑖𝑒𝑙𝑑ᴰⁿ）\n    if (!fileExist('hiker://files/rules/DuanNian/MyParse.json')) {\n        // let jxCode = fetch(\"http://hiker.nokia.press/hikerule/zyw_data/13\");\n        let jxCode = `{\"settings\":{\"qy\":\"迪奥嗅探\",\"yk\":\"迪奥嗅探\",\"tx\":\"荣耀\",\"mg\":\"蚂蚁兄弟\",\"bl\":\"OK解析\",\"sh\":\"江湖D\",\"xg\":\"江湖D\",\"al\":\"江湖D\",\"pp\":\"人人迷\",\"mi\":\"1080\",\"le\":\"迪奥嗅探\",\"oth\":\"道长仓库通免\",\"one\":\"1080\",\"fun\":\"融兴\",\"qju\":\"默认\",\"cj\":\"hiker://files/cache/Parse_Dn.js\"},\"title\":[\"迪奥嗅探\",\"ckmov\",\"Bl解析\",\"m1907\",\"虾米解析\",\"江湖官方\",\"星驰\",\"尊享\",\"1717云备用\",\"Mao\",\"航海锚\",\"江湖D\",\"4k\",\"M3U8TV\",\"OK解析\",\"playmu38\",\"飞捷\",\"116\",\"乐喵\",\"优全\",\"PAR\",\"万福\",\"蓝猫\",\"瓜皮\",\"樱花\",\"白玉\",\"白玉B\",\"白玉C\",\"淘影A\",\"淘影B\",\"淘影D\",\"淘影E\",\"淘影F\",\"金鸡\",\"八一\",\"宝莲\",\"追剧达人\",\"速搜影院\",\"66parse\",\"八二\",\"冰豆\",\"M2090\",\"MW0\",\"番茄弹幕解析\",\"暮光\",\"660e\",\"人人迷\",\"福星\",\"4K影视\",\"夷狄\",\"旧城影视\",\"七哥\",\"2A\",\"段友.日批\",\"百度\",\"盘古\",\"Mao全网解析\",\"YiTV\",\"叻簇\",\"可乐\",\"猪蹄\",\"小狼云\",\"云解析\",\"线路二(国外)\",\"线路三(备用)\",\"TNVIP云播放\",\"（带选集的二次解析）\",\"思云\",\"m3u8\",\"智能接口\",\"云栖\",\"初心\",\"神马\",\"云波\",\"久已\",\"盒子\",\"17云\",\"七彩\",\"CKMOV\",\"啊茹/竹嘎\",\"B站解析\",\"云云\",\"CK\",\"CHok\",\"ELW\",\"安逸\",\"大幕\",\"娱乐\",\"RDHK\",\"H8\",\"解析la\",\"久播\",\"九八\",\"老板\",\"渐渐\",\"MUTV\",\"明日\",\"遇见\",\"诺讯\",\"清莲\",\"萌欣\",\"百度/颜亦\",\"维多\",\"无名\",\"小蒋\",\"09\",\"星空\",\"月亮\",\"云端\",\"云析\",\"33t\",\"江湖科技2\",\"淘影\",\"瞄派对\",\"宏仔\",\"柠檬\",\"江湖F\",\"江湖B\",\"leeleo\",\"爱解\",\"领酷\",\"泡泡堂\",\"app影视工厂\",\"parwix\",\"扶风\",\"追剧达人3\",\"萌瓜\",\"ptygx\",\"酷吧\",\"高天\",\"萌新\",\"荣耀\",\"融兴\",\"你爹科技\",\"优惠福利购\",\"FuXing\",\"道长仓库通免\",\"ok\",\"干饭(人人迷)\",\"66影视\",\"麦子\",\"蚂蚁兄弟\",\"百度解析\",\"云海\",\"云海正版\",\"yun1717\",\"PanGu\",\"defaultParse\",\"一起百度\",\"8090\",\"盘古json\",\"4080\",\"夜幕\",\"1080\",\"星驰2\",\"明日解析\",\"明日解析2\",\"973\",\"林志远\",\"淘影蓝光\",\"淘影1080\",\"飞飞智能\",\"步步高\",\"200\",\"淘影C\"],\"codes\":{\"116\":\"https://jx.116kan.com/?url=\",\"200\":\"https://vip.66parse.club/?url=\",\"973\":\"https://jx.973973.xyz/?url=\",\"1080\":\"http://159.75.133.231:1788/?key=1&url=\",\"4080\":\"https://jx.4080jx.cc/?url=\",\"8090\":\"https://www.8090g.cn/?url=\",\"defaultParse\":\n    function (url, timeout) {\n        return ParseS.defaultParseWeb(url, timeout);\n    }\n    ,\"PanGu\":\n    function (vipUrl, data) {\n        try {\n            var ref = \"https://www.pangujiexi.com/\";\n            var parse = \"https://panguapi.ntryjd.net/jiexi/?url=\" + vipUrl;\n            var api = \"https://panguapi.ntryjd.net/jiexi/api.php\";\n            if (data) {\n                ref = data[0];\n                parse = data[1];\n                api = data[2];\n            }\n            var Time = (Math.floor(new Date().getTime() / 1000) * 1).toString();\n            var url = JSON.parse(request(api, {headers: {\"Referer\": parse}, body: \"url=\" + vipUrl + \"&referer=\" + base64Encode(parse) + \"&ref=1&time=\" + Time + \"&type=&other=\" + base64Encode(vipUrl) + \"&ios=0\", method: \"POST\"})).url;\n            return url;\n        }\n        catch (e) {\n            return \"\";\n        }\n    }\n    ,\"yun1717\":\n    function (vipUrl) {\n        try {\n            var isyk = vipUrl.indexOf(\"youku\");\n            var ref = \"https://www.1717yun.com/jx/ty.php?url=\" + vipUrl;\n            var parse = \"https://1717.ntryjd.net/0526/?url=\" + vipUrl;\n            var api = \"https://1717.ntryjd.net/0526/api.php\";\n            return isyk === -1 ? this.PanGu(vipUrl, [ref, parse, api]) : this.PanGu(vipUrl, [ref + \",vip:\", parse + \",vip:\", api]);\n        }\n        catch (e) {\n            return \"\";\n        }\n    }\n    ,\"道长仓库通免\":\n    function (url, timeout) {\n        return ParseS.defaultParseWeb(url, timeout);\n    }\n    ,\"FuXing\":\n    function (vipUrl) {\n        try {\n            var ref = \"https://jx.xuetuiguang.cn/jiexi/?url=\" + vipUrl;\n            var parse = ref;\n            var api = \"https://jx.xuetuiguang.cn/jiexi/apiu_fx.php\";\n            return this.PanGu(vipUrl, [ref, parse, api]);\n        }\n        catch (e) {\n            return \"\";\n        }\n    }\n    ,\"萌瓜\":\"https://dm.2g88.vip/?url=\",\"爱解\":\"https://jiexi.t7g.cn/?url=\",\"09\":\"https://jx.09tv.top/bd/?url=\",\"萌欣\":\"http://vip.mengx.vip/home/api?type=ys&uid=3249696&key=aefqrtuwxyEFHKNOQY&url=\",\"清莲\":\"https://www.qinglyy.com/m3u8/?url=\",\"遇见\":\"https://jx.yujiannk.com/?url=\",\"渐渐\":\"https://titan.mgtv.com.janan.net:4433/mgtv1206/?url=\",\"娱乐\":\"https://vip.anje.cn/?url=\",\"安逸\":\"http://www.mgtv.com.wchulian.com.cn/player/analysis.php?v=\",\"云云\":\"http://159.75.133.231:81/jiexi/?url=\",\"啊茹/竹嘎\":\"http://k.auuyruyc.com/player/?url=\",\"初心\":\"https://player.5znn.pro/jiexi.php?url=\",\"叻簇\":\"https://lecurl.cn/?url=\",\"段友.日批\":\"https://jx.ns360.cn/1080/jiexi/?url=\",\"暮光\":\"https://www.mgtv.com.muguangys.com/jiexi1.php?url=\",\"瓜皮\":\"http://jxx.dijiaxia.com/?url=\",\"PAR\":\"https://jx.ihuikr.com/player/?url=\",\"乐喵\":\"http://jx.hao-zsj.cn/vip/?url=\",\"优全\":\"https://jx.xmyun.xyz/?url=\",\"万福\":\"https://jx.wfy4.com/?url=\",\"蓝猫\":\"https://jx.daidaitv.top:43810/?url=\",\"樱花\":\"https://buaon.xyz/?url=\",\"白玉\":\"https://jx.baiyu.buzz/?url=\",\"白玉B\":\"https://jx.baiyu.buzz/bb/?url=\",\"白玉C\":\"https://jx.baiyu.buzz/cc/?url=\",\"淘影A\":\"http://jx.1080jx.top/vipjx/?url=\",\"淘影B\":\"http://jx.1080jx.top/jxvip/?url=\",\"淘影C\":\"http://jx.1080jx.top/m3u8/?url=\",\"淘影D\":\"http://jx.1080jx.top/vip/?url=\",\"淘影E\":\"http://jx.1080jx.top/api/?url=\",\"淘影F\":\"http://jx.1080jx.top/jiexi/?url=\",\"金鸡\":\"http://jjxx.me/?url=\",\"八一\":\"http://vip.8bys.cn/?url=\",\"宝莲\":\"http://danmu.8old.cn/vip/?url=\",\"追剧达人\":\"https://vip123kan.vip/m3u8.php?url=\",\"速搜影院\":\"http://vip.susou.tv/player/?url=\",\"66parse\":\"http://vip.66parse.club/?url=\",\"八二\":\"http://jx2.8bys.cn/m3u8.php?url=\",\"冰豆\":\"https://api.qianqi.net/vip/?url=\",\"M2090\":\"https://m2090.com/?url=\",\"MW0\":\"https://jx.mw0.cc/?url=\",\"番茄弹幕解析\":\"http://jiexi.fqzy.cc/player/jx.php?url=\",\"660e\":\"https://660e.com/?url=\",\"人人迷\":\"https://svip.renrenmi.cc:2222/api/?key=nn4j8rukPXSVzR78E9&url=\",\"福星\":\"https://jx.popo520.cn/jiexi/?url=\",\"4K影视\":\"https://jx.4kdv.com/?url=\",\"夷狄\":\"https://api.1dior.cn/analysis/123/index.php?uid=1428&my=afkruDFIYZ&url=\",\"旧城影视\":\"https://jx.9eng.cn/?url=\",\"七哥\":\"https://jx.mmkv.cn/tv.php?url=\",\"2A\":\"https://www.2ajx.com/vip.php?url=\",\"百度\":\"https://jiexi.bdjxfw.com/home/api?type=ys&uid=168882504&key=adfhjknyzACDFJOQU9&url=\",\"盘古\":\"http://www.pangujiexi.cc/jiexi.php?url=\",\"Mao全网解析\":\"http://lecurl.cn/?url=\",\"YiTV\":\"http://jiexi.us/?url=\",\"可乐\":\"https://jx.keleapi.com/?url=\",\"猪蹄\":\"https://jx.iztyy.com/svip/?url=\",\"小狼云\":\"https://jx.xiaolangyun.com/?url=\",\"云解析\":\"https://jx.aidouer.net/?url=\",\"线路二(国外)\":\"https://jx.ppflv.com/?url=\",\"线路三(备用)\":\"https://jx.duzheba.cn/?url=\",\"TNVIP云播放\":\"http://www.33tn.cn/?url=\",\"（带选集的二次解析）\":\"https://parse.xymov.net/?url=\",\"思云\":\"https://jx.ap2p.cn/?url=\",\"m3u8\":\"http://jx.rdhk.net/?v=\",\"智能接口\":\"http://jiexi.30dian.cn/?url=\",\"云栖\":\"https://www.yq52.cn/film/?url=\",\"神马\":\"https://jxx.smys8.cn/index.php?url=\",\"云波\":\"https://zy.aoxtv.com/?url=\",\"久已\":\"https://www.91jxs.com/jiexi/?url=\",\"盒子\":\"http://jx5.178du.com/p1/?url=\",\"17云\":\"https://www.1717yun.com/jx/ty.php?url=\",\"七彩\":\"https://www.xymav.com/?url=\",\"CKMOV\":\"https://ckmov.ccyjjd.com/ckmov/?url=\",\"B站解析\":\"https://www.cuan.la/m3u8.php?url=\",\"CK\":\"https://www.ckplayer.vip/jiexi/?url=\",\"CHok\":\"https://www.gai4.com/?url=\",\"ELW\":\"https://jx.elwtc.com/vip/?url=\",\"大幕\":\"https://jx.52damu.com/dmjx/jiexi.php?url=\",\"RDHK\":\"https://jx.rdhk.net/?v=\",\"H8\":\"https://www.h8jx.com/jiexi.php?url=\",\"解析la\":\"https://api.jiexi.la/?url=\",\"久播\":\"https://jx.jiubojx.com/vip.php?url=\",\"九八\":\"https://jx.youyitv.com/?url=\",\"老板\":\"https://vip.laobandq.com/jiexi.php?url=\",\"MUTV\":\"https://jiexi.janan.net/jiexi/?url=\",\"明日\":\"https://jx.yingxiangbao.cn/vip.php?url=\",\"诺讯\":\"https://www.nxflv.com/?url=\",\"百度/颜亦\":\"https://jsap.attakids.com/?url=\",\"维多\":\"https://jx.ivito.cn/?url=\",\"无名\":\"https://www.administratorw.com/video.php?url=\",\"小蒋\":\"https://www.kpezp.cn/jlexi.php?url=\",\"星空\":\"http://60jx.com/?url=\",\"月亮\":\"https://api.yueliangjx.com/?url=\",\"云端\":\"https://jx.ergan.top/?url=\",\"云析\":\"https://jx.yparse.com/index.php?url=\",\"33t\":\"https://www.33tn.cn/?url=\",\"江湖科技2\":\"http://play.bichangzw.cn/jianghu/json/?url=\",\"淘影\":\"https://www.vodjx.top/api/?key=XSQzk8KFK1I7FfPK5X&url=\",\"瞄派对\":\"https://api.jiexi.one/api/?key=Sv5qJ05C6Oy62kCnEc&url=\",\"宏仔\":\"http://api.json.vin:4433/home/api?type=ys&uid=2717581&key=gjknqruyNOPQRTUWZ0&url=\",\"柠檬\":\"https://youku.jianzhengobey.top/yueliang.php?v=\",\"江湖F\":\"http://jx.yhys.icu:4433/?url=\",\"江湖B\":\"https://123.xxgcx.cn:4433/jianghu.php?url=\",\"leeleo\":\"https://www.mgtv.com.leeleo.cn/nmm/player/?url=\",\"领酷\":\"http://user.lkflv.com/analysis/json/?uid=38&my=acdklnzBDEHJNPSU69&url=\",\"泡泡堂\":\"https://api.shengqiankuaitao.cn/api/?key=I7iOCx9465knkzUo5H&url=\",\"app影视工厂\":\"https://jiexi.ysgc.xyz/home/api?type=ys&uid=29893&key=hkptuvxyACFHJRY078&url=\",\"parwix\":\"https://jx.parwix.com:4433/player/?url=\",\"扶风\":\"https://vip.byteamone.cn/api/?key=vpO0packXeAp4XYCnA&url=\",\"追剧达人3\":\"http://jx.vipmv.co/json3/?url=\",\"ptygx\":\"https://jhjx.ptygx.com/?url=\",\"酷吧\":\"https://kuba.renrenmi.cc:2266/api/?key=1PhqM8xRCbmfgwmcE2&url=\",\"高天\":\"https://vip.gaotian.love/api/?key=sRy0QAq8hqXRlrEtrq&url=\",\"萌新\":\"https://vip.mengx.vip/home/api?type=ys&uid=18613&key=bknprsxCILRTUVYZ79&url=\",\"荣耀\":\"https://jiexi.bdjxfw.com/home/api?type=ys&uid=226493678&key=bgmnouzCEHIKLMST29&url=\",\"融兴\":\"https://test.rongxingvr.com/test/?url=\",\"你爹科技\":\"http://cache.languang.icu:88/didi.php?url=\",\"优惠福利购\":\"http://www.youhuifuligou.com/json/?id=1&url=\",\"ok\":\"http://9ok.co/?url=\",\"干饭(人人迷)\":\"https://jx.zui.cm/?url=\",\"66影视\":\"https://2.66movie.top/player/?url=\",\"麦子\":\"http://api.maizimall.com/index.php?url=\",\"蚂蚁兄弟\":\"https://daili.mayixiongdi.cn/?url=\",\"百度解析\":\"https://bdjx.shoujick.com/json1231/?url=\",\"云海\":\"https://dd.mouliuk.com/home/api?type=ys&uid=12293&key=acfhkovxzDEIMPWX29&url=\",\"云海正版\":\"https://jxjx.jushiys.co/player/ckplayer.php?url=\",\"一起百度\":\"https://jx5.178du.com/8090/jiexi/?url=\",\"盘古json\":\"https://json.pangujiexi.com:12345/json.php?url=\",\"夜幕\":\"https://www.yemu.xyz/?url=\",\"星驰2\":\"https://vip.cjys.top/?url=\",\"明日解析\":\"https://www.qianyicp.com/vip/vip_p3.php?url=\",\"明日解析2\":\"https://www.qianyicp.com/jiexi/index.php?url=\",\"林志远\":\"https://jiexi.linzhiyuan.xyz/jiexi/?url=\",\"淘影蓝光\":\"https://api.1dior.cn/analysis/1234/index.php?uid=1428&my=afkruDFIYZ&url=\",\"淘影1080\":\"https://jx.1080jx.top/jx/?url=\",\"飞飞智能\":\"https://y.9dan.cc/?v=\",\"步步高\":\"https://jx.xihujx.com/index.php?url=\",\"飞捷\":\"https://vip.fj6080.xyz/player/?url=\",\"playmu38\":\"https://www.playm3u8.cn/jiexi.php?url=\",\"OK解析\":\"https://okjx.cc/?url=\",\"M3U8TV\":\"https://jx.m3u8.tv/jiexi/?url=\",\"4k\":\"https://vip.jx4k.com/vip/?url=\",\"江湖D\":\"http://jx.zhiaiyy.top/?url=\",\"航海锚\":\"https://vip.xrff.xyz/?url=\",\"Mao\":\"https://www.mtosz.com/m3u8.php?url=\",\"1717云备用\":\"https://www.1717yun.com/beiyong/?url=\",\"尊享\":\"https://player.maqq.cn/?url=\",\"星驰\":\"https://vip.swuii.top/?url=\",\"江湖官方\":\"https://api.jhdyw.vip/?url=\",\"虾米解析\":\"https://jx.xmflv.com/?url=\",\"m1907\":\"https://z1.m1907.cn/?jx=\",\"Bl解析\":\"https://vip.bljiex.com/?v=\",\"ckmov\":\"https://www.ckmov.com/?url=\",\"迪奥嗅探\":\"https://123.1dior.cn/?url=\"}}\n    x1`;\n        saveFile('hiker://files/rules/DuanNian/MyParse.json', jxCode);\n    }\n    // 校验dm盒子配置\n    var dmMethod=['TXdm', 'bilidm', 'QYdm', 'YKdm', 'MGdm', 'hlsdm', 'zuoandm'];\n    var dmSettingFile='hiker://files/rules/cy/dm盒子/settings.json';\n    var orgSettings = JSON.stringify({\n        fontSize: 25,\n        step: 1,\n        dmFrom: {\n            'qq.com': 'TXdm',\n            'bilibili.com': 'bilidm',\n            'iqiyi.com': 'QYdm',\n            'mgtv.com': 'MGdm',\n            'youku.com': 'YKdm'\n        },\n        parseMethod: dmMethod,\n        search: {\n            searchType: 1,\n            searchName: \"云盘君.简\"\n        },\n        erjiPage:'弹幕列表',\n        useway: '常规',\n        saveLocal:false,\n        doubleWrite:false,\n        history: {}\n    });\n    if (!fileExist(dmSettingFile) || request(dmSettingFile) === '') {\n        saveFile(dmSettingFile, orgSettings);\n        log('初始化弹幕文件配置');\n    } else {\n        dmSettings = JSON.parse(request(dmSettingFile));\n        // log(dmSettings.parseMethod===['TXdm', 'bilidm', 'QYdm', 'YKdm', 'MGdm','gonggongdm','zuoandm', 'shayvdm']);\n        function arraysEqual(a, b) {\n            if (a.length !== b.length) return false;\n\n            for (let i = 0; i < a.length; i++) {\n                if (a[i] !== b[i]) return false;\n            }\n\n            return true;\n        }\n        // 使用方式：\n        // log(arraysEqual(dmSettings.parseMethod, dmMethod));\n        // 判断 JSON 对象是否满足我们定义的结构\n        if (typeof dmSettings === 'object' &&\n            typeof dmSettings.fontSize === 'number' &&\n            typeof dmSettings.step === 'number' &&\n            typeof dmSettings.dmFrom === 'object' &&\n            typeof dmSettings.dmFrom['qq.com'] === 'string' &&\n            typeof dmSettings.dmFrom['bilibili.com'] === 'string' &&\n            typeof dmSettings.dmFrom['iqiyi.com'] === 'string' &&\n            typeof dmSettings.dmFrom['mgtv.com'] === 'string' &&\n            typeof dmSettings.dmFrom['youku.com'] === 'string' &&\n            Array.isArray(dmSettings.parseMethod) && arraysEqual(dmSettings.parseMethod, dmMethod) &&\n            dmSettings.parseMethod.every(method => typeof method === 'string') &&\n            typeof dmSettings.search === 'object' &&\n            typeof dmSettings.search.searchType === 'number' &&\n            typeof dmSettings.search.searchName === 'string' &&\n            typeof dmSettings.erjiPage === 'string' &&\n            typeof dmSettings.useway === 'string' &&\n            typeof dmSettings.saveLocal === 'boolean' &&\n            typeof dmSettings.doubleWrite === 'boolean' &&\n            typeof dmSettings.history === 'object'\n        ) {\n            log('弹幕相关设置文件正常');\n        } else {\n            log('初始化/复原弹幕设置');\n            saveFile(dmSettingFile, orgSettings);\n        }\n        // 周期清空解析历史\n        const numOfKeys = Object.keys(dmSettings.history).length;\n        log('当前历史记录：' + numOfKeys + '条');\n        if (numOfKeys > 15) {\n            log('解析记录已超过15条');\n            dmSettings.history = {};\n            saveFile(dmSettingFile, JSON.stringify(dmSettings));\n            log('清空完毕');\n        }\n    }\n    //* 下面代码用于自动拉取图标，无奈 */\n    if (!fileExist('hiker://files/rules/cy/bili_pic') || !fileExist('hiker://files/rules/cy/tubiao')) {\n        $.require(\"hiker://page/saveLocal\").saveLocal();\n    }\n} catch (error) {\n    log(error);\n    log(\"尝试重生...\")\n    // 删除配置文件，一键重生\n    deleteFile(\"hiker://files/dm盒子/settings.json\");\n    refreshPage();\n}\n","pages":"[{\"col_type\":\"movie_3\",\"name\":\"Instruction_Book.html\",\"path\":\"Instruction_Book.html\",\"rule\":\"<!doctype html>\\n<html>\\n<head>\\n<meta charset='UTF-8'><meta name='viewport' content='width=device-width initial-scale=1'>\\n\\n<style type='text/css'>html {overflow-x: initial !important;}:root { --bg-color:#ffffff; --text-color:#333333; --select-text-bg-color:#B5D6FC; --select-text-font-color:auto; --monospace:\\\"Lucida Console\\\",Consolas,\\\"Courier\\\",monospace; --title-bar-height:20px; }\\n.mac-os-11 { --title-bar-height:28px; }\\nhtml { font-size: 14px; background-color: var(--bg-color); color: var(--text-color); font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif; -webkit-font-smoothing: antialiased; }\\nbody { margin: 0px; padding: 0px; height: auto; inset: 0px; font-size: 1rem; line-height: 1.42857; overflow-x: hidden; background: inherit; tab-size: 4; }\\niframe { margin: auto; }\\na.url { word-break: break-all; }\\na:active, a:hover { outline: 0px; }\\n.in-text-selection, ::selection { text-shadow: none; background: var(--select-text-bg-color); color: var(--select-text-font-color); }\\n#write { margin: 0px auto; height: auto; width: inherit; word-break: normal; overflow-wrap: break-word; position: relative; white-space: normal; overflow-x: visible; padding-top: 36px; }\\n#write.first-line-indent p { text-indent: 2em; }\\n#write.first-line-indent li p, #write.first-line-indent p * { text-indent: 0px; }\\n#write.first-line-indent li { margin-left: 2em; }\\n.for-image #write { padding-left: 8px; padding-right: 8px; }\\nbody.typora-export { padding-left: 30px; padding-right: 30px; }\\n.typora-export .footnote-line, .typora-export li, .typora-export p { white-space: pre-wrap; }\\n.typora-export .task-list-item input { pointer-events: none; }\\n@media screen and (max-width: 500px) {\\n  body.typora-export { padding-left: 0px; padding-right: 0px; }\\n  #write { padding-left: 20px; padding-right: 20px; }\\n  .CodeMirror-sizer { margin-left: 0px !important; }\\n  .CodeMirror-gutters { display: none !important; }\\n}\\n#write li > figure:last-child { margin-bottom: 0.5rem; }\\n#write ol, #write ul { position: relative; }\\nimg { max-width: 100%; vertical-align: middle; image-orientation: from-image; }\\nbutton, input, select, textarea { color: inherit; font: inherit; }\\ninput[type=\\\"checkbox\\\"], input[type=\\\"radio\\\"] { line-height: normal; padding: 0px; }\\n*, ::after, ::before { box-sizing: border-box; }\\n#write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p, #write pre { width: inherit; }\\n#write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p { position: relative; }\\np { line-height: inherit; }\\nh1, h2, h3, h4, h5, h6 { break-after: avoid-page; break-inside: avoid; orphans: 4; }\\np { orphans: 4; }\\nh1 { font-size: 2rem; }\\nh2 { font-size: 1.8rem; }\\nh3 { font-size: 1.6rem; }\\nh4 { font-size: 1.4rem; }\\nh5 { font-size: 1.2rem; }\\nh6 { font-size: 1rem; }\\n.md-math-block, .md-rawblock, h1, h2, h3, h4, h5, h6, p { margin-top: 1rem; margin-bottom: 1rem; }\\n.hidden { display: none; }\\n.md-blockmeta { color: rgb(204, 204, 204); font-weight: 700; font-style: italic; }\\na { cursor: pointer; }\\nsup.md-footnote { padding: 2px 4px; background-color: rgba(238, 238, 238, 0.7); color: rgb(85, 85, 85); border-radius: 4px; cursor: pointer; }\\nsup.md-footnote a, sup.md-footnote a:hover { color: inherit; text-transform: inherit; text-decoration: inherit; }\\n#write input[type=\\\"checkbox\\\"] { cursor: pointer; width: inherit; height: inherit; }\\nfigure { overflow-x: auto; margin: 1.2em 0px; max-width: calc(100% + 16px); padding: 0px; }\\nfigure > table { margin: 0px; }\\ntr { break-inside: avoid; break-after: auto; }\\nthead { display: table-header-group; }\\ntable { border-collapse: collapse; border-spacing: 0px; width: 100%; overflow: auto; break-inside: auto; text-align: left; }\\ntable.md-table td { min-width: 32px; }\\n.CodeMirror-gutters { border-right: 0px; background-color: inherit; }\\n.CodeMirror-linenumber { user-select: none; }\\n.CodeMirror { text-align: left; }\\n.CodeMirror-placeholder { opacity: 0.3; }\\n.CodeMirror pre { padding: 0px 4px; }\\n.CodeMirror-lines { padding: 0px; }\\ndiv.hr:focus { cursor: none; }\\n#write pre { white-space: pre-wrap; }\\n#write.fences-no-line-wrapping pre { white-space: pre; }\\n#write pre.ty-contain-cm { white-space: normal; }\\n.CodeMirror-gutters { margin-right: 4px; }\\n.md-fences { font-size: 0.9rem; display: block; break-inside: avoid; text-align: left; overflow: visible; white-space: pre; background: inherit; position: relative !important; }\\n.md-fences-adv-panel { width: 100%; margin-top: 10px; text-align: center; padding-top: 0px; padding-bottom: 8px; overflow-x: auto; }\\n#write .md-fences.mock-cm { white-space: pre-wrap; }\\n.md-fences.md-fences-with-lineno { padding-left: 0px; }\\n#write.fences-no-line-wrapping .md-fences.mock-cm { white-space: pre; overflow-x: auto; }\\n.md-fences.mock-cm.md-fences-with-lineno { padding-left: 8px; }\\n.CodeMirror-line, twitterwidget { break-inside: avoid; }\\n.footnotes { opacity: 0.8; font-size: 0.9rem; margin-top: 1em; margin-bottom: 1em; }\\n.footnotes + .footnotes { margin-top: 0px; }\\n.md-reset { margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: top; background: 0px 0px; text-decoration: none; text-shadow: none; float: none; position: static; width: auto; height: auto; white-space: nowrap; cursor: inherit; -webkit-tap-highlight-color: transparent; line-height: normal; font-weight: 400; text-align: left; box-sizing: content-box; direction: ltr; }\\nli div { padding-top: 0px; }\\nblockquote { margin: 1rem 0px; }\\nli .mathjax-block, li p { margin: 0.5rem 0px; }\\nli blockquote { margin: 1rem 0px; }\\nli { margin: 0px; position: relative; }\\nblockquote > :last-child { margin-bottom: 0px; }\\nblockquote > :first-child, li > :first-child { margin-top: 0px; }\\n.footnotes-area { color: rgb(136, 136, 136); margin-top: 0.714rem; padding-bottom: 0.143rem; white-space: normal; }\\n#write .footnote-line { white-space: pre-wrap; }\\n@media print {\\n  body, html { border: 1px solid transparent; height: 99%; break-after: avoid; break-before: avoid; font-variant-ligatures: no-common-ligatures; }\\n  #write { margin-top: 0px; padding-top: 0px; border-color: transparent !important; }\\n  .typora-export * { -webkit-print-color-adjust: exact; }\\n  .typora-export #write { break-after: avoid; }\\n  .typora-export #write::after { height: 0px; }\\n  .is-mac table { break-inside: avoid; }\\n  .typora-export-show-outline .typora-export-sidebar { display: none; }\\n}\\n.footnote-line { margin-top: 0.714em; font-size: 0.7em; }\\na img, img a { cursor: pointer; }\\npre.md-meta-block { font-size: 0.8rem; min-height: 0.8rem; white-space: pre-wrap; background: rgb(204, 204, 204); display: block; overflow-x: hidden; }\\np > .md-image:only-child:not(.md-img-error) img, p > img:only-child { display: block; margin: auto; }\\n#write.first-line-indent p > .md-image:only-child:not(.md-img-error) img { left: -2em; position: relative; }\\np > .md-image:only-child { display: inline-block; width: 100%; }\\n#write .MathJax_Display { margin: 0.8em 0px 0px; }\\n.md-math-block { width: 100%; }\\n.md-math-block:not(:empty)::after { display: none; }\\n.MathJax_ref { fill: currentcolor; }\\n[contenteditable=\\\"true\\\"]:active, [contenteditable=\\\"true\\\"]:focus, [contenteditable=\\\"false\\\"]:active, [contenteditable=\\\"false\\\"]:focus { outline: 0px; box-shadow: none; }\\n.md-task-list-item { position: relative; list-style-type: none; }\\n.task-list-item.md-task-list-item { padding-left: 0px; }\\n.md-task-list-item > input { position: absolute; top: 0px; left: 0px; margin-left: -1.2em; margin-top: calc(1em - 10px); border: none; }\\n.math { font-size: 1rem; }\\n.md-toc { min-height: 3.58rem; position: relative; font-size: 0.9rem; border-radius: 10px; }\\n.md-toc-content { position: relative; margin-left: 0px; }\\n.md-toc-content::after, .md-toc::after { display: none; }\\n.md-toc-item { display: block; color: rgb(65, 131, 196); }\\n.md-toc-item a { text-decoration: none; }\\n.md-toc-inner:hover { text-decoration: underline; }\\n.md-toc-inner { display: inline-block; cursor: pointer; }\\n.md-toc-h1 .md-toc-inner { margin-left: 0px; font-weight: 700; }\\n.md-toc-h2 .md-toc-inner { margin-left: 2em; }\\n.md-toc-h3 .md-toc-inner { margin-left: 4em; }\\n.md-toc-h4 .md-toc-inner { margin-left: 6em; }\\n.md-toc-h5 .md-toc-inner { margin-left: 8em; }\\n.md-toc-h6 .md-toc-inner { margin-left: 10em; }\\n@media screen and (max-width: 48em) {\\n  .md-toc-h3 .md-toc-inner { margin-left: 3.5em; }\\n  .md-toc-h4 .md-toc-inner { margin-left: 5em; }\\n  .md-toc-h5 .md-toc-inner { margin-left: 6.5em; }\\n  .md-toc-h6 .md-toc-inner { margin-left: 8em; }\\n}\\na.md-toc-inner { font-size: inherit; font-style: inherit; font-weight: inherit; line-height: inherit; }\\n.footnote-line a:not(.reversefootnote) { color: inherit; }\\n.md-attr { display: none; }\\n.md-fn-count::after { content: \\\".\\\"; }\\ncode, pre, samp, tt { font-family: var(--monospace); }\\nkbd { margin: 0px 0.1em; padding: 0.1em 0.6em; font-size: 0.8em; color: rgb(36, 39, 41); background: rgb(255, 255, 255); border: 1px solid rgb(173, 179, 185); border-radius: 3px; box-shadow: rgba(12, 13, 14, 0.2) 0px 1px 0px, rgb(255, 255, 255) 0px 0px 0px 2px inset; white-space: nowrap; vertical-align: middle; }\\n.md-comment { color: rgb(162, 127, 3); opacity: 0.6; font-family: var(--monospace); }\\ncode { text-align: left; vertical-align: initial; }\\na.md-print-anchor { white-space: pre !important; border-width: initial !important; border-style: none !important; border-color: initial !important; display: inline-block !important; position: absolute !important; width: 1px !important; right: 0px !important; outline: 0px !important; background: 0px 0px !important; text-decoration: initial !important; text-shadow: initial !important; }\\n.os-windows.monocolor-emoji .md-emoji { font-family: \\\"Segoe UI Symbol\\\", sans-serif; }\\n.md-diagram-panel > svg { max-width: 100%; }\\n[lang=\\\"flow\\\"] svg, [lang=\\\"mermaid\\\"] svg { max-width: 100%; height: auto; }\\n[lang=\\\"mermaid\\\"] .node text { font-size: 1rem; }\\ntable tr th { border-bottom: 0px; }\\nvideo { max-width: 100%; display: block; margin: 0px auto; }\\niframe { max-width: 100%; width: 100%; border: none; }\\n.highlight td, .highlight tr { border: 0px; }\\nmark { background: rgb(255, 255, 0); color: rgb(0, 0, 0); }\\n.md-html-inline .md-plain, .md-html-inline strong, mark .md-inline-math, mark strong { color: inherit; }\\n.md-expand mark .md-meta { opacity: 0.3 !important; }\\nmark .md-meta { color: rgb(0, 0, 0); }\\n@media print {\\n  .typora-export h1, .typora-export h2, .typora-export h3, .typora-export h4, .typora-export h5, .typora-export h6 { break-inside: avoid; }\\n}\\n.md-diagram-panel .messageText { stroke: none !important; }\\n.md-diagram-panel .start-state { fill: var(--node-fill); }\\n.md-diagram-panel .edgeLabel rect { opacity: 1 !important; }\\n.md-fences.md-fences-math { font-size: 1em; }\\n.md-fences-advanced:not(.md-focus) { padding: 0px; white-space: nowrap; border: 0px; }\\n.md-fences-advanced:not(.md-focus) { background: inherit; }\\n.typora-export-show-outline .typora-export-content { max-width: 1440px; margin: auto; display: flex; flex-direction: row; }\\n.typora-export-sidebar { width: 300px; font-size: 0.8rem; margin-top: 80px; margin-right: 18px; }\\n.typora-export-show-outline #write { --webkit-flex:2; flex: 2 1 0%; }\\n.typora-export-sidebar .outline-content { position: fixed; top: 0px; max-height: 100%; overflow: hidden auto; padding-bottom: 30px; padding-top: 60px; width: 300px; }\\n@media screen and (max-width: 1024px) {\\n  .typora-export-sidebar, .typora-export-sidebar .outline-content { width: 240px; }\\n}\\n@media screen and (max-width: 800px) {\\n  .typora-export-sidebar { display: none; }\\n}\\n.outline-content li, .outline-content ul { margin-left: 0px; margin-right: 0px; padding-left: 0px; padding-right: 0px; list-style: none; }\\n.outline-content ul { margin-top: 0px; margin-bottom: 0px; }\\n.outline-content strong { font-weight: 400; }\\n.outline-expander { width: 1rem; height: 1.42857rem; position: relative; display: table-cell; vertical-align: middle; cursor: pointer; padding-left: 4px; }\\n.outline-expander::before { content: \\\"\\\"; position: relative; font-family: Ionicons; display: inline-block; font-size: 8px; vertical-align: middle; }\\n.outline-item { padding-top: 3px; padding-bottom: 3px; cursor: pointer; }\\n.outline-expander:hover::before { content: \\\"\\\"; }\\n.outline-h1 > .outline-item { padding-left: 0px; }\\n.outline-h2 > .outline-item { padding-left: 1em; }\\n.outline-h3 > .outline-item { padding-left: 2em; }\\n.outline-h4 > .outline-item { padding-left: 3em; }\\n.outline-h5 > .outline-item { padding-left: 4em; }\\n.outline-h6 > .outline-item { padding-left: 5em; }\\n.outline-label { cursor: pointer; display: table-cell; vertical-align: middle; text-decoration: none; color: inherit; }\\n.outline-label:hover { text-decoration: underline; }\\n.outline-item:hover { border-color: rgb(245, 245, 245); background-color: var(--item-hover-bg-color); }\\n.outline-item:hover { margin-left: -28px; margin-right: -28px; border-left: 28px solid transparent; border-right: 28px solid transparent; }\\n.outline-item-single .outline-expander::before, .outline-item-single .outline-expander:hover::before { display: none; }\\n.outline-item-open > .outline-item > .outline-expander::before { content: \\\"\\\"; }\\n.outline-children { display: none; }\\n.info-panel-tab-wrapper { display: none; }\\n.outline-item-open > .outline-children { display: block; }\\n.typora-export .outline-item { padding-top: 1px; padding-bottom: 1px; }\\n.typora-export .outline-item:hover { margin-right: -8px; border-right: 8px solid transparent; }\\n.typora-export .outline-expander::before { content: \\\"+\\\"; font-family: inherit; top: -1px; }\\n.typora-export .outline-expander:hover::before, .typora-export .outline-item-open > .outline-item > .outline-expander::before { content: \\\"−\\\"; }\\n.typora-export-collapse-outline .outline-children { display: none; }\\n.typora-export-collapse-outline .outline-item-open > .outline-children, .typora-export-no-collapse-outline .outline-children { display: block; }\\n.typora-export-no-collapse-outline .outline-expander::before { content: \\\"\\\" !important; }\\n.typora-export-show-outline .outline-item-active > .outline-item .outline-label { font-weight: 700; }\\n.md-inline-math-container mjx-container { zoom: 0.95; }\\n\\n\\n.CodeMirror { height: auto; }\\n.CodeMirror.cm-s-inner { background: inherit; }\\n.CodeMirror-scroll { overflow: auto hidden; z-index: 3; }\\n.CodeMirror-gutter-filler, .CodeMirror-scrollbar-filler { background-color: rgb(255, 255, 255); }\\n.CodeMirror-gutters { border-right: 1px solid rgb(221, 221, 221); background: inherit; white-space: nowrap; }\\n.CodeMirror-linenumber { padding: 0px 3px 0px 5px; text-align: right; color: rgb(153, 153, 153); }\\n.cm-s-inner .cm-keyword { color: rgb(119, 0, 136); }\\n.cm-s-inner .cm-atom, .cm-s-inner.cm-atom { color: rgb(34, 17, 153); }\\n.cm-s-inner .cm-number { color: rgb(17, 102, 68); }\\n.cm-s-inner .cm-def { color: rgb(0, 0, 255); }\\n.cm-s-inner .cm-variable { color: rgb(0, 0, 0); }\\n.cm-s-inner .cm-variable-2 { color: rgb(0, 85, 170); }\\n.cm-s-inner .cm-variable-3 { color: rgb(0, 136, 85); }\\n.cm-s-inner .cm-string { color: rgb(170, 17, 17); }\\n.cm-s-inner .cm-property { color: rgb(0, 0, 0); }\\n.cm-s-inner .cm-operator { color: rgb(152, 26, 26); }\\n.cm-s-inner .cm-comment, .cm-s-inner.cm-comment { color: rgb(170, 85, 0); }\\n.cm-s-inner .cm-string-2 { color: rgb(255, 85, 0); }\\n.cm-s-inner .cm-meta { color: rgb(85, 85, 85); }\\n.cm-s-inner .cm-qualifier { color: rgb(85, 85, 85); }\\n.cm-s-inner .cm-builtin { color: rgb(51, 0, 170); }\\n.cm-s-inner .cm-bracket { color: rgb(153, 153, 119); }\\n.cm-s-inner .cm-tag { color: rgb(17, 119, 0); }\\n.cm-s-inner .cm-attribute { color: rgb(0, 0, 204); }\\n.cm-s-inner .cm-header, .cm-s-inner.cm-header { color: rgb(0, 0, 255); }\\n.cm-s-inner .cm-quote, .cm-s-inner.cm-quote { color: rgb(0, 153, 0); }\\n.cm-s-inner .cm-hr, .cm-s-inner.cm-hr { color: rgb(153, 153, 153); }\\n.cm-s-inner .cm-link, .cm-s-inner.cm-link { color: rgb(0, 0, 204); }\\n.cm-negative { color: rgb(221, 68, 68); }\\n.cm-positive { color: rgb(34, 153, 34); }\\n.cm-header, .cm-strong { font-weight: 700; }\\n.cm-del { text-decoration: line-through; }\\n.cm-em { font-style: italic; }\\n.cm-link { text-decoration: underline; }\\n.cm-error { color: red; }\\n.cm-invalidchar { color: red; }\\n.cm-constant { color: rgb(38, 139, 210); }\\n.cm-defined { color: rgb(181, 137, 0); }\\ndiv.CodeMirror span.CodeMirror-matchingbracket { color: rgb(0, 255, 0); }\\ndiv.CodeMirror span.CodeMirror-nonmatchingbracket { color: rgb(255, 34, 34); }\\n.cm-s-inner .CodeMirror-activeline-background { background: inherit; }\\n.CodeMirror { position: relative; overflow: hidden; }\\n.CodeMirror-scroll { height: 100%; outline: 0px; position: relative; box-sizing: content-box; background: inherit; }\\n.CodeMirror-sizer { position: relative; }\\n.CodeMirror-gutter-filler, .CodeMirror-hscrollbar, .CodeMirror-scrollbar-filler, .CodeMirror-vscrollbar { position: absolute; z-index: 6; display: none; outline: 0px; }\\n.CodeMirror-vscrollbar { right: 0px; top: 0px; overflow: hidden; }\\n.CodeMirror-hscrollbar { bottom: 0px; left: 0px; overflow: auto hidden; }\\n.CodeMirror-scrollbar-filler { right: 0px; bottom: 0px; }\\n.CodeMirror-gutter-filler { left: 0px; bottom: 0px; }\\n.CodeMirror-gutters { position: absolute; left: 0px; top: 0px; padding-bottom: 10px; z-index: 3; overflow-y: hidden; }\\n.CodeMirror-gutter { white-space: normal; height: 100%; box-sizing: content-box; padding-bottom: 30px; margin-bottom: -32px; display: inline-block; }\\n.CodeMirror-gutter-wrapper { position: absolute; z-index: 4; background: 0px 0px !important; border: none !important; }\\n.CodeMirror-gutter-background { position: absolute; top: 0px; bottom: 0px; z-index: 4; }\\n.CodeMirror-gutter-elt { position: absolute; cursor: default; z-index: 4; }\\n.CodeMirror-lines { cursor: text; }\\n.CodeMirror pre { border-radius: 0px; border-width: 0px; background: 0px 0px; font-family: inherit; font-size: inherit; margin: 0px; white-space: pre; overflow-wrap: normal; color: inherit; z-index: 2; position: relative; overflow: visible; }\\n.CodeMirror-wrap pre { overflow-wrap: break-word; white-space: pre-wrap; word-break: normal; }\\n.CodeMirror-code pre { border-right: 30px solid transparent; width: fit-content; }\\n.CodeMirror-wrap .CodeMirror-code pre { border-right: none; width: auto; }\\n.CodeMirror-linebackground { position: absolute; inset: 0px; z-index: 0; }\\n.CodeMirror-linewidget { position: relative; z-index: 2; overflow: auto; }\\n.CodeMirror-wrap .CodeMirror-scroll { overflow-x: hidden; }\\n.CodeMirror-measure { position: absolute; width: 100%; height: 0px; overflow: hidden; visibility: hidden; }\\n.CodeMirror-measure pre { position: static; }\\n.CodeMirror div.CodeMirror-cursor { position: absolute; visibility: hidden; border-right: none; width: 0px; }\\n.CodeMirror div.CodeMirror-cursor { visibility: hidden; }\\n.CodeMirror-focused div.CodeMirror-cursor { visibility: inherit; }\\n.cm-searching { background: rgba(255, 255, 0, 0.4); }\\nspan.cm-underlined { text-decoration: underline; }\\nspan.cm-strikethrough { text-decoration: line-through; }\\n.cm-tw-syntaxerror { color: rgb(255, 255, 255); background-color: rgb(153, 0, 0); }\\n.cm-tw-deleted { text-decoration: line-through; }\\n.cm-tw-header5 { font-weight: 700; }\\n.cm-tw-listitem:first-child { padding-left: 10px; }\\n.cm-tw-box { border-style: solid; border-right-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-color: inherit; border-top-width: 0px !important; }\\n.cm-tw-underline { text-decoration: underline; }\\n@media print {\\n  .CodeMirror div.CodeMirror-cursor { visibility: hidden; }\\n}\\n\\n\\n:root {\\n    --primary-color: #37352f;\\n    --bg-color: #ffffff;\\n    --bg-color-dark: #f7f6f3;\\n    --dark-trait: #e9e9e7;\\n    --light-trait-100: #ecedec;\\n    --light-trait-200: #c70000;\\n    --light-trait-300: #37352f;\\n    --light-trait-400: #f7f6f3;\\n    --text-color: #37352f;\\n    --text-color-secondary: #73726e;\\n    --text-highlight-color: #fff;\\n    --text-highlight-bg: rgba(var(--primary-color-rgb), 0.3);\\n    --select-text-bg-color: #c0e5f4;\\n\\t--search-select-text-color:#448361;\\n    --search-select-bg-color: #edf3ec;\\n    --code-color: #9a6e3a;\\n    --border-radius: 4px;\\n    --font-size: 16px;\\n    --font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Helvetica, \\\"Apple Color Emoji\\\", Arial, sans-serif, \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";\\n    --monospace: 'SF Mono Medium', 'Fira Code', 'Cousine', 'Consolas', monospace;\\n    --heading-char-color: var(--light-trait-400);\\n    --color-popover-bg-color: var(--text-color);\\n    --rawblock-edit-panel-bd: var(--bg-color-dark);\\n    --control-text-color: #72706b;\\n    --meta-content-color: var(--primary-color);\\n    --primary-btn-border-color: var(--primary-color);\\n    --side-bar-bg-color: var(--bg-color-dark);\\n    --item-hover-bg-color: #e8e7e4;\\n    --active-file-bg-color: #e8e7e4;\\n    --active-file-border-color: var(--bg-color);\\n    --window-border: 1px solid var(--bg-color);\\n    --focus-ring-color: transparent;\\n}\\n\\nhtml {\\n    font-size: var(--font-size);\\n}\\n\\nbody {\\n    font-family: var(--font-family);\\n    -webkit-font-smoothing: antialiased;\\n    color: var(--text-color);\\n    line-height: 1.6;\\n}\\n\\ncode {\\n    color: #ec5757;\\n    background-color: #eeedeb;\\n    padding: 0 2px 0 2px;\\n}\\n\\n#write {\\n    max-width: 860px;\\n    margin: 0 auto;\\n    padding: 30px;\\n    padding-bottom: 100px;\\n}\\n\\n@media only screen and (min-width: 1400px) {\\n    #write {\\n        max-width: 1024px;\\n    }\\n}\\n\\n@media only screen and (min-width: 1800px) {\\n    #write {\\n        max-width: 1200px;\\n    }\\n}\\n\\n#write>ul:first-child, #write>ol:first-child {\\n    margin-top: 30px;\\n}\\n\\na {\\n    color: var(--primary-color);\\n}\\n\\nh1, h2, h3, h4, h5, h6 {\\n    position: relative;\\n    margin-top: 2rem;\\n    margin-bottom: 1rem;\\n    font-weight: 700;\\n    line-height: 1.4;\\n    cursor: text;\\n}\\n\\nh1:hover a.anchor, h2:hover a.anchor, h3:hover a.anchor, h4:hover a.anchor, h5:hover a.anchor, h6:hover a.anchor {\\n    text-decoration: none;\\n}\\n\\nh1 tt, h1 code, h2 tt, h2 code, h3 tt, h3 code, h4 tt, h4 code, h5 tt, h5 code, h6 tt, h6 code {\\n    font-size: inherit;\\n}\\n\\nh1 {\\n    padding-bottom: 0.3em;\\n    font-size: 2.2em;\\n    line-height: 1.3;\\n}\\n\\nh2 {\\n    padding-bottom: 0.3em;\\n    font-size: 1.75em;\\n    line-height: 1.225;\\n}\\n\\nh3 {\\n    font-size: 1.4em;\\n    line-height: 1.43;\\n}\\n\\nh4 {\\n    font-size: 1.2em;\\n}\\n\\nh5 {\\n    font-size: 1em;\\n}\\n\\nh6 {\\n    font-size: 1em;\\n    color: var(--light-trait-300);\\n}\\n\\np, blockquote, ul, ol, dl, table {\\n    margin: 0.8em 0;\\n}\\n\\nli>ol, li>ul {\\n    margin: 0 0;\\n}\\n\\nhr {\\n    background-color: var(--light-trait-100);\\n    height: 1.5px;\\n    border: none\\n}\\n\\na,\\n.md-def-url {\\n    color: var(--text-color);\\n    text-decoration: none;\\n    border-bottom:0.05em solid;\\n    border-color: #37352f;\\n    opacity:0.6;\\n    transition: all .1s ease-in; \\n}\\n\\na:hover {\\n    text-decoration: none;\\n    opacity:1;\\n}\\n\\nsup.md-footnote {\\n    background-color: var(--light-trait-400);\\n    color: #888884;\\n}\\n\\nli p.first {\\n    display: inline-block;\\n}\\n\\nul, ol {\\n    padding-left: 30px;\\n}\\n\\nul:first-child, ol:first-child {\\n    margin-top: 0.35%;\\n}\\n\\nul:last-child, ol:last-child {\\n    margin-bottom: 0;\\n}\\n\\nmark, .ty-file-search-match-text, .md-search-hit {\\n    background: #fdebec;\\n\\tcolor: #d44c47;\\n}\\n\\nmark {\\n    border-radius: 4px;\\n    color: #402c1b;\\n    font-weight: inherit;\\n    background-color: #fdecc8;\\n    padding-left: 4px;\\n    padding-right: 4px;\\n    padding-top: 2px;\\n    padding-bottom: 2px;\\n    margin-left: 2px;\\n    margin-right: 2px;\\n}\\n\\n.md-search-hit * {\\n    color: var(--search-select-text-color);\\n}\\n\\n/* Search highlight */\\n.cm-search-hit.CodeMirror-selectedtext, .md-search-hit.md-search-select, .md-search-select {\\n    outline: 0px solid var(--search-select-text-color);\\n}\\n\\n.outline-item.select, .ty-search-item-line.select, .ty-search-item.select {\\n    outline-width: 2px;\\n}\\n\\n.outline-item.select {\\n    outline-offset: 0px;\\n}\\n\\nblockquote {\\n    margin-left: 1.75px;\\n    margin-right: 0px;\\n    border-left: 4px solid var(--text-color);\\n    padding: 10px 14px 7px 22px;\\n}\\n\\nblockquote blockquote {\\n    padding-right: 0;\\n}\\n\\ntable {\\n    padding: 0;\\n    word-break: initial;\\n}\\n\\ntable tr {\\n    border-top: 1px solid var(--dark-trait);\\n    margin: 0;\\n    padding: 0;\\n}\\n\\ntable tr th {\\n    font-weight: bold;\\n    border: 1px solid var(--dark-trait);\\n    border-bottom: 0;\\n    margin: 0;\\n    padding: 6px 13px;\\n}\\n\\ntable tr td {\\n    border: 1px solid var(--dark-trait);\\n    margin: 0;\\n    padding: 6px 13px;\\n}\\n\\ntable tr th:first-child, table tr td:first-child {\\n    margin-top: 0;\\n}\\n\\ntable tr th:last-child, table tr td:last-child {\\n    margin-bottom: 0;\\n}\\n\\n\\nkbd {\\n    font-size: 0.875rem;\\n    background: var(--bg-color-dark);\\n    border: 1px solid var(--dark-trait);\\n    box-shadow: 0 2px 0 var(--dark-trait);\\n    color: var(--text-color-secondary);\\n}\\n\\n.md-fences, code, tt {\\n    border: none;\\n    background-color: #f7f6f3;\\n    border-radius: var(--border-radius);\\n    padding: 2px 4px 0px 4px;\\n    font-size: 0.975em;\\n    font-weight: medium;\\n    font-family: var(--monospace)\\n}\\n.md-fences {\\n    margin-bottom: 15px;\\n    margin-top: 15px;\\n    padding-top: 8px;\\n    padding-bottom: 6px;\\n}\\n\\n#write pre.md-meta-block {\\n    padding: 1rem;\\n    font-size: 85%;\\n    line-height: 1.45;\\n    background-color: var(--bg-color-dark);\\n    border: 0;\\n    border-radius: var(--border-radius);\\n    color: var(--text-color-secondary);\\n    margin-top: 0 !important;\\n}\\n\\n#write .mathjax-block .md-rawblock-tooltip {\\n    border-top-left-radius: var(--border-radius);\\n    border-top-right-radius: var(--border-radius);\\n}\\n\\n#write .mathjax-block .md-math-container {\\n    border-top-left-radius: var(--border-radius);\\n    border-bottom-right-radius: var(--border-radius);\\n    border-bottom-left-radius: var(--border-radius);\\n}\\n\\n#write .md-mathblock-panel .md-rawblock-control:first-of-type {\\n    border-top-left-radius: var(--border-radius);\\n}\\n\\n.md-mathjax-midline {\\n    background-color: var(--bg-color);\\n    color: var(--text-color);\\n}\\n\\n.md-inline-math script {\\n    color: var(--code-color);\\n}\\n\\n.CodeMirror-lines {\\n    padding-left: 4px;\\n}\\n\\n.code-tooltip {\\n    box-shadow: none;\\n    border-radius: var(--border-radius);\\n}\\n\\n#write .code-tooltip {\\n    bottom: initial;\\n    top: 100%;\\n    left: initial;\\n    right: -1px;\\n    background: var(--bg-color-dark);\\n    border: 1px solid var(--dark-trait);\\n    border-top-left-radius: 0;\\n    border-top-right-radius: 0;\\n    border-top: 0;\\n    font-family: var(--monospace);\\n}\\n\\n#write .md-mathblock-panel .code-tooltip {\\n    right: 0;\\n    border: none;\\n}\\n\\n/* TODO */\\n#write .md-task-list-item>input {\\n    -webkit-appearance: initial;\\n    display: inline-block;\\n    text-align: center;\\n    vertical-align: middle;\\n    position: absolute;\\n    border: 1px solid var(--text-color);\\n    /* border-radius: 100%; */\\n    margin-left: -1.45rem;\\n    height: 0.95rem;\\n    width: 0.95rem;\\n    transition: all 0.35s;\\n}\\n\\n#write .md-task-list-item>input:focus {\\n    outline: none;\\n    box-shadow: none;\\n}\\n\\n#write .md-task-list-item>input[checked] {\\n    background: #2eaadc;\\n    border: 1px solid #2eaadc;\\n    text-decoration: line-through;\\n}\\n\\n#write .md-task-list-item>input[checked]::before {\\n    display: inline-block;\\n    vertical-align: middle;\\n    content: '✓';\\n    position: absolute;\\n    margin-top: 0.05rem;\\n    top: 0;\\n    left: 0;\\n    height: 100%;\\n    width: 100%;\\n    text-align: absolute;\\n    color: var(--bg-color);\\n    font-size: 0.75em;\\n    font-weight: 760;\\n}\\n\\n#write .md-task-list-item>input[checked]::after {\\n    text-decoration: line-through;\\n}\\n\\n/* TODO */\\n.md-image>.md-meta {\\n    border-radius: var(--border-radius);\\n    padding: 2px 0px 0px 4px;\\n    font-size: 0.9em;\\n    color: inherit;\\n}\\n\\n.md-toc {\\n    margin-top: 20px;\\n    padding-bottom: 20px;\\n}\\n\\n/* Source mode */\\n.CodeMirror.cm-s-typora-default *, .cm-s-typora-default * {\\n    background: inherit;\\n    color: var(--text-color);\\n    font-family: var(--monospace);\\n    font-size: var(--font-size) !important;\\n    font-style: normal;\\n    font-weight: medium;\\n}\\n\\n.CodeMirror.cm-s-typora-default div.CodeMirror-cursor {\\n    border-left: 2px solid var(--text-color);\\n}\\n\\n.sidebar-tabs {\\n    border-bottom: none;\\n}\\n\\n.outline-expander {\\n    width: 1.5rem;\\n    vertical-align: initial;\\n}\\n\\n.outline-expander:before, .outline-expander:hover:before, .outline-item-open>.outline-item>.outline-expander:before, .outline-item-open>.outline-item>.outline-expander:hover:before {\\n    content: \\\"\\\\f125\\\";\\n    transition: transform 125ms ease-in-out;\\n}\\n\\n.outline-item-open>.outline-item>.outline-expander:hover:before, .outline-item-open>.outline-item>.outline-expander:before {\\n    transform: rotate(90deg);\\n}\\n\\n.outline-label:hover {\\n    text-decoration: none;\\n}\\n\\n#toc-dropmenu {\\n    background: var(--bg-color-dark);\\n}\\n\\n#toc-dropmenu .outline-title {\\n    font-size: 1rem;\\n    text-transform: uppercase;\\n}\\n\\n.dropdown-menu .divider {\\n    display: none;\\n}\\n\\n.context-menu {\\n    border: none!important;\\n    backdrop-filter: saturate(180%) blur(20px) brightness(1.1);\\n    background-color: var(--bg-color-dark);\\n    box-shadow: 0 25.6px 57.6px 0 rgba(0, 0, 0, .22), 0 4.8px 14.4px 0 rgba(0, 0, 0, .18)!important;\\n}\\n\\n.file-node-background {\\n    height: 31px;\\n}\\n\\n.file-node-content:hover .file-node-icon, .file-node-content:hover .file-node-open-state {\\n    visibility: visible;\\n}\\n\\n.file-node-icon {\\n    margin-right: 8px;\\n}\\n\\n.file-library-node:not(.file-node-root):focus>.file-node-content {\\n    outline: none;\\n}\\n\\n/* New file animation */\\n.blink-area {\\n    animation: none;\\n}\\n\\n.file-list-item-summary {\\n    font-size: var(--font-size);\\n    font-family: var(--font-family);\\n}\\n\\n#md-searchpanel input {\\n    border-radius: var(--border-radius);\\n    box-shadow: none;\\n}\\n\\n#md-searchpanel input:focus {\\n    box-shadow: none;\\n    border-color: var(--meta-content-color);\\n}\\n\\n#md-searchpanel .search-type-selection {\\n    width: auto;\\n}\\n\\n#md-searchpanel .btn:not(.close-btn):hover {\\n    box-shadow: none;\\n}\\n\\n.mac-seamless-mode #typora-sidebar {\\n    background-color: var(--side-bar-bg-color);\\n}\\n\\n#md-notification .btn {\\n    border: 0;\\n}\\n\\n/* CODE HIGHLIGHT */\\npre.CodeMirror-line {\\n    color: #999999!important\\n}\\n\\n.cm-variable {\\n    color: #37352f!important;\\n}\\n\\n.cm-keyword {\\n    color: #0277aa !important\\n}\\n\\n.cm-tag {\\n    color: #ff5a5a!important\\n}\\n\\n.cm-variable-3 {\\n    color: #48ff00!important;\\n}\\n\\n.cm-bracket, .cm-error {\\n    color: #ff5a5a!important\\n}\\n\\n.cm-attribute {\\n    color: #0277aa!important;\\n}\\n\\n.cm-def {\\n    color: #dc4a68!important;\\n}\\n\\n.cm-comment {\\n    color: #708090!important;\\n}\\n\\n.cm-string {\\n    color: #669900!important;\\n    font-variant-ligatures: common-ligatures!important;\\n}\\n\\n.cm-tag:not() {\\n    font-weight: 700;\\n}\\n\\n.cm-operator {\\n    color: #9a6e3b!important;\\n}\\n\\n.cm-number {\\n    color: #990055!important;\\n}\\n\\n.cm-meta {\\n    color: var(--text-color) !important;\\n    font-weight: 700!important;\\n}\\n\\n.cm-atom { color: #845dc4; }\\n\\n.cm-builtin {\\n    color: #669900 !important;\\n}\\n\\n.cm-property {\\n    color: var(--text-color) !important;\\n}\\n\\n.cm-variable-2 {\\n    color: var(--text-color) !important;\\n}\\n\\n.cm-variable-3 {\\n    color: #845dc4;\\n}\\n\\n/* CODE HIGHLIGHT */\\n.file-tree-node.active>.file-node-background {\\n    background-color: var(--active-file-bg-color);\\n    border-left: 0px solid #dad9d6!important;\\n    border-color: #dad9d6!important;\\n    background-color: #e8e7e4!important;\\n}\\n\\n.CodeMirror-gutters {\\n    border-right: 1px solid #f1f3f450;\\n    background: inherit;\\n    white-space: nowrap;\\n}\\n\\n.ty-footer, .sidebar-footer, footer {\\n    backdrop-filter: saturate(120%) blur(20px) brightness(0.85);\\n    border: none!important;\\n    background: none;\\n    background-color: #f7f6f3;\\n}\\n\\n.code-tooltip {\\n    border-radius: 4px;\\n    background-color: #313334;\\n    box-shadow: 0 25.6px 57.6px 0 rgba(0, 0, 0, .52), 0 4.8px 14.4px 0 rgba(0, 0, 0, .28)!important;\\n}\\n\\n#sidebar-files-menu {\\n    border-radius: 4px;\\n    border: none!important;\\n    box-shadow: 0 25.6px 57.6px 0 #f7f6f3, 0 4.8px 14.4px 0 rgba(0, 0, 0, .28);\\n}\\n\\n.code-tooltip.md-tooltip-hide.md-hover-tip {\\n    box-shadow: 0 25.6px 57.6px 0 rgba(0, 0, 0, .52), 0 4.8px 14.4px 0 rgba(0, 0, 0, .28);\\n}\\n\\n#typora-sidebar {\\n    border: none !important;\\n}\\n\\n#footer-word-count-info, #spell-check-panel {\\n    border: none!important;\\n    backdrop-filter: saturate(120%) blur(20px) brightness(0.85)!important;\\n    box-shadow: 0 25.6px 57.6px 0 rgba(0, 0, 0, .32), 0 4.8px 14.4px 0 rgba(0, 0, 0, .28)!important;\\n}\\n\\n/* Windows/Linux unibody mode */\\n.megamenu-content,\\n.megamenu-opened header {\\n    color:  var(--primary-color);\\n    background: var(--bg-color-dark);\\n}\\n\\n#recent-file-panel-action-btn {\\n    background: inherit;\\n    border: 1px var(--light-trait-300) solid;\\n}\\n\\n.megamenu-menu-panel table td:nth-child(1) {\\n    color: var(--text-color);\\n    background: var(--bg-color-dark);\\n}\\n\\n.megamenu-menu-panel table td:nth-child(2) {\\n    color: var(--text-color);\\n    background: var(--bg-color-dark);\\n}\\n\\n.megamenu-menu-panel tbody tr:hover td:nth-child(1) {\\n    color: var(--text-color);\\n    background: var( --active-file-bg-color);\\n}\\n\\n.megamenu-menu-panel tbody tr:hover td:nth-child(2) {\\n    color: var(--text-color);\\n    background: var( --active-file-bg-color);\\n}\\n\\n.megamenu-menu-panel input[type='text'] {\\n    background: inherit;\\n    border: 1px var(--control-text-color) solid;\\n}\\n\\n#recent-file-panel-action-btn {\\n    background: inherit;\\n}\\n\\n.megamenu-menu, .megamenu-content {\\n\\tbackground: var(--side-bar-bg-color);\\n\\tcolor: var(--text-color);\\n}\\n\\n#top-titlebar, #top-titlebar * {\\n    background: inherit;\\n\\tcolor: var(--text-color);\\n}\\n\\n.megamenu-menu-header #megamenu-menu-header-title:before {\\n\\tcolor:  var(--text-color);\\n}\\n\\nmegamenu-back-btn {\\n\\tcolor: var(--text-color);\\n\\tborder-color: var(--text-color);\\n}\\n\\n.megamenu-menu-header #megamenu-menu-header-title,\\n.megamenu-menu-header:hover,\\n.megamenu-menu-header:focus {\\n\\tcolor: inherit;\\n}\\n\\n.megamenu-menu-panel table tr:nth-child(2n + 1) {\\n    background-color:  var(--side-bar-bg-color);\\n}\\n\\n\\n</style><title>使用说明</title>\\n</head>\\n<body class='typora-export os-windows'><div class='typora-export-content'>\\n<div id='write'  class=''><blockquote><h1 id='前言'><span>前言</span></h1><p><span>使用说明有点长，请自行选择模块进行跳转阅读。本使用说明不仅写了dm盒子的一些事项，也一定程度上作了关于解析和断插的说明。推荐长按下方的目录索引章节然后在弹框选择打开网页——&gt;（会在浏览器打开并跳转到相应的章节，支持页面缩放）的方式进行阅读。</span></p></blockquote><div class='md-toc' mdtype='toc'><p class=\\\"md-toc-content\\\" role=\\\"list\\\"><span role=\\\"listitem\\\" class=\\\"md-toc-item md-toc-h1\\\" data-ref=\\\"n7\\\"><a class=\\\"md-toc-inner\\\" href=\\\"#何为dm盒子\\\">何为dm盒子</a></span><span role=\\\"listitem\\\" class=\\\"md-toc-item md-toc-h1\\\" data-ref=\\\"n25\\\"><a class=\\\"md-toc-inner\\\" href=\\\"#如何使用\\\">如何使用</a></span><span role=\\\"listitem\\\" class=\\\"md-toc-item md-toc-h2\\\" data-ref=\\\"n26\\\"><a class=\\\"md-toc-inner\\\" href=\\\"#x5公钥和json公钥\\\">x5公钥和json公钥</a></span><span role=\\\"listitem\\\" class=\\\"md-toc-item md-toc-h2\\\" data-ref=\\\"n29\\\"><a class=\\\"md-toc-inner\\\" href=\\\"#通免公钥\\\">通免公钥</a></span><span role=\\\"listitem\\\" class=\\\"md-toc-item md-toc-h2\\\" data-ref=\\\"n41\\\"><a class=\\\"md-toc-inner\\\" href=\\\"#断插公钥\\\">断插公钥</a></span><span role=\\\"listitem\\\" class=\\\"md-toc-item md-toc-h2\\\" data-ref=\\\"n44\\\"><a class=\\\"md-toc-inner\\\" href=\\\"#聚合函数新版已移除\\\">聚合函数【新版已移除】</a></span><span role=\\\"listitem\\\" class=\\\"md-toc-item md-toc-h2\\\" data-ref=\\\"n50\\\"><a class=\\\"md-toc-inner\\\" href=\\\"#飞传新\\\">飞传【新】</a></span><span role=\\\"listitem\\\" class=\\\"md-toc-item md-toc-h2\\\" data-ref=\\\"n298\\\"><a class=\\\"md-toc-inner\\\" href=\\\"#刷新公钥文件\\\">刷新公钥文件</a></span><span role=\\\"listitem\\\" class=\\\"md-toc-item md-toc-h1\\\" data-ref=\\\"n56\\\"><a class=\\\"md-toc-inner\\\" href=\\\"#公钥本质\\\">公钥本质</a></span><span role=\\\"listitem\\\" class=\\\"md-toc-item md-toc-h1\\\" data-ref=\\\"n84\\\"><a class=\\\"md-toc-inner\\\" href=\\\"#小白科普\\\">小白科普</a></span><span role=\\\"listitem\\\" class=\\\"md-toc-item md-toc-h2\\\" data-ref=\\\"n85\\\"><a class=\\\"md-toc-inner\\\" href=\\\"#何谓解析\\\">何谓解析</a></span><span role=\\\"listitem\\\" class=\\\"md-toc-item md-toc-h2\\\" data-ref=\\\"n126\\\"><a class=\\\"md-toc-inner\\\" href=\\\"#解析从哪来\\\">解析从哪来</a></span><span role=\\\"listitem\\\" class=\\\"md-toc-item md-toc-h2\\\" data-ref=\\\"n166\\\"><a class=\\\"md-toc-inner\\\" href=\\\"#一份普接清单\\\">一份普接清单</a></span><span role=\\\"listitem\\\" class=\\\"md-toc-item md-toc-h2\\\" data-ref=\\\"n189\\\"><a class=\\\"md-toc-inner\\\" href=\\\"#何谓断插------魔断\\\">何谓断插——&gt;魔断</a></span><span role=\\\"listitem\\\" class=\\\"md-toc-item md-toc-h2\\\" data-ref=\\\"n192\\\"><a class=\\\"md-toc-inner\\\" href=\\\"#魔断的使用\\\">魔断的使用</a></span><span role=\\\"listitem\\\" class=\\\"md-toc-item md-toc-h2\\\" data-ref=\\\"n203\\\"><a class=\\\"md-toc-inner\\\" href=\\\"#何谓cms模板\\\">何谓CMS模板</a></span><span role=\\\"listitem\\\" class=\\\"md-toc-item md-toc-h2\\\" data-ref=\\\"n219\\\"><a class=\\\"md-toc-inner\\\" href=\\\"#何谓断插类小程序\\\">何谓断插类小程序</a></span><span role=\\\"listitem\\\" class=\\\"md-toc-item md-toc-h2\\\" data-ref=\\\"n222\\\"><a class=\\\"md-toc-inner\\\" href=\\\"#何谓通免小程序\\\">何谓通免小程序</a></span><span role=\\\"listitem\\\" class=\\\"md-toc-item md-toc-h2\\\" data-ref=\\\"n224\\\"><a class=\\\"md-toc-inner\\\" href=\\\"#何谓免嗅小程序\\\">何谓免嗅小程序</a></span><span role=\\\"listitem\\\" class=\\\"md-toc-item md-toc-h1\\\" data-ref=\\\"n228\\\"><a class=\\\"md-toc-inner\\\" href=\\\"#隐藏操作\\\">隐藏操作</a></span><span role=\\\"listitem\\\" class=\\\"md-toc-item md-toc-h2\\\" data-ref=\\\"n229\\\"><a class=\\\"md-toc-inner\\\" href=\\\"#公钥与私钥\\\">公钥与私钥</a></span><span role=\\\"listitem\\\" class=\\\"md-toc-item md-toc-h2\\\" data-ref=\\\"n233\\\"><a class=\\\"md-toc-inner\\\" href=\\\"#飞瓜弹幕库\\\">飞瓜弹幕库</a></span><span role=\\\"listitem\\\" class=\\\"md-toc-item md-toc-h1\\\" data-ref=\\\"n258\\\"><a class=\\\"md-toc-inner\\\" href=\\\"#注意事项\\\">注意事项</a></span></p></div><p>&nbsp;</p><p>&nbsp;</p><h1 id='何为dm盒子'><span>何为dm盒子</span></h1><ul><li><p><span>dm盒子，又名弹幕盒子，内部封装了弹幕函数。</span></p></li><li><p><span>dm盒子只是一个收纳dm数据的盒子，不提供在线播放和地址采集功能。</span></p></li><li><p><span>dm盒子提供</span><code>公钥</code><span>可以让解析本身拥有从dm盒子获取数据的能力</span></p><ul><li><span>令所有断插类的小程序都能畅享弹幕——&gt;不再局限于个别的小程序</span></li><li><span>公钥对x5嗅探的普通接口和json接口都支持——&gt;解决优质x5无法使用问题</span></li></ul></li><li><p><span>dm盒子可以供外部小程序简单调用</span></p></li><li><p><span>dm盒子可以支持获取弹幕文件并以xml格式分享——方便在其他设备上支持加载弹幕的播放器上加载播放，例如“弹弹Play”</span></p></li></ul><p><span>如上所述，</span><strong><span>dm盒子打破了小程序之间的壁垒，让弹幕能在各个小程序自由流动</span></strong><span>，如此一来，弹幕功能也就不显得只是一个装饰性的功能了。推荐配合使用的断插类小程序有新番、搜狗Q、cms小程序等等。至于如何获取小程序，看这里：(部分规则由作者限时分享，不可强求~)</span></p><p><span>点击链接查看QQ频道帖子【小白初入门-新手入门，如何获取小程序】：</span><a href='https://qun.qq.com/qqweb/qunpro/share?_wv=3&amp;_wwv=128&amp;appChannel=share&amp;inviteCode=1wBvs1&amp;appChannel=share&amp;contentID=TjUA&amp;businessType=2&amp;from=246610&amp;biz=ka&amp;shareSource=5' target='_blank' class='url'>https://qun.qq.com/qqweb/qunpro/share?_wv=3&_wwv=128&appChannel=share&inviteCode=1wBvs1&appChannel=share&contentID=TjUA&businessType=2&from=246610&biz=ka&shareSource=5</a></p><p>&nbsp;</p><h1 id='如何使用'><span>如何使用</span></h1><h2 id='x5公钥和json公钥'><span>x5公钥和json公钥</span></h2><p><span>点击生成x5公钥和json公钥，按格式填写，添加了公钥的解析口将会复制到剪切板，点击魔断配置然后添加即可使用</span></p><p><span>使用添加了公钥的解析口去解析视频无视规则（特别注意必须关闭新番的弹幕开关；不支持魔断多线路），都可以获取弹幕数据</span></p><h2 id='通免公钥'><span>通免公钥</span></h2><p><span>通免公钥是一个能调取dm盒子数据的嗅探模式的动态解析模板</span></p><p><span>只需要</span><strong><span>替换</span></strong><span>现有通免小程序的动态解析的lazy即可。举个例子例如给1920通免小程序替换lazy：</span></p><p><img src=\\\"https://i0.hdslb.com/bfs/album/fa98f2386b7f7c73df0fc61d0ef0d90f240fed2f.png\\\" referrerpolicy=\\\"no-referrer\\\" alt=\\\"image-20220622235139668\\\"></p><p><span>成品小程序如下：</span></p><pre class=\\\"md-fences md-end-block ty-contain-cm modeLoaded\\\" spellcheck=\\\"false\\\" lang=\\\"text\\\"><div class=\\\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap\\\" lang=\\\"text\\\"><div style=\\\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 10.4px; left: 8px;\\\"><textarea autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" tabindex=\\\"0\\\" style=\\\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\\\"></textarea></div><div class=\\\"CodeMirror-scrollbar-filler\\\" cm-not-content=\\\"true\\\"></div><div class=\\\"CodeMirror-gutter-filler\\\" cm-not-content=\\\"true\\\"></div><div class=\\\"CodeMirror-scroll\\\" tabindex=\\\"-1\\\"><div class=\\\"CodeMirror-sizer\\\" style=\\\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\\\"><div style=\\\"position: relative; top: 0px;\\\"><div class=\\\"CodeMirror-lines\\\" role=\\\"presentation\\\"><div role=\\\"presentation\\\" style=\\\"position: relative; outline: none;\\\"><div class=\\\"CodeMirror-measure\\\"><span><span>​</span>x</span></div><div class=\\\"CodeMirror-measure\\\"></div><div style=\\\"position: relative; z-index: 1;\\\"></div><div class=\\\"CodeMirror-code\\\" role=\\\"presentation\\\"><div class=\\\"CodeMirror-activeline\\\" style=\\\"position: relative;\\\"><div class=\\\"CodeMirror-activeline-background CodeMirror-linebackground\\\"></div><div class=\\\"CodeMirror-gutter-background CodeMirror-activeline-gutter\\\" style=\\\"left: 0px; width: 0px;\\\"></div><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\">https://cmd.im/c465</span></pre></div><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"><span cm-text=\\\"\\\" cm-zwsp=\\\"\\\">\\n</span></span></pre><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\">小程序：1920pki</span></pre></div></div></div></div></div><div style=\\\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 74px;\\\"></div><div class=\\\"CodeMirror-gutters\\\" style=\\\"display: none; height: 74px;\\\"></div></div></div></pre><p><span>但是这个动态解析模板如果套在url加密的通免小程序那么将无法匹配到弹幕数据，例如影视工厂，如下图所示</span></p><p><img src=\\\"https://i0.hdslb.com/bfs/album/3338d8ce8a67e700bff0bde82579df37cdcc7d3f.png\\\" referrerpolicy=\\\"no-referrer\\\" alt=\\\"image-20220625091909591\\\"></p><p><span>但动态解析模板依旧可用，依旧会按照弹幕格式拼接链接返回预留的弹幕接口方便自己手动添加弹幕数据（请阅读隐藏操作-飞瓜弹幕库部分），非常适合优质切片路线的通免小程序，那么直接套就是了（如果不懂什么是切片，请阅读小白科普部分）。</span></p><p><mark><span>Tip：通免公钥套用的是通用匹配模板，对于需要大量请求参数比如UA、referer、cookie等的少部分视频嗅探出来的链接无法正常播放。香免暂时搞不定，先用匹配顶着。</span></mark><span>体现在上方小程序的就是芒果线路几乎不可播放，但并不是套这个动态解析芒果线路就无法播放，只是上方小程序的芒果线路所用解析，通用匹配无法嗅探得到可播放链接。像下方小程序就可以（比较不错了）：</span></p><pre class=\\\"md-fences md-end-block ty-contain-cm modeLoaded\\\" spellcheck=\\\"false\\\" lang=\\\"text\\\"><div class=\\\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap\\\" lang=\\\"text\\\"><div style=\\\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 10.4px; left: 8px;\\\"><textarea autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" tabindex=\\\"0\\\" style=\\\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\\\"></textarea></div><div class=\\\"CodeMirror-scrollbar-filler\\\" cm-not-content=\\\"true\\\"></div><div class=\\\"CodeMirror-gutter-filler\\\" cm-not-content=\\\"true\\\"></div><div class=\\\"CodeMirror-scroll\\\" tabindex=\\\"-1\\\"><div class=\\\"CodeMirror-sizer\\\" style=\\\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\\\"><div style=\\\"position: relative; top: 0px;\\\"><div class=\\\"CodeMirror-lines\\\" role=\\\"presentation\\\"><div role=\\\"presentation\\\" style=\\\"position: relative; outline: none;\\\"><div class=\\\"CodeMirror-measure\\\"><pre><span>xxxxxxxxxx</span></pre></div><div class=\\\"CodeMirror-measure\\\"></div><div style=\\\"position: relative; z-index: 1;\\\"></div><div class=\\\"CodeMirror-code\\\" role=\\\"presentation\\\"><div class=\\\"CodeMirror-activeline\\\" style=\\\"position: relative;\\\"><div class=\\\"CodeMirror-activeline-background CodeMirror-linebackground\\\"></div><div class=\\\"CodeMirror-gutter-background CodeMirror-activeline-gutter\\\" style=\\\"left: 0px; width: 0px;\\\"></div><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\">https://cmd.im/6fhk</span></pre></div><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"><span cm-text=\\\"\\\" cm-zwsp=\\\"\\\">\\n</span></span></pre><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\">小程序：ABmoviedmPKI</span></pre></div></div></div></div></div><div style=\\\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 74px;\\\"></div><div class=\\\"CodeMirror-gutters\\\" style=\\\"display: none; height: 74px;\\\"></div></div></div></pre><p>&nbsp;</p><h2 id='断插公钥'><span>断插公钥</span></h2><p><span>断插公钥是调用断插模式的动态解析模板。</span><mark><span>必须搭配x5公钥或者json公钥套壳的解析口使用才能获取弹幕数据否则就和普通的断插二级差不多，因为如果直接设置断插附加弹幕的模式那么就会和添加了公钥的解析口发生数据冲突，不如直接给接口添加公钥支持，何必让断插动态解析单独实现</span></mark><span>。与通免公钥同理，url加密的通免小程序那么将无法匹配到弹幕数据。此外断插公钥</span><strong><span>只有官方线路才会走断插</span></strong><span>，其余切片和直链线路都是嗅探。</span></p><p>&nbsp;</p><h2 id='聚合函数新版已移除'><span>聚合函数【新版已移除】</span></h2><p><span>json聚合函数，可以达到魔断多线路效果。因为和魔断多线路冲突，添加这个模块便捷生成聚合函数【和魔断一样只支持json】</span></p><p><span>只要按格式输入就可以了，逗号是中文的逗号，#也是中文的（虽然貌似没有区别）【注意：和json公钥同理，聚合函数生成后需要自行修改特殊json的取出url方式，详见公钥本质】</span></p><p><span>输入完后点确定生成的聚合函数会复制到剪贴板，再点击魔断配置快捷跳转粘贴在输入框点击保存即可添加添加聚合函数解析配置。</span></p><p><img src=\\\"https://i0.hdslb.com/bfs/album/bb5756c70dd143a7e9622dc40dd0517f3c6c9fb4.png\\\" referrerpolicy=\\\"no-referrer\\\" alt=\\\"image-20220625014919383\\\"></p><p>&nbsp;</p><h2 id='飞传新'><span>飞传【新】</span></h2><p><span>输入官网地址，即可获取弹幕文件并转换为xml格式弹幕文件快捷分享到其它设备支持加载弹幕的播放器进行播放。</span></p><p><span>官网地址建议不要携带后面的参数：</span></p><p><span>例如这样一个官网链接：</span><a href='https://www.iqiyi.com/v_1ynlpqbaip0.html?vfrm=pcw_home&amp;vfrmblk=B&amp;vfrmrst=fcs_0_p11' target='_blank' class='url'>https://www.iqiyi.com/v_1ynlpqbaip0.html?vfrm=pcw_home&vfrmblk=B&vfrmrst=fcs_0_p11</a></p><p><span>你应该输入的是：</span><a href='https://www.iqiyi.com/v_1ynlpqbaip0.html' target='_blank' class='url'>https://www.iqiyi.com/v_1ynlpqbaip0.html</a></p><p><span>推荐使用</span><strong><span>弹弹Play播放器</span></strong><span>，有着完善的弹幕过滤功能，如下：</span></p><p><span>重要的参数设置示例，</span></p><p><img src=\\\"https://i0.hdslb.com/bfs/album/5bc8fee999ae2319c537e2b67fe183907e02f0bc.png\\\" referrerpolicy=\\\"no-referrer\\\"></p><p><img src=\\\"https://i0.hdslb.com/bfs/album/8c6934ec17bef01ccd3b106ed1cae09fdf11e511.png\\\" referrerpolicy=\\\"no-referrer\\\"></p><p><span>因为获取到的弹幕数量非常多，因此这个设置非常必要！</span></p><blockquote><p><span>最新版的弹弹Play支持串流播放，所以推荐阿里云盘小白羊保存视频到网盘并设置弹弹Play为默认第三方播放器，那么就可以不需要下载视频到本地，而直接网盘播放并加载弹幕</span></p><p><span>【附：弹弹Play默认支持一些动漫站、腾讯、奇异、bili和bili漫游弹幕，其中腾讯和奇异需要手动输入网址，哔哩可以直接搜索】</span></p></blockquote><h2 id='刷新公钥文件'><span>刷新公钥文件</span></h2><p><span>公钥的远程代码基于远程，如果发生变动可能影响使用，这时候可以使用点击dm盒子的首页欢迎图案即可清除缓存</span></p><p><img src=\\\"https://i0.hdslb.com/bfs/album/bc76b862fcc2d9646fca87e972f4f0f54ff9599b.png\\\" referrerpolicy=\\\"no-referrer\\\" alt=\\\"image-20220625011929626\\\"></p><p><span>其实不用理会，因为一般情况下不会动远程文件，而且很大可能未来很长很长一段时间都不会有更新，，</span></p><p><span>如若清除缓存后发现通免小程序没有刷新，可以前往使用了通免公钥的相应小程序长按小程序标题，然后在弹框中选择清除缓存即可。</span></p><p><img src=\\\"https://i0.hdslb.com/bfs/album/219314f73547769adc531dfd3956b22b8a6b6443.png\\\" referrerpolicy=\\\"no-referrer\\\" alt=\\\"image-20220625233444063\\\"></p><h1 id='公钥本质'><span>公钥本质</span></h1><p><span>其实所谓公钥就是专门为解析调用dm盒子内弹幕数据而写的一个函数，分为x5和json函数，那么知道了公钥本质之后完全不需要借助dm盒子自带的生成公钥模块，可以自己填充接口或许会更便捷。</span><mark><span>只需要记住一点，dm盒子只是一个收纳dm数据的盒子！</span></mark><span>公钥壳子如下：</span></p><ul><li><p><span>x5公钥</span></p><pre class=\\\"md-fences md-end-block ty-contain-cm modeLoaded\\\" spellcheck=\\\"false\\\" lang=\\\"js\\\"><div class=\\\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap\\\" lang=\\\"js\\\"><div style=\\\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 10.4px; left: 8px;\\\"><textarea autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" tabindex=\\\"0\\\" style=\\\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\\\"></textarea></div><div class=\\\"CodeMirror-scrollbar-filler\\\" cm-not-content=\\\"true\\\"></div><div class=\\\"CodeMirror-gutter-filler\\\" cm-not-content=\\\"true\\\"></div><div class=\\\"CodeMirror-scroll\\\" tabindex=\\\"-1\\\"><div class=\\\"CodeMirror-sizer\\\" style=\\\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\\\"><div style=\\\"position: relative; top: 0px;\\\"><div class=\\\"CodeMirror-lines\\\" role=\\\"presentation\\\"><div role=\\\"presentation\\\" style=\\\"position: relative; outline: none;\\\"><div class=\\\"CodeMirror-measure\\\"></div><div class=\\\"CodeMirror-measure\\\"></div><div style=\\\"position: relative; z-index: 1;\\\"></div><div class=\\\"CodeMirror-code\\\" role=\\\"presentation\\\" style=\\\"\\\"><div class=\\\"CodeMirror-activeline\\\" style=\\\"position: relative;\\\"><div class=\\\"CodeMirror-activeline-background CodeMirror-linebackground\\\"></div><div class=\\\"CodeMirror-gutter-background CodeMirror-activeline-gutter\\\" style=\\\"left: 0px; width: 0px;\\\"></div><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"><span class=\\\"cm-variable\\\">修改★名称★</span></span></pre></div><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"><span class=\\\"cm-keyword\\\">function</span> (<span class=\\\"cm-def\\\">vipUrl</span>) {</span></pre><div class=\\\"\\\" style=\\\"position: relative;\\\"><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"> &nbsp; &nbsp;<span class=\\\"cm-keyword\\\">try</span> {</span></pre></div><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\\\"cm-keyword\\\">var</span> <span class=\\\"cm-def\\\">originUrl</span> <span class=\\\"cm-operator\\\">=</span> <span class=\\\"cm-string\\\">'解析接口'</span><span class=\\\"cm-operator\\\">+</span><span class=\\\"cm-variable-2\\\">vipUrl</span>;</span></pre><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\\\"cm-variable\\\">rc</span>(<span class=\\\"cm-string\\\">\\\"https://chenying2.coding.net/p/hiker/d/jsWithdm/git/raw/master/x5PKI.js\\\"</span>, <span class=\\\"cm-number\\\">24</span>);</span></pre><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\\\"cm-keyword\\\">return</span> <span class=\\\"cm-variable\\\">getFor</span>(<span class=\\\"cm-variable-2\\\">vipUrl</span>,<span class=\\\"cm-variable-2\\\">originUrl</span>);</span></pre><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"> &nbsp;  }</span></pre><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"> &nbsp; &nbsp;<span class=\\\"cm-keyword\\\">catch</span> (<span class=\\\"cm-def\\\">e</span>) {</span></pre><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\\\"cm-keyword\\\">return</span> <span class=\\\"cm-string\\\">\\\"\\\"</span>;</span></pre><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"> &nbsp;  }</span></pre><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\">}</span></pre></div></div></div></div></div><div style=\\\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 273px;\\\"></div><div class=\\\"CodeMirror-gutters\\\" style=\\\"display: none; height: 273px;\\\"></div></div></div></pre><p>&nbsp;</p></li><li><p><span>普适性json公钥</span></p><pre class=\\\"md-fences md-end-block ty-contain-cm modeLoaded\\\" spellcheck=\\\"false\\\" lang=\\\"js\\\"><div class=\\\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap\\\" lang=\\\"js\\\"><div style=\\\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 10.4px; left: 8px;\\\"><textarea autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" tabindex=\\\"0\\\" style=\\\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\\\"></textarea></div><div class=\\\"CodeMirror-scrollbar-filler\\\" cm-not-content=\\\"true\\\"></div><div class=\\\"CodeMirror-gutter-filler\\\" cm-not-content=\\\"true\\\"></div><div class=\\\"CodeMirror-scroll\\\" tabindex=\\\"-1\\\"><div class=\\\"CodeMirror-sizer\\\" style=\\\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\\\"><div style=\\\"position: relative; top: 0px;\\\"><div class=\\\"CodeMirror-lines\\\" role=\\\"presentation\\\"><div role=\\\"presentation\\\" style=\\\"position: relative; outline: none;\\\"><div class=\\\"CodeMirror-measure\\\"><pre>x</pre></div><div class=\\\"CodeMirror-measure\\\"></div><div style=\\\"position: relative; z-index: 1;\\\"></div><div class=\\\"CodeMirror-code\\\" role=\\\"presentation\\\" style=\\\"\\\"><div class=\\\"CodeMirror-activeline\\\" style=\\\"position: relative;\\\"><div class=\\\"CodeMirror-activeline-background CodeMirror-linebackground\\\"></div><div class=\\\"CodeMirror-gutter-background CodeMirror-activeline-gutter\\\" style=\\\"left: 0px; width: 0px;\\\"></div><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"><span class=\\\"cm-variable\\\">修改★名称★</span></span></pre></div><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"><span class=\\\"cm-keyword\\\">function</span> (<span class=\\\"cm-def\\\">vipUrl</span>) {</span></pre><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"> &nbsp; &nbsp;<span class=\\\"cm-keyword\\\">try</span> {</span></pre><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"> <span class=\\\"cm-keyword\\\">var</span> <span class=\\\"cm-def\\\">bfurl</span> <span class=\\\"cm-operator\\\">=</span> <span class=\\\"cm-variable\\\">JSON</span>.<span class=\\\"cm-property\\\">parse</span>(<span class=\\\"cm-variable\\\">request</span>(<span class=\\\"cm-string\\\">\\\"解析接口\\\"</span> <span class=\\\"cm-operator\\\">+</span> <span class=\\\"cm-variable-2\\\">vipUrl</span>, {</span></pre><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\\\"cm-property\\\">timeout</span>: <span class=\\\"cm-number\\\">5000</span></span></pre><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"> &nbsp; &nbsp; &nbsp;  })).<span class=\\\"cm-property\\\">url</span>;</span></pre><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\\\"cm-variable\\\">rc</span>(<span class=\\\"cm-string\\\">\\\"https://chenying2.coding.net/p/hiker/d/jsWithdm/git/raw/master/jsonPKI.js\\\"</span>, <span class=\\\"cm-number\\\">24</span>);</span></pre><div class=\\\"\\\" style=\\\"position: relative;\\\"><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\\\"cm-keyword\\\">return</span> <span class=\\\"cm-variable\\\">getFor</span>(<span class=\\\"cm-variable-2\\\">vipUrl</span>,<span class=\\\"cm-variable-2\\\">bfurl</span>)<span class=\\\"cm-operator\\\">+</span><span class=\\\"cm-string\\\">\\\";{User-Agent@''&amp;&amp;Referer@''}\\\"</span>;</span></pre></div><div class=\\\"\\\" style=\\\"position: relative;\\\"><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"> &nbsp;  }</span></pre></div><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"> &nbsp; &nbsp;<span class=\\\"cm-keyword\\\">catch</span> (<span class=\\\"cm-def\\\">e</span>) {</span></pre><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\\\"cm-keyword\\\">return</span> <span class=\\\"cm-string\\\">\\\"\\\"</span>;</span></pre><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"> &nbsp;  }</span></pre><div class=\\\"\\\" style=\\\"position: relative;\\\"><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\">}</span></pre></div></div></div></div></div></div><div style=\\\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 322px;\\\"></div><div class=\\\"CodeMirror-gutters\\\" style=\\\"display: none; height: 322px;\\\"></div></div></div></pre><p><span>普适性json公钥针对大部分的json解析，json解析返回的数据大部分都可以通过这个公钥取出播放地址,具体情况具体分析。但不管如何，只要记住修改bfurl变量即可</span></p><p><img src=\\\"https://i0.hdslb.com/bfs/album/13a46e28ed5729bd2bedc0e07076416859c5ed35.png\\\" referrerpolicy=\\\"no-referrer\\\" alt=\\\"image-20220622085914219\\\"></p><p><span>举个比较综合的例子，如下</span></p><pre class=\\\"md-fences md-end-block ty-contain-cm modeLoaded\\\" spellcheck=\\\"false\\\" lang=\\\"js\\\"><div class=\\\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap\\\" lang=\\\"js\\\"><div style=\\\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 10.4px; left: 8px;\\\"><textarea autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" tabindex=\\\"0\\\" style=\\\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\\\"></textarea></div><div class=\\\"CodeMirror-scrollbar-filler\\\" cm-not-content=\\\"true\\\"></div><div class=\\\"CodeMirror-gutter-filler\\\" cm-not-content=\\\"true\\\"></div><div class=\\\"CodeMirror-scroll\\\" tabindex=\\\"-1\\\"><div class=\\\"CodeMirror-sizer\\\" style=\\\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\\\"><div style=\\\"position: relative; top: 0px;\\\"><div class=\\\"CodeMirror-lines\\\" role=\\\"presentation\\\"><div role=\\\"presentation\\\" style=\\\"position: relative; outline: none;\\\"><div class=\\\"CodeMirror-measure\\\"><pre><span>xxxxxxxxxx</span></pre></div><div class=\\\"CodeMirror-measure\\\"></div><div style=\\\"position: relative; z-index: 1;\\\"></div><div class=\\\"CodeMirror-code\\\" role=\\\"presentation\\\"><div class=\\\"CodeMirror-activeline\\\" style=\\\"position: relative;\\\"><div class=\\\"CodeMirror-activeline-background CodeMirror-linebackground\\\"></div><div class=\\\"CodeMirror-gutter-background CodeMirror-activeline-gutter\\\" style=\\\"left: 0px; width: 0px;\\\"></div><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"><span class=\\\"cm-keyword\\\">var</span> <span class=\\\"cm-def\\\">bfurl</span> <span class=\\\"cm-operator\\\">=</span> <span class=\\\"cm-variable\\\">JSON</span>.<span class=\\\"cm-property\\\">parse</span>(<span class=\\\"cm-variable\\\">request</span>(<span class=\\\"cm-string\\\">\\\"解析口\\\"</span> <span class=\\\"cm-operator\\\">+</span> <span class=\\\"cm-variable\\\">vipUrl</span>, {<span class=\\\"cm-property\\\">headers</span>: {<span class=\\\"cm-string cm-property\\\">\\\"User-Agent\\\"</span>: <span class=\\\"cm-string\\\">\\\"例如，Dart/2.14 (dart:io)\\\"</span>,<span class=\\\"cm-string cm-property\\\">\\\"referer\\\"</span>: <span class=\\\"cm-string\\\">\\\"大概率是网站域名\\\"</span>}})).<span class=\\\"cm-property\\\">data</span>.<span class=\\\"cm-property\\\">url</span>;</span></pre></div></div></div></div></div></div><div style=\\\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 50px;\\\"></div><div class=\\\"CodeMirror-gutters\\\" style=\\\"display: none; height: 50px;\\\"></div></div></div></pre><p><span>header是携带的访问来源信息</span></p><ul><li><span>User-Agent：UA，简单的说就是让解析系统判断你是从哪个浏览器访问的网站页面，更多请自行百度</span></li><li><span>除了UA，还有Referer参数：即来源，简单的说就是让解析系统判断你是从哪里访问的网页，比如是不是从自家网站进行的访问和数据请求</span></li></ul><p><code>JSON.parse(request(&quot;解析口&quot; + vipUrl, {headers: {&quot;User-Agent&quot;: &quot;例如，Dart/2.14 (dart:io)&quot;,&quot;referer&quot;: &quot;大概率是网站域名&quot;}}))</code><span>这一段字符串最终会解析得到json字符串，假设获得的是一段形如下方格式的json字符串：</span></p><pre class=\\\"md-fences md-end-block ty-contain-cm modeLoaded\\\" spellcheck=\\\"false\\\" lang=\\\"json\\\"><div class=\\\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap\\\" lang=\\\"json\\\"><div style=\\\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 10.4px; left: 8px;\\\"><textarea autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" tabindex=\\\"0\\\" style=\\\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\\\"></textarea></div><div class=\\\"CodeMirror-scrollbar-filler\\\" cm-not-content=\\\"true\\\"></div><div class=\\\"CodeMirror-gutter-filler\\\" cm-not-content=\\\"true\\\"></div><div class=\\\"CodeMirror-scroll\\\" tabindex=\\\"-1\\\"><div class=\\\"CodeMirror-sizer\\\" style=\\\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\\\"><div style=\\\"position: relative; top: 0px;\\\"><div class=\\\"CodeMirror-lines\\\" role=\\\"presentation\\\"><div role=\\\"presentation\\\" style=\\\"position: relative; outline: none;\\\"><div class=\\\"CodeMirror-measure\\\"><pre><span>xxxxxxxxxx</span></pre></div><div class=\\\"CodeMirror-measure\\\"></div><div style=\\\"position: relative; z-index: 1;\\\"></div><div class=\\\"CodeMirror-code\\\" role=\\\"presentation\\\" style=\\\"\\\"><div class=\\\"CodeMirror-activeline\\\" style=\\\"position: relative;\\\"><div class=\\\"CodeMirror-activeline-background CodeMirror-linebackground\\\"></div><div class=\\\"CodeMirror-gutter-background CodeMirror-activeline-gutter\\\" style=\\\"left: 0px; width: 0px;\\\"></div><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\">{</span></pre></div><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"> &nbsp; &nbsp;<span class=\\\"cm-string cm-property\\\">'code'</span>:<span class=\\\"cm-number\\\">200</span>,</span></pre><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"> &nbsp; &nbsp;<span class=\\\"cm-string cm-property\\\">'data'</span>:{</span></pre><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\\\"cm-string cm-property\\\">'url'</span>:<span class=\\\"cm-string\\\">'返回的播放链接，也是我们要取出来的播放链接'</span>,</span></pre><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"> &nbsp; &nbsp; &nbsp; &nbsp;<span class=\\\"cm-string cm-property\\\">'msg'</span>:<span class=\\\"cm-string\\\">'sucess，解析商或解析作者或解析购买者预先设定的消息'</span></span></pre><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"> &nbsp;  <span class=\\\"cm-tab\\\" role=\\\"presentation\\\" cm-text=\\\"\\t\\\">    </span>},</span></pre><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"> &nbsp; &nbsp;<span class=\\\"cm-string cm-property\\\">'type'</span>:<span class=\\\"cm-string\\\">'视频的格式类型，例如m3u8、mp4、flv等'</span>,</span></pre><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"> &nbsp; &nbsp;<span class=\\\"cm-string cm-property\\\">'player'</span>:<span class=\\\"cm-string\\\">'可以理解为推荐使用的播放器'</span></span></pre><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\">}</span></pre></div></div></div></div></div><div style=\\\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 223px;\\\"></div><div class=\\\"CodeMirror-gutters\\\" style=\\\"display: none; height: 223px;\\\"></div></div></div></pre><p><span>这一段返回的数据就是</span></p><pre class=\\\"md-fences md-end-block ty-contain-cm modeLoaded\\\" spellcheck=\\\"false\\\" lang=\\\"js\\\"><div class=\\\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap\\\" lang=\\\"js\\\"><div style=\\\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 10.4px; left: 8px;\\\"><textarea autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" tabindex=\\\"0\\\" style=\\\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\\\"></textarea></div><div class=\\\"CodeMirror-scrollbar-filler\\\" cm-not-content=\\\"true\\\"></div><div class=\\\"CodeMirror-gutter-filler\\\" cm-not-content=\\\"true\\\"></div><div class=\\\"CodeMirror-scroll\\\" tabindex=\\\"-1\\\"><div class=\\\"CodeMirror-sizer\\\" style=\\\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\\\"><div style=\\\"position: relative; top: 0px;\\\"><div class=\\\"CodeMirror-lines\\\" role=\\\"presentation\\\"><div role=\\\"presentation\\\" style=\\\"position: relative; outline: none;\\\"><div class=\\\"CodeMirror-measure\\\"><pre><span>xxxxxxxxxx</span></pre></div><div class=\\\"CodeMirror-measure\\\"></div><div style=\\\"position: relative; z-index: 1;\\\"></div><div class=\\\"CodeMirror-code\\\" role=\\\"presentation\\\"><div class=\\\"CodeMirror-activeline\\\" style=\\\"position: relative;\\\"><div class=\\\"CodeMirror-activeline-background CodeMirror-linebackground\\\"></div><div class=\\\"CodeMirror-gutter-background CodeMirror-activeline-gutter\\\" style=\\\"left: 0px; width: 0px;\\\"></div><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"><span class=\\\"cm-keyword\\\">var</span> <span class=\\\"cm-def\\\">bfurl</span> <span class=\\\"cm-operator\\\">=</span> <span class=\\\"cm-variable\\\">JSON</span>.<span class=\\\"cm-property\\\">parse</span>(<span class=\\\"cm-variable\\\">request</span>(<span class=\\\"cm-string\\\">\\\"解析口\\\"</span> <span class=\\\"cm-operator\\\">+</span> <span class=\\\"cm-variable\\\">vipUrl</span>, {<span class=\\\"cm-property\\\">headers</span>: {<span class=\\\"cm-string cm-property\\\">\\\"User-Agent\\\"</span>: <span class=\\\"cm-string\\\">\\\"例如，Dart/2.14 (dart:io)\\\"</span>,<span class=\\\"cm-string cm-property\\\">\\\"referer\\\"</span>: <span class=\\\"cm-string\\\">\\\"大概率是网站域名\\\"</span>}}))</span></pre></div></div></div></div></div></div><div style=\\\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 50px;\\\"></div><div class=\\\"CodeMirror-gutters\\\" style=\\\"display: none; height: 50px;\\\"></div></div></div></pre><p><span>然后从上方这一段数据中取出data中的url，通过对象</span><strong><span>&#39;.&#39;</span></strong><span>的方式获取，如下</span></p><pre class=\\\"md-fences md-end-block ty-contain-cm modeLoaded\\\" spellcheck=\\\"false\\\" lang=\\\"js\\\"><div class=\\\"CodeMirror cm-s-inner cm-s-null-scroll CodeMirror-wrap\\\" lang=\\\"js\\\"><div style=\\\"overflow: hidden; position: relative; width: 3px; height: 0px; top: 10.4px; left: 8px;\\\"><textarea autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" tabindex=\\\"0\\\" style=\\\"position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;\\\"></textarea></div><div class=\\\"CodeMirror-scrollbar-filler\\\" cm-not-content=\\\"true\\\"></div><div class=\\\"CodeMirror-gutter-filler\\\" cm-not-content=\\\"true\\\"></div><div class=\\\"CodeMirror-scroll\\\" tabindex=\\\"-1\\\"><div class=\\\"CodeMirror-sizer\\\" style=\\\"margin-left: 0px; margin-bottom: 0px; border-right-width: 0px; padding-right: 0px; padding-bottom: 0px;\\\"><div style=\\\"position: relative; top: 0px;\\\"><div class=\\\"CodeMirror-lines\\\" role=\\\"presentation\\\"><div role=\\\"presentation\\\" style=\\\"position: relative; outline: none;\\\"><div class=\\\"CodeMirror-measure\\\"><pre><span>xxxxxxxxxx</span></pre></div><div class=\\\"CodeMirror-measure\\\"></div><div style=\\\"position: relative; z-index: 1;\\\"></div><div class=\\\"CodeMirror-code\\\" role=\\\"presentation\\\"><div class=\\\"CodeMirror-activeline\\\" style=\\\"position: relative;\\\"><div class=\\\"CodeMirror-activeline-background CodeMirror-linebackground\\\"></div><div class=\\\"CodeMirror-gutter-background CodeMirror-activeline-gutter\\\" style=\\\"left: 0px; width: 0px;\\\"></div><pre class=\\\" CodeMirror-line \\\" role=\\\"presentation\\\"><span role=\\\"presentation\\\" style=\\\"padding-right: 0.1px;\\\"><span class=\\\"cm-variable\\\">url</span><span class=\\\"cm-operator\\\">=</span><span class=\\\"cm-variable\\\">bfurl</span>.<span class=\\\"cm-property\\\">data</span>.<span class=\\\"cm-property\\\">url</span></span></pre></div></div></div></div></div></div><div style=\\\"position: absolute; height: 0px; width: 1px; border-bottom: 0px solid transparent; top: 25px;\\\"></div><div class=\\\"CodeMirror-gutters\\\" style=\\\"display: none; height: 25px;\\\"></div></div></div></pre><p><span>那么如果将上述两步连起来写，就是上面的综合例子了。</span></p><p>&nbsp;</p></li></ul><h1 id='小白科普'><span>小白科普</span></h1><h2 id='何谓解析'><span>何谓解析</span></h2><ul><li><p><span>解析，简单的说就是解析视频的网页地址并返回一个可播放的视频链接</span></p></li><li><p><span>那负责解析的接口就是解析接口,解析接口大都长这样：</span><strong><span>https://域名/各种路径字符/一长串乱七八糟的字符（Key）/?url=</span></strong></p><ul><li><span>最明显的特点就是以</span><strong><span>?url=结束</span></strong></li><li><strong><span>?url=</span></strong><span>后面接的就是视频的网页地址</span></li></ul><p><span>举个例子：在浏览器的地址栏输入解析接口+视频地址后，回车或刷新，浏览器就会播放视频，如下图所示</span></p><p><img src=\\\"https://i0.hdslb.com/bfs/album/8dd6e57249226f2b4dc2bbf37c9a91b6e7ff45aa.png\\\" referrerpolicy=\\\"no-referrer\\\" alt=\\\"image-20220622014622874\\\"></p></li><li><p><span>那么原理是什么？根据原理的不同，解析也大致可以分为：</span></p><ul><li><p><span>算法类：通过解析系统内置的vip账号从网站上取出地址</span></p></li><li><p><span>切片类：</span></p><ul><li><span>从算法类解析出的结果中缓存并自动上传到解析系统</span></li><li><span>根据云盘或磁力等多种途径途径获取到资源并上传到解析系统</span></li></ul></li><li><p><span>谈不上谁优谁劣，具体情况具体分析</span></p></li></ul></li><li><p><span>其实我们不关心原理的话，解析口应该分为以下两类：</span></p><ul><li><span>普通解析口：如上方图例就是一个普通解析口，也就是说解析口后面拼接地址后回车刷新就会自动返回视频数据经由浏览器嗅探出结果并开始播放（自带播放器所以可以播放）。</span></li><li><span>json解析口：json接口按上方格式拼接好后回车刷新返回的是一个json字符串，不可以直接播放，必须从中提取出url然后让播放器加载才能播放（json解析口不提供播放器，至于如何取出url可以参照下文的公钥本质部分）。如下图所示返回的就是json字符串（可以自行百度了解什么是json格式）</span><img src=\\\"https://i0.hdslb.com/bfs/album/93113d6c23a9912b475d27850eb2f68512fc8a9d.png\\\" referrerpolicy=\\\"no-referrer\\\" alt=\\\"image-20220622085043523\\\"><span>一般来说影视app使用的都是json解析口，有自建的，有从解析商买的，也有从解析商那里偷来的。因为json返回的数据是明文数据，相应的解析速度可能会更快，具体情况具体分析。</span></li></ul></li><li><p><span>从解析片源的角度来说，可以为两类：</span></p><ul><li><span>官解解析：顾名思义，就是给一个官方网址，返回一个可播放的地址</span></li><li><span>切片解析：解析商自行对视频资源进行切片上传到图床等云端，生成特定的字符串秘钥，只有拥有相应秘钥的解析口才能解析出视频数据，一般来说海外影片都是切片资源</span></li></ul></li></ul><h2 id='解析从哪来'><span>解析从哪来</span></h2><p><span>解析从哪来，无非就以下几种</span></p><ul><li><p><span>从解析商处购买</span></p><ul><li><span>很多影视网站都也是使用的解析为用户提供视频播放服务，而影视网站他们所用的解析大多就来自专门做解析系统的站点</span></li><li><span>当然部分部分影视网站和app是自身独立切片存储不依赖解析，比如小苹果影视、飞瓜or火龙果影视、酷云等app以及哔嘀等影视网站</span></li><li><span>截至目前优质的解析商有扶风、左岸、江湖、飞云等等，|不指路可以自行百度搜索（说一个搜索引擎的小技巧，如果百度啥也搜不到可以换用其他的搜索引擎搜索，同时学会利用时间检索去获取最新的搜索数据，那么基本上可以搜到你想要的东西）</span></li></ul></li><li><p><span>解析商开放的普通接口</span></p><ul><li><span>部分大型的解析商都是有开放免费的优质普通解析口放出。一般来说就官解而言普通接口与json接口相比较基本上就是响应速度和资源是否可见的区别。开放的接口一般不支持切片，具体情况具体分析。</span></li><li><span>不是说开放的普通接口就不好，就比json解析口差，具体问题具体分析。</span><strong><span>不然就不会有x5公钥了</span></strong></li></ul></li><li><p><span>网上网友分享的解析</span></p><ul><li><span>说白了网友分享的解析基本上最终都是来自解析商，当然也有可能是自建的解析系统，是的解析系统可以自建但绝不是一般人考虑的</span></li><li><span>拿网上分享的解析可以从哪里找呢，举个例子比如脚本网站上诸如某某vip视频解析脚本其实都是内置的解析，当然一般来说这些脚本上的解析都是一些比较普通的解析，当然也有可能出现一些优质的解析</span></li><li><span>其实有一个网站帖子就专门收集一些解析，比如：</span><a href='https://www.yqkf100.cn/1725/.html'><span>站长必备！福利！影视vip解析接口汇总！不定期更新-益思俱乐部 (yqkf100.cn)</span></a><span>其实道长仓库里就有一个小程序叫做魔断解析爬虫（数据来源就是这个网址），可以自行在道长仓库搜索并导入</span></li><li><span>一些影视Q群和影视频道可能会出现有人分享解析，而这些解析往往相对算得上比较可用的解析</span></li></ul></li><li><p><span>自行抓取</span></p><ul><li><span>其实解析最终都是来自解析商，很多影视网站和影视app都是使用的解析</span></li><li><span>那么就可以对网站审查网络数据或者抓取app数据从中发现解析口&lt;——&gt;具体的自行百度或从其他的地方了解</span></li><li><span>当然现在的影视网站和影视app大多都是有防盗机制的，所以可能遇到无法抓包的问题</span></li></ul></li></ul><p>&nbsp;</p><h2 id='一份普接清单'><span>一份普接清单</span></h2><p><span>不保证可用性，不保证清晰度，不保证响应速度、不保证...</span></p><p><span>只能保证它们都活了很久..都是老牌子..</span></p><ol start='' ><li><a href='https://jx.m3u8.tv/jiexi/?url=' target='_blank' class='url'>https://jx.m3u8.tv/jiexi/?url=</a></li><li><a href='https://www.8090.la/8090/?url=' target='_blank' class='url'>https://www.8090.la/8090/?url=</a></li><li><a href='https://jx.m3u8.pw/?url=' target='_blank' class='url'>https://jx.m3u8.pw/?url=</a></li><li><a href='https://jx.mmkv.cn/json.php?url=' target='_blank' class='url'>https://jx.mmkv.cn/json.php?url=</a></li></ol><hr /><p><span>下方看资源，上方都还行</span></p><ol start='' ><li><a href='https://api.okjx.cc:3389/jx.php?url=' target='_blank' class='url'>https://api.okjx.cc:3389/jx.php?url=</a></li><li><a href='https://jx.parwix.com:4433/player/?url=' target='_blank' class='url'>https://jx.parwix.com:4433/player/?url=</a></li></ol><p><span>只有一句话，那就是接口在精不在多，很多解析口都是相互套娃，资源来源都是同一个，所以很有可能一个解析解析不出来，其他的解析也解析不出来，因为它们的根源很可能都是同一个。</span></p><p><strong><span>这份清单仅供参考和测试，都只是x5普通接口仅仅为方便了解什么是解析而已。</span></strong></p><p>&nbsp;</p><p>&nbsp;</p><h2 id='何谓断插------魔断'><span>何谓断插——&gt;魔断</span></h2><p><span>了解完解析究竟是一个什么东西之后，那么断插就很好理解了，</span><code>断插是一个工具</code><span>，可以帮你配置好解析，配置好后只要点击封装好的视频影片的官网网址那么就会自动拼接格式并提交请求最后调用播放器播放，不用自己在浏览器拼接然后再刷新从而解放双手，所以断插只是一个</span><code>工具</code><span>，不提供任何内容</span></p><p><span>那魔断又是什么，魔断也只是一个</span><code>工具</code><span>不提供任何内容，可以理解为断插的加强版，能更好的解放双手。魔断又名MyFiled，仓库自取。</span></p><h2 id='魔断的使用'><span>魔断的使用</span></h2><p><span>知道了什么是解析了吧，也知道了什么是魔断了吧？那么如何使用魔断应该是见名知意了，太过详细的不讲，挑一些重点来讲一下入门。首先第一步选择小白一键拉取，无论是真小白还是有有资源认识解析的朋友都推荐第一步直接拉取，然后自己再手动删除和添加自己的解析配置，因为一键拉取会帮你直接把环境都配置好，包括主题等而不用去过多的管这些闲杂事项。</span></p><p><span>下面是一张路线指南图：</span></p><p><img src=\\\"https://i0.hdslb.com/bfs/album/643102a29b09ab331a46b5029324c8a71e6731a1.png\\\" referrerpolicy=\\\"no-referrer\\\" alt=\\\"魔断使用教程\\\"></p><p><span>其中魔断的多线路，初步了解魔断之后可以去熟悉一下，以下是官方解释</span></p><p><img src=\\\"https://i0.hdslb.com/bfs/album/8a030128998c535b06d26e296ddea93736599b1b.png\\\" referrerpolicy=\\\"no-referrer\\\" alt=\\\"image-20220622205753311\\\"></p><p><span>还有一点很重要的就是备份，如果我有很多解析，怕丢失，可以直接导出！也可以直接导入！（</span><strong><span>魔断主页的横条是可以滑动的</span></strong><span>），如图所示右滑可以看到，只要按格式来那么一般就没有问题。其实点击三角箭头可以弹窗直接选择，也可以发现里边还有批量操作（删除）的功能</span></p><p><img src=\\\"https://i0.hdslb.com/bfs/album/67667b669c5e469bba8f2c4409526ead9e346e85.png\\\" referrerpolicy=\\\"no-referrer\\\" alt=\\\"image-20220622213927012\\\"></p><p><span>在补充一点：在断插接口设置页面点击任意一个解析可以单独对其进行特定操作：</span></p><p><img src=\\\"https://i0.hdslb.com/bfs/album/48e4b30795ca735c796b636ca1b5ab0ebbdacf30.png\\\" referrerpolicy=\\\"no-referrer\\\" alt=\\\"image-20220622215236136\\\"></p><p><mark><span>注意的是：dm盒子的公钥和多线路是冲突的</span></mark><span>，剩下的自己摸索，讲到的基本都是核心没讲到的都不是很重要</span></p><h2 id='何谓cms模板'><span>何谓CMS模板</span></h2><p><span>CMS可以简单的理解为一种采集官网视频网址的自动化软件，并按照指定的格式封装存储好后可以通过给出的API接口去访问这些数据，而这类API接口可以称之为cms接口。因为解析是需要视频网址的，所以cms的作用就不言而喻。</span></p><p><span>回到cms模板，cms模板是道长的一个小程序，通过填写cms接口就可以生成cms小程序的一个小程序，也是一个</span><code>工具</code><span>不提供任何实质内容。</span></p><p><span>那cms接口从哪里获取？来源于cms采集资源网、来源于app抓包、网站抓包、一些解析也会放出采集（采集即cms）...</span></p><p><span>其实更直接的方法，可以从写好的cms小程序中提取出cms接口：</span></p><ol start='' ><li><p><span>长按小程序名字，弹窗点击编辑规则，找到小程序链接，即可获得cms接口</span></p><p><img src=\\\"https://i0.hdslb.com/bfs/album/449889da1c575498f71092328509d4e02b2c446a.png\\\" referrerpolicy=\\\"no-referrer\\\" alt=\\\"image-20220622094817380\\\"></p></li><li><p><span>如果你看不到小程序链接，那是因为没有开发者签名</span></p><p><span>——&gt;找到设置——&gt;选择开发手册与模式——&gt;选择开发者签名——&gt;自定义开发者昵称</span></p><p><span>那么就可以看到了</span></p></li></ol><p><span>下面是一个cms资源网合集的使用教程，里面都是cms小程序可以直接使用</span></p><p><span>点击链接查看QQ频道帖子【用心采集使用方法(非魔断版)】：</span><a href='https://qun.qq.com/qqweb/qunpro/share?_wv=3&amp;_wwv=128&amp;appChannel=share&amp;inviteCode=1wBvs1&amp;appChannel=share&amp;contentID=UgJW&amp;businessType=2&amp;from=246610&amp;biz=ka&amp;shareSource=5' target='_blank' class='url'>https://qun.qq.com/qqweb/qunpro/share?_wv=3&_wwv=128&appChannel=share&inviteCode=1wBvs1&appChannel=share&contentID=UgJW&businessType=2&from=246610&biz=ka&shareSource=5</a></p><p><span>与其寻找cms接口，不如直接使用已有的cms小程序，频道也会有大佬偶尔分享cms小程序</span></p><h2 id='何谓断插类小程序'><span>何谓断插类小程序</span></h2><p><span>顾名思义就是支持断插调用解析的小程序，像cms模板生成的cms小程序就是断插类的小程序</span></p><p><span>还有的大佬写好封装有断插调用方法的网站小程序或者app小程序</span></p><h2 id='何谓通免小程序'><span>何谓通免小程序</span></h2><p><span>通免小程序就是大佬写好的</span><strong><span>不需要断插解析</span></strong><span>的网站小程序或者app小程序，而是直接从源站嗅探获得视频播放链接，也就是说这是原滋原味的小程序，网站内容是啥，他就是啥。也是数量最多的小程序。</span></p><h2 id='何谓免嗅小程序'><span>何谓免嗅小程序</span></h2><p><span>免嗅小程序也是原滋原味的小程序，但相比通免小程序，它不需要从网站嗅探视频播放链接，而是通过解密代码直接获取视频播放链接的url然后直接播放，所以一般来说免嗅小程序会快于通免小程序响应资源的速度。</span></p><p>&nbsp;</p><p>&nbsp;</p><h1 id='隐藏操作'><span>隐藏操作</span></h1><h2 id='公钥与私钥'><span>公钥与私钥</span></h2><p><span>有公钥，那肯定有私钥了啦，不过没给出来罢了，我是不是很坏~</span></p><p><span>净瞎说，dm盒子代码清晰可见，有能力自己改一下公钥就可以得到私钥了~</span></p><p><span>至于原因嘛，那肯定是有原因的，私钥体验未必就比公钥要好，而且</span><mark><span>私钥不一定稳定</span></mark><span>——&gt;所以还是我自己来承受吧！</span></p><h2 id='飞瓜弹幕库'><span>飞瓜弹幕库</span></h2><p><span>公、私钥不重要啦，</span><strong><span>重要的是其实dm盒子内置了飞瓜弹幕库搜索引擎</span></strong><span>。</span></p><p><span>那如何使用呢？步骤如下：</span></p><ol start='' ><li><p><span>选择dm盒子作为搜索引擎，搜索需要获取弹幕数据的视频，这里以人世间为例</span></p><p><img src=\\\"https://i0.hdslb.com/bfs/album/6b3af93c4b06afd9aa9d74c8f5f7bfb428096be8.png\\\" referrerpolicy=\\\"no-referrer\\\" alt=\\\"image-20220621234822667\\\"></p></li><li><p><span>搜索到想要的视频结果后，再选择视频相应的集数进行播放——&gt;</span><mark><span>dm盒子只是一个数据收纳盒子，不提供在线视频播放、采集等功能</span></mark><span>——&gt;所以肯定是播放不了的啦——&gt;但是别忘记我们的目的是什么</span></p></li><li><p><span>进入视频播放页面后就可以获取飞瓜弹幕数据了，操作如下：</span></p><p><img src=\\\"https://i0.hdslb.com/bfs/album/cc4203f7225c409c8ef370cce650de0553a7074e.png\\\" referrerpolicy=\\\"no-referrer\\\" alt=\\\"image-20220622000126124\\\"></p><p><span>复制的弹幕地址就是我们要获取的弹幕数据啦</span></p><p><span>接下来就是找一个支持断插的如cms小程序、或者套有dm盒子二级动态解析模板的通免or免嗅小程序来播放相应的影视剧集</span></p><p><span>到了这一步其实也能猜到了。下面做展示：</span></p><p><img src=\\\"https://i0.hdslb.com/bfs/album/9ff8eba0c6daacaa4174cdd2ae2d9d71a677110b.png\\\" referrerpolicy=\\\"no-referrer\\\" alt=\\\"image-20220622001122030\\\"></p><p><span>填入弹幕地址之后，那么就会有弹幕数据加载出来了（如图）</span></p><p><img src=\\\"https://i0.hdslb.com/bfs/album/eb42d30cb4c4e030afd57e8ab9f0c351163e7adc.png\\\" referrerpolicy=\\\"no-referrer\\\" alt=\\\"image-20220622001517705\\\"></p><p>&nbsp;</p></li></ol><p><span>那么问题来了啥时候用飞瓜引擎获取弹幕呢，我的建议是当官方弹幕或者其他的第三方弹幕无法获取到或者不能满足的时候使用</span></p><p><span>其实</span><mark><span>更值得一提的应该是，飞瓜弹幕不仅仅只是拥有国内视频的弹幕数据，他还有外片和各种类型片源的弹幕</span></mark><span>，这个时候如果你需要弹幕，那么飞瓜搜索引擎就有大用了！</span></p><p><span>补充一点：弹幕地址是可以移植到任意小程序视频播放地址的，那么自然是</span><strong><span>不需要解析也不需要断插也不需要dm盒子动态解析也能加载弹幕</span></strong><span>了当然有些小程序加载的视频地址是有</span><strong><span>时效性</span></strong><span>的，所以可能会出现播放不了的情况——&gt;移植的时候需要注意下弹幕的格式，如下：（小白尤其注意花括号&#39;{}&#39;的存在）</span><img src=\\\"https://i0.hdslb.com/bfs/album/cd84445879ca6ba7f03936288b99c9d27c2f2803.png\\\" referrerpolicy=\\\"no-referrer\\\" alt=\\\"image-20220622002905582\\\"></p><p><span>可能你发现了上方截图里是有</span><strong><span>预留弹幕接口和dm:&#39;&#39;</span></strong><span>写好的格式存在的，那其实就是因为这个小程序套了dm盒子动态解析或者是断插类型的小程序，可以方便给没有弹幕数据的视频快速添加弹幕而不用自己修改格式。</span></p><p>&nbsp;</p><p>&nbsp;</p><h1 id='注意事项'><span>注意事项</span></h1><ol start='' ><li><p><del><span>公钥没法和魔断并发多线路一起使用。但是针对公钥，dm盒子增加了一个自</span><strong><span>动拼接多线路接口的功能模块</span></strong><span>——&gt;方便将常用的优质接口自动拼接成一个返回多线路的函数接口。事实上这已经足矣，将手头用的多的，好用的json结合聚合在一起就可以了。</span></del></p><p><del><span>Tip：海阔多线路的实现目前都是</span><strong><span>并发</span></strong><span>的方式包括魔断多线路（很费解析），也就是说点击解析一个视频的时候必须先把所有解析都尝试解析获取可播放链接，最后将所有得到的结果返回，组成多线路格式。但是部分解析部分视频资源的链接解析出来后是有时效性的，所以可能链接失效。所以正确的食用方式是多线路出来后如果当前线路能播画质满足就当前线路直接看，如若解析失败马上切换，不推荐看剧中途切换因为大概率链接已经失效（魔断添加了多路缓存，但是实际体验感觉效果并不是很理想，dm盒子的聚合函数也没有提供多线路缓存）</span></del><mark><span>该功能已在新版移除，并替换为“飞传”</span></mark></p></li><li><p><span>带有弹幕数据的解析口解析新番视频时会和新番自带的弹幕数据冲突所以需要关闭新番的弹幕开关</span></p></li><li><p><span>如若使用解析测试、魔断解析测试出现数据错乱的问题可以不用理会，这是正常现象（虽然我并不是很清楚具体原因...），但这并不妨碍你在新番、搜狗Q、cms小程序等断插类小程序中正常使用</span></p></li><li><p><span>逻辑都是先获取弹幕再加载视频（Tencent路线的弹幕数据存储到本地耗时可能相对较长）</span></p></li><li><p><span>普适性json公钥只适合大部分json生成公钥，详细的使用方法参见公钥本质部分</span></p></li><li><p><span>嗅探动态解析模板和断插动态解析模板只适用于url未经加密的通免小程序</span></p><p><del><span>通免模板对于有些小程序的部分解析线路支持并不是很好，有嗅探失败的可能</span></del></p><p><del><mark><span>通免公钥已经替换成了香免强力x5嗅探，香免能播的都能播，不能播的基本上都是网站本身无法播放</span></mark></del></p><p><strong><span>网站和解析的防嗅探能力也在增强，不保证一直更新所以可能会出现嗅探失败的几率</span></strong></p></li><li><p><mark><span>不要更改dm盒子小程序的名字</span></mark><span>，否则其他二级动态解析依赖dm盒子的通免小程序和断插类将无法获取数据并报错</span></p></li></ol><div align=\\\"right\\\">\\n    <h6>\\n        侠名\\n    </h6>\\n    <h6>初版2022/6/25</h6>\\n    <h6>第二版-修订2022/7/12</h6>\\n</div><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p></div></div>\\n</body>\\n</html>\"},{\"col_type\":\"movie_3\",\"name\":\"文档展示\",\"path\":\"doc\",\"rule\":\"js:\\nd = [];\\ndocType = MY_PARAMS.docType;\\nif (docType == 'help') {\\n    // path = 'hiker://files/cache/Instruction_Book.html';\\n    d.push({\\n        col_type: 'x5_webview_single',\\n        url: 'https://docs.qq.com/doc/DU25zWmZSSmhLd1RH',\\n        // url: getPath(path),\\n        desc: 'float&&100%',\\n        col_type: 'x5_webview_single', extra: { canBack: true }\\n    });\\n} else {\\n    d.push({\\n        title: JSON.parse(request('hiker://page/API.html')).rule,\\n        col_type: 'rich_text'\\n    });\\n}\\nsetResult(d);\\n\"},{\"col_type\":\"movie_3\",\"name\":\"API文档\",\"path\":\"API.html\",\"rule\":\"<p>““——↓使用文档↓——””</p>\\n基本上参数是规范的官方地址链接，根据dm盒子中的参数设置来执行方法，完成后返回成功写入到本地的弹幕文件地址，若获取弹幕失败会返回false。\\n可以在全局范围通过\\n<pre><code>getVar('dm_share')</code></pre> 获取成功写入到本地的弹幕文件地址\\n<h2 id=\\\"函数路由调用\\\">路由函数调用</h2>\\n面向用户的路由函数，只需要传url就能获得弹幕地址\\n<pre><code>dm = $.require('hiker://page/dmFun?rule=dm盒子').dmRoute(官链);</code></pre>\\n<h2 id=\\\"小程序通免调用方法\\\">小程序通免调用方法</h2>\\n封装好的通免函数，对应video、仓库通免、经典的香佬嗅探，只是在这些通免函数的基础上在返回地址加上了danmmu选项。如若嗅探线路能自动探查到官方链接那么就会调用路由方法获取弹幕并携带；如若探查不到官链那么携带的弹幕地址就是通过 < pre > <code>getVar('dm_share')</code></pre > 获取的上次成功解析得到的弹幕地址。像云盘君dm等规则自动挂载弹幕的原理就是如此，那么你会改规则了嘛，。\\n<pre><code>lazy = $('').lazyRule(() => {\\n    return $.require('hiker://page/lazyToX5?rule=dm盒子').videoX5();\\n})\\nlazy = $('').lazyRule(() => {\\n    return $.require('hiker://page/lazyToX5?rule=dm盒子').drX5();\\n})\\nlazy = $('').lazyRule(() => {\\n    return $.require('hiker://page/lazyToX5?rule=dm盒子').classicalX5();\\n})\\n</code></pre>\\n<h2 id=\\\"断插函数调用\\\">断插函数调用</h2>\\n<h3 id=\\\"借助配置助手\\\">借助配置助手</h3>\\n参数皆为数组，将会和配置助手里边保存启用的解析拼接返回多线路，弹幕的开关与否由配置助手管理。魔断函数可以调用该函数达到免嗅首发的效果，既使用了免嗅函数又能加上配置助手中一堆解析不浪费作为保底。\\n<pre><code>return $.require(\\\"hiker://page/mulParse?rule=配置助手\\\").mulParse(['vipUrl'], ['bfurl'], ['解析名'], [{ \\\"User-Agent\\\": \\\"Mozilla/5.0\\\" }]);\\n</code></pre>\\n<h3 id=\\\"断插-魔断\\\">断插-魔断</h3>\\n专门写给魔断用的，相比前面提及的mulParse函数，下面的函数只是单纯在返回链接中加上danmu参数而已。对应道长通免dm、香佬通免dm以及供JSON解析使用的Jsondm（参数为官链和执行逻辑后解析出来的播放链接）\\n<pre><code>return $.require('hiker://page/lazyToJiexi?rule=dm盒子').drX5('标准官链', '播放url');\\nreturn $.require('hiker://page/lazyToJiexi?rule=dm盒子').classicalX5('标准官链', '播放url');\\nreturn $.require('hiker://page/lazyToJiexi?rule=dm盒子').Jsondm('标准官链', '播放url');\\n</code></pre>\\n<h2 id=\\\"获取指定弹幕源的弹幕文件\\\">获取指定弹幕源的弹幕文件</h2>\\n返回值是弹幕文件的本地路径, 参数是标准的官方链接。如若失败则返回false\\n<pre><code>dm = $.require('hiker://page/dmFun?rule=dm盒子').hlsdm(官链);\\ndm = $.require('hiker://page/dmFun?rule=dm盒子').zuoandm(官链);\\ndm = $.require('hiker://page/dmFun?rule=dm盒子').gonggongdm(官链);\\ndm = $.require('hiker://page/dmFun?rule=dm盒子').shayvdm(官链);\\ndm = $.require('hiker://page/dmFun?rule=dm盒子').MGdm(官链);\\ndm = $.require('hiker://page/dmFun?rule=dm盒子').YKdm(官链);\\ndm = $.require('hiker://page/dmFun?rule=dm盒子').QYdm(官链);\\ndm = $.require('hiker://page/dmFun?rule=dm盒子').TXdm(官链);\\ndm = $.require('hiker://page/dmFun?rule=dm盒子').bilidm(官链);\\n</code></pre>\\n\"},{\"col_type\":\"movie_3\",\"name\":\"弹幕函数汇总\",\"path\":\"dmFun\",\"rule\":\"// 入口函数——路由\\n$.exports.dmRoute = function (vipUrl) {\\n    dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\\n    dmFrom = dmSettings.dmFrom;\\n    for (let from in dmFrom) {\\n        let reg = new RegExp(`${from}`, \\\"g\\\");\\n        if (vipUrl.match(reg)) {\\n            eval(\\\"dm = $.require('hiker://page/dmFun?rule=dm盒子').\\\" + dmFrom[from] + \\\"(vipUrl);\\\");\\n            // log(countDanmu(getPath(dm)));\\n            tipInfo = `弹幕解析源:${dmFrom[from]}，弹幕数量共计：${countDanmu(getPath(dm))}条`\\n            toast(tipInfo);\\n            return dm;\\n        }\\n    }\\n    return false;\\n}\\n\\n// 入口函数——下载路由\\n$.exports.downloadRoute = function (title, vipUrl, isPage) {\\n    showLoading('下载中:' + title);\\n    dm = $.require('hiker://page/dmFun?rule=dm盒子').dmRoute(vipUrl);\\n    hideLoading();\\n    if (dm === false) {\\n        return \\\"toast://下载出错，请尝试切换弹幕源！\\\";\\n    }\\n    dmPath = getPath(getVar('dm_share')).slice(7);\\n    // newFileName = dmPath.substring(dmPath.lastIndexOf(\\\"/\\\") + 1).replace(/(\\\\.[^.]+)$/, '_' + i + \\\"$1\\\");\\n    newFileName = dmPath.substring(dmPath.lastIndexOf(\\\"/\\\") + 1).split('from')[0] + title + '.xml';\\n    innerFilepath = getPath('hiker://files/cache/danmu/').slice(7) + newFileName;\\n    var { renameFile, copyFile, moveFile } = $.require(\\\"hiker://page/fileAPI?rule=dm盒子\\\");\\n    dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\\n    saveLocal = dmSettings.saveLocal;\\n    doubleWrite = dmSettings.doubleWrite;\\n    if (saveLocal) {\\n        destinationDir = '/storage/emulated/0/Download/海阔视界/danmu/';\\n        renameFile(dmPath, newFileName);\\n        if (doubleWrite) {\\n            copyFile(innerFilepath, destinationDir);\\n        } else {\\n            moveFile(innerFilepath, destinationDir);\\n        }\\n    } else {\\n        renameFile(dmPath, newFileName);\\n    }\\n    if (isPage) {\\n        log(\\\"来源于界面...\\\");\\n        putVar('dm_share', innerFilepath.replace('/storage/emulated/0/Android/data/com.example.hikerview/files/Documents/', 'hiker://files/'));\\n        return getVar('dm_share');\\n    } else {\\n        log(\\\"来源于播放器...\\\");\\n        clearVar(\\\"dm_share\\\");\\n        return innerFilepath.replace('/storage/emulated/0/Android/data/com.example.hikerview/files/Documents/', 'hiker://files/');\\n    }\\n}\\n\\nvar javaImport = new JavaImporter(java.io, java.util.regex, android.util);\\n\\n// 统计弹幕数量\\nfunction countDanmu(filePath) {\\n    with (javaImport) {\\n        var count = 0;\\n        var reader = null;\\n        try {\\n            // 一次性读取全文内容（直接使用 filePath，无需 Uri 解析）\\n            var content = new java.lang.StringBuilder();\\n            var localPath = android.net.Uri.parse(filePath).getPath();\\n            reader = new BufferedReader(new FileReader(new File(localPath))); // 直接传入 File 对象\\n\\n            // 使用 Java 的 char[] 缓冲区\\n            var buffer = java.lang.reflect.Array.newInstance(java.lang.Character.TYPE, 4096);\\n            var charsRead;\\n            while ((charsRead = reader.read(buffer)) != -1) {\\n                content.append(buffer, 0, charsRead); // 正确追加字符数组\\n            }\\n\\n            // 将 StringBuilder 转为 String 再匹配\\n            var pattern = Pattern.compile(\\\"<d\\\\\\\\b\\\");\\n            var matcher = pattern.matcher(content.toString()); // 必须转为 String\\n            while (matcher.find()) {\\n                count++;\\n            }\\n        } catch (e) {\\n            log(\\\"弹幕统计\\\" + e.message);\\n        } finally {\\n            if (reader != null) {\\n                try {\\n                    reader.close();\\n                } catch (e) { }\\n            }\\n        }\\n        return count;\\n    }\\n}\\n\\n\\n//官方弹幕函数| qq\\n$.exports.TXdm = function (realurl) {\\n    filePath = 'hiker://files/cache/danmu/' + 'TX_from_' + getPageTitle() + '.xml';\\n    // 字体大小、弹幕步长、解析记录\\n    var danmuSetting = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\\n    var size = danmuSetting.fontSize;\\n    var step = danmuSetting.step;\\n    var history = danmuSetting.history;\\n    if (history['TX_from_' + getPageTitle()] == realurl && fileExist(filePath)) {\\n        dm = filePath;\\n        putVar('dm_share', dm);\\n        return dm;\\n    }\\n    try {\\n        var vid;\\n        // 适配PC端链接（豆瓣电视剧通用）\\n        try {\\n            vid = realurl.split('.html')[0].split('/').pop();\\n            log(vid);\\n        } catch (e) {\\n            // 携带vid参数的移动端链接\\n            vid = realurl.split('=')[1];\\n        }\\n        var data = '';\\n        // 弹幕样式\\n        var ct = 1;\\n        try {\\n            danmuData = JSON.parse(fetch('https://dm.video.qq.com/barrage/base/' + vid, {\\n                headers: {\\n                    'User-Agent': PC_UA,\\n                    \\\"Referer\\\": \\\"https://v.qq.com/\\\"\\n                },\\n                method: \\\"GET\\\"\\n            })).segment_index;\\n        } catch (e) {\\n            // 聚影、豆瓣、搜狗等腾讯电影链接\\n            log('vid参数错误,现将其视为cid重新获取');\\n            data = request('https://pbaccess.video.qq.com/trpc.videosearch.search_cgi.http/load_playsource_list_info?pageNum=0&id=' + vid + '&dataType=2&pageContext=need_async%3Dtrue&scene=2&platform=2&appId=10718&site=qq&vappid=34382579&vsecret=e496b057758aeb04b3a2d623c952a1c47e04ffb0a01e19cf&g_tk=&g_vstk=&g_actk=');\\n            vid = JSON.parse(data).data.normalList.itemList[0].videoInfo.firstBlockSites[0].episodeInfoList[0].id;\\n            log('真实vid:' + vid);\\n            danmuData = JSON.parse(fetch('https://dm.video.qq.com/barrage/base/' + vid, {\\n                headers: {\\n                    'User-Agent': PC_UA,\\n                    \\\"Referer\\\": \\\"https://v.qq.com/\\\"\\n                },\\n                method: \\\"GET\\\"\\n            })).segment_index;\\n        }\\n        url = [];\\n        for (var prop in danmuData) {\\n            url.push({\\n                url: 'https://dm.video.qq.com/barrage/segment/' + vid + '/' + danmuData[prop].segment_name\\n            });\\n        }\\n        // Todo:弹幕数据读写溢出问题触发，https://v.qq.com/x/cover/mzc002008v8rka3/d0046v4pddg.html，流浪地球2，共计347个分页，而每一个分页的数据量都贼大\\n        batchFetch(url).map(function (a) {\\n            danmuData = JSON.parse(a).barrage_list;\\n            // 弹幕为空\\n            if (JSON.stringify(danmuData) === '[]') {\\n                log('此页为空');\\n            } else {\\n                try {\\n                    for (let i = 0; i < danmuData.length; i += step) {\\n                        // 弹幕发送时间\\n                        timepoint = danmuData[i].time_offset / 1000;\\n                        // 弹幕颜色(默认)\\n                        color = 16777215;\\n                        if (danmuData[i].content_style != '') {\\n                            colorHex = danmuData[i].content_style.match(/\\\\[\\\"[\\\\S\\\\s]+(?=\\\",\\\")/)[0].replace('[\\\"', '');\\n                            color = parseInt(colorHex, 16);\\n                        }\\n                        // 弹幕内容\\n                        content = danmuData[i].content;\\n                        if (content.indexOf('<') != -1 || content.indexOf('>') != -1 || content.indexOf('&') != -1 || content.indexOf('\\\\u0000') != -1 || content.indexOf('\\\\b') != -1) {\\n                            continue;\\n                        }\\n                        tempdata = `<d p=\\\"${timepoint},${ct},${size},${color},0\\\">${content}</d>\\\\n`;\\n                        data += tempdata;\\n                    }\\n                } catch (e) {\\n                    log('不知缘由的异常，直接跳过:' + e)\\n                }\\n            }\\n        });\\n        // 最终待写入的弹幕数据\\n        danmustr = `<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\\\n<i>\\\\n${data}</i>`;\\n        // 写入弹幕\\n        dm = 'hiker://files/cache/danmu/' + 'TX_from_' + getPageTitle() + '.xml';\\n        saveFile(dm, danmustr);\\n        history['TX_from_' + getPageTitle()] = realurl;\\n        saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(danmuSetting));\\n        putVar('dm_share', dm);\\n        return dm;\\n    } catch (e) {\\n        log('出错了：' + e);\\n        showLoading('天呐撸，获取失败了呢！');\\n        // return 'hiker://files/cache/danmu/' + 'TX_from_' + getPageTitle() + '.xml';\\n        return false;\\n    }\\n}\\n\\n// 官方API|bili\\n$.exports.bilidm = function (realurl) {\\n    function overrideSave(dm, size, step) {\\n        var danmuData = request(dm);\\n        var data = '';\\n        td = pdfa(danmuData, 'i&&d');\\n        for (let i = 0; i < td.length; i += step) {\\n            timepoint = pdfh(td[i], 'd&&p').split(\\\",\\\")[0];\\n            ct = pdfh(td[i], 'd&&p').split(\\\",\\\")[1];\\n            color = pdfh(td[i], 'd&&p').split(\\\",\\\")[3];\\n            // 弹幕内容\\n            content = pdfh(td[i], 'd&&Text');\\n            if (content.indexOf('<') != -1 || content.indexOf('>') != -1 || content.indexOf('&') != -1 || content.indexOf('\\\\u0000') != -1 || content.indexOf('\\\\b') != -1) {\\n                continue;\\n            }\\n            tempdata = `<d p=\\\"${timepoint},${ct},${size},${color},0\\\">${content}</d>\\\\n`;\\n            data += tempdata;\\n        }\\n        danmustr = `<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\\\n<i>\\\\n${data}</i>`;\\n        saveFile(dm, danmustr);\\n    }\\n\\n    filePath = 'hiker://files/cache/danmu/' + 'bili_from_' + getPageTitle() + '.xml';\\n    // 字体大小、弹幕步长、解析记录\\n    var danmuSetting = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\\n    var size = danmuSetting.fontSize;\\n    var step = danmuSetting.step;\\n    var history = danmuSetting.history;\\n    if (history['bili_from_' + getPageTitle()] == realurl && fileExist(filePath)) {\\n        dm = filePath;\\n        putVar('dm_share', dm);\\n        return dm;\\n    }\\n    try {\\n        var epid, data, cid, dm;\\n        if (realurl.match(/ep/)) {\\n            epid = realurl.split('ep')[1].split('?')[0];\\n            fetch_url = \\\"https://api.bilibili.com/pgc/view/web/season?ep_id=\\\" + epid;\\n        } else if (realurl.match(/av/)) {\\n            // aid最小单位-单集\\n            aid = realurl.split('av')[1].split('?')[0];\\n            log('aid:' + aid);\\n            fetch_url = \\\"https://api.bilibili.com/x/web-interface/view?aid=\\\" + aid;\\n            cid = JSON.parse(fetch(fetch_url, {\\n                \\\"headers\\\": {\\n                    \\\"User-Agent\\\": PC_UA\\n                },\\n                \\\"referrer\\\": realurl,\\n                \\\"method\\\": \\\"GET\\\",\\n            })).data.cid;\\n            file = 'https://comment.bilibili.com/' + cid + '.xml';\\n            dm = 'hiker://files/cache/danmu/' + 'bili_from_' + getPageTitle() + '.xml';\\n            downloadFile(file, dm);\\n            overrideSave(dm, size, step);\\n            history['bili_from_' + getPageTitle()] = realurl;\\n            saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(danmuSetting));\\n            putVar('dm_share', dm);\\n            return dm;\\n        } else if (realurl.match(/ss|md/)) {\\n            if (realurl.match(/ss/)) {\\n                // 采集到的ss链接多半就是电影，season_id也能代表单集对其处理\\n                season_id = realurl.split('ss')[1].split('?')[0];\\n                log('season_id:' + season_id);\\n            } else {\\n                // 由番剧md查询season_id，再经同样逻辑处理（当做单集处理-未验证）\\n                md = realurl.split('md')[1].split('?')[0];\\n                log('md:' + md);\\n                fetch_url = \\\"https://api.bilibili.com/pgc/review/user?media_id=\\\" + epid;\\n                season_id = JSON.parse(fetch(fetch_url, {\\n                    \\\"headers\\\": {\\n                        \\\"User-Agent\\\": PC_UA\\n                    },\\n                    \\\"referrer\\\": realurl,\\n                    \\\"method\\\": \\\"GET\\\",\\n                })).result.media.season_id;\\n            }\\n            fetch_url = 'https://api.bilibili.com/pgc/web/season/section?season_id=' + season_id;\\n            cid = JSON.parse(fetch(fetch_url, {\\n                \\\"headers\\\": {\\n                    \\\"User-Agent\\\": PC_UA\\n                },\\n                \\\"referrer\\\": realurl,\\n                \\\"method\\\": \\\"GET\\\",\\n            })).result.main_section.episodes[0].cid\\n            file = 'https://comment.bilibili.com/' + cid + '.xml';\\n            dm = 'hiker://files/cache/danmu/' + 'bili_from_' + getPageTitle() + '.xml';\\n            downloadFile(file, dm);\\n            overrideSave(dm, size, step);\\n            history['bili_from_' + getPageTitle()] = realurl;\\n            saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(danmuSetting));\\n            putVar('dm_share', dm);\\n            return dm;\\n        }\\n        data = JSON.parse(fetch(fetch_url, {\\n            \\\"headers\\\": {\\n                \\\"User-Agent\\\": PC_UA\\n            },\\n            \\\"referrer\\\": realurl,\\n            \\\"method\\\": \\\"GET\\\",\\n        }));\\n        try {\\n            data.result.episodes.forEach(ep => {\\n                if (ep.link == realurl) {\\n                    cid = (ep.cid).toString();\\n                    //break;\\n                    throw Error()\\n                }\\n            });\\n        } catch (e) {\\n            file = 'https://comment.bilibili.com/' + cid + '.xml';\\n            dm = 'hiker://files/cache/danmu/' + 'bili_from_' + getPageTitle() + '.xml';\\n            downloadFile(file, dm);\\n            overrideSave(dm, size, step);\\n            history['bili_from_' + getPageTitle()] = realurl;\\n            saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(danmuSetting));\\n            putVar('dm_share', dm);\\n        }\\n        return dm;\\n    } catch (e) {\\n        log('出错了：' + e);\\n        showLoading('天呐撸，获取失败了呢！');\\n        // return 'hiker://files/cache/danmu/' + 'bili_from_' + getPageTitle() + '.xml';\\n        return false;\\n    }\\n}\\n\\n//官方弹幕函数| mgtv\\n$.exports.MGdm = function (realurl) {\\n    filePath = 'hiker://files/cache/danmu/' + 'Mg_from_' + getPageTitle() + '.xml';\\n    // 字体大小、弹幕步长、解析记录\\n    var danmuSetting = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\\n    var size = danmuSetting.fontSize;\\n    var step = danmuSetting.step;\\n    var history = danmuSetting.history;\\n    if (history['Mg_from_' + getPageTitle()] == realurl && fileExist(filePath)) {\\n        dm = filePath;\\n        putVar('dm_share', dm);\\n        return dm;\\n    }\\n    try {\\n        log(realurl);\\n        var vid = realurl.split('/')[5].split('.html')[0];\\n        var cid = realurl.split('/')[4];\\n        var fileNum = 0;\\n        var data = ''\\n        // 容错处理\\n        var errNum = 0;\\n        danmuFrom = JSON.parse(fetch(`https://galaxy.bz.mgtv.com/getctlbarrage?version=3.0.0&vid=${vid}&abroad=0&pid=0&os=&uuid=&deviceid=2cc092cb-f9df-4f4f-a1ce-33c7fe3575cf&cid=393717&ticket=&mac=&platform=0&appVersion=3.0.0&reqtype=form-post&callback=jsonp_1658216873648_19074&allowedRC=1`, {\\n            headers: {\\n                'User-Agent': PC_UA,\\n                'Referer': realurl\\n            },\\n            method: 'GET'\\n        }).match(/{[\\\\S\\\\s]+}/)).data.cdn_version;\\n        // DVD、电影、少部分剧集\\n        if (danmuFrom == undefined) {\\n            var time = 0;\\n            while (true) {\\n                // 请求弹幕\\n                try {\\n                    danmuData = JSON.parse(fetch(`https://galaxy.bz.mgtv.com/cdn/opbarrage?version=3.0.0&vid=${vid}&abroad=0&pid=0&os=&uuid=&deviceid=2cc092cb-f9df-4f4f-a1ce-33c7fe3575cf&cid=${cid}&ticket=&mac=&platform=0&time=${time}&device=0&allowedRC=1&appVersion=3.0.0&reqtype=form-post&callback=jsonp_1658459178998_5150&allowedRC=1`, {\\n                        headers: {\\n                            'User-Agent': PC_UA,\\n                            'Referer': realurl\\n                        },\\n                        method: 'GET'\\n                    }).match(/{[\\\\S\\\\s]+}/)).data;\\n                } catch (e) {\\n                    log('请求失败');\\n                    break;\\n                }\\n                danmu = danmuData.items;\\n                // 直至弹幕为空——真的是，如果弹幕太少导致某一页没有数据那岂不是误杀？？？给他个允许(连续)空值的最大次数吧。。\\n                if (danmu == null) {\\n                    errNum += 1;\\n                    log(`${time / 1000}-${time / 1000 + 60}时间段无数据，数据连续空页次数:${+errNum}`);\\n                    if (errNum > 2) {\\n                        log(\\\"弹幕数据获取Ending!\\\");\\n                        break;\\n                    } else {\\n                        // fix,漏掉了时间节点的推移\\n                        time = danmuData.next;\\n                        continue;\\n                    }\\n                }\\n                // 如果能获取到数据就将空值次数清0，保证错误空值是连续的，尽可能避免误杀\\n                errNum = 0;\\n                for (let i = 0; i < danmu.length; i += step) {\\n                    // 弹幕发送时间\\n                    timepoint = danmu[i].time / 1000;\\n                    // 弹幕样式\\n                    ct = 1;\\n                    if (danmu[i].v2_position) {\\n                        // 顶端弹幕\\n                        ct = 5;\\n                    }\\n                    // 弹幕颜色(默认)\\n                    color = 16777215;\\n                    // 颜色设置——可自行修改替换left为right(原来是左右渐变的颜色，但xml格式本身并不支持，所以二选一吧，left一般颜色比较深，right一般颜色比较浅)\\n                    if (danmu[i].v2_color) {\\n                        color = (danmu[i].v2_color.color_left.r << 16) + (danmu[i].v2_color.color_left.g << 8) + (danmu[i].v2_color.color_left.b);\\n                    }\\n                    // 弹幕内容\\n                    content = danmu[i].content;\\n                    if (content.indexOf('<') != -1 || content.indexOf('>') != -1 || content.indexOf('&') != -1 || content.indexOf('\\\\u0000') != -1 || content.indexOf('\\\\b') != -1) {\\n                        continue;\\n                    }\\n                    tempdata = `<d p=\\\"${timepoint},${ct},${size},${color},0\\\">${content}</d>\\\\n`\\n                    data += tempdata;\\n                }\\n                time = danmuData.next;\\n            }\\n        } else {\\n            // 一般剧集和综艺\\n            while (true) {\\n                // 请求弹幕\\n                try {\\n                    danmuData = JSON.parse(fetch(`https://bullet-ws.hitv.com/${danmuFrom}/${fileNum}.json`, {\\n                        headers: {\\n                            'User-Agent': PC_UA,\\n                            'Referer': realurl\\n                        },\\n                        method: 'GET'\\n                    })).data;\\n                } catch (e) {\\n                    log('弹幕数据获取完毕');\\n                    break;\\n                }\\n                danmu = danmuData.items;\\n                if (danmu == null) {\\n                    log('这一页没有数据');\\n                    // 差点忘记加1了，死循环要崩溃~\\n                    fileNum += 1;\\n                    continue;\\n                }\\n                for (let i = 0; i < danmu.length; i += step) {\\n                    // 弹幕发送时间\\n                    timepoint = danmu[i].time / 1000;\\n                    // 弹幕样式\\n                    ct = 1;\\n                    if (danmu[i].v2_position) {\\n                        // 顶端弹幕\\n                        ct = 5;\\n                    }\\n                    // 弹幕颜色(默认)\\n                    color = 16777215;\\n                    // 颜色设置——可自行修改替换left为right(原来是左右渐变的颜色，但xml格式本身并不支持，所以二选一吧，left一般颜色比较深，right一般颜色比较浅)\\n                    if (danmu[i].v2_color) {\\n                        color = (danmu[i].v2_color.color_left.r << 16) + (danmu[i].v2_color.color_left.g << 8) + (danmu[i].v2_color.color_left.b);\\n                    }\\n                    // 弹幕内容\\n                    content = danmu[i].content;\\n                    if (content.indexOf('<') != -1 || content.indexOf('>') != -1 || content.indexOf('&') != -1 || content.indexOf('\\\\u0000') != -1 || content.indexOf('\\\\b') != -1) {\\n                        continue;\\n                    }\\n                    tempdata = `<d p=\\\"${timepoint},${ct},${size},${color},0\\\">${content}</d>\\\\n`\\n                    data += tempdata;\\n                }\\n                fileNum += 1;\\n            }\\n        }\\n        // 最终待写入的弹幕数据\\n        danmustr = `<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\\\n<i>\\\\n${data}</i>`;\\n        // 写入弹幕\\n        dm = 'hiker://files/cache/danmu/' + 'Mg_from_' + getPageTitle() + '.xml';\\n        saveFile(dm, danmustr);\\n        history['Mg_from_' + getPageTitle()] = realurl;\\n        saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(danmuSetting));\\n        putVar('dm_share', dm);\\n        return dm;\\n    } catch (e) {\\n        log('出错了:' + e)\\n        showLoading('天呐撸，获取失败了呢！');\\n        // return 'hiker://files/cache/danmu/' + 'Mg_from_' + getPageTitle() + '.xml';\\n        return false;\\n    }\\n}\\n\\n//官方弹幕函数| YK\\n$.exports.YKdm = function (realurl) {\\n    const parseCookie = (cookieStr) => {\\n        const cookies = {};\\n        cookieStr.split(\\\";\\\").forEach((cookie) => {\\n            const parts = cookie.split(\\\"=\\\");\\n            const key = parts[0].trim();\\n            const value = parts[1] ? decodeURIComponent(parts[1].trim()) : \\\"\\\";\\n            cookies[key] = value;\\n        }\\n        );\\n        return cookies;\\n    }\\n\\n    const get_tk_enc = () => {\\n        const api_url = \\\"https://acs.youku.com/h5/mtop.com.youku.aplatform.weakget/1.0/?jsv=2.5.1&appKey=24679788\\\";\\n        let cookies = undefined;\\n        while (cookies === undefined) {\\n            cookies = JSON.parse(fetchCookie(api_url, { headers: { \\\"content-type\\\": \\\"application/json\\\" }, body: \\\"\\\", method: \\\"GET\\\" }));\\n        }\\n        let targetCookie = {};\\n        for (let cookieStr of cookies) {\\n            targetCookie = Object.assign(targetCookie, parseCookie(cookieStr));\\n        }\\n        return targetCookie;\\n    }\\n\\n    const get_cna = () => {\\n        const api_url = \\\"https://log.mmstat.com/eg.js\\\";\\n        cookies = JSON.parse(fetchCookie(api_url, { headers: { \\\"content-type\\\": \\\"application/json\\\" }, body: \\\"\\\", method: \\\"GET\\\" }));\\n        let targetCookie = {};\\n        for (let cookieStr of cookies) {\\n            targetCookie = Object.assign(targetCookie, parseCookie(cookieStr));\\n        }\\n        return targetCookie[\\\"cna\\\"];\\n    }\\n\\n    const yk_msg_sign = (msg) => {\\n        return md5(msg + \\\"MkmC9SoIw6xCkSKHhJ7b5D2r51kBiREr\\\");\\n    }\\n\\n    const yk_t_sign = (token, t, appkey, data) => {\\n        const text = [token, t, appkey, data].join(\\\"&\\\");\\n        return md5(text);\\n    }\\n\\n    const get_vinfos_by_video_id = (url) => {\\n        const pathSegments = url.split(\\\"/\\\");\\n        const video_id = pathSegments[pathSegments.length - 1].split(\\\".\\\")[0].slice(3);\\n        if (video_id) {\\n            const api_url = \\\"https://openapi.youku.com/v2/videos/show.json\\\";\\n            const params = { client_id: \\\"53e6cc67237fc59a\\\", video_id: video_id, package: \\\"com.huawei.hwvplayer.youku\\\", ext: \\\"show\\\" };\\n            const res = JSON.parse(request(buildUrl(api_url, params)));\\n            const duration = res.duration;\\n            return [video_id, duration];\\n        }\\n    }\\n\\n    const resolve = (url) => {\\n        filePath = 'hiker://files/cache/danmu/' + 'YK_from_' + getPageTitle() + '.xml';\\n        // 字体大小、弹幕步长、解析记录\\n        var danmuSetting = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\\n        var size = danmuSetting.fontSize;\\n        var step = danmuSetting.step;\\n        var history = danmuSetting.history;\\n        if (history['YK_from_' + getPageTitle()] == url && fileExist(filePath)) {\\n            dm = filePath;\\n            putVar('dm_share', dm);\\n            return dm;\\n        }\\n        const cna = get_cna();\\n        const tk_enc = get_tk_enc();\\n        const headers = {\\n            \\\"Content-Type\\\": \\\"application/x-www-form-urlencoded\\\",\\n            \\\"Cookie\\\": \\\"_m_h5_tk=\\\" + tk_enc[\\\"_m_h5_tk\\\"] + \\\";_m_h5_tk_enc=\\\" + tk_enc[\\\"_m_h5_tk_enc\\\"] + \\\";\\\",\\n            \\\"Referer\\\": \\\"https://v.youku.com\\\",\\n            \\\"User-Agent\\\": \\\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.88 Safari/537.36\\\"\\n        };\\n        const [vid, duration] = get_vinfos_by_video_id(url);\\n        const max_mat = Math.floor(duration / 60) + 1;\\n        var xmlData = '';\\n        // 弹幕样式\\n        var ct = 1;\\n        const api_url = \\\"https://acs.youku.com/h5/mopen.youku.danmu.list/1.0/\\\";\\n        try {\\n            for (let mat = 0; mat < max_mat; mat++) {\\n                let msg = { \\\"ctime\\\": Date.now(), \\\"ctype\\\": 10004, \\\"cver\\\": \\\"v1.0\\\", \\\"guid\\\": cna, \\\"mat\\\": mat, \\\"mcount\\\": 1, \\\"pid\\\": 0, \\\"sver\\\": \\\"3.1.0\\\", \\\"type\\\": 1, \\\"vid\\\": vid };\\n                let str = JSON.stringify(msg);\\n                let msg_b64encode = base64Encode(str);\\n                msg[\\\"msg\\\"] = msg_b64encode;\\n                msg[\\\"sign\\\"] = yk_msg_sign(msg_b64encode);\\n                let data = JSON.stringify(msg);\\n                // const t = Date.now();有毒，海阔上会得到一个科学计数法表示的时间\\n                let t = Date.now() + \\\"\\\";\\n                let params = {\\n                    \\\"jsv\\\": \\\"2.5.6\\\",\\n                    \\\"appKey\\\": \\\"24679788\\\",\\n                    \\\"t\\\": t,\\n                    \\\"sign\\\": yk_t_sign(tk_enc[\\\"_m_h5_tk\\\"].slice(0, 32), t, \\\"24679788\\\", data),\\n                    \\\"api\\\": \\\"mopen.youku.danmu.list\\\",\\n                    \\\"v\\\": \\\"1.0\\\",\\n                    \\\"type\\\": \\\"originaljson\\\",\\n                    \\\"dataType\\\": \\\"jsonp\\\",\\n                    \\\"timeout\\\": \\\"20000\\\",\\n                    \\\"jsonpIncPrefix\\\": \\\"utility\\\"\\n                };\\n                let tempLink = buildUrl(api_url, params);\\n                let res = post(tempLink,\\n                    {\\n                        body: { \\\"data\\\": data },\\n                        headers: headers\\n                    }\\n                );\\n                danmuInfo = JSON.parse(res).data.result;\\n                if (danmuInfo.code === '-1') {\\n                    continue;\\n                }\\n                danmuData = JSON.parse(danmuInfo).data.result;\\n                for (let i = 0; i < danmuData.length; i += step) {\\n                    // 弹幕发送时间\\n                    timepoint = danmuData[i].playat / 1000;\\n                    // 弹幕颜色(默认)\\n                    color = 16777215;\\n                    propertis = JSON.parse(danmuData[i].propertis);\\n                    if (propertis.color && typeof (propertis.color) === \\\"number\\\") {\\n                        color = propertis.color;\\n                    } else {\\n                        // 奇葩，神话电视剧8-9集竟然还有字符串\\n                        color = propertis.color.match(/\\\\d+/g)[0];\\n                    }\\n                    // 弹幕内容\\n                    content = danmuData[i].content;\\n                    if (content.indexOf('<') != -1 || content.indexOf('>') != -1 || content.indexOf('&') != -1 || content.indexOf('\\\\u0000') != -1 || content.indexOf('\\\\b') != -1) {\\n                        continue;\\n                    }\\n                    tempdata = `<d p=\\\"${timepoint},${ct},${size},${color},0\\\">${content}</d>\\\\n`;\\n                    // log(tempdata);\\n                    xmlData += tempdata;\\n                }\\n            }\\n            // 最终待写入的弹幕数据\\n            danmustr = `<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\\\n<i>\\\\n${xmlData}</i>`;\\n            // 写入弹幕\\n            dm = 'hiker://files/cache/danmu/' + 'YK_from_' + getPageTitle() + '.xml';\\n            saveFile(dm, danmustr);\\n            history['YK_from_' + getPageTitle()] = url;\\n            saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(danmuSetting));\\n            putVar('dm_share', dm);\\n            return dm;\\n        } catch (e) {\\n            log('出错了：' + e);\\n            showLoading('天呐撸，获取失败了呢！');\\n            return false;\\n        }\\n    }\\n    return resolve(realurl);\\n}\\n\\n//官方弹幕函数| QY  Java+多线程\\n$.exports.QYdm = function (realurl) {\\n    // m:s转换s\\n    const time_to_second = (time) => {\\n        let t = time.split(\\\":\\\");\\n        let s = 0;\\n        let m = 1;\\n        while (t.length > 0) {\\n            s += m * parseInt(t.pop(), 10);\\n            m *= 60;\\n        }\\n        return s;\\n    }\\n    // xml项抽取\\n    const extract = (xml, tag) => {\\n        const reg = new RegExp(`<${tag}>(.*?)</${tag}>`, \\\"g\\\");\\n        const matches = xml.match(reg);\\n        if (!matches) {\\n            return [];\\n        }\\n        const res = matches.map(x => x.substring(tag.length + 2, x.length - tag.length - 3));\\n        return res;\\n    }\\n    // 核心\\n    const resolve = (url) => {\\n        var filePath = 'hiker://files/cache/danmu/' + 'QY_from_' + getPageTitle() + '.xml';\\n        // 字体大小、弹幕步长、解析记录\\n        var danmuSetting = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\\n        var size = danmuSetting.fontSize;\\n        var step = danmuSetting.step;\\n        var history = danmuSetting.history;\\n        var dm = '';\\n        if (history['QY_from_' + getPageTitle()] == url && fileExist(filePath)) {\\n            log('弹幕文件已存在：' + filePath + '\\\\t对应来源：' + url);\\n            dm = filePath;\\n            putVar('dm_share', dm);\\n            return dm;\\n        }\\n        // var xmlData = '';\\n        // 弹幕样式\\n        var ct = 1;\\n        // const data = fetchPC(url);\\n        const data = fetch(url);\\n        // let result = data.match(/window.Q.PageInfo.playPageInfo=(.*);/);\\n        let result = data.match(/\\\"videoInfo\\\":({.*?})\\\\s*,\\\\s*/);\\n        let page_info = JSON.parse(result[1]);\\n        // log(page_info);\\n        // let duration = time_to_second(page_info.duration);\\n        let duration = page_info.duration;\\n        let albumid = page_info.albumId;\\n        // let tvid = page_info.tvId.toString();\\n        let tvid = page_info.tvid.toString();\\n        let categoryid = page_info.cid;\\n        //一页5分钟\\n        let page = Math.round(duration / (60 * 5));\\n        let params = {\\n            rn: \\\"0.0123456789123456\\\",\\n            business: \\\"danmu\\\",\\n            is_iqiyi: \\\"true\\\",\\n            is_video_page: \\\"true\\\",\\n            tvid: tvid,\\n            albumid: albumid,\\n            categoryid: categoryid,\\n            qypid: \\\"01010021010000000000\\\"\\n        };\\n        try {\\n            var results = []\\n            dm = 'hiker://files/cache/danmu/' + 'QY_from_' + getPageTitle() + '.xml';\\n            var task = function (obj) {\\n                // 引入解压库Zlib\\n                Zlib = $.require(\\\"hiker://page/zlib?rule=dm盒子\\\");\\n                // 多线程，可能导致请求得到的数据不完整（某一次被拒绝了，然后就[Zlib] Input too short）\\n                // 定义带重试的fetch函数【针对HEX字符串】\\n                function fetchWithRetry(url, retries) {\\n                    let attempt = 0;\\n                    while (attempt < retries) {\\n                        try {\\n                            let res = fetch(url, { toHex: true });\\n                            // 检查数据长度是否合法（HEX字符串至少4字符）\\n                            if (res && res.length >= 4 && res.length % 2 === 0) {\\n                                return res;\\n                            } else {\\n                                log(`[Retry] Invalid data length: ${res.length || 0}, attempt ${attempt + 1}`);\\n                                try {\\n                                    java.lang.Thread.sleep(2000);\\n                                } catch (e) {\\n                                    // java.lang.Thread.currentThread().interrupt();\\n                                    log(\\\"Thread was interrupted during sleep.\\\");\\n                                }\\n                                attempt++;\\n                            }\\n                        } catch (e) {\\n                            log(`[Retry] Fetch error: ${e.message}, attempt ${attempt + 1}`);\\n                            attempt++;\\n                        }\\n                    }\\n                    return null; // 重试后仍失败\\n                }\\n\\n                let xml = '';\\n                try {\\n                    let res = fetchWithRetry(obj.url, 3);\\n                    if (!res) {\\n                        minStart=Number(obj.url.split('_300_')[1].split('.z')[0]);\\n                        tipInfo=`${(minStart-1)*5}-${(minStart)*5}min弹幕数据丢失`;\\n                        log(tipInfo);\\n                        toast(tipInfo);\\n                        throw new Error(`Failed to fetch valid data after retries from ${obj.url}`);\\n                    }\\n                    xml = Zlib.uncompress(res); // 自动处理HEX转换\\n                } catch (e) {\\n                    log(\\\"Error during fetch or decompression:\\\"+e.message);\\n                    return '';\\n                }\\n\\n                let danmaku = extract(xml, \\\"content\\\");\\n                let showTime = extract(xml, \\\"showTime\\\");\\n                let colors = extract(xml, \\\"color\\\");\\n                let partXml = '';\\n                for (let i = 0; i < danmaku.length; i += step) {\\n                    // 弹幕发送时间\\n                    timepoint = showTime[i];\\n                    // 弹幕颜色(默认)\\n                    color = parseInt(colors[i], 16);\\n                    // 弹幕内容\\n                    content = danmaku[i];\\n                    if (content.indexOf('<') != -1 || content.indexOf('>') != -1 || content.indexOf('&') != -1 || content.indexOf('\\\\u0000') != -1 || content.indexOf('\\\\b') != -1) {\\n                        continue;\\n                    }\\n                    tempdata = `<d p=\\\"${timepoint},${ct},${size},${color},0\\\">${content}</d>\\\\n`;\\n                    partXml += tempdata;\\n                }\\n                return partXml;\\n            };\\n            var tasks = [];\\n            for (let i = 0; i < page; i++) {\\n                // showLoading(`进度：${i}/${page}`);\\n                let api_url = `https://cmts.iqiyi.com/bullet/${tvid.slice(-4, -2)}/${tvid.slice(-2)}/${tvid}_300_${i + 1}.z`;\\n                // 看一看第一个链接是否正确\\n                let tempLink = buildUrl(api_url, params);\\n                tasks.push({\\n                    func: task,\\n                    param: {\\n                        url: tempLink\\n                    },\\n                    id: \\\"task\\\" + i\\n                })\\n            }\\n            var count = tasks.length;\\n            be(tasks, {\\n                func: function (obj, id, error, taskResult) {\\n                    if (error) {\\n                        log(\\\"task:\\\" + id + \\\"\\\\t,error:\\\" + error.message);\\n                    }\\n                    obj.results.push(taskResult)\\n                    count = count - 1;\\n                    if (count == 1) {\\n                        let xmlData = obj.results.join('');\\n                        // 最终待写入的弹幕数据\\n                        let danmustr = `<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\\\n<i>\\\\n${xmlData}</i>`;\\n                        saveFile(dm, danmustr);\\n                        history['QY_from_' + getPageTitle()] = url;\\n                        saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(danmuSetting));\\n                        putVar('dm_share', dm);\\n                        hideLoading();\\n                        // toast(\\\"Qydm执行完成\\\");\\n                        return \\\"break\\\";\\n                    } else if (count > 0) {\\n                        showLoading(\\\"下载中，剩余任务：\\\" + count)\\n                    } else {\\n                        hideLoading();\\n                    }\\n                },\\n                param: {\\n                    results: results,\\n                    dm: dm\\n                }\\n            });\\n            return dm;\\n        } catch (e) {\\n            log('出错了：' + e.message);\\n            showLoading('天呐撸，获取失败了呢！');\\n            return false;\\n        }\\n    };\\n    return resolve(realurl);\\n}\\n\\n\\n//左岸弹幕库|官 （彩处理【基本全白】、全right【top（基本就系统的一条数据）】；）\\n$.exports.zuoandm = function (realurl) {\\n    filePath = 'hiker://files/cache/danmu/' + 'zuoan_from_' + getPageTitle() + '.xml';\\n    // 字体大小、弹幕步长、解析记录\\n    var danmuSetting = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\\n    var size = danmuSetting.fontSize;\\n    var step = danmuSetting.step;\\n    var history = danmuSetting.history;\\n    if (history['zuoan_from_' + getPageTitle()] == realurl && fileExist(filePath)) {\\n        dm = filePath;\\n        putVar('dm_share', dm);\\n        return dm;\\n    }\\n    try {\\n        var data = '';\\n        // 弹幕样式\\n        var ct = 1;\\n        try {\\n            var danmuData = JSON.parse(fetch('https://dmku.thefilehosting.com/?ac=dm&url=' + realurl)).danmuku;\\n        } catch (e) {\\n            log(\\\"请求失败:\\\" + e.message);\\n        }\\n        for (let i = 0; i < danmuData.length; i += step) {\\n            // 弹幕发送时间\\n            timepoint = danmuData[i][0];\\n            // 弹幕样式\\n            ct = 1;\\n            if (danmuData[i][1] == 'top') {\\n                // 顶端弹幕\\n                ct = 5;\\n            }\\n            // 颜色设置\\n            var hex = danmuData[i][2].replace('#', '');\\n            if (hex.length == 3) {\\n                let t = ''\\n                for (let i = 0; i < hex.length; i++) {\\n                    t += hex.slice(i, i + 1).concat(hex.slice(i, i + 1))\\n                }\\n                hex = t\\n            }\\n            color = parseInt(hex, 16);\\n            // 弹幕内容\\n            content = danmuData[i][4];\\n            if (content.indexOf('<') != -1 || content.indexOf('>') != -1 || content.indexOf('&') != -1 || content.indexOf('\\\\u0000') != -1 || content.indexOf('\\\\b') != -1) {\\n                continue;\\n            }\\n            tempdata = `<d p=\\\"${timepoint},${ct},${size},${color},0\\\">${content}</d>\\\\n`;\\n            data += tempdata;\\n        }\\n        // 最终待写入的弹幕数据\\n        danmustr = `<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\\\n<i>\\\\n${data}</i>`;\\n        // 写入弹幕\\n        dm = 'hiker://files/cache/danmu/' + 'zuoan_from_' + getPageTitle() + '.xml';\\n        saveFile(dm, danmustr);\\n        history['zuoan_from_' + getPageTitle()] = realurl;\\n        saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(danmuSetting));\\n        putVar('dm_share', dm);\\n        return dm;\\n    } catch (e) {\\n        log('出错了:' + e);\\n        showLoading('天呐撸，获取失败了呢！');\\n        return false;\\n    }\\n}\\n\\n//hls|官 虾米(彩处理，返回数据全right不处理)\\n$.exports.hlsdm = function (realurl) {\\n    filePath = 'hiker://files/cache/danmu/' + 'hls_from_' + getPageTitle() + '.xml';\\n    // 字体大小、弹幕步长、解析记录\\n    var danmuSetting = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\\n    var size = danmuSetting.fontSize;\\n    var step = danmuSetting.step;\\n    var history = danmuSetting.history;\\n    if (history['hls_from_' + getPageTitle()] == realurl && fileExist(filePath)) {\\n        dm = filePath;\\n        putVar('dm_share', dm);\\n        return dm;\\n    }\\n    try {\\n        var data = '';\\n        // 弹幕样式\\n        var ct = 1;\\n        try {\\n            var danmuData = JSON.parse(fetch('https://dmku.hls.one?ac=dm&url=' + realurl)).danmuku;\\n        } catch (e) {\\n            log(\\\"请求失败:\\\" + e.message);\\n        }\\n        for (let i = 0; i < danmuData.length; i += step) {\\n            // 弹幕发送时间\\n            timepoint = danmuData[i][0];\\n            // 弹幕样式\\n            ct = 1;\\n            // 颜色设置\\n            var hex = danmuData[i][2].replace('#', '');\\n            if (hex.length == 3) {\\n                let t = ''\\n                for (let i = 0; i < hex.length; i++) {\\n                    t += hex.slice(i, i + 1).concat(hex.slice(i, i + 1))\\n                }\\n                hex = t\\n            }\\n            color = parseInt(hex, 16);\\n            // 弹幕内容\\n            content = danmuData[i][4];\\n            if (content.indexOf('<') != -1 || content.indexOf('>') != -1 || content.indexOf('&') != -1 || content.indexOf('\\\\u0000') != -1 || content.indexOf('\\\\b') != -1) {\\n                continue;\\n            }\\n            tempdata = `<d p=\\\"${timepoint},${ct},${size},${color},0\\\">${content}</d>\\\\n`;\\n            data += tempdata;\\n        }\\n        // 最终待写入的弹幕数据\\n        danmustr = `<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\\\n<i>\\\\n${data}</i>`;\\n        // 写入弹幕\\n        dm = 'hiker://files/cache/danmu/' + 'hls_from_' + getPageTitle() + '.xml';\\n        saveFile(dm, danmustr);\\n        history['hls_from_' + getPageTitle()] = realurl;\\n        saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(danmuSetting));\\n        putVar('dm_share', dm);\\n        return dm;\\n    } catch (e) {\\n        log('出错了:' + e);\\n        showLoading('天呐撸，获取失败了呢！');\\n        return false;\\n    }\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"解析调用汇总\",\"path\":\"lazyToJiexi\",\"rule\":\"// video嗅探解析，主要供配置助手调用，参数为数组\\n$.exports.videoX5 = function (vipUrl, urls, names, headers) {\\n    dm=$.require('hiker://page/dmFun?rule=dm盒子').dmRoute(vipUrl);\\n    if(dm===false)log('弹幕获取出错了...');\\n    dmPath = getPath(getVar('dm_share')).slice(7);\\n    var {copyFile,moveFile} = $.require(\\\"hiker://page/fileAPI?rule=dm盒子\\\");\\n    dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\\n    saveLocal=dmSettings.saveLocal;\\n    doubleWrite=dmSettings.doubleWrite;\\n    if (saveLocal) {\\n        destinationDir='/storage/emulated/0/Download/海阔视界/danmu/';\\n        if (doubleWrite) {\\n            copyFile(dmPath,destinationDir);\\n        }else{\\n            moveFile(dmPath,destinationDir);\\n        }\\n    }\\n    if (headers) {\\n        var headers = headers;\\n    } else {\\n        var headers = [];\\n    }\\n    return JSON.stringify({\\n        names: names,\\n        urls: urls,\\n        danmu: getVar('dm_share', '获取失败'),\\n        headers: headers\\n    })\\n}\\n\\n//香免版，未验证可用性\\n$.exports.classicalX5 = function (vipUrl, originUrl) {\\n    // 感谢香佬提供通免——dm魔改\\n    function x5rule(jiexurl, srcurl) {\\n        showLoading(\\\"网页访问检索中，请稍候...\\\");\\n        var video = 'webRule://' + jiexurl + '@' + $.toString((srcurl) => {\\n            //fba.log(fba.getUrls());\\n            var urls = _getUrls();\\n            if (window.__count == null || window.__count == undefined) {\\n                window.__count = 0\\n            }\\n            if (window.__count >= 23) {\\n                // return srcurl\\n                bfurl = srcurl.split(';')[0];\\n                args = srcurl.match(/;[\\\\S\\\\s]+}/g)[0];\\n                return JSON.stringify({\\n                    urls: [bfurl],\\n                    names: ['dm盒子'],\\n                    danmu: fba.getVar('dm_share', '获取失败')\\n                }) + args;\\n            }\\n            window.__count = window.__count + 1;\\n            if (window.__count > 1 && window.__count <= 3 && window.__count != null && window.__count != undefined) {\\n                if (document.querySelector('body').innerText.search(/触发了防盗链|未授权|接口防盗|请到主站观看/) != -1) {\\n                    if (!srcurl) {\\n                        fba.log('尝试跳防盗验证一');\\n                        location.href = location.href;\\n                    } else {\\n                        fba.log('尝试跳防盗验证二');\\n                        location.href = srcurl\\n                    }\\n                };\\n            } else if (window.__count > 3 && window.__count != null && window.__count != undefined) {\\n                if (urls.length < 1) {\\n                    fba.hideLoading();\\n                    return 'toast://检索失败，可能链接无法访问。';\\n                } else if (urls.length == 1) {\\n                    fba.log('尝试直链与JSON解析');\\n                    if (urls[0].match(/dycdn\\\\-tos\\\\.pstatp|\\\\.m3u8|\\\\.mp4|\\\\.flv|netease\\\\.com|video_mp4|type\\\\=m3u8|pt\\\\=m3u8|\\\\/video\\\\/tos\\\\//) && !urls[0].match(/\\\\.html|m3u8\\\\.tv|m3u8\\\\.pw|\\\\&next|ac\\\\=dm|\\\\=http|https\\\\:\\\\/\\\\/[\\\\d]\\\\.m3u8|\\\\?url\\\\=\\\\/m3u8/)) {\\n                        //fy_bridge_app.log(urls[0])\\n                        if (urls[0].indexOf('bilivideo') != -1) {\\n                            // return urls[0] + ';{Referer@https://www.bilibili.com&&User-Agent@Mozilla/5.0}';\\n                            return JSON.stringify({\\n                                urls: [urls[0]],\\n                                names: ['dm盒子'],\\n                                danmu: fba.getVar('dm_share', '获取失败'),\\n                                headers: [{\\n                                    'Referer': 'https://www.bilibili.com',\\n                                    'User-Agent': 'Mozilla/5.0'\\n                                }]\\n                            });\\n                        } else if (urls[0].indexOf('titan.mgtv.com') != -1) {\\n                            // return urls[0] + '#isVideo=true#' + ';{Referer@www.mgtv.com&&User-Agent@Mozilla/5.0}';\\n                            return JSON.stringify({\\n                                urls: [urls[0] + '#isVideo=true#'],\\n                                names: ['dm盒子'],\\n                                danmu: fba.getVar('dm_share', '获取失败'),\\n                                headers: [{\\n                                    'Referer': 'www.mgtv.com',\\n                                    'User-Agent': 'Mozilla/5.0'\\n                                }]\\n                            });\\n                        } else {\\n                            // return urls[0]\\n                            bfurl = urls[0].split(';')[0];\\n                            args = urls[0].match(/;[\\\\S\\\\s]+}/g)[0];\\n                            return JSON.stringify({\\n                                urls: [bfurl],\\n                                names: ['dm盒子'],\\n                                danmu: fba.getVar('dm_share', '获取失败')\\n                            }) + args;\\n                        }\\n                    } else if (location.href.match(/dycdn\\\\-tos\\\\.pstatp|\\\\.m3u8|\\\\.mp4|\\\\.flv|netease\\\\.com|video_mp4|type\\\\=m3u8|pt\\\\=m3u8|\\\\/video\\\\/tos\\\\//) && !location.href.match(/\\\\.html|m3u8\\\\.tv|m3u8\\\\.pw|\\\\&next|ac\\\\=dm|\\\\=http|https\\\\:\\\\/\\\\/[\\\\d]\\\\.m3u8|\\\\?url\\\\=\\\\/m3u8/)) {\\n                        // return location.href;\\n                        bfurl = location.href.split(';')[0];\\n                        args = location.href.match(/;[\\\\S\\\\s]+}/g)[0];\\n                        return JSON.stringify({\\n                            urls: [bfurl],\\n                            names: ['dm盒子'],\\n                            danmu: fba.getVar('dm_share', '获取失败')\\n                        }) + args;\\n                    } else {\\n                        var html = fba.fetch(location.href, {});\\n                        if (!/\\\\<meta/.test(html) && !/\\\\<html/.test(html)) {\\n                            // return JSON.parse(html).url;\\n                            bfurl = JSON.parse(html).url.split(';')[0];\\n                            args = JSON.parse(html).url.match(/;[\\\\S\\\\s]+}/g)[0];\\n                            return JSON.stringify({\\n                                urls: [bfurl],\\n                                names: ['dm盒子'],\\n                                danmu: fba.getVar('dm_share', '获取失败')\\n                            }) + args;\\n                        } else if (/没有找到站点|网页无法打开|404 Not Found|备案后可继续访问/.test(html)) {\\n                            // return location.href.substring(location.href.indexOf('=http') + 1);\\n                            bfurl = location.href.substring(location.href.indexOf('=http') + 1).split(';')[0];\\n                            args = location.href.substring(location.href.indexOf('=http') + 1).match(/;[\\\\S\\\\s]+}/g)[0];\\n                            return JSON.stringify({\\n                                urls: [bfurl],\\n                                names: ['dm盒子'],\\n                                danmu: fba.getVar('dm_share', '获取失败')\\n                            }) + args;\\n                        } else {\\n                            // return location.href\\n                            bfurl = location.href.split(';')[0];\\n                            args = location.href.match(/;[\\\\S\\\\s]+}/g)[0];\\n                            return JSON.stringify({\\n                                urls: [bfurl],\\n                                names: ['dm盒子'],\\n                                danmu: fba.getVar('dm_share', '获取失败')\\n                            }) + args;\\n                        }\\n                    };\\n                } else {\\n                    fba.log('日志检索第' + window.__count + '次');\\n                    for (var i in urls) {\\n                        if (urls[i].match(/dycdn\\\\-tos\\\\.pstatp|\\\\.m3u8|\\\\.mp4|\\\\.flv|netease\\\\.com|video_mp4|type\\\\=m3u8|pt\\\\=m3u8|\\\\/video\\\\/tos\\\\//) && !urls[i].match(/\\\\.html|m3u8\\\\.tv|m3u8\\\\.pw|\\\\&next|ac\\\\=dm|\\\\=http|https\\\\:\\\\/\\\\/[\\\\d]\\\\.m3u8|\\\\?url\\\\=\\\\/m3u8|\\\\.css|\\\\.js\\\\?/)) {\\n                            //fy_bridge_app.log(urls[i])\\n                            if (fy_bridge_app.getHeaderUrl) {\\n                                // return fy_bridge_app.getHeaderUrl(urls[i]).replace(\\\";{\\\", \\\"#ignoreImg=true##isVideo=true#;{\\\");\\n                                bfurl = fy_bridge_app.getHeaderUrl(urls[i]).replace(\\\";{\\\", \\\"#ignoreImg=true##isVideo=true#;{\\\").split(';')[0];\\n                                args = fy_bridge_app.getHeaderUrl(urls[i]).replace(\\\";{\\\", \\\"#ignoreImg=true##isVideo=true#;{\\\").match(/;[\\\\S\\\\s]+}/g)[0];\\n                                return JSON.stringify({\\n                                    urls: [bfurl],\\n                                    names: ['dm盒子'],\\n                                    danmu: fba.getVar('dm_share', '获取失败')\\n                                }) + args;\\n                            } else {\\n                                if (urls[i].indexOf('bilivideo') != -1) {\\n                                    // return urls[i] + ';{Referer@https://www.bilibili.com&&User-Agent@Mozilla/5.0}';\\n                                    return JSON.stringify({\\n                                        urls: [urls[i]],\\n                                        names: ['dm盒子'],\\n                                        danmu: fba.getVar('dm_share', '获取失败'),\\n                                        headers: [{\\n                                            'Referer': 'https://www.bilibili.com',\\n                                            'User-Agent': 'Mozilla/5.0'\\n                                        }]\\n                                    });\\n                                } else if (urls[i].indexOf('titan.mgtv.com') != -1) {\\n                                    // return urls[i] + '#isVideo=true#' + ';{Referer@www.mgtv.com&&User-Agent@Mozilla/5.0}';\\n                                    return JSON.stringify({\\n                                        urls: [urls[i] + '#isVideo=true#'],\\n                                        names: ['dm盒子'],\\n                                        danmu: fba.getVar('dm_share', '获取失败'),\\n                                        headers: [{\\n                                            'Referer': 'www.mgtv.com',\\n                                            'User-Agent': 'Mozilla/5.0'\\n                                        }]\\n                                    });\\n                                } else if (urls[i].indexOf('juhaokan') != -1) {\\n                                    // return urls[i] + ';{Referer@https://www.juhaokan.cc/}';\\n                                    return JSON.stringify({\\n                                        urls: [urls[i]],\\n                                        names: ['dm盒子'],\\n                                        danmu: fba.getVar('dm_share', '获取失败'),\\n                                        headers: [{\\n                                            'Referer': 'https://www.juhaokan.cc/'\\n                                        }]\\n                                    });\\n                                } else if (urls[i].indexOf('ojbk') != -1) {\\n                                    // return urls[i] + ';{Referer@https://v.ojbkjx.com/}';\\n                                    return JSON.stringify({\\n                                        urls: [urls[i]],\\n                                        names: ['dm盒子'],\\n                                        danmu: fba.getVar('dm_share', '获取失败'),\\n                                        headers: [{\\n                                            'Referer': 'https://v.ojbkjx.com/'\\n                                        }]\\n                                    });\\n                                } else if (urls[i].indexOf('wkfile') != -1) {\\n                                    // return urls[i] + ';{Referer@https://fantuan.wkfile.com/}';\\n                                    return JSON.stringify({\\n                                        urls: [urls[i]],\\n                                        names: ['dm盒子'],\\n                                        danmu: fba.getVar('dm_share', '获取失败'),\\n                                        headers: [{\\n                                            'Referer': 'https://fantuan.wkfile.com/'\\n                                        }]\\n                                    });\\n                                } else if (urls[i].indexOf('shenglinyiyang') != -1) {\\n                                    // return urls[i] + ';{Referer@https://zyz.sdljwomen.com/}';\\n                                    return JSON.stringify({\\n                                        urls: [urls[i]],\\n                                        names: ['dm盒子'],\\n                                        danmu: fba.getVar('dm_share', '获取失败'),\\n                                        headers: [{\\n                                            'Referer': 'https://zyz.sdljwomen.com/'\\n                                        }]\\n                                    });\\n                                } else if (urls[i].indexOf('peizq.online') != -1) {\\n                                    // return urls[i] + ';{Referer@https://play.peizq.online/}';\\n                                    return JSON.stringify({\\n                                        urls: [urls[i]],\\n                                        names: ['dm盒子'],\\n                                        danmu: fba.getVar('dm_share', '获取失败'),\\n                                        headers: [{\\n                                            'Referer': 'https://play.peizq.online/'\\n                                        }]\\n                                    });\\n                                } else {\\n                                    // return urls[i] + '#isVideo=true#'\\n                                    bfurl = (urls[i] + '#isVideo=true#').split(';')[0];\\n                                    args = (urls[i] + '#isVideo=true#').match(/;[\\\\S\\\\s]+}/g)[0];\\n                                    return JSON.stringify({\\n                                        urls: [bfurl],\\n                                        names: ['dm盒子'],\\n                                        danmu: fba.getVar('dm_share', '获取失败')\\n                                    }) + args;\\n                                }\\n                            }\\n                        }\\n                    } //end for i\\n                }\\n            }\\n        }, srcurl);\\n        return video\\n    }\\n    // 判断弹幕线路来源\\n    dm=$.require('hiker://page/dmFun?rule=dm盒子').dmRoute(vipUrl);\\n    dmPath = getPath(getVar('dm_share')).slice(7);\\n    var {copyFile,moveFile} = $.require(\\\"hiker://page/fileAPI?rule=dm盒子\\\");\\n    dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\\n    saveLocal=dmSettings.saveLocal;\\n    doubleWrite=dmSettings.doubleWrite;\\n    if (saveLocal) {\\n        destinationDir='/storage/emulated/0/Download/海阔视界/danmu/';\\n        if (doubleWrite) {\\n            copyFile(dmPath,destinationDir);\\n        }else{\\n            moveFile(dmPath,destinationDir);\\n        }\\n    }\\n    return x5rule(originUrl, originUrl);\\n}\\n\\n\\n\\n// 道长仓库通免版本，未验证可用性\\n$.exports.drX5 = function (vipUrl, playUrl) {\\n    function x5rule(playUrl, ms, tm, rechange) {\\n        // log('调用仓库免嗅探传参超时为:'+ms);\\n        tm = parseInt(tm) || 5000;\\n        const {\\n            isVideo,\\n            getHeaders,\\n            isBadVideo\\n        } = $.require('hiker://page/globalParse?rule=道长仓库Pro');\\n        let realUrl = isVideo(playUrl, rechange);\\n        //log(realUrl);\\n        if (typeof (realUrl) == 'string') { //bool值就是失败\\n            try {\\n                let rurl = realUrl.split(\\\";\\\")[0].split(\\\"#\\\")[0];\\n                return JSON.parse(request(rurl, {\\n                    timeout: tm\\n                })).url\\n            } catch (e) {\\n                return realUrl\\n            }\\n            //return realUrl\\n        }\\n        //log(\\\"访问超时:\\\"+tm);\\n        log(\\\"尝试道长仓库x5免嗅:\\\" + playUrl);\\n        clearVar(\\\"_x5jxUrl\\\");\\n        let bad = $(\\\"网络不佳或者疑似对方网站挂了，你要查看其网页吗？\\\").confirm((playUrl) => {\\n            log(\\\"网站看起来挂了:\\\" + playUrl);\\n            return playUrl\\n        }, playUrl);\\n        try {\\n            var back = request(playUrl, {\\n                headers: getHeaders(playUrl),\\n                timeout: tm\\n            });\\n            //var back=fetch(playUrl,{headers: {'User-Agent': PC_UA}});\\n            if (!back) {\\n                log(\\\"网站\\\" + playUrl + \\\"确实啥也没返回\\\");\\n                return bad\\n            } else if (/#EXTINF/.test(back)) {\\n                //let lcache=\\\"/storage/emulated/0/Android/data/com.example.hikerview/files/Documents/cache/video.m3u8\\\";\\n                //writeFile(lcache,back);\\n                //return lcache+\\\"##\\\"+playUrl+\\\"#isVideo=true#\\\"\\n                playUrl = cacheM3u8(playUrl);\\n                return playUrl\\n            } else if ((!/触发了防盗链|未授权|接口防盗/.test(back)) && (!/http|url/.test(back)) && (!/msg|code|html/.test(back))) {\\n                log(back);\\n                return 'toast://疑似对方数据加密了，具体数据看日志'\\n            }\\n        } catch (e) {\\n            log(e.message);\\n            return bad\\n        }\\n        log('开始x5免嗅探');\\n        // require('https://hjdhnx.coding.net/p/hiker/d/dr/git/raw/master/js/lsg.js');//引用本地储存插件\\n        const lsg = $.require(\\\"hiker://page/localStorage?rule=道长仓库Pro\\\"); //引用子页面本地储存插件\\n        let local_ms = lsg.getItem('timeout');\\n        let ms = parseInt(ms) || parseInt(local_ms) || 5000;\\n        let max_count = Math.ceil(ms / 250);\\n        log(\\\"本次嗅探超时:\\\" + ms + \\\"共计待抓包:\\\" + max_count + \\\"次\\\");\\n        showLoading('嗅探中，若失败就切换web嗅探...');\\n        let _x5 = $.toString((isVideo, rechange, playUrl, max_count, PC_UA, isBadVideo) => {\\n            try {\\n                if (typeof (fba) == 'undefined' || !fba) {\\n                    var fba = fy_bridge_app;\\n                }\\n                try {\\n                    if (typeof (request) == 'undefined' || !request) {\\n                        eval(fba.getInternalJs());\\n                    }\\n                } catch (e) {\\n                    fba.log(e.message);\\n                }\\n                fba.putVar(\\\"_x5jxUrl\\\", playUrl);\\n                if (window.count == null) {\\n                    window.count = 1;\\n                }\\n                let text = '';\\n                try {\\n                    text = document.querySelector(\\\"body\\\").innerText;\\n                } catch (e) {\\n                    fba.log(e.message)\\n                }\\n                if (/触发了防盗链|未授权|接口防盗/.test(text) && window.count === 1) {\\n                    fba.log(\\\"检测到有授权，开始过授权\\\");\\n                    //location.reload();\\n                    location.href = fba.getVar(\\\"_x5jxUrl\\\");\\n                }\\n                window.count++;\\n                // fba.log('count:'+window.count+',max_count:'+max_count);\\n                if (window.count >= max_count) {\\n                    fba.log(\\\"超过\\\" + max_count * 250 + \\\"毫秒未获取到资源地址，跳到源网页,以下是加载过的地址\\\");\\n                    try {\\n                        let text = document.querySelector(\\\"body\\\").innerText;\\n                        // fba.log(text);\\n                    } catch (e) {\\n                        fba.log(e.message)\\n                    }\\n                    fba.log(JSON.stringify(_getUrls()));\\n                    return fba.getVar(\\\"_x5jxUrl\\\");\\n                }\\n\\n                function muteMe(elem) {\\n                    try {\\n                        elem.pause();\\n                    } catch (e) { }\\n                }\\n                var videos = document.querySelectorAll(\\\"video\\\"),\\n                    audios = document.querySelectorAll(\\\"audio\\\"),\\n                    v2 = document.querySelectorAll(\\\"embed\\\"),\\n                    v3 = document.querySelectorAll(\\\"#player\\\");\\n                try {\\n                    [].forEach.call(videos, function (video) {\\n                        muteMe(video);\\n                    });\\n                } catch (e) { }\\n                try {\\n                    [].forEach.call(audios, function (audio) {\\n                        muteMe(audio);\\n                    });\\n                } catch (e) { }\\n                try {\\n                    [].forEach.call(v2, function (v) {\\n                        muteMe(v);\\n                    });\\n                } catch (e) { }\\n                try {\\n                    [].forEach.call(v3, function (v) {\\n                        muteMe(v);\\n                    });\\n                } catch (e) { }\\n                var urls = _getUrls();\\n                // fba.log(JSON.stringify(urls));\\n                try {\\n                    for (let i in urls) {\\n                        let u = urls[i];\\n                        try {\\n                            u = decodeURIComponent(u);\\n                        } catch (e) {\\n                            u = unescape(u);\\n                        }\\n                        //\\n                        if (/url=http/.test(u)) {\\n                            u = u.split(\\\"url=\\\").slice(-1)[0];\\n                            // fba.log(\\\"url分割:\\\"+u);\\n                        } else if (/url=\\\\//.test(u) && /\\\\.m3u8/.test(u)) {\\n                            let host = u.match(/(.*)\\\\/\\\\/(.*?)\\\\//)[0];\\n                            u = host + u.split(\\\"url=\\\").slice(-1)[0];\\n                            // fba.log(\\\"url分割:\\\"+u);\\n                        } else if (/vid=http/.test(u)) {\\n                            u = u.split(\\\"vid=\\\").slice(-1)[0];\\n                            fba.log(\\\"vid分割:\\\" + u);\\n                        } else if (/vid=\\\\//.test(u) && /\\\\.m3u8/.test(u)) {\\n                            let host = u.match(/(.*)\\\\/\\\\/(.*?)\\\\//)[0];\\n                            u = host + u.split(\\\"vid=\\\").slice(-1)[0];\\n                            fba.log(\\\"vid分割:\\\" + u);\\n                        } else if (/\\\\?(.*)=http/.test(u) && /\\\\.m3u8/.test(u)) {\\n                            u = \\\"http\\\" + u.split(/\\\\?(.*)=http/).slice(-1)[0];\\n                            fba.log(\\\"其他分割:\\\" + u);\\n                        }\\n                        //|index\\\\.m3u8$\\n                        else if (/\\\\/1\\\\.m3u8/.test(u)) {\\n                            continue;\\n                        }\\n                        u = u.replace(/&from=.*|&next=.*|&jump=.*/, '');\\n                        let realUrl = isVideo(u, rechange);\\n                        if (typeof (realUrl) == 'string' && !isBadVideo(u)) { //过滤吊毛视频\\n                            //fy_bridge_app.setWebUa(PC_UA);\\n                            if (typeof (fba.getHeaderUrl) !== 'undefined' && typeof (rechange) !== 'function') {\\n                                // let backUrl = fba.getHeaderUrl(u.replace(\\\";{\\\",\\\"#isVideo=true#;{\\\"));\\n                                let backUrl = fba.getHeaderUrl(urls[i]).replace(';{', '#ignoreImg=true##isVideo=true#;{');\\n                                let u1 = backUrl.split('#ignoreImg')[0];\\n                                let u2 = '#ignoreImg' + backUrl.split('#ignoreImg')[1];\\n                                u1 = u1.replace(/&from=.*|&next=.*|&jump=.*/, '');\\n                                if (/url=http/.test(u1)) {\\n                                    u1 = u1.split(\\\"url=\\\").slice(-1)[0];\\n                                } else if (/url=\\\\//.test(u1) && /\\\\.m3u8/.test(u1)) {\\n                                    let host1 = u1.match(/(.*)\\\\/\\\\/(.*?)\\\\//)[0];\\n                                    u1 = host1 + u1.split(\\\"url=\\\").slice(-1)[0];\\n                                    // fba.log(\\\"url分割:\\\"+u);\\n                                } else if (/vid=http/.test(u1)) {\\n                                    u1 = u1.split(\\\"vid=\\\").slice(-1)[0];\\n                                } else if (/vid=\\\\//.test(u1) && /\\\\.m3u8/.test(u1)) {\\n                                    let host1 = u1.match(/(.*)\\\\/\\\\/(.*?)\\\\//)[0];\\n                                    u1 = host1 + u1.split(\\\"vid=\\\").slice(-1)[0];\\n                                } else if (/\\\\?(.*)=http/.test(u1) && /\\\\.m3u8/.test(u1)) {\\n                                    u1 = \\\"http\\\" + u1.split(/\\\\?(.*)=http/).slice(-1)[0];\\n                                }\\n                                backUrl = u1 + u2;\\n                                // fba.log('返回自动加cookie链接:'+backUrl);\\n                                fba.log('返回链接:' + u + '并自动加了cookie,具体cookie在视频播放处查看');\\n                                // return backUrl;\\n                                return JSON.stringify({\\n                                    urls: [u1 + '#ignoreImg=true##isVideo=true#'],\\n                                    names: ['dm盒子'],\\n                                    danmu: fba.getVar('dm_share', '获取失败')\\n                                }) + u2.replace('#ignoreImg=true##isVideo=true#;', ';');\\n                            } else {\\n                                fba.log(\\\"返回仓库x5免嗅结果:\\\" + realUrl);\\n                                return realUrl\\n                            }\\n                        }\\n                    }\\n                } catch (e) {\\n                    fba.log(e.message)\\n                }\\n            } catch (e) {\\n                // fy_bridge_app.log('x5大范围错误:'+e.message);\\n                alert('x5大范围错误:' + e.message);\\n                return 'toast://报错结束x5'\\n            }\\n        }, isVideo, rechange, playUrl, max_count, PC_UA, isBadVideo);\\n        let useWeb = lsg.getItem(\\\"通免\\\", \\\"X5\\\") === \\\"WEB\\\";\\n        //log(\\\"仓库使用web通免替代x5:\\\"+useWeb);\\n        let ruleHead = useWeb && parseInt(getAppVersion()) >= 2339 ? \\\"webRule://\\\" : \\\"x5Rule://\\\";\\n        let x5Url = ruleHead + playUrl + '@' + _x5;\\n        return x5Url\\n    }\\n    // 判断弹幕线路来源\\n    dm=$.require('hiker://page/dmFun?rule=dm盒子').dmRoute(vipUrl);\\n    dmPath = getPath(getVar('dm_share')).slice(7);\\n    var {copyFile,moveFile} = $.require(\\\"hiker://page/fileAPI?rule=dm盒子\\\");\\n    dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\\n    saveLocal=dmSettings.saveLocal;\\n    doubleWrite=dmSettings.doubleWrite;\\n    if (saveLocal) {\\n        destinationDir='/storage/emulated/0/Download/海阔视界/danmu/';\\n        if (doubleWrite) {\\n            copyFile(dmPath,destinationDir);\\n        }else{\\n            moveFile(dmPath,destinationDir);\\n        }\\n    }\\n    return x5rule(playUrl, 8000);\\n}\\n\\n// 魔断JSON免嗅解析调用\\n$.exports.Jsondm = function (vipUrl, bfurl) {\\n    dm=$.require('hiker://page/dmFun?rule=dm盒子').dmRoute(vipUrl);\\n    dmPath = getPath(getVar('dm_share')).slice(7);\\n    var {copyFile,moveFile} = $.require(\\\"hiker://page/fileAPI?rule=dm盒子\\\");\\n    dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\\n    saveLocal=dmSettings.saveLocal;\\n    doubleWrite=dmSettings.doubleWrite;\\n    if (saveLocal) {\\n        destinationDir='/storage/emulated/0/Download/海阔视界/danmu/';\\n        if (doubleWrite) {\\n            copyFile(dmPath,destinationDir);\\n        }else{\\n            moveFile(dmPath,destinationDir);\\n        }\\n    }\\n    return JSON.stringify({\\n        urls: [bfurl],\\n        names: ['dm盒子'],\\n        danmu: getVar('dm_share', '获取失败')\\n    });\\n}\\n\\n// 魔断弹幕解析引擎调用\\n$.exports.parseDm = function (vipUrl, searchType, searchName) {\\n    try {\\n        // 获取弹幕\\n        dm=$.require('hiker://page/dmFun?rule=dm盒子').dmRoute(vipUrl);\\n        if (dm===false) {\\n            log(\\\"弹幕获取出错了呜呜呜\\\");\\n        }\\n        dmPath = getPath(getVar('dm_share')).slice(7);\\n        var {copyFile,moveFile} = $.require(\\\"hiker://page/fileAPI?rule=dm盒子\\\");\\n        dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\\n        saveLocal=dmSettings.saveLocal;\\n        doubleWrite=dmSettings.doubleWrite;\\n        if (saveLocal) {\\n            destinationDir='/storage/emulated/0/Download/海阔视界/danmu/';\\n            if (doubleWrite) {\\n                copyFile(dmPath,destinationDir);\\n            }else{\\n                moveFile(dmPath,destinationDir);\\n            }\\n        }\\n        // 调用搜索\\n        filmName = getPageTitle().replace(\\\"芒果 TV-\\\",\\\"\\\").replace(\\\"优酷视频-\\\",\\\"\\\").replace(\\\"腾讯视频-\\\",\\\"\\\").replace(\\\"爱奇艺-\\\",\\\"\\\").replace(\\\"哔哩哔哩-\\\",\\\"\\\");\\n        switch (searchType) {\\n            case 1:\\n                return \\\"hiker://search?s=\\\" + filmName + \\\"&rule=\\\" + searchName + \\\"&simple=true\\\";\\n            case 2:\\n                return \\\"hiker://search?s=\\\" + filmName + \\\"&group=\\\" + searchName + \\\"&simple=true\\\";\\n            default:\\n                return \\\"toast://不要乱写参数！1-调用小程序搜索；2-调用小程序分组搜索\\\";\\n        }\\n    } catch (e) {\\n        return \\\"toast://出错了！就这样吧！\\\";\\n    }\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"通免调用汇总\",\"path\":\"lazyToX5\",\"rule\":\"// 原生嗅探-通免\\n$.exports.videoX5 = function () {\\n    // 定位真实线路-常规\\n    let ts = /ixigua|iqiyi|qq.com|mgtv|le.com|bili|sohu|youku|pptv|cctv|1905.com/;\\n    if (!input.match(ts)) {\\n        try {\\n            let From = JSON.parse(request(input).match(/var player_.*?=(.*?)</)[1]);\\n            let 加密 = From.encrypt;\\n            // let 来自 = From.from;\\n            原链 = From.url;\\n            //log(From)\\n            if (加密 == '1') {\\n                原链 = unescape(原链);\\n            } else if (加密 == '2') {\\n                原链 = unescape(base64Decode(原链));\\n            }\\n            if (/\\\\.mp4|\\\\.m3u8|\\\\.flv/.test(原链)) {\\n                showLoading('获取不到官网地址，将直链播放');\\n                return JSON.stringify({\\n                    urls: [原链],\\n                    names: ['预留弹幕接口'],\\n                    danmu: getVar('dm_share', '')\\n                });\\n            } else if (ts.test(原链)) {\\n                官链 = 原链;\\n            } else {\\n                showLoading('获取不到官网地址，将直链播放');\\n                //盗版站地址\\n                return JSON.stringify({\\n                    urls: [playParse.playerS(input)],\\n                    names: ['预留弹幕接口'],\\n                    danmu: getVar('dm_share', '')\\n                });\\n            }\\n        } catch (e) {\\n            // 若发生异常则直接为空链走嗅探\\n            官链 = 'hiker://empty';\\n        }\\n    } else {\\n        官链 = input;\\n    }\\n    // 判断弹幕线路来源\\n    dm = $.require('hiker://page/dmFun?rule=dm盒子').dmRoute(官链);\\n    dmPath = getPath(getVar('dm_share')).slice(7);\\n    var {copyFile,moveFile} = $.require(\\\"hiker://page/fileAPI?rule=dm盒子\\\");\\n    dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\\n    saveLocal=dmSettings.saveLocal;\\n    doubleWrite=dmSettings.doubleWrite;\\n    if (saveLocal) {\\n        destinationDir='/storage/emulated/0/Download/海阔视界/danmu/';\\n        if (doubleWrite) {\\n            copyFile(dmPath,destinationDir);\\n        }else{\\n            moveFile(dmPath,destinationDir);\\n        }\\n    }\\n    return JSON.stringify({\\n        urls: [\\\"video://\\\" + input],\\n        names: ['dm盒子'],\\n        danmu: getVar(\\\"dm_share\\\")\\n    })\\n}\\n\\n// 道长仓库通免\\n$.exports.drX5 = function () {\\n    function x5rule(playUrl, ms, tm, rechange) {\\n        // log('调用仓库免嗅探传参超时为:'+ms);\\n        tm = parseInt(tm) || 5000;\\n        const {\\n            isVideo,\\n            getHeaders,\\n            isBadVideo\\n        } = $.require('hiker://page/globalParse?rule=道长仓库Pro');\\n        let realUrl = isVideo(playUrl, rechange);\\n        //log(realUrl);\\n        if (typeof (realUrl) == 'string') { //bool值就是失败\\n            try {\\n                let rurl = realUrl.split(\\\";\\\")[0].split(\\\"#\\\")[0];\\n                return JSON.parse(request(rurl, {\\n                    timeout: tm\\n                })).url\\n            } catch (e) {\\n                return realUrl\\n            }\\n            //return realUrl\\n        }\\n        //log(\\\"访问超时:\\\"+tm);\\n        log(\\\"尝试道长仓库x5免嗅:\\\" + playUrl);\\n        clearVar(\\\"_x5jxUrl\\\");\\n        let bad = $(\\\"网络不佳或者疑似对方网站挂了，你要查看其网页吗？\\\").confirm((playUrl) => {\\n            log(\\\"网站看起来挂了:\\\" + playUrl);\\n            return playUrl\\n        }, playUrl);\\n        try {\\n            var back = request(playUrl, {\\n                headers: getHeaders(playUrl),\\n                timeout: tm\\n            });\\n            //var back=fetch(playUrl,{headers: {'User-Agent': PC_UA}});\\n            if (!back) {\\n                log(\\\"网站\\\" + playUrl + \\\"确实啥也没返回\\\");\\n                return bad\\n            } else if (/#EXTINF/.test(back)) {\\n                //let lcache=\\\"/storage/emulated/0/Android/data/com.example.hikerview/files/Documents/cache/video.m3u8\\\";\\n                //writeFile(lcache,back);\\n                //return lcache+\\\"##\\\"+playUrl+\\\"#isVideo=true#\\\"\\n                playUrl = cacheM3u8(playUrl);\\n                return playUrl\\n            } else if ((!/触发了防盗链|未授权|接口防盗/.test(back)) && (!/http|url/.test(back)) && (!/msg|code|html/.test(back))) {\\n                log(back);\\n                return 'toast://疑似对方数据加密了，具体数据看日志'\\n            }\\n        } catch (e) {\\n            log(e.message);\\n            return bad\\n        }\\n        log('开始x5免嗅探');\\n        // require('https://hjdhnx.coding.net/p/hiker/d/dr/git/raw/master/js/lsg.js');//引用本地储存插件\\n        const lsg = $.require(\\\"hiker://page/localStorage?rule=道长仓库Pro\\\"); //引用子页面本地储存插件\\n        let local_ms = lsg.getItem('timeout');\\n        let ms = parseInt(ms) || parseInt(local_ms) || 5000;\\n        let max_count = Math.ceil(ms / 250);\\n        log(\\\"本次嗅探超时:\\\" + ms + \\\"共计待抓包:\\\" + max_count + \\\"次\\\");\\n        showLoading('嗅探中，若失败就切换web嗅探...');\\n        let _x5 = $.toString((isVideo, rechange, playUrl, max_count, PC_UA, isBadVideo) => {\\n            try {\\n                if (typeof (fba) == 'undefined' || !fba) {\\n                    var fba = fy_bridge_app;\\n                }\\n                try {\\n                    if (typeof (request) == 'undefined' || !request) {\\n                        eval(fba.getInternalJs());\\n                    }\\n                } catch (e) {\\n                    fba.log(e.message);\\n                }\\n                fba.putVar(\\\"_x5jxUrl\\\", playUrl);\\n                if (window.count == null) {\\n                    window.count = 1;\\n                }\\n                let text = '';\\n                try {\\n                    text = document.querySelector(\\\"body\\\").innerText;\\n                } catch (e) {\\n                    fba.log(e.message)\\n                }\\n                if (/触发了防盗链|未授权|接口防盗/.test(text) && window.count === 1) {\\n                    fba.log(\\\"检测到有授权，开始过授权\\\");\\n                    //location.reload();\\n                    location.href = fba.getVar(\\\"_x5jxUrl\\\");\\n                }\\n                window.count++;\\n                // fba.log('count:'+window.count+',max_count:'+max_count);\\n                if (window.count >= max_count) {\\n                    fba.log(\\\"超过\\\" + max_count * 250 + \\\"毫秒未获取到资源地址，跳到源网页,以下是加载过的地址\\\");\\n                    try {\\n                        let text = document.querySelector(\\\"body\\\").innerText;\\n                        // fba.log(text);\\n                    } catch (e) {\\n                        fba.log(e.message)\\n                    }\\n                    fba.log(JSON.stringify(_getUrls()));\\n                    return fba.getVar(\\\"_x5jxUrl\\\");\\n                }\\n\\n                function muteMe(elem) {\\n                    try {\\n                        elem.pause();\\n                    } catch (e) { }\\n                }\\n                var videos = document.querySelectorAll(\\\"video\\\"),\\n                    audios = document.querySelectorAll(\\\"audio\\\"),\\n                    v2 = document.querySelectorAll(\\\"embed\\\"),\\n                    v3 = document.querySelectorAll(\\\"#player\\\");\\n                try {\\n                    [].forEach.call(videos, function (video) {\\n                        muteMe(video);\\n                    });\\n                } catch (e) { }\\n                try {\\n                    [].forEach.call(audios, function (audio) {\\n                        muteMe(audio);\\n                    });\\n                } catch (e) { }\\n                try {\\n                    [].forEach.call(v2, function (v) {\\n                        muteMe(v);\\n                    });\\n                } catch (e) { }\\n                try {\\n                    [].forEach.call(v3, function (v) {\\n                        muteMe(v);\\n                    });\\n                } catch (e) { }\\n                var urls = _getUrls();\\n                // fba.log(JSON.stringify(urls));\\n                try {\\n                    for (let i in urls) {\\n                        let u = urls[i];\\n                        try {\\n                            u = decodeURIComponent(u);\\n                        } catch (e) {\\n                            u = unescape(u);\\n                        }\\n                        //\\n                        if (/url=http/.test(u)) {\\n                            u = u.split(\\\"url=\\\").slice(-1)[0];\\n                            // fba.log(\\\"url分割:\\\"+u);\\n                        } else if (/url=\\\\//.test(u) && /\\\\.m3u8/.test(u)) {\\n                            let host = u.match(/(.*)\\\\/\\\\/(.*?)\\\\//)[0];\\n                            u = host + u.split(\\\"url=\\\").slice(-1)[0];\\n                            // fba.log(\\\"url分割:\\\"+u);\\n                        } else if (/vid=http/.test(u)) {\\n                            u = u.split(\\\"vid=\\\").slice(-1)[0];\\n                            fba.log(\\\"vid分割:\\\" + u);\\n                        } else if (/vid=\\\\//.test(u) && /\\\\.m3u8/.test(u)) {\\n                            let host = u.match(/(.*)\\\\/\\\\/(.*?)\\\\//)[0];\\n                            u = host + u.split(\\\"vid=\\\").slice(-1)[0];\\n                            fba.log(\\\"vid分割:\\\" + u);\\n                        } else if (/\\\\?(.*)=http/.test(u) && /\\\\.m3u8/.test(u)) {\\n                            u = \\\"http\\\" + u.split(/\\\\?(.*)=http/).slice(-1)[0];\\n                            fba.log(\\\"其他分割:\\\" + u);\\n                        }\\n                        //|index\\\\.m3u8$\\n                        else if (/\\\\/1\\\\.m3u8/.test(u)) {\\n                            continue;\\n                        }\\n                        u = u.replace(/&from=.*|&next=.*|&jump=.*/, '');\\n                        let realUrl = isVideo(u, rechange);\\n                        if (typeof (realUrl) == 'string' && !isBadVideo(u)) { //过滤吊毛视频\\n                            //fy_bridge_app.setWebUa(PC_UA);\\n                            if (typeof (fba.getHeaderUrl) !== 'undefined' && typeof (rechange) !== 'function') {\\n                                // let backUrl = fba.getHeaderUrl(u.replace(\\\";{\\\",\\\"#isVideo=true#;{\\\"));\\n                                let backUrl = fba.getHeaderUrl(urls[i]).replace(';{', '#ignoreImg=true##isVideo=true#;{');\\n                                let u1 = backUrl.split('#ignoreImg')[0];\\n                                let u2 = '#ignoreImg' + backUrl.split('#ignoreImg')[1];\\n                                u1 = u1.replace(/&from=.*|&next=.*|&jump=.*/, '');\\n                                if (/url=http/.test(u1)) {\\n                                    u1 = u1.split(\\\"url=\\\").slice(-1)[0];\\n                                } else if (/url=\\\\//.test(u1) && /\\\\.m3u8/.test(u1)) {\\n                                    let host1 = u1.match(/(.*)\\\\/\\\\/(.*?)\\\\//)[0];\\n                                    u1 = host1 + u1.split(\\\"url=\\\").slice(-1)[0];\\n                                    // fba.log(\\\"url分割:\\\"+u);\\n                                } else if (/vid=http/.test(u1)) {\\n                                    u1 = u1.split(\\\"vid=\\\").slice(-1)[0];\\n                                } else if (/vid=\\\\//.test(u1) && /\\\\.m3u8/.test(u1)) {\\n                                    let host1 = u1.match(/(.*)\\\\/\\\\/(.*?)\\\\//)[0];\\n                                    u1 = host1 + u1.split(\\\"vid=\\\").slice(-1)[0];\\n                                } else if (/\\\\?(.*)=http/.test(u1) && /\\\\.m3u8/.test(u1)) {\\n                                    u1 = \\\"http\\\" + u1.split(/\\\\?(.*)=http/).slice(-1)[0];\\n                                }\\n                                backUrl = u1 + u2;\\n                                // fba.log('返回自动加cookie链接:'+backUrl);\\n                                fba.log('返回链接:' + u + '并自动加了cookie,具体cookie在视频播放处查看');\\n                                // return backUrl;\\n                                return JSON.stringify({\\n                                    urls: [u1 + '#ignoreImg=true##isVideo=true#'],\\n                                    names: ['dm盒子'],\\n                                    danmu: fba.getVar(\\\"dm_share\\\")\\n                                }) + u2.replace('#ignoreImg=true##isVideo=true#;', ';');\\n                            } else {\\n                                fba.log(\\\"返回仓库x5免嗅结果:\\\" + realUrl);\\n                                return realUrl\\n                            }\\n                        }\\n                    }\\n                } catch (e) {\\n                    fba.log(e.message)\\n                }\\n            } catch (e) {\\n                // fy_bridge_app.log('x5大范围错误:'+e.message);\\n                alert('x5大范围错误:' + e.message);\\n                return 'toast://报错结束x5'\\n            }\\n        }, isVideo, rechange, playUrl, max_count, PC_UA, isBadVideo);\\n        let useWeb = lsg.getItem(\\\"通免\\\", \\\"X5\\\") === \\\"WEB\\\";\\n        //log(\\\"仓库使用web通免替代x5:\\\"+useWeb);\\n        let ruleHead = useWeb && parseInt(getAppVersion()) >= 2339 ? \\\"webRule://\\\" : \\\"x5Rule://\\\";\\n        let x5Url = ruleHead + playUrl + '@' + _x5;\\n        return x5Url\\n    }\\n    // 定位真实线路-常规\\n    let ts = /ixigua|iqiyi|qq.com|mgtv|le.com|bili|sohu|youku|pptv|cctv|1905.com/;\\n    if (!input.match(ts)) {\\n        try {\\n            let From = JSON.parse(request(input).match(/var player_.*?=(.*?)</)[1]);\\n            let 加密 = From.encrypt;\\n            // let 来自 = From.from;\\n            原链 = From.url;\\n            //log(From):\\n            if (加密 == '1') {\\n                原链 = unescape(原链);\\n            } else if (加密 == '2') {\\n                原链 = unescape(base64Decode(原链));\\n            }\\n            if (/\\\\.mp4|\\\\.m3u8|\\\\.flv/.test(原链)) {\\n                showLoading('获取不到官网地址，将直链播放');\\n                return JSON.stringify({\\n                    urls: [原链],\\n                    names: ['预留弹幕接口'],\\n                    danmu: getVar(\\\"dm_share\\\",'hiker://files/dm盒子/dm.xml')\\n                });\\n            } else if (ts.test(原链)) {\\n                官链 = 原链;\\n            } else {\\n                showLoading('获取不到官网地址，将直链播放');\\n                //盗版站地址\\n                return JSON.stringify({\\n                    urls: [playParse.playerS(input)],\\n                    names: ['预留弹幕接口'],\\n                    danmu: getVar(\\\"dm_share\\\",'hiker://files/dm盒子/dm.xml')\\n                });\\n            }\\n        } catch (e) {\\n            // 若发生异常则直接为空链走嗅探\\n            官链 = 'https://empty.html';\\n        }\\n    } else {\\n        官链 = input;\\n    }\\n    // 判断弹幕线路来源\\n    dm = $.require('hiker://page/dmFun?rule=dm盒子').dmRoute(官链);\\n    dmPath = getPath(getVar('dm_share')).slice(7);\\n    var {copyFile,moveFile} = $.require(\\\"hiker://page/fileAPI?rule=dm盒子\\\");\\n    dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\\n    saveLocal=dmSettings.saveLocal;\\n    doubleWrite=dmSettings.doubleWrite;\\n    if (saveLocal) {\\n        destinationDir='/storage/emulated/0/Download/海阔视界/danmu/';\\n        if (doubleWrite) {\\n            copyFile(dmPath,destinationDir);\\n        }else{\\n            moveFile(dmPath,destinationDir);\\n        }\\n    }\\n    return x5rule(input, 8000);\\n}\\n\\n\\n// 香佬通免\\n$.exports.classicalX5 = function () {\\n    function x5rule(jiexurl, srcurl) {\\n        showLoading(\\\"网页访问检索中，请稍候...\\\");\\n        var video = 'webRule://' + jiexurl + '@' + $.toString((srcurl) => {\\n            //fba.log(fba.getUrls());\\n            var urls = _getUrls();\\n            if (window.__count == null || window.__count == undefined) {\\n                window.__count = 0\\n            }\\n            if (window.__count >= 23) {\\n                // return srcurl\\n                bfurl = srcurl.split(';')[0];\\n                args = srcurl.match(/;[\\\\S\\\\s]+}/g)[0];\\n                return JSON.stringify({\\n                    urls: [bfurl],\\n                    names: ['dm盒子'],\\n                    danmu: fba.getVar(\\\"dm_share\\\")\\n                }) + args;\\n            }\\n            window.__count = window.__count + 1;\\n            if (window.__count > 1 && window.__count <= 3 && window.__count != null && window.__count != undefined) {\\n                if (document.querySelector('body').innerText.search(/触发了防盗链|未授权|接口防盗|请到主站观看/) != -1) {\\n                    if (!srcurl) {\\n                        fba.log('尝试跳防盗验证一');\\n                        location.href = location.href;\\n                    } else {\\n                        fba.log('尝试跳防盗验证二');\\n                        location.href = srcurl\\n                    }\\n                };\\n            } else if (window.__count > 3 && window.__count != null && window.__count != undefined) {\\n                if (urls.length < 1) {\\n                    fba.hideLoading();\\n                    return 'toast://检索失败，可能链接无法访问。';\\n                } else if (urls.length == 1) {\\n                    fba.log('尝试直链与JSON解析');\\n                    if (urls[0].match(/dycdn\\\\-tos\\\\.pstatp|\\\\.m3u8|\\\\.mp4|\\\\.flv|netease\\\\.com|video_mp4|type\\\\=m3u8|pt\\\\=m3u8|\\\\/video\\\\/tos\\\\//) && !urls[0].match(/\\\\.html|m3u8\\\\.tv|m3u8\\\\.pw|\\\\&next|ac\\\\=dm|\\\\=http|https\\\\:\\\\/\\\\/[\\\\d]\\\\.m3u8|\\\\?url\\\\=\\\\/m3u8/)) {\\n                        //fy_bridge_app.log(urls[0])\\n                        if (urls[0].indexOf('bilivideo') != -1) {\\n                            // return urls[0] + ';{Referer@https://www.bilibili.com&&User-Agent@Mozilla/5.0}';\\n                            return JSON.stringify({\\n                                urls: [urls[0]],\\n                                names: ['dm盒子'],\\n                                danmu: fba.getVar(\\\"dm_share\\\"),\\n                                headers: [{\\n                                    'Referer': 'https://www.bilibili.com',\\n                                    'User-Agent': 'Mozilla/5.0'\\n                                }]\\n                            });\\n                        } else if (urls[0].indexOf('titan.mgtv.com') != -1) {\\n                            // return urls[0] + '#isVideo=true#' + ';{Referer@www.mgtv.com&&User-Agent@Mozilla/5.0}';\\n                            return JSON.stringify({\\n                                urls: [urls[0] + '#isVideo=true#'],\\n                                names: ['dm盒子'],\\n                                danmu: fba.getVar(\\\"dm_share\\\"),\\n                                headers: [{\\n                                    'Referer': 'www.mgtv.com',\\n                                    'User-Agent': 'Mozilla/5.0'\\n                                }]\\n                            });\\n                        } else {\\n                            // return urls[0]\\n                            bfurl = urls[0].split(';')[0];\\n                            args = urls[0].match(/;[\\\\S\\\\s]+}/g)[0];\\n                            return JSON.stringify({\\n                                urls: [bfurl],\\n                                names: ['dm盒子'],\\n                                danmu: fba.getVar(\\\"dm_share\\\")\\n                            }) + args;\\n                        }\\n                    } else if (location.href.match(/dycdn\\\\-tos\\\\.pstatp|\\\\.m3u8|\\\\.mp4|\\\\.flv|netease\\\\.com|video_mp4|type\\\\=m3u8|pt\\\\=m3u8|\\\\/video\\\\/tos\\\\//) && !location.href.match(/\\\\.html|m3u8\\\\.tv|m3u8\\\\.pw|\\\\&next|ac\\\\=dm|\\\\=http|https\\\\:\\\\/\\\\/[\\\\d]\\\\.m3u8|\\\\?url\\\\=\\\\/m3u8/)) {\\n                        // return location.href;\\n                        bfurl = location.href.split(';')[0];\\n                        args = location.href.match(/;[\\\\S\\\\s]+}/g)[0];\\n                        return JSON.stringify({\\n                            urls: [bfurl],\\n                            names: ['dm盒子'],\\n                            danmu: fba.getVar(\\\"dm_share\\\")\\n                        }) + args;\\n                    } else {\\n                        var html = fba.fetch(location.href, {});\\n                        if (!/\\\\<meta/.test(html) && !/\\\\<html/.test(html)) {\\n                            // return JSON.parse(html).url;\\n                            bfurl = JSON.parse(html).url.split(';')[0];\\n                            args = JSON.parse(html).url.match(/;[\\\\S\\\\s]+}/g)[0];\\n                            return JSON.stringify({\\n                                urls: [bfurl],\\n                                names: ['dm盒子'],\\n                                danmu: fba.getVar(\\\"dm_share\\\")\\n                            }) + args;\\n                        } else if (/没有找到站点|网页无法打开|404 Not Found|备案后可继续访问/.test(html)) {\\n                            // return location.href.substring(location.href.indexOf('=http') + 1);\\n                            bfurl = location.href.substring(location.href.indexOf('=http') + 1).split(';')[0];\\n                            args = location.href.substring(location.href.indexOf('=http') + 1).match(/;[\\\\S\\\\s]+}/g)[0];\\n                            return JSON.stringify({\\n                                urls: [bfurl],\\n                                names: ['dm盒子'],\\n                                danmu: fba.getVar(\\\"dm_share\\\")\\n                            }) + args;\\n                        } else {\\n                            // return location.href\\n                            bfurl = location.href.split(';')[0];\\n                            args = location.href.match(/;[\\\\S\\\\s]+}/g)[0];\\n                            return JSON.stringify({\\n                                urls: [bfurl],\\n                                names: ['dm盒子'],\\n                                danmu: fba.getVar(\\\"dm_share\\\")\\n                            }) + args;\\n                        }\\n                    };\\n                } else {\\n                    fba.log('日志检索第' + window.__count + '次');\\n                    for (var i in urls) {\\n                        if (urls[i].match(/dycdn\\\\-tos\\\\.pstatp|\\\\.m3u8|\\\\.mp4|\\\\.flv|netease\\\\.com|video_mp4|type\\\\=m3u8|pt\\\\=m3u8|\\\\/video\\\\/tos\\\\//) && !urls[i].match(/\\\\.html|m3u8\\\\.tv|m3u8\\\\.pw|\\\\&next|ac\\\\=dm|\\\\=http|https\\\\:\\\\/\\\\/[\\\\d]\\\\.m3u8|\\\\?url\\\\=\\\\/m3u8|\\\\.css|\\\\.js\\\\?/)) {\\n                            //fy_bridge_app.log(urls[i])\\n                            if (fy_bridge_app.getHeaderUrl) {\\n                                // return fy_bridge_app.getHeaderUrl(urls[i]).replace(\\\";{\\\", \\\"#ignoreImg=true##isVideo=true#;{\\\");\\n                                bfurl = fy_bridge_app.getHeaderUrl(urls[i]).replace(\\\";{\\\", \\\"#ignoreImg=true##isVideo=true#;{\\\").split(';')[0];\\n                                args = fy_bridge_app.getHeaderUrl(urls[i]).replace(\\\";{\\\", \\\"#ignoreImg=true##isVideo=true#;{\\\").match(/;[\\\\S\\\\s]+}/g)[0];\\n                                return JSON.stringify({\\n                                    urls: [bfurl],\\n                                    names: ['dm盒子'],\\n                                    danmu: fba.getVar(\\\"dm_share\\\")\\n                                }) + args;\\n                            } else {\\n                                if (urls[i].indexOf('bilivideo') != -1) {\\n                                    // return urls[i] + ';{Referer@https://www.bilibili.com&&User-Agent@Mozilla/5.0}';\\n                                    return JSON.stringify({\\n                                        urls: [urls[i]],\\n                                        names: ['dm盒子'],\\n                                        danmu: fba.getVar(\\\"dm_share\\\"),\\n                                        headers: [{\\n                                            'Referer': 'https://www.bilibili.com',\\n                                            'User-Agent': 'Mozilla/5.0'\\n                                        }]\\n                                    });\\n                                } else if (urls[i].indexOf('titan.mgtv.com') != -1) {\\n                                    // return urls[i] + '#isVideo=true#' + ';{Referer@www.mgtv.com&&User-Agent@Mozilla/5.0}';\\n                                    return JSON.stringify({\\n                                        urls: [urls[i] + '#isVideo=true#'],\\n                                        names: ['dm盒子'],\\n                                        danmu: fba.getVar(\\\"dm_share\\\"),\\n                                        headers: [{\\n                                            'Referer': 'www.mgtv.com',\\n                                            'User-Agent': 'Mozilla/5.0'\\n                                        }]\\n                                    });\\n                                } else if (urls[i].indexOf('juhaokan') != -1) {\\n                                    // return urls[i] + ';{Referer@https://www.juhaokan.cc/}';\\n                                    return JSON.stringify({\\n                                        urls: [urls[i]],\\n                                        names: ['dm盒子'],\\n                                        danmu: fba.getVar(\\\"dm_share\\\"),\\n                                        headers: [{\\n                                            'Referer': 'https://www.juhaokan.cc/'\\n                                        }]\\n                                    });\\n                                } else if (urls[i].indexOf('ojbk') != -1) {\\n                                    // return urls[i] + ';{Referer@https://v.ojbkjx.com/}';\\n                                    return JSON.stringify({\\n                                        urls: [urls[i]],\\n                                        names: ['dm盒子'],\\n                                        danmu: fba.getVar(\\\"dm_share\\\"),\\n                                        headers: [{\\n                                            'Referer': 'https://v.ojbkjx.com/'\\n                                        }]\\n                                    });\\n                                } else if (urls[i].indexOf('wkfile') != -1) {\\n                                    // return urls[i] + ';{Referer@https://fantuan.wkfile.com/}';\\n                                    return JSON.stringify({\\n                                        urls: [urls[i]],\\n                                        names: ['dm盒子'],\\n                                        danmu: fba.getVar(\\\"dm_share\\\"),\\n                                        headers: [{\\n                                            'Referer': 'https://fantuan.wkfile.com/'\\n                                        }]\\n                                    });\\n                                } else if (urls[i].indexOf('shenglinyiyang') != -1) {\\n                                    // return urls[i] + ';{Referer@https://zyz.sdljwomen.com/}';\\n                                    return JSON.stringify({\\n                                        urls: [urls[i]],\\n                                        names: ['dm盒子'],\\n                                        danmu: fba.getVar(\\\"dm_share\\\"),\\n                                        headers: [{\\n                                            'Referer': 'https://zyz.sdljwomen.com/'\\n                                        }]\\n                                    });\\n                                } else if (urls[i].indexOf('peizq.online') != -1) {\\n                                    // return urls[i] + ';{Referer@https://play.peizq.online/}';\\n                                    return JSON.stringify({\\n                                        urls: [urls[i]],\\n                                        names: ['dm盒子'],\\n                                        danmu: fba.getVar(\\\"dm_share\\\"),\\n                                        headers: [{\\n                                            'Referer': 'https://play.peizq.online/'\\n                                        }]\\n                                    });\\n                                } else {\\n                                    // return urls[i] + '#isVideo=true#'\\n                                    bfurl = (urls[i] + '#isVideo=true#').split(';')[0];\\n                                    args = (urls[i] + '#isVideo=true#').match(/;[\\\\S\\\\s]+}/g)[0];\\n                                    return JSON.stringify({\\n                                        urls: [bfurl],\\n                                        names: ['dm盒子'],\\n                                        danmu: fba.getVar(\\\"dm_share\\\")\\n                                    }) + args;\\n                                }\\n                            }\\n                        }\\n                    } //end for i\\n                }\\n            }\\n        }, srcurl);\\n        return video\\n    }\\n    // 定位真实线路-常规\\n    let ts = /ixigua|iqiyi|qq.com|mgtv|le.com|bili|sohu|youku|pptv|cctv|1905.com/;\\n    if (!input.match(ts)) {\\n        try {\\n            let From = JSON.parse(request(input).match(/var player_.*?=(.*?)</)[1]);\\n            let 加密 = From.encrypt;\\n            // let 来自 = From.from;\\n            原链 = From.url;\\n            //log(From):\\n            if (加密 == '1') {\\n                原链 = unescape(原链);\\n            } else if (加密 == '2') {\\n                原链 = unescape(base64Decode(原链));\\n            }\\n            if (/\\\\.mp4|\\\\.m3u8|\\\\.flv/.test(原链)) {\\n                showLoading('获取不到官网地址，将直链播放');\\n                return JSON.stringify({\\n                    urls: [原链],\\n                    names: ['预留弹幕接口'],\\n                    danmu: getVar(\\\"dm_share\\\",'hiker://files/dm盒子/dm.xml')\\n                });\\n            } else if (ts.test(原链)) {\\n                官链 = 原链;\\n            } else {\\n                showLoading('获取不到官网地址，将直链播放');\\n                //盗版站地址\\n                return JSON.stringify({\\n                    urls: [playParse.playerS(input)],\\n                    names: ['预留弹幕接口'],\\n                    danmu: getVar(\\\"dm_share\\\",'hiker://files/dm盒子/dm.xml')\\n                });\\n            }\\n        } catch (e) {\\n            // 若发生异常则直接为空链走嗅探\\n            官链 = 'https://empty.html';\\n        }\\n    } else {\\n        官链 = input;\\n    }\\n    // 判断弹幕线路来源\\n    dm = $.require('hiker://page/dmFun?rule=dm盒子').dmRoute(官链);\\n    dmPath = getPath(getVar('dm_share')).slice(7);\\n    var {copyFile,moveFile} = $.require(\\\"hiker://page/fileAPI?rule=dm盒子\\\");\\n    dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\\n    saveLocal=dmSettings.saveLocal;\\n    doubleWrite=dmSettings.doubleWrite;\\n    if (saveLocal) {\\n        destinationDir='/storage/emulated/0/Download/海阔视界/danmu/';\\n        if (doubleWrite) {\\n            copyFile(dmPath,destinationDir);\\n        }else{\\n            moveFile(dmPath,destinationDir);\\n        }\\n    }\\n    return x5rule(input, input);\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"聚合搜索\",\"path\":\"search_rules\",\"rule\":\"\"},{\"name\":\"影视二级\",\"path\":\"filmerji\",\"rule\":\"js:\\nvar danmuSetting = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\\nif (danmuSetting.erjiPage == '弹幕列表') {\\n    eval(JSON.parse(request('hiker://page/danmuListpage?rule=dm盒子')).rule);\\n} else {\\n    var d = [];\\n    putMyVar('简插', $.toString(() => {\\n        let titleArr = [];\\n        setFile = readFile('hiker://files/rules/DuanNian/MyParse.json');\\n        try {\\n            eval('json=' + setFile);\\n        } catch (e) {\\n            log('Json解析发生了错误:' + e.message);\\n        }\\n        titleArr = json.title;\\n        let barry1 = ['✍️辅助'];\\n        let barry2 = ['📦️魔断'];\\n        let barry3 = ['🔍搜索'];\\n        titleArr = barry3.concat(titleArr);\\n        titleArr = barry2.concat(titleArr);\\n        titleArr = barry1.concat(titleArr);\\n        eval('op=json.settings.' + 来源);\\n        titleArr = titleArr.map((it) => {\\n            return it === op ? '👉' + it : it;\\n        });\\n        putMyVar('解析数组', titleArr);\\n        putMyVar('setFile', setFile);\\n    }))\\n    eval(JSON.parse(request('hiker://page/lazy')).rule);\\n    switch (MY_PARAMS.from) {\\n        case 'qiyi':\\n            MY_URL = MY_PARAMS.url.replace('www', 'm');\\n            html = request(MY_URL);\\n            viedeoInfo = JSON.parse(html.match(/\\\"albumInfo\\\"[\\\\S\\\\s]+(?=,\\\"albumListInfo\\\")/)[0].replace('\\\"albumInfo\\\":', ''));\\n            infoAdd = JSON.parse(html.match(/\\\"videoInfo\\\":{[\\\\S\\\\s]+}(?=,\\\"videoType\\\")/)[0].replace('\\\"videoInfo\\\":', ''));\\n            影片名称 = viedeoInfo.albumName ? viedeoInfo.albumName : infoAdd.videoName;\\n            // 第二标题 = html.match(/\\\"focus\\\"[\\\\S\\\\s]+(?=,\\\"isEffect\\\")/)[0].replace('\\\"focus\\\":', '');\\n            第二标题 = infoAdd.focus;\\n            得分 = infoAdd.score;\\n            封面 = viedeoInfo.imageUrl ? 'https:' + viedeoInfo.imageUrl.replace('\\\\u002F', '/').replace('.jpg', '_260_360.jpg') + \\\"@Referer=\\\" : 'https:' + infoAdd.imageUrl.replace('\\\\u002F', '/') + \\\"@Referer=\\\";\\n            类型 = infoAdd.channelName;\\n            简介 = viedeoInfo.desc ? viedeoInfo.desc : infoAdd.desc;\\n            导演 = infoAdd.directors;\\n            主演 = infoAdd.mainActors;\\n            标签 = infoAdd.tags;\\n            try {\\n                更新日历 = viedeoInfo.updateStrategy;\\n                更新进度 = viedeoInfo.showContent.replace('\\\\u002F', '/') ? viedeoInfo.showContent.replace('\\\\u002F', '/') : viedeoInfo.showContent;\\n                追剧日历 = 更新日历 == '' ? '<font color=\\\"red\\\">' + 更新进度 + '</font>' : 更新日历 + '\\\\t<font color=\\\"red\\\">' + 更新进度 + '</font>';\\n            } catch (e) {\\n                追剧日历 = '没有更新计划~';\\n            }\\n            上映时间 = infoAdd.issueTime;\\n            剧集ID = infoAdd.albumQipuId;\\n            短讯 = \\\"⭐\\\" + 类型 + \\\"⭐\\\" + (第二标题 ? 第二标题.replace(/\\\"/g, '') : '') + (得分 == 0 ? '' : '-' + 得分 + '分-') + 上映时间 + '\\\\n' + 标签;\\n            // 重定义二级页面数据\\n            setPageTitle(影片名称);\\n            setPagePicUrl(封面);\\n            // 前置参数和预处理---\\n            var Color = \\\"#19B89D\\\";\\n            var 每页集数 = 20;\\n            var 搜索模式 = '分组';\\n            var 调用名称 = '简影';\\n            putMyVar('折叠', '关');\\n            putMyVar('日历', '关');\\n\\n            // 清除变量\\n            addListener('onClose', $.toString(() => {\\n                clearMyVar('分集起');\\n                clearMyVar('分集终');\\n                clearMyVar('lazy');\\n                clearMyVar('剧集列表');\\n                clearMyVar('影片类型');\\n            }))\\n            // 设置动态最新章节\\n            setLastChapterRule('js:' + $.toString((MY_URL) => {\\n                eval(JSON.parse(request('hiker://page/getUpdate?rule=爱奇艺.cy')).rule);\\n            }, MY_URL));\\n            // 页面内容正文---\\n            // 基本信息模块\\n            d.push({\\n                title: 短讯,\\n                desc: 简介 == '' ? '暂无简介' : 简介.substring(0, 45) + '‘‘’’…<font color=\\\"#1C1C1C\\\">详情</font>',\\n                img: 封面,\\n                url: $().rule((简介) => {\\n                    res = {};\\n                    var d = [];\\n                    d.push({\\n                        title: '影片简介：' + '\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t' + 简介,\\n                        col_type: 'long_text'\\n                    });\\n                    res.data = d;\\n                    setHomeResult(res);\\n                }, 简介),\\n                col_type: 'movie_1_vertical_pic_blur',\\n                extra: {\\n                    longClick: [{\\n                        title: '预告、花絮开关', js: $.toString(() => {\\n                            if (getItem('previewSwitch', 'fold') == 'fold') {\\n                                setItem('previewSwitch', 'open');\\n                                refreshPage(true);\\n                                return \\\"toast://预告已经切换为展示~\\\";\\n                            } else {\\n                                setItem('previewSwitch', 'fold');\\n                                refreshPage(true);\\n                                return \\\"toast://预告不再展示~\\\";\\n                            }\\n                        }),\\n                    }]\\n                }\\n            });\\n            // 追剧日历模块\\n            d.push({\\n                title: '‘‘’’<small><font><font color=\\\"#098AC1\\\">📅追剧</font></small>',\\n                url: $('#noLoading#').lazyRule((追剧日历) => {\\n                    if (getMyVar('日历', '关') == '开') {\\n                        deleteItem('追剧日历');\\n                        putMyVar('日历', '关');\\n                    } else {\\n                        addItemAfter('显示模式', {\\n                            title: 追剧日历,\\n                            col_type: \\\"rich_text\\\",\\n                            extra: {\\n                                id: '追剧日历'\\n                            }\\n                        });\\n                        putMyVar('日历', '开');\\n                    }\\n                    return 'toast://已切换日历为:' + getMyVar('日历', '开')\\n                }, 追剧日历),\\n                col_type: 'text_4'\\n            });\\n            // 豆瓣影讯模块\\n            d.push({\\n                title: '‘‘’’<small><font color=\\\"#098AC1\\\">🍃豆瓣</font></small>',\\n                url: 'hiker://search?s=' + 影片名称 + '&rule=青豆',\\n                col_type: 'text_4',\\n                extra: {\\n                    id: '豆瓣影讯'\\n                }\\n            });\\n            // 演职人员模块\\n            if (导演 && 主演) {\\n                d.push({\\n                    title: '‘‘’’<small><font color=\\\"#098AC1\\\">⬇️演职</font></small>',\\n                    url: $('#noLoading#').lazyRule((导演, 主演) => {\\n                        if (getMyVar('折叠', '关') == '开') {\\n                            deleteItem('演职数据');\\n                            putMyVar('折叠', '关');\\n                        } else {\\n                            addItemAfter('显示模式', {\\n                                title: '<b>导演:</b>' + 导演 + '<br><b>主演:</b>' + 主演,\\n                                col_type: \\\"rich_text\\\",\\n                                extra: {\\n                                    id: '演职数据'\\n                                }\\n                            });\\n                            putMyVar('折叠', '开');\\n                        }\\n                        return 'toast://已切换折叠为:' + getMyVar('折叠', '开')\\n                    }, 导演, 主演),\\n                    col_type: 'text_4',\\n                    extra: {\\n                        id: '演职人员'\\n                    }\\n                })\\n            }\\n            // 显示模式更改模块\\n            d.push({\\n                title: '‘‘’’<small><font color=\\\"#098AC1\\\">🔃' + getItem('模式', '双边') + '</font></small>',\\n                url: $('#noLoading#').lazyRule((每页集数) => {\\n                    if (getItem('模式', '双边') == '列表') {\\n                        for (let index = 1; index <= 每页集数; index++) {\\n                            updateItem('qiyi' + index, {\\n                                col_type: 'movie_2',\\n                            });\\n                        }\\n                        setItem('模式', '双边')\\n                    } else {\\n                        for (let index = 1; index <= 每页集数; index++) {\\n                            updateItem('qiyi' + index, {\\n                                col_type: 'movie_1_left_pic',\\n                            });\\n                        }\\n                        setItem('模式', '列表')\\n                    }\\n                    updateItem('显示模式', {\\n                        title: '‘‘’’<small><font color=\\\"#098AC1\\\">🔃' + getItem('模式', '双边') + '</font></small>',\\n                    });\\n                    return 'toast://已切换模式为:' + getItem('模式', '双边')\\n                }, 每页集数),\\n                col_type: 'text_4',\\n                extra: {\\n                    id: '显示模式'\\n                }\\n            });\\n            // 选插模块——局部刷新版\\n            来源 = 'qy';\\n            eval(getMyVar('简插'));\\n            d.push({\\n                title: '解析：🔘<font color=\\\"' + Color + '\\\">' + op + '</font>\\\\t\\\\t页码：<font color=\\\"' + Color + '\\\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\\n                url: $('#noLoading#').lazyRule((json, 来源, Color, op, 影片名称, 搜索模式, 调用名称) => {\\n                    eval(getMyVar('简插'));\\n                    return $(eval(getMyVar('解析数组')), 3).select((json, 来源, Color, op, 影片名称, 搜索模式, 调用名称) => {\\n                        setFile = getMyVar('setFile');\\n                        input = input.replace(/👉/g, '');\\n                        if (input === '✍️辅助') {\\n                            return $().rule(() => {\\n                                eval(JSON.parse(request('hiker://page/home?rule=配置助手')).rule);\\n                            })\\n                        } else if (input === '📦️魔断') {\\n                            return \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=编辑#noHistory#\\\";\\n                        } else if (input === '🔍搜索') {\\n                            if (搜索模式 == '分组') {\\n                                return \\\"hiker://search?s=\\\" + 影片名称 + \\\"&group=\\\" + 调用名称;\\n                            } else {\\n                                return \\\"hiker://search?s=\\\" + 影片名称 + \\\"&rule=\\\" + 调用名称;\\n                            }\\n                        }\\n                        // 原先的配置\\n                        originSettings = JSON.stringify(json.settings);\\n                        // 修改配置\\n                        eval('json.settings.' + 来源 + '=input;');\\n                        setFile = setFile.replace(originSettings, JSON.stringify(json.settings));\\n                        saveFile('hiker://files/rules/DuanNian/MyParse.json', setFile);\\n                        // 刷新元素\\n                        eval(getMyVar('简插'));\\n                        updateItem('op', {\\n                            title: '解析：🔘<font color=\\\"' + Color + '\\\">' + op + '</font>\\\\t\\\\t页码：<font color=\\\"' + Color + '\\\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\\n                        });\\n                        return \\\"toast://切换解析口为:\\\" + input;\\n                    }, json, 来源, Color, op, 影片名称, 搜索模式, 调用名称)\\n                }, json, 来源, Color, op, 影片名称, 搜索模式, 调用名称),\\n                img: 'hiker://files/rules/cy/tubiao/iqiyi.svg',\\n                col_type: \\\"avatar\\\",\\n                extra: {\\n                    id: 'op'\\n                }\\n            });\\n            // 同时设置选集和展示---\\n            // 因为电影没有summary字段所以if单独出来——预告也这样处理吧~\\n            if (类型 == '电影' || infoAdd.videoName.match(/预告/)) {\\n                d.push({\\n                    title: \\\"点我播放\\\",\\n                    col_type: \\\"text_center_1\\\",\\n                    url: MY_URL.replace('m', 'www') + lazy,\\n                    desc: \\\"观影不等待...\\\"\\n                });\\n            } else {\\n                // 有一部分奇葩的纪录片也是有年份的，普通接口还没有数据只好这样判断了，注意是'\\\"\\\"'~\\n                if (html.match(/\\\"summary\\\":[\\\\S\\\\s]+(?=,\\\"count\\\")/)[0].replace('\\\"summary\\\":', '') != '\\\"\\\"') {\\n                    putMyVar('影片类型', '综艺类型');\\n                    时间线选集 = JSON.parse(html.match(/\\\"summary\\\":[\\\\S\\\\s]+(?=,\\\"count\\\")/)[0].replace('\\\"summary\\\":', ''));\\n                    剧集列表 = [];\\n                    // 偷懒！按啥年份和月份选集，简直浪费时间~\\n                    时间线选集.forEach(list => {\\n                        年份 = list.year;\\n                        剧集信息 = JSON.parse(request(\\\"https://pcw-api.iqiyi.com/album/source/svlistinfo?cid=6&sourceid=\\\" + 剧集ID + \\\"&timelist=\\\" + 年份 + \\\"&callback=window.Q.__callbacks__.cbp5bps9\\\").match(/{\\\"code\\\"[\\\\S\\\\s]+}(?=\\\\);}catch\\\\(e\\\\){})/)[0]);\\n                        剧集列表 = 剧集列表.concat(剧集信息.data[年份]);\\n                    });\\n                    剧集长度 = 剧集列表.length;\\n                } else {\\n                    putMyVar('影片类型', '电视剧');\\n                    剧集信息 = JSON.parse(fetch(\\\"https://pcw-api.iqiyi.com/albums/album/avlistinfo?aid=\\\" + 剧集ID + \\\"&size=\\\" + 每页集数 + \\\"&page=1\\\" + \\\"&callback=window.Q.__callbacks__.cbu0ch7s\\\").match(/{\\\"code\\\"[\\\\S\\\\s]+}(?=\\\\);}catch\\\\(e\\\\){})/)[0]).data;\\n                    当前集数 = 剧集信息.latestOrder;\\n                    正片列表 = 剧集信息.epsodelist;\\n                    预告列表 = 剧集信息.updateprevuelist;\\n                    if (getItem('previewSwitch', 'fold') == 'fold') {\\n                        显示的剧集列表 = 正片列表;\\n                    } else {\\n                        try {\\n                            显示的剧集列表 = 正片列表.concat(预告列表);\\n                        } catch (e) {\\n                            显示的剧集列表 = 正片列表;\\n                        }\\n                    }\\n                    剧集长度 = 当前集数;\\n                }\\n\\n                // 滚动剧集条栏\\n                if (剧集长度 > 每页集数) {\\n                    putMyVar('刷新选集', $.toString(() => {\\n                        putMyVar('分集起', start);\\n                        putMyVar('分集终', end);\\n                        eval(getMyVar('简插'));\\n                        updateItem('op', {\\n                            title: '解析：🔘<font color=\\\"' + Color + '\\\">' + op + '</font>\\\\t\\\\t页码：<font color=\\\"' + Color + '\\\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\\n                        })\\n                        // 删除\\n                        for (let i = 1; i <= 每页集数; i++) {\\n                            deleteItem('qiyi' + i);\\n                        }\\n                        // 添加\\n                        lazy = getMyVar('lazy');\\n                        if (getMyVar('影片类型') == '综艺类型') {\\n                            剧集列表 = JSON.parse(getMyVar('剧集列表'));\\n                            显示的剧集列表 = 剧集列表.slice(start - 1, end);\\n                        } else {\\n                            剧集信息 = JSON.parse(fetch(\\\"https://pcw-api.iqiyi.com/albums/album/avlistinfo?aid=\\\" + 剧集ID + \\\"&size=\\\" + 每页集数 + \\\"&page=\\\" + page + \\\"&callback=window.Q.__callbacks__.cbu0ch7s\\\").match(/{\\\"code\\\"[\\\\S\\\\s]+}(?=\\\\);}catch\\\\(e\\\\){})/)[0]).data;\\n                            正片列表 = 剧集信息.epsodelist;\\n                            预告列表 = 剧集信息.updateprevuelist;\\n                            if (getItem('previewSwitch', 'fold') == 'fold') {\\n                                显示的剧集列表 = 正片列表;\\n                            } else {\\n                                try {\\n                                    显示的剧集列表 = 正片列表.concat(预告列表);\\n                                } catch (e) {\\n                                    显示的剧集列表 = 正片列表;\\n                                }\\n                            }\\n                        }\\n                        newArray = [];\\n                        index = 1;\\n                        显示的剧集列表.forEach(list => {\\n                            if (getItem('模式', '双边') == '列表') {\\n                                newArray.push({\\n                                    title: list.subtitle,\\n                                    img: list.imageUrl.replace('.jpg', '_480_270.jpg') + \\\"@Referer=\\\",\\n                                    url: list.playUrl + lazy,\\n                                    desc: (list.order ? '第' + list.order + '集' + '\\\\t' : '') + list.duration + '\\\\n更新时间:' + list.period,\\n                                    col_type: 'movie_1_left_pic',\\n                                    extra: {\\n                                        id: 'qiyi' + index\\n                                    }\\n                                });\\n                            } else {\\n                                newArray.push({\\n                                    title: list.subtitle,\\n                                    img: list.imageUrl.replace('.jpg', '_480_270.jpg') + \\\"@Referer=\\\",\\n                                    url: list.playUrl + lazy,\\n                                    desc: (list.order ? '第' + list.order + '集' + '\\\\t' : '') + list.duration + '\\\\n更新时间:' + list.period,\\n                                    col_type: 'movie_2',\\n                                    extra: {\\n                                        id: 'qiyi' + index\\n                                    }\\n                                });\\n                            }\\n                            index += 1;\\n                        });\\n                        addItemAfter(getMyVar('末页'), newArray);\\n                        // putMyVar('显示的剧集列表', 显示的剧集列表);\\n                    }));\\n                    d.push({\\n                        col_type: 'scroll_button',\\n                        url: 'hiker://empty',\\n                        title: '∷',\\n                        extra: {\\n                            id: '占位符',\\n                        }\\n                    })\\n                    putMyVar('分集起', 1);\\n                    putMyVar('分集终', 每页集数);\\n                    try {\\n                        putMyVar('剧集列表', 剧集列表);\\n                    } catch (e) {\\n                        log('电视剧没有现成的剧集列表');\\n                    }\\n                    总页数 = Math.ceil(剧集长度 / 每页集数);\\n                    start = 1;\\n                    end = 每页集数;\\n                    for (let page = 1; page <= 总页数; page++) {\\n                        if (end > 剧集长度) {\\n                            end = 剧集长度;\\n                        }\\n                        d.push({\\n                            title: start + '-' + end,\\n                            url: $('#noLoading##noHistory#').lazyRule((start, end, Color, 来源, page, 剧集ID, 每页集数) => {\\n                                eval(getMyVar('刷新选集'));\\n                                return \\\"hiker://empty\\\";\\n                            }, start, end, Color, 来源, page, 剧集ID, 每页集数),\\n                            col_type: 'scroll_button',\\n                            extra: {\\n                                id: start + '-' + end\\n                            }\\n                        });\\n                        if (end < 剧集长度) {\\n                            start += 每页集数;\\n                            end += 每页集数;\\n                        }\\n                    }\\n                    // 记录末页的id\\n                    putMyVar('末页', start + '-' + end);\\n                } else {\\n                    putMyVar('分集起', 1);\\n                    putMyVar('分集终', 剧集长度);\\n                }\\n                // 展示剧集:\\n                if (getMyVar('影片类型') == '综艺类型') {\\n                    putMyVar('剧集列表', 剧集列表);\\n                    显示的剧集列表 = 剧集列表.slice(0, getMyVar('分集终'));\\n                }\\n                // putMyVar('显示的剧集列表', 显示的剧集列表);\\n                index = 1;\\n                显示的剧集列表.forEach(list => {\\n                    if (getItem('模式', '双边') == '列表') {\\n                        d.push({\\n                            title: list.subtitle,\\n                            img: list.imageUrl.replace('.jpg', '_480_270.jpg') + \\\"@Referer=\\\",\\n                            url: list.playUrl + lazy,\\n                            desc: (list.order ? '第' + list.order + '集' + '\\\\t' : '') + list.duration + '\\\\n更新时间:' + list.period,\\n                            col_type: 'movie_1_left_pic',\\n                            extra: {\\n                                id: 'qiyi' + index\\n                            }\\n                        });\\n                    } else {\\n                        d.push({\\n                            title: list.subtitle,\\n                            img: list.imageUrl.replace('.jpg', '_480_270.jpg') + \\\"@Referer=\\\",\\n                            url: list.playUrl + lazy,\\n                            desc: (list.order ? '第' + list.order + '集' + '\\\\t' : '') + list.duration + '\\\\n更新时间:' + list.period,\\n                            col_type: 'movie_2',\\n                            extra: {\\n                                id: 'qiyi' + index\\n                            }\\n                        });\\n                    }\\n                    index += 1;\\n                });\\n            }\\n            setResult(d);\\n\\n            break;\\n        case 'youku':\\n            html = request(MY_PARAMS.url);\\n            try {\\n                // 重新定位了\\n                影片信息 = JSON.parse(html.match(/\\\"播放页简介组件\\\",\\\"dataNode\\\":\\\\[{[\\\\S\\\\s]+showImg[\\\\S\\\\s]+desc[\\\\S\\\\s]{0,1000}(?=,\\\"id\\\")/)[0].replace('\\\"播放页简介组件\\\",\\\"dataNode\\\":[{\\\"data\\\":', ''));\\n            } catch (e) {\\n                try {\\n                    影片信息 = JSON.parse(html.match(/\\\"data\\\":[\\\\S\\\\s]{0,50}scorePrefix[\\\\S\\\\s]{0,30}area[\\\\S\\\\s]{0,100}img[\\\\S\\\\s]{0,300}subTitles[\\\\S\\\\s]+introTitle[\\\\S\\\\s]{0,200}desc[\\\\S\\\\s]{0,800}(?=,\\\"id\\\")/)[0].replace('\\\"data\\\":', ''));\\n                } catch (e) {\\n                    try {\\n                        影片信息 = JSON.parse(html.match(/播放页简介组件\\\",\\\"dataNode\\\":\\\\[{\\\"data\\\":[\\\\S\\\\s]+(?=,\\\"id\\\":[0-9]{0,20},\\\"type\\\":[0-9]{0,20}},{\\\"data\\\":{\\\"title\\\":[\\\\S\\\\s]{0,200},\\\"isAliStar)/)[0].replace('播放页简介组件\\\",\\\"dataNode\\\":[{\\\"data\\\":', ''));\\n                    } catch (e) {\\n                        影片信息 = '';\\n                    }\\n                }\\n            }\\n            // 影片名称 = pdfh(html, 'head&&title&&Text');综艺的话标题不等于影片名称\\n            影片名称 = pdfh(html, '.module-name&&Text');\\n            setPageTitle(影片名称)\\n            if (影片信息) {\\n                剧集ID = 影片信息.showId;\\n                简介 = 影片信息.desc;\\n                封面 = 影片信息.img.replace('\\\\u002F', '/') + \\\"@Referer=\\\";\\n                // 动态设置二级收藏图片（网页拦截重定向后需要自行设置）\\n                setPagePicUrl(封面);\\n                // 有些剧集或者说电影的更新状态或者是评分数据或者说动漫的类型是空甚至根本没有所以单独获取并做异常处理\\n                try {\\n                    类型 = 影片信息.mark.data.text;\\n                } catch (e) {\\n                    类型 = '';\\n                }\\n                简述 = 影片信息.subTitles[0].subtitle;\\n                状态 = 影片信息.subTitles[1].subtitle;\\n                if (状态 == undefined) {\\n                    状态 = '完结'\\n                }\\n                标签 = 影片信息.showGenre;\\n                if (标签 == undefined) {\\n                    标签 = '';\\n                }\\n            } else {\\n                // 针对筐出未来电影赏析而写的，事实上教育栏目最后多数也是走这里\\n                try {\\n                    影片地图 = JSON.parse(html.match(/\\\"videoMap\\\":[\\\\S\\\\s]+(?=,\\\"pushInfo\\\")/)[0].replace('\\\"videoMap\\\":', ''));\\n                    影片名称 = 影片地图.showSubtitle;\\n                    setPageTitle(影片名称);\\n                    // try没获取到这里记得重新获取\\n                    剧集ID = 影片地图.showId;\\n                    简介 = 影片地图.showName;\\n                    封面 = 影片地图.videoImg.replace('\\\\u002F', '/') + \\\"@Referer=\\\";\\n                    setPagePicUrl(封面);\\n                    类型 = 影片地图.videoCategory;\\n                    状态 = '共' + 影片地图.episodeLast + '集\\\\n' + 影片地图.showReleaseTime;\\n                    简述 = '';\\n                    标签 = '';\\n                } catch (e) {\\n                    简介 = '没有简介，大概是一些短视频，科技、生活、娱乐分栏~';\\n                    封面 = 'https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg.zcool.cn%2Fcommunity%2F010097613ad72c11013eaf7098e28a.jpg%402o.jpg&refer=http%3A%2F%2Fimg.zcool.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1661226719&t=75dab3a3ff2d817e6f388f89505ea2e4@Referer=';\\n                    类型 = '';\\n                    状态 = '';\\n                    简述 = '';\\n                    标签 = '';\\n                }\\n            }\\n            // 评分不一定有,处理一下\\n            try {\\n                评分 = '';\\n                if (pdfh(html, '.brief-score&&span,-4&&Text').match(/分/)) {\\n                    评分 = pdfh(html, '.brief-score&&span,-4&&Text');\\n                }\\n            } catch (e) {\\n                评分 = ''\\n            }\\n            if (类型 == '') {\\n                短讯 = 简述 + '-' + 评分 + '-' + 状态 + '\\\\n' + 标签;\\n            } else {\\n                短讯 = \\\"⭐\\\" + 类型 + \\\"⭐ \\\" + 简述 + '-' + 评分 + '-' + 状态 + '\\\\n' + 标签;\\n            }\\n            // 导演、剧集图片、url等关键信息——正则匹配大法---------------------------------------\\n            演职人员信息 = html.match(/\\\"img\\\":[\\\\S\\\\s]{0,120}\\\"title\\\":[\\\\S\\\\s]{0,15}isAliStar\\\"[\\\\S\\\\s]{0,120}(?=,\\\"action)/g);\\n            // 前置参数和预处理---\\n            var Color = \\\"#19B89D\\\";\\n            var 每页集数 = 30;\\n            var 搜索模式 = '分组';\\n            var 调用名称 = '简影';\\n            putMyVar('折叠', '关');\\n            putMyVar('日历', '关');\\n\\n            // 清除变量\\n            addListener('onClose', $.toString(() => {\\n                clearMyVar('分集起');\\n                clearMyVar('分集终');\\n                clearMyVar('lazy');\\n                clearMyVar('剧集列表');\\n            }))\\n            // 设置动态最新章节\\n            setLastChapterRule('js:' + $.toString(() => {\\n                eval(JSON.parse(request('hiker://page/getUpdate?rule=优酷.cy')).rule);\\n            }));\\n            // 页面内容正文---\\n            // 基本功能栏\\n            function 基本功能栏() {\\n                // 基本信息模块\\n                d.push({\\n                    title: 短讯,\\n                    desc: 简介.substring(0, 45) + '‘‘’’…<font color=\\\"#1C1C1C\\\">详情</font>',\\n                    img: 封面,\\n                    url: $().rule((简介) => {\\n                        res = {};\\n                        var d = [];\\n                        d.push({\\n                            title: '影片简介：' + '\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t' + 简介,\\n                            col_type: 'long_text'\\n                        });\\n                        res.data = d;\\n                        setHomeResult(res);\\n                    }, 简介),\\n                    col_type: 'movie_1_vertical_pic_blur',\\n                    extra: {\\n                        longClick: [{\\n                            title: '预告、花絮开关', js: $.toString(() => {\\n                                if (getItem('previewSwitch', 'fold') == 'fold') {\\n                                    setItem('previewSwitch', 'open');\\n                                    refreshPage(true);\\n                                    return \\\"toast://预告已经切换为展示~\\\";\\n                                } else {\\n                                    setItem('previewSwitch', 'fold');\\n                                    refreshPage(true);\\n                                    return \\\"toast://预告不再展示~\\\";\\n                                }\\n                            }),\\n                        }]\\n                    }\\n                });\\n                // 追剧日历模块\\n                d.push({\\n                    title: '‘‘’’<small><font color=\\\"#098AC1\\\">📅追剧日历</font></small>',\\n                    url: $('#noLoading#').lazyRule((短讯, 类型标识, 剧集列表, 演职人员信息, 追剧日历) => {\\n                        if (短讯.match(/预告/)) {\\n                            return \\\"toast://当前是预告状态，暂无更新计划，敬请期待！\\\"\\n                        } else if (短讯.match(/电影/)) {\\n                            return \\\"toast://电影你也要追啊！\\\"\\n                        } else {\\n                            if (getMyVar('日历', '关') == '开') {\\n                                // 太苦逼了~因为海阔自身的bug导致不能直接批量删除（会导致失焦让选集栏折叠消失...）——只能采取循环删除的方式~\\n                                deleteItem('追剧日历')\\n                                deleteItem('追剧日历')\\n                                putMyVar('日历', '关');\\n                            } else {\\n                                // 因为综艺、纪录片、文化相关等节目和普通剧集的集数排序是倒过来的\\n                                if (类型标识 == 3 || 类型标识 == 9 || 类型标识 == 178) {\\n                                    data1 = JSON.parse(request('https://openapi.youku.com/v2/videos/show.json?client_id=53e6cc67237fc59a&package=com.huawei.hwvplayer.youku&ext=show&video_id=' + 剧集列表[剧集列表.length - 1].videoId));\\n                                    data2 = JSON.parse(request('https://openapi.youku.com/v2/videos/show.json?client_id=53e6cc67237fc59a&package=com.huawei.hwvplayer.youku&ext=show&video_id=' + 剧集列表[0].videoId));\\n                                } else {\\n                                    data1 = JSON.parse(request('https://openapi.youku.com/v2/videos/show.json?client_id=53e6cc67237fc59a&package=com.huawei.hwvplayer.youku&ext=show&video_id=' + 剧集列表[0].videoId));\\n                                    data2 = JSON.parse(request('https://openapi.youku.com/v2/videos/show.json?client_id=53e6cc67237fc59a&package=com.huawei.hwvplayer.youku&ext=show&video_id=' + 剧集列表[剧集列表.length - 1].videoId));\\n                                }\\n                                上映时间 = data1.published;\\n                                最后更新 = data2.published + '\\\\n' + data2.show.type + '\\\\t' + data2.title\\n                                if (演职人员信息) {\\n                                    addItemAfter('演职人员',\\n                                        [{\\n                                            title: 追剧日历,\\n                                            col_type: \\\"rich_text\\\",\\n                                            extra: {\\n                                                id: '追剧日历'\\n                                            }\\n                                        }, {\\n                                            title: \\\"更新状态\\\",\\n                                            col_type: \\\"text_1\\\",\\n                                            desc: '上映时间：' + 上映时间 + '\\\\n最后更新：' + 最后更新,\\n                                            extra: {\\n                                                id: '追剧日历'\\n                                            }\\n                                        }]\\n                                    );\\n                                } else {\\n                                    addItemAfter('豆瓣影讯',\\n                                        [{\\n                                            title: 追剧日历,\\n                                            col_type: \\\"rich_text\\\",\\n                                            extra: {\\n                                                id: '追剧日历'\\n                                            }\\n                                        }, {\\n                                            title: \\\"更新状态\\\",\\n                                            col_type: \\\"text_1\\\",\\n                                            desc: '上映时间：' + 上映时间 + '\\\\n最后更新：' + 最后更新,\\n                                            extra: {\\n                                                id: '追剧日历'\\n                                            }\\n                                        }]\\n                                    );\\n                                }\\n                                putMyVar('日历', '开');\\n                            }\\n                            return 'toast://已切换日历为:' + getMyVar('日历', '开')\\n                        }\\n                    }, 短讯, 类型标识, 剧集列表, 演职人员信息, 追剧日历),\\n                    col_type: 'text_3'\\n                });\\n                // 豆瓣影讯模块\\n                d.push({\\n                    title: '‘‘’’<small><font><font color=\\\"#098AC1\\\">🍃豆瓣影讯</font>' + '</small>',\\n                    url: 'hiker://search?s=' + 影片名称 + '&rule=青豆',\\n                    col_type: 'text_3',\\n                    extra: {\\n                        id: '豆瓣影讯'\\n                    }\\n                });\\n                // 演职人员模块\\n                if (演职人员信息) {\\n                    d.push({\\n                        title: '‘‘’’<small><font color=\\\"#098AC1\\\">⬇️演职人员</font></small>',\\n                        url: $('#noLoading#').lazyRule((演职人员信息) => {\\n                            if (getMyVar('折叠', '关') == '开') {\\n                                for (var i = 0; i < 演职人员信息.length; i++) {\\n                                    deleteItem('演职人员展示');\\n                                }\\n                                putMyVar('折叠', '关');\\n                            } else {\\n                                temArr = [];\\n                                for (var i = 0; i < 演职人员信息.length; i++) {\\n                                    dataJson = JSON.parse('{' + 演职人员信息[i] + '}');\\n                                    temArr.push({\\n                                        title: dataJson.title + '\\\\t' + dataJson.subtitle,\\n                                        img: dataJson.img.replace('\\\\u002F', '/') + \\\"@Referer=\\\",\\n                                        col_type: 'icon_2_round',\\n                                        url: 'hiker://search?s=' + dataJson.title + '&rule=青豆',\\n                                        extra: {\\n                                            id: '演职人员展示'\\n                                        }\\n                                    });\\n\\n                                }\\n                                addItemAfter('演职人员', temArr);\\n                                putMyVar('折叠', '开');\\n                            }\\n                            return 'toast://已切换折叠为:' + getMyVar('折叠', '开')\\n                        }, 演职人员信息),\\n                        col_type: 'text_3',\\n                        extra: {\\n                            id: '演职人员'\\n                        }\\n                    })\\n                }\\n                // 选插模块——局部刷新版\\n                来源 = 'yk';\\n                eval(getMyVar('简插'));\\n                d.push({\\n                    title: '就绪解析：🔘<font color=\\\"' + Color + '\\\">' + op + '</font>\\\\t\\\\t\\\\t\\\\t页码：<font color=\\\"' + Color + '\\\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\\n                    url: $('#noLoading#').lazyRule((json, 来源, Color, op, 影片名称, 搜索模式, 调用名称) => {\\n                        eval(getMyVar('简插'));\\n                        return $(eval(getMyVar('解析数组')), 3).select((json, 来源, Color, op, 影片名称, 搜索模式, 调用名称) => {\\n                            setFile = getMyVar('setFile');\\n                            input = input.replace(/👉/g, '');\\n                            if (input === '✍️辅助') {\\n                                return $().rule(() => {\\n                                    eval(JSON.parse(request('hiker://page/home?rule=配置助手')).rule);\\n                                })\\n                            } else if (input === '📦️魔断') {\\n                                return \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=编辑#noHistory#\\\";\\n                            } else if (input === '🔍搜索') {\\n                                if (搜索模式 == '分组') {\\n                                    return \\\"hiker://search?s=\\\" + 影片名称 + \\\"&group=\\\" + 调用名称;\\n                                } else {\\n                                    return \\\"hiker://search?s=\\\" + 影片名称 + \\\"&rule=\\\" + 调用名称;\\n                                }\\n                            }\\n                            // 原先的配置\\n                            originSettings = JSON.stringify(json.settings);\\n                            // 修改配置\\n                            eval('json.settings.' + 来源 + '=input;');\\n                            setFile = setFile.replace(originSettings, JSON.stringify(json.settings));\\n                            saveFile('hiker://files/rules/DuanNian/MyParse.json', setFile);\\n                            // 刷新元素\\n                            eval(getMyVar('简插'));\\n                            updateItem('op', {\\n                                title: '就绪解析：🔘<font color=\\\"' + Color + '\\\">' + op + '</font>\\\\t\\\\t\\\\t\\\\t页码：<font color=\\\"' + Color + '\\\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\\n                            });\\n                            return \\\"toast://切换解析口为:\\\" + input;\\n                        }, json, 来源, Color, op, 影片名称, 搜索模式, 调用名称)\\n                    }, json, 来源, Color, op, 影片名称, 搜索模式, 调用名称),\\n                    img: 'hiker://files/rules/cy/tubiao/youku.svg',\\n                    col_type: \\\"avatar\\\",\\n                    extra: {\\n                        id: 'op'\\n                    }\\n                });\\n            }\\n\\n            // 匹配电影\\n            if (html.match(/\\\"播放页电影选集\\\",\\\"dataNode\\\":\\\\[{[\\\\S\\\\s]+(?=,\\\"title\\\":\\\"(系列电影|播放列表)\\\")/)) {\\n                // 对电影的基本功能栏初始参值做下防错处理\\n                追剧日历 = '', 剧集列表 = '', 类型标识 = 2, 短讯 = '电影';\\n                putMyVar('日历', '关')\\n                基本功能栏();\\n                上映日期 = JSON.parse('{' + html.match(/\\\"videoPublishTime\\\"[\\\\S\\\\s]+(?=,\\\"videoTitle\\\")/)[0] + '}').videoPublishTime;\\n                d.push({\\n                    title: '‘‘’’<small><font><font color=\\\"red\\\">上映日期：' + 上映日期 + '</font></small>',\\n                    url: \\\"toast://点我干嘛~\\\",\\n                    col_type: 'scroll_button'\\n                })\\n                d.push({\\n                    title: '系列电影',\\n                    col_type: 'text_1',\\n                    // desc: '‘‘’’<small><font><font color=\\\"red\\\">上映日期：' + 上映日期 + '</font></small>',\\n                });\\n                try {\\n                    电影信息 = JSON.parse(html.match(/\\\"播放页电影选集\\\",\\\"dataNode\\\":\\\\[{[\\\\S\\\\s]+(?=,\\\"title\\\":\\\"(系列电影|播放列表)\\\")/)[0].replace('\\\"播放页电影选集\\\",\\\"dataNode\\\":', ''));\\n                    电影信息.forEach(list => {\\n                        if (list.data.summary) {\\n                            d.push({\\n                                title: list.data.title,\\n                                img: list.data.img.replace('\\\\u002F', '/') + \\\"@Referer=\\\",\\n                                url: 'https://v.youku.com/v_show/id_' + list.data.action.value + '.html' + lazy,\\n                                desc: list.data.videoType + '\\\\t' + list.data.summary,\\n                                col_type: 'movie_2'\\n                            });\\n                        } else {\\n                            d.push({\\n                                title: list.data.title,\\n                                img: list.data.img.replace('\\\\u002F', '/') + \\\"@Referer=\\\",\\n                                url: 'https://v.youku.com/v_show/id_' + list.data.action.value + '.html' + lazy,\\n                                desc: list.data.videoType,\\n                                col_type: 'movie_2'\\n                            });\\n                        }\\n                    });\\n                } catch (e) {\\n                    try {\\n                        // 分成多种语言版本的电影\\n                        电影信息 = JSON.parse(html.match(/\\\"播放页电影选集\\\",\\\"dataNode\\\":\\\\[{[\\\\S\\\\s]+(?=,\\\"title\\\":\\\"播放列表\\\")/)[0].replace('\\\"播放页电影选集\\\",\\\"dataNode\\\":', ''));\\n                        for (let i = 0; i < 电影信息.length; i++) {\\n                            if (电影信息[i].data.summary) {\\n                                d.push({\\n                                    title: 电影信息[i].data.title,\\n                                    img: 电影信息[i].data.img.replace('\\\\u002F', '/') + \\\"@Referer=\\\",\\n                                    url: 'https://v.youku.com/v_show/id_' + 电影信息[i].data.audioLang[i].videoId + '.html' + lazy,\\n                                    desc: 电影信息[i].data.videoType + '\\\\t' + 电影信息[i].data.summary,\\n                                    col_type: 'movie_2'\\n                                });\\n                            } else {\\n                                d.push({\\n                                    title: 电影信息[i].data.title,\\n                                    img: 电影信息[i].data.img.replace('\\\\u002F', '/') + \\\"@Referer=\\\",\\n                                    url: 'https://v.youku.com/v_show/id_' + 电影信息[i].data.audioLang[i].videoId + '.html' + lazy,\\n                                    desc: 电影信息[i].data.videoType,\\n                                    col_type: 'movie_2'\\n                                });\\n                            }\\n                        }\\n                    } catch (e) {\\n                        // 本来是打算动态刷新系列电影元素的desc，但是不知道为什么一点反应都没有,直接在后面添加新元素好了，烦\\n                        d.push({\\n                            title: '‘‘’’<small><font color=\\\"red\\\">当前可能是预告状态，没有任何数据~</font></small>',\\n                            col_type: 'text_1'\\n                        });\\n                    }\\n                }\\n\\n            } else {\\n                try {\\n                    // 一般剧集（含电影、综艺）——但电影不走这条线，因为没有系列电影的数据~\\n                    剧集信息 = JSON.parse(request(\\\"https://search.youku.com/api/search?appScene=show_episode&showIds=\\\" + 剧集ID + \\\"&appCaller=h5\\\"));\\n                    类型标识 = 剧集信息.cateId;\\n                    剧集列表 = 剧集信息.serisesList;\\n                    if (剧集信息.updateNotice) {\\n                        追剧日历 = 剧集信息.updateNotice\\n                    } else {\\n                        追剧日历 = '——已完结——'\\n                    }\\n                    // 先尝试获取剧集数据，如果获取失败，异常会在上方出现，因为没有serisesList，那就走栏目路线\\n                    基本功能栏();\\n                    // 设置选集列表\\n                    剧集长度 = 剧集列表.length\\n                    if (剧集长度 > 每页集数) {\\n                        putMyVar('刷新选集', $.toString(() => {\\n                            putMyVar('分集起', start);\\n                            putMyVar('分集终', end);\\n                            eval(getMyVar('简插'));\\n                            updateItem('op', {\\n                                title: '就绪解析：🔘<font color=\\\"' + Color + '\\\">' + op + '</font>\\\\t\\\\t\\\\t\\\\t页码：<font color=\\\"' + Color + '\\\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\\n                            })\\n                            // 删除\\n                            for (let i = 1; i <= getMyVar('分集终'); i++) {\\n                                deleteItem('youku' + i);\\n                            }\\n                            // 添加\\n                            lazy = getMyVar('lazy');\\n                            剧集列表 = JSON.parse(getMyVar('剧集列表'));\\n                            显示的剧集列表 = 剧集列表.slice(start - 1, end);\\n                            newArray = [];\\n                            index = 1;\\n                            if (类型标识 == 3 || 类型标识 == 9 || 类型标识 == 178) {\\n                                显示的剧集列表.forEach(list => {\\n                                    if (list.iconCorner&&list.iconCorner.tagText) {\\n                                        状态 = list.iconCorner.tagText;\\n                                    } else {\\n                                        状态 = '';\\n                                    }\\n                                    if (getItem('previewSwitch', 'fold') == 'fold' && 状态.match(/预|花絮/)) {\\n                                        return;\\n                                    } else {\\n                                        if (list.thumbUrl === null || undefined) {\\n                                            data = JSON.parse(request('https://openapi.youku.com/v2/videos/show.json?client_id=53e6cc67237fc59a&package=com.huawei.hwvplayer.youku&ext=show&video_id=' + list.videoId));\\n                                            封面 = data.thumbnail;\\n                                        } else {\\n                                            封面 = list.thumbUrl;\\n                                        }\\n                                        newArray.push({\\n                                            title: list.title,\\n                                            img: 封面 + \\\"@Referer=\\\",\\n                                            url: 'https://v.youku.com/v_show/id_' + list.videoId + '.html' + lazy,\\n                                            desc: 状态 + '\\\\t' + list.stripeBottom + '\\\\n' + list.displayName,\\n                                            col_type: 'movie_1_left_pic',\\n                                            extra: {\\n                                                id: 'youku' + index,\\n                                            }\\n                                        });\\n                                        index += 1;\\n                                    }\\n                                });\\n                            } else {\\n                                显示的剧集列表.forEach(list => {\\n                                    if (list.iconCorner&&list.iconCorner.tagText) {\\n                                        状态 = list.iconCorner.tagText;\\n                                    } else {\\n                                        状态 = '';\\n                                    }\\n                                    if (getItem('previewSwitch', 'fold') == 'fold' && 状态.match(/预|花絮/)) {\\n                                        return;\\n                                    } else {\\n                                        if (list.thumbUrl === null || undefined) {\\n                                            data = JSON.parse(request('https://openapi.youku.com/v2/videos/show.json?client_id=53e6cc67237fc59a&package=com.huawei.hwvplayer.youku&ext=show&video_id=' + list.videoId));\\n                                            封面 = data.thumbnail;\\n                                        } else {\\n                                            封面 = list.thumbUrl;\\n                                        }\\n                                        newArray.push({\\n                                            title: list.title,\\n                                            img: 封面 + \\\"@Referer=\\\",\\n                                            url: 'https://v.youku.com/v_show/id_' + list.videoId + '.html' + lazy,\\n                                            desc: 状态 + '\\\\t' + list.displayName,\\n                                            col_type: 'movie_2',\\n                                            extra: {\\n                                                id: 'youku' + index,\\n                                            }\\n                                        });\\n                                        index += 1;\\n                                    }\\n                                });\\n                            }\\n                            addItemAfter(getMyVar('末页'), newArray);\\n                        }));\\n                        d.push({\\n                            col_type: 'scroll_button',\\n                            url: 'hiker://empty',\\n                            title: '∷',\\n                            extra: {\\n                                id: '占位符',\\n                            }\\n                        })\\n                        putMyVar('分集起', 1);\\n                        putMyVar('分集终', 每页集数);\\n                        putMyVar('剧集列表', 剧集列表);\\n                        总页数 = Math.ceil(剧集长度 / 每页集数);\\n                        start = 1;\\n                        end = 每页集数;\\n                        for (let page = 1; page <= 总页数; page++) {\\n                            if (end > 剧集长度) {\\n                                end = 剧集长度;\\n                            }\\n                            d.push({\\n                                title: start + '-' + end,\\n                                url: $('#noLoading##noHistory#').lazyRule((start, end, Color, 来源, 类型标识) => {\\n                                    eval(getMyVar('刷新选集'));\\n                                    return \\\"hiker://empty\\\";\\n                                }, start, end, Color, 来源, 类型标识),\\n                                col_type: 'scroll_button',\\n                                extra: {\\n                                    id: start + '-' + end\\n                                }\\n                            });\\n                            if (end < 剧集长度) {\\n                                start += 每页集数;\\n                                end += 每页集数;\\n                            }\\n                        }\\n                        // 记录末页的id\\n                        putMyVar('末页', start + '-' + end);\\n                    } else {\\n                        putMyVar('分集起', 1);\\n                        putMyVar('分集终', 剧集长度);\\n                    }\\n                    // 展示剧集:如果是综艺、纪录片、文化等节目类型的以条栏样式显示，并且综艺类型的剧集是按最新时间来排序的~这个接口预告没有封面需要手动搞搞了\\n                    if (类型标识 == 3 || 类型标识 == 9 || 类型标识 == 178) {\\n                        for (let i = 0; i < getMyVar('分集终'); i++) {\\n                            if (剧集列表[i].iconCorner&&剧集列表[i].iconCorner.tagText) {\\n                                状态 = 剧集列表[i].iconCorner.tagText;\\n                            } else {\\n                                状态 = '';\\n                            }\\n                            if (getItem('previewSwitch', 'fold') == 'fold' && 状态.match(/预|花絮/)) {\\n                                continue;\\n                            } else {\\n                                if (剧集列表[i].thumbUrl === null || undefined) {\\n                                    data = JSON.parse(request('https://openapi.youku.com/v2/videos/show.json?client_id=53e6cc67237fc59a&package=com.huawei.hwvplayer.youku&ext=show&video_id=' + 剧集列表[i].videoId));\\n                                    封面 = data.thumbnail;\\n                                } else {\\n                                    封面 = 剧集列表[i].thumbUrl;\\n                                }\\n                                d.push({\\n                                    title: 剧集列表[i].title,\\n                                    img: 封面 + \\\"@Referer=\\\",\\n                                    url: 'https://v.youku.com/v_show/id_' + 剧集列表[i].videoId + '.html' + lazy,\\n                                    desc: 状态 + '\\\\t' + 剧集列表[i].stripeBottom + '\\\\n' + 剧集列表[i].displayName,\\n                                    col_type: 'movie_1_left_pic',\\n                                    extra: {\\n                                        id: 'youku' + (i + 1),\\n                                    }\\n                                });\\n                            }\\n                        }\\n                    } else {\\n                        for (let i = 0; i < getMyVar('分集终'); i++) {\\n                            if (剧集列表[i].iconCorner&&剧集列表[i].iconCorner.tagText) {\\n                                状态 = 剧集列表[i].iconCorner.tagText;\\n                            } else {\\n                                状态 = '';\\n                            }\\n                            if (getItem('previewSwitch', 'fold') == 'fold' && 状态.match(/预|花絮/)) {\\n                                continue;\\n                            } else {\\n                                if (剧集列表[i].thumbUrl === null) {\\n                                    data = JSON.parse(request('https://openapi.youku.com/v2/videos/show.json?client_id=53e6cc67237fc59a&package=com.huawei.hwvplayer.youku&ext=show&video_id=' + 剧集列表[i].videoId));\\n                                    封面 = data.thumbnail;\\n                                } else {\\n                                    封面 = 剧集列表[i].thumbUrl;\\n                                }\\n                                d.push({\\n                                    title: 剧集列表[i].title,\\n                                    img: 封面 + \\\"@Referer=\\\",\\n                                    url: 'https://v.youku.com/v_show/id_' + 剧集列表[i].videoId + '.html' + lazy,\\n                                    desc: 状态 + '\\\\t' + 剧集列表[i].displayName,\\n                                    col_type: 'movie_2',\\n                                    extra: {\\n                                        id: 'youku' + (i + 1),\\n                                    }\\n                                });\\n                            }\\n                        }\\n                    }\\n                } catch (e) {\\n                    // 滑动图片选集型（音乐、娱乐、生活等栏目）——烦了，直接正则全局匹配成数组好了。。。\\n                    选集信息 = html.match(/\\\"播放页ugc选集\\\",\\\"dataNode\\\":\\\\[{[\\\\S\\\\s]+}(?=\\\\],\\\"title\\\")/)[0].replace('\\\"播放页ugc选集\\\",\\\"dataNode\\\":[', '');\\n                    选集信息 = 选集信息.match(/{\\\"data\\\":{[\\\\S\\\\s]{0,2000},\\\"id\\\":[0-9]{0,20},\\\"type\\\":[0-9]{0,20}}/g)\\n                    setPageTitle('栏目列表')\\n                    选集信息.forEach(list => {\\n                        list = JSON.parse(list);\\n                        d.push({\\n                            title: list.data.title,\\n                            img: list.data.img.replace('\\\\u002F', '/') + \\\"@Referer=\\\",\\n                            url: 'https://v.youku.com/v_show/id_' + list.data.action.value + '.html' + lazy,\\n                            desc: list.data.publishTime,\\n                            col_type: 'movie_1_left_pic',\\n                        });\\n                    });\\n                }\\n\\n            }\\n\\n            setResult(d);\\n            break;\\n        case 'tx':\\n            MY_URL = MY_PARAMS.url;\\n            if (MY_URL.match(/cover/)) {\\n                // 手机搜索结果链接\\n                cid = MY_URL.split('/')[5].split('.html')[0];\\n                if (MY_URL.split('=')[1]) {\\n                    vid = MY_URL.split('=')[1];\\n                    MY_URL = 'https://v.qq.com/x/cover/' + cid + '/' + vid + '.html';\\n                } else {\\n                    MY_URL = 'https://v.qq.com/x/cover/' + cid + '.html';\\n                }\\n            } else {\\n                // 手机首页跳转链接\\n                cid = MY_URL.split('=')[1].split('&')[0];\\n                if (cid == '') {\\n                    vid = MY_URL.split('=')[2]\\n                    // 这个cid貌似是错的，，算了就尝试一下，多半还是要404~\\n                    data = fetch('https://union.video.qq.com/fcgi-bin/data?otype=json&tid=682&appid=20001238&appkey=6c03bbe9658448a4&union_platform=1&idlist=' + vid);\\n                    cid = JSON.parse(data.match(/{[\\\\S\\\\s]+}/)[0]).results[0].fields.cover_list[0]\\n                }\\n                MY_URL = 'https://v.qq.com/x/cover/' + cid + '.html';\\n            }\\n            var res = JSON.parse(fetch(buildUrl(\\\"https://pbaccess.video.qq.com/trpc.universal_backend_service.page_server_rpc.PageServer/GetPageData\\\", {\\n                video_appid: \\\"3000010\\\",\\n                vplatform: \\\"2\\\",\\n                vversion_name: \\\"8.2.96\\\"\\n            }), {\\n                body: {\\n                    \\\"page_params\\\": {\\n                        \\\"req_from\\\": \\\"web_vsite\\\",\\n                        \\\"page_id\\\": \\\"vsite_episode_list\\\",\\n                        \\\"page_type\\\": \\\"detail_operation\\\",\\n                        \\\"id_type\\\": \\\"1\\\",\\n                        \\\"page_size\\\": \\\"\\\",\\n                        \\\"cid\\\": cid,\\n                        \\\"vid\\\": \\\"\\\",\\n                        \\\"lid\\\": \\\"\\\",\\n                        \\\"page_num\\\": \\\"\\\",\\n                        \\\"page_context\\\": \\\"\\\",\\n                        \\\"detail_page_type\\\": \\\"1\\\"\\n                    },\\n                    \\\"has_cache\\\": 1\\n                },\\n                headers: {\\n                    \\\"User-Agent\\\": PC_UA,\\n                    \\\"Referer\\\": \\\"https://v.qq.com\\\"\\n                },\\n                method: \\\"POST\\\"\\n            }));\\n            追剧日历 = res.data.module_list_datas[0].module_datas[0].module_params.sub_title\\n            // 更新状态=Data2.introData.list[0].item_params.detail_info.split('·')[1]+'/'+Data2.introData.list[0].item_params.detail_info.split('·')[2];\\n    \\n            演职人员 = MY_PARAMS.演职人员;\\n            简介 = MY_PARAMS.简介;\\n            类型 = MY_PARAMS.类型;\\n            全集数 = MY_PARAMS.全集数;\\n            影片名称 = MY_PARAMS.影片名称;\\n            // 第二标题 = MY_PARAMS.第二标题;\\n            地区 = MY_PARAMS.地区;\\n            标签 = MY_PARAMS.标签;\\n            年份 = MY_PARAMS.年份;\\n            语言 = MY_PARAMS.语言;\\n            封面 = MY_PARAMS.封面;\\n            // 相关热榜 = MY_PARAMS.相关热榜;\\n            // 相关热榜 = html.match(/\\\"topList\\\":[\\\\S\\\\s]+(?=,\\\"knowledgeIntro\\\")/)[0];\\n            相关热榜 = \\\"\\\";\\n    \\n    \\n            短讯 = \\\"⭐\\\" + 类型 + \\\"⭐\\\" + (年份 ? 年份 : '') + '\\\\t' + (地区 ? 地区 : '') + '\\\\t' + (语言 ? 语言 : '') + '\\\\n' + 标签;\\n            // 重定义二级页面数据\\n            setPageTitle(影片名称);\\n            setPagePicUrl(封面);\\n            // 前置参数和预处理---\\n            var Color = \\\"#19B89D\\\";\\n            var 每页集数 = 20\\n            var 搜索模式 = '分组';\\n            var 调用名称 = '简影';\\n            putMyVar('折叠', '关');\\n            putMyVar('日历', '关');\\n\\n            // putMyVar('剧集列表', 剧集列表);\\n            // 清除变量\\n            addListener('onClose', $.toString(() => {\\n                clearMyVar('分集起');\\n                clearMyVar('分集终');\\n                clearMyVar('lazy');\\n                clearMyVar('剧集列表');\\n            }))\\n            // 设置动态最新章节\\n            setLastChapterRule('js:' + $.toString((MY_URL) => {\\n                eval(JSON.parse(request('hiker://page/getUpdate?rule=腾讯.cy')).rule);\\n            }, MY_URL));\\n            // 页面内容正文---\\n            // 基本信息模块\\n            d.push({\\n                title: 短讯,\\n                desc: 简介 == '' ? '暂无简介' : 简介.substring(0, 45) + '‘‘’’…<font color=\\\"#1C1C1C\\\">详情</font>',\\n                img: 封面,\\n                url: $().rule((简介, 演职人员) => {\\n                    res = {};\\n                    var d = [];\\n                    d.push({\\n                        title: 演职人员 + '\\\\n简介：' + '\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t' + 简介,\\n                        col_type: 'long_text'\\n                    });\\n                    res.data = d;\\n                    setHomeResult(res);\\n                }, 简介, 演职人员),\\n                col_type: 'movie_1_vertical_pic_blur',\\n                extra: {\\n                    longClick: [{\\n                        title: '预告、花絮开关', js: $.toString(() => {\\n                            if (getItem('previewSwitch', 'fold') == 'fold') {\\n                                setItem('previewSwitch', 'open');\\n                                refreshPage(true);\\n                                return \\\"toast://预告已经切换为展示~\\\";\\n                            } else {\\n                                setItem('previewSwitch', 'fold');\\n                                refreshPage(true);\\n                                return \\\"toast://预告不再展示~\\\";\\n                            }\\n                        }),\\n                    }]\\n                }\\n            });\\n            // 追剧日历模块\\n            d.push({\\n                title: '‘‘’’<small><font><font color=\\\"#098AC1\\\">📅追剧</font>' + '</small>',\\n                url: $('#noLoading#').lazyRule((追剧日历, 全集数) => {\\n                    if (getMyVar('日历', '关') == '开') {\\n                        deleteItem('追剧日历');\\n                        putMyVar('日历', '关');\\n                    } else {\\n                        addItemAfter('显示模式', {\\n                            title: 追剧日历 == '' ? '-已完结or无更新计划-' : (全集数 == '' ? '暂无集数数据<br>' + 追剧日历 : '共' + 全集数 + '集<br>' + 追剧日历),\\n                            col_type: \\\"rich_text\\\",\\n                            extra: {\\n                                id: '追剧日历'\\n                            }\\n                        });\\n                        putMyVar('日历', '开');\\n                    }\\n                    return 'toast://已切换日历为:' + getMyVar('日历', '开')\\n                }, 追剧日历, 全集数),\\n                col_type: 'text_4'\\n            });\\n            // 豆瓣影讯模块\\n            d.push({\\n                title: '‘‘’’<small><font color=\\\"#098AC1\\\">🍃豆瓣</font></small>',\\n                url: 'hiker://search?s=' + 影片名称 + '&rule=青豆',\\n                col_type: 'text_4'\\n            });\\n            // 相关热榜模块\\n            d.push({\\n                title: '‘‘’’<small><font><font color=\\\"#098AC1\\\">🏷️' + 相关热榜.title + '热榜</font>' + '</small>',\\n                url: $('#noLoading#').lazyRule((相关热榜) => {\\n                    if (相关热榜.title == '') {\\n                        return 'toast://没有分类榜单！'\\n                    }\\n                    return $().rule((相关热榜) => {\\n                        res = {};\\n                        d = [];\\n                        setPageTitle(相关热榜.title + '热榜');\\n                        榜单列表 = 相关热榜.data;\\n                        num = 1;\\n                        榜单列表.forEach(list => {\\n                            link = 'https://v.qq.com/x/cover/' + list.id + '.html';\\n                            d.push({\\n                                title: '‘‘’’<big><font color=\\\"red\\\">Num.' + num + '</font></big>' + list.title,\\n                                img: list.pic.replace('\\\\u002F', '/') + \\\"@Referer=\\\",\\n                                url: $('#noLoading#').lazyRule((link) => {\\n                                    return $('hiker://empty#immersiveTheme#').rule((link) => {\\n                                        MY_URL = link + '#immersiveTheme#';\\n                                        eval(JSON.parse(request('hiker://page/qq?rule=腾讯.cy')).rule);\\n                                    }, link)\\n                                }, link),\\n                                desc: list.timelong + '\\\\n' + list.secondTitle,\\n                                col_type: 'movie_1_left_pic'\\n                            });\\n                            num += 1;\\n                        });\\n                        res.data = d;\\n                        setHomeResult(res);\\n                    }, 相关热榜)\\n                }, 相关热榜),\\n                col_type: 'text_4',\\n                extra: {\\n                    id: '相关热榜'\\n                }\\n            });\\n            // 显示模式更改模块\\n            d.push({\\n                title: '‘‘’’<small><font color=\\\"#098AC1\\\">🔃' + getItem('模式', '双边') + '</font></small>',\\n                url: $('#noLoading#').lazyRule((每页集数) => {\\n                    if (getItem('模式', '双边') == '列表') {\\n                        for (let index = 1; index <= 每页集数; index++) {\\n                            updateItem('tx' + index, {\\n                                col_type: 'movie_2',\\n                            });\\n                        }\\n                        setItem('模式', '双边')\\n                    } else {\\n                        for (let index = 1; index <= 每页集数; index++) {\\n                            updateItem('tx' + index, {\\n                                col_type: 'movie_1_left_pic',\\n                            });\\n                        }\\n                        setItem('模式', '列表')\\n                    }\\n                    updateItem('显示模式', {\\n                        title: '‘‘’’<small><font color=\\\"#098AC1\\\">🔃' + getItem('模式', '双边') + '</font></small>',\\n                    });\\n                    return 'toast://已切换模式为:' + getItem('模式', '双边')\\n                }, 每页集数),\\n                col_type: 'text_4',\\n                extra: {\\n                    id: '显示模式'\\n                }\\n            });\\n            // 选插模块——局部刷新版\\n            来源 = 'tx';\\n            eval(getMyVar('简插'));\\n            d.push({\\n                title: '解析：🔘<font color=\\\"' + Color + '\\\">' + op + '</font>\\\\t\\\\t页码：<font color=\\\"' + Color + '\\\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\\n                url: $('#noLoading#').lazyRule((json, 来源, Color, op, 影片名称, 搜索模式, 调用名称) => {\\n                    eval(getMyVar('简插'));\\n                    return $(eval(getMyVar('解析数组')), 3).select((json, 来源, Color, op, 影片名称, 搜索模式, 调用名称) => {\\n                        setFile = getMyVar('setFile');\\n                        input = input.replace(/👉/g, '');\\n                        if (input === '✍️辅助') {\\n                            return $().rule(() => {\\n                                eval(JSON.parse(request('hiker://page/home?rule=配置助手')).rule);\\n                            })\\n                        } else if (input === '📦️魔断') {\\n                            return \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=编辑#noHistory#\\\";\\n                        } else if (input === '🔍搜索') {\\n                            if (搜索模式 == '分组') {\\n                                return \\\"hiker://search?s=\\\" + 影片名称 + \\\"&group=\\\" + 调用名称;\\n                            } else {\\n                                return \\\"hiker://search?s=\\\" + 影片名称 + \\\"&rule=\\\" + 调用名称;\\n                            }\\n                        }\\n                        // 原先的配置\\n                        originSettings = JSON.stringify(json.settings);\\n                        // 修改配置\\n                        eval('json.settings.' + 来源 + '=input;');\\n                        setFile = setFile.replace(originSettings, JSON.stringify(json.settings));\\n                        saveFile('hiker://files/rules/DuanNian/MyParse.json', setFile);\\n                        // 刷新元素\\n                        eval(getMyVar('简插'));\\n                        updateItem('op', {\\n                            title: '解析：🔘<font color=\\\"' + Color + '\\\">' + op + '</font>\\\\t\\\\t页码：<font color=\\\"' + Color + '\\\">' + getMyVar(\\\"页码\\\", \\\"首页\\\") + '</font>',\\n                        });\\n                        return \\\"toast://切换解析口为:\\\" + input;\\n                    }, json, 来源, Color, op, 影片名称, 搜索模式, 调用名称)\\n                }, json, 来源, Color, op, 影片名称, 搜索模式, 调用名称),\\n                img: 'hiker://files/rules/cy/tubiao/tx.svg',\\n                col_type: \\\"avatar\\\",\\n                extra: {\\n                    id: 'op'\\n                }\\n            });\\n            // 获取剧集信息\\n            putMyVar('刷新选集', $.toString(() => {\\n                // 删除\\n                for (let i = 1; i <= 300; i++) {\\n                    deleteItem('tx' + i);\\n                }\\n                // 判断执行的接口方案\\n                // 添加\\n                lazy = getMyVar('lazy');\\n                function formatTime(seconds) {\\n                    var minutes = Math.floor(seconds / 60);\\n                    var remainingSeconds = seconds % 60;\\n                    var formattedTime = minutes.toString().padStart(2, '0') + \\\":\\\" + remainingSeconds.toString().padStart(2, '0');\\n                    return formattedTime;\\n                }\\n                newArray = [];\\n                index = 1;\\n                if (el.title) {\\n                    title = el.title;\\n                    data = JSON.parse(fetch(buildUrl('https://pbaccess.video.qq.com/trpc.videosearch.search_cgi.http/load_playsource_list_info', {\\n                        pageNum: '0',\\n                        id: cid,\\n                        dataType: '2',\\n                        pageContext: encodeURIComponent(el.asnycParams),\\n                        scene: '2',\\n                        platform: '2',\\n                        appId: '10718',\\n                        site: 'qq'\\n                    }))).data.normalList.itemList[0].videoInfo.firstBlockSites[0];\\n                    episodeInfoList = data.episodeInfoList;\\n                    正片列表 = episodeInfoList.filter((it) => {\\n                        lable = it.markLabel;\\n                        if (lable.match(/限免/) || !lable.match(/预|花絮/)) {\\n                            return true;\\n                        } else {\\n                            return false;\\n                        }\\n                        // !it.markLabel.match(/预|花絮/)\\n                    });\\n                    (getItem('previewSwitch', 'fold') == 'fold' ? 正片列表 : episodeInfoList).forEach(list => {\\n                        if (getItem('模式', '双边') == '列表') {\\n                            newArray.push({\\n                                title: list.title + '\\\\t' + list.checkUpTime,\\n                                img: list.imgUrl.replace('/160', '') + \\\"@Referer=\\\",\\n                                url: list.url + lazy,\\n                                desc: formatTime(list.duration) + '\\\\n' + list.checkUpTime,\\n                                col_type: 'movie_1_left_pic',\\n                                extra: {\\n                                    id: 'tx' + index\\n                                }\\n                            });\\n                        } else {\\n                            newArray.push({\\n                                title: list.checkUpTime,\\n                                img: list.imgUrl.replace('/160', '') + \\\"@Referer=\\\",\\n                                url: list.url + lazy,\\n                                desc: list.title + '\\\\t' + formatTime(list.duration),\\n                                col_type: 'movie_2',\\n                                extra: {\\n                                    id: 'tx' + index\\n                                }\\n                            });\\n                        }\\n                        index += 1;\\n                    });\\n                } else {\\n                    title = el.begin + '-' + el.end;\\n                    pageContext = el.page_context;\\n                    data = JSON.parse(fetch('https://pbaccess.video.qq.com/trpc.universal_backend_service.page_server_rpc.PageServer/GetPageData?video_appid=3000010&vplatform=2&vversion_name=8.2.96', {\\n                        body: {\\n                            \\\"page_params\\\": {\\n                                \\\"req_from\\\": \\\"web_vsite\\\",\\n                                \\\"page_id\\\": \\\"vsite_episode_list\\\",\\n                                \\\"page_type\\\": \\\"detail_operation\\\",\\n                                \\\"id_type\\\": \\\"1\\\",\\n                                \\\"page_size\\\": \\\"\\\",\\n                                \\\"cid\\\": cid,\\n                                \\\"vid\\\": \\\"\\\",\\n                                \\\"lid\\\": \\\"\\\",\\n                                \\\"page_num\\\": \\\"\\\",\\n                                \\\"page_context\\\": pageContext,\\n                                \\\"detail_page_type\\\": \\\"1\\\"\\n                            },\\n                            \\\"has_cache\\\": 1\\n                        },\\n                        headers: {\\n                            'Referer': 'https://v.qq.com/'\\n                        }\\n                    })).data.module_list_datas[0].module_datas[0];\\n                    episodeInfoList = data.item_data_lists.item_datas.filter((it) => it.item_type === \\\"1\\\");\\n                    正片列表 = episodeInfoList.filter((it) => it.item_params.is_trailer !== \\\"1\\\");\\n                    (getItem('previewSwitch', 'fold') == 'fold' ? 正片列表 : episodeInfoList).forEach(list => {\\n                        parms = list.item_params;\\n                        tag = parms.is_trailer !== \\\"1\\\" ? '正片' : '预';\\n                        if (getItem('模式', '双边') == '列表') {\\n                            newArray.push({\\n                                title: parms.play_title,\\n                                img: parms.image_url.replace('/160', '') + \\\"@Referer=\\\",\\n                                url: 'https://v.qq.com/x/cover/' + parms.cid + '/' + parms.vid + '.html' + lazy,\\n                                desc: tag + '\\\\t' + formatTime(parms.duration),\\n                                col_type: 'movie_1_left_pic',\\n                                extra: {\\n                                    id: 'tx' + index\\n                                }\\n                            });\\n                        } else {\\n                            newArray.push({\\n                                title: parms.play_title,\\n                                img: parms.image_url.replace('/160', '') + \\\"@Referer=\\\",\\n                                url: 'https://v.qq.com/x/cover/' + parms.cid + '/' + parms.vid + '.html' + lazy,\\n                                desc: tag + '\\\\t' + formatTime(parms.duration),\\n                                col_type: 'movie_2',\\n                                extra: {\\n                                    id: 'tx' + index\\n                                }\\n                            });\\n                        }\\n                        index += 1;\\n                    });\\n                }\\n                addItemAfter(getMyVar('末页'), newArray);\\n                eval(getMyVar('简插'));\\n                updateItem('op', {\\n                    title: '解析：🔘<font color=\\\"' + Color + '\\\">' + op + '</font>\\\\t\\\\t页码：<font color=\\\"' + Color + '\\\">' + title + '</font>',\\n                })\\n                putMyVar(\\\"页码\\\", title);\\n            }));\\n            // 展示剧集区域\\n            index = 1;\\n            function formatTime(seconds) {\\n                var minutes = Math.floor(seconds / 60);\\n                var remainingSeconds = seconds % 60;\\n                var formattedTime = minutes.toString().padStart(2, '0') + \\\":\\\" + remainingSeconds.toString().padStart(2, '0');\\n                return formattedTime;\\n            }\\n            try {\\n                pageContext = 'lid=&cid=' + cid + '&page_num=0&page_size=30&id_type=1&req_type=6&req_from=web_vsite&req_from_second_type=&detail_page_type=1';\\n                curtag = 0; tablen = 1;\\n                data = JSON.parse(fetch('https://pbaccess.video.qq.com/trpc.universal_backend_service.page_server_rpc.PageServer/GetPageData?video_appid=3000010&vplatform=2&vversion_name=8.2.96', {\\n                    body: {\\n                        \\\"page_params\\\": {\\n                            \\\"req_from\\\": \\\"web_vsite\\\",\\n                            \\\"page_id\\\": \\\"vsite_episode_list\\\",\\n                            \\\"page_type\\\": \\\"detail_operation\\\",\\n                            \\\"id_type\\\": \\\"1\\\",\\n                            \\\"page_size\\\": \\\"\\\",\\n                            \\\"cid\\\": cid,\\n                            \\\"vid\\\": \\\"\\\",\\n                            \\\"lid\\\": \\\"\\\",\\n                            \\\"page_num\\\": \\\"\\\",\\n                            \\\"page_context\\\": pageContext,\\n                            \\\"detail_page_type\\\": \\\"1\\\"\\n                        },\\n                        \\\"has_cache\\\": 1\\n                    },\\n                    headers: {\\n                        'Referer': 'https://v.qq.com/'\\n                    }\\n                })).data.module_list_datas[0].module_datas[0];\\n                // 打补丁，一刀切，存在特殊分季，如动漫诛仙\\n                分季列表 = data.item_data_lists.item_datas.filter((it) => it.item_type === \\\"28\\\");\\n                if (分季列表.length > 0) throw new Error('存在特殊的分季，尝试备用接口方案...');\\n                if (data.module_params.tabs == \\\"\\\") {\\n                    tabs = [];\\n                } else {\\n                    tabs = JSON.parse(data.module_params.tabs);\\n                }\\n                if (tabs.length > 0) {\\n                    d.push({\\n                        col_type: 'scroll_button',\\n                        url: 'hiker://empty',\\n                        title: '∷',\\n                        extra: {\\n                            id: '占位符',\\n                        }\\n                    })\\n                    tabs.forEach(el => {\\n                        d.push({\\n                            title: el.begin + '-' + el.end,\\n                            url: $('#noLoading##noHistory#').lazyRule((el, cid, 来源, Color) => {\\n                                eval(getMyVar('刷新选集'));\\n                                return \\\"hiker://empty\\\";\\n                            }, el, cid, 来源, Color),\\n                            col_type: 'scroll_button',\\n                            extra: {\\n                                id: el.begin + '-' + el.end\\n                            }\\n                        });\\n                    });\\n                    末页 = tabs[tabs.length - 1];\\n                    putMyVar('末页', 末页.begin + '-' + 末页.end);\\n                }\\n                episodeInfoList = data.item_data_lists.item_datas.filter((it) => it.item_type === \\\"1\\\");\\n                正片列表 = episodeInfoList.filter((it) => it.item_params.is_trailer !== \\\"1\\\");\\n                (getItem('previewSwitch', 'fold') == 'fold' ? 正片列表 : episodeInfoList).forEach(list => {\\n                    parms = list.item_params;\\n                    tag = parms.is_trailer !== \\\"1\\\" ? '正片' : '预';\\n                    if (getItem('模式', '双边') == '列表') {\\n                        d.push({\\n                            title: parms.union_title,\\n                            img: parms.image_url.replace('/160', '') + \\\"@Referer=\\\",\\n                            url: 'https://v.qq.com/x/cover/' + parms.cid + '/' + parms.vid + '.html' + lazy,\\n                            desc: tag + '\\\\t' + formatTime(parms.duration),\\n                            col_type: 'movie_1_left_pic',\\n                            extra: {\\n                                id: 'tx' + index\\n                            }\\n                        });\\n                    } else {\\n                        d.push({\\n                            title: parms.union_title,\\n                            img: parms.image_url.replace('/160', '') + \\\"@Referer=\\\",\\n                            url: 'https://v.qq.com/x/cover/' + parms.cid + '/' + parms.vid + '.html' + lazy,\\n                            desc: tag + '\\\\t' + formatTime(parms.duration),\\n                            col_type: 'movie_2',\\n                            extra: {\\n                                id: 'tx' + index\\n                            }\\n                        });\\n                    }\\n                    index += 1;\\n                });\\n            } catch (e) {\\n                log('首选接口出错：' + e);\\n                // 综艺、电影（无标题）\\n                pageContext = 'need_async=true';\\n                data = JSON.parse(fetch(buildUrl('https://pbaccess.video.qq.com/trpc.videosearch.search_cgi.http/load_playsource_list_info', {\\n                    pageNum: '0',\\n                    id: cid,\\n                    dataType: '2',\\n                    pageContext: encodeURIComponent(pageContext),\\n                    scene: '2',\\n                    platform: '2',\\n                    appId: '10718',\\n                    site: 'qq'\\n                }))).data.normalList.itemList[0].videoInfo.firstBlockSites[0];\\n                tabs = data.tabs;\\n                if (tabs.length > 0) {\\n                    d.push({\\n                        col_type: 'scroll_button',\\n                        url: 'hiker://empty',\\n                        title: '∷',\\n                        extra: {\\n                            id: '占位符',\\n                        }\\n                    })\\n                    tabs.forEach(el => {\\n                        d.push({\\n                            title: el.title,\\n                            url: $('#noLoading##noHistory#').lazyRule((el, cid, 来源, Color) => {\\n                                eval(getMyVar('刷新选集'));\\n                                return \\\"hiker://empty\\\";\\n                            }, el, cid, 来源, Color),\\n                            col_type: 'scroll_button',\\n                            extra: {\\n                                id: el.title\\n                            }\\n                        });\\n                    });\\n                    末页 = tabs[tabs.length - 1];\\n                    putMyVar('末页', 末页.title);\\n                }\\n                episodeInfoList = data.episodeInfoList;\\n                正片列表 = episodeInfoList.filter((it) => {\\n                    lable = it.markLabel;\\n                    if (lable.match(/限免/) || !lable.match(/预|花絮/)) {\\n                        return true;\\n                    } else {\\n                        return false;\\n                    }\\n                    // !it.markLabel.match(/预|花絮/)\\n                });\\n                (getItem('previewSwitch', 'fold') == 'fold' ? 正片列表 : episodeInfoList).forEach(list => {\\n                    if (getItem('模式', '双边') == '列表') {\\n                        d.push({\\n                            title: list.title,\\n                            img: list.imgUrl.replace('/160', '') + \\\"@Referer=\\\",\\n                            url: list.url + lazy,\\n                            desc: formatTime(list.duration) + '\\\\n' + list.checkUpTime,\\n                            col_type: 'movie_1_left_pic',\\n                            extra: {\\n                                id: 'tx' + index\\n                            }\\n                        });\\n                    } else {\\n                        d.push({\\n                            title: list.checkUpTime,\\n                            img: list.imgUrl.replace('/160', '') + \\\"@Referer=\\\",\\n                            url: list.url + lazy,\\n                            desc: list.title + '\\\\t' + formatTime(list.duration),\\n                            col_type: 'movie_2',\\n                            extra: {\\n                                id: 'tx' + index\\n                            }\\n                        });\\n                    }\\n                    index += 1;\\n                });\\n\\n            }\\n            setResult(d);\\n\\n            break;\\n        case 'mgtv':\\n            MY_URL = MY_PARAMS.url;\\n            html = request(MY_URL);\\n            try {\\n                vid = MY_URL.split('/')[5].split('.')[0];\\n            } catch (e) {\\n                link = html.match(/window.location = \\\"[\\\\S\\\\s]+(?=\\\" \\\\+ window.location.search)/)[0].replace('window.location = \\\"', '');\\n                vid = link.split('/')[5].split('.')[0];\\n                html = request(link);\\n            }\\n            剧集详情 = html.match(/\\\"videoinfo\\\":[\\\\S\\\\s]+(?=,\\\"fullVideoListInfo\\\")/)[0].replace('\\\"videoinfo\\\":', '');\\n            // log(剧集详情);\\n            类型 = JSON.parse(剧集详情)[0];\\n            地区 = JSON.parse(剧集详情)[1];\\n            电视台 = JSON.parse(剧集详情)[2];//电视台或导演\\n            if (JSON.parse(剧集详情)[4].match(/简介/)) {\\n                简介 = JSON.parse(剧集详情)[4];\\n            } else if (JSON.parse(剧集详情)[5].match(/简介/)) {\\n                简介 = JSON.parse(剧集详情)[5]\\n            } else {\\n                简介 = JSON.parse(剧集详情)[6];\\n            }\\n            更新状态 = JSON.parse(剧集详情).updateInfo\\n            封面 = JSON.parse(剧集详情).colImage.replace('\\\\u002F', '/').split('.jpg')[0] + \\\".jpg@Referer=\\\";\\n            setPagePicUrl(封面);\\n            // 获取首页信息（30一页，可能多于30，因为番外，size不建议修改会出错）\\n            剧集信息 = JSON.parse(fetch(`https://pcweb.api.mgtv.com/episode/list?_support=10000000&version=5.5.35&video_id=${vid}&page=1&size=30&allowedRC=1&_support=10000000`, {\\n                headers: {\\n                    'User-Agent': PC_UA\\n                },\\n                referrer: MY_URL,\\n                method: 'GET'\\n            })).data;\\n            影片名称 = 剧集信息.info.title;\\n            setPageTitle(影片名称);\\n            // 播出时间=pdfh(html,'.desc&&.t3,3&&Text');用json接口获取比较精准\\n            追更日历 = 剧集信息.info.desc;\\n            if (追更日历 == '\\\\r\\\\n' || 追更日历 == '') {\\n                追更日历 = '获取不到更新计划~';\\n            }\\n            剧集列表 = 剧集信息.list\\n            短讯 = \\\"⭐\\\" + 类型 + \\\"⭐\\\" + '\\\\t' + 地区 + '\\\\n' + 电视台 + '\\\\n' + 更新状态;\\n            // 前置参数和预处理---\\n            var Color = \\\"#19B89D\\\";\\n            // var 每页集数 = 20;芒果小程序不能修改页集数~！\\n            var 搜索模式 = '分组';\\n            var 调用名称 = '简影';\\n            putMyVar('折叠', '关');\\n            putMyVar('日历', '关');\\n\\n            putMyVar('本页长度', 剧集列表.length);\\n            putMyVar('剧集信息', 剧集信息);\\n            // 清除变量\\n            addListener('onClose', $.toString(() => {\\n                clearMyVar('分集起');\\n                clearMyVar('分集终');\\n                clearMyVar('lazy');\\n                clearMyVar('剧集信息');\\n            }))\\n            // 设置动态最新章节\\n            setLastChapterRule('js:' + $.toString(() => {\\n                eval(JSON.parse(request('hiker://page/getUpdate?rule=芒果.cy')).rule);\\n            }));\\n            // 页面内容正文---\\n            // 基本信息模块\\n            d.push({\\n                title: 短讯,\\n                desc: 简介.substring(0, 45) + '‘‘’’…<font color=\\\"#1C1C1C\\\">详情</font>',\\n                img: 封面,\\n                url: $().rule((html, 简介) => {\\n                    res = {};\\n                    var d = [];\\n                    导演 = pdfh(html, '.desc&&.t3,-2&&Text');\\n                    演员 = pdfh(html, '.desc&&.t3,-1&&Text');\\n                    d.push({\\n                        title: '影片简介：' + '\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t' + 导演 + '\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t' + 演员 + '\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t' + 简介,\\n                        col_type: 'long_text'\\n                    });\\n                    res.data = d;\\n                    setHomeResult(res);\\n                }, html, 简介),\\n                col_type: 'movie_1_vertical_pic_blur',\\n                extra: {\\n                    longClick: [{\\n                        title: '预告、花絮开关', js: $.toString(() => {\\n                            if (getItem('previewSwitch', 'fold') == 'fold') {\\n                                setItem('previewSwitch', 'open');\\n                                refreshPage(true);\\n                                return \\\"toast://预告已经切换为展示~\\\";\\n                            } else {\\n                                setItem('previewSwitch', 'fold');\\n                                refreshPage(true);\\n                                return \\\"toast://预告不再展示~\\\";\\n                            }\\n                        }),\\n                    }]\\n                }\\n            });\\n            // 追剧日历模块\\n            d.push({\\n                title: '‘‘’’<small><font><font color=\\\"#098AC1\\\">📅追剧</font>' + '</small>',\\n                url: $('#noLoading##noHistory#').lazyRule((更新状态, 追更日历) => {\\n                    if (getMyVar('日历', '关') == '开') {\\n                        deleteItem('追剧日历');\\n                        putMyVar('日历', '关');\\n                    } else {\\n                        addItemAfter('显示模式', {\\n                            title: '追剧日历：' + '\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t' + 更新状态 + '\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t' + 追更日历,\\n                            col_type: 'long_text',\\n                            extra: {\\n                                id: '追剧日历'\\n                            }\\n                        });\\n                        putMyVar('日历', '开');\\n                    }\\n                    return 'toast://已切换日历为:' + getMyVar('日历', '开')\\n                }, 更新状态, 追更日历),\\n                col_type: 'text_4'\\n            });\\n            // 豆瓣影讯模块\\n            d.push({\\n                title: '‘‘’’<small><font color=\\\"#098AC1\\\">🍃豆瓣</font></small>',\\n                url: 'hiker://search?s=' + 影片名称 + '&rule=青豆',\\n                col_type: 'text_4'\\n            });\\n            // 精彩继续模块（周边+系列）\\n            d.push({\\n                title: '‘‘’’<small><font color=\\\"#098AC1\\\">ღ精彩</font></small>',\\n                url: $('#noLoading##noHistory#').lazyRule(() => {\\n                    周边数组 = [\\\"🤣花絮\\\", \\\"🏷️系列\\\"];\\n                    return $(周边数组, 1, 'ღ精彩继续').select(() => {\\n                        剧集信息 = JSON.parse(getMyVar('剧集信息'));\\n                        lazy = getMyVar('lazy');\\n                        if (input === '🤣花絮') {\\n                            return $().rule((剧集信息, lazy) => {\\n                                res = {};\\n                                d = [];\\n                                setPageTitle('🤣花絮列表');\\n                                花絮列表 = 剧集信息.short;\\n                                if (花絮列表 == '') {\\n                                    d.push({\\n                                        title: '‘‘’’<big><font color=\\\"red\\\">⭐该影片没有相关花絮哦~⭐</font></big>',\\n                                        url: 'toast://都没有，，你点啥呀~',\\n                                        desc: '敬请期待~',\\n                                        col_type: 'text_center_1'\\n                                    });\\n                                }\\n                                花絮列表.forEach(list => {\\n                                    d.push({\\n                                        title: list.t3,\\n                                        img: list.img.split('.jpg')[0] + \\\".jpg@Referer=\\\",\\n                                        url: 'https://www.mgtv.com' + list.url + lazy,\\n                                        desc: list.t2,\\n                                        col_type: 'movie_1_left_pic'\\n                                    });\\n                                });\\n                                res.data = d;\\n                                setHomeResult(res);\\n                            }, 剧集信息, lazy)\\n                        } else if (input === '🏷️系列') {\\n                            return $().rule((剧集信息) => {\\n                                res = {};\\n                                d = [];\\n                                setPageTitle('🏷️相关系列');\\n                                系列列表 = 剧集信息.series;\\n                                if (系列列表 == '') {\\n                                    d.push({\\n                                        title: '‘‘’’<big><font color=\\\"red\\\">⭐芒果表示该影片暂无系列数据~⭐</font></big>',\\n                                        url: 'toast://都没有，，你点啥呀~',\\n                                        desc: '敬请期待~',\\n                                        col_type: 'text_center_1'\\n                                    });\\n                                } else {\\n                                    系列列表.forEach(list => {\\n                                        d.push({\\n                                            title: '‘‘’’<big><font color=\\\"blue\\\">' + list.t1 + '</font></big>',\\n                                            img: list.img.split('.jpg')[0] + \\\".jpg@Referer=\\\",\\n                                            url: $('#noLoading##noHistory#').lazyRule((link) => {\\n                                                return $('hiker://empty#immersiveTheme#').rule((link) => {\\n                                                    html = request(link)\\n                                                    link = html.match(/window.location = \\\"[\\\\S\\\\s]+(?=\\\" \\\\+ window.location.search)/)[0].replace('window.location = \\\"', '');\\n                                                    MY_URL = link + '#immersiveTheme#';\\n                                                    eval(JSON.parse(request('hiker://page/mgtv?rule=芒果.cy')).rule);\\n                                                }, link)\\n                                            }, list.url),\\n                                            desc: \\\"⭐播放量⭐\\\\t\\\" + list.playcnt,\\n                                            col_type: 'movie_1_left_pic'\\n                                        });\\n                                    });\\n                                }\\n                                res.data = d;\\n                                setHomeResult(res);\\n                            }, 剧集信息)\\n                        }\\n                    })\\n                }),\\n                col_type: 'text_4',\\n                extra: {\\n                    id: '精彩继续'\\n                }\\n            });\\n            // 显示模式更改模块\\n            d.push({\\n                title: '‘‘’’<small><font color=\\\"#098AC1\\\">🔃' + getItem('模式', '双边') + '</font></small>',\\n                url: $('#noLoading##noHistory#').lazyRule(() => {\\n                    if (getItem('模式', '双边') == '列表') {\\n                        for (let index = 1; index <= getMyVar('本页长度'); index++) {\\n                            updateItem('mgtv' + index, {\\n                                col_type: 'movie_2',\\n                            });\\n                        }\\n                        setItem('模式', '双边')\\n                    } else {\\n                        for (let index = 1; index <= getMyVar('本页长度'); index++) {\\n                            updateItem('mgtv' + index, {\\n                                col_type: 'movie_1_left_pic',\\n                            });\\n                        }\\n                        setItem('模式', '列表')\\n                    }\\n                    updateItem('显示模式', {\\n                        title: '‘‘’’<small><font color=\\\"#098AC1\\\">🔃' + getItem('模式', '双边') + '</font></small>',\\n                    });\\n                    return 'toast://已切换模式为:' + getItem('模式', '双边')\\n                }),\\n                col_type: 'text_4',\\n                extra: {\\n                    id: '显示模式'\\n                }\\n            });\\n            // 选插模块——局部刷新版\\n            来源 = 'mg';\\n            eval(getMyVar('简插'));\\n            d.push({\\n                title: '解析：🔘<font color=\\\"' + Color + '\\\">' + op + '</font>\\\\t\\\\t页码：<font color=\\\"' + Color + '\\\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\\n                url: $('#noLoading##noHistory#').lazyRule((json, 来源, Color, op, 影片名称, 搜索模式, 调用名称) => {\\n                    eval(getMyVar('简插'));\\n                    return $(eval(getMyVar('解析数组')), 3).select((json, 来源, Color, op, 影片名称, 搜索模式, 调用名称) => {\\n                        setFile = getMyVar('setFile');\\n                        input = input.replace(/👉/g, '');\\n                        if (input === '✍️辅助') {\\n                            return $().rule(() => {\\n                                eval(JSON.parse(request('hiker://page/home?rule=配置助手')).rule);\\n                            })\\n                        } else if (input === '📦️魔断') {\\n                            return \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=编辑#noHistory#\\\";\\n                        } else if (input === '🔍搜索') {\\n                            if (搜索模式 == '分组') {\\n                                return \\\"hiker://search?s=\\\" + 影片名称 + \\\"&group=\\\" + 调用名称;\\n                            } else {\\n                                return \\\"hiker://search?s=\\\" + 影片名称 + \\\"&rule=\\\" + 调用名称;\\n                            }\\n                        }\\n                        // 原先的配置\\n                        originSettings = JSON.stringify(json.settings);\\n                        // 修改配置\\n                        eval('json.settings.' + 来源 + '=input;');\\n                        setFile = setFile.replace(originSettings, JSON.stringify(json.settings));\\n                        saveFile('hiker://files/rules/DuanNian/MyParse.json', setFile);\\n                        // 刷新元素\\n                        eval(getMyVar('简插'));\\n                        updateItem('op', {\\n                            title: '解析：🔘<font color=\\\"' + Color + '\\\">' + op + '</font>\\\\t\\\\t页码：<font color=\\\"' + Color + '\\\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\\n                        });\\n                        return \\\"toast://切换解析口为:\\\" + input;\\n                    }, json, 来源, Color, op, 影片名称, 搜索模式, 调用名称)\\n                }, json, 来源, Color, op, 影片名称, 搜索模式, 调用名称),\\n                img: 'hiker://files/rules/cy/tubiao/mgtv.svg',\\n                col_type: \\\"avatar\\\",\\n                extra: {\\n                    id: 'op'\\n                }\\n            });\\n            // 滚动剧集条栏\\n            剧集长度 = 剧集信息.count;\\n            if (剧集长度 > 30) {\\n                putMyVar('刷新选集', $.toString(() => {\\n                    putMyVar('分集起', start);\\n                    putMyVar('分集终', end);\\n                    eval(getMyVar('简插'));\\n                    updateItem('op', {\\n                        title: '解析：🔘<font color=\\\"' + Color + '\\\">' + op + '</font>\\\\t\\\\t页码：<font color=\\\"' + Color + '\\\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\\n                    })\\n                    // 删除\\n                    for (let i = 1; i <= getMyVar('本页长度'); i++) {\\n                        deleteItem('mgtv' + i);\\n                    }\\n                    // 添加\\n                    lazy = getMyVar('lazy');\\n                    剧集信息 = JSON.parse(fetch(`https://pcweb.api.mgtv.com/episode/list?_support=10000000&version=5.5.35&video_id=${vid}&page=${page}&size=30&allowedRC=1&_support=10000000`, {\\n                        headers: {\\n                            'User-Agent': PC_UA\\n                        },\\n                        referrer: MY_URL,\\n                        method: 'GET'\\n                    })).data;\\n                    剧集列表 = 剧集信息.list\\n                    putMyVar('本页长度', 剧集列表.length);\\n                    newArray = [];\\n                    index = 1;\\n                    剧集列表.forEach(list => {\\n                        // 可能为空数组\\n                        try {\\n                            状态或集数标识 = list.corner[0].font;\\n                        } catch (e) {\\n                            状态或集数标识d = '';\\n                        }\\n                        try {\\n                            集数标识 = list.corner[1].font\\n                        } catch (e) {\\n                            集数标识 = '';\\n                        }\\n                        if (getItem('previewSwitch', 'fold') == 'fold' && 状态或集数标识.match(/预|花絮/)) {\\n                            return;\\n                        } else {\\n                            // 考虑一些彩蛋章是没有集数的情况，取list.t1，同时考虑到电影的集数标识和time的值一样\\n                            if (集数标识 == '' || 集数标识 == list.time) {\\n                                if (getItem('模式', '双边') == '列表') {\\n                                    newArray.push({\\n                                        title: list.t2,\\n                                        img: list.img.split('.jpg')[0] + \\\".jpg@Referer=\\\",\\n                                        url: 'https://www.mgtv.com' + list.url + lazy,\\n                                        desc: 状态或集数标识 + '\\\\t' + list.t1 + '\\\\t' + list.time,\\n                                        col_type: 'movie_1_left_pic',\\n                                        extra: {\\n                                            id: 'mgtv' + index\\n                                        }\\n                                    });\\n                                } else {\\n                                    newArray.push({\\n                                        title: list.t2,\\n                                        img: list.img.split('.jpg')[0] + \\\".jpg@Referer=\\\",\\n                                        url: 'https://www.mgtv.com' + list.url + lazy,\\n                                        desc: 状态或集数标识 + '\\\\t' + list.t1 + '\\\\t' + list.time,\\n                                        col_type: 'movie_2',\\n                                        extra: {\\n                                            id: 'mgtv' + index\\n                                        }\\n                                    });\\n                                }\\n                            } else {\\n                                if (getItem('模式', '双边') == '列表') {\\n                                    newArray.push({\\n                                        title: list.t2,\\n                                        img: list.img.split('.jpg')[0] + \\\".jpg@Referer=\\\",\\n                                        url: 'https://www.mgtv.com' + list.url + lazy,\\n                                        desc: 状态或集数标识 + '\\\\t' + 集数标识 + '\\\\t' + list.time,\\n                                        col_type: 'movie_1_left_pic',\\n                                        extra: {\\n                                            id: 'mgtv' + index\\n                                        }\\n                                    });\\n                                } else {\\n                                    newArray.push({\\n                                        title: list.t2,\\n                                        img: list.img.split('.jpg')[0] + \\\".jpg@Referer=\\\",\\n                                        url: 'https://www.mgtv.com' + list.url + lazy,\\n                                        desc: 状态或集数标识 + '\\\\t' + 集数标识 + '\\\\t' + list.time,\\n                                        col_type: 'movie_2',\\n                                        extra: {\\n                                            id: 'mgtv' + index\\n                                        }\\n                                    });\\n                                }\\n                            }\\n                            index += 1;\\n                        }\\n                    });\\n                    addItemAfter(getMyVar('末页'), newArray);\\n                    // putMyVar('显示的剧集列表', 显示的剧集列表);\\n                }));\\n                d.push({\\n                    col_type: 'scroll_button',\\n                    url: 'hiker://empty',\\n                    title: '∷',\\n                    extra: {\\n                        id: '占位符',\\n                    }\\n                })\\n                putMyVar('分集起', 1);\\n                putMyVar('分集终', 30);\\n                总页数 = 剧集信息.total_page;\\n                start = 1;\\n                end = 30;\\n                for (let page = 1; page <= 总页数; page++) {\\n                    if (end > 剧集长度) {\\n                        end = 剧集长度;\\n                    }\\n                    d.push({\\n                        title: start + '-' + end,\\n                        url: $('#noLoading##noHistory##noHistory#').lazyRule((start, end, Color, 来源, page, vid) => {\\n                            eval(getMyVar('刷新选集'));\\n                            return \\\"hiker://empty\\\";\\n                        }, start, end, Color, 来源, page, vid),\\n                        col_type: 'scroll_button',\\n                        extra: {\\n                            id: start + '-' + end\\n                        }\\n                    });\\n                    if (end < 剧集长度) {\\n                        start += 30;\\n                        end += 30;\\n                    }\\n                }\\n                // 记录末页的id\\n                putMyVar('末页', start + '-' + end);\\n            } else {\\n                putMyVar('分集起', 1);\\n                putMyVar('分集终', 剧集长度);\\n            }\\n            // 剧集展示\\n            index = 1;\\n            剧集列表.forEach(list => {\\n                // 可能为空数组\\n                try {\\n                    状态或集数标识 = list.corner[0].font;\\n                } catch (e) {\\n                    状态或集数标识d = '';\\n                }\\n                try {\\n                    集数标识 = list.corner[1].font\\n                } catch (e) {\\n                    集数标识 = '';\\n                }\\n                if (getItem('previewSwitch', 'fold') == 'fold' && 状态或集数标识.match(/预|花絮/)) {\\n                    return;\\n                } else {\\n                    // 考虑一些彩蛋章是没有集数的情况，取list.t1，同时考虑到电影的集数标识和time的值一样\\n                    if (集数标识 == '' || 集数标识 == list.time) {\\n                        if (getItem('模式', '双边') == '列表') {\\n                            d.push({\\n                                title: list.t2,\\n                                img: list.img.split('.jpg')[0] + \\\".jpg@Referer=\\\",\\n                                url: 'https://www.mgtv.com' + list.url + lazy,\\n                                desc: 状态或集数标识 + '\\\\t' + list.t1 + '\\\\t' + list.time,\\n                                col_type: 'movie_1_left_pic',\\n                                extra: {\\n                                    id: 'mgtv' + index\\n                                }\\n                            });\\n                        } else {\\n                            d.push({\\n                                title: list.t2,\\n                                img: list.img.split('.jpg')[0] + \\\".jpg@Referer=\\\",\\n                                url: 'https://www.mgtv.com' + list.url + lazy,\\n                                desc: 状态或集数标识 + '\\\\t' + list.t1 + '\\\\t' + list.time,\\n                                col_type: 'movie_2',\\n                                extra: {\\n                                    id: 'mgtv' + index\\n                                }\\n                            });\\n                        }\\n                    } else {\\n                        if (getItem('模式', '双边') == '列表') {\\n                            d.push({\\n                                title: list.t2,\\n                                img: list.img.split('.jpg')[0] + \\\".jpg@Referer=\\\",\\n                                url: 'https://www.mgtv.com' + list.url + lazy,\\n                                desc: 状态或集数标识 + '\\\\t' + 集数标识 + '\\\\t' + list.time,\\n                                col_type: 'movie_1_left_pic',\\n                                extra: {\\n                                    id: 'mgtv' + index\\n                                }\\n                            });\\n                        } else {\\n                            d.push({\\n                                title: list.t2,\\n                                img: list.img.split('.jpg')[0] + \\\".jpg@Referer=\\\",\\n                                url: 'https://www.mgtv.com' + list.url + lazy,\\n                                desc: 状态或集数标识 + '\\\\t' + 集数标识 + '\\\\t' + list.time,\\n                                col_type: 'movie_2',\\n                                extra: {\\n                                    id: 'mgtv' + index\\n                                }\\n                            });\\n                        }\\n                    }\\n                    index += 1;\\n                }\\n            });\\n            setResult(d);\\n\\n            break;\\n        case 'bili':\\n            if (MY_PARAMS.season_id) {\\n                season_id = MY_PARAMS.season_id + \\\"\\\";\\n                Data = JSON.parse(fetch('https://api.bilibili.com/pgc/view/web/season?season_id=' + season_id)).result;\\n            } else {\\n                Data = JSON.parse(fetch('https://api.bilibili.com/pgc/view/web/season?ep_id=' + MY_PARAMS.ep_id)).result;\\n            }\\n            if (!Data.cover.match(/https/)) {\\n                封面 = Data.cover.replace('http', 'https') + \\\"@Referer=\\\";\\n            } else {\\n                封面 = Data.cover + \\\"@Referer=\\\";\\n            }\\n            try {\\n                地区 = Data.areas[0].name;\\n            } catch (e) {\\n                地区 = '地区暂无';\\n            }\\n            简介 = Data.evaluate;\\n            // 正片\\n            类型 = Data.positive.title;\\n            上映时间 = Data.publish.pub_time;\\n            try {\\n                得分 = Data.rating.score;\\n            } catch (e) {\\n                得分 = '暂无得';\\n            }\\n            追剧日历 = Data.new_ep.desc;\\n            更新进度 = Data.new_ep.title;\\n            影片名称 = Data.title;\\n            第二标题 = Data.share_sub_title;\\n            剧集列表 = Data.episodes;\\n            短讯 = \\\"⭐\\\" + 类型 + \\\"⭐\\\" + 第二标题 + '\\\\n' + 地区 + '-' + 得分 + '分\\\\n-' + 上映时间 + '-';\\n            // 重定义二级页面数据\\n            setPageTitle(影片名称);\\n            setPagePicUrl(封面);\\n            // 前置参数和预处理---\\n            imgLink = storage0.getMyVar('图标');\\n            var Color = \\\"#19B89D\\\";\\n            var 每页集数 = 30;\\n            var 搜索模式 = '分组';\\n            var 调用名称 = '简影';\\n            putMyVar('折叠', '关');\\n            putMyVar('日历', '关');\\n            putMyVar('Data', Data);\\n\\n            // 清除变量\\n            addListener('onClose', $.toString(() => {\\n                clearMyVar('分集起');\\n                clearMyVar('分集终');\\n                clearMyVar('折叠');\\n                clearMyVar('日历');\\n                clearMyVar('Data');\\n                clearMyVar('lazy');\\n                clearMyVar('剧集列表');\\n            }))\\n            // 设置动态最新章节\\n            setLastChapterRule('js:' + $.toString(() => {\\n                eval(JSON.parse(request('hiker://page/getUpdate?rule=哔哩.cy')).rule);\\n            }));\\n            // 页面内容正文---\\n            // 基本信息模块\\n            d.push({\\n                title: 短讯,\\n                desc: 简介 == '' ? '暂无简介' : 简介.substring(0, 45) + '‘‘’’…<font color=\\\"#1C1C1C\\\">详情</font>',\\n                img: 封面,\\n                url: $().rule((简介) => {\\n                    res = {};\\n                    var d = [];\\n                    d.push({\\n                        title: '影片简介：' + '\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t' + 简介,\\n                        col_type: 'long_text'\\n                    });\\n                    res.data = d;\\n                    setHomeResult(res);\\n                }, 简介),\\n                col_type: 'movie_1_vertical_pic_blur',\\n            });\\n            // 更新日历模块\\n            d.push({\\n                title: '日历',\\n                img: imgLink.日历,\\n                url: $('#noLoading#').lazyRule((追剧日历, 更新进度) => {\\n                    if (getMyVar('日历', '关') == '开') {\\n                        deleteItem('追剧日历');\\n                        putMyVar('日历', '关');\\n                    } else {\\n                        addItemAfter('显示模式', {\\n                            title: 追剧日历.match(/完结|期待/) ? 追剧日历 : 追剧日历 + '<br><font color=\\\"red\\\">更新至' + (更新进度.match(/[\\\\u4e00-\\\\u9fa5]/) ? 更新进度 : ('第' + (更新进度 == '' ? 0 : 更新进度) + '话')) + '</font>',\\n                            col_type: \\\"rich_text\\\",\\n                            extra: {\\n                                id: '追剧日历'\\n                            }\\n                        });\\n                        putMyVar('日历', '开');\\n                    }\\n                    return 'toast://已切换日历为:' + getMyVar('日历', '开')\\n                }, 追剧日历, 更新进度),\\n                col_type: 'icon_5'\\n            });\\n            // 订阅模块\\n            d.push({\\n                title: '订阅',\\n                img: imgLink.订阅,\\n                url: $('#noLoading#').lazyRule(() => {\\n                    selectionList = ['订阅', '取消订阅'];\\n                    return $(selectionList, 2).select(() => {\\n                        season_id = JSON.parse(getMyVar('Data')).season_id;\\n                        if (input == '订阅') {\\n                            res = $.require(\\\"hiker://page/api?rule=哔哩.cy\\\").subscribeFilm(season_id);\\n                        } else {\\n                            res = $.require(\\\"hiker://page/api?rule=哔哩.cy\\\").cancelSubscribeFilm(season_id);\\n                        }\\n                        return 'toast://' + res;\\n                    });\\n                }),\\n                col_type: 'icon_5'\\n            });\\n            // 评论模块\\n            d.push({\\n                title: '评论',\\n                img: imgLink.查看评论,\\n                url: $('#noLoading#').lazyRule(() => {\\n                    return $('hiker://empty').rule(() => {\\n                        var d = [];\\n                        List = JSON.parse(getMyVar('Data')).episodes;\\n                        List.forEach(item => {\\n                            d.push({\\n                                title: item.share_copy + '<font color=\\\"#33cccc\\\">\\t➮</font>',\\n                                img: item.cover + '@Referer=',\\n                                url: 'hiker://page/Comments?p=fypage&rule=哔哩.cy',\\n                                col_type: \\\"avatar\\\",\\n                                extra: {\\n                                    \\\"id\\\": item.aid,\\n                                    \\\"type\\\": 1\\n                                }\\n                            });\\n                        });\\n                        setResult(d);\\n                    });\\n                }),\\n                col_type: 'icon_5'\\n            });\\n\\n            // 精彩继续模块\\n            d.push({\\n                title: '周边',\\n                img: imgLink.周边,\\n                url: $('#noLoading#').lazyRule(() => {\\n                    Data = JSON.parse(getMyVar('Data'));\\n                    // 有些没有直接去掉懒得处理~\\n                    if (Data.section) {\\n                        周边数组 = [\\\"🏷️相关系列\\\", \\\"🤣PV&花絮\\\", \\\"🍉竖屏也精彩\\\", \\\"🔥精彩二创\\\"];\\n                    } else {\\n                        周边数组 = [\\\"🏷️相关系列\\\"];\\n                    }\\n                    // 周边数组 = [\\\"🏷️相关系列\\\", \\\"🤣PV&花絮\\\", \\\"竖屏也精彩\\\", \\\"精彩二创\\\"];\\n                    return $(周边数组, 1, 'ღ精彩继续').select(() => {\\n                        Data = JSON.parse(getMyVar('Data'));\\n                        lazy = getMyVar('lazy');\\n                        if (input === '🏷️相关系列') {\\n                            系列名称 = Data.season_title\\n                            系列数据 = Data.seasons;\\n                            return $().rule((系列数据) => {\\n                                d = [];\\n                                setPageTitle('🏷️相关系列');\\n                                if (系列数据 == [] || 系列数据 == '') {\\n                                    d.push({\\n                                        title: '‘‘’’<big><font color=\\\"red\\\">⭐该影片没有相关系列哦~⭐</font></big>',\\n                                        url: 'toast://都没有，，你点啥呀~',\\n                                        desc: '敬请期待~',\\n                                        col_type: 'text_center_1'\\n                                    });\\n                                }\\n                                系列数据.forEach(list => {\\n                                    d.push({\\n                                        title: list.season_title,\\n                                        img: (list.horizontal_cover_1610 == '' ? (list.horizontal_cover_169 == '' ? list.cover : list.horizontal_cover_169) : list.horizontal_cover_1610) + \\\"@Referer=\\\",\\n                                        url: 'hiker://page/filmerji#immersiveTheme#',\\n                                        desc: list.new_ep.index_show,\\n                                        col_type: 'movie_1_left_pic',\\n                                        extra: {\\n                                            \\\"ep_id\\\": list.new_ep.id\\n                                        }\\n                                    });\\n                                });\\n                                setHomeResult(d);\\n                            }, 系列数据)\\n                        } else if (input === '🤣PV&花絮') {\\n                            try {\\n                                PV和花絮数据 = Data.section[0].episodes;\\n                                return $().rule((PV和花絮数据, lazy) => {\\n                                    d = [];\\n                                    setPageTitle('🤣PV&花絮');\\n                                    if (PV和花絮数据 == [] || PV和花絮数据 == '') {\\n                                        d.push({\\n                                            title: '‘‘’’<big><font color=\\\"red\\\">⭐该影片/视频没有相关PV和花絮哦~⭐</font></big>',\\n                                            url: 'toast://都没有，，你点啥呀~',\\n                                            desc: '敬请期待~',\\n                                            col_type: 'text_center_1'\\n                                        });\\n                                    }\\n                                    PV和花絮数据.forEach(list => {\\n                                        d.push({\\n                                            title: list.title,\\n                                            img: list.cover + \\\"@Referer=\\\",\\n                                            url: list.link + lazy,\\n                                            desc: list.subtitle + '\\\\n' + list.long_title,\\n                                            col_type: 'movie_1_left_pic',\\n                                            extra: {\\n                                                id: list.link,\\n                                                aid: list.aid,\\n                                                bvid: list.bvid,\\n                                                cid: list.cid,\\n                                                badge: list.badge\\n                                            }\\n                                        });\\n                                    });\\n                                    setHomeResult(d);\\n                                }, PV和花絮数据, lazy)\\n                            } catch (e) {\\n                                return 'toast://没有数据哦~'\\n                            }\\n                        } else if (input === '🍉竖屏也精彩') {\\n                            try {\\n                                竖屏也精彩数据 = Data.section[1].episodes;\\n                                return $().rule((竖屏也精彩数据, lazy) => {\\n                                    d = [];\\n                                    setPageTitle('🍉竖屏也精彩');\\n                                    if (竖屏也精彩数据 == [] || 竖屏也精彩数据 == '') {\\n                                        d.push({\\n                                            title: '‘‘’’<big><font color=\\\"red\\\">⭐该影片/视频没有相关竖屏短视频哦~⭐</font></big>',\\n                                            url: 'toast://都没有，，你点啥呀~',\\n                                            desc: '敬请期待~',\\n                                            col_type: 'text_center_1'\\n                                        });\\n                                    }\\n                                    竖屏也精彩数据.forEach(list => {\\n                                        d.push({\\n                                            title: list.title,\\n                                            img: list.cover + \\\"@Referer=\\\",\\n                                            url: list.link + lazy,\\n                                            desc: list.subtitle + '\\\\n' + list.long_title,\\n                                            col_type: 'movie_1_left_pic',\\n                                            extra: {\\n                                                id: list.link,\\n                                                aid: list.aid,\\n                                                bvid: list.bvid,\\n                                                cid: list.cid,\\n                                                badge: list.badge\\n                                            }\\n                                        });\\n                                    });\\n                                    setHomeResult(d);\\n                                }, 竖屏也精彩数据, lazy)\\n                            } catch (e) {\\n                                return 'toast://没有数据哦~'\\n                            }\\n                        } else if (input === '🔥精彩二创') {\\n                            try {\\n                                精彩二创数据 = Data.section[2].episodes;\\n                                return $().rule((精彩二创数据, lazy) => {\\n                                    d = [];\\n                                    setPageTitle('🔥精彩二创');\\n                                    if (精彩二创数据 == [] || 精彩二创数据 == '') {\\n                                        d.push({\\n                                            title: '‘‘’’<big><font color=\\\"red\\\">⭐该影片/视频没有二创作品哦~⭐</font></big>',\\n                                            url: 'toast://都没有，，你点啥呀~',\\n                                            desc: '敬请期待~',\\n                                            col_type: 'text_center_1'\\n                                        });\\n                                    }\\n                                    精彩二创数据.forEach(list => {\\n                                        // 针对部分参数缺失的情况如凡人修仙传写的，，\\n                                        if (list.aid == 0 || list.cid == 0) {\\n                                            viedeoData = JSON.parse(fetch(\\\"https://api.bilibili.com/x/web-interface/view?aid=\\\" + list.link.split('av')[1], {\\n                                                headers: {\\n                                                    \\\"User-Agent\\\": PC_UA,\\n                                                    \\\"Referer\\\": 'https://www.bilibili.com/'\\n                                                },\\n                                                method: \\\"GET\\\"\\n                                            })).data;\\n                                            aid = viedeoData.aid;\\n                                            bvid = viedeoData.bvid;\\n                                            cid = viedeoData.cid;\\n                                        } else {\\n                                            aid = list.aid;\\n                                            bvid = list.bvid;\\n                                            cid = list.cid;\\n                                        }\\n                                        d.push({\\n                                            title: list.title,\\n                                            img: list.cover + \\\"@Referer=\\\",\\n                                            url: list.link + lazy,\\n                                            desc: list.subtitle + '\\\\n' + list.long_title,\\n                                            col_type: 'movie_1_left_pic',\\n                                            extra: {\\n                                                id: list.link,\\n                                                aid: aid,\\n                                                bvid: bvid,\\n                                                cid: cid,\\n                                                badge: list.badge\\n                                            }\\n                                        });\\n                                    });\\n                                    setHomeResult(d);\\n                                }, 精彩二创数据, lazy)\\n                            } catch (e) {\\n                                return 'toast://没有数据哦~'\\n                            }\\n                        }\\n                        return \\\"toast://正在进入\\\" + input + \\\"界面...\\\";\\n                    })\\n                }),\\n                col_type: \\\"icon_5\\\",\\n                extra: {\\n                    id: '精彩继续'\\n                }\\n            });\\n            // 显示模式更改模块\\n            d.push({\\n                title: getItem('模式', '双边'),\\n                img: getItem('模式', '双边') == '列表' ? imgLink.列表 : imgLink.双边,\\n                url: $('#noLoading#').lazyRule(() => {\\n                    显示的剧集列表 = JSON.parse(getMyVar('显示的剧集列表'));\\n                    if (getItem('模式', '双边') == '列表') {\\n                        显示的剧集列表.forEach(el => {\\n                            updateItem(el.link, {\\n                                col_type: 'movie_2',\\n                            });\\n                        });\\n                        setItem('模式', '双边')\\n                    } else {\\n                        显示的剧集列表.forEach(el => {\\n                            updateItem(el.link, {\\n                                col_type: 'movie_1_left_pic',\\n                            });\\n                        });\\n                        setItem('模式', '列表')\\n                    }\\n                    imgLink = storage0.getMyVar('图标');\\n                    updateItem('显示模式', {\\n                        title: getItem('模式', '双边'),\\n                        img: getItem('模式', '双边') == '列表' ? imgLink.列表 : imgLink.双边,\\n                    });\\n                    return 'toast://已切换模式为:' + getItem('模式', '双边')\\n                }),\\n                col_type: 'icon_5',\\n                extra: {\\n                    id: '显示模式'\\n                }\\n            }, {\\n                col_type: 'line_blank',\\n            });\\n            // 选插模块——局部刷新版\\n            来源 = 'bl';\\n            eval(getMyVar('简插'));\\n            d.push({\\n                title: '解析：🔘<font color=\\\"' + Color + '\\\">' + op + '</font>\\\\t\\\\t页码：<font color=\\\"' + Color + '\\\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\\n                url: $('#noLoading#').lazyRule((json, 来源, Color, op, 影片名称, 搜索模式, 调用名称) => {\\n                    eval(getMyVar('简插'));\\n                    return $(eval(getMyVar('解析数组')), 3).select((json, 来源, Color, op, 影片名称, 搜索模式, 调用名称) => {\\n                        setFile = getMyVar('setFile');\\n                        input = input.replace(/👉/g, '');\\n                        if (input === '✍️辅助') {\\n                            return $().rule(() => {\\n                                eval(JSON.parse(request('hiker://page/home?rule=配置助手')).rule);\\n                            })\\n                        } else if (input === '📦️魔断') {\\n                            return \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=编辑#noHistory#\\\";\\n                        } else if (input === '🔍搜索') {\\n                            if (搜索模式 == '分组') {\\n                                return \\\"hiker://search?s=\\\" + 影片名称 + \\\"&group=\\\" + 调用名称;\\n                            } else {\\n                                return \\\"hiker://search?s=\\\" + 影片名称 + \\\"&rule=\\\" + 调用名称;\\n                            }\\n                        }\\n                        // 原先的配置\\n                        originSettings = JSON.stringify(json.settings);\\n                        // 修改配置\\n                        eval('json.settings.' + 来源 + '=input;');\\n                        setFile = setFile.replace(originSettings, JSON.stringify(json.settings));\\n                        saveFile('hiker://files/rules/DuanNian/MyParse.json', setFile);\\n                        // 刷新元素\\n                        eval(getMyVar('简插'));\\n                        updateItem('op', {\\n                            title: '解析：🔘<font color=\\\"' + Color + '\\\">' + op + '</font>\\\\t\\\\t页码：<font color=\\\"' + Color + '\\\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\\n                        });\\n                        return \\\"toast://切换解析口为:\\\" + input;\\n                    }, json, 来源, Color, op, 影片名称, 搜索模式, 调用名称)\\n                }, json, 来源, Color, op, 影片名称, 搜索模式, 调用名称),\\n                img: 'hiker://files/rules/cy/tubiao/bilibili.svg',\\n                col_type: \\\"avatar\\\",\\n                extra: {\\n                    id: 'op'\\n                }\\n            });\\n            // 滚动剧集条栏\\n            剧集长度 = 剧集列表.length;\\n            if (剧集长度 > 每页集数) {\\n                putMyVar('刷新选集', $.toString(() => {\\n                    putMyVar('分集起', start);\\n                    putMyVar('分集终', end);\\n                    eval(getMyVar('简插'));\\n                    updateItem('op', {\\n                        title: '解析：🔘<font color=\\\"' + Color + '\\\">' + op + '</font>\\\\t\\\\t页码：<font color=\\\"' + Color + '\\\">' + ((getMyVar('分集起', '首页') == '首页') ? '首页' : (getMyVar('分集起') + '-' + getMyVar('分集终'))) + '</font>',\\n                    })\\n                    // 删除\\n                    显示的剧集列表 = JSON.parse(getMyVar('显示的剧集列表'));\\n                    显示的剧集列表.forEach(el => {\\n                        deleteItem(el.link);\\n                    });\\n                    // 添加\\n                    lazy = getMyVar('lazy');\\n                    剧集列表 = JSON.parse(getMyVar('剧集列表'));\\n                    显示的剧集列表 = 剧集列表.slice(start - 1, end);\\n                    newArray = [];\\n                    index = 1;\\n                    显示的剧集列表.forEach(list => {\\n                        if (getItem('模式', '双边') == '列表') {\\n                            newArray.push({\\n                                title: list.long_title,\\n                                img: list.cover + \\\"@Referer=\\\",\\n                                url: list.link + lazy,\\n                                desc: list.title.match(/[0-9]/) ? (list.badge + '第' + list.title + '话') : list.title,\\n                                col_type: 'movie_1_left_pic',\\n                                extra: {\\n                                    id: list.link,\\n                                    aid: list.aid,\\n                                    bvid: list.bvid,\\n                                    cid: list.cid,\\n                                    badge: list.badge\\n                                }\\n                            });\\n                        } else {\\n                            newArray.push({\\n                                title: list.long_title,\\n                                img: list.cover + \\\"@Referer=\\\",\\n                                url: list.link + lazy,\\n                                desc: list.title.match(/[0-9]/) ? (list.badge + '第' + list.title + '话') : list.title,\\n                                col_type: 'movie_2',\\n                                extra: {\\n                                    id: list.link,\\n                                    aid: list.aid,\\n                                    bvid: list.bvid,\\n                                    cid: list.cid,\\n                                    badge: list.badge\\n                                }\\n                            });\\n                        }\\n                        index += 1;\\n                    });\\n                    addItemAfter(getMyVar('末页'), newArray);\\n                    putMyVar('显示的剧集列表', 显示的剧集列表);\\n                }));\\n                d.push({\\n                    col_type: 'scroll_button',\\n                    url: 'hiker://empty',\\n                    title: '∷',\\n                    extra: {\\n                        id: '占位符',\\n                    }\\n                })\\n                putMyVar('分集起', 1);\\n                putMyVar('分集终', 每页集数);\\n                putMyVar('剧集列表', 剧集列表);\\n                总页数 = Math.ceil(剧集长度 / 每页集数);\\n                start = 1;\\n                end = 每页集数;\\n                for (let page = 1; page <= 总页数; page++) {\\n                    if (end > 剧集长度) {\\n                        end = 剧集长度;\\n                    }\\n                    d.push({\\n                        title: start + '-' + end,\\n                        url: $('#noLoading##noHistory#').lazyRule((start, end, Color, 来源) => {\\n                            eval(getMyVar('刷新选集'));\\n                            return \\\"hiker://empty\\\";\\n                        }, start, end, Color, 来源),\\n                        col_type: 'scroll_button',\\n                        extra: {\\n                            id: start + '-' + end\\n                        }\\n                    });\\n                    if (end < 剧集长度) {\\n                        start += 每页集数;\\n                        end += 每页集数;\\n                    }\\n                }\\n                // 记录末页的id\\n                putMyVar('末页', start + '-' + end);\\n            } else {\\n                putMyVar('分集起', 1);\\n                putMyVar('分集终', 剧集长度);\\n            }\\n            // 展示剧集:\\n            显示的剧集列表 = 剧集列表.slice(0, getMyVar('分集终'));\\n            putMyVar('显示的剧集列表', 显示的剧集列表);\\n            index = 1;\\n            显示的剧集列表.forEach(list => {\\n                if (getItem('模式', '双边') == '列表') {\\n                    d.push({\\n                        title: list.long_title,\\n                        img: list.cover + \\\"@Referer=\\\",\\n                        url: list.link + lazy,\\n                        desc: list.title.match(/[0-9]/) ? (list.badge + '第' + list.title + '话') : list.title,\\n                        col_type: 'movie_1_left_pic',\\n                        extra: {\\n                            id: list.link,\\n                            aid: list.aid,\\n                            bvid: list.bvid,\\n                            cid: list.cid,\\n                            badge: list.badge\\n                        }\\n                    });\\n                } else {\\n                    d.push({\\n                        title: list.long_title,\\n                        img: list.cover + \\\"@Referer=\\\",\\n                        url: list.link + lazy,\\n                        desc: list.title.match(/[0-9]/) ? (list.badge + '第' + list.title + '话') : list.title,\\n                        col_type: 'movie_2',\\n                        extra: {\\n                            id: list.link,\\n                            aid: list.aid,\\n                            bvid: list.bvid,\\n                            cid: list.cid,\\n                            badge: list.badge\\n                        }\\n                    });\\n                }\\n                index += 1;\\n            });\\n            setResult(d);\\n            break;\\n    }\\n}\\n\"},{\"name\":\"解析路由\",\"path\":\"lazy\",\"rule\":\"var lazy = $('#noLoading#').lazyRule(() => {\\n    vipUrl = input;\\n    var danmuSetting = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\\n    var jiexiArr = [\\n        { name: '虾米xmflv', url: 'https://jx.xmflv.cc/?url=' },\\n        { name: \\\"咸鱼77flv\\\", url: \\\"https://jx.77flv.cc/?url=\\\" },\\n        { name: \\\"极速2s0\\\", url: \\\"https://jx.2s0.cn/player/?url=\\\" },\\n        { name: \\\"爱看ik9\\\", url: \\\"https://yparse.ik9.cc/index.php?url=\\\" },\\n        { name: \\\"m3u8\\\", url: \\\"https://jx.m3u8.tv/jiexi/?url=\\\" }\\n    ];\\n    switch (danmuSetting.useway) {\\n        case '仅用魔断':\\n            eval(fetch('hiker://files/cache/Parse_Dn.js', {}));\\n            return aytmParse(vipUrl)\\n        case '仅用内置':\\n            urls = [];\\n            names = [];\\n            jiexiArr.forEach(el => {\\n                names.push(el.name);\\n                urls.push('video://' + el.url + vipUrl);\\n            });\\n            showLoading(\\\"获取弹幕中~\\\");\\n            return $.require(\\\"hiker://page/lazyToJiexi?rule=dm盒子\\\").videoX5(vipUrl, urls, names);\\n        case '仅下弹幕':\\n            showLoading(\\\"正在获取...\\\");\\n            dm = $.require('hiker://page/dmFun?rule=dm盒子').dmRoute(vipUrl);\\n            dmPath = getPath(getVar('dm_share')).slice(7);\\n            var { copyFile, moveFile } = $.require(\\\"hiker://page/fileAPI?rule=dm盒子\\\");\\n            dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\\n            saveLocal = dmSettings.saveLocal;\\n            doubleWrite = dmSettings.doubleWrite;\\n            if (saveLocal) {\\n                destinationDir = '/storage/emulated/0/Download/海阔视界/danmu/';\\n                if (doubleWrite) {\\n                    copyFile(dmPath, destinationDir);\\n                } else {\\n                    moveFile(dmPath, destinationDir);\\n                }\\n            }\\n            hideLoading();\\n            if (dm === false) {\\n                return \\\"toast://貌似下载出错了呜呜呜\\\";\\n            } else {\\n                return \\\"toast://下载成功，快去观影吧，。\\\";\\n            }\\n        case '调用搜索':\\n            dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\\n            if (dmSettings.search) {\\n                searchType = dmSettings.search.searchType;\\n                searchName = dmSettings.search.searchName;\\n            } else {\\n                searchType = 1;\\n                searchName = \\\"云盘君dm\\\";\\n            }\\n            showLoading(\\\"获取弹幕中~\\\");\\n            return $.require(\\\"hiker://page/lazyToJiexi?rule=dm盒子\\\").parseDm(vipUrl, searchType, searchName);\\n        case '常规':\\n            return $(['魔断解析', '内置解析', '调用搜索', '仅下弹幕', '下载分享', '修改设置', '勾选/取消', '下载勾选'], 2).select((vipUrl, jiexiArr) => {\\n                if (input == '魔断解析') {\\n                    // 不做处理，是否带弹幕看自己配的解析\\n                    eval(fetch('hiker://files/cache/Parse_Dn.js', {}));\\n                    return aytmParse(vipUrl)\\n                } else if (input == '内置解析') {\\n                    urls = [];\\n                    names = [];\\n                    jiexiArr.forEach(el => {\\n                        names.push(el.name);\\n                        urls.push('video://' + el.url + vipUrl);\\n                    });\\n                    showLoading(\\\"获取弹幕中~\\\");\\n                    return $.require(\\\"hiker://page/lazyToJiexi?rule=dm盒子\\\").videoX5(vipUrl, urls, names);\\n                } else if (input == '调用搜索') {\\n                    dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\\n                    if (dmSettings.search) {\\n                        searchType = dmSettings.search.searchType;\\n                        searchName = dmSettings.search.searchName;\\n                    } else {\\n                        searchType = 1;\\n                        searchName = \\\"云盘君dm\\\";\\n                    }\\n                    showLoading(\\\"获取弹幕中~\\\");\\n                    return $.require(\\\"hiker://page/lazyToJiexi?rule=dm盒子\\\").parseDm(vipUrl, searchType, searchName);\\n                } else if (input == '下载分享') {\\n                    showLoading(\\\"正在获取...\\\");\\n                    dm = $.require('hiker://page/dmFun?rule=dm盒子').dmRoute(vipUrl);\\n                    hideLoading();\\n                    if (dm === false) {\\n                        return \\\"toast://貌似下载出错了呜呜呜\\\";\\n                    } else {\\n                        return \\\"share://\\\" + getVar('dm_share', dm);\\n                    }\\n                } else if (input == '仅下弹幕') {// 获取弹幕\\n                    showLoading(\\\"正在获取...\\\");\\n                    dm = $.require('hiker://page/dmFun?rule=dm盒子').dmRoute(vipUrl);\\n                    dmPath = getPath(getVar('dm_share')).slice(7);\\n                    var { copyFile, moveFile } = $.require(\\\"hiker://page/fileAPI?rule=dm盒子\\\");\\n                    dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\\n                    saveLocal = dmSettings.saveLocal;\\n                    doubleWrite = dmSettings.doubleWrite;\\n                    if (saveLocal) {\\n                        destinationDir = '/storage/emulated/0/Download/海阔视界/danmu/';\\n                        if (doubleWrite) {\\n                            copyFile(dmPath, destinationDir);\\n                        } else {\\n                            moveFile(dmPath, destinationDir);\\n                        }\\n                    }\\n                    hideLoading();\\n                    if (dm === false) {\\n                        return \\\"toast://貌似下载出错了呜呜呜\\\";\\n                    } else {\\n                        return \\\"toast://下载成功，快去观影吧，。\\\";\\n                    }\\n                } else if (input == '勾选/取消') {// 勾选\\n                    function removeDuplicatesAndArrange(array, element) {\\n                        var index = array.indexOf(element);\\n                        var result = [];\\n                        if (index !== -1) {\\n                            result = array.filter(function (value, i) {\\n                                return i !== index;\\n                            });\\n                        } else {\\n                            result = array.concat(element);\\n                        }\\n                        return result;\\n                    }\\n                    let checkArr = storage0.getMyVar('checkArr', []);\\n                    olength = checkArr.length;\\n                    checkArr = removeDuplicatesAndArrange(checkArr, vipUrl);\\n                    alength = checkArr.length;\\n                    storage0.putMyVar('checkArr', checkArr);\\n                    if (alength > olength) {\\n                        return \\\"toast://加入下载列表成功\\\";\\n                    } else {\\n                        return \\\"toast://从下载列表中移除\\\";\\n                    }\\n                } else if (input == '下载勾选') {// 批量下载\\n                    return $('', \\\"请输入开始集数\\\").input(() => {\\n                        var javaImport = new JavaImporter(java.io, Packages.android.util);\\n                        function renameFile(filePath, newFileName) {\\n                            with (javaImport) {\\n                                var file = new File(filePath);\\n                                var newFilePath = new File(file.getParent(), newFileName);\\n                                if (file.renameTo(newFilePath)) {\\n                                    log(\\\"文件重命名成功！\\\");\\n                                } else {\\n                                    log(\\\"文件重命名失败！\\\");\\n                                }\\n                            }\\n                        }\\n                        let ep = Number(input);\\n                        let checkArr = storage0.getMyVar('checkArr', []);\\n                        log('批量下载列表：' + JSON.stringify(checkArr));\\n                        checkArr.forEach(vipUrl => {\\n                            showLoading(\\\"下载进度：第\\\" + ep + \\\"集\\\");\\n                            dm = $.require('hiker://page/dmFun?rule=dm盒子').dmRoute(vipUrl);\\n                            hideLoading();\\n                            if (dm === false) {\\n                                log('第' + ep + '集下载出错');\\n                            }\\n                            dmPath = getPath(getVar('dm_share'));\\n                            newFileName = dmPath.substring(dmPath.lastIndexOf(\\\"/\\\") + 1).replace(/(\\\\.[^.]+)$/, '_' + ep + \\\"$1\\\");\\n                            localPath = android.net.Uri.parse(dmPath).getPath();\\n                            renameFile(localPath, newFileName);\\n                            var { copyFile, moveFile } = $.require(\\\"hiker://page/fileAPI?rule=dm盒子\\\");\\n                            dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\\n                            saveLocal = dmSettings.saveLocal;\\n                            doubleWrite = dmSettings.doubleWrite;\\n                            newPath = getPath('hiker://files/cache/danmu/').slice(7) + newFileName;\\n                            if (saveLocal) {\\n                                destinationDir = '/storage/emulated/0/Download/海阔视界/danmu/';\\n                                if (doubleWrite) {\\n                                    copyFile(newPath, destinationDir);\\n                                } else {\\n                                    moveFile(newPath, destinationDir);\\n                                }\\n                            }\\n                            ep++;\\n                        });\\n                        clearMyVar('checkArr');\\n                        return \\\"toast://已全部下载，快去观影吧，。\\\";\\n                    })\\n                } else {\\n                    return 'hiker://page/setting?rule=dm盒子'\\n                }\\n            }, vipUrl, jiexiArr)\\n    }\\n});\\nputMyVar('lazy', lazy);\\n\"},{\"name\":\"文件管理\",\"path\":\"filesSystem\",\"rule\":\"js:\\nlet d = [];\\nvar javaImport = new JavaImporter(java.io, Packages.android.util);\\n// 读取目录下的所有文件\\nfunction listFilesInDir(dirPath) {\\n    with (javaImport) {\\n        var files = [];\\n        var localPath = android.net.Uri.parse(dirPath).getPath();\\n        var dir = new File(localPath);\\n        if (dir.isDirectory()) {\\n            var fileArr = dir.listFiles();\\n            for (let i = 0; i < fileArr.length; i++) {\\n                var file = fileArr[i];\\n                if (file.isFile()) {\\n                    var danmuCount = 0;\\n                    var filePath = file.getAbsolutePath();\\n                    // 读取文件全文内容\\n                    var reader = null;\\n                    try {\\n                        reader = new BufferedReader(new FileReader(filePath));\\n                        var sb = new java.lang.StringBuilder();\\n                        var line;\\n                        while ((line = reader.readLine()) != null) {\\n                            sb.append(line);\\n                        }\\n                        var content = sb.toString();\\n                        // 统计 <d 开头的标签数量\\n                        danmuCount = parseInt((content.match(/<d\\\\b/g) || []).length);\\n                    } catch (e) {\\n                        log(\\\"弹幕统计读取失败: \\\"+e.message);\\n                    } finally {\\n                        if (reader != null) reader.close();\\n                    }\\n                    // 添加文件信息（含弹幕数和MB格式大小）\\n                    files.push({\\n                        name: file.getName(),\\n                        path: filePath,\\n                        size: (file.length() / (1024 * 1024)).toFixed(2), // 转为MB保留2位小数\\n                        danmuNum: danmuCount\\n                    });\\n                }\\n            }\\n        }\\n        // 自然排序文件名\\n        files.sort((a, b) => a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' }));\\n        return files;\\n    }\\n}\\n\\n// 路径选择\\nselect = getMyVar('filePath', '0');\\npathMap = {\\n    \\\"0\\\": \\\"hiker://files/cache/danmu/\\\",\\n    \\\"1\\\": \\\"/storage/emulated/0/Download/海阔视界/danmu/\\\"\\n}\\ndmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\\nsaveLocal = dmSettings.saveLocal;\\ndoubleWrite = dmSettings.doubleWrite;\\nd.push({\\n    title: select == '0' ? '““””<b><span style=\\\"color: red\\\">内部文件</span></b>' : '内部文件',\\n    url: $('#noLoading#').lazyRule((path, name) => {\\n        putMyVar('filePath', '0');\\n        refreshPage(true);\\n        return 'hiker://empty';\\n    }),\\n    col_type: 'scroll_button'\\n}, {\\n    title: select == '1' ? '““””<b><span style=\\\"color: red\\\">外部文件</span></b>' : '外部文件',\\n    url: $('#noLoading#').lazyRule((path, name) => {\\n        putMyVar('filePath', '1');\\n        refreshPage(true);\\n        return 'hiker://empty';\\n    }),\\n    col_type: 'scroll_button'\\n}, {\\n    col_type: 'line'\\n}, {\\n    title: '转存:' + (saveLocal == true ? '开' : '关'),\\n    url: $('#noLoading#').lazyRule(() => {\\n        dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\\n        if (dmSettings.saveLocal == true) {\\n            dmSettings.saveLocal = false;\\n        } else {\\n            dmSettings.saveLocal = true;\\n        }\\n        saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(dmSettings));\\n        refreshPage(true);\\n        return 'toast://弹幕存储路径已更改~'\\n    }),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '双写:' + (doubleWrite == true ? '开' : '关'),\\n    url: $('#noLoading#').lazyRule(() => {\\n        dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\\n        if (dmSettings.doubleWrite == true) {\\n            dmSettings.doubleWrite = false;\\n        } else {\\n            dmSettings.doubleWrite = true;\\n        }\\n        saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(dmSettings));\\n        refreshPage(true);\\n        return 'toast://双写模式已更改~'\\n    }),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '📤️打包分享📨',\\n    url: $('#noLoading#').lazyRule((pathMap) => {\\n        select = getMyVar('filePath', '0');\\n        shareDirectory(pathMap[select], '来自dm盒子的弹幕合集文件.zip');\\n        return 'hiker://empty';\\n    }, pathMap),\\n    col_type: 'scroll_button'\\n})\\n\\n\\n// 调用 listFilesInDir 函数，获取所有文件信息\\n/* if (select=='0') {\\n    var path = getPath('hiker://files/cache/danmu/');\\n} else {\\n    var path = getPath('/storage/emulated/0/Download/海阔视界/danmu/');\\n} */\\nvar path = getPath(pathMap[select]);\\nvar files = listFilesInDir(path);\\nd.push({\\n    title: '🗑️清空♻️',\\n    url: $(\\\"你确定嘛\\\").confirm((files) => {\\n        if (files.length == 0) {\\n            return 'toast://没有垃圾，。'\\n        }\\n        showLoading('删除中...');\\n        files.forEach(el => deleteFile(el.path));\\n        hideLoading();\\n        refreshPage(true);\\n        return 'toast://清空完毕'\\n    }, files),\\n    desc: '内部文件三天内自动删除|外部文件请定期删除',\\n    col_type: 'text_center_1'\\n})\\nd.push({\\n    col_type: 'line_blank'\\n})\\nif (files.length == 0) {\\n    d.push({\\n        title: '““””<font color=\\\"red\\\">暂时没有产生垃圾！</font>',\\n        url: 'toast://去制造垃圾啊，。',\\n        col_type: 'text_center_1'\\n    });\\n} else {\\n    files.forEach(el => {\\n        with (javaImport) {\\n            avatar = ((new File(el.path)).isDirectory()) ? 'hiker://files/icon/文件类型/文件夹.svg' : 'hiker://files/icon/文件类型/文件.svg';\\n        }\\n        d.push({\\n            title: el.name,\\n            url: $('#noLoading#').lazyRule((path, name) => {\\n                return $(['查阅', '分享', '删除'], 3, name).select((path) => {\\n                    if (input == '查阅') {\\n                        return 'openFile://' + path.replace('/storage/emulated/0/Android/data/com.example.hikerview/files/Documents/', 'hiker://files/');\\n                    } else if (input == '分享') {\\n                        return 'share://' + path;\\n                    } else {\\n                        deleteFile(path);\\n                        refreshPage(true);\\n                        return 'toast://删除成功';\\n                    }\\n                }, path)\\n            }, el.path, el.name),\\n            img: avatar,\\n            desc: `弹幕数量：${el.danmuNum}条`,\\n            col_type: 'avatar'\\n        })\\n    });\\n}\\nsetResult(d);\\n\"},{\"name\":\"设置页\",\"path\":\"setting\",\"rule\":\"js:\\nvar d = [];\\ndmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\\nfontSize = dmSettings.fontSize;\\nstep = dmSettings.step;\\nsearchType = dmSettings.search.searchType == 1 ? '指定小程序搜索' : '指定分组';\\nsearchName = dmSettings.search.searchName;\\ndmFrom = dmSettings.dmFrom;\\nparseMethod = dmSettings.parseMethod;\\nuseway = dmSettings.useway;\\nd.push({\\n    title: '📁 文件管理',\\n    url: 'hiker://page/filesSystem#noHistory#',\\n    col_type: 'text_1'\\n});\\n// 弹幕来源设置\\nd.push({\\n    title: '🌐 弹幕来源设置',\\n    col_type: 'text_1'\\n}, {\\n    title: '<b>原生官源：</b>TXdm、bilidm、QYdm、YKdm、MGdm<br><b>野生官源：</b>zuoandm、hlsdm<br><b>建议：</b>自行搭配，优选官源（默认），具体情况自行选择。',\\n    col_type: 'rich_text',\\n    extra: { \\\"textSize\\\": 12 }\\n});\\nlet icons = {\\n    'qq.com': 'hiker://files/rules/cy/tubiao/tx.svg',\\n    'bilibili.com': 'hiker://files/rules/cy/tubiao/bilibili.svg',\\n    'iqiyi.com': 'hiker://files/rules/cy/tubiao/iqiyi.svg',\\n    'mgtv.com': 'hiker://files/rules/cy/tubiao/mgtv.svg',\\n    'youku.com': 'hiker://files/rules/cy/tubiao/youku.svg'\\n};\\nfor (let from in dmFrom) {\\n    d.push({\\n        title: dmFrom[from],\\n        url: $(\\\"\\\").lazyRule((parseMethod, from) => {\\n            options = parseMethod.slice(5);\\n            switch (from) {\\n                case 'qq.com':\\n                    options.unshift('TXdm');\\n                    break;\\n                case 'bilibili.com':\\n                    options.unshift('bilidm');\\n                    break;\\n                case 'iqiyi.com':\\n                    options.unshift('QYdm');\\n                    break;\\n                case 'mgtv.com':\\n                    options.unshift('MGdm');\\n                    break;\\n                case 'youku.com':\\n                    options.unshift('YKdm');\\n                    break;\\n            }\\n            return $(options, 1).select((from) => {\\n                curSettings = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\\n                curSettings.dmFrom[from] = input;\\n                let dmPath = getVar('dm_share', '');\\n                const filenameWithExt = dmPath.split('/').pop();\\n                const index = filenameWithExt.lastIndexOf('.');\\n                const filename = index !== -1 ? filenameWithExt.substring(0, index) : filenameWithExt;\\n                // 清除上一次解析的记忆\\n                if (filename) {\\n                    delete curSettings.history[filename];\\n                    log('更改生效，上次解析记录已清除');\\n                }\\n                saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(curSettings));\\n                refreshPage(true);\\n                return \\\"toast://更改生效，请重新下载弹幕和挂载\\\";\\n            }, from)\\n        }, parseMethod, from),\\n        img: icons[from],\\n        col_type: 'icon_5'\\n    });\\n}\\n// 弹幕参数设置\\nd.push({\\n    col_type: 'line_blank'\\n});\\nd.push({\\n    title: '⚙ 弹幕参数设置',\\n    col_type: 'rich_text'\\n}, {\\n    title: '““””弹幕大小:' + fontSize,\\n    url: $(fontSize, \\\"请输入数字\\\").input(() => {\\n        curSettings = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\\n        try {\\n            curSettings.fontSize = parseInt(input);\\n        } catch (e) {\\n            return 'toast://请输入数字！'\\n        }\\n        let dmPath = getVar('dm_share', '');\\n        const filenameWithExt = dmPath.split('/').pop();\\n        const index = filenameWithExt.lastIndexOf('.');\\n        const filename = index !== -1 ? filenameWithExt.substring(0, index) : filenameWithExt;\\n        // 清除上一次解析的记忆\\n        if (filename) {\\n            delete curSettings.history[filename];\\n            log('更改生效，上次解析记录已清除');\\n        }\\n        saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(curSettings));\\n        refreshPage(true);\\n        return \\\"toast://更改生效，请重新下载弹幕和挂载\\\";\\n    }),\\n    desc: '““””弹幕大小请自行根据设备调整，默认25',\\n    col_type: 'text_center_1'\\n}, {\\n    title: '““””弹幕步长:' + step,\\n    url: $(step, \\\"请输入数字\\\").input(() => {\\n        curSettings = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\\n        try {\\n            curSettings.step = parseInt(input);\\n        } catch (e) {\\n            return 'toast://请输入数字！'\\n        }\\n        let dmPath = getVar('dm_share', '');\\n        const filenameWithExt = dmPath.split('/').pop();\\n        const index = filenameWithExt.lastIndexOf('.');\\n        const filename = index !== -1 ? filenameWithExt.substring(0, index) : filenameWithExt;\\n        // 清除上一次解析的记忆\\n        if (filename) {\\n            delete curSettings.history[filename];\\n            log('更改生效，上次解析记录已清除');\\n        }\\n        saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(curSettings));\\n        refreshPage(true);\\n        return \\\"toast://更改生效，请重新下载弹幕和挂载\\\";\\n    }),\\n    desc: '““””默认是1，数值越大弹幕数量越少，请合理更改数值',\\n    col_type: 'text_center_1'\\n});\\n// 调用搜索设置\\nd.push({\\n    col_type: 'line_blank'\\n});\\nd.push({\\n    title: '🔎 调用搜索设置',\\n    col_type: 'rich_text'\\n}, {\\n    title: '““””搜索方式:' + searchType,\\n    url: $(\\\"\\\").lazyRule(() => {\\n        curSettings = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\\n        curSettings.search.searchType = curSettings.search.searchType == 1 ? 2 : 1;\\n        saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(curSettings));\\n        refreshPage(true);\\n        return \\\"hiker://empty\\\";\\n    }),\\n    desc: '““””1-调用小程序搜索\\\\n2-调用小程序分组搜索',\\n    col_type: 'text_center_1'\\n}, {\\n    title: '““””小程序名/分组名:' + searchName,\\n    url: $(\\\"\\\", \\\"请输入小程序名或分组名\\\").input(() => {\\n        curSettings = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\\n        curSettings.search.searchName = input;\\n        saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(curSettings));\\n        refreshPage(true);\\n        return \\\"hiker://empty\\\";\\n    }),\\n    desc: '““””填写你喜欢的影视小程序或分组',\\n    col_type: 'text_center_1'\\n});\\n// 更多设置\\nd.push({\\n    col_type: 'line_blank'\\n});\\nd.push({\\n    title: '🦄 More',\\n    col_type: 'rich_text'\\n}, {\\n    title: '““””观影方式:' + useway+'\\\\t【仅常规二级模式生效】',\\n    url: $(\\\"\\\").lazyRule(() => {\\n        return $(['仅用魔断', '仅用内置', '调用搜索', '仅下弹幕', '常规'], 2).select(() => {\\n            curSettings = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\\n            curSettings.useway = input;\\n            saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(curSettings));\\n            refreshPage(true);\\n            return \\\"hiker://empty\\\";\\n        })\\n    }),\\n    desc: '““””<small>常规模式可以自由选择；剩下的模式无需选择点击执行（其中仅用魔断和内置解析支持自动下一集挂载弹幕）</small>',\\n    col_type: 'text_center_1'\\n}, {\\n    title: '““””下载弹幕',\\n    url: $('', \\\"请输入标准的官方链接\\\").input(() => {\\n        showLoading(\\\"正在获取...\\\");\\n        dm = $.require('hiker://page/dmFun?rule=dm盒子').dmRoute(input);\\n        hideLoading();\\n        if (dm === false) {\\n            log('下载出错');\\n        }\\n        dmPath = getPath(getVar('dm_share')).slice(7);\\n        newFileName = input.substring(input.lastIndexOf(\\\"/\\\") + 1).replace('.html', '') + '.xml';\\n        innerFilepath = getPath('hiker://files/cache/danmu/').slice(7) + newFileName;\\n        var { renameFile, copyFile, moveFile } = $.require(\\\"hiker://page/fileAPI?rule=dm盒子\\\");\\n        dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\\n        saveLocal = dmSettings.saveLocal;\\n        doubleWrite = dmSettings.doubleWrite;\\n        if (saveLocal) {\\n            destinationDir = '/storage/emulated/0/Download/海阔视界/danmu/';\\n            renameFile(dmPath, newFileName);\\n            if (doubleWrite) {\\n                copyFile(innerFilepath, destinationDir);\\n            } else {\\n                moveFile(innerFilepath, destinationDir);\\n            }\\n        } else {\\n            renameFile(dmPath, newFileName);\\n        }\\n        putVar('dm_share', innerFilepath.replace('/storage/emulated/0/Android/data/com.example.hikerview/files/Documents/', 'hiker://files/'));\\n        return \\\"toast://下载完成，快去观影吧，。\\\";\\n    }),\\n    desc: '““””输入指定的官方链接，下载对应的弹幕',\\n    col_type: 'text_center_1'\\n}, {\\n    title: '““””导入投屏辅助规则',\\n    url: $(\\\"\\\").lazyRule(() => {\\n        let rule = {\\n            \\\"js\\\": JSON.stringify(\\\"hiker://page/setting#noHistory#?rule=dm盒子\\\"),\\n            \\\"name\\\": \\\"弹幕配置\\\"\\n        };\\n        return \\\"rule://\\\" + base64Encode(\\\"￥projection_screen￥\\\" + JSON.stringify(rule));\\n    }),\\n    desc: '““””导入规则后可以在播放器竖屏界面从投屏规则进入本页面',\\n    col_type: 'text_center_1'\\n});\\n\\nsetHomeResult(d);\\n\"},{\"name\":\"Parse_Dn.js\",\"path\":\"Parse_Dn.js\",\"rule\":\"//============免嗅调用============\\n//－－－=^_^=\\n\\nvar version = \\\"3.49221205\\\";//1205\\n\\nvar updateDate = '2022/12/05/ 13:18';\\nvar _mySet = {\\n    qju: '默认',\\n    oth:'道长仓库通免',\\n    cjcache: 'hiker://files/cache/Parse_Dn.js',\\n    themecache: 'hiker://files/cache/MyTheme.json',\\n    jiexicache: 'hiker://files/cache/MyJiexi.json',\\n    x5cache: 'hiker://files/cache/Parse_Dn.html',\\n    dmCache: 'hiker://files/cache/diaomao.txt',\\n    oldConfig: 'hiker://files/cache/MyParseSet.json',\\n    ckLink: 'https://code.aliyun.com/AI957/Hiker/raw/master/v/',\\n    // cj: 'https://code.aliyun.com/AI957/Hiker/raw/master/v/CloudParse-V2_Dn.js',\\n    cj: 'https://gitcode.net/qq_32394351/dr/-/raw/master/dp/Parse_Dn.js',\\n    // x5Url: 'https://code.aliyun.com/AI957/Hiker/raw/master/v/Parse_Dn.html',\\n    x5Url: 'http://dr.nokia.press/html/Parse_Dn-vue.html',\\n    parseRoute: 'hiker://files/rules/DuanNian/MyParse.json',\\n    // x5Route: 'file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/cache/Parse_Dn.html'\\n    x5Route: getPath('hiker://files/cache/Parse_Dn.html'),\\n    batchRoute:getPath('hiker://files/cache/plscParse.html')\\n};\\nvar MyParseS = {};\\nvar mySet = _mySet;\\nif (fileExist(_mySet.parseRoute)) {\\n    eval('var parseFile =' + fetch(_mySet.parseRoute));\\n    MyParseS = parseFile.codes;\\n    mySet = parseFile.settings;\\n}\\nvar parseTitle = [\\n    \\\"yun1717\\\",\\n    \\\"PanGu\\\",\\n    \\\"FuXing\\\",\\n    \\\"isVideo\\\",\\n    \\\"defaultParse\\\",\\n    \\\"道长仓库通免\\\",\\n    \\\"timeOut\\\",\\n    \\\"源码匹配\\\",\\n    \\\"defaultParseWeb\\\",\\n    \\\"OK解析\\\",\\n    \\\"M3U8TV\\\",\\n];\\n//－－－=^_^=\\n\\n//接口设置.\\n\\nvar setUrl = \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=设置#noRecordHistory#\\\";\\nvar set_switch = setUrl;\\nvar lazy = `eval('var config_dp =' + fetch(getVar('oldConfig')));eval(fetch(config_dp.cj));aytmParse(input)`;\\n\\n//var parwix = `var yurl='https://daili.mayixiongdi.cn/?url=';Referer': 'https://www.mayixiongdi.cn/ys?id=';'https://daili.mayixiongdi.cn/api.php', 'Referer':'https://daili.mayixiongdi.cn';\\n// 全民https://pcvideoaliyun.tianshangrenjian.mgtv.com.88wuma.com/?url=\\n\\n//－－－备 用－－－\\n/*\\n * 影视工场： https://ysgc.cc/\\n * 江湖: 555电影 https://www.555dy2.com/phone.html ｜ 17看 http://17kanyy.cn/ http://jhjiexi.30vr.cn/?url= ｜ http://api.maizimall.com/index.php?url=\\n * 江湖: http://www.tianshuyun.net/index.php/vod/play/id/448377/sid/1/nid/1.html\\n * 江湖2: http://98hyk.cn/index.php/vod/play/id/72841/sid/1/nid/1.html\\n * 人人迷: https://vip.susou.tv/player/?url= ｜ https://www.momdm.cc/\\n *\\n * wuigen: https://www.5igen.com/dmplayer/player/?url=\\n * 干饭(人人迷): https://jx.zui.cm/?url=\\n * https://2.66movie.top/player/?url=\\n *\\n */\\n\\n\\nvar tools = {\\n    MD5: function(data) {\\n        eval(getCryptoJS());\\n        return CryptoJS.MD5(data).toString(CryptoJS.enc.Hex);\\n    },\\n    AES: function(text, key, iv, isEncrypt) {\\n        eval(getCryptoJS());\\n        var key = CryptoJS.enc.Utf8.parse(key);\\n        var iv = CryptoJS.enc.Utf8.parse(iv);\\n        if (isEncrypt) {\\n            return CryptoJS.AES.encrypt(text, key, {\\n                iv: iv,\\n                mode: CryptoJS.mode.CBC,\\n                padding: CryptoJS.pad.Pkcs7\\n            }).toString();\\n        };\\n        return CryptoJS.AES.decrypt(text, key, {\\n            iv: iv,\\n            padding: CryptoJS.pad.Pkcs7\\n        }).toString(CryptoJS.enc.Utf8);\\n    },\\n    //ascii\\n    nextCharacter: function(asciiValue, k) {\\n        var s = asciiValue;\\n        return String.fromCharCode(s + k);\\n    },\\n    //凯撒\\n    caesarCipher: function(stringValue, k) {\\n        var newString = \\\"\\\";\\n        for (var i = 0; i < stringValue.length; i++) {\\n            newString += this.nextCharacter(stringValue[i].charCodeAt(), k);\\n        }\\n        return newString;\\n    },\\n    nowDate: function() {\\n        var date1 = new Date();\\n        var dateStr = \\\"\\\";\\n        if (date1) {\\n            dateStr = date1.getFullYear();\\n            var month = date1.getMonth() + 1;\\n            var day = date1.getDate();\\n            if (month < 10) {\\n                dateStr += \\\"-0\\\" + month;\\n            } else {\\n                dateStr += \\\"-\\\" + month;\\n            }\\n            if (day < 10) {\\n                dateStr += \\\"-0\\\" + day;\\n            } else {\\n                dateStr += \\\"-\\\" + day;\\n            }\\n        }\\n        return dateStr;\\n    },\\n    nowDateStr:function (){ // 利用$工具获取格式化后的当前时间\\n        return  $.dateFormat(new Date(),\\\"yyyy-MM-dd HH:mm:ss\\\");\\n    },\\n    toJSON: function(json) {\\n        return JSON.stringify(json, (key, value) => {\\n            if (typeof value == 'function') {\\n                return value.toString();\\n            } else {\\n                return value;\\n            }\\n        }, 4);\\n    },\\n    toVNum: function(a) {\\n        var a = a.toString();\\n        var c = a.split('.');\\n        var num_place = [\\\"\\\", \\\"0\\\", \\\"00\\\", \\\"000\\\", \\\"0000\\\"],\\n            r = num_place.reverse();\\n        for (var i = 0; i < c.length; i++) {\\n            var len = c[i].length;\\n            c[i] = r[len] + c[i];\\n        }\\n        var res = c.join('');\\n        return res;\\n    },\\n    cprVersion: function(a, b) {\\n        var _a = parseInt(this.toVNum(a)),\\n            _b = parseInt(this.toVNum(b));\\n        b = isNaN(_b) ? version : b;\\n        if (_a > _b) {\\n            putVar('jxNewV', '有新版本: ' + a);\\n        } else {\\n            clearVar('jxNewV');\\n        }\\n        putVar('jxOldV', b);\\n    },\\n    atob:function (str){\\n        require('https://cdn.jsdelivr.net/npm/js-base64@3.7.2/base64.min.js');\\n        return Base64.atob(str);\\n    },\\n    btoa:function (str){\\n        require('https://cdn.jsdelivr.net/npm/js-base64@3.7.2/base64.min.js');\\n        return Base64.btoa(str);\\n    },\\n    江湖:function (config_url, tem, token) {\\n        require('https://cdn.jsdelivr.net/npm/js-base64@3.7.2/base64.min.js');\\n        var atob=Base64.atob;\\n        var btoa=Base64.btoa;\\n        var config_a = tem || \\\"ffsirllq\\\";\\n        var video = '';\\n        var tem = [];\\n        var config_arry = [];\\n        var config_b = config_a.length;\\n        if (token == 0x1) {\\n            var config_url = atob(config_url);\\n        } else {\\n            var config_url = encodeURIComponent(config_url);\\n        }\\n        var config_c = config_url.length;\\n        for (i = 0x0; i < 0x100; i++) {\\n            tem[i] = config_a[i % config_b].charCodeAt();\\n            config_arry[i] = i;\\n        }\\n        for (j = i = 0x0; i < 0x100; i++) {\\n            j = (j + config_arry[i] + tem[i]) % 0x100;\\n            tmp = config_arry[i];\\n            config_arry[i] = config_arry[j];\\n            config_arry[j] = tmp;\\n        }\\n        for (a = j = i = 0x0; i < config_c; i++) {\\n            a = (a + 0x1) % 0x100;\\n            j = (j + config_arry[a]) % 0x100;\\n            tmp = config_arry[a];\\n            config_arry[a] = config_arry[j];\\n            config_arry[j] = tmp;\\n            k = config_arry[(config_arry[a] + config_arry[j]) % 0x100];\\n            video += String.fromCharCode(config_url[i].charCodeAt() ^ k);\\n        }\\n        log(decodeURIComponent(video));\\n        if (token == 0x1) {\\n            return decodeURIComponent(video);\\n        } else {\\n            return btoa(video);\\n        }\\n    }\\n};\\nif (getVar(\\\"jxOldV\\\", \\\"0\\\") != version) {\\n    putVar('cjCache', _mySet.cjcache);\\n    putVar('x5Cache', _mySet.x5Cache);\\n    putVar('oldConfig', _mySet.oldConfig);\\n    putVar('parseRoute', _mySet.parseRoute);\\n    // let jxNewV = fetch('https://gitee.com/Duan-Nian/Dn/raw/master/hikerview/ParseVersion.txt');\\n    let jxNewV = fetch('https://gitcode.net/qq_32394351/dr/-/raw/master/dp/ParseVersion.txt');\\n    let jxOldV = (fetch(_mySet.cjcache).split('version = \\\"')[1] + '').split('\\\"')[0];\\n    tools.cprVersion(jxNewV, jxOldV);\\n}\\n\\nvar ParseS = {};\\nvar originalParseS = {\\n    // updateDate: updateDate,\\n    parseLc:'https://code.aliyun.com/AI957/Hiker/raw/master/p/parseLc.js',\\n    CityIP: 'http://pv.sohu.com/cityjson',\\n    pcUA: 'User-Agent@Mozilla/5.0 (Windows NT 10.0\\\\；\\\\； WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.87 Safari/537.36',\\n    cacheM3u8: function(vUrl, ref) {\\n        let paramas = ref?{headers:{Referer:ref}}:{};\\n        return cacheM3u8(url, paramas)\\n    },\\n    isVideo:function(playUrl){\\n        const {isVideo} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\\n        return isVideo(playUrl)\\n    },\\n    timeOut:function () {\\n        const lsg=$.require(\\\"hiker://page/localStorage?rule=道长仓库Pro\\\");\\n        return parseInt(lsg.getItem('timeout', '5000'));  //超时\\n    },\\n    源码匹配:function (vipUrl,regex,pos,headers){\\n        if(!regex||!vipUrl){\\n            return 'toast://解析播放链接和正则匹配字符串必填!'\\n        }\\n        if((!pos&&pos!==0)||(pos&&typeof(pos)!=\\\"number\\\")){//match匹配位置\\n            pos = 1\\n        }\\n        headers = headers||{};\\n        headers['User-Agent'] = headers['User-Agent']||MOBILE_UA;\\n        let html = fetch(vipUrl, {headers:headers,timeout:this.timeOut()});\\n        try {\\n            let realUrl = html.match(new RegExp(regex))[pos];\\n            return this.isVideo(realUrl);\\n        } catch (e) {\\n            log(e.message);\\n            return vipUrl;\\n        }\\n    },\\n    defaultParse: function(url,timeout) {\\n        return ParseS.defaultParseWeb(url,timeout);\\n    },\\n    defaultParseWeb: function(playUrl,timeout,extra) {\\n        // log('传入defaultParseWeb的超时:'+timeout);\\n        timeout = parseInt(timeout)||parseInt(getVar('dp.jxTimeout','5000'))||5000;\\n        extra = extra||{};\\n        let playUrlList = extra.playUrlList||[];\\n        if(typeof(playUrlList)==='object'&&playUrlList.length>0){\\n            playUrlList.unshift(playUrl);\\n            let playUrls=playUrlList.slice(0,4);\\n            let names=extra.nameList.slice(0,4);\\n            // log('开始批量解析(已去重,只取前3个备胎，加道长群:486722328获取最新魔断动态):'+names);\\n            playUrls=playUrls.map((it,id)=>it+\\\";\\\"+names[id]);\\n            //log(playUrls);\\n            const {LazyParseFast} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\\n            let ret = LazyParseFast(playUrls,timeout,timeout);\\n            if(typeof(ret)==='object'&&ret.length>0){\\n                //return ret[0]\\n                //log(ret);\\n                let v = getAppVersion();\\n                if(parseInt(v)>=2194&&ret.length>1){\\n                    let urls = Array.from(new Set(ret));\\n                    names=urls.map((it,id)=>it.split(\\\"★\\\").length>1?it.split(\\\"★\\\")[1]:\\\"线路:\\\"+parseInt(id+1));\\n                    urls=urls.map(it=>it.split(\\\"★\\\")[0]);\\n                    let headers = urls.map((it)=>{\\n                        if(!/;/.test(it)||it.split(';').length<2){\\n                            return {}\\n                        }else{\\n                            let head = it.split(';')[1];\\n                            if(!/@/.test(head)||!/{|}/.test(head)){\\n                                return {}\\n                            }\\n                            head=head.split(\\\"{\\\")[1].split(\\\"}\\\")[0];\\n                            //head = head.replace(/{|}/g,'');\\n                            head = head.split('&&');\\n                            let obj = {};\\n                            for(let i in head){\\n                                let key = head[i].split('@')[0];\\n                                let value = head[i].split('@')[1].replace(/;/,'；；');\\n                                obj[key] = value;\\n                            }\\n                            return obj\\n                        }\\n                    });\\n                    urls = urls.map((it)=>{\\n                        let turl=it.split(';')[0];\\n                        if(it.includes(\\\"#isVideo=true#\\\")&&!turl.includes(\\\"#isVideo=true#\\\")){\\n                            turl+=\\\"#isVideo=true#\\\";\\n                        }\\n                        return turl\\n                    });\\n                    return JSON.stringify({urls:urls,headers:headers,names:names});\\n                }else{\\n                    return ret[0].split(\\\"★\\\")[0]\\n                }\\n            }else{\\n                return ret\\n            }\\n        }else{\\n            const {lazyParse} = $.require('hiker://page/globalParse?rule=道长仓库Pro');\\n            let x5Play=lazyParse(playUrl,timeout);\\n            if(typeof(x5Play)==\\\"undefined\\\"||!x5Play){\\n                return \\\"toast://道长仓库解析失败\\\"\\n            }\\n            let tips=/x5Rule|webRule/.test(x5Play)?\\\"x5/web免嗅开始\\\":\\\"极速免嗅探完毕，地址:\\\"+(/^http/.test(x5Play)?x5Play:'非正常链接');\\n            log(tips);\\n            return x5Play;\\n        }\\n    },\\n    \\\"maoss\\\":\\n        function (jxurl, ref, key) {\\n            return this.猫(jxurl, ref, key)\\n        },\\n    免嗅:function(vipUrl,k){\\n        k=k||[\\\"url\\\",\\\"data.url\\\"];\\n        try{\\n            let rjson=JSON.parse(fetch(vipUrl));\\n            //log(rjson);\\n            let realUrl='';\\n            if(typeof(k)=='string'){\\n                realUrl=eval(`rjson.${k}`);\\n            }else if(Array.isArray(k)){\\n                for(let i of k){\\n                    //log(i);\\n                    realUrl=eval(`rjson.${i}`);\\n                    if(realUrl){\\n                        break;\\n                    }\\n                }\\n            }\\n            if(realUrl.startsWith('/')){\\n                realUrl = 'https://'+realUrl;\\n            }\\n            return this.isVideo(realUrl)||\\\"\\\";\\n        }catch(e){\\n            log(e.message);\\n            return \\\"\\\"\\n        }\\n    },\\n    X5:function(vipUrl,ref){// https://api.52wyb.com/webcloud/?v=http://vip.1905.com/play/691940.shtml http://www.cdcer.net/\\n        let _x5 = $.toString((vipUrl) => {\\n            if(!location.href.includes(vipUrl)){\\n                location.href = vipUrl;\\n            }\\n            if(window.count == null){\\n                window.count=1;\\n            }\\n            window.count++;\\n            if( window.count >= 20){\\n                fba.log(\\\"未获取到资源地址，跳到解析页\\\");\\n                return vipUrl\\n            }\\n            var urls = _getUrls();\\n            for (var i in urls) {\\n                if (!/playm3u8|m3u8\\\\.tv/.test(urls[i]) && urls[i].match(/\\\\.mp3|\\\\.mp4|\\\\.m3u8|\\\\.flv/)) {\\n                    fba.log(urls[i]);\\n                    return urls[i]\\n                }\\n            }\\n        },vipUrl);\\n        let playUrl = ref?ref:vipUrl;\\n        let x5Url = 'webRule://'+playUrl+ '@' +_x5;\\n        showLoading('魔断.js嗅探中...');\\n        return x5Url\\n    },\\n    '道长':function (vipUrl){\\n        evalPrivateJS('zSWve+eeA6iL+f2fGTI+1pR8jnLd0SiyV6yvgcPMWwBMP5aYpqhTFbISxnvhb0bd5VgizyUMHe4dmsnGhWLBkqfb5HfNbIW4MBMxzLpP/9TjNT8SIQAfjdTj4P8oX35ekKNvGVxDolyfcYrpoKwNoQ==');\\n        return this.免嗅(vipUrl+'&secret='+secret)\\n    },\\n    '猫':function (jxurl, ref, key) {\\n        try {\\n            var getVideoInfo = function (text) {\\n                return tools.AES(text, key, iv);\\n            };\\n            let headers = {headers: {\\\"Referer\\\": ref||''}};\\n            key = key == undefined ? \\\"dvyYRQlnPRCMdQSe\\\" : key;\\n            var html = ref?request(jxurl, headers):request(jxurl);\\n            if (/&btwaf=/.test(html)) {\\n                html = request(jxurl + \\\"&btwaf\\\" + html.match(/&btwaf(.*?)\\\"/)[1], headers);\\n            }\\n            var iv = html.split(\\\"_token = \\\\\\\"\\\")[1].split(\\\"\\\\\\\"\\\")[0];\\n            eval(html.match(/var config = {[\\\\s\\\\S]*?}/)[0] + \\\"\\\");\\n            if (!/^http/.test(config.url)) {\\n                config.url = decodeURIComponent(tools.AES(config.url, key, iv));\\n            }\\n            return config.url;\\n        }\\n        catch (e) {\\n            // return \\\"\\\";\\n            return jxurl;\\n        }\\n    },\\n    LLQ: function(jxurl) {\\n        try {\\n            var api = jxurl.split('?url=')[0] + \\\"api.php\\\";\\n            var b64id = base64Encode(jxurl.split('url=')[1]);\\n            var parseid = tools.caesarCipher(b64id, -1);\\n            var json = JSON.parse(request(api, {\\n                headers: {\\n                    'Referer': jxurl\\n                },\\n                method: 'POST',\\n                body: 'url=' + parseid\\n            }));\\n            url = (json.code == 200 ? base64Decode(tools.caesarCipher(json.url, -1)) : '');\\n            return url;\\n        } catch (e) {\\n            return '';\\n        }\\n    },\\n    PanGu: function(vipUrl, data) {\\n        try {\\n            /*var ref = 'https://www.pangujiexi.com/';\\n            var parse = 'https://panguapi.ntryjd.net/jiexi/?url=' + vipUrl;\\n            var api = 'https://panguapi.ntryjd.net/jiexi/api.php';\\n            */\\n            //var ref = 'https://xmystv.com/';\\n            //var parse = 'https://www.99kpw.com/pangu/index.php?url=' + tailUrl;\\n            //var api = 'https://www.99kpw.com/pangu/api.php';\\n            var parse = 'https://www.pangujiexi.com/pangu/?url=' + vipUrl;\\n            var api = 'https://panguapi.ntryjd.net/pangu2021/api.php';\\n            if (data) {\\n                ref = data[0];\\n                parse = data[1];\\n                api = data[2];\\n            }\\n            var Time = (Math.floor(new Date().getTime() / 1000) * 1).toString();\\n            var url = JSON.parse(request(api, {\\n                headers: {\\n                    'Referer': parse\\n                },\\n                body: 'url=' + vipUrl + '&referer=' + base64Encode(parse) + '&ref=1&time=' + Time + '&type=&other=' + base64Encode(vipUrl) + '&ios=0',\\n                method: 'POST'\\n            })).url;\\n            return url;\\n        } catch (e) {\\n            return '';\\n        }\\n    },\\n    yun1717: function (vipUrl) {\\n        var isyk = vipUrl.indexOf('youku');\\n        var ref = \\\"https://www.1717yun.com/jx/ty.php?url=\\\" + vipUrl;\\n        var parse = \\\"https://1717yun.com.zh188.net/0828/?url=\\\" + vipUrl;\\n        var api = \\\"https://1717yun.com.zh188.net/1004/..index..php\\\";\\n        return isyk == -1 ? this.PanGu(vipUrl, [ref, parse, api]) : this.PanGu(vipUrl, [ref + ',vip:', parse + ',vip:', api]);\\n    },\\n    OK解析:'https://okjx.cc/?url=',\\n    M3U8TV:'https://jx.m3u8.tv/jiexi/?url=',\\n    道长仓库通免:function (url,timeout){\\n        return ParseS.defaultParseWeb(url,timeout);\\n    },\\n    FuXing: function(vipUrl) {\\n        try {\\n            //if(vipUrl.indexOf('v.youku')!=-1){\\n            //    vipUrl = (JSON.parse(request(vipUrl, {redirect:false, withHeaders:true})).headers.location + '').replace(/\\\\?.*/,'');\\n            //}\\n            var ref = 'https://jx.xuetuiguang.cn/jiexi/?url=' + vipUrl;\\n            var parse = ref;\\n            var api = 'https://jx.xuetuiguang.cn/jiexi/apiu_fx.php';\\n            return this.PanGu(vipUrl, [ref, parse, api]);\\n        } catch (e) {\\n            return '';\\n        }\\n    },\\n};\\n\\nObject.assign(ParseS, originalParseS, MyParseS);\\n//覆盖顺序，第三个覆盖第二个然后覆盖第一个\\n\\n\\nfunction aytmParse(vipUrl,strTitle,timeout,playUrl) {\\n    // 参数1:正版网址地址 参数2 定向解析接口名称 参数3 x5解析超时 参数4 完整的播放链接\\n    strTitle = strTitle||'';\\n    vipUrl = decodeURIComponent(vipUrl);\\n    if(!/miguvideo/.test(vipUrl)){\\n        vipUrl=vipUrl.split('#')[0].split('?')[0];\\n    }\\n    playUrl=decodeURIComponent(playUrl)||vipUrl||'';\\n    // log('传入aytmParse的超时:'+timeout);\\n    timeout = parseInt(timeout)||parseInt(getVar('dp.jxTimeout','5000'))||5000;\\n\\n    //-------------------------------------------------\\n    let jxsRoute = \\\"hiker://files/cache/MyJiexi.json\\\";\\n    let MyJiexi = {};\\n    let jiexis = {};\\n    try {\\n        MyJiexi = JSON.parse(fetch(jxsRoute));\\n        jiexis = MyJiexi.jiexis.filter(it=>it.name===MyJiexi.now)[0];\\n    }catch (e) {}\\n    function getPlayJx(key){\\n        let playUrlList = [];//批量播放地址列表\\n        let nameList = [];\\n        let jxs = jiexis[key]; // 适用于这个网站的解析列表\\n        if(jxs){\\n            for(let i in jxs){\\n                if(typeof ParseS[jxs[i]] == 'string'&&ParseS[jxs[i]].match(/http.*?=/)){\\n                    playUrlList.push(ParseS[jxs[i]]+vipUrl);\\n                    nameList.push(jxs[i]);\\n                }\\n            }\\n        }\\n        // return playUrlList\\n        return {playUrlList:playUrlList,nameList:nameList}\\n    }\\n    function getLazyList(key){//只获取备胎列表的免嗅探解析列表\\n        let parses = [];\\n        let jxs = jiexis[key]||[]; // 适用于这个网站的解析列表\\n        // log(jxs);\\n        if(jxs){\\n            for(let i in jxs){\\n                if(typeof ParseS[jxs[i]] == 'function'&&!/通免/.test(ParseS[jxs[i]].toString())){\\n                    parses.push({\\n                        name:jxs[i],\\n                        // rule:ParseS[jxs[i]]\\n                    })\\n                }\\n            }\\n        }\\n        return parses\\n    }\\n    var extra = {};\\n    var parses = []; //免嗅探列表\\n    //-------------------------------------------------------\\n    if(!strTitle){\\n        if(/LT/.test(vipUrl)){\\n            str = mySet.lt;\\n            extra = getPlayJx('lt');\\n            parses = getLazyList('lt',str);\\n        } else if(/renrenmi/.test(vipUrl)){\\n            str = mySet.rr;\\n            extra = getPlayJx('rr');\\n            parses = getLazyList('rr',str);\\n        }else if(/wuduyun/.test(vipUrl)){\\n            str = mySet.wd;\\n            extra = getPlayJx('wd');\\n            parses = getLazyList('wd',str);\\n        }else if(/yanaifei|xinluan|LT|ruifenglb|suoyo|xfy|renrenmi|RongXingVR|xueren|wuduyun|laodi|Naifeimi|daodm|XMMT|v020c/.test(vipUrl)){\\n            str = mySet.oth;\\n            extra = getPlayJx('oth');\\n            parses = getLazyList('oth',str);\\n        }else{\\n            var host;\\n            try{\\n                host = vipUrl.match(/\\\\.(.*?)\\\\//)[1];\\n            }catch(e){\\n                if(!/^http/.test(playUrl)){\\n                    return \\\"断插调用失败！\\\\n非正常的vip正版地址且未识别原站解析播放地址\\\";\\n                }else{\\n                    return ParseS.道长仓库通免(playUrl,timeout)\\n                }\\n            }\\n            //host = decodeURIComponent(host);\\n            switch (mySet.qju) {\\n                case \\\"默认\\\":\\n                    switch (host) {\\n                        case \\\"qq.com\\\":\\n                            str = mySet.tx;\\n                            extra = getPlayJx('tx');\\n                            parses = getLazyList('tx');\\n                            break;\\n                        case \\\"iqiyi.com\\\":\\n                            str = mySet.qy;\\n                            extra = getPlayJx('qy');\\n                            parses = getLazyList('qy');\\n                            break;\\n                        case \\\"youku.com\\\":\\n                            str = mySet.yk;\\n                            extra = getPlayJx('yk');\\n                            parses = getLazyList('yk');\\n                            break;\\n                        case \\\"alizy\\\":\\n                            str = mySet.al;\\n                            extra = getPlayJx('al');\\n                            parses = getLazyList('alizy');\\n                            break;\\n                        case \\\"mgtv.com\\\":\\n                            str = mySet.mg;\\n                            extra = getPlayJx('mg');\\n                            parses = getLazyList('mg');\\n                            break;\\n                        case \\\"bilibili.com\\\":\\n                            str = mySet.bl;\\n                            extra = getPlayJx('bl');\\n                            parses = getLazyList('bl');\\n                            break;\\n                        case \\\"sohu.com\\\":\\n                            str = mySet.sh;\\n                            extra = getPlayJx('sh');\\n                            parses = getLazyList('sh');\\n                            break;\\n                        case \\\"tv.sohu.com\\\":\\n                            str = mySet.sh;\\n                            extra = getPlayJx('sh');\\n                            parses = getLazyList('sh');\\n                            break;\\n                        case \\\"ixigua.com\\\":\\n                            str = mySet.xg;\\n                            extra = getPlayJx('xg');\\n                            parses = getLazyList('xg');\\n                            break;\\n                        case \\\"pptv.com\\\":\\n                            str = mySet.pp;\\n                            extra = getPlayJx('pp');\\n                            parses = getLazyList('pp');\\n                            break;\\n                        case \\\"miguvideo.com\\\":\\n                            str = mySet.mi;\\n                            extra = getPlayJx('mi');\\n                            parses = getLazyList('mi');\\n                            break;\\n                        case \\\"le.com\\\":\\n                            str = mySet.le;\\n                            extra = getPlayJx('le');\\n                            parses = getLazyList('le');\\n                            break;\\n                        case \\\"1905.com\\\":\\n                            str = mySet.one;\\n                            extra = getPlayJx('one');\\n                            parses = getLazyList('one');\\n                            break;\\n                        case \\\"fun.tv\\\":\\n                            str = mySet.fun;\\n                            extra = getPlayJx('fun');\\n                            parses = getLazyList('fun');\\n                            break;\\n                        default:\\n                            str = mySet.oth;\\n                            extra = getPlayJx('oth');\\n                            parses = getLazyList('oth');\\n                            break;\\n                    }\\n                    break;\\n                default:\\n                    str = mySet.qju;\\n                    break;\\n            }\\n        }\\n    }else{\\n        log('魔断执行定向解析线路头:'+strTitle);\\n        str = strTitle;\\n    }\\n    let withBatch = !!(MyJiexi.isAuto && MyJiexi.autoMode === '速度优先');\\n    let withBatchOrder = !!(MyJiexi.isAuto && /顺序优先|嗅探优先/.test(MyJiexi.autoMode));\\n    let singleBack = MyJiexi.singleBack||false; //吊毛模式。单个结果直接返回，停止后面的\\n    let ignore_mx = MyJiexi.ignore_mx||false; //忽略免嗅,嗅探优先模式使用\\n    let use_mx = !(MyJiexi.autoMode === '嗅探优先' && MyJiexi.ignore_mx); // 只要不是免嗅优先模式下的忽略免嗅,都使用免嗅\\n    let dmPath = 'hiker://files/cache/diaomao.txt';//吊毛模式过滤文件路径\\n    let dmUrls;\\n    try {\\n        dmUrls = fetch(dmPath).trim().split('\\\\n').filter(it=>it&&!it.startsWith('//'));\\n    }catch (e) {\\n        dmUrls = [];\\n    }\\n    function hasDm(videoUrl,dmUrls){//播放地址是否为吊毛视频\\n        if(dmUrls.length<1){\\n            return false\\n        }\\n        for(let dmUrl of dmUrls){\\n            if((new RegExp(dmUrl)).test(videoUrl)){//播放地址包含吊毛标志的地址\\n                return true\\n            }\\n        }\\n        return false\\n    }\\n\\n    function unique2(array){//去重函数\\n        return Array.from(new Set(array));\\n    }\\n    function ArrSet(Arr, id) {//对象数组去重\\n        var obj = {};\\n        const arrays = Arr.reduce((setArr, item) => {\\n            obj[item[id]] ? '' : obj[item[id]] = true && setArr.push(item);\\n            return setArr;\\n        }, []);\\n        return arrays;\\n    }\\n    function sortByKey(array, key, order) {//对象数组按某个键值排序\\n        return array.sort(function(a, b) {\\n            var x = parseInt(a[key].match(/(\\\\d+)/)[1]);//修复大于10出问题\\n            var y = parseInt(b[key].match(/(\\\\d+)/)[1]);\\n            // log('x:'+x+\\\",y:\\\"+y);\\n            if (order) {\\n                return ((x < y) ? -1 : ((x > y) ? 1 : 0))\\n            } else {\\n                return ((x < y) ? ((x > y) ? 1 : 0) : -1)\\n            }\\n        })\\n    }\\n    if (typeof ParseS[str] == 'function') { // 主配置放免嗅才会触发(不太友好,躺平不想优化)\\n        if(/通免/.test(str)){\\n            return ParseS[str](vipUrl,timeout);\\n        }\\n        var url;\\n        var task = function(obj) {\\n            eval('var config_dp =' + fetch(getVar('oldConfig')));\\n            eval(fetch(config_dp.cj));\\n            return aytmParse(obj.vipUrl,obj.name,obj.timeout);\\n        };\\n        let t = (new Date()).getTime();\\n        if (Array.isArray(extra.playUrlList) && extra.playUrlList.length > 0) {\\n            extra.nameList = unique2(extra.nameList);\\n            extra.playUrlList = unique2(extra.playUrlList);\\n        }else{\\n            extra.nameList = [];\\n            extra.playUrlList = [];\\n        }\\n        function getMyUrls(urls){\\n            return urls.map((it) => {\\n                let turl = it.split(';')[0];\\n                if (it.includes(\\\"#isVideo=true#\\\") && !turl.includes(\\\"#isVideo=true#\\\")) {\\n                    turl += \\\"#isVideo=true#\\\";\\n                }\\n                return turl\\n            });\\n        }\\n\\n        function getMyHeaders(urls){\\n            return urls.map((it) => {\\n                if (!/;/.test(it) || it.split(';').length < 2) {\\n                    return {}\\n                } else {\\n                    let head = it.split(';')[1];\\n                    if (!/@/.test(head) || !/{|}/.test(head)) {\\n                        return {}\\n                    }\\n                    head = head.split(\\\"{\\\")[1].split(\\\"}\\\")[0];\\n                    //head = head.replace(/{|}/g,'');\\n                    head = head.split('&&');\\n                    let obj = {};\\n                    for (let i in head) {\\n                        let key = head[i].split('@')[0];\\n                        let value = head[i].split('@')[1].replace(/;/, '；；');\\n                        obj[key] = value;\\n                    }\\n                    return obj\\n                }\\n            });\\n        }\\n\\n        function getMyPlayUrlList(){\\n            if(Array.isArray(extra.playUrlList)){\\n                // return extra.playUrlList.map(it=>'video://'+it.replace('?url=','?id='+t+'&url=').replace('?v=','?id='+t+'&v='));\\n                return extra.playUrlList.map(it=>'video://'+it);\\n            }\\n            return []\\n        }\\n\\n\\n        if(!withBatchOrder||strTitle) {//不开多线路顺序优先或者指定了解析\\n            url = ParseS[str](vipUrl,timeout);\\n        }\\n        else{//开了多线路顺序优先执行免嗅多任务\\n            if(typeof ParseS[str] == 'function'&&!/通免/.test(ParseS[str].toString())){\\n                parses.unshift({name:str}); //把主配置的免嗅探加入到多任务列表\\n            }\\n            parses = ArrSet(parses,'name'); //去重\\n            if(use_mx) { // 如果使用免嗅,先多任务跑免嗅\\n                var count = parses.length; //设置任务数量\\n                log('魔断开启多任务解析,任务数量:' + count);\\n                log('解析列表:' + JSON.stringify(parses));\\n                var parseRet = []; //解析结果列表\\n                let tasks = parses.map((it, idex) => {\\n                    return {\\n                        func: task,\\n                        param: {\\n                            name: it.name,\\n                            // rule:it.rule,\\n                            vipUrl: vipUrl,\\n                            timeout: timeout\\n                        },\\n                        id: \\\"task\\\" + idex\\n                    }\\n                });\\n                showLoading(\\\"魔断并发解析中，剩余解析:\\\" + count);\\n\\n                function isDm(ret) {\\n                    if (!ret) {\\n                        return true\\n                    }\\n                    return hasDm(ret.split('#')[0].split(';')[0], dmUrls)\\n                }\\n\\n                be(tasks, {\\n                    func: function (obj, id, error, ret) {\\n                        log(\\\"监听到任务\\\" + id + '已结束,error:' + error + ',ret:' + ret);\\n                        ret = ret || '';\\n                        parseRet.push({\\n                            task: id,\\n                            ret: ret,\\n                            name: tasks.filter(it => it.id === id)[0].param.name\\n                        });\\n\\n                        if (singleBack) {//吊毛模式开始的话,判断ret有效性\\n                            log('任务' + id + '结果是吊毛?' + isDm(ret));\\n                            if (!isDm(ret) && ParseS.isVideo(ret.split('#')[0].split(';')[0])) {\\n                                hideLoading();\\n                                log('吊毛模式中断解析并返回视频' + ret);\\n                                return 'break'\\n                            }\\n                        }\\n                        count -= 1; //完成了任务，任务数量-1\\n                        //log(obj);\\n                        if (count > 0) {\\n                            showLoading(\\\"魔断并发解析中，剩余解析:\\\" + count)\\n                        } else {\\n                            hideLoading();\\n                        }\\n                    },\\n                    param: {//传到监听函数的obj参数里\\n                        hi: \\\"ccc\\\",\\n                    }\\n                });//执行多任务\\n                // let valuable = parseRet.filter(it=>/m3u8|mp4/.test(it.ret));\\n                log(\\\"多任务执行结果数:\\\" + parseRet.length);\\n                let valuable = [];\\n                parseRet.forEach((it)=>{\\n                    if(it.ret){\\n                        if(/names/.test(it.ret)&&/urls/.test(it.ret)){\\n                            log('尝试聚合解析解包:'+it.ret);\\n                            try {\\n                                let rets = JSON.parse(it.ret.replace(/#isVideo=true#/g,''));\\n                                rets.names.forEach((name,idex)=>{\\n                                    valuable.push({\\n                                        name:name,\\n                                        ret:rets.urls[idex],\\n                                        task:it.task,\\n                                    });\\n                                });\\n                            }catch (e) {\\n                                log('解包发生错误:'+e.message);\\n                            }\\n                        }else if(ParseS.isVideo(it.ret.split('#')[0].split(';')[0])){\\n                            valuable.push(it);\\n                        }else if(it.ret.startsWith('video://')){\\n                            valuable.push(it);\\n                        }\\n                    }\\n                });\\n                // let valuable = parseRet.filter(it => it.ret && ParseS.isVideo(it.ret.split('#')[0].split(';')[0]));\\n                valuable = valuable.filter(it => !isDm(it.ret));//过滤吊毛视频\\n                log('多任务顺序执行有效结果:' + JSON.stringify(valuable));\\n                if (valuable.length > 1) {//多线路\\n                    valuable = sortByKey(valuable, 'task', true);//升序排列\\n                    let urls = valuable.map(it => it.ret);//取出链接,缓存前的\\n                    if (getVar('dp.cacheVideo', 'true') === 'true' && parseInt(getAppVersion()) >= 2255) {//开始缓存\\n                        log(\\\"尊敬的魔断用户，视频缓存已启用，请尽情享受看剧时光\\\");\\n                        let videosCache = urls.map((it) => {\\n                            let headers = {};\\n                            if (it.split(\\\";\\\").length > 1) {\\n                                let head = it.split(';')[1];\\n                                if (/@/.test(head) && /{|}/.test(head)) {\\n                                    //head = head.replace(/{|}/g,'');\\n                                    head = head.split(\\\"{\\\")[1].split(\\\"}\\\")[0];\\n                                    head = head.split('&&');\\n                                    for (let i in head) {\\n                                        let key = head[i].split('@')[0];\\n                                        let value = head[i].split('@')[1].replace(/;/, '；；');\\n                                        headers[key] = value;\\n                                    }\\n                                }\\n                            }\\n                            return {\\n                                url: it.split(\\\";\\\")[0].split(\\\"#\\\")[0],\\n                                options: {\\n                                    headers: headers\\n                                }\\n                            }\\n                        });\\n                        var data = batchCacheM3u8(videosCache);\\n                        data = data.map((it, id) => {\\n                            let extra = \\\"\\\";\\n                            if (urls[id].split(\\\";\\\").length > 1) {\\n                                extra = \\\";\\\" + urls[id].split(\\\";\\\")[1];\\n                            } else if (urls[id].split(\\\"★\\\").length > 1) {\\n                                extra = \\\"★\\\" + urls[id].split(\\\"★\\\")[1];\\n                            }\\n                            if (it + \\\"\\\" !== \\\"null\\\") {\\n                                return it + extra\\n                            } else {\\n                                return urls[id]\\n                            }\\n                        });\\n                        urls = data\\n                    }\\n                    // log('排序完毕后结果:'+JSON.stringify(valuable));\\n                    let names = valuable.map(it => it.name);\\n                    let headers = getMyHeaders(urls);\\n                    urls = getMyUrls(urls);\\n                    if(MyJiexi.autoMode === '嗅探优先'){\\n                        urls = urls.concat(getMyPlayUrlList());\\n                        names = names.concat(extra.nameList);\\n                        // headers = headers.concat(extra.nameList.map((it)=>{return {}}));\\n                    }\\n                    return JSON.stringify({urls: urls, headers: headers, names: names});\\n\\n                } else if (valuable.length === 0) {\\n                    if (extra.nameList.length < 1) {\\n                        hideLoading();\\n                        return 'toast://芭比Q了,多任务免嗅解析全军覆没并且没有可用的json|x5解析了'\\n                    }\\n                    showLoading(\\\"魔断多任务免嗅失败,尝试json|x5\\\");\\n                    //排除第一个\\n                    let extra2 = {\\n                        nameList: extra.nameList,\\n                        playUrlList: extra.playUrlList.slice(1),\\n                    }\\n                    if(MyJiexi.autoMode === '嗅探优先'){\\n                        return JSON.stringify({\\n                            urls: getMyPlayUrlList(),\\n                            names: extra.nameList\\n                        });\\n                    }else{\\n                        return ParseS.defaultParseWeb ? ParseS.defaultParseWeb(extra.playUrlList[0], timeout, extra2) : extra.playUrlList[0];\\n                    }\\n                    // log(extra.playUrlList[0]);\\n                    // log(extra2);\\n\\n                } else {\\n                    // 免嗅后只有一个结果,嗅探优先自动拼x5和json, 顺序优先自动返回一个播放链接\\n                    if(MyJiexi.autoMode === '嗅探优先') {\\n                        let urls = valuable.map(it => it.ret);//取出链接,缓存前的\\n                        let names = valuable.map(it => it.name);\\n                        let headers = getMyHeaders(urls);\\n                        urls = getMyUrls(urls);\\n                        names = names.concat(extra.nameList);\\n                        urls = urls.concat(getMyPlayUrlList());\\n                        // headers = headers.concat(extra.nameList.map((it)=>{return {}}));\\n                        return JSON.stringify({\\n                            urls: urls,\\n                            names: names,\\n                            headers:headers\\n                        });\\n                    }else{\\n                        return valuable[0].ret\\n                    }\\n                }\\n            }else{ // 纯video://分支\\n                if (extra.nameList.length < 1) {\\n                    hideLoading();\\n                    return 'toast://芭比Q了,多任务免嗅解析全军覆没并且没有可用的json|x5解析了'\\n                }\\n                log(\\\"魔断多任务免嗅失败,尝试json|x5\\\");\\n                return JSON.stringify({\\n                    urls: getMyPlayUrlList(),\\n                    names: extra.nameList\\n                });\\n            }\\n        }\\n        if(/^hiker:|^toast:|^rule:|^x5Rule:|^webRule:|^select/.test(url)){\\n            return url;\\n        }\\n        if(!url&&!/^http/.test(vipUrl)){\\n            return 'toast://魔断解析失败>'+vipUrl\\n        }\\n        // log(vipUrl+'免嗅探结果:'+url);\\n        if (/^\\\\//.test(url)) {\\n            url = 'https:' + url\\n        }\\n        // 魔断免嗅截取\\n        // if (/=http/.test(url)) {\\n        //     url = /&url=/.test(url) ? url : 'http' + decodeURIComponent(url.split('=http')[1]);\\n        // }\\n        /*if(url.match(/mgtv.com/g)=='mgtv.com'){\\n            url = url + ';{Referer@https://www.mgtv.com}';\\n        } else */\\n        if (/\\\\.flv/.test(url)&&!/User-Agent/.test(url)) {\\n            url = url + ';{User-Agent@app&&Referer@' + vipUrl + '}';\\n        }\\n        if (url === '' || url === vipUrl) {\\n            return vipUrl;\\n        } else if(!/#isVideo=true#/.test(url)){\\n            return url + '#isVideo=true#';\\n        }else{\\n            return url\\n        }\\n    } else if (typeof ParseS[str] == 'string'&&ParseS[str].match(/http.*?=/)) {\\n        // log(\\\"断插开始通用执行免嗅 defaultParseWeb:\\\"+timeout);\\n        //log(\\\"默认x5\\\"+ParseS.defaultParseWeb);\\n        if(withBatch){ // 速度优先\\n            if(Array.isArray(extra.playUrlList)&&extra.playUrlList.length>0){\\n                extra.playUrlList = extra.playUrlList.filter(it=>it!==(ParseS[str]||str) + vipUrl);\\n                let nameList = extra.nameList;\\n                nameList.unshift(str);\\n                extra.nameList=unique2(nameList);\\n                extra.playUrlList = unique2(extra.playUrlList);\\n            }\\n        }else{\\n            extra = {}\\n        }\\n        return ParseS.defaultParseWeb?ParseS.defaultParseWeb((ParseS[str]||str) + vipUrl,timeout,extra):(ParseS[str]||str) + vipUrl;\\n    } else if(typeof(str)==='string'&&str.length>1&&(typeof ParseS[str]=='undefined'||!ParseS[str])&&!/^http/.test(str)){\\n        return 'toast://请先进行断插配置确保该解析存在!\\\\n检测到无效的解析配置:'+str;\\n    }else {\\n        return ParseS.defaultParse(str + vipUrl,timeout);\\n    }\\n}\\n\\nvar playParse = {\\n    player_xx: function(jurl, Label) {\\n        return $(jurl).lazyRule((k) => {\\n            var jsUrl = JSON.parse(fetch(getVar('oldConfig'))).cj;\\n            var Label = k;\\n            var fa = ['letv', 'pptv', 'qq', 'youku', 'qiyi', 'iqiyi', 'mgtv', 'bilibili', 'sohu', 'migu', 'm1905', 'vip'];\\n            var html = parseDom(request(input), Label);\\n            eval(html.replace(/player_.*?={/, 'pdata={'));\\n            eval(fetch(jsUrl));\\n            if (pdata.url.substr(0, 8).match(/JT..JT../)) {\\n                pdata.url = base64Decode(pdata.url);\\n            }\\n            if (pdata.url.substr(0, 8).match(/%..%../)) {\\n                pdata.url = unescape(pdata.url);\\n            }\\n            if (fa.includes(pdata.from)) {\\n                return aytmParse(pdata.url);\\n            } else {\\n                return pdata.url + '#isVideo=true#';\\n            }\\n        }, Label)\\n    }\\n};\\nfunction mzPopup() {\\n    /*\\n    if (getVar(\\\"ijk-tx\\\", \\\"\\\") == \\\"1\\\") {\\n        setItem(\\\"tixing\\\", \\\"1\\\")\\n        clearVar(\\\"ijk-tx\\\")\\n    }\\n    if (getItem(\\\"tixing\\\", \\\"\\\") == \\\"\\\") {\\n        confirm({\\n            title: '免责声明',\\n            content: '本程序不提供视频解析服务\\\\n所有内容均从用户分享中收集\\\\n仅供测试和学习交流\\\\n\\\\n确定即认可，不再提醒',\\n            confirm: $.toString(() => {\\n                putVar(\\\"ijk-tx\\\", \\\"1\\\");\\n                refreshPage(false);\\n                return \\\"toast://点击了确认\\\"\\n\\n            })\\n        })\\n    }\\n     */\\n}\\n/*\\nif (!getVar(\\\"tixing\\\")) {\\n    mzPopup();\\n    putVar('tixing','ok');\\n}\\n*/\\nfunction saveButton(content,name) {\\n    name = name||'';\\n    var data = content.split('★★★');\\n    if (data.length === 2) {\\n        var _dt = parsePaste(data[0]);\\n        content = _dt.substr(0, 6) !== 'error:' ? _dt : '';\\n    }\\n    data = content.split('★');\\n    var type = data[0];\\n    var arrList = [];\\n    var objCode = {};\\n    if (data.length > 2 && data[0] !== '直链') {\\n        var objKey = data[1];\\n        var objValue = data[2];\\n        if (type === 'MyParseS') {\\n            objValue = base64Decode(objValue);\\n        }\\n        if (objValue.split('function').length > 1) {\\n            eval('objValue=' + objValue);\\n        }\\n        arrList.splice(0, 0, objKey); //添加项目非删除\\n        objCode[objKey] = objValue;\\n\\n    } else if (type === '直链') {\\n        arrList = data;\\n        arrList.splice(0, 1);\\n    } else {\\n        arrList = null;\\n    }\\n    if (arrList != null) {\\n        var parseRoute = getVar('parseRoute');\\n        eval('var json =' + fetch(parseRoute));\\n        Array.prototype.remove = function(val) {\\n            let index = this.indexOf(val);\\n            if (index > -1) {\\n                this.splice(index, 1);\\n            }\\n        };\\n        if(name){//删除名称列表和代码\\n            json.title.remove(name);\\n            delete json.codes[name];\\n        }\\n        arrList = arrList.concat(json.title);\\n        json.title = Array.from(new Set(arrList));\\n        Object.assign(json.codes, objCode);\\n        if (type === '测试') {\\n            eval('var config =' + fetch(getVar('oldConfig')));\\n            eval(fetch(config.cj));\\n            if (typeof ParseS[data[1]] == \\\"function\\\") {\\n                return ParseS[data[1]](data[2]);\\n            } else {\\n                return ParseS.defaultParseWeb(ParseS[data[1]] + data[2]);\\n            }\\n        } else {\\n            writeFile(parseRoute, $.stringify(json));\\n            return \\\"toast://已保存内容\\\";\\n        }\\n    } else {\\n        return \\\"toast://无法识别这个内容呢\\\"\\n    }\\n}\\n// 以下代码千万不要放出来否则报错\\nif (getItem('updateDate') != updateDate) {\\n// if (true) {\\n    // 把function变成string\\n    let functionCode = saveButton + ';'+mzPopup;\\n    // writeFile('hiker://files/cache/plscParse.html', fetch(_mySet.ckLink + 'plscParse.html'));\\n    setItem('myFunction', functionCode);\\n    setItem('updateDate', updateDate);\\n}\\nvar bjItem = {\\n    hfPlugin: function(parseRoute) {\\n        return $('#noLoading#').lazyRule((k) => {\\n            if (fileExist(k)) {\\n                var cjcache = getVar('cjCache');\\n                eval('var json =' + fetch(k));\\n                json.settings.cj = cjcache;\\n                writeFile(k, $.stringify(json));\\n                var oldRoute = getVar('oldConfig');\\n                var oldConfig = json.settings;\\n                oldConfig.cj = cjcache;\\n                writeFile(oldRoute, $.stringify(oldConfig));\\n                refreshPage(false);\\n                return 'toast://恢复成功';\\n            } else {\\n                return 'toast://需要先拉取列表'\\n            }\\n        }, parseRoute)\\n    },\\n    pullCode: function(k) {\\n        return $('#noLoading#').lazyRule((k) => {\\n            var pullMode = k[0];\\n            var parseRoute = k[1];\\n            var parseFile = fetch(parseRoute);\\n            if (!parseFile) {\\n                var settings = fetch(getVar('oldConfig'));\\n                settings = !settings ? {} : JSON.parse(settings);\\n                var json = {};\\n                json.settings = settings;\\n                json.title = [];\\n                json.codes = {};\\n            } else {\\n                eval('var json =' + parseFile);\\n            }\\n            var parseTitle = [];\\n            var parseCode={};\\n            var cjLink = getVar('pluginLink');\\n            try {\\n                if(/@base64:\\\\/\\\\//.test(cjLink)){\\n                    eval(base64Decode(cjLink.split('@base64://')[1]));\\n                }else if(/插件名/.test(cjLink)){\\n                    let realLink = cjLink.split('插件名')[0].replace(/[\\\\s]/g,'');\\n                    log('解析云剪切板:'+realLink);\\n                    let yPaste = parsePaste(realLink);\\n                    if(/@base64:\\\\/\\\\//.test(yPaste)){\\n                        try {\\n                            eval(base64Decode(yPaste.split('@base64://')[1]));\\n                            if(typeof ParseS==='undefined'){\\n                                return 'toast://拉取个鸡毛插件,里面连ParseS对象都没有!'\\n                            }\\n                        }catch (e) {\\n                            return 'toast://鸡毛插件执行报错:\\\\n'+e.message;\\n                        }\\n                    }else{\\n                        return 'toast://未能识别云剪切板中的内容:\\\\n'+yPaste.substring(0,100);\\n                    }\\n                } else if (cjLink === 'Q神') {\\n                    let jiexi = fetch('hiker://files/jiexi/jiexi.txt').split('\\\\n');\\n                    for (i in jiexi) {\\n                        let title=jiexi[i].split('&&')[0];\\n                        let code=jiexi[i].split('&&')[1];\\n                        parseTitle.push(title);\\n                        parseCode[title]=code;\\n                    }\\n                }\\n                // }else if(/^#[a-zA-Z0-9]{2,10}$/.test(cjLink)){//福利口令2到10位\\n                else if(/^#[\\\\S]{2,10}$/.test(cjLink)){//福利口令2到10位任意非空字符串\\n                    const {taskCall, taskRun,taskReq} = $.require(\\\"hiker://page/taskCall?rule=道长仓库Pro\\\");\\n                    // log('开始执行任务仓库获取断念插件福利口令');\\n                    let result = taskCall(17,'DnFuli',[cjLink]);\\n                    if (result.status === 0) {\\n                        let ret = JSON.parse(result.result);\\n                        // log(ret);\\n                        if(ret.opt==='error'){\\n                            return 'toast://'+ret.msg;\\n                        }else if(ret.opt==='url'){\\n                            let html = fetch(ret.ret);\\n                            let arr = html.includes('http')? html:base64Decode(html);\\n                            let jiexi = arr.match(/[\\\\S]*?,.*?[\\\\s]/g);\\n                            for (let i in jiexi) {\\n                                let title=jiexi[i].split(',')[0];\\n                                let code=jiexi[i].split(',')[1].split(\\\"\\\\n\\\")[0];\\n                                if(!/^http|function/.test(code)&&code.length>20){//base64编码的函数\\n                                    code = base64Decode(code);\\n                                }\\n                                parseTitle.push(title);\\n                                parseCode[title]=/function/.test(code)?eval(code):code;\\n                            }\\n                        }else if(ret.opt==='jx'){\\n                            if(/[\\\\S]*?,http[\\\\S]/.test(ret.ret)){\\n                                let title = ret.ret.split(',')[0];\\n                                let code = ret.ret.split(',')[1].split('\\\\n')[0];\\n                                parseTitle.push(title);\\n                                parseCode[title]=code;\\n                            }else if(/^http/.test(ret.ret)){\\n                                let title = cjLink.split('#')[1];\\n                                let code = ret.ret.split('\\\\n')[0];\\n                                parseTitle.push(title);\\n                                parseCode[title]=code;\\n                            }else{\\n                                return 'toast://未知的福利:\\\\n'+ret.ret;\\n                            }\\n                        }else if(ret.opt==='vipJx'){\\n                            let title = cjLink.split('#')[1];\\n                            let code = ret.ret;\\n                            // log(code);\\n                            parseTitle.push(title);\\n                            parseCode[title]=/function/.test(code)?eval(code):code;\\n                        }\\n                    }else{\\n                        return 'toast://仓库非最新版或者福利社功能开发中'\\n                    }\\n                }else if(cjLink==='断插'){\\n                    eval(fetch(\\\"hiker://files/cache/Parse_Dn.js\\\"));\\n                    parseTitle=Object.keys(ParseS);\\n                }else if(/^hiker:\\\\/\\\\/|^file:\\\\/\\\\/|^http|^\\\\/storage\\\\/|^\\\\/sdcard\\\\//.test(cjLink)){\\n                    if(/^\\\\/storage\\\\/|^\\\\/sdcard\\\\//.test(cjLink)){\\n                        cjLink = 'file://'+cjLink;\\n                    }\\n                    eval(fetch(cjLink));\\n                    parseTitle=Object.keys(ParseS);\\n                }else{\\n                    return 'toast://拉取口令有误'\\n                }\\n            } catch (e) {\\n                log(e.message);\\n            }\\n            var jxJudge = typeof ParseS == 'object';\\n            var lbJudge = typeof(parseTitle) == 'object';\\n            if (jxJudge || lbJudge) {\\n                // if (pullMode === '列表') {\\n                //     if (!lbJudge) {\\n                //         parseTitle = Object.keys(ParseS);\\n                //     }\\n                //     var newParseTitle = json.title.concat(parseTitle);\\n                //     json.title = Array.from(new Set(newParseTitle));\\n                // }\\n                // 不管拉取代码还是列表都要把列表拉了\\n                if (!lbJudge) {\\n                    parseTitle = Object.keys(ParseS);\\n                    log(parseTitle);\\n                }\\n                var scObject = [\\\"CityIP\\\", \\\"pcUA\\\", \\\"cacheM3u8\\\",\\\"isVideo\\\",\\\"timeOut\\\",\\\"源码匹配\\\", \\\"defaultParse\\\",\\\"defaultParseWeb\\\",\\\"maoss\\\", \\\"LLQ\\\",\\\"parseLc\\\"];\\n                parseTitle = parseTitle?parseTitle.filter(it=>!scObject.includes(it)):[];\\n                var newParseTitle = json.title.concat(parseTitle);\\n                json.title = Array.from(new Set(newParseTitle));\\n\\n                if (pullMode === '代码') {\\n                    if (typeof originalParseS == 'object') {\\n                        for (let i in scObject) {\\n                            delete originalParseS[scObject[i]];\\n                        }\\n                        // originalParseS =originalParseS.filter(it=>!scObject.includes(Object.getOwnPropertyNames(it)[0]));\\n                        Object.assign(json.codes, originalParseS);\\n                    } else {\\n                        if(typeof(ParseS)==\\\"undefined\\\"){\\n                            Object.assign(json.codes, parseCode);\\n                            //return \\\"toast://没有代码，不可拉取\\\"\\n                        }else{\\n                            Object.assign(json.codes, ParseS);\\n                        }\\n                    }\\n                }\\n                //var newFile = tools.toJSON(json);//自定义stringify函数，带有转义字符\\n                var newFile = $.stringify(json); //JSON.parse会报错\\n                writeFile(parseRoute, newFile);\\n                refreshPage(false);\\n                return 'toast://拉取' + pullMode + '成功';\\n            } else {\\n                return 'toast://未获取到对象';\\n            }\\n        }, [k, _mySet.parseRoute])\\n    },\\n    pullScript: function(cj, x5) {\\n        return $('#noLoading#').lazyRule((k) => {\\n            var cjFrom = 'hiker://page/Parse_Dn.js?rule=MyFieldᴰⁿ';\\n            var x5From = 'hiker://page/Parse_Dn.html?rule=MyFieldᴰⁿ';\\n            try {\\n                var cjFile = JSON.parse(fetch(cjFrom)).rule;\\n                var x5File = JSON.parse(fetch(x5From)).rule;\\n                writeFile(k[0], cjFile);\\n                writeFile(k[1], x5File);\\n                clearVar('jxOldV');\\n                clearVar('jxNewV');\\n                refreshPage(false);\\n                return 'toast://拉取成功';\\n            } catch (e) {\\n                return 'toast://未成功获取内容';\\n            }\\n        }, [cj, x5])\\n    },\\n    xlSelect: function(bianji, lbLength) {\\n        return \\\"select://\\\" + JSON.stringify({\\n            options: ['‘‘’’<span style=\\\"color:red\\\" title=\\\"删除||' + bianji + '\\\">删 除', '‘‘’’<span style=\\\"color:#F57474\\\" title=\\\"隐藏||' + bianji + '\\\">隐 藏', '‘‘’’<span style=\\\"color:#FF8000\\\" title=\\\"修改||' + bianji + '\\\">修 改', '‘‘’’<span style=\\\"color:#098AC1\\\" title=\\\"置顶||' + bianji + '0' + '\\\">置 顶', '‘‘’’<span style=\\\"color:#098AC1\\\" title=\\\"移动||' + bianji + '\\\">移 动', '‘‘’’<span style=\\\"color:#098AC1\\\" title=\\\"置底||' + bianji + lbLength + '\\\">置 底', '‘‘’’<span style=\\\"color:#04B431\\\" title=\\\"分享||' + bianji + '\\\">地板分享', '‘‘’’<span style=\\\"color:#04B431\\\" title=\\\"云分享||' + bianji + '\\\">云板分享'],\\n            col: '2',\\n            js: $.toString(() => {\\n                var parseRoute = getVar('parseRoute');\\n                eval('var json =' + fetch(parseRoute));\\n                var newInput = parseDomForHtml(input, 'span&&title').split('||');\\n                // 修改,迪迪,0   操作类型,名称,索引\\n                var type = newInput[0];\\n                var name = newInput[1];\\n                var num = newInput[2];\\n                var num2 = newInput[3];\\n                switch (type) {\\n                    case \\\"删除\\\":\\n                        let k = [name, num];\\n                        // 总感觉筛选或者搜索后，由于num的位置不对可能会删除错,事实如此,已修?\\n                        return $(\\\"即将删除: \\\" + name).confirm((k) => {\\n                            var name = k[0];\\n                            var num = k[1];\\n                            var parseRoute = getVar('parseRoute');\\n                            eval('var json =' + fetch(parseRoute));\\n                            if (json.codes.hasOwnProperty(name)) {\\n                                delete json.codes[name];\\n                            }\\n                            num = json.title.indexOf(name); //这样才会得到正确的索引\\n                            json.title.splice(num, 1);\\n                            writeFile(parseRoute, $.stringify(json));\\n                            refreshPage(false);\\n                            return \\\"toast://已将〖\\\" + name + \\\"〗删除\\\";\\n                        }, k);\\n                    case \\\"隐藏\\\":\\n                        return $(\\\"hiker://empty#noLoading#\\\").lazyRule((k) => {\\n                            var name = k[0];\\n                            var num = k[1];\\n                            var parseRoute = getVar('parseRoute');\\n                            eval('var json =' + fetch(parseRoute));\\n                            if (json.codes.hasOwnProperty(name)) {\\n                                num = json.title.indexOf(name); //这样才会得到正确的索引\\n                                json.title.splice(num, 1);\\n                                writeFile(parseRoute, $.stringify(json));\\n                                refreshPage(false);\\n                                return \\\"toast://已将〖\\\" + name + \\\"〗隐藏\\\";\\n                            } else {\\n                                return \\\"toast://可能是个网址, 您可选择删除\\\";\\n                            }\\n                        }, [name, num]);\\n                    case \\\"修改\\\":\\n                        //if (json.codes[name]) {\\n                        var nCode = name;\\n                        var titles = json.title;\\n                        var nName = \\\"这是名称\\\";\\n                        if (json.codes[name]) {\\n                            nCode = json.codes[name].toString();\\n                            nName = name;\\n                        }\\n                        return $(\\\"hiker://empty#noRecordHistory#\\\").rule((k,titles) => {\\n                            var d = [];\\n                            eval(getItem('myFunction'));\\n                            var name = k[0];\\n                            var code = k[1];\\n                            d.push({\\n                                title: '保 存',\\n                                url: saveButton + \\\"saveButton(getVar('input_edit'),name);back();\\\",\\n                                col_type: \\\"input\\\",\\n                                desc: \\\"建议按默认的代码格式修改哦\\\",\\n                                extra: {\\n                                    onChange: \\\"putVar('input_edit', input)\\\",\\n                                    type: \\\"textarea\\\",\\n                                    height: \\\"-1\\\",\\n                                    highlight: true,\\n                                    titleVisible: false,\\n                                    defaultValue: '修改★' + name + '★' + code,\\n                                }\\n                            });\\n                            d.push({\\n                                title: '‘‘’’<small><span style=\\\"color:#6EB897\\\">格式为：操作类型★标题★function(){自定义内容}<br>请勿填入其他格式',\\n                                url: $('#noLoading#').lazyRule((saveButton,name,titles) => {\\n                                    let tmpAr = getVar('input_edit').split('★');\\n                                    if(tmpAr.length<2){\\n                                        return 'toast://修改格式有误，访问被拒绝'\\n                                    }\\n                                    let newName = tmpAr[1];\\n                                    if(newName!==name&&titles.includes(newName)){\\n                                        return $('检测到同名接口:'+newName+',是否覆盖?').confirm((saveButton,name)=>{\\n                                            let code = saveButton(getVar('input_edit'),name);\\n                                            back();\\n                                            return 'toast://已保存修改\\\\n请自行检测覆盖后的内容';\\n                                        },saveButton,name);\\n                                    }else{\\n                                        let code = saveButton(getVar('input_edit'),name);\\n                                        back();\\n                                        return 'toast://已保存修改';\\n                                    }\\n                                    // if(typeof(code)==='string'&&code.length>2){\\n                                    //     return code\\n                                    // }else{\\n                                    //     return 'toast://已保存修改';\\n                                    // }\\n                                }, saveButton,name,titles),\\n                                desc: '‘‘’’<big><big><span style=\\\"color:#298A08\\\">保 存',\\n                                col_type: 'text_center_1'\\n                            });\\n                            setResult(d);\\n                        }, [nName, nCode],titles) //[name, json.codes[name].toString()])\\n                    /*} else {\\n                        return \\\"toast://只有网址或者标题, 不支持修改\\\"\\n                    }*/\\n                    case \\\"置顶\\\":\\n                    case \\\"置底\\\":\\n                        eval('var json =' + fetch(parseRoute));\\n                        num = json.title.indexOf(name); //这样才会得到正确的索引\\n                        if(num>-1){\\n                            var item = json.title.splice(num, 1);\\n                            json.title.splice(num2, 0, item[0]);\\n                            writeFile(parseRoute, $.stringify(json));\\n                            refreshPage(false);\\n                        }else{\\n                            return 'toast://没找到:'+name;\\n                        }\\n                        break;\\n                    case \\\"移动\\\":\\n                        return $('hiker://empty#noLoading#').lazyRule((k) => {\\n                            putVar('bianji', '移动#' + k);\\n                            refreshPage(false);\\n                            return input;\\n                        }, num);\\n                    case \\\"分享\\\":\\n                    case \\\"云分享\\\":\\n                        if (json.codes[name]) {\\n                            var parseText = typeof json.codes[name] == 'function' ? $.stringify(json.codes[name]) : json.codes[name];\\n                            parseText = 'MyParseS★' + name + '★' + base64Encode(parseText);\\n                        } else {\\n                            var parseText = '直链★' + json.title[num];\\n                        }\\n                        if (type == '云分享' && parseText.substr(0, 8) == 'MyParseS') {\\n                            parseText = sharePaste(parseText);\\n                            return parseText.substr(0, 6) != 'error:' ? 'copy://' + parseText + '\\\\n★★★\\\\n' + 'MyParseS：' + name : 'toast://分享失败!!云剪贴板可能挂了';\\n                        } else {\\n                            return 'copy://' + parseText;\\n                        }\\n                    default:\\n                        return 'toast://暂不支持';\\n                } //switch的\\n            }) //String的\\n        }) //stringify的\\n    },\\n    xjParse: function() {\\n        return $(\\\"hiker://empty#noHistory#\\\").rule(() => {\\n            var d = [];\\n            eval(getItem('myFunction'));\\n            d.push({\\n                title: '保 存',\\n                url: saveButton + \\\"saveButton(input);back();clearVar('input_add')\\\",\\n                col_type: \\\"input\\\",\\n                desc: \\\"输入正确格式内容\\\",\\n                extra: {\\n                    onChange: 'putVar(\\\"input_add\\\", input)',\\n                    type: \\\"textarea\\\",\\n                    height: \\\"-1\\\",\\n                    highlight: true,\\n                    titleVisible: false,\\n                    defaultValue: getVar('input_add'),\\n                }\\n            });\\n            d.push({\\n                title: '‘‘’’<small><span style=\\\"color:#6EB897\\\">按描述诉格式输入, 请勿填入其他格式<br>本地口令: 操作类型★名称★代码<br>云口令: 链接★★★名称; 纯网址: 直链★url1★url2',\\n                desc: '‘‘’’<big><big><span style=\\\"color:#298A08\\\">保 存',\\n                url: $('noLoading').lazyRule((saveButton) => {\\n                    return saveButton(getVar('input_add'));\\n                }, saveButton),\\n                col_type: 'text_center_1'\\n            });\\n            setResult(d);\\n        })\\n    },\\n    ydParse: function(BJmode, i) {\\n        return $('#noLoading#').lazyRule((k) => {\\n            var A = k[0].split('#')[1];\\n            var B = k[1];\\n            var parseRoute = getVar('parseRoute');\\n            eval('var json =' + fetch(parseRoute));\\n            var item = json.title.splice(A, 1); // 1: 标记开始位置，2: 删除到哪个位置\\n            json.title.splice(B, 0, item[0]); // 1: 同上，2: 0表示不删除，3: 添加对象\\n            writeFile(parseRoute, $.stringify(json));\\n            clearVar('bianji');\\n            refreshPage(false);\\n            return 'hiker://empty';\\n        }, [BJmode, i])\\n    },\\n    plscParse: function() {\\n        return $('hiker://empty#noRecordHistory#').rule(() => {\\n            var d = [];\\n            d.push({\\n                title: '批量修改/删除解析',\\n                desc: 'auto&&float',\\n                // url: 'file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/cache/plscParse.html',\\n                url: _mySet.batchRoute,\\n                col_type: 'x5_webview_single'\\n            })\\n            setResult(d);\\n        })\\n    }\\n};\\n\\nfunction setParse() {\\n    $.require(\\\"hiker://page/Route?rule=MyFieldᴰⁿ\\\").setParse();\\n}\"},{\"name\":\"Parse_Dn-vue.html\",\"path\":\"Parse_Dn.html\",\"rule\":\"<!DOCTYPE html>\\n<html>\\n<head>\\n    <meta charset=\\\"utf-8\\\">\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no\\\" />\\n    <title>Parse_Dn_vue</title>\\n    <script>\\n        const vuePath = 'hiker://files/rules/dzHouse/js/vue.js';\\n        if(typeof(fba)=='undefined'||!fba){\\n            var fba = fy_bridge_app;\\n        }\\n        try {\\n            if(typeof(request)=='undefined'||!request){\\n                eval(fba.getInternalJs());\\n            }\\n            window.request = window.request00 || window.request;\\n            // fba.log(vuePath);\\n            if(!request(vuePath)){\\n                fba.writeFile(vuePath,request('http://hiker.nokia.press/hikerule/rulelist.json?id=1823'));\\n            }\\n            try {\\n                eval(fba.fetch(vuePath));\\n            }catch (e) {\\n                // console.log(e.message);\\n                fba.log(e.message);\\n            }\\n            // fba.log('加载vue组件完毕');\\n        }catch (e) {\\n            alert(e.message);\\n        }\\n    </script>\\n    <!--    <script src=\\\"https://unpkg.com/vue@next\\\"></script>-->\\n    <!--    <script src=\\\"file:///storage/emulated/0/Android/data/com.example.hikerview/files/Documents/rules/dzHouse/js/vue.js\\\"></script>-->\\n    <style>\\n        body {\\n            margin: 0 5px 0 5px;\\n            padding: 0 0px 0 0px;\\n            /*            background: #F9F0DA;*/\\n            font-weight: 0;\\n            font-family: \\\"Microsoft YaHei\\\",\\\"宋体\\\",\\\"Segoe UI\\\", \\\"Lucida Grande\\\", Helvetica, Arial,sans-serif, FreeSans, Arimo;\\n        }\\n        #app{\\n            margin-top:-10px;\\n        }\\n        #tips{\\n            margin-top:-10px;\\n            margin-bottom:5px;\\n        }\\n        .fung{\\n            text-align:center\\n        }\\n        div.box {\\n            margin-top:-1px;\\n            height: 43px;\\n            line-height: 20px;\\n        }\\n        /*输入框尺寸*/\\n        form {\\n            background: transparent;\\n            position: relative;\\n            width: 100%;\\n        }\\n\\n        input, label, select {\\n            border: none;\\n            outline: none;\\n        }\\n        /*字体位置*/\\n        input {\\n            width: 77%;\\n            height: 32px;\\n            padding-left: 66px;\\n            padding-right: 0px;\\n        }\\n\\n        label {\\n            text-align:center;\\n            line-height: 43px;\\n            height: 40px;\\n            width: 60px;\\n            cursor: pointer;\\n            position: absolute;\\n        }\\n\\n        /*小框*/\\n        .bar label {\\n            /*background: #D06B6C;*/\\n            border-radius: 5px 555px 555px 5px;\\n            width: 60px;\\n            font-size: 13px;\\n            top: 0;\\n            left: 3px;\\n        }\\n\\n        /*输入框样式*/\\n        .bar input {\\n            /*border-radius: 5px 555px 555px 5px;\\n             */\\n            border-radius: 4px;\\n        }\\n\\n        /*列表*/\\n        select {\\n            text-align:center;\\n            line-height:40px;\\n            height: 40px;\\n            width: 20px;\\n            cursor: pointer;\\n            position: absolute;\\n        }\\n\\n        /*列表*/\\n        .lieb select{\\n            /*border-radius: 4px;*/\\n            border-radius: 555px 5px 5px 555px;\\n            width: 80px;\\n            text-align:center;\\n            font-size: 13px;\\n            top: 0;\\n            right: 2px;\\n        }\\n\\n        /*头像*/\\n        .round_icon{\\n            width: 40px;\\n            height: 40px;\\n            display: flex;\\n            border-radius: 50%;\\n            align-items: center;\\n            justify-content: center;\\n            overflow: hidden;\\n        }\\n    </style>\\n</head>\\n<body>\\n<div class=\\\"fung\\\">\\n    <a style=\\\"float:left;\\\">\\n        <button  :style=\\\"'border: none;border-radius:10px;background: '+themes.closeBtn.background+';width: 80px; font-size: 18px;color: '+themes.closeBtn.color\\\" onclick=\\\"cancel();\\\">关 闭</button>\\n    </a>\\n    <a class=\\\"btn btn-primary\\\">\\n        <!--        <button  :style=\\\"'border: none;border-radius:10px;background: '+themes.tipsBtn.background+';width: 120px; font-size: 18px;color: '+themes.tipsBtn.color\\\" @click=\\\"showTips=!showTips\\\">{{showTips?\\\"隐藏提示\\\":\\\"显示提示\\\"}}</button>-->\\n        <button  :style=\\\"'border: none;border-radius:10px;background: '+themes.tipsBtn.background+';width: 120px; font-size: 18px;color: '+themes.tipsBtn.color\\\" @click=\\\"showTips=!showTips\\\" v-text=\\\"showTips?'隐藏提示':'显示提示'\\\"></button>\\n    </a>\\n    <a style=\\\"float:right\\\">\\n        <button :style=\\\"'border: none;border-radius:10px;background: '+themes.saveBtn.background+';width: 80px; font-size: 18px;color: '+themes.saveBtn.color\\\" onclick=\\\"clickme('配 置 已 保 存 ！', 1000, '开');\\\">保 存</button>\\n    </a>\\n\\n</div>\\n<br>\\n<div id=\\\"app\\\">\\n    <h6 id=\\\"tips\\\" v-html=\\\"tips\\\" v-show=\\\"showTips\\\"></h6>\\n    <div class=\\\"box bar\\\" v-for=\\\"option in options\\\">\\n        <form>\\n            <!--            <label type=\\\"submit\\\" :style=\\\"'background:'+themes.barlabel.background+';color:'+themes.barlabel.color\\\">{{ option.name }}</label>-->\\n            <label type=\\\"submit\\\" :style=\\\"'background:'+themes.barlabel.background+';color:'+themes.barlabel.color\\\" v-text=\\\"option.name\\\"></label>\\n            <input :style=\\\"'background:'+themes.barInput.background+';border: 3px solid '+themes.barInput.color\\\" type=\\\"text\\\" onclick=\\\"resetSelect(this.id)\\\" :placeholder=\\\"option.placeholder||placeholder\\\" v-model=\\\"option.value\\\" v-bind:id=\\\"option.id\\\">\\n            <div class=\\\"lieb\\\">\\n                <select :style=\\\"'background:'+themes.select.background+';color:'+themes.select.color\\\" :clearable=\\\"true\\\" size=\\\"2\\\" :id=\\\"option.id+'Select'\\\" :name=\\\"option.id\\\" onchange=\\\"getOption(this.id,this.name)\\\"  v-model=\\\"option.value\\\">\\n                    <!--                    <option v-if=\\\"option.id!=='qju'&&option.id!=='cj'\\\" :value=\\\"sel\\\" :key=\\\"index\\\" v-for=\\\"(sel,index) in mySelect\\\">{{ sel }}</option>-->\\n                    <option v-if=\\\"option.id!=='qju'&&option.id!=='cj'\\\" :value=\\\"sel\\\" :key=\\\"index\\\" v-for=\\\"(sel,index) in mySelect\\\" v-text=\\\"sel\\\"></option>\\n                    <!--                    <option v-else-if=\\\"option.id==='qju'\\\" :value=\\\"sel\\\" :key=\\\"index\\\" v-for=\\\"(sel,index) in ['默认'].concat(mySelect)\\\">{{ sel }}</option>-->\\n                    <option v-else-if=\\\"option.id==='qju'\\\" :value=\\\"sel\\\" :key=\\\"index\\\" v-for=\\\"(sel,index) in ['默认'].concat(mySelect)\\\" v-text=\\\"sel\\\"></option>\\n                    <!--                    <option :value=\\\"sel\\\" :key=\\\"index\\\" v-else v-for=\\\"(sel,index) in cjSel\\\">{{ sel }}</option>-->\\n                    <option :value=\\\"sel\\\" :key=\\\"index\\\" v-else v-for=\\\"(sel,index) in cjSel\\\" v-text=\\\"sel\\\"></option>\\n                </select>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n<div>\\n    <a v-for=\\\"ver in verinfo\\\" style=\\\"float:left;margin-top:1px;margin-right: 20px\\\" v-bind:id='ver.id' onclick=\\\"doOption(this.id)\\\">\\n        <img :src=\\\"ver.avatar\\\" class=\\\"round_icon\\\"  alt=\\\"\\\">\\n        <!--        <span style=\\\"margin-left:10px;line-height:10px;font-size:12px;color: grey;\\\">{{ ver.author }}</span>-->\\n        <span style=\\\"margin-left:10px;line-height:10px;font-size:12px;color: grey;\\\" v-text=\\\"ver.author\\\"></span>\\n    </a>\\n    <a style=\\\"float:right;margin-top:10px;\\\">\\n        <button :style=\\\"'border: none;border-radius:10px;background:'+themes.saveCloseBtn.background+';width: 160px;height:40px; font-size: 18px;color: '+themes.saveCloseBtn.color\\\" onclick=\\\"clickme('配 置 已 保 存 ！', 1000, '关');\\\">保存并关闭界面</button>\\n    </a>\\n</div>\\n<script>\\n    let tips = `提示：<br>①注意插件选项，没有手动导入插件的话不用动它。如设置不当会导致规则无法使用，<br>解决办法：视界打开更多设置→文件管理→点cache→长按MyParseSet.json删除掉；<br>②全局设置如果选择了非默认那么全部的解析会使用这一设置，不想这样的话请填入默认；<br>③绿色保存按钮仅仅保存配置不会关闭设置页面，配置后想保存并关闭设置页面的话请点蓝色按钮；<br>④如果遇到保存按钮点不动或者报错的情况，以下路径挨着删除一遍，然后重新拉取插件，网页再打开此网页[不要先拉代码]。记得备份<br>\\n主插件存放路径: /cache/Parse_Dn.js<br>\\n网页脚本存放路径: /cache/Parse_Dn.html<br>\\n旧断插配置路径:/cache/MyParseSet.json<br>\\n新断插配置路径/rules/DuanNian/MyParse.json<br>\\n主题文件:/cache/MyTheme.json<br>\\n主题文件:/cache/MyTheme.json<br>\\n自动档解析:/cache/MyJiexi.json<br>\\n    ⑤阅读完提示点关闭加载完整设置页面，如出问题无法自行解决点图片进入论坛向我反馈。<br>`;\\n    let placeholder='输入解析名或者URL......';\\n    //#aa96da #fc5185\\n    let themes = {\\n        name:'默认主题',\\n        closeBtn:{color:'#f6f6f6',background:'#aa96da'},\\n        saveBtn:{color:'#F9F0DA',background:'#068006'},\\n        saveCloseBtn:{color:'#F9F0DA',background:'#05BFC5'},\\n        tipsBtn:{color:'#F9F0DA',background:'#05BFC5'},\\n        barlabel:{color:'#F9F0DA',background:'#aa96da'},\\n        barInput:{color:'#aa96da',background:'#ffffd2'},\\n        select:{color:'#F9F0DA',background:'#aa96da'},\\n    };\\n    let themeDef = {\\\"name\\\":\\\"断念原皮\\\",\\\"closeBtn\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#c5464a\\\"},\\\"saveBtn\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#068006\\\"},\\\"saveCloseBtn\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#05BFC5\\\"},\\\"tipsBtn\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#05BFC5\\\"},\\\"barlabel\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#D06B6C\\\"},\\\"barInput\\\":{\\\"color\\\":\\\"#D06B6C\\\",\\\"background\\\":\\\"#F9F0DA\\\"},\\\"select\\\":{\\\"color\\\":\\\"#F9F0DA\\\",\\\"background\\\":\\\"#D06B6C\\\"}};\\n    var themeRoute = \\\"hiker://files/cache/MyTheme.json\\\";\\n    if(!fba.fetch(themeRoute)){\\n        fba.writeFile(themeRoute,JSON.stringify({now_theme:'默认主题',themes:[themes,themeDef]}))\\n    }\\n    try {\\n        let myThemes = JSON.parse(fba.fetch(themeRoute));\\n        let nowTheme = myThemes.themes.filter(it=>it.name === myThemes.now_theme);\\n        themes = nowTheme?nowTheme[0]:myThemes.themes[0];\\n    }catch (e) {}\\n\\n    // 断念初始化部分\\n    const allApi=['https://test.rongxingvr.com/test/?url=','http://cache.languang.icu:88/didi.php?url='];\\n    var settings = {\\n        qy: '万能解析Ⓙ',\\n        yk: '万能解析Ⓙ',\\n        tx: '万能解析Ⓙ',\\n        mg: '万能解析Ⓙ',\\n        bl: '万能解析Ⓙ',\\n        sh: '万能解析Ⓙ',\\n        xg: '万能解析Ⓙ',\\n        // al: '万能解析Ⓙ',\\n        pp: '万能解析Ⓙ',\\n        mi: '万能解析Ⓙ',\\n        le: '万能解析Ⓙ',\\n        lt: '万能解析Ⓙ',//龙腾\\n        rr:'万能解析Ⓙ',//人人迷\\n        wd:'万能解析Ⓙ',//五毒云\\n        oth: '道长仓库通免',\\n        one: '1080',\\n        fun: '融兴',\\n        qju: '默认',\\n        cj: 'hiker://files/cache/Parse_Dn.js'\\n    };\\n    var oldRoute = \\\"hiker://files/cache/MyParseSet.json\\\";\\n    var mySet = fba.fetch(oldRoute);\\n    var newRoute = \\\"hiker://files/rules/DuanNian/MyParse.json\\\";\\n    if(!fba.fetch(newRoute)){\\n        fba.writeFile(newRoute,JSON.stringify({settings:settings,title:[\\\"yun1717\\\",\\\"你爹科技\\\",\\\"融兴\\\",\\\"人人迷-优酷\\\"],codes:{\\\"你爹科技\\\":\\\"http://cache.languang.icu:88/didi.php?url=\\\",\\\"融兴\\\":\\\"https://test.rongxingvr.com/test/?url=\\\",\\\"人人迷-优酷\\\":\\\"https://svip.renrenmi.cc:2222/api/?key=nn4j8rukPXSVzR78E9&url=\\\"}}))\\n    }\\n    var newConfig = fba.fetch(newRoute);\\n    var mySelect = [];\\n    function compare(list) {\\n        return function (it) {\\n            return !list.includes(it)\\n        }\\n    }\\n    if(newConfig&&newConfig.length>20){\\n        eval(\\\"newConfig =\\\" + newConfig + \\\";\\\");\\n        let newKeys = Object.keys(newConfig.settings);\\n        let nowKeys = Object.keys(settings);\\n        for(let i in newKeys){//清除多余的节点\\n            if(!nowKeys.includes(newKeys[i])){\\n                delete newConfig.settings[newKeys[i]]\\n            }\\n        }\\n        settings = Object.assign(settings,newConfig.settings);\\n        var ycTitle = ['defaultParse', 'defaultParseWeb','maoss', 'CityIP', 'cacheM3u8', 'pcUA', 'parseLc', 'gparse', 'nparse'];\\n        mySelect = newConfig.title.filter(compare(ycTitle));\\n        // mySelect = mySelect.map((it)=>{\\n        //     let flag = 'Ⓤ';\\n        //     if(typeof(newConfig.codes[it])==='function'){\\n        //         flag = 'Ⓙ';\\n        //     }else if(typeof(newConfig.codes[it])==='undefined'){\\n        //         flag = '';\\n        //     }\\n        //     return flag+it\\n        // });\\n    }\\n    //fba.log(JSON.stringify(mySelect));\\n\\n    let options = [\\n        {\\n            name:'爱奇艺',\\n            id:'qy',\\n            value:settings.qy,\\n            placeholder:'设置爱奇艺'\\n        },\\n        {\\n            name:'优酷',\\n            id:'yk',\\n            value:settings.yk\\n        },\\n        {\\n            name:'腾讯',\\n            id:'tx',\\n            value:settings.tx\\n        },\\n        {\\n            name:'芒果',\\n            id:'mg',\\n            value:settings.mg\\n        },\\n        {\\n            name:'哔哩哔哩',\\n            id:'bl',\\n            value:settings.bl\\n        },\\n        {\\n            name:'搜狐',\\n            id:'sh',\\n            value:settings.sh\\n        },\\n        {\\n            name:'西瓜',\\n            id:'xg',\\n            value:settings.xg\\n        },\\n        {\\n            name:'PPTV',\\n            id:'pp',\\n            value:settings.pp\\n        },\\n        {\\n            name:'咪咕',\\n            id:'mi',\\n            value:settings.mi\\n        },\\n        {\\n            name:'乐视',\\n            id:'le',\\n            value:settings.le\\n        },\\n        {\\n            name:'1905',\\n            id:'one',\\n            value:settings.one\\n        },\\n        {\\n            name:'风行',\\n            id:'fun',\\n            value:settings.fun\\n        },\\n        {\\n            name:'龙腾',\\n            id:'lt',\\n            value:settings.lt\\n        },\\n        {\\n            name:'人人迷',\\n            id:'rr',\\n            value:settings.rr\\n        },\\n        {\\n            name:'五毒',\\n            id:'wd',\\n            value:settings.wd\\n        },\\n        {\\n            name:'其他',\\n            id:'oth',\\n            value:settings.oth\\n        },\\n        {\\n            name:'全局',\\n            id:'qju',\\n            value:settings.qju\\n        },\\n        {\\n            name:'插件',\\n            id:'cj',\\n            value:settings.cj\\n        },\\n    ];\\n\\n    function Did(id){\\n        return document.getElementById(id);\\n    }\\n    function getOption(id,title) {\\n        var obj = Did(id);\\n        Did(title).value = obj.options[obj.selectedIndex].text;\\n        // Did(title).value = obj.options[obj.selectedIndex].text.replace(/Ⓤ|Ⓙ/g,'');\\n    }\\n    function resetSelect(id){\\n        Did(id+\\\"Select\\\").options.selectedIndex = -1;\\n    }\\n\\n    //函数部分\\n\\n    function Toast(msg,duration){\\n        duration=isNaN(duration)?2000:duration;\\n        var m = document.createElement('div');\\n        m.innerHTML = msg;\\n        m.style.cssText=\\\"width:45%; min-width:150px; background:#311; opacity:0.6; height:auto;min-height: 45px; color:#fff; line-height:45px; text-align:center; border-radius:10px; position:fixed; top:60%; left:26%; z-index:999999;\\\";\\n        document.body.appendChild(m);\\n        setTimeout(function() {\\n            var d = 0.5;\\n            m.style.webkitTransition = '-webkit-transform ' + d + 's ease-in, opacity ' + d + 's ease-in';\\n            m.style.opacity = '0';\\n            setTimeout(function() { document.body.removeChild(m) }, d * 1000);\\n        }, duration);\\n    }\\n\\n    function openDnPage(){\\n        fba.open(JSON.stringify({\\n            rule: \\\"=^_^=\\\",\\n            title: \\\"编辑解析\\\",\\n            url: \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=编辑#noHistory##noRecordHistory#\\\",\\n            group: \\\"\\\",\\n            col_type: \\\"\\\",\\n            //findRule: \\\"js:this.d=[];$.require(\\\\\\\"hiker://page/Parse_Dn.js?rule=MyFieldᴰⁿ\\\\\\\").edit();setResult(d);\\\",\\n            preRule: \\\"\\\",\\n            extra: {}\\n        }));\\n    }\\n    function openTheme(){\\n        fba.open(JSON.stringify({\\n            rule: \\\"=^_^=\\\",\\n            title: \\\"主题管理\\\",\\n            url: \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=主题#noHistory##noRecordHistory#\\\",\\n            group: \\\"\\\",\\n            col_type: \\\"\\\",\\n            preRule: \\\"\\\",\\n            extra: {}\\n        }));\\n    }\\n    function openJxManage(){\\n        fba.open(JSON.stringify({\\n            rule: \\\"=^_^=\\\",\\n            title: \\\"解析配置管理\\\",\\n            url: \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=解析#noHistory##noRecordHistory#\\\",\\n            group: \\\"\\\",\\n            col_type: \\\"\\\",\\n            preRule: \\\"\\\",\\n            extra: {}\\n        }));\\n    }\\n    function cancel(){\\n        if(!mySet){\\n            fba.writeFile(oldRoute, JSON.stringify(settings, null, 4));\\n            fba.refreshPage(true);\\n        }else{\\n            fba.back(false);\\n        }\\n    }\\n    function clickme(msg,duration,title){\\n        try{\\n            for(let key in settings){\\n                // fba.log(Did(key)+''+key);\\n                try{\\n                    //settings[key] = Did(key).value.replace(/Ⓤ|Ⓙ/g,'');\\n                    settings[key] = Did(key).value;\\n                }catch(e){\\n                    alert(\\\"未获取到节点:\\\"+key+\\\"\\\\n\\\"+e.message);\\n                }\\n\\n            }\\n            if(mySelect){\\n                Object.assign(newConfig.settings, settings);\\n                fba.writeFile(newRoute, $$$.stringify(newConfig));\\n            }\\n            fba.writeFile(oldRoute, $$$.stringify(settings));\\n            Toast(msg,duration);\\n            if(title===\\\"关\\\"){\\n                fba.back();\\n            }else{\\n                fba.refreshPage(true);\\n            }\\n        }catch(e){\\n            alert(e.message)\\n        }\\n    }\\n\\n    //let width=window.screen.availWidth;\\n    //let widthPx=width-393+52;\\n    //alert(\\\"当前分辨率:\\\"+window.screen.availWidth+\\\"*\\\"+window.screen.height);\\n    var verinfo = [{\\n        id:'dn',\\n        author:'断念',\\n        avatar:'https://s3.ax1x.com/2021/02/22/y7wb9O.jpg',\\n        option:openDnPage,\\n    },\\n        {\\n            id:'dz',\\n            author:'道长',\\n            avatar:'http://q1.qlogo.cn/g?b=qq&nk=434857005&s=640',\\n            option:openTheme\\n        },\\n        {\\n            id:'lm',\\n            author: '蓝莓',\\n            avatar: 'http://q1.qlogo.cn/g?b=qq&nk=2579949378&s=640',\\n            option:openJxManage\\n        }\\n    ];\\n\\n    function doOption(option_id){\\n        let ver = verinfo.filter(it=>it.id===option_id)[0];\\n        ver.option();\\n    }\\n\\n    const RenderHtmlApp = {\\n        data() {\\n            return {\\n                // rawHtml: '<span style=\\\"color: red\\\">这里会显示红色！</span>',\\n                options:options,\\n                verinfo:verinfo,\\n                placeholder:placeholder,\\n                tips:tips,\\n                themes:themes,\\n                mySelect:mySelect,\\n                // cjSel:['请选择插件 (只作用lazyRule)','hiker://files/cache/Parse_Dn.js','hiker://files/rules/dzHouse/js/srcauto.js','hiker://files/rules/js/Parse-V2_Dn.js'],\\n                cjSel:['请选择插件 (只作用lazyRule)','hiker://files/cache/Parse_Dn.js','hiker://files/rules/dzHouse/js/srcauto.js'],\\n                settings:settings,\\n                showTips:false,\\n                //widthPx:widthPx\\n            }\\n        },\\n        methods:{\\n            // changeVal:function(event){\\n            //     getOption(this.id,this.name);\\n            //     this.selOption = event.target.value;\\n            //     alert(\\\"你选中了\\\"+event.target.value);\\n            // }\\n            doOption:doOption\\n        }\\n    }\\n    try {\\n        const app=Vue.createApp(RenderHtmlApp);\\n        app.mount('body');\\n    }catch (e) {\\n        console.log(e.message)\\n    }\\n\\n</script>\\n\\n</body>\\n</html>\"},{\"name\":\"图标下载\",\"path\":\"saveLocal\",\"rule\":\"$.exports.saveLocal = () => {\\n    const base64ToHex = (base64Str) => {\\n        // 删除前缀并解码Base64字符串\\n        var binaryStr = window0.atob(base64Str.split(',')[1]);\\n\\n        // 转换为16进制字符串\\n        var hexStr = '';\\n        for (var i = 0; i < binaryStr.length; i++) {\\n            var hex = binaryStr.charCodeAt(i).toString(16);\\n            hexStr += (hex.length === 2 ? hex : '0' + hex);\\n        }\\n        return hexStr;\\n    };\\n    showLoading(\\\"图标初始化中...\\\");\\n    var tubiao = {};\\n    try {\\n        // 剪贴板线路\\n        html = request('https://netcut.cn/p/a1fcf0d3b0a27f13');\\n        data = html.match(/{.*note_content.*updated_at.*}/)[0];\\n        eval('tubiao =' + JSON.parse(data).note_content);\\n    } catch (e) {\\n        log('剪贴板出错,切换托管线路');\\n        route = [\\n            'https://gitcode.net/qq_23847819/hiker/-/raw/master/tubiao.json',\\n            'https://gitea.com/cy/hiker/raw/commit/be2160c6a01db873d9f9681ba7e86eebfa118d86/tubiao.json',\\n            'https://raw.codehub.cn/p/hiker/d/tubiao/git/raw/master/tubiao.json?token=GGdlIuVGqY3b3LydIowrksbUBCfMyx2fF31WUZeo4m',\\n            'https://gitee.com/mxxl-cy/hiker/raw/master/tubiao.json'\\n        ];\\n        for (let i = 0; i < route.length; i++) {\\n            try {\\n                eval('tubiao =' + request(route[i]));\\n                if (tubiao[\\\"五大\\\"] && tubiao[\\\"哔哩\\\"]) {\\n                    break;\\n                } else {\\n                    log('线路：' + tubiao[i] + '被墙了...');\\n                }\\n            } catch (e) {\\n                log('线路：' + tubiao[i] + '出错了...');\\n            }\\n        }\\n    }\\n    try {\\n        var wuda = tubiao[\\\"五大\\\"];\\n        var bili = tubiao[\\\"哔哩\\\"];\\n        var index = 0;\\n        for (let item in wuda) {\\n            writeHexFile(`hiker://files/rules/cy/tubiao/${item}.svg`, base64ToHex(wuda[item]));\\n            log(`初始化第${index++}个图标:${item}...`);\\n        }\\n        for (let item in bili) {\\n            writeHexFile(`hiker://files/rules/cy/bili_pic/${item}.png`, base64ToHex(bili[item]));\\n            log(`初始化第${index++}个图标:${item}...`);\\n        }\\n        showLoading('图标初始化完成：共计' + index + '个图标');\\n        hideLoading();\\n    } catch (e) {\\n        showLoading('图标初始化失败');\\n        log('图标初始化失败:' + e);\\n        hideLoading();\\n    }\\n\\n};\\n\"},{\"name\":\"数据列表\",\"path\":\"danmuListpage\",\"rule\":\"js:\\nvar d = [];\\nvar 影片名称 = '';\\nvar 正片列表 = [];封面\\nvar 最新集数 = '';\\nvar 更新进度 = '';\\n// 清除变量\\naddListener('onClose', $.toString(() => {\\n    clearMyVar('360_tab');\\n    clearMyVar('360_tab_year');\\n}))\\n// 获取eplist\\n/* 需要过滤预告片*/\\nswitch (MY_PARAMS.from) {\\n    case 'qiyi':\\n        MY_URL = MY_PARAMS.url.replace('www', 'm');\\n        html = request(MY_URL);\\n        viedeoInfo = JSON.parse(html.match(/\\\"albumInfo\\\"[\\\\S\\\\s]+(?=,\\\"albumListInfo\\\")/)[0].replace('\\\"albumInfo\\\":', ''));\\n        infoAdd = JSON.parse(html.match(/\\\"videoInfo\\\":{[\\\\S\\\\s]+}(?=,\\\"videoType\\\")/)[0].replace('\\\"videoInfo\\\":', ''));\\n        影片名称 = viedeoInfo.albumName ? viedeoInfo.albumName : infoAdd.videoName;\\n        封面 = viedeoInfo.imageUrl ? 'https:' + viedeoInfo.imageUrl.replace('\\\\u002F', '/').replace('.jpg', '_260_360.jpg') + \\\"@Referer=\\\" : 'https:' + infoAdd.imageUrl.replace('\\\\u002F', '/') + \\\"@Referer=\\\";\\n        类型 = infoAdd.channelName;\\n        剧集ID = infoAdd.albumQipuId;\\n        setPageTitle(影片名称);\\n        setPagePicUrl(封面);\\n        if (类型 == '电影' || infoAdd.videoName.match(/预告/)) {\\n            正片列表.push({\\n                title: 影片名称,\\n                url: MY_URL.replace('m', 'www'),\\n                desc: ''\\n            });\\n            更新进度 = '电影&预告';\\n        } else {\\n            // 有一部分奇葩的纪录片也是有年份的，普通接口还没有数据只好这样判断了，注意是'\\\"\\\"'~\\n            if (html.match(/\\\"summary\\\":[\\\\S\\\\s]+(?=,\\\"count\\\")/)[0].replace('\\\"summary\\\":', '') != '\\\"\\\"') {\\n                时间线选集 = JSON.parse(html.match(/\\\"summary\\\":[\\\\S\\\\s]+(?=,\\\"count\\\")/)[0].replace('\\\"summary\\\":', ''));\\n                剧集列表 = [];\\n                // 偷懒！按啥年份和月份选集，简直浪费时间~\\n                时间线选集.forEach(list => {\\n                    年份 = list.year;\\n                    剧集信息 = JSON.parse(request(\\\"https://pcw-api.iqiyi.com/album/source/svlistinfo?cid=6&sourceid=\\\" + 剧集ID + \\\"&timelist=\\\" + 年份 + \\\"&callback=window.Q.__callbacks__.cbp5bps9\\\").match(/{\\\"code\\\"[\\\\S\\\\s]+}(?=\\\\);}catch\\\\(e\\\\){})/)[0]);\\n                    剧集列表 = 剧集列表.concat(剧集信息.data[年份]);\\n                });\\n                更新进度 = '综艺';\\n                正片列表 = 剧集列表;\\n            } else {\\n                page = 1; size = 200;\\n                totalPage = 2;\\n                while (totalPage - page >= 0) {\\n                    剧集信息 = JSON.parse(fetch(\\\"https://pcw-api.iqiyi.com/albums/album/avlistinfo?aid=\\\" + 剧集ID + \\\"&size=\\\" + size + \\\"&page=\\\" + page + \\\"&callback=window.Q.__callbacks__.cbu0ch7s\\\").match(/{\\\"code\\\"[\\\\S\\\\s]+}(?=\\\\);}catch\\\\(e\\\\){})/)[0]).data;\\n                    正片列表 = 正片列表.concat(剧集信息.epsodelist);\\n                    page++;\\n                    totalPage = 剧集信息.page;\\n                }\\n                最新集数 = 剧集信息.latestOrder;\\n                剧集长度 = 剧集信息.total;\\n                更新进度 = 最新集数 + '/' + 剧集长度;\\n            }\\n            正片列表 = 正片列表.map((it) => {\\n                return {\\n                    // title: it.shortTitle,老剧集会啥也不显示，没数据\\n                    title: it.name + \\\"_\\\" + it.subtitle,\\n                    url: it.playUrl,\\n                    desc: it.period\\n                }\\n            })\\n        }\\n        break;\\n    case 'youku':\\n        html = request(MY_PARAMS.url);\\n        try {\\n            // 重新定位了\\n            影片信息 = JSON.parse(html.match(/\\\"播放页简介组件\\\",\\\"dataNode\\\":\\\\[{[\\\\S\\\\s]+showImg[\\\\S\\\\s]+desc[\\\\S\\\\s]{0,1000}(?=,\\\"id\\\")/)[0].replace('\\\"播放页简介组件\\\",\\\"dataNode\\\":[{\\\"data\\\":', ''));\\n        } catch (e) {\\n            try {\\n                影片信息 = JSON.parse(html.match(/\\\"data\\\":[\\\\S\\\\s]{0,50}scorePrefix[\\\\S\\\\s]{0,30}area[\\\\S\\\\s]{0,100}img[\\\\S\\\\s]{0,300}subTitles[\\\\S\\\\s]+introTitle[\\\\S\\\\s]{0,200}desc[\\\\S\\\\s]{0,800}(?=,\\\"id\\\")/)[0].replace('\\\"data\\\":', ''));\\n            } catch (e) {\\n                try {\\n                    影片信息 = JSON.parse(html.match(/播放页简介组件\\\",\\\"dataNode\\\":\\\\[{\\\"data\\\":[\\\\S\\\\s]+(?=,\\\"id\\\":[0-9]{0,20},\\\"type\\\":[0-9]{0,20}},{\\\"data\\\":{\\\"title\\\":[\\\\S\\\\s]{0,200},\\\"isAliStar)/)[0].replace('播放页简介组件\\\",\\\"dataNode\\\":[{\\\"data\\\":', ''));\\n                } catch (e) {\\n                    影片信息 = '';\\n                }\\n            }\\n        }\\n        影片名称 = pdfh(html, '.module-name&&Text');\\n        setPageTitle(影片名称)\\n        if (影片信息) {\\n            剧集ID = 影片信息.showId;\\n            封面 = 影片信息.img.replace('\\\\u002F', '/') + \\\"@Referer=\\\";\\n            // 动态设置二级收藏图片（网页拦截重定向后需要自行设置）\\n            setPagePicUrl(封面);\\n            // 有些剧集或者说电影的更新状态或者是评分数据或者说动漫的类型是空甚至根本没有所以单独获取并做异常处理\\n            try {\\n                类型 = 影片信息.mark.data.text;\\n            } catch (e) {\\n                类型 = '';\\n            }\\n            简述 = 影片信息.subTitles[0].subtitle;\\n            状态 = 影片信息.subTitles[1].subtitle;\\n            if (状态 == undefined) {\\n                状态 = '完结'\\n            }\\n            标签 = 影片信息.showGenre;\\n            if (标签 == undefined) {\\n                标签 = '';\\n            }\\n        } else {\\n            // 针对筐出未来电影赏析而写的，事实上教育栏目最后多数也是走这里\\n            try {\\n                影片地图 = JSON.parse(html.match(/\\\"videoMap\\\":[\\\\S\\\\s]+(?=,\\\"pushInfo\\\")/)[0].replace('\\\"videoMap\\\":', ''));\\n                影片名称 = 影片地图.showSubtitle;\\n                setPageTitle(影片名称);\\n                剧集ID = 影片地图.showId;\\n                简介 = 影片地图.showName;\\n                封面 = 影片地图.videoImg.replace('\\\\u002F', '/') + \\\"@Referer=\\\";\\n                setPagePicUrl(封面);\\n                类型 = 影片地图.videoCategory;\\n                状态 = '共' + 影片地图.episodeLast + '集\\\\n' + 影片地图.showReleaseTime;\\n                简述 = '';\\n                标签 = '';\\n            } catch (e) {\\n                简介 = '没有简介，大概是一些短视频，科技、生活、娱乐分栏~';\\n                封面 = 'https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg.zcool.cn%2Fcommunity%2F010097613ad72c11013eaf7098e28a.jpg%402o.jpg&refer=http%3A%2F%2Fimg.zcool.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1661226719&t=75dab3a3ff2d817e6f388f89505ea2e4@Referer=';\\n                类型 = '';\\n                状态 = '';\\n                简述 = '';\\n                标签 = '';\\n            }\\n        }\\n        // 匹配电影\\n        if (html.match(/\\\"播放页电影选集\\\",\\\"dataNode\\\":\\\\[{[\\\\S\\\\s]+(?=,\\\"title\\\":\\\"(系列电影|播放列表)\\\")/)) {\\n            上映日期 = JSON.parse('{' + html.match(/\\\"videoPublishTime\\\"[\\\\S\\\\s]+(?=,\\\"videoTitle\\\")/)[0] + '}').videoPublishTime;\\n            try {\\n                电影信息 = JSON.parse(html.match(/\\\"播放页电影选集\\\",\\\"dataNode\\\":\\\\[{[\\\\S\\\\s]+(?=,\\\"title\\\":\\\"(系列电影|播放列表)\\\")/)[0].replace('\\\"播放页电影选集\\\",\\\"dataNode\\\":', ''));\\n                电影信息.forEach(list => {\\n                    if (list.data.summary) {\\n                        正片列表.push({\\n                            title: list.data.title,\\n                            url: 'https://v.youku.com/v_show/id_' + list.data.action.value + '.html',\\n                            desc: list.data.videoType + '\\\\t' + list.data.summary,\\n                        });\\n                    } else {\\n                        正片列表.push({\\n                            title: list.data.title,\\n                            url: 'https://v.youku.com/v_show/id_' + list.data.action.value + '.html',\\n                            desc: list.data.videoType,\\n                        });\\n                    }\\n                });\\n            } catch (e) {\\n                try {\\n                    // 分成多种语言版本的电影\\n                    电影信息 = JSON.parse(html.match(/\\\"播放页电影选集\\\",\\\"dataNode\\\":\\\\[{[\\\\S\\\\s]+(?=,\\\"title\\\":\\\"播放列表\\\")/)[0].replace('\\\"播放页电影选集\\\",\\\"dataNode\\\":', ''));\\n                    for (let i = 0; i < 电影信息.length; i++) {\\n                        if (电影信息[i].data.summary) {\\n                            正片列表.push({\\n                                title: 电影信息[i].data.title,\\n                                url: 'https://v.youku.com/v_show/id_' + 电影信息[i].data.audioLang[i].videoId + '.html',\\n                                desc: 电影信息[i].data.videoType + '\\\\t' + 电影信息[i].data.summary\\n                            });\\n                        } else {\\n                            正片列表.push({\\n                                title: 电影信息[i].data.title,\\n                                url: 'https://v.youku.com/v_show/id_' + 电影信息[i].data.audioLang[i].videoId + '.html',\\n                                desc: 电影信息[i].data.videoType,\\n                            });\\n                        }\\n                    }\\n                } catch (e) {\\n                    正片列表 = [];\\n                }\\n            }\\n            更新进度 = '电影';\\n        } else {\\n            try {\\n                // 一般剧集（含电影、综艺）——但电影不走这条线，因为没有系列电影的数据~\\n                剧集信息 = JSON.parse(request(\\\"https://search.youku.com/api/search?appScene=show_episode&showIds=\\\" + 剧集ID + \\\"&appCaller=h5\\\"));\\n                剧集列表 = 剧集信息.serisesList;\\n                // 先尝试获取剧集数据，如果获取失败，异常会在上方出现，因为没有serisesList，那就走栏目路线\\n                剧集长度 = 剧集列表.length;\\n                正片列表 = 剧集列表.filter((it) => {\\n                    if (it.iconCorner&&it.iconCorner.tagText) {\\n                        状态 = it.iconCorner.tagText;\\n                    } else {\\n                        状态 = '';\\n                    }\\n                    if (!状态.match(/预|花絮/)) return true;\\n                }).map((it) => {\\n                    flag = /\\\\d/.test(it.title.split(' ')[1]);\\n                    // log(it);\\n                    if (flag) {\\n                        title = it.title;\\n                        // desc = 状态 + '\\\\t' + it.stripeBottom + '\\\\n' + it.displayName;\\n                        desc = '';\\n                    } else {\\n                        // title=it.title+'_'+it.displayName;\\n                        // desc=状态 + '\\\\t' + it.stripeBottom + '\\\\n' + it.displayName;\\n                        // 动漫\\n                        title = 影片名称+'_'+it.displayName+ '_' +(it.stripeBottom ? it.stripeBottom : it.title);\\n                        desc = '';\\n                    }\\n                    return {\\n                        title: title,\\n                        url: 'https://v.youku.com/v_show/id_' + it.videoId + '.html',\\n                        desc: desc\\n                    }\\n                })\\n                更新进度 = '剧集&综艺'\\n            } catch (e) {\\n                log('what?message:'+e.message);\\n                // 滑动图片选集型（音乐、娱乐、生活等栏目）——烦了，直接正则全局匹配成数组好了。。。\\n                选集信息 = html.match(/\\\"播放页ugc选集\\\",\\\"dataNode\\\":\\\\[{[\\\\S\\\\s]+}(?=\\\\],\\\"title\\\")/)[0].replace('\\\"播放页ugc选集\\\",\\\"dataNode\\\":[', '');\\n                选集信息 = 选集信息.match(/{\\\"data\\\":{[\\\\S\\\\s]{0,2000},\\\"id\\\":[0-9]{0,20},\\\"type\\\":[0-9]{0,20}}/g)\\n                setPageTitle('栏目列表')\\n                选集信息.forEach(list => {\\n                    list = JSON.parse(list);\\n                    正片列表.push({\\n                        title: list.data.title,\\n                        url: 'https://v.youku.com/v_show/id_' + list.data.action.value + '.html',\\n                        desc: list.data.publishTime\\n                    });\\n                });\\n                更新进度 = '栏目';\\n            }\\n        }\\n        break;\\n    case 'tx':\\n        MY_URL = MY_PARAMS.url;\\n        if (MY_URL.match(/cover/)) {\\n            // 手机搜索结果链接\\n            cid = MY_URL.split('/')[5].split('.html')[0];\\n            if (MY_URL.split('=')[1]) {\\n                vid = MY_URL.split('=')[1];\\n                MY_URL = 'https://v.qq.com/x/cover/' + cid + '/' + vid + '.html';\\n            } else {\\n                MY_URL = 'https://v.qq.com/x/cover/' + cid + '.html';\\n            }\\n        } else {\\n            // 手机首页跳转链接\\n            cid = MY_URL.split('=')[1].split('&')[0];\\n            if (cid == '') {\\n                vid = MY_URL.split('=')[2]\\n                // 这个cid貌似是错的，，算了就尝试一下，多半还是要404~\\n                data = fetch('https://union.video.qq.com/fcgi-bin/data?otype=json&tid=682&appid=20001238&appkey=6c03bbe9658448a4&union_platform=1&idlist=' + vid);\\n                cid = JSON.parse(data.match(/{[\\\\S\\\\s]+}/)[0]).results[0].fields.cover_list[0]\\n            }\\n            MY_URL = 'https://v.qq.com/x/cover/' + cid + '.html';\\n        }\\n        // log(MY_URL);\\n        全集数 = MY_PARAMS.全集数;\\n        影片名称 = MY_PARAMS.影片名称;\\n        封面 = MY_PARAMS.封面;\\n        更新进度 = '全集数:' + 全集数;\\n        // 重定义二级页面数据\\n        setPageTitle(影片名称);\\n        setPagePicUrl(封面);\\n        try {\\n            // 郑娟、动漫（部分）\\n            pageContext = 'lid=&cid=' + cid + '&page_num=0&page_size=30&id_type=1&req_type=6&req_from=web_vsite&req_from_second_type=&detail_page_type=1';\\n            curtag = 0; tablen = 1;\\n            episodeInfoList = [];\\n            while (tablen - curtag > 0) {\\n                data = JSON.parse(fetch('https://pbaccess.video.qq.com/trpc.universal_backend_service.page_server_rpc.PageServer/GetPageData?video_appid=3000010&vplatform=2&vversion_name=8.2.96', {\\n                    body: {\\n                        \\\"page_params\\\": {\\n                            \\\"req_from\\\": \\\"web_vsite\\\",\\n                            \\\"page_id\\\": \\\"vsite_episode_list\\\",\\n                            \\\"page_type\\\": \\\"detail_operation\\\",\\n                            \\\"id_type\\\": \\\"1\\\",\\n                            \\\"page_size\\\": \\\"\\\",\\n                            \\\"cid\\\": cid,\\n                            \\\"vid\\\": \\\"\\\",\\n                            \\\"lid\\\": \\\"\\\",\\n                            \\\"page_num\\\": \\\"\\\",\\n                            \\\"page_context\\\": pageContext,\\n                            \\\"detail_page_type\\\": \\\"1\\\"\\n                        },\\n                        \\\"has_cache\\\": 1\\n                    },\\n                    headers: {\\n                        'Referer': 'https://v.qq.com/'\\n                    }\\n                })).data.module_list_datas[0].module_datas[0];\\n                // 打补丁，一刀切，存在特殊分季，如动漫诛仙\\n                分季列表 = data.item_data_lists.item_datas.filter((it) => it.item_type === \\\"28\\\");\\n                if (分季列表.length > 0) throw new Error('存在特殊的分季，尝试备用接口方案...');\\n                // 无集数分栏\\n                if (data.module_params.tabs == \\\"\\\") {\\n                    tabs = [];\\n                } else {\\n                    tabs = JSON.parse(data.module_params.tabs);\\n                }\\n                tablen = tabs.length;\\n                curtag++;\\n                if (curtag < tablen) pageContext = tabs[curtag].page_context;\\n                episodeInfoList = episodeInfoList.concat(data.item_data_lists.item_datas);\\n            }\\n            正片列表 = episodeInfoList.filter((it) => {\\n                // item_type不是1可能不是正片剧集\\n                if (it.item_type != \\\"1\\\") return false;\\n                if (it.item_params.is_trailer != \\\"1\\\") return true;\\n            }).map((it) => {\\n                showTitle = (!it.item_params.union_title.match(/彩蛋/) ? it.item_params.union_title : it.item_params.play_title) + '_' + it.item_params.video_subtitle;\\n                return {\\n                    title: showTitle,\\n                    url: `https://v.qq.com/x/cover/${cid}/${it.item_params.vid}.html`,\\n                    desc: ''\\n                }\\n            })\\n        } catch (e) {\\n            log('首选接口出错：' + e);\\n            // 综艺、电影（无标题）\\n            pageContext = 'need_async=true';\\n            curtag = 0; tablen = 1;\\n            episodeInfoList = [];\\n            while (tablen - curtag > 0) {\\n                data = JSON.parse(fetch(buildUrl('https://pbaccess.video.qq.com/trpc.videosearch.search_cgi.http/load_playsource_list_info', {\\n                    pageNum: '0',\\n                    id: cid,\\n                    dataType: '2',\\n                    pageContext: encodeURIComponent(pageContext),\\n                    scene: '2',\\n                    platform: '2',\\n                    appId: '10718',\\n                    site: 'qq'\\n                }))).data.normalList.itemList[0].videoInfo.firstBlockSites[0];\\n                tabs = data.tabs;\\n                tablen = tabs.length;\\n                curtag++;\\n                if (curtag < tablen) pageContext = tabs[curtag].asnycParams;\\n                episodeInfoList = episodeInfoList.concat(data.episodeInfoList);\\n            }\\n            正片列表 = episodeInfoList.filter((it) => {\\n                lable = it.markLabel;\\n                if (lable.match(/限免/) || !lable.match(/预|花絮/)) {\\n                    return true;\\n                } else {\\n                    return false;\\n                }\\n                // !it.markLabel.match(/预|花絮/)\\n            }).map((it) => {\\n                title = /^\\\\d+$/.test(it.title) ? 影片名称 + '_' + it.title : it.title;\\n                return {\\n                    title: title,\\n                    url: it.url,\\n                    desc: ''\\n                }\\n            })\\n        }\\n        break;\\n    case 'mgtv':\\n        MY_URL = MY_PARAMS.url;\\n        html = request(MY_URL);\\n        try {\\n            vid = MY_URL.split('/')[5].split('.')[0];\\n        } catch (e) {\\n            link = html.match(/window.location = \\\"[\\\\S\\\\s]+(?=\\\" \\\\+ window.location.search)/)[0].replace('window.location = \\\"', '');\\n            vid = link.split('/')[5].split('.')[0];\\n            html = request(link);\\n        }\\n        try {\\n            类型 = pdfh(html, '.desc&&.t3,0&&Text').split('：')[1];\\n        } catch (e) {\\n            类型 = '';\\n        }\\n        剧集详情 = html.match(/\\\"videoinfo\\\":[\\\\S\\\\s]+(?=,\\\"fullVideoListInfo\\\")/)[0].replace('\\\"videoinfo\\\":', '');\\n        更新进度 = JSON.parse(剧集详情).updateInfo\\n        封面 = JSON.parse(剧集详情).colImage.replace('\\\\u002F', '/').split('.jpg')[0] + \\\".jpg@Referer=\\\";\\n        setPagePicUrl(封面);\\n        // 获取首页信息（30一页，可能多于30，因为番外，size不建议修改会出错）\\n        剧集信息 = JSON.parse(fetch(`https://pcweb.api.mgtv.com/episode/list?_support=10000000&version=5.5.35&video_id=${vid}&page=1&size=30&allowedRC=1&_support=10000000`, {\\n            headers: {\\n                'User-Agent': PC_UA\\n            },\\n            referrer: MY_URL,\\n            method: 'GET'\\n        })).data;\\n        影片名称 = 剧集信息.info.title;\\n        setPageTitle(影片名称);\\n        剧集长度 = 剧集信息.count;\\n        总页数 = 剧集信息.total_page;\\n        剧集列表 = 剧集信息.list;\\n        for (let page = 2; page <= 总页数; page++) {\\n            剧集列表 = 剧集列表.concat(JSON.parse(fetch(`https://pcweb.api.mgtv.com/episode/list?_support=10000000&version=5.5.35&video_id=${vid}&page=${page}&size=30&allowedRC=1&_support=10000000`, {\\n                headers: {\\n                    'User-Agent': PC_UA\\n                },\\n                referrer: MY_URL,\\n                method: 'GET'\\n            })).data.list);\\n        }\\n        正片列表 = 剧集列表.filter((it) => {\\n            // corner可能为空数组\\n            try {\\n                状态或集数标识 = it.corner[0].font;\\n            } catch (e) {\\n                状态或集数标识 = '';\\n            }\\n            if (!状态或集数标识.match(/预|花絮/)) return true;\\n        }).map((it) => {\\n            if (类型.match(/综艺/)) {\\n                showTitle = it.t1 + '_' + it.t2 + '_' + it.ts.split(' ')[0];\\n            } else {\\n                showTitle = it.t1 + '_' + it.t2;\\n            }\\n            return {\\n                title: showTitle,\\n                url: 'https://www.mgtv.com' + it.url,\\n                desc: '时长：' + it.time + '\\\\t发布：' + it.ts\\n            }\\n        })\\n        break;\\n    case 'bili':\\n        if (MY_PARAMS.season_id) {\\n            season_id = MY_PARAMS.season_id + \\\"\\\";\\n            Data = JSON.parse(fetch('https://api.bilibili.com/pgc/view/web/season?season_id=' + season_id)).result;\\n        } else {\\n            Data = JSON.parse(fetch('https://api.bilibili.com/pgc/view/web/season?ep_id=' + MY_PARAMS.ep_id)).result;\\n        }\\n        if (!Data.cover.match(/https/)) {\\n            封面 = Data.cover.replace('http', 'https') + \\\"@Referer=\\\";\\n        } else {\\n            封面 = Data.cover + \\\"@Referer=\\\";\\n        }\\n        更新进度 = '最新:' + Data.new_ep.title;\\n        影片名称 = Data.title;\\n        剧集列表 = Data.episodes;\\n        // 重定义二级页面数据\\n        setPageTitle(影片名称);\\n        setPagePicUrl(封面);\\n        正片列表 = 剧集列表.filter((it) => {\\n            if (!it.badge.match(/预|花絮/)) return true;\\n        }).map((it) => {\\n            return {\\n                title: it.share_copy,\\n                url: it.link,\\n                desc: (it.title.match(/[0-9]/ && !it.title.match(/集|话/)) ? ('第' + it.title + '话') : it.title) + it.long_title\\n            }\\n        })\\n        break;\\n    case '360':\\n        site = MY_PARAMS.site;\\n        uniqueSites = MY_PARAMS.uniqueSites;\\n        catId = MY_PARAMS.catId;\\n        enId = MY_PARAMS.enId;\\n        cover = MY_PARAMS.cover;\\n        info = MY_PARAMS.info;\\n        title = MY_PARAMS.title;\\n        zongyiInfo = MY_PARAMS.zongyiInfo;\\n        var 封面 = cover + \\\"@Referer=\\\";\\n        // 1,电影\\n        if (catId == \\\"1\\\") {\\n            Data = JSON.parse(fetch(buildUrl('https://api.web.360kan.com/v1/detail', {\\n                cat: catId,\\n                id: enId\\n            }))).data;\\n            更新进度 = '上映:' + Data.pubdate;\\n            影片名称 = Data.title;\\n            // 封面 = Data.cdncover+\\\"@Referer=\\\";\\n            // 重定义二级页面数据\\n            setPageTitle(影片名称);\\n            setPagePicUrl(封面);\\n            playlinksdetail = Data.playlinksdetail;\\n            var targets = [\\\"qq\\\", \\\"youku\\\", \\\"qiyi\\\", \\\"bilibili1\\\", \\\"imgo\\\"];\\n            for (var site in playlinksdetail) {\\n                if (playlinksdetail.hasOwnProperty(site)) {\\n                    if (targets.includes(playlinksdetail[site].site)) {\\n                        // 如果site在targets数组中，则处理这个对象\\n                        console.log(\\\"Found target:\\\", site);\\n                        // ... 这里可以执行相关的操作 ...\\n                        正片列表.push({\\n                            title: site + '_' + 影片名称,\\n                            url: playlinksdetail[site].default_url.split('?')[0],\\n                            desc: playlinksdetail[site].description\\n                        })\\n                    } else {\\n                        // 如果site不在targets数组中，则跳过\\n                        console.log(\\\"Skipping non-target:\\\", site);\\n                    }\\n                }\\n            }\\n        } else if (catId == \\\"3\\\") {\\n            // 综艺\\n            // 添加线路和年份标签\\n            // 使用Object.keys()获取对象的所有键名\\n            let tabs = Object.keys(zongyiInfo);\\n            for (var site in zongyiInfo) {\\n                d.push({\\n                    title: site == getMyVar('360_tab', tabs[0]) ? '““””<b><span style=\\\"color: red\\\">' + site + '</span></b>' : site,\\n                    url: $('#noLoading#').lazyRule((site) => {\\n                        putMyVar('360_tab', site);\\n                        // 防止出错\\n                        clearMyVar('360_tab_year')\\n                        refreshPage(true);\\n                        return 'hiker://empty';\\n                    }, site),\\n                    col_type: 'scroll_button'\\n                })\\n            }\\n            d.push({\\n                col_type: 'line'\\n            });\\n            zongyiInfo[getMyVar('360_tab', tabs[0])].forEach(it => {\\n                d.push({\\n                    title: it+'' == getMyVar('360_tab_year', zongyiInfo[getMyVar('360_tab', tabs[0])][0]+'') ? '““””<b><span style=\\\"color: red\\\">' + it + '</span></b>' : it,\\n                    url: $('#noLoading#').lazyRule((it) => {\\n                        putMyVar('360_tab_year', it);\\n                        refreshPage(true);\\n                        return 'hiker://empty';\\n                    }, it+''),\\n                    col_type: 'scroll_button'\\n                })\\n            })\\n            Data = JSON.parse(fetch(buildUrl('https://api.web.360kan.com/v1/detail', {\\n                cat: catId,\\n                id: enId,\\n                site: getMyVar('360_tab', tabs[0]),\\n                year:getMyVar('360_tab_year', zongyiInfo[getMyVar('360_tab', tabs[0])][0]+'')\\n            }))).data;\\n            更新进度 = info;\\n            影片名称 = title;\\n            // 重定义二级页面数据\\n            setPageTitle(影片名称);\\n            setPagePicUrl(封面);\\n            defaultepisode = Data.defaultepisode;\\n            var targets = [\\\"qq\\\", \\\"youku\\\", \\\"qiyi\\\", \\\"bilibili1\\\", \\\"imgo\\\"];\\n            defaultepisode.forEach((it)=>{\\n                正片列表.push({\\n                    title: it.period + '' + it.name,\\n                    url: it.url.split('?')[0],\\n                    desc: '序：'+it.period_alias+' '+it.pubdate\\n                })\\n            })\\n        } else {\\n            // 2电视剧,4动漫\\n            if (site && uniqueSites.length == 1) {\\n                let queryData = {\\n                    cat_id: catId,\\n                    ent_id: enId,\\n                    site: site\\n                };\\n                // 将JavaScript对象转换为JSON字符串\\n                let jsonData = JSON.stringify([queryData]);\\n                // 使用encodeURIComponent确保JSON字符串被正确编码\\n                let encodedData = encodeURIComponent(jsonData);\\n                // 构建完整的URL\\n                let url = `https://api.so.360kan.com/episodesv2?s=${encodedData}`;\\n                Data = JSON.parse(fetch(url)).data[0].seriesHTML.seriesPlaylinks;\\n                // 封面=cover;\\n                更新进度 = info;\\n                影片名称 = title;\\n                // 重定义二级页面数据\\n                setPageTitle(影片名称);\\n                setPagePicUrl(封面);\\n                let index = 1;\\n                正片列表 = Data.map((it) => {\\n                    const result = {\\n                        title: 影片名称 + '_' + index,\\n                        url: it.url.split('?')[0],\\n                        desc: it.free_icon == 1 ? '免费' : 'vip'\\n                    }\\n                    index++; // 在每次迭代中递增索引\\n                    return result;\\n                })\\n            } else if (site && uniqueSites.length > 1) {\\n                log('该影片实则可能多条线路')\\n                // 添加线路标签\\n                uniqueSites.forEach(it => {\\n                    d.push({\\n                        title: it == getMyVar('360_tab', uniqueSites[0]) ? '““””<b><span style=\\\"color: red\\\">' + it + '</span></b>' : it,\\n                        url: $('#noLoading#').lazyRule((it) => {\\n                            putMyVar('360_tab', it);\\n                            refreshPage(true);\\n                            return 'hiker://empty';\\n                        }, it),\\n                        col_type: 'scroll_button'\\n                    })\\n                })\\n                let queryData = {\\n                    cat_id: catId,\\n                    ent_id: enId,\\n                    site: getMyVar('360_tab', uniqueSites[0])\\n                };\\n                // 将JavaScript对象转换为JSON字符串\\n                let jsonData = JSON.stringify([queryData]);\\n                // 使用encodeURIComponent确保JSON字符串被正确编码\\n                let encodedData = encodeURIComponent(jsonData);\\n                // 构建完整的URL\\n                let url = `https://api.so.360kan.com/episodesv2?s=${encodedData}`;\\n                Data = JSON.parse(fetch(url)).data[0].seriesHTML.seriesPlaylinks;\\n                // 封面=cover;\\n                更新进度 = info;\\n                影片名称 = title;\\n                // 重定义二级页面数据\\n                setPageTitle(影片名称);\\n                setPagePicUrl(封面);\\n                let index = 1;\\n                正片列表 = Data.map((it) => {\\n                    const result = {\\n                        title: 影片名称 + '_' + index,\\n                        url: it.url.split('?')[0],\\n                        desc: it.free_icon == 1 ? '免费' : 'vip'\\n                    }\\n                    index++; // 在每次迭代中递增索引\\n                    return result;\\n                })\\n            }\\n\\n        }\\n        break;\\n}\\n\\n// 处理弹幕列表\\nstorage0.putMyVar('checkArr', 正片列表);\\ndmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\\nsaveLocal = dmSettings.saveLocal;\\ndoubleWrite = dmSettings.doubleWrite;\\nd.push({\\n    title: 影片名称 + \\\"<small><small><font color='grey'>（👇️单项下载🫱批量下载*⃣长按设置）</font></small></small>\\\",\\n    desc: 更新进度,\\n    col_type: \\\"avatar\\\",\\n    url: $(\\\"\\\", \\\"请输入下载范围(1,\\\" + 正片列表.length + \\\")\\\\n支持输入单个序号\\\").input(() => {\\n        var checkArr = storage0.getMyVar('checkArr', []);\\n        let [a, b] = input.split(/,|，/);\\n        // 检查是否只有一个数字输入\\n        if (a && !b) {\\n            a = Number(a);\\n            if (Number.isNaN(a)) {\\n                return \\\"toast://请按格式输入数字\\\";\\n            } else {\\n                try {\\n                    if (a < 1) return \\\"toast://请输入规定范围内的数字\\\";\\n                    // 只有一个数字输入，处理这种情况\\n                    title = checkArr[a - 1].title;\\n                    vipUrl = checkArr[a - 1].url;\\n                    showLoading('下载中:' + title);\\n                    dm = $.require('hiker://page/dmFun?rule=dm盒子').dmRoute(vipUrl);\\n                    hideLoading();\\n                    if (dm === false) {\\n                        log('下载出错');\\n                    }\\n                    dmPath = getPath(getVar('dm_share')).slice(7);\\n                    // newFileName = dmPath.substring(dmPath.lastIndexOf(\\\"/\\\") + 1).replace(/(\\\\.[^.]+)$/, '_' + i + \\\"$1\\\");\\n                    newFileName = dmPath.substring(dmPath.lastIndexOf(\\\"/\\\") + 1).split('from')[0] + title + '.xml';\\n                    innerFilepath = getPath('hiker://files/cache/danmu/').slice(7) + newFileName;\\n                    var { renameFile, copyFile, moveFile } = $.require(\\\"hiker://page/fileAPI?rule=dm盒子\\\");\\n                    dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\\n                    saveLocal = dmSettings.saveLocal;\\n                    doubleWrite = dmSettings.doubleWrite;\\n                    if (saveLocal) {\\n                        destinationDir = '/storage/emulated/0/Download/海阔视界/danmu/';\\n                        renameFile(dmPath, newFileName);\\n                        if (doubleWrite) {\\n                            copyFile(innerFilepath, destinationDir);\\n                        } else {\\n                            moveFile(innerFilepath, destinationDir);\\n                        }\\n                    } else {\\n                        renameFile(dmPath, newFileName);\\n                    }\\n                    putVar('dm_share', innerFilepath.replace('/storage/emulated/0/Android/data/com.example.hikerview/files/Documents/', 'hiker://files/'));\\n                    return \\\"toast://下载完成，快去观影吧，。\\\";\\n                } catch (e) {\\n                    log(title + '下载出错:' + e);\\n                }\\n            }\\n        } else {\\n            a = Number(a), b = Number(b);\\n            if (Number.isNaN(a) || Number.isNaN(b)) {\\n                return \\\"toast://请按格式输入数字\\\";\\n            }\\n            if (a < 1 || b > checkArr.length) {\\n                return \\\"toast://请输入规定范围内的数字\\\";\\n            }\\n            for (let i = a - 1; i < b; i++) {\\n                // ep=i+1;\\n                title = checkArr[i].title;\\n                try {\\n                    showLoading('进度:' + title);\\n                    // showLoading(\\\"下载进度：第\\\" + ep + \\\"集\\\");\\n                    dm = $.require('hiker://page/dmFun?rule=dm盒子').dmRoute(checkArr[i].url);\\n                    hideLoading();\\n                    if (dm === false) {\\n                        log(title + '下载出错');\\n                    }\\n                    dmPath = getPath(getVar('dm_share')).slice(7);\\n                    // newFileName = dmPath.substring(dmPath.lastIndexOf(\\\"/\\\") + 1).replace(/(\\\\.[^.]+)$/, '_' + i + \\\"$1\\\");\\n                    newFileName = dmPath.substring(dmPath.lastIndexOf(\\\"/\\\") + 1).split('from')[0] + title + '.xml';\\n                    innerFilepath = getPath('hiker://files/cache/danmu/').slice(7) + newFileName;\\n                    var { renameFile, copyFile, moveFile } = $.require(\\\"hiker://page/fileAPI?rule=dm盒子\\\");\\n                    dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\\n                    saveLocal = dmSettings.saveLocal;\\n                    doubleWrite = dmSettings.doubleWrite;\\n                    if (saveLocal) {\\n                        destinationDir = '/storage/emulated/0/Download/海阔视界/danmu/';\\n                        renameFile(dmPath, newFileName);\\n                        if (doubleWrite) {\\n                            copyFile(innerFilepath, destinationDir);\\n                        } else {\\n                            moveFile(innerFilepath, destinationDir);\\n                        }\\n                    } else {\\n                        renameFile(dmPath, newFileName);\\n                    }\\n                } catch (e) {\\n                    log(title + '下载出错:' + e);\\n                }\\n            }\\n        }\\n        clearMyVar('checkArr');\\n        return \\\"toast://已全部下载，快去观影吧，。\\\";\\n    }),\\n    // pic_url: \\\"https://hikerfans.com/tubiao/movie/14.svg\\\"\\n    pic_url: 封面,\\n    extra: {\\n        longClick: [{\\n            title: '转存:' + (saveLocal == true ? '开' : '关'), js: $.toString(() => {\\n                dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\\n                if (dmSettings.saveLocal == true) {\\n                    dmSettings.saveLocal = false;\\n                } else {\\n                    dmSettings.saveLocal = true;\\n                }\\n                saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(dmSettings));\\n                refreshPage(true);\\n                return 'toast://弹幕存储路径已更改~'\\n            })\\n        }, {\\n            title: '双写:' + (doubleWrite == true ? '开' : '关'), js: $.toString(() => {\\n                dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\\n                if (dmSettings.doubleWrite == true) {\\n                    dmSettings.doubleWrite = false;\\n                } else {\\n                    dmSettings.doubleWrite = true;\\n                }\\n                saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(dmSettings));\\n                refreshPage(true);\\n                return 'toast://双写模式已更改~'\\n            })\\n        }, {\\n            title: '弹幕配置', js: $.toString(() => {\\n                return 'hiker://page/setting#noHistory#';\\n            })\\n        }, {\\n            title: '文件管理', js: $.toString(() => {\\n                return 'hiker://page/filesSystem#noHistory#';\\n            })\\n        }]\\n    }\\n});\\nd.push({\\n    col_type: \\\"line\\\"\\n});\\nfor (let i = 0; i < 正片列表.length; i++) {\\n    try {\\n        title = 正片列表[i].title;\\n        url = 正片列表[i].url;\\n        desc = 正片列表[i].desc;\\n        d.push({\\n            title: '““””<b><span style=\\\"color: red\\\">' + (i + 1) + '-</span></b>' + title,\\n            url: $().lazyRule((vipUrl, title) => {\\n                showLoading('下载中:' + title);\\n                dm = $.require('hiker://page/dmFun?rule=dm盒子').dmRoute(vipUrl);\\n                hideLoading();\\n                if (dm === false) {\\n                    return \\\"toast://下载出错，请尝试切换弹幕源！\\\";\\n                }\\n                dmPath = getPath(getVar('dm_share')).slice(7);\\n                // newFileName = dmPath.substring(dmPath.lastIndexOf(\\\"/\\\") + 1).replace(/(\\\\.[^.]+)$/, '_' + i + \\\"$1\\\");\\n                newFileName = dmPath.substring(dmPath.lastIndexOf(\\\"/\\\") + 1).split('from')[0] + title + '.xml';\\n                innerFilepath = getPath('hiker://files/cache/danmu/').slice(7) + newFileName;\\n                var { renameFile, copyFile, moveFile } = $.require(\\\"hiker://page/fileAPI?rule=dm盒子\\\");\\n                dmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\\n                saveLocal = dmSettings.saveLocal;\\n                doubleWrite = dmSettings.doubleWrite;\\n                if (saveLocal) {\\n                    destinationDir = '/storage/emulated/0/Download/海阔视界/danmu/';\\n                    renameFile(dmPath, newFileName);\\n                    if (doubleWrite) {\\n                        copyFile(innerFilepath, destinationDir);\\n                    } else {\\n                        moveFile(innerFilepath, destinationDir);\\n                    }\\n                } else {\\n                    renameFile(dmPath, newFileName);\\n                }\\n                putVar('dm_share', innerFilepath.replace('/storage/emulated/0/Android/data/com.example.hikerview/files/Documents/', 'hiker://files/'));\\n                return \\\"toast://下载完成，快去观影吧，。\\\";\\n            }, url, title),\\n            desc: desc,\\n            col_type: 'text_1'\\n        });\\n    } catch (e) {\\n        d.push({\\n            title: '正片列表为空',\\n            url: 'hiker://empty',\\n            desc: e,\\n            col_type: 'text_center_1'\\n        })\\n    }\\n\\n}\\nsetResult(d);\\n\"},{\"name\":\"主页\",\"path\":\"homePage\",\"rule\":\"js:\\ndmSettings = JSON.parse(request('hiker://files/rules/cy/dm盒子/settings.json'));\\nvar fontSize = dmSettings.fontSize;\\nvar erjiPage=dmSettings.erjiPage;\\nvar helpFrom = 'hiker://page/Instruction_Book.html?rule=dm盒子';\\nvar APIFrom = 'hiker://page/API.html?rule=dm盒子';\\ntry {\\n    var helpFile = JSON.parse(fetch(helpFrom)).rule;\\n    var APIFile = JSON.parse(fetch(APIFrom)).rule;\\n    saveFile('hiker://files/cache/Instruction_Book.html', helpFile);\\n    saveFile('hiker://files/cache/API.html', APIFile);\\n} catch (e) {\\n    log('拉取异常')\\n}\\nvar d = [{\\n    title: \\\"🔍️\\\",\\n    desc: '搜搜看~点击封面有惊喜ψ(｀∇´)ψ',\\n    col_type: \\\"input\\\",\\n    url: $.toString(() => {\\n        var seaword = getMyVar('key_word', '');\\n        if (seaword == '') {\\n            return 'toast://请输入搜索关键字！'\\n        }\\n        return \\\"hiker://search?s=\\\" + seaword;\\n    }),\\n    extra: {\\n        onChange: \\\"putMyVar('key_word',input)\\\",\\n        rules: $.toString((MY_URL) => {\\n            evalPrivateJS(JSON.parse(request('hiker://page/search_rules')).rule);\\n            return JSON.stringify(rs)\\n        }, MY_URL)\\n    }\\n}, {\\n    img: 'https://gimg2.baidu.com/image_search/src=http%3A%2F%2Finews.gtimg.com%2Fnewsapp_match%2F0%2F10683661571%2F0.jpg&refer=http%3A%2F%2Finews.gtimg.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1658369890&t=18f955fc2c73ebd658607cc608081cf5',\\n    title: 'dm盒子配置',\\n    col_type: \\\"card_pic_1\\\",\\n    desc: '0',\\n    url: 'hiker://page/setting'\\n}, {\\n    title: \\\"弹幕大小:\\\" + fontSize,\\n    col_type: \\\"text_2\\\",\\n    url: $(fontSize, \\\"请输入数字\\\").input(() => {\\n        curSettings = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\\n        try {\\n            curSettings.fontSize = parseInt(input);\\n        } catch (e) {\\n            return 'toast://请输入数字！'\\n        }\\n        let dmPath = getVar('dm_share', '');\\n        const filenameWithExt = dmPath.split('/').pop();\\n        const index = filenameWithExt.lastIndexOf('.');\\n        const filename = index !== -1 ? filenameWithExt.substring(0, index) : filenameWithExt;\\n        // 清除上一次解析的记忆\\n        if (filename) {\\n            delete curSettings.history[filename];\\n            log('更改生效，上次解析记录已清除');\\n        }\\n        saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(curSettings));\\n        refreshPage(true);\\n        return \\\"hiker://empty\\\";\\n    }),\\n    extra: {\\n        id: '弹幕大小'\\n    }\\n}, {\\n    title: \\\"二级:\\\" + erjiPage,\\n    col_type: \\\"text_2\\\",\\n    url: $(['弹幕列表', '常规二级'], 1).select(() => {\\n        curSettings = JSON.parse(readFile('hiker://files/rules/cy/dm盒子/settings.json'));\\n        curSettings.erjiPage = input;\\n        saveFile('hiker://files/rules/cy/dm盒子/settings.json', JSON.stringify(curSettings));\\n        refreshPage(true);\\n        return \\\"hiker://empty\\\";\\n    }),\\n    extra: {\\n        id: '二级模式'\\n    }\\n}, {\\n    title: '使用手册',\\n    col_type: 'text_2',\\n    url: 'hiker://page/doc#immersiveTheme#',\\n    extra: {\\n        newWindow: false,\\n        docType: 'help'\\n    }\\n}, {\\n    title: '文件管理',\\n    col_type: 'text_2',\\n    // url: single_dnpluin_newWindow_init(),\\n    url: 'hiker://page/filesSystem#noHistory#',\\n    extra: {\\n        newWindow: true\\n    }\\n}, {\\n    title: 'API文档',\\n    desc: '调用必看',\\n    col_type: 'text_center_1',\\n    url: 'hiker://page/doc',\\n    extra: {\\n        newWindow: false,\\n        docType: 'API'\\n    }\\n}, {\\n    title: '<big><b>欢迎来到dm盒子：</b></big><br><font color=blue>弹幕收纳盒，提供弹幕数据解析、下载、分享、观影多重方式让弹幕可以在海阔规则内和各类外部场景自由使用\\\\t\\\\t★)^-^(★</font><div style=\\\"text-align: center;\\\">当前版本：' + MY_RULE.version + '<br><a href=\\\"https://txc.qq.com/products/662723#noRecordHistory#\\\">点击反馈</a>\\\\t\\\\t<a href=\\\"hiker://page/Donate.v#noHistory##noRecordHistory#\\\">点击赞赏</a>\\\\t\\\\tOr2</div>',\\n    col_type: 'rich_text',\\n    url: $().lazyRule(() => {\\n        return \\\"toast://疼，别点！\\\"\\n    })\\n}]\\nsetResult(d);\\n\"},{\"name\":\"声明\",\"path\":\"Main\",\"rule\":\"if (getItem(\\\"first\\\") == MY_RULE.version) {\\n    $.require(\\\"homePage\\\");\\n} else if (MY_PAGE === 1) {\\n    let d = []\\n    let time = 10;\\n    let id = Date.now();\\n    let subPass = \\\"海阔视界规则分享，当前分享的是：合集规则订阅￥home_sub￥dm盒子@@http://hiker.nokia.press/hikerule/rulelist.json?id=5923&debug=true\\\";\\n    let content=`\\n    1. 本小程序核心代码99%开源，且本规则为学习目的，请于导入24小时内删除！！！\\n    2. 本小程序<b>完全免费</b>，如果你是付费购买的恭喜你被骗了。当然如果有能力想鼓励作者的可以${\\\"支持一下\\\".link('hiker://page/Donate.v#noHistory##noRecordHistory#')}</a>(<small>点击链接可进行赞赏</a>，稍后亦可在主页菜单进入</small>)。\\n    3. 初次使用务必先访问本程序首页并点击同意刷新首页后再使用\\n    4. 相关说明参见规则主页内部的使用手册，你亦可访问网址<a href='https://docs.qq.com/doc/DU25zWmZSSmhLd1RH#noHistory##noRecordHistory#'>https://docs.qq.com/doc/DU25zWmZSSmhLd1RH</a>进行查阅。\\n    5. 本小程序目前功能基本齐全，不再更新请勿提交任何新功能请求。\\n    5. 使用过程如遇错误，可前往<a href='https://txc.qq.com/products/662723#noRecordHistory#'>https://txc.qq.com/products/662723</a>或者海阔频道进行反馈与交流学习Or2\\n    6. 20240220以上版本请保持bili规则同步最新\\n    开始使用本规则即代表遵守规则,当前版本：${MY_RULE.version}\\n    如果你想保持最新版请${\\\"订阅此规则\\\".link(\\\"rule://\\\" + base64Encode(subPass))}\\n    ----------\\n    *本次更新：以优化使用体验为主，具体前往频道或在线手册获取详细更新内容\\n    *心有余力不足，江湖再见>—_-(\\n    `\\n    d.push({\\n        title: \\\"““””<strong>使用前须知</strong>\\\".big(),\\n        col_type: \\\"text_center_1\\\",\\n        url: \\\"hiker://empty\\\",\\n        extra: {\\n            lineVisible: false\\n        }\\n    });\\n    d.push({\\n        title: content.trim().replace(/\\\\n\\\\s*?/g, \\\"<br>\\\"),\\n        \\\"col_type\\\": \\\"rich_text\\\"\\n    }, {\\n        col_type: \\\"line\\\"\\n    }, {\\n        title: time + \\\"秒后继续\\\",\\n        url: \\\"toast://请认真阅读以上内容\\\",\\n        col_type: \\\"text_center_1\\\",\\n        extra: {\\n            id: id + \\\"timer\\\"\\n        }\\n    });\\n    setResult(d);\\n    while (time != 0) {\\n        java.lang.Thread.sleep(1000);\\n        time -= 1;\\n        updateItem(id + \\\"timer\\\", {\\n            title: time + \\\"秒后继续\\\"\\n        });\\n    }\\n    updateItem(id + \\\"timer\\\", {\\n        title: \\\"““我同意以上要求””\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule((v) => {\\n            setItem(\\\"first\\\", String(v));\\n            refreshPage();\\n            return \\\"toast://感谢您的理解\\\";\\n        }, MY_RULE.version),\\n        col_type: \\\"text_center_1\\\"\\n    });\\n}\\n\"},{\"name\":\"文件管理API\",\"path\":\"fileAPI\",\"rule\":\"\\n$.exports.checkFileExists = function (filePath) {\\n    var javaImport = new JavaImporter(java.io);\\n    with (javaImport) {\\n        var file = new File(filePath);\\n        return file.exists();\\n    }\\n}\\n$.exports.createDirectory = function (directoryPath) {\\n    var javaImport = new JavaImporter(java.io);\\n    with (javaImport) {\\n        var directory = new File(directoryPath);\\n        if (!directory.exists()) {\\n            if (!directory.mkdirs()) {\\n                console.log(\\\"目标文件夹创建失败：\\\" + directoryPath);\\n            }\\n        }\\n    }\\n}\\n$.exports.renameFile = function (filePath, newFileName) {\\n    var javaImport = new JavaImporter(java.io);\\n    with (javaImport) {\\n        var file = new File(filePath);\\n        var parentDir = file.getParent();\\n        var newFilePath = parentDir + \\\"/\\\" + newFileName;\\n\\n        if (!$.require(\\\"hiker://page/fileAPI?rule=dm盒子\\\").checkFileExists(filePath)) {\\n            console.log(\\\"源文件不存在，请检查路径：\\\" + filePath);\\n            return;\\n        }\\n\\n        try {\\n            if (!file.renameTo(new File(newFilePath))) {\\n                console.log(\\\"文件重命名失败！\\\");\\n            }\\n        } catch (e) {\\n            console.log(\\\"文件重命名失败！\\\");\\n            console.log(\\\"失败原因：\\\" + e.message);\\n        }\\n    }\\n}\\n$.exports.copyFile = function (sourcePath, destinationDir) {\\n    var javaImport = new JavaImporter(java.io);\\n    with (javaImport) {\\n        var file = new File(sourcePath);\\n        var destDir = new File(destinationDir);\\n\\n        if (!$.require(\\\"hiker://page/fileAPI?rule=dm盒子\\\").checkFileExists(sourcePath)) {\\n            console.log(\\\"源文件不存在，请检查路径：\\\" + sourcePath);\\n            return;\\n        }\\n\\n        try {\\n            if (!destDir.exists()) {\\n                console.log(\\\"目标文件夹不存在，将创建文件夹：\\\" + destDir);\\n                $.require(\\\"hiker://page/fileAPI?rule=dm盒子\\\").createDirectory(destDir.getPath());\\n            }\\n\\n            var destFilePath = destinationDir + \\\"/\\\" + file.getName();\\n            var input = new FileInputStream(file);\\n            var output = new FileOutputStream(destFilePath);\\n            var buffer = java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE, 1024);\\n            var length;\\n            while ((length = input.read(buffer)) > 0) {\\n                output.write(buffer, 0, length);\\n            }\\n            input.close();\\n            output.close();\\n\\n            console.log(\\\"文件拷贝成功！\\\");\\n        } catch (e) {\\n            console.log(\\\"文件拷贝失败！\\\");\\n            console.log(\\\"失败原因：\\\" + e.message);\\n        }\\n    }\\n}\\n$.exports.moveFile = function (sourcePath, destinationDir) {\\n    var javaImport = new JavaImporter(java.io);\\n    with (javaImport) {\\n        var file = new File(sourcePath);\\n        var destDir = new File(destinationDir);\\n\\n        if (!$.require(\\\"hiker://page/fileAPI?rule=dm盒子\\\").checkFileExists(sourcePath)) {\\n            console.log(\\\"源文件不存在，请检查路径：\\\" + sourcePath);\\n            return;\\n        }\\n\\n        try {\\n            if (!destDir.exists()) {\\n                console.log(\\\"目标文件夹不存在，将创建文件夹：\\\" + destDir);\\n                $.require(\\\"hiker://page/fileAPI?rule=dm盒子\\\").createDirectory(destDir.getPath());\\n            }\\n\\n            var destFilePath = destinationDir + \\\"/\\\" + file.getName();\\n            if (!file.renameTo(new File(destFilePath))) {\\n                console.log(\\\"文件移动失败！\\\");\\n            }\\n        } catch (e) {\\n            console.log(\\\"文件移动失败！\\\");\\n            console.log(\\\"失败原因：\\\" + e.message);\\n        }\\n    }\\n}\\n\"},{\"name\":\"赞赏\",\"path\":\"Donate.v\",\"rule\":\"js:\\nlet d = [];\\nsetPageTitle(\\\"捐赠/支持\\\");\\nd.push({\\n    title: \\\"捐赠/支持\\\",\\n    desc: \\\"这个捐赠不能为你带来特权，但您的支持是我更新创作的动力。\\\",\\n    col_type: \\\"text_center_1\\\",\\n    url: \\\"toast://感谢您的支持\\\"\\n});\\nd.push({\\n    col_type: \\\"pic_1_full\\\",\\n    url: \\\"https://i0.hdslb.com/bfs/article/84d01007559b7b1e89675c7e05ba77f1688545001.jpg@Referer=\\\",\\n    pic_url: \\\"https://i0.hdslb.com/bfs/article/84d01007559b7b1e89675c7e05ba77f1688545001.jpg@Referer=\\\"\\n});\\nd.push({\\n    col_type: \\\"text_center_1\\\",\\n    title: \\\"““””\\\" + \\\"图片加载缓慢请稍等\\\".small().fontcolor(\\\"Gray\\\"),\\n    url: \\\"hiker://empty\\\",\\n    extra: {\\n        lineVisible: false\\n    }\\n});\\nsetResult(d);\\n\"},{\"name\":\"360°\",\"path\":\"danmu#360°\",\"rule\":\"js:\\nfunction search(name) {\\n    listData = search360(name);\\n    let d = [];\\n    listData.forEach(rs => {\\n        // 将seriesSite转换为数组并合并到vipSite数组中\\n        let combinedSites = rs.vipSite.concat(rs.seriesSite);\\n        // 使用filter()排除null值，然后使用Set去除重复项，最后转换回数组\\n        let uniqueSites = Array.from(new Set(combinedSites.filter(item => item !== null && item !== undefined)));\\n        var targets = [\\\"qq\\\", \\\"youku\\\", \\\"qiyi\\\", \\\"bilibili1\\\", \\\"imgo\\\"];\\n        if (targets.some(target => uniqueSites.includes(target))) {\\n            d.push({\\n                title: rs.titleTxt + \\\"[⭐来源：\\\" + uniqueSites.join(',') + ']',\\n                url: $().lazyRule((catId, enId, site, title, uniqueSites, zongyiInfo) => {\\n                    // 1,电影\\n                    if (catId == \\\"1\\\") {\\n                        let d=[];\\n                        Data = JSON.parse(fetch(buildUrl('https://api.web.360kan.com/v1/detail', {\\n                            cat: catId,\\n                            id: enId\\n                        }))).data;\\n                        playlinksdetail = Data.playlinksdetail;\\n                        var targets = [\\\"qq\\\", \\\"youku\\\", \\\"qiyi\\\", \\\"bilibili1\\\", \\\"imgo\\\"];\\n                        for (var site in playlinksdetail) {\\n                            if (playlinksdetail.hasOwnProperty(site)) {\\n                                if (targets.includes(playlinksdetail[site].site)) {\\n                                    console.log(\\\"Found target:\\\", site);\\n                                    let itemTitle = site + '_' + Data.title;\\n                                    vipUrl = playlinksdetail[site].default_url.split('?')[0];\\n                                    d.push({\\n                                        title: itemTitle,\\n                                        url: $().lazyRule((title, vipUrl) => {\\n                                            return $.require('hiker://page/dmFun?rule=dm盒子').downloadRoute(title, vipUrl,false);\\n                                        },itemTitle, vipUrl)\\n                                    })\\n                                } else {\\n                                    console.log(\\\"Skipping non-target:\\\", site);\\n                                }\\n                            }\\n                        }\\n                        return d;\\n                    } else if (catId == \\\"3\\\") {\\n                        // 综艺\\n                        let d=[];\\n                        for (var site in zongyiInfo) {\\n                            let d=[];\\n                            d.push({\\n                                title: site,\\n                                url: $('#noLoading#').lazyRule((catId,enId,zongyiInfo,site) => {\\n                                    let d=[];\\n                                    zongyiInfo[site].forEach(it => {\\n                                        d.push({\\n                                            title: it + '',\\n                                            url: $('#noLoading#').lazyRule((catId,enId,site,it) => {\\n                                                let d=[];\\n                                                Data = JSON.parse(fetch(buildUrl('https://api.web.360kan.com/v1/detail', {\\n                                                    cat: catId,\\n                                                    id: enId,\\n                                                    site: site,\\n                                                    year: it\\n                                                }))).data;\\n                                                defaultepisode = Data.defaultepisode;\\n                                                defaultepisode.forEach((it) => {\\n                                                    let itemTitle=it.period + '' + it.name;\\n                                                    let vipUrl=it.url.split('?')[0];\\n                                                    d.push({\\n                                                        title: itemTitle,\\n                                                        url: $().lazyRule((title, vipUrl) => {\\n                                                            return $.require('hiker://page/dmFun?rule=dm盒子').downloadRoute(title, vipUrl,false);\\n                                                        },itemTitle, vipUrl)\\n                                                    })\\n                                                })\\n                                                return d;\\n                                            }, catId,enId,site,it),\\n                                        })\\n                                    })\\n                                    return d;\\n                                },catId,enId,zongyiInfo,site),\\n                            });\\n                            return d;\\n                        }\\n                        return d;\\n                    } else {\\n                        // 2电视剧,4动漫\\n                        if (site && uniqueSites.length == 1) {\\n                            let d=[];\\n                            let queryData = {\\n                                cat_id: catId,\\n                                ent_id: enId,\\n                                site: site\\n                            };\\n                            // 将JavaScript对象转换为JSON字符串\\n                            let jsonData = JSON.stringify([queryData]);\\n                            // 使用encodeURIComponent确保JSON字符串被正确编码\\n                            let encodedData = encodeURIComponent(jsonData);\\n                            // 构建完整的URL\\n                            let url = `https://api.so.360kan.com/episodesv2?s=${encodedData}`;\\n                            Data = JSON.parse(fetch(url)).data[0].seriesHTML.seriesPlaylinks;\\n                            let index = 1;\\n                            d = Data.map((it) => {\\n                                let itemTitle = title + '_' + index;\\n                                vipUrl = it.url.split('?')[0];\\n                                const result = {\\n                                    title: itemTitle,\\n                                    url: $().lazyRule((title, vipUrl) => {\\n                                        return $.require('hiker://page/dmFun?rule=dm盒子').downloadRoute(title, vipUrl,false);\\n                                    },itemTitle, vipUrl)\\n                                };\\n                                index++; // 在每次迭代中递增索引\\n                                return result;\\n                            })\\n                            return d;\\n                        } else if (site && uniqueSites.length > 1) {\\n                            log('该影片实则可能多条线路')\\n                            // 添加线路标签\\n                            let d = [];\\n                            uniqueSites.forEach(it => {\\n                                d.push({\\n                                    title: it,\\n                                    url: $('#noLoading#').lazyRule((it,catId,enId,title) => {\\n                                        let d=[];\\n                                        let queryData = {\\n                                            cat_id: catId,\\n                                            ent_id: enId,\\n                                            site: it\\n                                        };\\n                                        // 将JavaScript对象转换为JSON字符串\\n                                        let jsonData = JSON.stringify([queryData]);\\n                                        // 使用encodeURIComponent确保JSON字符串被正确编码\\n                                        let encodedData = encodeURIComponent(jsonData);\\n                                        // 构建完整的URL\\n                                        let url = `https://api.so.360kan.com/episodesv2?s=${encodedData}`;\\n                                        Data = JSON.parse(fetch(url)).data[0].seriesHTML.seriesPlaylinks;\\n                                        let index = 1;\\n                                        d = Data.map((it) => {\\n                                            let itemTitle = title + '_' + index;\\n                                            vipUrl = it.url.split('?')[0];\\n                                            const result = {\\n                                                title: itemTitle,\\n                                                url: $().lazyRule((title, vipUrl) => {\\n                                                    return $.require('hiker://page/dmFun?rule=dm盒子').downloadRoute(title, vipUrl,false);\\n                                                },itemTitle, vipUrl)\\n                                            }\\n                                            index++; // 在每次迭代中递增索引\\n                                            return result;\\n                                        })\\n                                        return d;\\n                                    }, it,catId,enId,title),\\n                                    col_type: 'scroll_button'\\n                                })\\n                            })\\n                            return d;\\n                        }\\n                    }\\n                }, rs.cat_id, rs.en_id, rs.seriesSite, rs.titleTxt, uniqueSites, rs.cat_id == '3' ? rs.playlinks_year : undefined),\\n            });\\n        }\\n    });\\n    return d;\\n}\\n\\nfunction search360(seaword) {\\n    return JSON.parse(fetch(buildUrl(\\\"https://api.so.360kan.com/index\\\", {\\n        force_v: 1,\\n        kw: seaword,\\n        from: '',\\n        pageno: 1,\\n        v_ap: 1,\\n        tab: 'all'\\n    }))).data.longData.rows;\\n}\\n\\n\\nsearch(input)\\n\"},{\"name\":\"🐬\",\"path\":\"danmu#🐬\",\"rule\":\"js:\\nevalPrivateJS('')\"},{\"name\":\"Zlib\",\"path\":\"zlib\",\"rule\":\"var Zlib = (function () {\\n    var GZIPInputStream = java.util.zip.GZIPInputStream;\\n    var InflaterInputStream = java.util.zip.InflaterInputStream;\\n    var ByteArrayInputStream = java.io.ByteArrayInputStream;\\n    var ByteArrayOutputStream = java.io.ByteArrayOutputStream;\\n    var StandardCharsets = java.nio.charset.StandardCharsets;\\n\\n    function detectFormat(bytes) {\\n        if (bytes.length < 2) return 0;\\n        var b0 = java.lang.reflect.Array.getByte(bytes, 0) & 0xFF;\\n        var b1 = java.lang.reflect.Array.getByte(bytes, 1) & 0xFF;\\n        if (b0 === 0x1F && b1 === 0x8B) return 1;\\n        if (b0 === 0x78) return 2;\\n        return 0;\\n    }\\n\\n    function toJavaByteArray(input) {\\n        try {\\n            var bytes;\\n            if (typeof input === 'string') {\\n                if (!/^[0-9a-fA-F]+$/.test(input)) {\\n                    throw new Error(\\\"HEX format error\\\");\\n                }\\n                if (input.length % 2 !== 0) {\\n                    throw new Error(\\\"HEX length error\\\");\\n                }\\n                bytes = java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE, input.length / 2);\\n                for (var i = 0; i < input.length; i += 2) {\\n                    var val = parseInt(input.substr(i, 2), 16);\\n                    if (isNaN(val)) throw new Error(\\\"Invalid HEX at \\\" + i);\\n                    var byteVal = val > 127 ? val - 256 : val;\\n                    java.lang.reflect.Array.setByte(bytes, i / 2, byteVal);\\n                }\\n            } else if (input instanceof Uint8Array) {\\n                bytes = java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE, input.length);\\n                for (var j = 0; j < input.length; j++) {\\n                    var num = input[j];\\n                    java.lang.reflect.Array.setByte(bytes, j, num > 127 ? num - 256 : num);\\n                }\\n            } else {\\n                throw new Error(\\\"Unsupported type\\\");\\n            }\\n            return bytes;\\n        } catch (e) {\\n            log(\\\"[Zlib] Input Error: \\\" + e.message);\\n            throw e;\\n        }\\n    }\\n\\n    // 为原始Deflate数据添加伪zlib头 (RFC 1950)\\n    function addZlibHeader(bytes) {\\n        var newBytes = java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE, bytes.length + 2);\\n        java.lang.reflect.Array.setByte(newBytes, 0, 0x78); // CMF\\n        java.lang.reflect.Array.setByte(newBytes, 1, 0x9C); // FLG\\n        for (var i = 0; i < bytes.length; i++) {\\n            java.lang.reflect.Array.setByte(newBytes, i + 2, java.lang.reflect.Array.getByte(bytes, i));\\n        }\\n        return newBytes;\\n    }\\n\\n    function decompressCore(input) {\\n        var bis = null, cis = null, bos = null;\\n        try {\\n            var bytes = toJavaByteArray(input);\\n            var format = detectFormat(bytes);\\n            var inflater;\\n\\n            bis = new ByteArrayInputStream(bytes);\\n            // cis = format === 1 ?\\n            //     new GZIPInputStream(bis) :\\n            //     new InflaterInputStream(bis);\\n\\n            // 处理 Android 低版本 Inflater 兼容\\n            if (format === 0) { // 无标准头\\n                try {\\n                    inflater = new java.util.zip.Inflater(true);\\n                } catch (e) {\\n                    bytes = addZlibHeader(bytes);\\n                    bis = new ByteArrayInputStream(bytes);\\n                    inflater = new java.util.zip.Inflater();\\n                }\\n                cis = new InflaterInputStream(bis, inflater);\\n            } else {\\n                cis = format === 1 ?\\n                    new GZIPInputStream(bis) :\\n                    new InflaterInputStream(bis);\\n            }\\n\\n            bos = new ByteArrayOutputStream();\\n            var buffer = java.lang.reflect.Array.newInstance(java.lang.Byte.TYPE, 8192);\\n            var len;\\n\\n            while ((len = cis.read(buffer)) !== -1) {\\n                bos.write(buffer, 0, len);\\n            }\\n\\n            return bos.toByteArray();\\n        } catch (e) {\\n            log(\\\"[Zlib] Decompress Error: \\\" + e.message);\\n            return null;\\n        } finally {\\n            try { if (cis) cis.close(); } catch (ee) { }\\n            try { if (bis) bis.close(); } catch (ee) { }\\n            try { if (bos) bos.close(); } catch (ee) { }\\n        }\\n    }\\n\\n    return {\\n        uncompress: function (input, options) {\\n            try {\\n                if (!input || (typeof input === 'string' && input.length < 4) ||\\n                    (input instanceof Uint8Array && input.length < 2)) {\\n                    log(\\\"[Zlib] Input too short\\\");\\n                    return null;\\n                }\\n                var bytes = decompressCore(input);\\n                if (!bytes) return null;\\n\\n                var encoding = (options && options.encoding) ?\\n                    options.encoding :\\n                    StandardCharsets.UTF_8.name();\\n\\n                return String(new java.lang.String(bytes, encoding));\\n            } catch (e) {\\n                log(\\\"[Zlib] Process Error: \\\" + e.message);\\n                return null;\\n            }\\n        }\\n    };\\n})();\\n\\n$.exports = Zlib;\\n\"},{\"name\":\"腾X\",\"path\":\"danmu#腾X\",\"rule\":\"js:\\nfunction search(name) {\\n    baseData = searchQQ(name);\\n    let d = [];\\n    let tempD = [];\\n    // 普通结果\\n    var baseList = baseData.normalList.itemList;\\n    //  系列结果\\n    var SerieList = baseData.areaBoxList;\\n    try {\\n        baseList.forEach(rs => {\\n            if (rs.videoInfo != null) {\\n                videoInfo = rs.videoInfo;\\n                playSites = videoInfo.playSites[0];\\n                tempD.push({\\n                    title: videoInfo.title + \\\"⭐\\\" + videoInfo.typeName + '-' + videoInfo.year+'-来源:' + playSites.enName,\\n                    url: playSites.episodeInfoList[0].url,\\n                    影片名称:videoInfo.title\\n                });\\n            }\\n        });\\n    } catch (e) {\\n        // 系列结果\\n        log('系列结果');\\n        SerieList.forEach(item => {\\n            if (!item.boxShowName.match(/短视频/)) {\\n                item.itemList.forEach(rs => {\\n                    if (rs.videoInfo != null) {\\n                        videoInfo = rs.videoInfo;\\n                        playSites = videoInfo.playSites[0];\\n                        tempD.push({\\n                            title: videoInfo.title + \\\"⭐\\\" + videoInfo.typeName + '-' + videoInfo.year+'-来源:' + playSites.enName,\\n                            url: playSites.episodeInfoList[0].url,\\n                            影片名称:videoInfo.title\\n                        });\\n                    }\\n                });\\n            }\\n        });\\n\\n    }\\n    // 重组数据结构\\n    d = tempD.map((it) => {\\n        return {\\n            title: it.title,\\n            url: $().lazyRule((indexLink,影片名称) => {\\n                if (indexLink.match(/cover/)) {\\n                    // 手机搜索结果链接\\n                    cid = indexLink.split('/')[5].split('.html')[0];\\n                    if (indexLink.split('=')[1]) {\\n                        vid = indexLink.split('=')[1];\\n                        indexLink = 'https://v.qq.com/x/cover/' + cid + '/' + vid + '.html';\\n                    } else {\\n                        indexLink = 'https://v.qq.com/x/cover/' + cid + '.html';\\n                    }\\n                } else {\\n                    // 手机首页跳转链接\\n                    cid = indexLink.split('=')[1].split('&')[0];\\n                    if (cid == '') {\\n                        vid = indexLink.split('=')[2]\\n                        // 这个cid貌似是错的，，算了就尝试一下，多半还是要404~\\n                        data = fetch('https://union.video.qq.com/fcgi-bin/data?otype=json&tid=682&appid=20001238&appkey=6c03bbe9658448a4&union_platform=1&idlist=' + vid);\\n                        cid = JSON.parse(data.match(/{[\\\\S\\\\s]+}/)[0]).results[0].fields.cover_list[0]\\n                    }\\n                    indexLink = 'https://v.qq.com/x/cover/' + cid + '.html';\\n                }\\n                let d = [];\\n                try {\\n                    // 郑娟、动漫（部分）\\n                    pageContext = 'lid=&cid=' + cid + '&page_num=0&page_size=30&id_type=1&req_type=6&req_from=web_vsite&req_from_second_type=&detail_page_type=1';\\n                    curtag = 0; tablen = 1;\\n                    episodeInfoList = [];\\n                    while (tablen - curtag > 0) {\\n                        data = JSON.parse(fetch('https://pbaccess.video.qq.com/trpc.universal_backend_service.page_server_rpc.PageServer/GetPageData?video_appid=3000010&vplatform=2&vversion_name=8.2.96', {\\n                            body: {\\n                                \\\"page_params\\\": {\\n                                    \\\"req_from\\\": \\\"web_vsite\\\",\\n                                    \\\"page_id\\\": \\\"vsite_episode_list\\\",\\n                                    \\\"page_type\\\": \\\"detail_operation\\\",\\n                                    \\\"id_type\\\": \\\"1\\\",\\n                                    \\\"page_size\\\": \\\"\\\",\\n                                    \\\"cid\\\": cid,\\n                                    \\\"vid\\\": \\\"\\\",\\n                                    \\\"lid\\\": \\\"\\\",\\n                                    \\\"page_num\\\": \\\"\\\",\\n                                    \\\"page_context\\\": pageContext,\\n                                    \\\"detail_page_type\\\": \\\"1\\\"\\n                                },\\n                                \\\"has_cache\\\": 1\\n                            },\\n                            headers: {\\n                                'Referer': 'https://v.qq.com/'\\n                            }\\n                        })).data.module_list_datas[0].module_datas[0];\\n                        // 打补丁，一刀切，存在特殊分季，如动漫诛仙\\n                        分季列表 = data.item_data_lists.item_datas.filter((it) => it.item_type === \\\"28\\\");\\n                        if (分季列表.length > 0) throw new Error('存在特殊的分季，尝试备用接口方案...');\\n                        // 无集数分栏\\n                        if (data.module_params.tabs == \\\"\\\") {\\n                            tabs = [];\\n                        } else {\\n                            tabs = JSON.parse(data.module_params.tabs);\\n                        }\\n                        tablen = tabs.length;\\n                        curtag++;\\n                        if (curtag < tablen) pageContext = tabs[curtag].page_context;\\n                        episodeInfoList = episodeInfoList.concat(data.item_data_lists.item_datas);\\n                    }\\n                    正片列表 = episodeInfoList.filter((it) => {\\n                        // item_type不是1可能不是正片剧集\\n                        if (it.item_type != \\\"1\\\") return false;\\n                        if (it.item_params.is_trailer != \\\"1\\\") return true;\\n                    }).map((it) => {\\n                        // log(it);\\n                        showTitle = (it.item_params.tag_right_text ? it.item_params.tag_right_text + '\\\\t' : '') + ((!it.item_params.union_title.match(/彩蛋/) ? it.item_params.union_title : it.item_params.play_title) + '_' + it.item_params.video_subtitle);\\n                        return {\\n                            title: showTitle,\\n                            url: `https://v.qq.com/x/cover/${cid}/${it.item_params.vid}.html`,\\n                            desc: ''\\n                        }\\n                    })\\n                    d = 正片列表.map((it) => {\\n                        let itemTitle = it.title;\\n                        let vipUrl = it.url;\\n                        return {\\n                            title: itemTitle,\\n                            url: $().lazyRule((title, vipUrl) => {\\n                                return $.require('hiker://page/dmFun?rule=dm盒子').downloadRoute(title, vipUrl, false);\\n                            }, itemTitle, vipUrl)\\n                        }\\n                    })\\n                } catch (e) {\\n                    log('首选接口出错：' + e);\\n                    // 综艺、电影（无标题）\\n                    pageContext = 'need_async=true';\\n                    curtag = 0; tablen = 1;\\n                    episodeInfoList = [];\\n                    while (tablen - curtag > 0) {\\n                        data = JSON.parse(fetch(buildUrl('https://pbaccess.video.qq.com/trpc.videosearch.search_cgi.http/load_playsource_list_info', {\\n                            pageNum: '0',\\n                            id: cid,\\n                            dataType: '2',\\n                            pageContext: encodeURIComponent(pageContext),\\n                            scene: '2',\\n                            platform: '2',\\n                            appId: '10718',\\n                            site: 'qq'\\n                        }))).data.normalList.itemList[0].videoInfo.firstBlockSites[0];\\n                        tabs = data.tabs;\\n                        tablen = tabs.length;\\n                        curtag++;\\n                        if (curtag < tablen) pageContext = tabs[curtag].asnycParams;\\n                        episodeInfoList = episodeInfoList.concat(data.episodeInfoList);\\n                    }\\n                    正片列表 = episodeInfoList.filter((it) => {\\n                        lable = it.markLabel;\\n                        if (lable.match(/限免/) || !lable.match(/预|花絮/)) {\\n                            return true;\\n                        } else {\\n                            return false;\\n                        }\\n                        // !it.markLabel.match(/预|花絮/)\\n                    }).map((it) => {\\n                        // log(it);\\n                        title = (it.checkUpTime.split(' ')[0] + '\\\\t') + (/^\\\\d+$/.test(it.title) ? 影片名称 + '_' + it.title : it.title);\\n                        return {\\n                            title: title,\\n                            url: it.url,\\n                            desc: ''\\n                        }\\n                    })\\n                    d = 正片列表.map((it) => {\\n                        let itemTitle = it.title;\\n                        let vipUrl = it.url;\\n                        return {\\n                            title: itemTitle,\\n                            url: $().lazyRule((title, vipUrl) => {\\n                                return $.require('hiker://page/dmFun?rule=dm盒子').downloadRoute(title, vipUrl, false);\\n                            }, itemTitle, vipUrl)\\n                        }\\n                    })\\n                }\\n                return d;\\n            }, it.url,it.影片名称)\\n        }\\n    })\\n    return d;\\n}\\n\\nfunction searchQQ(seaword) {\\n    var res = JSON.parse(fetch(\\\"https://pbaccess.video.qq.com/trpc.videosearch.mobile_search.MultiTerminalSearch/MbSearch?vplatform=2\\\", {\\n        body: { \\\"version\\\": \\\"24072901\\\", \\\"clientType\\\": 1, \\\"filterValue\\\": \\\"undefined\\\", \\\"uuid\\\": \\\"9C771991-2BD9-4200-AE44-898D626738EE\\\", \\\"retry\\\": 0, \\\"query\\\": seaword, \\\"pagenum\\\": 0, \\\"pagesize\\\": 30, \\\"queryFrom\\\": 110, \\\"searchDatakey\\\": \\\"\\\", \\\"transInfo\\\": \\\"\\\", \\\"isneedQc\\\": true, \\\"preQid\\\": \\\"\\\", \\\"adClientInfo\\\": \\\"\\\", \\\"extraInfo\\\": { \\\"isNewMarkLabel\\\": \\\"1\\\", \\\"multi_terminal_pc\\\": \\\"1\\\" } },\\n        headers: {\\n            \\\"User-Agent\\\": PC_UA,\\n            \\\"Referer\\\": \\\"https://v.qq.com\\\",\\n            \\\"origin\\\": \\\"https://v.qq.com\\\",\\n            \\\"content-type\\\": \\\"application/json\\\",\\n            \\\"accept\\\": \\\"application/json\\\",\\n            \\\"sec-ch-ua-platform\\\": \\\"Windows\\\"\\n        },\\n        method: \\\"POST\\\"\\n    }));\\n    return res.data;\\n}\\n\\n\\nsearch(input)\\n\"},{\"name\":\"芒G\",\"path\":\"danmu#芒G\",\"rule\":\"js:\\nfunction search(name) {\\n    listData = searchMG(name);\\n    let d = [];\\n    listData.forEach(movie => {\\n        if (movie.name == '媒资头部') {\\n            from = '芒果TV';\\n            if (!movie.data[0].url.match(/qq|youku|qiyi|bili/)) {\\n                itemTitle = movie.data[0].title.replace(/(<B>|<\\\\/B>)/g, '');\\n                vipUrl = (from == '芒果TV' ? \\\"https://www.mgtv.com\\\" + movie.data[0].url : movie.data[0].url.replace('m', 'www'));\\n                d.push({\\n                    title: itemTitle,\\n                    url: $().lazyRule((indexLink) => {\\n                        let d = [];\\n                        html = request(indexLink);\\n                        try {\\n                            vid = indexLink.split('/')[5].split('.')[0];\\n                        } catch (e) {\\n                            link = html.match(/window.location = \\\"[\\\\S\\\\s]+(?=\\\" \\\\+ window.location.search)/)[0].replace('window.location = \\\"', '');\\n                            vid = link.split('/')[5].split('.')[0];\\n                            html = request(link);\\n                        }\\n\\n                        // 获取首页信息（30一页，可能多于30，因为番外，size不建议修改会出错）\\n                        剧集信息 = JSON.parse(fetch(`https://pcweb.api.mgtv.com/episode/list?_support=10000000&version=5.5.35&video_id=${vid}&page=1&size=30&allowedRC=1&_support=10000000`, {\\n                            headers: {\\n                                'User-Agent': PC_UA\\n                            },\\n                            referrer: indexLink,\\n                            method: 'GET'\\n                        })).data;\\n                        总页数 = 剧集信息.total_page;\\n                        剧集列表 = 剧集信息.list;\\n                        for (let page = 2; page <= 总页数; page++) {\\n                            剧集列表 = 剧集列表.concat(JSON.parse(fetch(`https://pcweb.api.mgtv.com/episode/list?_support=10000000&version=5.5.35&video_id=${vid}&page=${page}&size=30&allowedRC=1&_support=10000000`, {\\n                                headers: {\\n                                    'User-Agent': PC_UA\\n                                },\\n                                referrer: indexLink,\\n                                method: 'GET'\\n                            })).data.list);\\n                        }\\n                        正片列表 = 剧集列表.filter((it) => {\\n                            // corner可能为空数组\\n                            try {\\n                                状态或集数标识 = it.corner[0].font;\\n                            } catch (e) {\\n                                状态或集数标识 = '';\\n                            }\\n                            if (!状态或集数标识.match(/预|花絮/)) return true;\\n                        }).map((it) => {\\n                            log(it);\\n                            showTitle=it.ts.split(' ')[0]+'\\\\t'+it.t1 + '_' + it.t2;\\n                            return {\\n                                title: showTitle,\\n                                url: 'https://www.mgtv.com' + it.url,\\n                                desc: '时长：' + it.time + '\\\\t发布：' + it.ts\\n                            }\\n                        })\\n                        d = 正片列表.map(it => {\\n                            let itemTitle = it.title;\\n                            let vipUrl = it.url;\\n                            return {\\n                                title: itemTitle,\\n                                url: $().lazyRule((title, vipUrl) => {\\n                                    return $.require('hiker://page/dmFun?rule=dm盒子').downloadRoute(title, vipUrl,false);\\n                                }, itemTitle, vipUrl)\\n                            }\\n                        })\\n\\n                        return d;\\n\\n                    }, vipUrl)\\n                });\\n            }\\n        }\\n    });\\n    return d;\\n}\\n\\nfunction searchMG(seaword) {\\n    list = JSON.parse(fetch(\\\"https://mobileso.bz.mgtv.com/msite/search/v2?q=\\\" + seaword + \\\"&pc=30&pn=1&sort=0&ty=0&du=0&pt=0&corr=1&abroad=0&_support=10000000000000000&callback=jsonp_ltdyqd2pcfsnbnr\\\", {\\n        headers: {\\n            'User-Agent': PC_UA\\n        },\\n        method: 'GET'\\n    }).match(/{[\\\\S\\\\s]+}/)).data.contents;\\n    return list;\\n}\\n\\n\\nsearch(input)\\n\"},{\"name\":\"奇Y\",\"path\":\"danmu#奇Y\",\"rule\":\"js:\\nfunction search(name) {\\n    listData = searchQY(name);\\n    let d = [];\\n    let tempD = [];\\n    listData.forEach(rs => {\\n        if (rs.videoDocType == 1 && rs.siteName.match(/奇/)) {\\n            tempD.push({\\n                title: rs.g_title + \\\"⭐来源：\\\" + rs.siteName,\\n                url: rs.g_main_link\\n            });\\n        }\\n    });\\n    if (html.data.formatData.intentList) {\\n        addList = html.data.formatData.intentList;\\n        // 应该根据rs.g_meta过滤下\\n        addList.forEach(rs => {\\n            tempD.push({\\n                title: rs.g_title + \\\"⭐\\\" + rs.g_meta,\\n                url: rs.g_main_link\\n            });\\n        });\\n    }\\n    d = tempD.map(it => {\\n        itemTitle = it.title;\\n        vipUrl = it.url;\\n        return {\\n            title: itemTitle,\\n            url: $().lazyRule((indexLink) => {\\n                let d = [];\\n                var 正片列表=[];\\n                indexLink = indexLink.replace('www', 'm');\\n                html = request(indexLink);\\n                viedeoInfo = JSON.parse(html.match(/\\\"albumInfo\\\"[\\\\S\\\\s]+(?=,\\\"albumListInfo\\\")/)[0].replace('\\\"albumInfo\\\":', ''));\\n                infoAdd = JSON.parse(html.match(/\\\"videoInfo\\\":{[\\\\S\\\\s]+}(?=,\\\"videoType\\\")/)[0].replace('\\\"videoInfo\\\":', ''));\\n                影片名称 = viedeoInfo.albumName ? viedeoInfo.albumName : infoAdd.videoName;\\n                类型 = infoAdd.channelName;\\n                剧集ID = infoAdd.albumQipuId;\\n                if (类型 == '电影' || infoAdd.videoName.match(/预告/)) {\\n                    正片列表.push({\\n                        title: 影片名称,\\n                        url: indexLink.replace('m', 'www'),\\n                    });\\n                } else {\\n                    // 有一部分奇葩的纪录片也是有年份的，普通接口还没有数据只好这样判断了，注意是'\\\"\\\"'~\\n                    if (html.match(/\\\"summary\\\":[\\\\S\\\\s]+(?=,\\\"count\\\")/)[0].replace('\\\"summary\\\":', '') != '\\\"\\\"') {\\n                        时间线选集 = JSON.parse(html.match(/\\\"summary\\\":[\\\\S\\\\s]+(?=,\\\"count\\\")/)[0].replace('\\\"summary\\\":', ''));\\n                        剧集列表 = [];\\n                        // 偷懒！按啥年份和月份选集，简直浪费时间~\\n                        时间线选集.forEach(list => {\\n                            年份 = list.year;\\n                            剧集信息 = JSON.parse(request(\\\"https://pcw-api.iqiyi.com/album/source/svlistinfo?cid=6&sourceid=\\\" + 剧集ID + \\\"&timelist=\\\" + 年份 + \\\"&callback=window.Q.__callbacks__.cbp5bps9\\\").match(/{\\\"code\\\"[\\\\S\\\\s]+}(?=\\\\);}catch\\\\(e\\\\){})/)[0]);\\n                            剧集列表 = 剧集列表.concat(剧集信息.data[年份]);\\n                        });\\n                        正片列表 = 剧集列表;\\n                    } else {\\n                        page = 1; size = 200;\\n                        totalPage = 2;\\n                        while (totalPage - page >= 0) {\\n                            剧集信息 = JSON.parse(fetch(\\\"https://pcw-api.iqiyi.com/albums/album/avlistinfo?aid=\\\" + 剧集ID + \\\"&size=\\\" + size + \\\"&page=\\\" + page + \\\"&callback=window.Q.__callbacks__.cbu0ch7s\\\").match(/{\\\"code\\\"[\\\\S\\\\s]+}(?=\\\\);}catch\\\\(e\\\\){})/)[0]).data;\\n                            正片列表 = 正片列表.concat(剧集信息.epsodelist);\\n                            page++;\\n                            totalPage = 剧集信息.page;\\n                        }\\n                    }\\n                    正片列表 = 正片列表.map((it) => {\\n                        // log(it)\\n                        return {\\n                            // title: it.shortTitle,老剧集会啥也不显示，没数据\\n                            title: it.period+'\\\\t'+it.name + \\\"_\\\" + it.subtitle,\\n                            url: it.playUrl\\n                        }\\n                    })\\n                }\\n                d = 正片列表.map(it => {\\n                    itemTitle = it.title;\\n                    vipUrl = it.url;\\n                    return {\\n                        title: itemTitle,\\n                        url: $().lazyRule((title, vipUrl) => {\\n                            return $.require('hiker://page/dmFun?rule=dm盒子').downloadRoute(title, vipUrl,false);\\n                        }, itemTitle, vipUrl)\\n                    }\\n                })\\n                return d;\\n            }, vipUrl)\\n        }\\n    })\\n    return d;\\n}\\n\\nfunction searchQY(seaword) {\\n    html = JSON.parse(fetch(\\\"https://pcw-api.iqiyi.com/strategy/pcw/data/soBaseCardLeftSide?pageNum=1&key=\\\" + seaword));\\n    list = html.data.formatData.list;\\n    return list;\\n}\\n\\n\\nsearch(input)\\n\"},{\"name\":\"哔B\",\"path\":\"danmu#哔B\",\"rule\":\"js:\\nfunction search(name) {\\n    listData = searchBili(name);\\n    let d = [];\\n    let tempD=[];\\n    if (listData.番剧) {\\n        listData.番剧.forEach(item => {\\n            tempD.push({\\n                title: item.title.replace(/<em class=\\\"keyword\\\">/g, '').replace(/<\\\\/em>/g, '')+'[⭐番剧]',\\n                url: item.season_id\\n            });\\n        });\\n    }\\n    if (listData.影视) {\\n        listData.影视.forEach(item => {\\n            tempD.push({\\n                title: item.title.replace(/<em class=\\\"keyword\\\">/g, '').replace(/<\\\\/em>/g, '')+'[⭐影视]',\\n                url: item.season_id\\n            });\\n        });\\n    }\\n    d=tempD.map(it=>{\\n        itemTitle=it.title;\\n        season_id=it.url;\\n        return {\\n            title:itemTitle,\\n            url:  $().lazyRule((season_id) => {\\n                let d = [];\\n                if (season_id) {\\n                    season_id = season_id + \\\"\\\";\\n                    Data = JSON.parse(fetch('https://api.bilibili.com/pgc/view/web/season?season_id=' + season_id)).result;\\n                } else {\\n                    Data = JSON.parse(fetch('https://api.bilibili.com/pgc/view/web/season?ep_id=' + MY_PARAMS.ep_id)).result;\\n                }\\n                剧集列表 = Data.episodes;\\n                正片列表 = 剧集列表.filter((it) => {\\n                    if (!it.badge.match(/预|花絮/)) return true;\\n                }).map((it) => {\\n                    return {\\n                        title: it.share_copy,\\n                        url: it.link,\\n                        desc: (it.title.match(/[0-9]/ && !it.title.match(/集|话/)) ? ('第' + it.title + '话') : it.title) + it.long_title\\n                    }\\n                })\\n                d = 正片列表.map(it => {\\n                    let itemTitle = it.title;\\n                    let vipUrl = it.url;\\n                    return {\\n                        title: itemTitle,\\n                        url: $().lazyRule((title, vipUrl) => {\\n                            return $.require('hiker://page/dmFun?rule=dm盒子').downloadRoute(title, vipUrl,false);\\n                        }, itemTitle, vipUrl)\\n                    }\\n                })\\n                return d;\\n            }, season_id)\\n        }\\n    })\\n    return d;\\n}\\n\\nfunction searchBili(seaword) {\\n    getSearchRes = (search_type, seaword, page, pageSize) => {\\n        getWbiEnc = (queryJson) => {\\n            const mixinKeyEncTab = [\\n                46, 47, 18, 2, 53, 8, 23, 32, 15, 50, 10, 31, 58, 3, 45, 35, 27, 43, 5, 49,\\n                33, 9, 42, 19, 29, 28, 14, 39, 12, 38, 41, 13, 37, 48, 7, 16, 24, 55, 40,\\n                61, 26, 17, 0, 1, 60, 51, 30, 4, 22, 25, 54, 21, 56, 59, 6, 63, 57, 62, 11,\\n                36, 20, 34, 44, 52\\n            ];\\n\\n            // 对 imgKey 和 subKey 进行字符顺序打乱编码\\n            function getMixinKey(orig) {\\n                let temp = '';\\n                mixinKeyEncTab.forEach((n) => {\\n                    temp += orig[n]\\n                });\\n                return temp.slice(0, 32);\\n            }\\n\\n            // 为请求参数进行 wbi 签名\\n            function encWbi(params, img_key, sub_key) {\\n                const mixin_key = getMixinKey(img_key + sub_key),\\n                    curr_time = Math.round(Date.now() / 1000),\\n                    chr_filter = /[!'\\\\(\\\\)*]/g\\n                let query = [];\\n                params = Object.assign(params, { wts: curr_time });    // 添加 wts 字段\\n                // 按照 key 重排参数\\n                Object.keys(params).sort().forEach((key) => {\\n                    query.push(\\n                        encodeURIComponent(key) +\\n                        '=' +\\n                        // 过滤 value 中的 \\\"!'()*\\\" 字符\\n                        encodeURIComponent(('' + params[key]).replace(chr_filter, ''))\\n                    )\\n                })\\n                query = query.join('&');\\n                const wbi_sign = md5(query + mixin_key); // 计算 w_rid\\n                return query + '&w_rid=' + wbi_sign;\\n            }\\n\\n            // 获取最新的 img_key 和 sub_key\\n            function getWbiKeys() {\\n                const json_content = JSON.parse(fetch('https://api.bilibili.com/x/web-interface/nav', {\\n                    headers: {\\n                        \\\"User-Agent\\\": PC_UA,\\n                        \\\"Referer\\\": \\\"https://www.bilibili.com/\\\"\\n                    },\\n                    method: 'GET'\\n                })).data;\\n                img_url = json_content.wbi_img.img_url;\\n                sub_url = json_content.wbi_img.sub_url;\\n                return {\\n                    img_key: img_url.substring(img_url.lastIndexOf('/') + 1, img_url.length).split('.')[0],\\n                    sub_key: sub_url.substring(sub_url.lastIndexOf('/') + 1, sub_url.length).split('.')[0]\\n                }\\n            }\\n\\n            const wbi_keys = getWbiKeys();\\n\\n            const query = encWbi(\\n                queryJson,\\n                wbi_keys.img_key,\\n                wbi_keys.sub_key\\n            );\\n            return query;\\n        }\\n        queryJson = {\\n            __refresh__: true,\\n            _extra: '',\\n            context: '',\\n            page: page,\\n            page_size: pageSize,\\n            order: '',\\n            duration: '',\\n            from_source: '',\\n            from_spmid: 333.337,\\n            platform: 'pc',\\n            highlight: 1,\\n            single_column: 0,\\n            keyword: seaword,\\n            search_type: search_type,\\n            preload: true,\\n            com2co: true\\n        }\\n        parms = getWbiEnc(queryJson);\\n        dataLink = 'https://api.bilibili.com/x/web-interface/wbi/search/type?' + parms;\\n        try {\\n            var cookie = JSON.parse(request(\\\"hiker://files/rules/cy/bili.txt\\\")).userList[0].cookie;\\n        } catch (error) {\\n            var cookie = 'buvid3=4C9DDF2B-D0D3-0F14-0D73-571BAEA2BDFE70910infoc; b_nut=1729179070; _uuid=6AF10ABBC-742D-399B-52C9-417D46D358F471757infoc; buvid_fp=50ac8e58ab5d8360e510ce6f13173c9f; enable_web_push=DISABLE; buvid4=EF4C5C71-42F3-E22A-F592-B5915721952072075-024101715-dgwdBqSTxphrdyiBaOMHcP5tHGFAdgVy8TpjvEY9Am%2FblvsaaDEOrJs%2FYa0qFsVr; home_feed_column=4; browser_resolution=987-847; CURRENT_FNVAL=4048; bili_ticket=eyJhbGciOiJIUzI1NiIsImtpZCI6InMwMyIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3Mjk0Mzg4MTMsImlhdCI6MTcyOTE3OTU1MywicGx0IjotMX0.ivmIOTUWD6Li1b96P4nkNIVV1b6gLH_KKOl1SJYSr90; bili_ticket_expires=1729438753; sid=gwi3fupj; header_theme_version=CLOSE; b_lsid=F21537DD_1929B35656E';\\n        }\\n        res = JSON.parse(fetch(dataLink, {\\n            headers: {\\n                \\\"User-Agent\\\": PC_UA,\\n                \\\"Referer\\\": \\\"https://www.bilibili.com/\\\",\\n                \\\"Cookie\\\": cookie\\n            },\\n            method: \\\"GET\\\"\\n        }))\\n        return res.data;\\n    }\\n    // 可以获取到总页数，但就先这样吧，懒得写翻页，尽量搜精准点\\n    fyPage = 1;\\n    // 番剧\\n    list1 = getSearchRes('media_bangumi', seaword, fyPage, 12).result;\\n    // 影视\\n    list2 = getSearchRes('media_ft', seaword, fyPage, 12).result;\\n    // result = list1.concat(list2).filter(Boolean);\\n    return {\\n        '番剧':list1,\\n        '影视':list2\\n    }; // 返回合并后排除null的数组\\n}\\n\\n\\nsearch(input)\\n\"},{\"name\":\"优K\",\"path\":\"danmu#优K\",\"rule\":\"js:\\nfunction search(name) {\\n    list = searchYK(name);\\n    let d = [];\\n    for (var j in list) {\\n        // 循环判断来源，没有来源，设置为youku\\n        from = pdfh(list[j], '.show-sourcename&&Text')\\n        if (from == '') {\\n            d.push({\\n                title: pdfh(list[j], '.show-name&&Text') + \\\"⭐来源：youku\\\",\\n                url: $().lazyRule((indexLink) => {\\n                    let d = [];\\n                    html = request(indexLink);\\n                    try {\\n                        // 重新定位了\\n                        影片信息 = JSON.parse(html.match(/\\\"播放页简介组件\\\",\\\"dataNode\\\":\\\\[{[\\\\S\\\\s]+showImg[\\\\S\\\\s]+desc[\\\\S\\\\s]{0,1000}(?=,\\\"id\\\")/)[0].replace('\\\"播放页简介组件\\\",\\\"dataNode\\\":[{\\\"data\\\":', ''));\\n                    } catch (e) {\\n                        try {\\n                            影片信息 = JSON.parse(html.match(/\\\"data\\\":[\\\\S\\\\s]{0,50}scorePrefix[\\\\S\\\\s]{0,30}area[\\\\S\\\\s]{0,100}img[\\\\S\\\\s]{0,300}subTitles[\\\\S\\\\s]+introTitle[\\\\S\\\\s]{0,200}desc[\\\\S\\\\s]{0,800}(?=,\\\"id\\\")/)[0].replace('\\\"data\\\":', ''));\\n                        } catch (e) {\\n                            try {\\n                                影片信息 = JSON.parse(html.match(/播放页简介组件\\\",\\\"dataNode\\\":\\\\[{\\\"data\\\":[\\\\S\\\\s]+(?=,\\\"id\\\":[0-9]{0,20},\\\"type\\\":[0-9]{0,20}},{\\\"data\\\":{\\\"title\\\":[\\\\S\\\\s]{0,200},\\\"isAliStar)/)[0].replace('播放页简介组件\\\",\\\"dataNode\\\":[{\\\"data\\\":', ''));\\n                            } catch (e) {\\n                                影片信息 = '';\\n                            }\\n                        }\\n                    }\\n                    影片名称 = pdfh(html, '.module-name&&Text');\\n                    if (影片信息) {\\n                        剧集ID = 影片信息.showId;\\n                        // 有些剧集或者说电影的更新状态或者是评分数据或者说动漫的类型是空甚至根本没有所以单独获取并做异常处理\\n                        try {\\n                            类型 = 影片信息.mark.data.text;\\n                        } catch (e) {\\n                            类型 = '';\\n                        }\\n                        简述 = 影片信息.subTitles[0].subtitle;\\n                        状态 = 影片信息.subTitles[1].subtitle;\\n                        if (状态 == undefined) {\\n                            状态 = '完结'\\n                        }\\n                        标签 = 影片信息.showGenre;\\n                        if (标签 == undefined) {\\n                            标签 = '';\\n                        }\\n                    } else {\\n                        // 针对筐出未来电影赏析而写的，事实上教育栏目最后多数也是走这里\\n                        try {\\n                            影片地图 = JSON.parse(html.match(/\\\"videoMap\\\":[\\\\S\\\\s]+(?=,\\\"pushInfo\\\")/)[0].replace('\\\"videoMap\\\":', ''));\\n                            剧集ID = 影片地图.showId;\\n                            简介 = 影片地图.showName;\\n                            类型 = 影片地图.videoCategory;\\n                            状态 = '共' + 影片地图.episodeLast + '集\\\\n' + 影片地图.showReleaseTime;\\n                            简述 = '';\\n                            标签 = '';\\n                        } catch (e) {\\n                            简介 = '没有简介，大概是一些短视频，科技、生活、娱乐分栏~';\\n                            封面 = 'https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg.zcool.cn%2Fcommunity%2F010097613ad72c11013eaf7098e28a.jpg%402o.jpg&refer=http%3A%2F%2Fimg.zcool.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1661226719&t=75dab3a3ff2d817e6f388f89505ea2e4@Referer=';\\n                            类型 = '';\\n                            状态 = '';\\n                            简述 = '';\\n                            标签 = '';\\n                        }\\n                    }\\n                    正片列表=[];\\n                    // 匹配电影\\n                    if (html.match(/\\\"播放页电影选集\\\",\\\"dataNode\\\":\\\\[{[\\\\S\\\\s]+(?=,\\\"title\\\":\\\"(系列电影|播放列表)\\\")/)) {\\n                        上映日期 = JSON.parse('{' + html.match(/\\\"videoPublishTime\\\"[\\\\S\\\\s]+(?=,\\\"videoTitle\\\")/)[0] + '}').videoPublishTime;\\n                        try {\\n                            电影信息 = JSON.parse(html.match(/\\\"播放页电影选集\\\",\\\"dataNode\\\":\\\\[{[\\\\S\\\\s]+(?=,\\\"title\\\":\\\"(系列电影|播放列表)\\\")/)[0].replace('\\\"播放页电影选集\\\",\\\"dataNode\\\":', ''));\\n                            电影信息.forEach(list => {\\n                                if (list.data.summary) {\\n                                    正片列表.push({\\n                                        title: list.data.title,\\n                                        url: 'https://v.youku.com/v_show/id_' + list.data.action.value + '.html',\\n                                        desc: list.data.videoType + '\\\\t' + list.data.summary,\\n                                    });\\n                                } else {\\n                                    正片列表.push({\\n                                        title: list.data.title,\\n                                        url: 'https://v.youku.com/v_show/id_' + list.data.action.value + '.html',\\n                                        desc: list.data.videoType,\\n                                    });\\n                                }\\n                            });\\n                        } catch (e) {\\n                            try {\\n                                // 分成多种语言版本的电影\\n                                电影信息 = JSON.parse(html.match(/\\\"播放页电影选集\\\",\\\"dataNode\\\":\\\\[{[\\\\S\\\\s]+(?=,\\\"title\\\":\\\"播放列表\\\")/)[0].replace('\\\"播放页电影选集\\\",\\\"dataNode\\\":', ''));\\n                                for (let i = 0; i < 电影信息.length; i++) {\\n                                    if (电影信息[i].data.summary) {\\n                                        正片列表.push({\\n                                            title: 电影信息[i].data.title,\\n                                            url: 'https://v.youku.com/v_show/id_' + 电影信息[i].data.audioLang[i].videoId + '.html',\\n                                            desc: 电影信息[i].data.videoType + '\\\\t' + 电影信息[i].data.summary\\n                                        });\\n                                    } else {\\n                                        正片列表.push({\\n                                            title: 电影信息[i].data.title,\\n                                            url: 'https://v.youku.com/v_show/id_' + 电影信息[i].data.audioLang[i].videoId + '.html',\\n                                            desc: 电影信息[i].data.videoType,\\n                                        });\\n                                    }\\n                                }\\n                            } catch (e) {\\n                                正片列表 = [];\\n                            }\\n                        }\\n                        更新进度 = '电影';\\n                    } else {\\n                        try {\\n                            // 一般剧集（含电影、综艺）——但电影不走这条线，因为没有系列电影的数据~\\n                            剧集信息 = JSON.parse(request(\\\"https://search.youku.com/api/search?appScene=show_episode&showIds=\\\" + 剧集ID + \\\"&appCaller=h5\\\"));\\n                            剧集列表 = 剧集信息.serisesList;\\n                            // 先尝试获取剧集数据，如果获取失败，异常会在上方出现，因为没有serisesList，那就走栏目路线\\n                            剧集长度 = 剧集列表.length;\\n                            正片列表 = 剧集列表.filter((it) => {\\n                                if (it.iconCorner&&it.iconCorner.tagText) {\\n                                    状态 = it.iconCorner.tagText;\\n                                } else {\\n                                    状态 = '';\\n                                }\\n                                if (!状态.match(/预|花絮/)) return true;\\n                            }).map((it) => {\\n                                flag = /\\\\d/.test(it.title.split(' ')[1]);\\n                                if (flag) {\\n                                    title = it.title;\\n                                    // desc = 状态 + '\\\\t' + it.stripeBottom + '\\\\n' + it.displayName;\\n                                    desc = '';\\n                                } else {\\n                                    // title=it.title+'_'+it.displayName;\\n                                    // desc=状态 + '\\\\t' + it.stripeBottom + '\\\\n' + it.displayName;\\n                                    // title = (it.stripeBottom ? it.stripeBottom : it.title) + '_' + it.displayName;\\n                                    title = 影片名称+'_'+it.displayName+ '_' +(it.stripeBottom ? it.stripeBottom : it.title);\\n                                    desc = '';\\n                                }\\n                                return {\\n                                    title: title,\\n                                    url: 'https://v.youku.com/v_show/id_' + it.videoId + '.html',\\n                                    desc: desc\\n                                }\\n                            })\\n                        } catch (e) {\\n                            log('what?message:'+e);\\n                            // 滑动图片选集型（音乐、娱乐、生活等栏目）——烦了，直接正则全局匹配成数组好了。。。\\n                            选集信息 = html.match(/\\\"播放页ugc选集\\\",\\\"dataNode\\\":\\\\[{[\\\\S\\\\s]+}(?=\\\\],\\\"title\\\")/)[0].replace('\\\"播放页ugc选集\\\",\\\"dataNode\\\":[', '');\\n                            选集信息 = 选集信息.match(/{\\\"data\\\":{[\\\\S\\\\s]{0,2000},\\\"id\\\":[0-9]{0,20},\\\"type\\\":[0-9]{0,20}}/g)\\n                            setPageTitle('栏目列表')\\n                            选集信息.forEach(list => {\\n                                list = JSON.parse(list);\\n                                正片列表.push({\\n                                    title: list.data.title,\\n                                    url: 'https://v.youku.com/v_show/id_' + list.data.action.value + '.html',\\n                                    desc: list.data.publishTime\\n                                });\\n                            });\\n                        }\\n                    }\\n                    d = 正片列表.map(it => {\\n                        let itemTitle = it.title;\\n                        let vipUrl = it.url;\\n                        return {\\n                            title: itemTitle,\\n                            url: $().lazyRule((title, vipUrl) => {\\n                                return $.require('hiker://page/dmFun?rule=dm盒子').downloadRoute(title, vipUrl,false);\\n                            }, itemTitle, vipUrl)\\n                        }\\n                    })\\n                    return d;\\n                }, pdfh(list[j], '.h5-show-card&&href'))\\n            });\\n        }\\n    }\\n    return d;\\n}\\n\\nfunction searchYK(seaword) {\\n    cookie = JSON.parse(fetchCookie('https://m.youku.com/', {\\n        headers: {\\n            \\\"User-Agent\\\": PC_UA,\\n            \\\"Referer\\\": \\\"https://www.youku.com/\\\",\\n        },\\n        method: \\\"GET\\\"\\n    }))[0];\\n    // 获取到的html还偶尔可能出现不全的情况？比如搜嗨放派，第三季会不出现的问题\\n    html = fetch(\\\"https://search.youku.com/search_video?keyword=\\\" + seaword, {\\n        headers: {\\n            \\\"User-Agent\\\": PC_UA,\\n            \\\"Referer\\\": \\\"https://www.youku.com/\\\",\\n            \\\"Cookie\\\": cookie\\n        },\\n        method: \\\"GET\\\"\\n    })\\n    var list = pdfa(html, 'body&&.h5-show-card-wrapper');\\n    return list;\\n}\\n\\n\\nsearch(input)\\n\"},{\"name\":\"弹弹Play2.0\",\"path\":\"danmu#ttplay\",\"rule\":\"js:\\nevalPrivateJS('M0yZK0K8DGRWBJXNIbMHUu98J69Ke4AEtA0RUbIMudPdRb8kVZSSIoS+5N2E6A8Ksl3lomx/Dt7DQn1YCoSAjK8l9P8KvepUPzFOQi/I/8AngAjwagh+8I/Pv0IknBvNIHmJH3r+Jkw2bDQjx4dA6UraD9a36u5geX/TLLoDdi4VwrG2VC7PG0cK50NVZXck+5JlwJu7mxTRU4WXAnBP16/6pVBcpFXUfDkDfVddrUx/AJNo6mZsh7D8+oHsB8dPQEN99qOtuMTo2m4zVwNiaJmfKp/TRH1xUy5hLWOb7zd2E3Be6y/AKbvnolYhdV4sIQ+YjhRkIc2cxbR/emyJcIyVjkdNoSRjaXvyzKGoL3BuG53GIqfs2K+MNDKS+B5zbH2QPUuj/MAGaZVbxZ1eWgIzcutRUazL2eBZUmacpU2UOyf7cU1YOocmGHROl+MisiuaKgnppFuymC/S919lpntoA/HtE8Cu0PLmQFSLaZNpyCq/jet8OheV20MObTYxIX74XaQvhposv76fcGeg+HLrpSU3UAWf/7DILbEqinpPE3IsIJv780Phy0dWQy2cy2NBEhR2jZ4S4H4Uvjrg98I+1oqM9FQDE9LfZdlNExmx5dfJpXzMCM3cUd2stK3iINWczu/ufNG9Df74WzzV4V6JYw2K5zA5UTcdS3lU61Iuui8MxhUJx3EbHQvUUMc/nSCwIrDFxOdS4j0dTMECg33Et7JZGOPBO0cWZeKhjwzGztIP92zRA9RyTJ1TKAY/QtrFIANru4ge2dQkr++9l/siikz0yMK56vpGU2l/D7lvnkUqziHDSzwTfnAgDyPlMk/MfK92nYWNUoXm8n0d4dE7YYHqFzltJ8KRZA0APIxjTLKRbVgq+p9YPZ1oGadkptKL/oUBiOyQeqnu7Ya3ucsry0jWVnP7CJ/71kgB1PaSboOLExg5XK3EX+n2gs22aZOnsbRtnXKYojlS51TJWMsry0jWVnP7CJ/71kgB1PZUDBqH7hwc+JwUXRZFv7x/bJiVE1Y59tYB6nCezidBvKq8Brwy2LyDK9iH4sJzmIuAHKsJyFOBuajcNHo0v16f1FZUO8+4hrQcu8CUxf4YExRzhqQltxdbhWxfk8QKvIjLK8tI1lZz+wif+9ZIAdT2jgKbfeUiczER7omTrXydL6b+04uc8NXD4vsWsSaPuBDLK8tI1lZz+wif+9ZIAdT2ehesJ4wa3seqqbM1SEJEG0f5Y5cN2dxcE8AMvThkJoSmn82a9cS1Neq4CNHcS3ERp55Q6ulIKydhrk5TATzM2ssry0jWVnP7CJ/71kgB1Pa8+//W8E4pICUifMlGoU6gaADopqFSv05t3D5eg0rY2SKYt1xBCdgB6muMNkWqwoTLK8tI1lZz+wif+9ZIAdT2mOMB9X/v+l7Uw4rUkG6pkWmh2XAtnFNxp/4j/sFGeOLnT829awHItV2KeuciZB4ysaI5PXkyRV6gTinKg/b2Gy+Ol+MG276dtltSXcIx85m9FxjXrxKMX6qjzDCVCH3MoD2YZnByR9ZaCrcYB5IhNssry0jWVnP7CJ/71kgB1PahVCAHpTQAOLqu8sGCALhy4CmpXbMqBDjeNLe0i+WqDyrNWRcP9VL3Td8HaUO6fSnLK8tI1lZz+wif+9ZIAdT2DKceiBxenDZmxj+y2LuESut0tSUVNnO6FpJsWBHhTdDLK8tI1lZz+wif+9ZIAdT294p46Us/g+iuWHA2sdHuEMsry0jWVnP7CJ/71kgB1PY/v7NRTVBbT/TK9Io4sP/CyyvLSNZWc/sIn/vWSAHU9oXDUr3B69hWKrdXkiQ5gIiVqCGhaMSAxnoc82+IHuREyyvLSNZWc/sIn/vWSAHU9sM5E64qOIwER+mcE16UZR+z3byYOBSvHJfkAHDYGd7vxYwJ+h4XT0CFF3JED4/2dqLmR3RC5TqX9zyF/IGyfsB5BrZFrjFzuOfJUxucd2u5XIVR+LP79C62HcvS/nirZWhuMUPstQPXGA2X/XFRgEbLK8tI1lZz+wif+9ZIAdT2BJgvkrfk8thW4XQILR7QhzqatFyOGzWDUW161GhozSpZyFXYST9BY+xmCAVMWGt8Ks1ZFw/1UvdN3wdpQ7p9Kcsry0jWVnP7CJ/71kgB1PaQZN5WAVPQtGSzW1DtUg3vid4nnuFJPi4g2rbz+rRyFIZ2hZz9paAA965yRCRT6FTLK8tI1lZz+wif+9ZIAdT2MiA0ju4tV+iE5spoEXpvsyBtG9+OMxP/w/QHoAFsQgXLK8tI1lZz+wif+9ZIAdT2beb0HYqaajE5WdiPd18opYKKDu84sKEmR2S5nKdkXKy/eoYpRtg3glTFRUk7DP2iyyvLSNZWc/sIn/vWSAHU9jrEdDePvOAoGH5J5NJFt4JqaoLlfWyXB7h1mZ2972BRyyvLSNZWc/sIn/vWSAHU9uiLI09SqtuelJ77lDLP/Px3Ic64Kgul40dWkhCn0295yyvLSNZWc/sIn/vWSAHU9hEaONnIVwlD9Dpolu/QukR/CkhrT3q5Xx+WhH5n3copyyvLSNZWc/sIn/vWSAHU9muW6gqw4k0zBcdDsdy+30vOlDL7DvzzsOQnK+/bCc4nQXhwVC2p4Oq8vv3UVeTdxMsry0jWVnP7CJ/71kgB1PYZJVaqh6zl+tOKrpAto64LyyvLSNZWc/sIn/vWSAHU9jL0gArdkEhk3WxNCfX1E+ueM8nju9cr5ofz3A/vgX6iy9hV+yFCZBMChjZtlUZtEqeeUOrpSCsnYa5OUwE8zNrLK8tI1lZz+wif+9ZIAdT2bOhB1UexRzcoD/hjahfOu7eUQBExUoDmPK/NxX92293hDdf23B8stEDssB/8SUTfz+OtN3/6eayZauSOK26rzE8DgpEC2hcU3vArm7pFqpH7zlingQHBe9g7kvz9/LyeyyvLSNZWc/sIn/vWSAHU9nxvCLiXkqmI3Gyz19pgdZMpXfBO9nVkNKWhnMpD4LlQdNQ/kmzmf3QYKZtKW1zv6gAKROfQHQTxYJe0sHmziHXLK8tI1lZz+wif+9ZIAdT2GnwkFuJzSy27F9FVYWJQpyeACPBqCH7wj8+/QiScG80geYkfev4mTDZsNCPHh0DpG2iNYvdFzqxe1rLeZC8a0Cb7UIdc97nV8BVSCgGuh2fa1X31G0Ei7V4Zn7Xc7TvW0gzM+ojmentqpJZit+B8TqNvR3jCPAx+cRQglauoHyrLK8tI1lZz+wif+9ZIAdT2mDwunc/tkEVPDzd9JsN6lcDZ/VoNdQx7GoFH9HrwoDecUOvDmjsIZOT0l3yw9U2VzpQy+w7887DkJyvv2wnOJ8sry0jWVnP7CJ/71kgB1PYWuIZnfj2o+BU8rb9+kh9WyyvLSNZWc/sIn/vWSAHU9ssry0jWVnP7CJ/71kgB1PZN7kXLUkqyXROITwx6hH4HKfVYKHTYQUVtDSLZ8tvER3n+v+YlKQpUpIEQXPCP72XLK8tI1lZz+wif+9ZIAdT2jPXBiXKMLwSsECcBftPPP2+uK82oCg0mrNz72H5/siTHfBAFRrx3QGEu8KDFgu2+dvpL2PXnPnx7nA7qBKwnG8sry0jWVnP7CJ/71kgB1PbLK8tI1lZz+wif+9ZIAdT2YaUbjlRa3lxUqit4O2bDXMsry0jWVnP7CJ/71kgB1PYB9dGz8yjzVTcRuz+pxG6UyyvLSNZWc/sIn/vWSAHU9lM9BuZD2YZv8qdWbmshvGspuR9RywYXrMGTOVblwCaZyyvLSNZWc/sIn/vWSAHU9ssry0jWVnP7CJ/71kgB1PbpgFSjphjL1Czw4cub5tYoxeyDUYjGW6LsJgoEYE59UucSoWhKXySzw0eabe6kRSnLK8tI1lZz+wif+9ZIAdT2FJs+H98e5DZalWVDGzrjNMRjqtsAKyK1YjK4880tAk2OgTOww76NNUM6UPjHXgkPfMHwBwuGiOrzx5F3LzY93dNAqA0RFh8wriszxfv89pHLK8tI1lZz+wif+9ZIAdT2kYHYid9brAu7sa0Osf1d5ZJV2VPo8Pw10nGGHD1AVUolJAS+Rj3liwM00cJh8XX51Vi/QR4jiSBeXJM5jqvwNcsry0jWVnP7CJ/71kgB1PbBMdN5I/5k5TrX/r4FSvpjiydpAVeuiV9yYC/ulecWb6VDTDC2af854W76QMzr16vu7Ydw9NvQZhqCIGzGN0df7WOXLQv7sX1tQhYsXbqjm96kW6cegSfvsrcp0brf6altPNKyXScAyimI/m4vL2aAyyvLSNZWc/sIn/vWSAHU9lM9BuZD2YZv8qdWbmshvGsO6QcINdaL6CwoLz0pOkdI/BbqLgRZjKSUrQZI9zdIN8sry0jWVnP7CJ/71kgB1PZggSzMDX2LCiNyfylIf30UtW9wcg3Z1jYPozRlUDlicU7FQHj2ABNVlS/xtXThDJjLK8tI1lZz+wif+9ZIAdT2ZPk9wlO7gRS2NR/577nIxPFS5BnBJucZqCC8Kixij7bCnP7whAertTY7DYfsN+I5fukoSv17pPh4sj76t/LQK/GnOQa8ii+UGEn5IoRxElHLK8tI1lZz+wif+9ZIAdT2anxGCRJ/TmQr6A88MroTLt1ETJpihKv840c/Gz+9Xl4+k2h4t7yKKxIMsYs3CZ98yyvLSNZWc/sIn/vWSAHU9rA7myUV+iA2T84/LcEOknIpqOLEfAd2Mb2VkgAoGNAwzpQy+w7887DkJyvv2wnOJ8sry0jWVnP7CJ/71kgB1PbvE4DBalsoR3Q3qJMTMmEq1VWLAcUXrkqxhYa93SzuLcsry0jWVnP7CJ/71kgB1PbLK8tI1lZz+wif+9ZIAdT2TRYktR3qGI6QdWFd4JmWdx13igVCRf47UH652yLnsmfLK8tI1lZz+wif+9ZIAdT2yyvLSNZWc/sIn/vWSAHU9hQ+0+pf1RhafQlnqUagFL3f4WgEojd2HLqqN6lC85x3ybDIFHf+x/yuahWLVCWj6csry0jWVnP7CJ/71kgB1PbLK8tI1lZz+wif+9ZIAdT2JJIbwcJQCeO0uU1MU1/KQcsry0jWVnP7CJ/71kgB1PbLK8tI1lZz+wif+9ZIAdT2UvOp/PjrJCrbISuILpolIMsry0jWVnP7CJ/71kgB1PZID6aJuROl7KmBIf0BWClbtQ0lIOZoVjjqjBfmAAVwhcsry0jWVnP7CJ/71kgB1PbLK8tI1lZz+wif+9ZIAdT2haAaPdu54AadltXMhov2Ah4JPiVp5lTKRqlRNdsQG/zLK8tI1lZz+wif+9ZIAdT2yyvLSNZWc/sIn/vWSAHU9mg3dlr77brWZA8nOk2hSDr9gbGHDsic8SVB2NtgyeS1yyvLSNZWc/sIn/vWSAHU9ssry0jWVnP7CJ/71kgB1PbT/drCgPUivvzR7Kn9dwjryyvLSNZWc/sIn/vWSAHU9ssry0jWVnP7CJ/71kgB1Pa7UBHtW5Wnht7IaTmUSY6iyyvLSNZWc/sIn/vWSAHU9ssry0jWVnP7CJ/71kgB1PaNUpX9lApjQq/26WOppyemMekTX0Mekh9yXuL49KusZxlifpQGjnsTshc38ecQG8Zha4vpP1SVI9oc4wFwUG3xyyvLSNZWc/sIn/vWSAHU9ssry0jWVnP7CJ/71kgB1PZJu8pmrg6xru65RNRemmnoWLyqTWRrCnvv5KvWCw73DlB8O1fjxzASRf1ytoLDaufLK8tI1lZz+wif+9ZIAdT2yyvLSNZWc/sIn/vWSAHU9jmUlVA6eep5yvDo9G665vQQvY7KnPg/YCtljZr6Nrhr3EECf4iy0GihO8WDevpwKMsry0jWVnP7CJ/71kgB1PbLK8tI1lZz+wif+9ZIAdT2M21SkWQVfHzRFAmitHBuzcWvJ2h69l3+RsdV5cTeAC3LK8tI1lZz+wif+9ZIAdT2ohMjk0/I+RKdi089DgoMb8sry0jWVnP7CJ/71kgB1PbLK8tI1lZz+wif+9ZIAdT2NmFlm9ucLn3Rxn+edG2gMrAnfZbp/n2I2kSUOO3vIa/LK8tI1lZz+wif+9ZIAdT2wgEG5sBpQxAHzosqrai0Pcsry0jWVnP7CJ/71kgB1PbLK8tI1lZz+wif+9ZIAdT2HiPugEHWd6ikKk5I4lVaa6/Nf+QDRipYS9aGUiTVtkzLK8tI1lZz+wif+9ZIAdT2yyvLSNZWc/sIn/vWSAHU9psHj3uNR0yOjISZQFXfhdXLK8tI1lZz+wif+9ZIAdT2wgyGRgt6as6D66mR/jatHhsO8K42y4h/wpaiA3daM0jLK8tI1lZz+wif+9ZIAdT2sDubJRX6IDZPzj8twQ6ScnXihSBbvFjBFh59uWS2LX01l5+HTkHvcRBCoHNpwiFIyrhYvJY/ux1LlFmAXki9R85iDAibobUEmWlVF56bRIVAb8Hmpss1SEkImSxDrfYCyyvLSNZWc/sIn/vWSAHU9uKuqmh9Pe6g8KUNl520q3kX0ybK7LhnW2CMpLIz/HOHedMzX15U/xeNhkfMcdeF//BbuBgBM+NesbWmJooqdCjf53aBUbAUPzZZCRaSR+L8yhZMSQLl8cf7GoEvsUQCWEwG8G1cnvY94KPuNAsuRhHLK8tI1lZz+wif+9ZIAdT294p46Us/g+iuWHA2sdHuEMsry0jWVnP7CJ/71kgB1PYkO2eF2Fuli9GZNUwtZZglPxNZMPrkwitNKUTRPOP7BMsry0jWVnP7CJ/71kgB1PbUVlQ7z7iGtBy7wJTF/hgTr5aNCY/5c7OXwllyy9UXAfGebn10hmm+n4bZjaMS4sOa/DNRzX1tW+1ocCtAx6XCyxAj+MRCw/e5KPseeVzyg7b//0xxp9+GYUbW2o3whonLK8tI1lZz+wif+9ZIAdT2z4mnW7bruOHmC44nXkfswgtluA11ZRTZwL/xej3CD5Q/iQdON9PG/zisYe4+wAqRqDHaTm24WYVSXW9e06hFTRsPbVPPIY9+okXaTD7Mu+jjmKpGYzdabtxdUnxWNU2t11cxgaL3bIlwOXb3zAGWmssry0jWVnP7CJ/71kgB1PbzGkhSG/eFV56Bci1EGOM9Ef3AE/y03yT2QyrExb3JTyF7XrpTNN3RbhfBF99Cf1vLK8tI1lZz+wif+9ZIAdT2EmNGcM4sB6Zve6lKLPCUhHbxoSqyyI8mtdcgadizLcyiEyOTT8j5Ep2LTz0OCgxvyyvLSNZWc/sIn/vWSAHU9lM9BuZD2YZv8qdWbmshvGsrg0SeHQUfFwM9E172a/9VoAe9Y/ZiINVgdT1LOiXECbcr61HxNPDdDktyC9UxouH87sGbLvKLGWd8pGmyg/vY9eOPd4LPnBxuBhZ2eu1IXLA7myUV+iA2T84/LcEOknL67YzICKSAGHx6hvbe/vcb+MJU4ot/nXh+mYUe8NSGP8sry0jWVnP7CJ/71kgB1PYpiV6XOOEcRXF8ONJ60pbUID8uP/YagNfISbhTeTJv1IK6wL2kRjtaLxiTV86U7WBrzaHkBDcwEnSbD8xynvYryyvLSNZWc/sIn/vWSAHU9hEaONnIVwlD9Dpolu/QukQ6thfKIRU8mWw+CE3pRrX/mpuanfinoJJBEjhvJEEHqdYTndKryFrf5AhAUF2m2KvLK8tI1lZz+wif+9ZIAdT2WNEJ76DiARMjFdm1RbYwXQRCwaSWOStIMIDk1lOhpz2rCgVAnWNF01AaDaxQzVcQk+I9rX65eiuZHs9N0rolM8T4LofxdYUIvU6v1hPXmTSW2v3uaJj02okrY9rSF4K4e6+GUoQZg2WEspcivJpPDZgp3MCVdOYzJwQH4vd9+MF1Mpd42ytFzQ/e87/tmsm0QEWr4dsZb0NFErd+inib6Q==')\"}]","proxy":"","icon":"http://img-qn-0.51miz.com/Element/00/90/75/09/31c7bd2f_E907509_088f9c32.png!/quality/90/unsharp/true/compress/true/format/png/fh/320"}
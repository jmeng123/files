{"last_chapter_rule":"","pageList":[{"col_type":"movie_3_marquee","name":"sign","path":"sign","rule":"function sign(params) {\n    function middle(ls) {\n        let resNum = []\n\n        function test(a, b, c) {\n            let r25 = a >> 2\n            if (b !== undefined && c !== undefined) {\n                let r26 = a & 3\n                let r26_2 = r26 << 4\n                let r26_3 = b >> 4\n                let r26_4 = r26_2 | r26_3\n                let r27 = b & 15\n                let r27_2 = r27 << 2\n                let r27_3 = r27_2 | (c >> 6)\n                let r28 = c & 63\n                resNum.push(r25)\n                resNum.push(r26_4)\n                resNum.push(r27_3)\n                resNum.push(r28)\n            } else {\n                let r10 = a >> 2\n                let r11 = a & 3\n                let r11_2 = r11 << 4\n                resNum.push(r10)\n                resNum.push(r11_2)\n            }\n        }\n\n        for (let i = 0; i < ls.length; i += 3) {\n            if (ls[i] !== undefined && ls[i + 1] !== undefined && ls[i + 2] !== undefined) {\n                test(ls[i], ls[i + 1], ls[i + 2])\n            } else {\n                test(ls[i], undefined, undefined)\n            }\n        }\n        let res = []\n        resNum.forEach((item) => {\n            let zd = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n            res.push(zd[item])\n        })\n        res = res.join('')\n        return res\n    }\n\n    function head(md5Str) {\n        let res = [];\n        [21, 4, 9, 26, 16, 20, 27, 30].map(x => {\n            res.push(md5Str[x])\n        })\n        return res.join('')\n    }\n\n    function tail(md5Str) {\n        let res = [];\n        [18, 11, 3, 2, 1, 7, 6, 25].map(x => {\n            res.push(md5Str[x])\n        })\n        return res.join('')\n    }\n\n    function getLs(md5Str) {\n        let zd = {\n            \"0\": 0,\n            \"1\": 1,\n            \"2\": 2,\n            \"3\": 3,\n            \"4\": 4,\n            \"5\": 5,\n            \"6\": 6,\n            \"7\": 7,\n            \"8\": 8,\n            \"9\": 9,\n            \"A\": 10,\n            \"B\": 11,\n            \"C\": 12,\n            \"D\": 13,\n            \"E\": 14,\n            \"F\": 15\n        }\n        let ol = [212, 45, 80, 68, 195, 163, 163, 203, 157, 220, 254, 91, 204, 79, 104, 6]\n        let res = []\n        let j = 0\n        for (let i = 0; i < md5Str.length; i += 2) {\n            let one = zd[md5Str[i]]\n            let two = zd[md5Str[i + 1]]\n            let r = one * 16 ^ two\n            res.push(r ^ ol[j])\n            j += 1\n        }\n        return res\n    }\n    let md5Str = md5(params).toUpperCase()\n    let h = head(md5Str)\n    let e = tail(md5Str)\n    let ls = getLs(md5Str)\n    let m = middle(ls)\n    let res = ('zzb' + h + m + e).toLowerCase()\n    let r = RegExp(/[\\\\/+]/g)\n    res = res.replace(r, '')\n    return res\n}"},{"col_type":"movie_3_marquee","name":"歌词","path":"lrc","rule":"js:\n\nvar getlrc = function(mid) {\n    require('hiker://page/sign')\n    let body = JSON.stringify({\n        \"comm\": {\n            \"cv\": 4747474,\n            \"ct\": 24,\n            \"format\": \"json\",\n            \"inCharset\": \"utf-8\",\n            \"outCharset\": \"utf-8\",\n            \"notice\": 0,\n            \"platform\": \"yqq.json\",\n            \"needNewCode\": 1,\n            \"uin\": 0,\n            \"g_tk_new_20200303\": 5381,\n            \"g_tk\": 5381\n        },\n        \"req_1\": {\n            \"module\": \"music.musichallSong.PlayLyricInfo\",\n            \"method\": \"GetPlayLyricInfo\",\n            \"param\": {\n                \"songMID\": mid\n            }\n        }\n    })\n\n    var lrc = JSON.parse(post(buildUrl('https://u.y.qq.com/cgi-bin/musics.fcg', {\n        _: Date.now(),\n        sign: sign(body)\n    }), {\n        body: body\n    })).req_1.data.lyric;\n    return base64Decode(lrc);\n}"}],"title":"QQ音乐·Q","author":"发粪涂墙","version":0,"type":"music","url":"hiker://empty#fypage","col_type":"movie_3_marquee","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nlet d = [];\nif (MY_PAGE === 1) d = storage0.getMyVar('items');\n\nrequire('hiker://page/sign')\nvar body = JSON.stringify({\n    \"req_1\": {\n        \"param\": {\n            \"caller\": \"0\",\n            \"category_id\": Number(getMyVar(getMyVar('type'))),\n            \"size\": 20,\n            \"page\": MY_PAGE - 1,\n            \"use_page\": 1\n        },\n        \"method\": \"get_category_content\",\n        \"module\": \"music.playlist.PlayListCategory\"\n    }\n})\n\nvar json = JSON.parse(post(buildUrl('https://u.y.qq.com/cgi-bin/musics.fcg', {\n    _: Date.now(),\n    sign: sign(body)\n}), {\n    body: body\n})).req_1.data.content.v_item\n\njson.forEach(list => {\n    list = list.basic\n    d.push({\n        title: list.title,\n        img: list.cover.big_url,\n        url: 'hiker://empty##' +list.tid\n    })\n})\n\nsetResult(d)","searchFind":"js:\nvar d = [];\r\nvar json = JSON.parse(getResCode())['music.search.SearchCgiService'].data.body.song.list\r\njson.forEach(list => {\n    d.push({\n        title: list.title,\n          img: \"https://y.gtimg.cn/music/photo_new/T002R300x300M000\" + list.album.mid + \".jpg\",\n        url: 'https://xiaoapi.cn/API/yy_sq.php?type=json&n=1&msg=' + list.title + $('').lazyRule(() => {\n            var html = JSON.parse(request(input))\n         //   setPagePicUrl(html.cover)\n            var url = html.url\n            return url\n        }),\n        extra: {\n            inheritTitle: false\n        }\n    })\n})\r\nsetResult(d);","search_url":"https://u.y.QQ.com/cgi-bin/musicu.fcg?JsonBody={\"comm\":{\"ct\":19,\"cv\":1845},\"music.search.SearchCgiService\":{\"method\":\"DoSearchForQQMusicDesktop\",\"module\":\"music.search.SearchCgiService\",\"param\":{\"query\":\"**\",\"num_per_page\":30,\"page_num\":fypage}}};POST","group":"③音乐","detail_col_type":"movie_3_marquee","detail_find_rule":"js:\nvar d = [];\nMY_URL = MY_URL.split('##')[1]\nrequire('hiker://page/sign')\nvar body = JSON.stringify({\n    \"req_1\": {\n        \"module\": \"music.srfDissInfo.aiDissInfo\",\n        \"method\": \"uniform_get_Dissinfo\",\n        \"param\": {\n            \"disstid\": Number(MY_URL),\n            \"userinfo\": 1,\n            \"tag\": 1,\n            \"orderlist\": 1,\n            \"song_begin\": 0,\n            \"song_num\": 1000,\n            \"onlysonglist\": 0,\n            \"enc_host_uin\": \"\"\n        }\n    }\n})\n\nvar json = JSON.parse(post(buildUrl('https://u.y.qq.com/cgi-bin/musics.fcg', {\n    _: Date.now(),\n    sign: sign(body)\n}), {\n    body: body\n})).req_1.data.songlist\n\nrequire('hiker://page/lrc')\n\njson.forEach(list => {\n    d.push({\n        title: list.title,\n        img: \"https://y.gtimg.cn/music/photo_new/T002R300x300M000\" + list.album.mid + \".jpg\",\n        url: 'https://xiaoapi.cn/API/yy_sq.php?type=json&n=1&msg=' + list.title + $('').lazyRule((mid,lrc) => {\n            var html = JSON.parse(request(input))\n            var url = html.url\n            var lyric = lrc(mid)\n            return JSON.stringify({\n                urls: [url],\n                lyric: lyric\n            })\n        }, list.mid,getlrc),\n        extra: {\n            inheritTitle: false\n        }\n    })\n})\nsetResult(d);","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"let tabs = storage0.getMyVar('tabs');\n//if (!tabs) {\nMY_URL = 'https://y.qq.com/n/ryqq/category'\nlet window = {}\neval(pdfh(request(MY_URL), 'body&&script:containsData(window)&&Html'))\nvar html = window.__INITIAL_DATA__.categories\n\nvar type = []\nvar tb = html.map((data, id) => {\n\n    type.push(data.categoryGroupName)\n    var names = []\n    var ids = []\n    data.items.map(list => {\n        names.push(list.categoryName)\n        ids.push(list.categoryId + '')\n    })\n    return [{\n        title: type[id],\n        names: names,\n        ids: ids,arr:[]\n    }]\n})\ntype = type.filter((item, index) => type.indexOf(item) == index)\ntabs = [{\n    title: 'type',\n    names: type,\n    ids: type,\n    arr: tb\n}]\nstorage0.putMyVar('tabs', tabs)\n//}\n\nlet items = []\n\nfunction setTabs(tabs) {\n    if (!tabs) return\n    for (let data of tabs) {\n        getMyVar(data.title) || putMyVar(data.title, data.ids[0]);\n        for (let i = 0; i < data.names.length; i++) {\n            items.push({\n                title: getMyVar(data.title) === data.ids[i] ? `““””<font color=\"#12b668\"><b>${data.names[i]}</b></font>` : data.names[i],\n                url: $('#noLoading#').lazyRule((title, id) => {\n                    if (getMyVar(title) !== id) {\n                        putMyVar(title, id);\n                        refreshPage();\n                    }\n                    return 'hiker://empty'\n                }, data.title, data.ids[i]),\n                col_type: 'scroll_button'\n            })\n        }\n        items.push({\n            col_type: 'blank_block'\n        })\n        if (data.arr) {\n            setTabs(data.arr[data.ids.indexOf(getMyVar(data.title))])\n        }\n    }\n}\nsetTabs(tabs)\n\nstorage0.putMyVar('items', items)","pages":"[{\"col_type\":\"movie_3_marquee\",\"name\":\"sign\",\"path\":\"sign\",\"rule\":\"function sign(params) {\\n    function middle(ls) {\\n        let resNum = []\\n\\n        function test(a, b, c) {\\n            let r25 = a >> 2\\n            if (b !== undefined && c !== undefined) {\\n                let r26 = a & 3\\n                let r26_2 = r26 << 4\\n                let r26_3 = b >> 4\\n                let r26_4 = r26_2 | r26_3\\n                let r27 = b & 15\\n                let r27_2 = r27 << 2\\n                let r27_3 = r27_2 | (c >> 6)\\n                let r28 = c & 63\\n                resNum.push(r25)\\n                resNum.push(r26_4)\\n                resNum.push(r27_3)\\n                resNum.push(r28)\\n            } else {\\n                let r10 = a >> 2\\n                let r11 = a & 3\\n                let r11_2 = r11 << 4\\n                resNum.push(r10)\\n                resNum.push(r11_2)\\n            }\\n        }\\n\\n        for (let i = 0; i < ls.length; i += 3) {\\n            if (ls[i] !== undefined && ls[i + 1] !== undefined && ls[i + 2] !== undefined) {\\n                test(ls[i], ls[i + 1], ls[i + 2])\\n            } else {\\n                test(ls[i], undefined, undefined)\\n            }\\n        }\\n        let res = []\\n        resNum.forEach((item) => {\\n            let zd = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\\n            res.push(zd[item])\\n        })\\n        res = res.join('')\\n        return res\\n    }\\n\\n    function head(md5Str) {\\n        let res = [];\\n        [21, 4, 9, 26, 16, 20, 27, 30].map(x => {\\n            res.push(md5Str[x])\\n        })\\n        return res.join('')\\n    }\\n\\n    function tail(md5Str) {\\n        let res = [];\\n        [18, 11, 3, 2, 1, 7, 6, 25].map(x => {\\n            res.push(md5Str[x])\\n        })\\n        return res.join('')\\n    }\\n\\n    function getLs(md5Str) {\\n        let zd = {\\n            \\\"0\\\": 0,\\n            \\\"1\\\": 1,\\n            \\\"2\\\": 2,\\n            \\\"3\\\": 3,\\n            \\\"4\\\": 4,\\n            \\\"5\\\": 5,\\n            \\\"6\\\": 6,\\n            \\\"7\\\": 7,\\n            \\\"8\\\": 8,\\n            \\\"9\\\": 9,\\n            \\\"A\\\": 10,\\n            \\\"B\\\": 11,\\n            \\\"C\\\": 12,\\n            \\\"D\\\": 13,\\n            \\\"E\\\": 14,\\n            \\\"F\\\": 15\\n        }\\n        let ol = [212, 45, 80, 68, 195, 163, 163, 203, 157, 220, 254, 91, 204, 79, 104, 6]\\n        let res = []\\n        let j = 0\\n        for (let i = 0; i < md5Str.length; i += 2) {\\n            let one = zd[md5Str[i]]\\n            let two = zd[md5Str[i + 1]]\\n            let r = one * 16 ^ two\\n            res.push(r ^ ol[j])\\n            j += 1\\n        }\\n        return res\\n    }\\n    let md5Str = md5(params).toUpperCase()\\n    let h = head(md5Str)\\n    let e = tail(md5Str)\\n    let ls = getLs(md5Str)\\n    let m = middle(ls)\\n    let res = ('zzb' + h + m + e).toLowerCase()\\n    let r = RegExp(/[\\\\\\\\/+]/g)\\n    res = res.replace(r, '')\\n    return res\\n}\"},{\"col_type\":\"movie_3_marquee\",\"name\":\"歌词\",\"path\":\"lrc\",\"rule\":\"js:\\n\\nvar getlrc = function(mid) {\\n    require('hiker://page/sign')\\n    let body = JSON.stringify({\\n        \\\"comm\\\": {\\n            \\\"cv\\\": 4747474,\\n            \\\"ct\\\": 24,\\n            \\\"format\\\": \\\"json\\\",\\n            \\\"inCharset\\\": \\\"utf-8\\\",\\n            \\\"outCharset\\\": \\\"utf-8\\\",\\n            \\\"notice\\\": 0,\\n            \\\"platform\\\": \\\"yqq.json\\\",\\n            \\\"needNewCode\\\": 1,\\n            \\\"uin\\\": 0,\\n            \\\"g_tk_new_20200303\\\": 5381,\\n            \\\"g_tk\\\": 5381\\n        },\\n        \\\"req_1\\\": {\\n            \\\"module\\\": \\\"music.musichallSong.PlayLyricInfo\\\",\\n            \\\"method\\\": \\\"GetPlayLyricInfo\\\",\\n            \\\"param\\\": {\\n                \\\"songMID\\\": mid\\n            }\\n        }\\n    })\\n\\n    var lrc = JSON.parse(post(buildUrl('https://u.y.qq.com/cgi-bin/musics.fcg', {\\n        _: Date.now(),\\n        sign: sign(body)\\n    }), {\\n        body: body\\n    })).req_1.data.lyric;\\n    return base64Decode(lrc);\\n}\"}]","proxy":"","icon":"https://y.qq.com/mediastyle/mod/mobile/img/logo.svg"}
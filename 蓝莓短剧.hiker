{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"二级","path":"erji","rule":"js:\nvar d = [];\nvar html = getResCode();\neval(html.match(/const\\s+episodes\\s*=\\s*\\[.*?\\];/)[0])\nlog(episodes)\nvar tabs = [];\n\nvar conts = pdfa(html, '.episode-grid&&ul'); //集数列表😀😀\n\nvar lists = [];\nfor (var i in conts) {\n    lists.push(pdfa(conts[i], 'body&&li')) //集数一般不用改\n}\ntry {\n   let descList = [];\n\n// 判断 author 内容\nif (MY_PARAMS.author) {\n    if (/^时间：/.test(MY_PARAMS.author)) {\n        descList.push(MY_PARAMS.author);\n    } else if (/^类型：/.test(MY_PARAMS.author)) {\n        descList.push(MY_PARAMS.author);\n    } else if (/^主演：/.test(MY_PARAMS.author)) {\n        descList.push(MY_PARAMS.author);\n    } else if (/^\\d{4}-/.test(MY_PARAMS.author)) {\n        descList.push(\"时间：\" + MY_PARAMS.author);\n    } else if (/[\\u4e00-\\u9fa5]{2,}(、[\\u4e00-\\u9fa5]{2,})+/.test(MY_PARAMS.author)) {\n        // 包含多个中文人名\n        descList.push(\"主演：\" + MY_PARAMS.author);\n    } else {\n        // 移除所有 \"类型：\" 前缀并作为默认类型添加\n        const processedAuthor = MY_PARAMS.author.replace(/^类型: /g, '').trim();\n        if (processedAuthor !== \"\") {\n            descList.push(\"类型：\" + processedAuthor);\n        }\n    }\n}\n\n// 判断 count 内容\nif (MY_PARAMS.count) {\n    let countText = MY_PARAMS.count;\n    const hotIndex = countText.toLowerCase().indexOf(\"热度\");\n\n    if (hotIndex !== -1 && !descList.some(item => item.startsWith(\"热度：\"))) {\n        const hotPart = countText.substring(hotIndex).trim();\n        descList.push(\"热度：\" + hotPart);\n        countText = countText.substring(0, hotIndex).trim();\n    }\n\n    if (/更新|集/.test(countText)) {\n        descList.push(\"更新：\" + countText.replace(/^更新/, '').trim());\n    } else if (countText.trim() !== \"\") {\n        descList.push(countText.trim());\n    }\n}\n\n// 类型字段补充 (无论 author 中是否有类型，都尝试添加)\nif (MY_PARAMS.type) {\n    if (!/^类型：/.test(MY_PARAMS.type)) {\n        descList.push(\"类型：\" + MY_PARAMS.type);\n    } else {\n        descList.push(MY_PARAMS.type);\n    }\n}\n\nd.push({\n    title: \"名称:\" + pdfh(html, '.comic-title&&Text'),\n    desc: descList.join(\"\\n\"),\n    img: pd(html, 'img&&src') + '@Referer=',\n    url: MY_URL,\n    col_type: 'movie_1_vertical_pic_blur',\n    extra: {\n        gradient: true\n    }\n});\n\n\n\n    var 简介 = pdfh(html, '.comic-description&&Text') //简介现在是空的自己定位也可以不填就没有简介😀😀\n    d.push({\n        title: '‘‘’’<small><font color=\"#ff148e8e\">简介：' + 简介.substr(0, 55) + '...</font><small><font color=\"red\">详情</font></small></small>',\n        url: 'hiker://empty#' + '\\n' + 简介 + '#noHistory#' + `@rule=js: var d = [];d.push({title:'影片简介：'+ MY_URL.split('#')[1],col_type: 'long_text'}); setResult(d);`,\n        col_type: 'text_1'\n    });\n} catch (e) {\n    d.push({\n        img: pd(html,\n            '.lazy&&data-original') + '@Referer=',\n        url: MY_URL,\n        col_type: 'movie_1_vertical_pic_blur',\n        extra: {\n            gradient: true\n        }\n    });\n}\n\n\nfunction setTabs(tabs, vari) {\n    d.push({\n        title: (getVar('shsort') == '1') ? '““””<b><span style=\"color: #FF0000\">逆序</span></b>' : '““””<b><span style=\"color: #1aad19\">正序</span></b>',\n        url: `@lazyRule=.js:let conf = getVar('shsort');if(conf=='1'){putVar({key:'shsort', value:'0'});}else{putVar({key:'shsort', value:'1'})};refreshPage();'toast://切换排序成功'`,\n        col_type: 'flex_button'\n    })\n    for (var i = 0; i < tabs.length; i++) {\n        var url = \"#noLoading#@lazyRule=.js:putVar('\" + vari + \"', '\" + i + \"');refreshPage(false);'toast://切换成功！';'#noHistory#hiker://empty'\";\n        d.push({\n            title: getVar(vari, '0') == i ? '““' + tabs[i] + '””' : tabs[i],\n            url: url,\n            col_type: 'flex_button'\n        })\n    }\n}\n\nfunction setLists(lists, index) {\n    var list = lists[index];\n    if (getVar('shsort') == '1') {\n        list = list.reverse();\n        episodes = episodes.slice().reverse();\n    }\n    var base = MY_URL.split('/?')[0];\n    for (var j in list) {\n        var url = episodes[j] ? episodes[j].url : pd(list[j], 'a&&href');\n\n        // 如果 url 为空或无效，则跳过当前项\n        if (!url || url.trim() === '') {\n            continue;  // 跳过当前循环\n        }\n\n        // 修正URL逻辑\n        if (!/^https?:\\/\\//.test(url)) {\n            if (url.indexOf('./') === 0) {\n                url = url.replace('./', '');\n            }\n            url = base + '/' + url.replace(/^\\/+/, ''); // 去掉开头的多余 /\n        }\n\n        d.push({\n            title: pdfh(list[j], 'Text')\n                .replace(/第(\\d+)集/, '$1')\n                .replace('第', '')\n                .replace('期', ''),\n            url: url + \"#isVideo=true#\",\n            col_type: list.length > 3 ? 'text_4' : 'text_2'\n        });\n    }\n}\n\nsetTabs(tabs, MY_URL);\nsetLists(lists, getVar(MY_URL, '0'));\nd.push({\n    col_type: 'blank_block'\n});\nd.push({\n    col_type: 'line_blank'\n});\nd.push({\n    title: '‘‘’’<small><font color=#20b2aa>数据资源收集于网络，海阔不提供任何资源！</font></small>',\n    desc: '‘‘’’<small><font color=#ff7f50>本规则仅限学习与交流，请导入后24小时内删除，请勿传播！</font></small>',\n    url: 'hiker://empty',\n    col_type: 'text_center_1',\n    extra: {\n        lineVisible: false\n    }\n});\n\nsetResult(d);"},{"col_type":"movie_3","name":"urlSet","path":"urlSet","rule":"js:\nconst defaultUrlmap = [{\n        \"name\": \"小果\",\n        \"url\": \"https://api.lanmeio.com/hongguo/\"\n    },\n    {\n        \"name\": \"小猫\",\n        \"url\": \"https://api.lanmeio.com/qimao/\"\n    },\n    {\n        \"name\": \"小马\",\n        \"url\": \"https://api.lanmeio.com/hemaduanju/\"\n    },\n    {\n        \"name\": \"小芽\",\n        \"url\": \"https://api.lanmeio.com/xingya/\"\n    },\n    {\n        \"name\": \"小看\",\n        \"url\": \"https://api.lanmeio.com/xiaokan/\"\n    },\n    {\n        \"name\": \"小牛\",\n        \"url\": \"https://api.lanmeio.com/niuniu/\"\n    }];"},{"col_type":"movie_3","name":"搜索","path":"search","rule":"js:\nvar d = [];\nconst page = MY_PAGE;\nconst key = getMyVar(\"keyword\");\nconst source = getMyVar(\"source\"); // 只读一个变量\nconst body = \"page=\" + page + \"&ajax=1&name=\" + key;\n\n\nconst sources = {\n    xiaoguo: \"https://api.lanmeio.com/hongguo/\",\n    xiaomao: \"https://api.lanmeio.com/qimao/\",\n    xiaoma: \"https://api.lanmeio.com/hemaduanju/\",\n    xiaoya: \"https://api.lanmeio.com/xingya/\",\n    xiaokan: \"https://api.lanmeio.com/xiaokan/\",\n    xiaoniu: \"https://api.lanmeio.com/niuniu/\"\n};\n\nif (sources[source]) {\n    let res = JSON.parse(post(sources[source], {\n        headers: {\n            \"Referer\": sources[source]\n        },\n        body: body\n    })).data;\n\n    res.forEach(data => {\n        let url = sources[source] + \"?bookid=\" + data.book_id + '#immersiveTheme##autoCache##gameTheme#';\n        d.push({\n            title: data.title,\n            desc:data.author+\"\\n\"+data.count+\"\\n\"+data.intro,\n            img: data.cover + '@Referer=',\n            url: \"hiker://page/erji#immersiveTheme#\",\n            col_type: \"movie_1_vertical_pic\",\n            extra: {\n                url: url,\n                pageTitle: data.title,\n                author:data.author,\n                count:data.count,\n                type:data.type\n                \n                \n            }\n        });\n    });\n}\n\nsetResult(d);"},{"col_type":"movie_3","name":"分类","path":"fenlei","rule":"js:\nvar f = {\n    'xg': [\"推荐榜\", \"热播榜\", \"飙升榜\", \"新剧榜\", \"热搜榜\", \"新剧\", \"逆袭\", \"古装\", \"总裁\", \"打脸虐渣\", \"现代言情\", \"穿越\", \"马甲\", \"重生\", \"奇幻脑洞\", \"豪门恩怨\", \"都市日常\", \"神豪\", \"大女主\", \"亲情\", \"女性成长\", \"战神归来\", \"小人物\", \"都市修仙\", \"强者归来\", \"闪婚\", \"家庭伦理\", \"热血\", \"玄学\", \"重生\", \"逆袭\", \"科幻未来\", \"武侠\", \"都市\", \"修真\", \"宫斗\", \"搞笑\", \"穿越\", \"电竞\", \"轻松治愈\", \"机甲\"],\n    'xm': [\"推荐\", \"新剧\", \"都市\", \"逆袭\", \"甜宠\", \"现代言情\", \"复仇\", \"古代\", \"家庭\", \"虐恋\", \"战神\", \"穿越\", \"神豪\", \"重生\", \"悬疑\", \"奇幻\", \"豪门总裁\", \"青春\", \"萌宝\", \"日常\", \"爽文\", \"赘婿\", \"民国\", \"情感\", \"玄幻\", \"闪婚\", \"热血\", \"异能\", \"婚恋\", \"虐渣\", \"神医\", \"古代言情\", \"历史\", \"武侠\", \"年代\", \"仙侠\", \"架空历史\", \"校园\", \"乡村\", \"言情\", \"宫斗\", \"职场\", \"科幻\", \"鉴宝\", \"婚姻\", \"系统\", \"修仙\", \"先婚后爱\", \"娱乐圈\", \"励志\", \"1V1\", \"真假千金\", \"恐怖\", \"追妻火葬场\", \"医生\", \"治愈\"],\n    'hm': [\"热播榜\", \"飙升榜\", \"新剧榜\", \"热搜榜\", \"精选\", \"古装\", \"重生\", \"家庭\", \"恋爱\", \"穿越\", \"强者回归\", \"神医\", \"萌宝\", \"复仇\", \"超能\", \"草根逆袭\", \"奇幻\", \"年代\", \"悬疑\"],\n    'xy': [\"实时热榜\", \"星选好剧\", \"新剧\", \"热播剧\", \"口碑榜\", \"热搜榜\", \"新剧榜\", \"全部\", \"都市\", \"逆袭\", \"古装\", \"现代言情\", \"甜宠\", \"重生\", \"穿越\", \"战神\", \"亲情\", \"玄幻\", \"古代言情\", \"历史\", \"萌宝\", \"神医\", \"脑洞\", \"赘婿\", \"虐恋\"],\n    'xk': [\"热播榜\", \"新剧榜\", \"点赞榜\", \"必看榜\", \"限免榜\", \"推荐榜\", \"热播剧\", \"新剧\"],\n    'xn': [\"优质好剧\", \"新剧\", \"都市\", \"逆袭\", \"甜宠\", \"现代言情\", \"复仇\", \"古代\", \"家庭\", \"虐恋\", \"战神\", \"穿越\", \"神豪\", \"重生\", \"悬疑\", \"奇幻\", \"豪门总裁\", \"青春\", \"萌宝\", \"日常\", \"爽文\", \"赘婿\", \"民国\", \"情感\", \"玄幻\", \"闪婚\", \"热血\", \"异能\", \"婚恋\", \"虐渣\", \"神医\", \"古代言情\", \"历史\", \"武侠\", \"年代\", \"仙侠\", \"架空历史\", \"校园\", \"乡村\", \"言情\", \"宫斗\", \"职场\", \"科幻\", \"鉴宝\", \"婚姻\", \"系统\", \"修仙\", \"先婚后爱\", \"娱乐圈\", \"励志\", \"1V1\", \"真假千金\", \"恐怖\", \"追妻火葬场\", \"医生\", \"治愈\"]\n};"}],"title":"蓝莓短剧","author":"狗浩啊","version":0,"type":"video","url":"hiker://empty##fypage","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nvar page = MY_PAGE;\n\nvar getRangeColors = function() {\n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);\n};\n\nfunction createNav(navItems, icons) {\n    navItems.forEach((item, index) => {\n        d.push({\n            title: getMyVar('navtitle', navItems[0]) == item ? '‘‘’’<b><font color=\"#9F5F9F\">' + item + '</font></b>' : '‘‘’’<b>' + item + '</b>',\n            img: icons[index],\n            url: $('#noLoading##noHistory#').lazyRule((item) => {\n                putMyVar(\"navtitle\", item);\n                refreshPage(false);\n                return 'hiker://empty';\n            }, item),\n            col_type: \"icon_5\"\n        });\n    });\n}\n\nfunction createSearchBox() {\n    d.push({\n        desc: \"搜你想要的...\",\n        title: \"🔍\",\n        url: $.toString(()=>{\n          if(!input){\n           putMyVar(\"navtitle\", '小牛');\n                refreshPage(false);\n                return 'hiker://empty';\n   \n          }else{\n           let url='hiker://search?rule=' + MY_RULE.title + '&s='+input;\n           return url;   \n          }  \n        }),\n        col_type: \"input\",\n    });\n}\n\nfunction handleCategorySelection(categories, subCategories, apiEndpoint, lazyUrlBase) {\n    var subKey = \"sub_\" + getMyVar(\"navtitle\");\n    var currentSub = getMyVar(subKey, subCategories[0]);\n\n    if (page == '1') {\n        categories.forEach((category, index) => {\n            var subCategory = subCategories[index];\n            d.push({\n                title: getMyVar('ctitle', categories[0]) == category ? '‘‘’’<font color=' + getRangeColors() + '>' + category + '</font>' : category,\n                url: $('#noLoading##noHistory#').lazyRule((subCategory, category, subKey) => {\n                    putMyVar(\"ctitle\", category);\n                    putMyVar(subKey, subCategory);\n                    refreshPage();\n                    return 'hiker://empty';\n                }, subCategory, category, subKey),\n                col_type: \"scroll_button\"\n            });\n        });\n    }\n\n    try {\n        var responseData = JSON.parse(post(apiEndpoint, {\n            headers: {\n                \"Referer\": apiEndpoint\n            },\n            body: {\n                \"page\": page,\n                \"ajax\": \"1\",\n                \"category\": decodeURIComponent(currentSub)\n            }\n        })).data;\n\n        responseData.forEach(data => {\n            var itemUrl = lazyUrlBase + data.book_id + '#immersiveTheme##autoCache##gameTheme#';\n            d.push({\n                title: data.title,\n                desc: data.author,\n                img: data.cover + '@Referer=',\n                url: `hiker://page/erji#immersiveTheme#`,\n                col_type: 'movie_3',\n                extra: {\n                    url: itemUrl,\n                    author: data.author,\n                    count: data.count,\n                    type: data.type\n                }\n            });\n        });\n    } catch (error) {\n        console.log(\"Error fetching data:\", error);\n    }\n}\n\nif (MY_PAGE == 1) {\n    createNav([\"小果\", \"小猫\", \"小马\", \"小芽\", \"小看\"], [\n        \"https://lanmeio.com/tubiao/ke/170.png\",\n        \"https://lanmeio.com/tubiao/ke/142.png\",\n        \"https://lanmeio.com/tubiao/ke/82.png\",\n        \"https://lanmeio.com/tubiao/ke/70.png\",\n        \"https://lanmeio.com/tubiao/ke/33.png\",\n    ]);\n    createSearchBox();\n}\n\nvar currentNav = getMyVar(\"navtitle\", \"小果\");\n\nrequire('hiker://page/fenlei');\n\nswitch (currentNav) {\n    case \"小果\":\n        handleCategorySelection(f.xg, f.xg,\"https://api.lanmeio.com/hongguo/\",\"https://api.lanmeio.com/hongguo/?bookid=\");\n        break;\n    case \"小猫\":\n        handleCategorySelection(f.xm, f.xm,\"https://api.lanmeio.com/qimao/\",\"https://api.lanmeio.com/qimao/?bookid=\");\n        break;\n    case \"小马\":\n        handleCategorySelection(f.hm, f.hm,\"https://api.lanmeio.com/hemaduanju/\",\"https://api.lanmeio.com/hemaduanju/?bookid=\");\n        break;\n    case \"小芽\":\n        handleCategorySelection(f.xy, f.xy,\"https://api.lanmeio.com/xingya/\",\"https://api.lanmeio.com/xingya/?bookid=\");\n        break;\n    case \"小看\":\n        handleCategorySelection(f.xk, f.xk,\"https://api.lanmeio.com/xiaokan/\",\"https://api.lanmeio.com/xiaokan/?bookid=\");\n        break;\n    case \"小牛\":\n        handleCategorySelection(f.xn, f.xn,\"https://api.lanmeio.com/niuniu/\",\"https://api.lanmeio.com/niuniu/?bookid=\");\n        break;\n}\nsetResult(d);","searchFind":"js:\nvar d = [];\nlet key = getParam('key');\nconst page = MY_PAGE;\nconst sourceMap = {\n    \"xiaoguo\": \"小果\",\n    \"xiaomao\": \"小猫\",\n    \"xiaoma\": \"小马\",\n    \"xiaoya\": \"小芽\",\n    \"xiaokan\": \"小看\",\n    \"xiaoniu\": \"小牛\"\n};\n\nfor (let keyName in sourceMap) {\n    d.push({\n        title: sourceMap[keyName] + \"搜索\" + key,\n        url: $(\"#noLoading#\").lazyRule((key, source) => {\n            putMyVar(\"source\", source);  // 统一变量名！\n            putMyVar(\"keyword\", key);\n            return \"hiker://page/search?fypage\";\n        }, key, keyName),\n        extra: {\n            pageTitle: \"搜索:\" + key,\n            nav: false\n        }\n    });\n}\nsetResult(d);","search_url":"hiker://empty?key=**&page=fypage","group":"②短剧","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"二级\",\"path\":\"erji\",\"rule\":\"js:\\nvar d = [];\\nvar html = getResCode();\\neval(html.match(/const\\\\s+episodes\\\\s*=\\\\s*\\\\[.*?\\\\];/)[0])\\nlog(episodes)\\nvar tabs = [];\\n\\nvar conts = pdfa(html, '.episode-grid&&ul'); //集数列表😀😀\\n\\nvar lists = [];\\nfor (var i in conts) {\\n    lists.push(pdfa(conts[i], 'body&&li')) //集数一般不用改\\n}\\ntry {\\n   let descList = [];\\n\\n// 判断 author 内容\\nif (MY_PARAMS.author) {\\n    if (/^时间：/.test(MY_PARAMS.author)) {\\n        descList.push(MY_PARAMS.author);\\n    } else if (/^类型：/.test(MY_PARAMS.author)) {\\n        descList.push(MY_PARAMS.author);\\n    } else if (/^主演：/.test(MY_PARAMS.author)) {\\n        descList.push(MY_PARAMS.author);\\n    } else if (/^\\\\d{4}-/.test(MY_PARAMS.author)) {\\n        descList.push(\\\"时间：\\\" + MY_PARAMS.author);\\n    } else if (/[\\\\u4e00-\\\\u9fa5]{2,}(、[\\\\u4e00-\\\\u9fa5]{2,})+/.test(MY_PARAMS.author)) {\\n        // 包含多个中文人名\\n        descList.push(\\\"主演：\\\" + MY_PARAMS.author);\\n    } else {\\n        // 移除所有 \\\"类型：\\\" 前缀并作为默认类型添加\\n        const processedAuthor = MY_PARAMS.author.replace(/^类型: /g, '').trim();\\n        if (processedAuthor !== \\\"\\\") {\\n            descList.push(\\\"类型：\\\" + processedAuthor);\\n        }\\n    }\\n}\\n\\n// 判断 count 内容\\nif (MY_PARAMS.count) {\\n    let countText = MY_PARAMS.count;\\n    const hotIndex = countText.toLowerCase().indexOf(\\\"热度\\\");\\n\\n    if (hotIndex !== -1 && !descList.some(item => item.startsWith(\\\"热度：\\\"))) {\\n        const hotPart = countText.substring(hotIndex).trim();\\n        descList.push(\\\"热度：\\\" + hotPart);\\n        countText = countText.substring(0, hotIndex).trim();\\n    }\\n\\n    if (/更新|集/.test(countText)) {\\n        descList.push(\\\"更新：\\\" + countText.replace(/^更新/, '').trim());\\n    } else if (countText.trim() !== \\\"\\\") {\\n        descList.push(countText.trim());\\n    }\\n}\\n\\n// 类型字段补充 (无论 author 中是否有类型，都尝试添加)\\nif (MY_PARAMS.type) {\\n    if (!/^类型：/.test(MY_PARAMS.type)) {\\n        descList.push(\\\"类型：\\\" + MY_PARAMS.type);\\n    } else {\\n        descList.push(MY_PARAMS.type);\\n    }\\n}\\n\\nd.push({\\n    title: \\\"名称:\\\" + pdfh(html, '.comic-title&&Text'),\\n    desc: descList.join(\\\"\\\\n\\\"),\\n    img: pd(html, 'img&&src') + '@Referer=',\\n    url: MY_URL,\\n    col_type: 'movie_1_vertical_pic_blur',\\n    extra: {\\n        gradient: true\\n    }\\n});\\n\\n\\n\\n    var 简介 = pdfh(html, '.comic-description&&Text') //简介现在是空的自己定位也可以不填就没有简介😀😀\\n    d.push({\\n        title: '‘‘’’<small><font color=\\\"#ff148e8e\\\">简介：' + 简介.substr(0, 55) + '...</font><small><font color=\\\"red\\\">详情</font></small></small>',\\n        url: 'hiker://empty#' + '\\\\n' + 简介 + '#noHistory#' + `@rule=js: var d = [];d.push({title:'影片简介：'+ MY_URL.split('#')[1],col_type: 'long_text'}); setResult(d);`,\\n        col_type: 'text_1'\\n    });\\n} catch (e) {\\n    d.push({\\n        img: pd(html,\\n            '.lazy&&data-original') + '@Referer=',\\n        url: MY_URL,\\n        col_type: 'movie_1_vertical_pic_blur',\\n        extra: {\\n            gradient: true\\n        }\\n    });\\n}\\n\\n\\nfunction setTabs(tabs, vari) {\\n    d.push({\\n        title: (getVar('shsort') == '1') ? '““””<b><span style=\\\"color: #FF0000\\\">逆序</span></b>' : '““””<b><span style=\\\"color: #1aad19\\\">正序</span></b>',\\n        url: `@lazyRule=.js:let conf = getVar('shsort');if(conf=='1'){putVar({key:'shsort', value:'0'});}else{putVar({key:'shsort', value:'1'})};refreshPage();'toast://切换排序成功'`,\\n        col_type: 'flex_button'\\n    })\\n    for (var i = 0; i < tabs.length; i++) {\\n        var url = \\\"#noLoading#@lazyRule=.js:putVar('\\\" + vari + \\\"', '\\\" + i + \\\"');refreshPage(false);'toast://切换成功！';'#noHistory#hiker://empty'\\\";\\n        d.push({\\n            title: getVar(vari, '0') == i ? '““' + tabs[i] + '””' : tabs[i],\\n            url: url,\\n            col_type: 'flex_button'\\n        })\\n    }\\n}\\n\\nfunction setLists(lists, index) {\\n    var list = lists[index];\\n    if (getVar('shsort') == '1') {\\n        list = list.reverse();\\n        episodes = episodes.slice().reverse();\\n    }\\n    var base = MY_URL.split('/?')[0];\\n    for (var j in list) {\\n        var url = episodes[j] ? episodes[j].url : pd(list[j], 'a&&href');\\n\\n        // 如果 url 为空或无效，则跳过当前项\\n        if (!url || url.trim() === '') {\\n            continue;  // 跳过当前循环\\n        }\\n\\n        // 修正URL逻辑\\n        if (!/^https?:\\\\/\\\\//.test(url)) {\\n            if (url.indexOf('./') === 0) {\\n                url = url.replace('./', '');\\n            }\\n            url = base + '/' + url.replace(/^\\\\/+/, ''); // 去掉开头的多余 /\\n        }\\n\\n        d.push({\\n            title: pdfh(list[j], 'Text')\\n                .replace(/第(\\\\d+)集/, '$1')\\n                .replace('第', '')\\n                .replace('期', ''),\\n            url: url + \\\"#isVideo=true#\\\",\\n            col_type: list.length > 3 ? 'text_4' : 'text_2'\\n        });\\n    }\\n}\\n\\nsetTabs(tabs, MY_URL);\\nsetLists(lists, getVar(MY_URL, '0'));\\nd.push({\\n    col_type: 'blank_block'\\n});\\nd.push({\\n    col_type: 'line_blank'\\n});\\nd.push({\\n    title: '‘‘’’<small><font color=#20b2aa>数据资源收集于网络，海阔不提供任何资源！</font></small>',\\n    desc: '‘‘’’<small><font color=#ff7f50>本规则仅限学习与交流，请导入后24小时内删除，请勿传播！</font></small>',\\n    url: 'hiker://empty',\\n    col_type: 'text_center_1',\\n    extra: {\\n        lineVisible: false\\n    }\\n});\\n\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"urlSet\",\"path\":\"urlSet\",\"rule\":\"js:\\nconst defaultUrlmap = [{\\n        \\\"name\\\": \\\"小果\\\",\\n        \\\"url\\\": \\\"https://api.lanmeio.com/hongguo/\\\"\\n    },\\n    {\\n        \\\"name\\\": \\\"小猫\\\",\\n        \\\"url\\\": \\\"https://api.lanmeio.com/qimao/\\\"\\n    },\\n    {\\n        \\\"name\\\": \\\"小马\\\",\\n        \\\"url\\\": \\\"https://api.lanmeio.com/hemaduanju/\\\"\\n    },\\n    {\\n        \\\"name\\\": \\\"小芽\\\",\\n        \\\"url\\\": \\\"https://api.lanmeio.com/xingya/\\\"\\n    },\\n    {\\n        \\\"name\\\": \\\"小看\\\",\\n        \\\"url\\\": \\\"https://api.lanmeio.com/xiaokan/\\\"\\n    },\\n    {\\n        \\\"name\\\": \\\"小牛\\\",\\n        \\\"url\\\": \\\"https://api.lanmeio.com/niuniu/\\\"\\n    }];\"},{\"col_type\":\"movie_3\",\"name\":\"搜索\",\"path\":\"search\",\"rule\":\"js:\\nvar d = [];\\nconst page = MY_PAGE;\\nconst key = getMyVar(\\\"keyword\\\");\\nconst source = getMyVar(\\\"source\\\"); // 只读一个变量\\nconst body = \\\"page=\\\" + page + \\\"&ajax=1&name=\\\" + key;\\n\\n\\nconst sources = {\\n    xiaoguo: \\\"https://api.lanmeio.com/hongguo/\\\",\\n    xiaomao: \\\"https://api.lanmeio.com/qimao/\\\",\\n    xiaoma: \\\"https://api.lanmeio.com/hemaduanju/\\\",\\n    xiaoya: \\\"https://api.lanmeio.com/xingya/\\\",\\n    xiaokan: \\\"https://api.lanmeio.com/xiaokan/\\\",\\n    xiaoniu: \\\"https://api.lanmeio.com/niuniu/\\\"\\n};\\n\\nif (sources[source]) {\\n    let res = JSON.parse(post(sources[source], {\\n        headers: {\\n            \\\"Referer\\\": sources[source]\\n        },\\n        body: body\\n    })).data;\\n\\n    res.forEach(data => {\\n        let url = sources[source] + \\\"?bookid=\\\" + data.book_id + '#immersiveTheme##autoCache##gameTheme#';\\n        d.push({\\n            title: data.title,\\n            desc:data.author+\\\"\\\\n\\\"+data.count+\\\"\\\\n\\\"+data.intro,\\n            img: data.cover + '@Referer=',\\n            url: \\\"hiker://page/erji#immersiveTheme#\\\",\\n            col_type: \\\"movie_1_vertical_pic\\\",\\n            extra: {\\n                url: url,\\n                pageTitle: data.title,\\n                author:data.author,\\n                count:data.count,\\n                type:data.type\\n                \\n                \\n            }\\n        });\\n    });\\n}\\n\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"分类\",\"path\":\"fenlei\",\"rule\":\"js:\\nvar f = {\\n    'xg': [\\\"推荐榜\\\", \\\"热播榜\\\", \\\"飙升榜\\\", \\\"新剧榜\\\", \\\"热搜榜\\\", \\\"新剧\\\", \\\"逆袭\\\", \\\"古装\\\", \\\"总裁\\\", \\\"打脸虐渣\\\", \\\"现代言情\\\", \\\"穿越\\\", \\\"马甲\\\", \\\"重生\\\", \\\"奇幻脑洞\\\", \\\"豪门恩怨\\\", \\\"都市日常\\\", \\\"神豪\\\", \\\"大女主\\\", \\\"亲情\\\", \\\"女性成长\\\", \\\"战神归来\\\", \\\"小人物\\\", \\\"都市修仙\\\", \\\"强者归来\\\", \\\"闪婚\\\", \\\"家庭伦理\\\", \\\"热血\\\", \\\"玄学\\\", \\\"重生\\\", \\\"逆袭\\\", \\\"科幻未来\\\", \\\"武侠\\\", \\\"都市\\\", \\\"修真\\\", \\\"宫斗\\\", \\\"搞笑\\\", \\\"穿越\\\", \\\"电竞\\\", \\\"轻松治愈\\\", \\\"机甲\\\"],\\n    'xm': [\\\"推荐\\\", \\\"新剧\\\", \\\"都市\\\", \\\"逆袭\\\", \\\"甜宠\\\", \\\"现代言情\\\", \\\"复仇\\\", \\\"古代\\\", \\\"家庭\\\", \\\"虐恋\\\", \\\"战神\\\", \\\"穿越\\\", \\\"神豪\\\", \\\"重生\\\", \\\"悬疑\\\", \\\"奇幻\\\", \\\"豪门总裁\\\", \\\"青春\\\", \\\"萌宝\\\", \\\"日常\\\", \\\"爽文\\\", \\\"赘婿\\\", \\\"民国\\\", \\\"情感\\\", \\\"玄幻\\\", \\\"闪婚\\\", \\\"热血\\\", \\\"异能\\\", \\\"婚恋\\\", \\\"虐渣\\\", \\\"神医\\\", \\\"古代言情\\\", \\\"历史\\\", \\\"武侠\\\", \\\"年代\\\", \\\"仙侠\\\", \\\"架空历史\\\", \\\"校园\\\", \\\"乡村\\\", \\\"言情\\\", \\\"宫斗\\\", \\\"职场\\\", \\\"科幻\\\", \\\"鉴宝\\\", \\\"婚姻\\\", \\\"系统\\\", \\\"修仙\\\", \\\"先婚后爱\\\", \\\"娱乐圈\\\", \\\"励志\\\", \\\"1V1\\\", \\\"真假千金\\\", \\\"恐怖\\\", \\\"追妻火葬场\\\", \\\"医生\\\", \\\"治愈\\\"],\\n    'hm': [\\\"热播榜\\\", \\\"飙升榜\\\", \\\"新剧榜\\\", \\\"热搜榜\\\", \\\"精选\\\", \\\"古装\\\", \\\"重生\\\", \\\"家庭\\\", \\\"恋爱\\\", \\\"穿越\\\", \\\"强者回归\\\", \\\"神医\\\", \\\"萌宝\\\", \\\"复仇\\\", \\\"超能\\\", \\\"草根逆袭\\\", \\\"奇幻\\\", \\\"年代\\\", \\\"悬疑\\\"],\\n    'xy': [\\\"实时热榜\\\", \\\"星选好剧\\\", \\\"新剧\\\", \\\"热播剧\\\", \\\"口碑榜\\\", \\\"热搜榜\\\", \\\"新剧榜\\\", \\\"全部\\\", \\\"都市\\\", \\\"逆袭\\\", \\\"古装\\\", \\\"现代言情\\\", \\\"甜宠\\\", \\\"重生\\\", \\\"穿越\\\", \\\"战神\\\", \\\"亲情\\\", \\\"玄幻\\\", \\\"古代言情\\\", \\\"历史\\\", \\\"萌宝\\\", \\\"神医\\\", \\\"脑洞\\\", \\\"赘婿\\\", \\\"虐恋\\\"],\\n    'xk': [\\\"热播榜\\\", \\\"新剧榜\\\", \\\"点赞榜\\\", \\\"必看榜\\\", \\\"限免榜\\\", \\\"推荐榜\\\", \\\"热播剧\\\", \\\"新剧\\\"],\\n    'xn': [\\\"优质好剧\\\", \\\"新剧\\\", \\\"都市\\\", \\\"逆袭\\\", \\\"甜宠\\\", \\\"现代言情\\\", \\\"复仇\\\", \\\"古代\\\", \\\"家庭\\\", \\\"虐恋\\\", \\\"战神\\\", \\\"穿越\\\", \\\"神豪\\\", \\\"重生\\\", \\\"悬疑\\\", \\\"奇幻\\\", \\\"豪门总裁\\\", \\\"青春\\\", \\\"萌宝\\\", \\\"日常\\\", \\\"爽文\\\", \\\"赘婿\\\", \\\"民国\\\", \\\"情感\\\", \\\"玄幻\\\", \\\"闪婚\\\", \\\"热血\\\", \\\"异能\\\", \\\"婚恋\\\", \\\"虐渣\\\", \\\"神医\\\", \\\"古代言情\\\", \\\"历史\\\", \\\"武侠\\\", \\\"年代\\\", \\\"仙侠\\\", \\\"架空历史\\\", \\\"校园\\\", \\\"乡村\\\", \\\"言情\\\", \\\"宫斗\\\", \\\"职场\\\", \\\"科幻\\\", \\\"鉴宝\\\", \\\"婚姻\\\", \\\"系统\\\", \\\"修仙\\\", \\\"先婚后爱\\\", \\\"娱乐圈\\\", \\\"励志\\\", \\\"1V1\\\", \\\"真假千金\\\", \\\"恐怖\\\", \\\"追妻火葬场\\\", \\\"医生\\\", \\\"治愈\\\"]\\n};\"}]","proxy":"","icon":""}
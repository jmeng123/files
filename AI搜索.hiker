{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"二级解析","path":"p","rule":"js:\nvar d = [];\nlet url = base64Decode(getParam(\"u\"));\nd.push({\n    title: \"\",\n    url: url,\n    col_type: \"x5_webview_single\",\n    desc: \"float&&100%\",\n    pic_url: \"\",\n    extra: {\n        canBack: true\n    }\n});\nsetResult(d);"},{"col_type":"text_1","name":"搜索测试","path":"s","rule":"js:\nlet url = base64Decode(getParam(\"u\"));\nlog(url);\nlet key = getParam(\"key\");\nlet sp = $.require(\"hiker://page/sp\");\nsetResult(sp(url, key, \"搜索测试\"));"},{"col_type":"movie_3","name":"聚合搜索","path":"pro","rule":"var d = [];\nif (MY_PAGE == 1) {\n    d.push({\n        title: \"搜索\",\n        url: $.toString(() => {\n            refreshPage();\n            return \"hiker://empty\";\n        }),\n        col_type: \"input\",\n        desc: \"请输入关键词，尽量少字不要多字\",\n        pic_url: \"\",\n        extra: {\n            defaultValue: getMyVar(\"sou\", \"\"),\n            onChange: $.toString(() => {\n                putMyVar(\"sou\", input);\n            })\n        }\n    });\n    addListener(\"onClose\", $.toString(() => {\n        clearMyVar(\"sou\");\n        clearMyVar(\"so\");\n    }));\n}\n\nlet s = getMyVar(\"sou\", \"\");\nlet r = \"\";\nif (s != \"\") {\n    let p = MY_PAGE;\n    let {\n        load\n    } = $.require(\"hiker://page/data\");\n    let {\n        wrap\n    } = $.require(\"hiker://page/tool\");\n    let data = load(p, r != \"\" ? r : null);\n\n    let pageid = MY_RULE.title + \"-page\" + p;\n    if (data.length > 0) {\n        d.push({\n            title: \"加载第\" + p + \"页中，进度：1/\" + data.length,\n            url: \"\",\n            col_type: \"text_center_1\",\n            desc: \"\",\n            pic_url: \"\",\n            extra: {\n                id: pageid\n            }\n        });\n    }\n    setResult(d);\n    log(data.length);\n    if (data.length > 0) {\n        //多线程加载        \n        let realPage = \"\" == r ? 1 : p;\n        let tasks = data.map(it => {\n            return {\n                func: function(rule) {\n                    return rule.find(s, realPage);\n                },\n                param: it,\n                id: \"rule@\" + it.name\n            }\n        });\n\n        batchExecute(tasks, {\n            func: function(param, id, error, result) {\n                //log(\"listener: \" + (result || []).length)\n                param.i = param.i + 1;\n                if (result) {\n                    try {\n                        for (let it of result) {\n                            param.j = param.j + 1;\n                            addItemBefore(pageid, {\n                                title: wrap(it.title, s),\n                                desc: it.desc,\n                                url: it.url,\n                                pic_url: it.pic_url,\n                                col_type: it.pic_url ? 'movie_1_vertical_pic' : \"text_1\",\n                                extra: it.extra\n                            })\n                        }\n                    } catch (e) {}\n\n                }\n                if (param.i >= param.all) {\n                    deleteItem(pageid)\n                } else {\n                    updateItem({\n                        title: \"加载第\" + MY_PAGE + \"页中，进度：\" + (param.i + 1) + \"/\" + param.all,\n                        url: \"\",\n                        col_type: \"text_center_1\",\n                        desc: \"\",\n                        pic_url: \"\",\n                        extra: {\n                            id: pageid\n                        }\n                    })\n                }\n            },\n            param: {\n                all: data.length,\n                i: 0,\n                j: -1\n            }\n        })\n    }\n} else {\n    let {\n        load\n    } = $.require(\"hiker://page/data\");\n    let data = load(-1, null);\n    if (data.length > 0) {       \n        $.require(\"hiker://page/manage\")(d, data.map(it => it.name));\n        for (let it of data) {\n            d.push({\n                title: it.name,\n                url: \"select://\" + JSON.stringify({\n                    title: \"请选择操作\",\n                    col: 1,\n                    options: [\"访问首页\", \"搜索此站\"],\n                    js: $.toString((url) => {\n                        if (input == \"访问首页\") {\n                            MY_URL = url;\n                            return \"x5://\" + getHome(url)\n                        } else {\n                            return \"hiker://page/singles\"\n                        }\n                    }, it.url)\n                }),\n                col_type: \"flex_button\",\n                desc: \"\",\n                pic_url: \"\",\n                extra: {\n                    RULE: {\n                        name: it.name,\n                        url: it.url\n                    },\n                    longClick: [{\n                        title: \"禁用\" + it.name,\n                        js: $.toString((name) => {\n                            confirm({\n                                title: \"温馨提示\",\n                                content: \"确认删除禁用\" + name + \"吗？\",\n                                confirm: $.toString((name, rule) => {\n                                    let {\n                                        removeRule\n                                    } = $.require(\"hiker://page/data?rule=\" + rule);\n                                    removeRule(name);\n                                    refreshPage();\n                                    return \"toast://OK\";\n                                }, name, MY_RULE.title)\n                            })\n                            return \"hiker://empty\";\n                        }, it.name)\n                    }, {\n                        title: \"访问首页\",\n                        js: \"'x5://\" + getHome(it.url) + \"'\"\n                    }, {\n                        title: \"搜索此源\",\n                        js: \"'hiker://page/singles'\"\n                    }]\n                }\n            });\n        }       \n    }\n}\n\nsetResult(d);"},{"col_type":"movie_3","name":"数据","path":"data","rule":"//并发规则数\nlet size0 = 10;\nlet rulesText0 = `{RULES}`;\nlet rulesText = getItem(\"rules\", rulesText0);\nlet sp = $.require(\"hiker://page/sp\");\nrules = rulesText.split(\"\\n\")\n    .filter(it => it.includes(\"@\"))\n    .map(rule => {\n        let s = rule.split(\"@\");\n        return {\n            name: s[0],\n            find: function(key, page) {\n                return sp(s[1], key, s[0]);\n            },\n            url: s[1]\n        };\n    });\n\nfunction load(page, rule) {\n    let size = page <= 0 ? rules.length : size0;\n    page = page <= 0 ? 1 : page;\n    if (!page && !rule) {\n        return rules.map(it => it.name);\n    }\n    if (rule != null) {\n        if (page != null && page > 1) {\n            return rules.filter(i => i.name == rule && i.page);\n        }\n        return rules.filter(i => i.name == rule);\n    }\n    let start = (page - 1) * size;\n    if (rules.length < start + 1) {\n        return [];\n    }\n    let len = size;\n    if (rules.length < page * size) {\n        len = rules.length - start\n    }\n    return rules.slice(start, start + len);\n}\n\nfunction addRule(name, surl) {\n    setItem(\"rules\", rulesText + \"\\n\" + name + \"@\" + surl);\n}\n\nfunction removeRule(name) {\n    let newT = rulesText.split(\"\\n\")\n        .filter(it => it.indexOf(name + \"@\") < 0)\n        .join(\"\\n\");\n    setItem(\"rules\", newT);\n}\n\n$.exports = {\n    load: load,\n    addRule: addRule,\n    removeRule: removeRule\n}"},{"col_type":"movie_3","name":"搜索解析","path":"sp","rule":"function search(url, key, rule) {\n    let d = [];\n    let html = \"\";\n    if (url.includes(\"**\")) {\n        //get请求\n        let old = url;\n        url = url.replace(\"**\", key);\n        html = request(url);\n        //自动过验证码和频繁访问限制\n        let {\n            check, test\n        } = $.require(\"hiker://page/yzm\");\n        if (check(url, html, d)) {\n            log(\"重试了\");\n            html = request(url, {\n                headers: {\n                    \"Referer\": url\n                }\n            });           \n        }         \n        test(url, html, d, old, key, rule);\n    } else {\n        //自动识别post请求\n        html = request(url);\n        let form = pdfh(html, \"body&&form&&Html\");\n        let action = pd(html, \"form&&action\", url);\n        let inputs = pdfa(html, \"body&&form&&input\");\n        let body = {};\n        for (let it of inputs) {\n            let name = pdfh(it, \"input&&name\");\n            if (name && name != \"\") {\n                let value = pdfh(it, \"input&&value\");\n                body[name] = value || key;\n            }\n        }\n        html = post(action, {\n            body: body\n        });\n    }\n\n    let alist = pdfa(html, \"body&&a\");\n    let arr = alist.map(it => {\n        let t = pdfh(it, \"a&&Text\");\n        let t2 = pdfh(it, \"a&&title\");\n        return {\n            //html: it,\n            text: t2 && t2.includes(key) ? t2 : t,\n            href: pd(it, \"a&&href\", url)\n        }\n    });\n\n    function isResult(it) {\n        it = it.text || \"\";\n        if (it == \"\" || it.match(/搜索|结果/)) {\n            return false\n        }\n        return it.toLowerCase().includes(key);\n    }\n    key = key.toLowerCase();\n    for (let i = 0; i < arr.length; i++) {\n        let it = arr[i];\n        let t = it.text;\n        if (!it.href || it.href == \"\") {\n            continue;\n        }\n        if (isResult(it)) {\n            d.push({\n                title: t,\n                url: \"hiker://page/p?u=\" + base64Encode(it.href),\n                col_type: \"text_1\",\n                desc: \"““””<font color=#f13b66a>\" + rule + \"</font>\"\n            });\n        }\n    }\n    return d;\n}\n$.exports = search;"},{"col_type":"movie_3","name":"增删","path":"manage","rule":"$.exports = function(d, names) {\n    d.push({\n        title: \"AI技术\",\n        url: \"confirm://基于AI识片自动分析源码技术，代码完全开源，数据来源于原网站，软件和规则不提供任何内容.js:''\",\n        col_type: \"flex_button\"\n    });\n    d.push({\n        title: \" + \",\n        url: $(\"#noLoading#\").lazyRule((rr) => {\n            deleteItemByCls(\"aiadd\");\n            addItemAfter(rr + \"aisdel\", [{\n                    title: \"\",\n                    desc: \"请输入网站名称\",\n                    col_type: \"input\",\n                    extra: {\n                        titleVisible: false,\n                        onChange: \"putMyVar('name', input)\",\n                        cls: \"aiadd\"\n                    }\n                },\n                {\n                    title: \"\",\n                    desc: \"请输入网站搜索地址\",\n                    col_type: \"input\",\n                    extra: {\n                        titleVisible: false,\n                        onChange: \"putMyVar('surl', input)\",\n                        cls: \"aiadd\"\n                    }\n                },\n                {\n                    title: \"提交保存\",\n                    col_type: \"text_center_1\",\n                    url: $(\"#noLoading#\").lazyRule(() => {\n                        let surl = getMyVar(\"surl\", \"\");\n                        let name = getMyVar(\"name\", \"\");\n                        if (surl == \"\" || name == \"\") {\n                            return \"toast://请输入完整内容\"\n                        }\n                        let r = decodeURIComponent(surl);\n                        r = r.replace(new RegExp(\"[\\u4e00-\\u9fa5]+\", \"g\"), \"**\");\n                        let {\n                            addRule\n                        } = $.require(\"hiker://page/data\");\n                        addRule(name, r);\n                        refreshPage();\n                        return \"toast://已保存\";\n                    }),\n                    extra: {\n                        cls: \"aiadd\"\n                    }\n                }\n            ]);\n            return \"hiker://empty\"\n        }, MY_RULE.title),\n        col_type: \"flex_button\",\n    });\n    d.push({\n        title: \" - \",\n        url: \"select://\" + JSON.stringify({\n            options: names,\n            title: \"请选择要删除的站点\",\n            js: $.toString(() => {\n                let {\n                    removeRule\n                } = $.require(\"hiker://page/data\");\n                removeRule(input);\n                refreshPage();\n                return \"toast://OK\";\n            })\n        }),\n        col_type: \"flex_button\",\n        extra: {\n            id: MY_RULE.title + \"aisdel\"\n        }\n    });\n    d.push({\n        col_type: \"blank_block\"\n    });\n\n}"},{"col_type":"movie_3","name":"验证码","path":"yzm","rule":"function check(url, html, d) {\n    let reload = false;\n    return reload;\n}\n\nfunction test(url, html, d, old, key, rule) {\n    if (/5秒|频繁/.test(html)) {\n        d.push({\n            title: '搜索需间隔5秒，点击重新加载',\n            col_type: \"text_1\",\n            desc: \"““””<font color=#f13b66a>\" + rule + \"</font>\",\n            url: $().lazyRule((url, old, key, rule) => {\n                let sp = $.require(\"hiker://page/sp\");\n                let d = sp(old, key, rule);\n                let {\n                    wrap\n                } = $.require(\"hiker://page/tool\");\n                for (let it of d) {\n                    it.title = wrap(it.title, key);\n                }\n                addItemAfter(url, d);\n                deleteItem(url);\n                return \"toast://OK\";\n            }, url, old, key, rule),\n            extra: {\n                id: url\n            }\n        });\n    }\n}\n\n$.exports = {\n    check: check,\n    test: test\n}"},{"col_type":"movie_3","name":"工具","path":"tool","rule":"function wrap(text, s) {\n    return text.includes(\"““””\") ? text : \"““””\" + text.replace(new RegExp(\"<em>|</em>\", \"g\"), \"\").replace(new RegExp(s, \"g\"), \"<strong><span style=\\\"color: #1E90FF\\\">\" + s + \"</span></strong>\")\n}\n$.exports = {\n    wrap: wrap\n}"},{"col_type":"movie_3","name":"单搜","path":"singles","rule":"js:\nvar d = [];\nd.push({\n    title: \"搜索\",\n    url: $.toString(() => {\n        putMyVar(\"so\", input);\n        refreshPage();\n    }),\n    col_type: \"input\",\n    desc: \"请输入关键词，尽量少字不要多字\",\n    pic_url: \"\",\n    extra: {\n        defaultValue: getMyVar(\"so\", \"\")\n    }\n});\nlet s = getMyVar(\"so\", \"\");\nlet r = \"\";\nif (s != \"\") {\n    let p = MY_PAGE;\n    let {\n        load\n    } = $.require(\"hiker://page/data\");\n    let {\n        wrap\n    } = $.require(\"hiker://page/tool\");\n    let data = load(p, MY_PARAMS.RULE.name);\n    let arr = data[0].find(s, p);\n    for (let it of arr) {\n        it.title = wrap(it.title, s)\n        d.push(it);\n    }\n}\nsetResult(d);"},{"col_type":"movie_3","name":"搜索页面","path":"soup","rule":"js:\nvar d = [];\nif (MY_PARAMS.key && getMyVar(\"use\", \"\") == \"\") {\n    putMyVar(\"sou\", MY_PARAMS.key);\n    putMyVar(\"use\", \"1\");\n    addListener(\"onClose\", $.toString(() => {\n        clearMyVar(\"use\");\n    }));\n}\n$.require('hiker://page/pro')"}],"title":"AI搜索","author":"","version":48,"type":"tool","url":"hiker://empty##","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nd.push({\n    title: \"根据搜索地址生成聚合搜索器，无二级解析，如有需要请用AI识片\",\n    url: \"\",\n    col_type: \"text_center_1\",\n    desc: \"\",\n    pic_url: \"\"\n});\n\nd.push({\n    title: \"\",\n    url: \"\",\n    col_type: \"input\",\n    desc: \"请输入要生成的规则合集名\",\n    pic_url: \"\",\n    extra: {        \n        titleVisible: false,\n        onChange: $.toString(() => {\n            putMyVar(\"r1\", input);\n        }),\n        defaultValue: getMyVar(\"r1\",\"\")\n    }\n});\nd.push({\n    title: \"\",\n    url: \"\",\n    col_type: \"input\",\n    desc: \"示例：\\n规则1@http://1.com?kw=%E4%BD\\n规则2@http://2.com?kw=%E4%BD\",\n    pic_url: \"\",\n    extra: {\n        type: \"textarea\",\n        height: 3,\n        highlight: true,\n        titleVisible: false,\n        onChange: $.toString(() => {\n            putMyVar(\"rule\", input);\n        }),\n        defaultValue: getMyVar(\"rule\", \"\")\n    }\n});\n\nd.push({\n    title: \"生成规则\",\n    url: $(\"#noLoading#\").lazyRule((rule1) => {\n        let rules = getMyVar(\"rule\", \"\");\n        let r1 = getMyVar(\"r1\", \"\");\n        rules = rules.split(\"\\n\")\n        .filter(it => it.includes(\"@\"))\n        .map(it=>{\n            let a = it.split(\"@\");\n            let r = decodeURIComponent(a[1]);\n            r = r.replace(new RegExp(\"[\\u4e00-\\u9fa5]+\", \"g\"), \"**\");\n            return a[0] + \"@\" + r;\n        })\n        .join(\"\\\\n\");\n        if (rules == \"\") {\n            return \"toast://请先在上面输入网站搜索地址合集\";\n        }\n        rule = JSON.parse(fetch(\"hiker://home@\" + rule1));\n        rule.find_rule = \"js:$.require('hiker://page/pro')\";\n        rule.url = \"hiker://empty##fypage\";\n        return \"海阔视界￥home_rule￥\" + JSON.stringify(rule)\n            .replace(\"{RULES}\", rules)\n            .replace(rule1, r1);\n    }, MY_RULE.title),\n    col_type: \"text_2\",\n    desc: \"\",\n    pic_url: \"\"\n});\n\nd.push({\n    title: \"来个示例\",\n    url: $(\"#noLoading#\").lazyRule(() => {\n        putMyVar(\"rule\", \"AppMovie@https://www.appmovie.cc/index.php/vod/search.html?wd=%E4%BD%A0%E6%98%AF%E6%88%91%E7%9A%84&submit=\");\n        putMyVar(\"r1\", \"AI测试\");\n        refreshPage();\n        return \"hiker://empty\"\n    }),\n    col_type: \"text_2\",\n    desc: \"\",\n    pic_url: \"\"\n});\n\nd.push({\n    title: \"以下为测试区域\",\n    url: \"\",\n    col_type: \"text_center_1\",\n    desc: \"\",\n    pic_url: \"\"\n});\n\n\nd.push({\n    title: \"\",\n    url: \"\",\n    col_type: \"input\",\n    desc: \"请输入网站搜索地址，要带搜索词\",\n    pic_url: \"\",\n    extra: {\n        titleVisible: false,\n        onChange: $.toString(() => {\n            putMyVar(\"r\", input);\n        }),\n        defaultValue: getMyVar(\"r\", \"\")\n    }\n});\n\n\nd.push({\n    title: \"搜索测试\",\n    url: $.toString(() => {\n        let r = getMyVar(\"r\", \"\");\n        if (r == \"\") {\n            return \"toast://请先在上面输入网站搜索地址\";\n        }\n        putMyVar(\"s\", input);\n        r = decodeURIComponent(r);\n        let surl = r.replace(new RegExp(\"[\\u4e00-\\u9fa5]+\", \"g\"), \"**\");\n        return \"hiker://page/s?key=\" + input + \"&u=\" + base64Encode(surl);\n    }),\n    col_type: \"input\",\n    desc: \"请输入关键词测试\",\n    pic_url: \"\",\n    extra: {\n        defaultValue: getMyVar(\"s\", \"\")\n    }\n});\n\nd.push({\n    title: \"来个示例\",\n    url: $(\"#noLoading#\").lazyRule(() => {\n        putMyVar(\"r\", \"https://www.appmovie.cc/index.php/vod/search.html?wd=%E4%BD%A0%E6%98%AF%E6%88%91%E7%9A%84&submit=\");\n        putMyVar(\"s\", \"龙之家族\");\n        refreshPage();\n        return \"hiker://empty\"\n    }),\n    col_type: \"text_center_1\",\n    desc: \"\",\n    pic_url: \"\"\n});\n\n\n\nsetResult(d);","searchFind":"js:\nvar d = [];\nlet key = MY_URL.split(\"##\")[1];\nd.push({\n    title: \"点我开始聚合搜索\" + key,\n    url: \"hiker://page/soup?p=fypage\",\n    extra: {\n        pageTitle: \"搜索\" + key,\n        key: key\n    }\n});\n\nsetResult(d);","search_url":"hiker://empty##**","group":"⑧工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"二级解析\",\"path\":\"p\",\"rule\":\"js:\\nvar d = [];\\nlet url = base64Decode(getParam(\\\"u\\\"));\\nd.push({\\n    title: \\\"\\\",\\n    url: url,\\n    col_type: \\\"x5_webview_single\\\",\\n    desc: \\\"float&&100%\\\",\\n    pic_url: \\\"\\\",\\n    extra: {\\n        canBack: true\\n    }\\n});\\nsetResult(d);\"},{\"col_type\":\"text_1\",\"name\":\"搜索测试\",\"path\":\"s\",\"rule\":\"js:\\nlet url = base64Decode(getParam(\\\"u\\\"));\\nlog(url);\\nlet key = getParam(\\\"key\\\");\\nlet sp = $.require(\\\"hiker://page/sp\\\");\\nsetResult(sp(url, key, \\\"搜索测试\\\"));\"},{\"col_type\":\"movie_3\",\"name\":\"聚合搜索\",\"path\":\"pro\",\"rule\":\"var d = [];\\nif (MY_PAGE == 1) {\\n    d.push({\\n        title: \\\"搜索\\\",\\n        url: $.toString(() => {\\n            refreshPage();\\n            return \\\"hiker://empty\\\";\\n        }),\\n        col_type: \\\"input\\\",\\n        desc: \\\"请输入关键词，尽量少字不要多字\\\",\\n        pic_url: \\\"\\\",\\n        extra: {\\n            defaultValue: getMyVar(\\\"sou\\\", \\\"\\\"),\\n            onChange: $.toString(() => {\\n                putMyVar(\\\"sou\\\", input);\\n            })\\n        }\\n    });\\n    addListener(\\\"onClose\\\", $.toString(() => {\\n        clearMyVar(\\\"sou\\\");\\n        clearMyVar(\\\"so\\\");\\n    }));\\n}\\n\\nlet s = getMyVar(\\\"sou\\\", \\\"\\\");\\nlet r = \\\"\\\";\\nif (s != \\\"\\\") {\\n    let p = MY_PAGE;\\n    let {\\n        load\\n    } = $.require(\\\"hiker://page/data\\\");\\n    let {\\n        wrap\\n    } = $.require(\\\"hiker://page/tool\\\");\\n    let data = load(p, r != \\\"\\\" ? r : null);\\n\\n    let pageid = MY_RULE.title + \\\"-page\\\" + p;\\n    if (data.length > 0) {\\n        d.push({\\n            title: \\\"加载第\\\" + p + \\\"页中，进度：1/\\\" + data.length,\\n            url: \\\"\\\",\\n            col_type: \\\"text_center_1\\\",\\n            desc: \\\"\\\",\\n            pic_url: \\\"\\\",\\n            extra: {\\n                id: pageid\\n            }\\n        });\\n    }\\n    setResult(d);\\n    log(data.length);\\n    if (data.length > 0) {\\n        //多线程加载        \\n        let realPage = \\\"\\\" == r ? 1 : p;\\n        let tasks = data.map(it => {\\n            return {\\n                func: function(rule) {\\n                    return rule.find(s, realPage);\\n                },\\n                param: it,\\n                id: \\\"rule@\\\" + it.name\\n            }\\n        });\\n\\n        batchExecute(tasks, {\\n            func: function(param, id, error, result) {\\n                //log(\\\"listener: \\\" + (result || []).length)\\n                param.i = param.i + 1;\\n                if (result) {\\n                    try {\\n                        for (let it of result) {\\n                            param.j = param.j + 1;\\n                            addItemBefore(pageid, {\\n                                title: wrap(it.title, s),\\n                                desc: it.desc,\\n                                url: it.url,\\n                                pic_url: it.pic_url,\\n                                col_type: it.pic_url ? 'movie_1_vertical_pic' : \\\"text_1\\\",\\n                                extra: it.extra\\n                            })\\n                        }\\n                    } catch (e) {}\\n\\n                }\\n                if (param.i >= param.all) {\\n                    deleteItem(pageid)\\n                } else {\\n                    updateItem({\\n                        title: \\\"加载第\\\" + MY_PAGE + \\\"页中，进度：\\\" + (param.i + 1) + \\\"/\\\" + param.all,\\n                        url: \\\"\\\",\\n                        col_type: \\\"text_center_1\\\",\\n                        desc: \\\"\\\",\\n                        pic_url: \\\"\\\",\\n                        extra: {\\n                            id: pageid\\n                        }\\n                    })\\n                }\\n            },\\n            param: {\\n                all: data.length,\\n                i: 0,\\n                j: -1\\n            }\\n        })\\n    }\\n} else {\\n    let {\\n        load\\n    } = $.require(\\\"hiker://page/data\\\");\\n    let data = load(-1, null);\\n    if (data.length > 0) {       \\n        $.require(\\\"hiker://page/manage\\\")(d, data.map(it => it.name));\\n        for (let it of data) {\\n            d.push({\\n                title: it.name,\\n                url: \\\"select://\\\" + JSON.stringify({\\n                    title: \\\"请选择操作\\\",\\n                    col: 1,\\n                    options: [\\\"访问首页\\\", \\\"搜索此站\\\"],\\n                    js: $.toString((url) => {\\n                        if (input == \\\"访问首页\\\") {\\n                            MY_URL = url;\\n                            return \\\"x5://\\\" + getHome(url)\\n                        } else {\\n                            return \\\"hiker://page/singles\\\"\\n                        }\\n                    }, it.url)\\n                }),\\n                col_type: \\\"flex_button\\\",\\n                desc: \\\"\\\",\\n                pic_url: \\\"\\\",\\n                extra: {\\n                    RULE: {\\n                        name: it.name,\\n                        url: it.url\\n                    },\\n                    longClick: [{\\n                        title: \\\"禁用\\\" + it.name,\\n                        js: $.toString((name) => {\\n                            confirm({\\n                                title: \\\"温馨提示\\\",\\n                                content: \\\"确认删除禁用\\\" + name + \\\"吗？\\\",\\n                                confirm: $.toString((name, rule) => {\\n                                    let {\\n                                        removeRule\\n                                    } = $.require(\\\"hiker://page/data?rule=\\\" + rule);\\n                                    removeRule(name);\\n                                    refreshPage();\\n                                    return \\\"toast://OK\\\";\\n                                }, name, MY_RULE.title)\\n                            })\\n                            return \\\"hiker://empty\\\";\\n                        }, it.name)\\n                    }, {\\n                        title: \\\"访问首页\\\",\\n                        js: \\\"'x5://\\\" + getHome(it.url) + \\\"'\\\"\\n                    }, {\\n                        title: \\\"搜索此源\\\",\\n                        js: \\\"'hiker://page/singles'\\\"\\n                    }]\\n                }\\n            });\\n        }       \\n    }\\n}\\n\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"数据\",\"path\":\"data\",\"rule\":\"//并发规则数\\nlet size0 = 10;\\nlet rulesText0 = `{RULES}`;\\nlet rulesText = getItem(\\\"rules\\\", rulesText0);\\nlet sp = $.require(\\\"hiker://page/sp\\\");\\nrules = rulesText.split(\\\"\\\\n\\\")\\n    .filter(it => it.includes(\\\"@\\\"))\\n    .map(rule => {\\n        let s = rule.split(\\\"@\\\");\\n        return {\\n            name: s[0],\\n            find: function(key, page) {\\n                return sp(s[1], key, s[0]);\\n            },\\n            url: s[1]\\n        };\\n    });\\n\\nfunction load(page, rule) {\\n    let size = page <= 0 ? rules.length : size0;\\n    page = page <= 0 ? 1 : page;\\n    if (!page && !rule) {\\n        return rules.map(it => it.name);\\n    }\\n    if (rule != null) {\\n        if (page != null && page > 1) {\\n            return rules.filter(i => i.name == rule && i.page);\\n        }\\n        return rules.filter(i => i.name == rule);\\n    }\\n    let start = (page - 1) * size;\\n    if (rules.length < start + 1) {\\n        return [];\\n    }\\n    let len = size;\\n    if (rules.length < page * size) {\\n        len = rules.length - start\\n    }\\n    return rules.slice(start, start + len);\\n}\\n\\nfunction addRule(name, surl) {\\n    setItem(\\\"rules\\\", rulesText + \\\"\\\\n\\\" + name + \\\"@\\\" + surl);\\n}\\n\\nfunction removeRule(name) {\\n    let newT = rulesText.split(\\\"\\\\n\\\")\\n        .filter(it => it.indexOf(name + \\\"@\\\") < 0)\\n        .join(\\\"\\\\n\\\");\\n    setItem(\\\"rules\\\", newT);\\n}\\n\\n$.exports = {\\n    load: load,\\n    addRule: addRule,\\n    removeRule: removeRule\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"搜索解析\",\"path\":\"sp\",\"rule\":\"function search(url, key, rule) {\\n    let d = [];\\n    let html = \\\"\\\";\\n    if (url.includes(\\\"**\\\")) {\\n        //get请求\\n        let old = url;\\n        url = url.replace(\\\"**\\\", key);\\n        html = request(url);\\n        //自动过验证码和频繁访问限制\\n        let {\\n            check, test\\n        } = $.require(\\\"hiker://page/yzm\\\");\\n        if (check(url, html, d)) {\\n            log(\\\"重试了\\\");\\n            html = request(url, {\\n                headers: {\\n                    \\\"Referer\\\": url\\n                }\\n            });           \\n        }         \\n        test(url, html, d, old, key, rule);\\n    } else {\\n        //自动识别post请求\\n        html = request(url);\\n        let form = pdfh(html, \\\"body&&form&&Html\\\");\\n        let action = pd(html, \\\"form&&action\\\", url);\\n        let inputs = pdfa(html, \\\"body&&form&&input\\\");\\n        let body = {};\\n        for (let it of inputs) {\\n            let name = pdfh(it, \\\"input&&name\\\");\\n            if (name && name != \\\"\\\") {\\n                let value = pdfh(it, \\\"input&&value\\\");\\n                body[name] = value || key;\\n            }\\n        }\\n        html = post(action, {\\n            body: body\\n        });\\n    }\\n\\n    let alist = pdfa(html, \\\"body&&a\\\");\\n    let arr = alist.map(it => {\\n        let t = pdfh(it, \\\"a&&Text\\\");\\n        let t2 = pdfh(it, \\\"a&&title\\\");\\n        return {\\n            //html: it,\\n            text: t2 && t2.includes(key) ? t2 : t,\\n            href: pd(it, \\\"a&&href\\\", url)\\n        }\\n    });\\n\\n    function isResult(it) {\\n        it = it.text || \\\"\\\";\\n        if (it == \\\"\\\" || it.match(/搜索|结果/)) {\\n            return false\\n        }\\n        return it.toLowerCase().includes(key);\\n    }\\n    key = key.toLowerCase();\\n    for (let i = 0; i < arr.length; i++) {\\n        let it = arr[i];\\n        let t = it.text;\\n        if (!it.href || it.href == \\\"\\\") {\\n            continue;\\n        }\\n        if (isResult(it)) {\\n            d.push({\\n                title: t,\\n                url: \\\"hiker://page/p?u=\\\" + base64Encode(it.href),\\n                col_type: \\\"text_1\\\",\\n                desc: \\\"““””<font color=#f13b66a>\\\" + rule + \\\"</font>\\\"\\n            });\\n        }\\n    }\\n    return d;\\n}\\n$.exports = search;\"},{\"col_type\":\"movie_3\",\"name\":\"增删\",\"path\":\"manage\",\"rule\":\"$.exports = function(d, names) {\\n    d.push({\\n        title: \\\"AI技术\\\",\\n        url: \\\"confirm://基于AI识片自动分析源码技术，代码完全开源，数据来源于原网站，软件和规则不提供任何内容.js:''\\\",\\n        col_type: \\\"flex_button\\\"\\n    });\\n    d.push({\\n        title: \\\" + \\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule((rr) => {\\n            deleteItemByCls(\\\"aiadd\\\");\\n            addItemAfter(rr + \\\"aisdel\\\", [{\\n                    title: \\\"\\\",\\n                    desc: \\\"请输入网站名称\\\",\\n                    col_type: \\\"input\\\",\\n                    extra: {\\n                        titleVisible: false,\\n                        onChange: \\\"putMyVar('name', input)\\\",\\n                        cls: \\\"aiadd\\\"\\n                    }\\n                },\\n                {\\n                    title: \\\"\\\",\\n                    desc: \\\"请输入网站搜索地址\\\",\\n                    col_type: \\\"input\\\",\\n                    extra: {\\n                        titleVisible: false,\\n                        onChange: \\\"putMyVar('surl', input)\\\",\\n                        cls: \\\"aiadd\\\"\\n                    }\\n                },\\n                {\\n                    title: \\\"提交保存\\\",\\n                    col_type: \\\"text_center_1\\\",\\n                    url: $(\\\"#noLoading#\\\").lazyRule(() => {\\n                        let surl = getMyVar(\\\"surl\\\", \\\"\\\");\\n                        let name = getMyVar(\\\"name\\\", \\\"\\\");\\n                        if (surl == \\\"\\\" || name == \\\"\\\") {\\n                            return \\\"toast://请输入完整内容\\\"\\n                        }\\n                        let r = decodeURIComponent(surl);\\n                        r = r.replace(new RegExp(\\\"[\\\\u4e00-\\\\u9fa5]+\\\", \\\"g\\\"), \\\"**\\\");\\n                        let {\\n                            addRule\\n                        } = $.require(\\\"hiker://page/data\\\");\\n                        addRule(name, r);\\n                        refreshPage();\\n                        return \\\"toast://已保存\\\";\\n                    }),\\n                    extra: {\\n                        cls: \\\"aiadd\\\"\\n                    }\\n                }\\n            ]);\\n            return \\\"hiker://empty\\\"\\n        }, MY_RULE.title),\\n        col_type: \\\"flex_button\\\",\\n    });\\n    d.push({\\n        title: \\\" - \\\",\\n        url: \\\"select://\\\" + JSON.stringify({\\n            options: names,\\n            title: \\\"请选择要删除的站点\\\",\\n            js: $.toString(() => {\\n                let {\\n                    removeRule\\n                } = $.require(\\\"hiker://page/data\\\");\\n                removeRule(input);\\n                refreshPage();\\n                return \\\"toast://OK\\\";\\n            })\\n        }),\\n        col_type: \\\"flex_button\\\",\\n        extra: {\\n            id: MY_RULE.title + \\\"aisdel\\\"\\n        }\\n    });\\n    d.push({\\n        col_type: \\\"blank_block\\\"\\n    });\\n\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"验证码\",\"path\":\"yzm\",\"rule\":\"function check(url, html, d) {\\n    let reload = false;\\n    return reload;\\n}\\n\\nfunction test(url, html, d, old, key, rule) {\\n    if (/5秒|频繁/.test(html)) {\\n        d.push({\\n            title: '搜索需间隔5秒，点击重新加载',\\n            col_type: \\\"text_1\\\",\\n            desc: \\\"““””<font color=#f13b66a>\\\" + rule + \\\"</font>\\\",\\n            url: $().lazyRule((url, old, key, rule) => {\\n                let sp = $.require(\\\"hiker://page/sp\\\");\\n                let d = sp(old, key, rule);\\n                let {\\n                    wrap\\n                } = $.require(\\\"hiker://page/tool\\\");\\n                for (let it of d) {\\n                    it.title = wrap(it.title, key);\\n                }\\n                addItemAfter(url, d);\\n                deleteItem(url);\\n                return \\\"toast://OK\\\";\\n            }, url, old, key, rule),\\n            extra: {\\n                id: url\\n            }\\n        });\\n    }\\n}\\n\\n$.exports = {\\n    check: check,\\n    test: test\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"工具\",\"path\":\"tool\",\"rule\":\"function wrap(text, s) {\\n    return text.includes(\\\"““””\\\") ? text : \\\"““””\\\" + text.replace(new RegExp(\\\"<em>|</em>\\\", \\\"g\\\"), \\\"\\\").replace(new RegExp(s, \\\"g\\\"), \\\"<strong><span style=\\\\\\\"color: #1E90FF\\\\\\\">\\\" + s + \\\"</span></strong>\\\")\\n}\\n$.exports = {\\n    wrap: wrap\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"单搜\",\"path\":\"singles\",\"rule\":\"js:\\nvar d = [];\\nd.push({\\n    title: \\\"搜索\\\",\\n    url: $.toString(() => {\\n        putMyVar(\\\"so\\\", input);\\n        refreshPage();\\n    }),\\n    col_type: \\\"input\\\",\\n    desc: \\\"请输入关键词，尽量少字不要多字\\\",\\n    pic_url: \\\"\\\",\\n    extra: {\\n        defaultValue: getMyVar(\\\"so\\\", \\\"\\\")\\n    }\\n});\\nlet s = getMyVar(\\\"so\\\", \\\"\\\");\\nlet r = \\\"\\\";\\nif (s != \\\"\\\") {\\n    let p = MY_PAGE;\\n    let {\\n        load\\n    } = $.require(\\\"hiker://page/data\\\");\\n    let {\\n        wrap\\n    } = $.require(\\\"hiker://page/tool\\\");\\n    let data = load(p, MY_PARAMS.RULE.name);\\n    let arr = data[0].find(s, p);\\n    for (let it of arr) {\\n        it.title = wrap(it.title, s)\\n        d.push(it);\\n    }\\n}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"搜索页面\",\"path\":\"soup\",\"rule\":\"js:\\nvar d = [];\\nif (MY_PARAMS.key && getMyVar(\\\"use\\\", \\\"\\\") == \\\"\\\") {\\n    putMyVar(\\\"sou\\\", MY_PARAMS.key);\\n    putMyVar(\\\"use\\\", \\\"1\\\");\\n    addListener(\\\"onClose\\\", $.toString(() => {\\n        clearMyVar(\\\"use\\\");\\n    }));\\n}\\n$.require('hiker://page/pro')\"}]","proxy":"","icon":""}
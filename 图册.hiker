{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"函数工具箱","path":"api","rule":"// 一、工具类封装 \n// 获取当前时间\n$.exports.getCurrentDate = function (format) {\n    var now = new Date();\n    var year = now.getFullYear(); //得到年份\n    var month = now.getMonth(); //得到月份\n    var date = now.getDate(); //得到日期\n    var day = now.getDay(); //得到周几\n    var hour = now.getHours(); //得到小时\n    var minu = now.getMinutes(); //得到分钟\n    var sec = now.getSeconds(); //得到秒\n    month = month + 1;\n    if (month < 10) month = \"0\" + month;\n    if (date < 10) date = \"0\" + date;\n    if (hour < 10) hour = \"0\" + hour;\n    if (minu < 10) minu = \"0\" + minu;\n    if (sec < 10) sec = \"0\" + sec;\n    var time = \"\";\n    //精确到天\n    if (format == 1) {\n        time = year + \"年\" + month + \"月\" + date + \"日\";\n    }\n    //精确到分\n    else if (format == 2) {\n        time = year + \"-\" + month + \"-\" + date + \" \" + hour + \":\" + minu + \":\" + sec;\n    }\n    return time;\n}\n// 注册重写Array对象的indexOf和remove方法\n$.exports.overwriteArray = function () {\n    Array.prototype.indexOf = function (val) {\n        for (var i = 0; i < this.length; i++) {\n            if (this[i].link == val) return i;\n        }\n        return -1;\n    };\n    Array.prototype.remove = function (val) {\n        var index = this.indexOf(val);\n        if (index > -1) {\n            this.splice(index, 1);\n        }\n    };\n}\n\n\n// 二、功能类函数封装\n// 预处理\n$.exports.pretreatment = function () {\n    if (fileExist('hiker://files/cache/PhotoAlbum_temp.json')) {\n        saveFile('hiker://files/cache/PhotoAlbum_temp.json', '你想干嘛！');\n    }\n    if (!fileExist('hiker://files/rules/cy/PhotoAlbum.json')) {\n        date = $.require(\"hiker://page/api?rule=图册\").getCurrentDate(1);\n        PhotoAlbum = {\n            \"相册\": {\n                \"gif壁纸\": [{\n                    link: 'https://p0.meituan.net/csc/d797e865aaa4334699479c2fef6cab181597933.gif',\n                    date: date,\n                    title: '熊猫吃竹子',\n                    group: 'gif壁纸'\n                }, {\n                    link: 'https://alifei03.cfp.cn/creative/vcg/nowater800/new/VCG211293929470.gif',\n                    date: date,\n                    title: '摇尾狗',\n                    group: 'gif壁纸'\n                }, {\n                    link: 'https://tenfei04.cfp.cn/creative/vcg/nowarter800/new/VCG211178908145.gif',\n                    date: date,\n                    title: '荡秋千',\n                    group: 'gif壁纸'\n                }, {\n                    link: 'https://tenfei03.cfp.cn/creative/vcg/nowarter800/new/VCG211229245788.gif',\n                    date: date,\n                    title: '夜间动图',\n                    group: 'gif壁纸'\n                }, {\n                    link: 'https://alifei01.cfp.cn/creative/vcg/nowarter800/new/VCG211223467674.gif',\n                    date: date,\n                    title: '夜月',\n                    group: 'gif壁纸'\n                }, {\n                    link: 'https://tenfei04.cfp.cn/creative/vcg/nowarter800/new/VCG211151553894.gif',\n                    date: date,\n                    title: '注意力',\n                    group: 'gif壁纸'\n                }, {\n                    link: 'https://alifei04.cfp.cn/creative/vcg/nowarter800/new/VCG211166346104.gif',\n                    date: date,\n                    title: '夜鸦',\n                    group: 'gif壁纸'\n                }, {\n                    link: 'https://tenfei02.cfp.cn/creative/vcg/nowarter800/new/VCG211151545477.gif',\n                    date: date,\n                    title: '江河流动',\n                    group: 'gif壁纸'\n                }, {\n                    link: 'https://alifei02.cfp.cn/creative/vcg/nowarter800/new/VCG211151550604.gif',\n                    date: date,\n                    title: '海滩阅读',\n                    group: 'gif壁纸'\n                }, {\n                    link: 'https://alifei02.cfp.cn/creative/vcg/nowarter800/new/VCG211151555608.gif',\n                    date: date,\n                    title: '打水漂',\n                    group: 'gif壁纸'\n                }, {\n                    link: 'https://tenfei05.cfp.cn/creative/vcg/nowarter800/new/VCG211166359866.gif',\n                    title: \"\",\n                    date: date,\n                    title: '海滩白鹭',\n                    group: 'gif壁纸'\n                }, {\n                    link: 'https://tenfei03.cfp.cn/creative/vcg/nowarter800/new/VCG211166304561.gif',\n                    title: \"\",\n                    date: date,\n                    title: '招手蝴蝶-动物友谊',\n                    group: 'gif壁纸'\n                }, {\n                    link: 'https://alifei04.cfp.cn/creative/vcg/nowater800/new/VCG211370485521.gif',\n                    date: date,\n                    title: '区块链-科技',\n                    group: 'gif壁纸'\n                }, {\n                    link: 'https://alifei04.cfp.cn/creative/vcg/nowater800/new/VCG211370483714.gif',\n                    date: date,\n                    title: '魔方-科技',\n                    group: 'gif壁纸'\n                }, {\n                    link: 'https://tenfei02.cfp.cn/creative/vcg/nowater800/new/VCG211366094791.gif',\n                    date: date,\n                    title: '科技感十足',\n                    group: 'gif壁纸'\n                }, {\n                    link: 'https://tenfei01.cfp.cn/creative/vcg/nowater800/new/VCG211345500353.gif',\n                    date: date,\n                    title: '辅导功课',\n                    group: 'gif壁纸'\n                }]\n            },\n            \"回收站\": [],\n            \"keyMap\": {},\n            \"isSecret\": 'yes',\n            \"singleMax\": 30,\n            \"showType\": 'pic_2',\n            \"user_password\": ''\n        };\n        saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n    }\n}\n// 检索\n$.exports.search = function () {\n    if (input == '') {\n        return 'toast://检索关键字不能为空'\n    } else {\n        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n        if (PhotoAlbum.isSecret == 'yes') {\n            if (PhotoAlbum.user_password == '') {\n                return $('', '请设置用户密码(请牢记)').input(() => {\n                    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                    PhotoAlbum.user_password = base64Encode(base64Encode(input));\n                    saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                })\n            } else {\n                return $('', '请输入密码').input(() => {\n                    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                    if (input == base64Decode(base64Decode(PhotoAlbum.user_password))) {\n                        putMyVar('currentPage', 'search_res');\n                        refreshPage(true);\n                        return 'hiker://empty';\n                    } else {\n                        return 'toast://密码错误！'\n                    }\n                })\n            }\n        } else {\n            putMyVar('currentPage', 'search_res');\n            refreshPage(true);\n            return 'hiker://empty';\n        }\n    }\n}\n// 切换分组\n$.exports.SwitchGroup = function (item) {\n    // 监听刷新事件没效就手动触发吧\n    clearMyVar('selectArray');\n    clearMyVar('selectNum');\n    clearMyVar('selectGroup');\n    clearMyVar('currentPage');\n    clearMyVar('isOpen_🗑️');\n    clearMyVar('addSwitch');\n    // 页码处理\n    clearMyVar('thePageNum');\n    putMyVar('lastPage', '1');\n    // clearMyVar('editor_mode');不要清除编辑模式记录\n    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n    for (i in PhotoAlbum.相册) {\n        clearMyVar('isOpen_' + i);\n    }\n    // 直接清除全部最大可能的index\n    showImg = [];\n    keyArray = [];\n    for (i in PhotoAlbum.keyMap) {\n        keyArray.push(i);\n    }\n    for (group in PhotoAlbum.相册) {\n        if (!keyArray.includes(group)) {\n            showImg = showImg.concat(PhotoAlbum.相册[group]);\n        }\n    }\n    maxNum = showImg.length;\n    for (let index = 1; index <= maxNum; index++) {\n        clearMyVar('isChoose_' + index);\n    }\n    // log('清除index的数量:' + maxNum);\n    putMyVar(\"Select_group\", item);\n    refreshPage();\n    return 'hiker://empty'\n}\n// 分组更名\n$.exports.reGroupName = function (item) {\n    groupFuns = ['全部', '🗑️', '➕', '➖'];\n    if (groupFuns.includes(item)) {\n        return 'toast://不能操作不存在的相册！'\n    }\n    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n    if (PhotoAlbum.isSecret == 'yes') {\n        keyArray = [];\n        for (i in PhotoAlbum.keyMap) {\n            keyArray.push(i);\n        }\n        if (keyArray.includes(item)) {\n            return $('', item + '图册|设有密码').input((group) => {\n                PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                keyMap = PhotoAlbum.keyMap;\n                password = base64Decode(base64Decode(keyMap[group]));\n                if (input == password) {\n                    return $('', '相册重命名').input((group) => {\n                        groupFuns = ['全部', '🗑️', '➕', '➖'];\n                        if (groupFuns.includes(input)) {\n                            return 'toast://相册名不能是关键字！';\n                        }\n                        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                        // 日志备份\n                        saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                        // 数据转移_同时完成分组信息的修改_并注意相册合并\n                        if (PhotoAlbum.相册[input] == undefined) {\n                            PhotoAlbum.相册[input] = [];\n                        }\n                        PhotoAlbum.相册[input] = PhotoAlbum.相册[group].map((item) => {\n                            item.group = input;\n                            return item;\n                        }).concat(PhotoAlbum.相册[input]);\n                        PhotoAlbum.keyMap[input] = PhotoAlbum.keyMap[group];\n                        // 删除原相册数据\n                        delete PhotoAlbum.相册[group];\n                        delete PhotoAlbum.keyMap[group];\n                        saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                        clearMyVar('selectNum');\n                        clearMyVar('selectArray');\n                        for (var group in PhotoAlbum.相册) {\n                            clearMyVar('isChoose_' + group);\n                        }\n                        putMyVar('Select_group', input);\n                        refreshPage(true);\n                        return \"toast://该加密相册已改名~\";\n                    }, group)\n                } else {\n                    return 'toast://密码错误！'\n                }\n            }, item)\n        } else {\n            return $('', '相册重命名').input((group) => {\n                groupFuns = ['全部', '🗑️', '➕', '➖'];\n                if (groupFuns.includes(input)) {\n                    return 'toast://相册名不能是关键字！';\n                }\n                PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                // 日志备份\n                saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                // 数据转移_同时完成分组信息的修改_并注意相册合并\n                if (PhotoAlbum.相册[input] == undefined) {\n                    PhotoAlbum.相册[input] = [];\n                }\n                PhotoAlbum.相册[input] = PhotoAlbum.相册[group].map((item) => {\n                    item.group = input;\n                    return item;\n                }).concat(PhotoAlbum.相册[input]);\n                PhotoAlbum.keyMap[input] = PhotoAlbum.keyMap[group];\n                // 删除原相册数据\n                delete PhotoAlbum.相册[group];\n                delete PhotoAlbum.keyMap[group];\n                saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                clearMyVar('selectNum');\n                clearMyVar('selectArray');\n                for (i in PhotoAlbum.相册) {\n                    clearMyVar('isChoose_' + i);\n                }\n                putMyVar('Select_group', input);\n                refreshPage(true);\n                return \"toast://该相册已改名~\";\n            }, item)\n        }\n    } else {\n        return $('', '相册重命名').input((group) => {\n            groupFuns = ['全部', '🗑️', '➕', '➖'];\n            if (groupFuns.includes(input)) {\n                return 'toast://相册名不能是关键字！';\n            }\n            PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n            // 日志备份\n            saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n            // 数据转移_同时完成分组信息的修改_并注意相册合并\n            if (PhotoAlbum.相册[input] == undefined) {\n                PhotoAlbum.相册[input] = [];\n            }\n            PhotoAlbum.相册[input] = PhotoAlbum.相册[group].map((item) => {\n                item.group = input;\n                return item;\n            }).concat(PhotoAlbum.相册[input]);\n            PhotoAlbum.keyMap[input] = PhotoAlbum.keyMap[group];\n            // 删除原相册数据\n            delete PhotoAlbum.相册[group];\n            delete PhotoAlbum.keyMap[group];\n            saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n            clearMyVar('selectNum');\n            clearMyVar('selectArray');\n            for (i in PhotoAlbum.相册) {\n                clearMyVar('isChoose_' + i);\n            }\n            putMyVar('Select_group', input);\n            refreshPage(true);\n            return \"toast://该相册已改名~\";\n        }, item)\n    }\n}\n// 删除分组\n$.exports.deleteGroup = function (item) {\n    groupFuns = ['全部', '🗑️', '➕', '➖'];\n    if (groupFuns.includes(item)) {\n        return 'toast://不能操作不存在的相册！'\n    }\n    return $('你确定要删除该相册吗？').confirm((item) => {\n        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n        if (PhotoAlbum.isSecret == 'yes') {\n            keyArray = [];\n            for (i in PhotoAlbum.keyMap) {\n                keyArray.push(i);\n            }\n            if (keyArray.includes(item)) {\n                return $('', item + '图册|设有密码').input((group) => {\n                    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                    keyMap = PhotoAlbum.keyMap;\n                    password = base64Decode(base64Decode(keyMap[group]));\n                    if (input == password) {\n                        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                        // 日志备份\n                        saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                        delete PhotoAlbum.相册[group];\n                        // 清除密钥对\n                        delete PhotoAlbum.keyMap[group];\n                        saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                        selectNum = getMyVar('selectNum', '0');\n                        clearMyVar('selectNum');\n                        clearMyVar('selectArray');\n                        putMyVar('Select_group', '全部');\n                        refreshPage(true);\n                        return \"toast://该加密相册已删除~\";\n                    } else {\n                        return 'toast://密码错误！'\n                    }\n                }, item);\n            } else {\n                // 日志备份\n                saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                // 放入回收站\n                date = $.require(\"hiker://page/api?rule=图册\").getCurrentDate(1);\n                PhotoAlbum.相册[item].forEach(item => {\n                    item.date = date;\n                });\n                PhotoAlbum.回收站 = PhotoAlbum.相册[item].concat(PhotoAlbum.回收站);\n                // 删除相册\n                delete PhotoAlbum.相册[item];\n                saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                putMyVar('Select_group', '全部');\n                refreshPage(true);\n                return \"toast://删除成功~\";\n            }\n        } else {\n            // 日志备份\n            saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n            // 放入回收站\n            date = $.require(\"hiker://page/api?rule=图册\").getCurrentDate(1);\n            PhotoAlbum.相册[item].forEach(item => {\n                item.date = date;\n            });\n            PhotoAlbum.回收站 = PhotoAlbum.相册[item].concat(PhotoAlbum.回收站);\n            // 删除相册\n            delete PhotoAlbum.相册[item];\n            saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n            putMyVar('Select_group', '全部');\n            refreshPage(true);\n            return \"toast://删除成功~\";\n        }\n    }, item)\n}\n// 导出IDM批文件\n$.exports.toIDM = function (item) {\n    groupFuns = ['全部', '🗑️', '➕', '➖'];\n    if (groupFuns.includes(item)) {\n        return 'toast://不能操作不存在的相册！'\n    }\n    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n    if (PhotoAlbum.isSecret == 'yes') {\n        keyArray = [];\n        for (i in PhotoAlbum.keyMap) {\n            keyArray.push(i);\n        }\n        if (keyArray.includes(item)) {\n            return $('', item + '图册|设有密码').input((group) => {\n                PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                keyMap = PhotoAlbum.keyMap;\n                password = base64Decode(base64Decode(keyMap[group]));\n                if (input == password) {\n                    var linkData = '';\n                    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                    PhotoAlbum.相册[group].forEach(item => {\n                        if (item.link.match(/#isVideo=true#/)) {\n                            link = item.link.split('#isVideo=true#')[0];\n                        } else {\n                            link = item.link;\n                        }\n                        linkData = linkData + link + '\\n';\n                    });\n                    saveFile('hiker://files/cache/PhotoAlbum_' + group + '.txt', linkData);\n                    return 'share://hiker://files/cache/PhotoAlbum_' + group + '.txt';\n                } else {\n                    return 'toast://密码错误！'\n                }\n            }, item);\n        } else {\n            var linkData = '';\n            PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n            PhotoAlbum.相册[item].forEach(item => {\n                if (item.link.match(/#isVideo=true#/)) {\n                    link = item.link.split('#isVideo=true#')[0];\n                } else {\n                    link = item.link;\n                }\n                linkData = linkData + link + '\\n';\n            });\n            saveFile('hiker://files/cache/PhotoAlbum_' + item + '.txt', linkData);\n            return 'share://hiker://files/cache/PhotoAlbum_' + item + '.txt';\n        }\n    } else {\n        var linkData = '';\n        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n        PhotoAlbum.相册[item].forEach(item => {\n            if (item.link.match(/#isVideo=true#/)) {\n                link = item.link.split('#isVideo=true#')[0];\n            } else {\n                link = item.link;\n            }\n            linkData = linkData + link + '\\n';\n        });\n        saveFile('hiker://files/cache/PhotoAlbum_' + item + '.txt', linkData);\n        return 'share://hiker://files/cache/PhotoAlbum_' + item + '.txt';\n    }\n}\n// 导出自定义批文件\n$.exports.toSelfFile = function (item) {\n    groupFuns = ['全部', '🗑️', '➕', '➖'];\n    if (groupFuns.includes(item)) {\n        return 'toast://不能操作不存在的相册！'\n    }\n    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n    if (PhotoAlbum.isSecret == 'yes') {\n        keyArray = [];\n        for (i in PhotoAlbum.keyMap) {\n            keyArray.push(i);\n        }\n        if (keyArray.includes(item)) {\n            return $('', item + '图册|设有密码').input((group) => {\n                PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                keyMap = PhotoAlbum.keyMap;\n                password = base64Decode(base64Decode(keyMap[group]));\n                if (input == password) {\n                    var linkData = '';\n                    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                    PhotoAlbum.相册[group].forEach(item => {\n                        if (item.link.match(/#isVideo=true#/)) {\n                            link = item.link.split('#isVideo=true#')[0];\n                        } else {\n                            link = item.link;\n                        }\n                        linkData = linkData + item.title + ',' + link + '\\n';\n                    });\n                    saveFile('hiker://files/cache/PhotoAlbum_' + group + '.txt', linkData);\n                    return 'share://hiker://files/cache/PhotoAlbum_' + group + '.txt';\n                } else {\n                    return 'toast://密码错误！'\n                }\n            }, item);\n        } else {\n            var linkData = '';\n            PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n            PhotoAlbum.相册[item].forEach(item => {\n                if (item.link.match(/#isVideo=true#/)) {\n                    link = item.link.split('#isVideo=true#')[0];\n                } else {\n                    link = item.link;\n                }\n                linkData = linkData + item.title + ',' + link + '\\n';\n            });\n            saveFile('hiker://files/cache/PhotoAlbum_' + item + '.txt', linkData);\n            return 'share://hiker://files/cache/PhotoAlbum_' + item + '.txt';\n        }\n    } else {\n        var linkData = '';\n        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n        PhotoAlbum.相册[item].forEach(item => {\n            if (item.link.match(/#isVideo=true#/)) {\n                link = item.link.split('#isVideo=true#')[0];\n            } else {\n                link = item.link;\n            }\n            linkData = linkData + item.title + ',' + link + '\\n';\n        });\n        saveFile('hiker://files/cache/PhotoAlbum_' + item + '.txt', linkData);\n        return 'share://hiker://files/cache/PhotoAlbum_' + item + '.txt';\n    }\n}\n// 分组长按事件-隐藏\n$.exports.groupFun = function (item) {\n    return [{\n        title: '更名', js: $.toString((item) => {\n            return $.require(\"hiker://page/api?rule=图册\").reGroupName(item)\n        }, item)\n    }, {\n        title: '删除', js: $.toString((item) => {\n            return $.require(\"hiker://page/api?rule=图册\").deleteGroup(item)\n        }, item)\n    }, {\n        title: 'IDM批文件', js: $.toString((item) => {\n            return $.require(\"hiker://page/api?rule=图册\").toIDM(item)\n        }, item)\n    }, {\n        title: '自定义批文件', js: $.toString((item) => {\n            return $.require(\"hiker://page/api?rule=图册\").toSelfFile(item)\n        }, item)\n    }];\n}\n// 概览/多选切换\n$.exports.SwitchMode = function (MY_PAGE_add) {\n    // 监听刷新事件没效就手动触发吧\n    clearMyVar('selectArray');\n    clearMyVar('selectNum');\n    clearMyVar('selectGroup');\n    clearMyVar('currentPage');\n    clearMyVar('isOpen_🗑️');\n    clearMyVar('addSwitch');\n    // clearMyVar('editor_mode');不要清除编辑模式记录\n    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n    for (i in PhotoAlbum.相册) {\n        clearMyVar('isOpen_' + i);\n    }\n    // 直接清除全部最大可能的index\n    showImg = [];\n    keyArray = [];\n    for (i in PhotoAlbum.keyMap) {\n        keyArray.push(i);\n    }\n    for (group in PhotoAlbum.相册) {\n        if (!keyArray.includes(group)) {\n            showImg = showImg.concat(PhotoAlbum.相册[group]);\n        }\n    }\n    maxNum = showImg.length;\n    for (let index = 1; index <= maxNum; index++) {\n        clearMyVar('isChoose_' + index);\n    }\n    // log('清除index的数量:' + maxNum);\n    if (getMyVar('showPage', '🖼︎概览') == '🖼︎概览') {\n        putMyVar('showPage', '☑️多选');\n    } else {\n        putMyVar('showPage', '🖼︎概览');\n    }\n    putMyVar('thePageNum', MY_PAGE_add);\n    putMyVar('lastPage', '1');\n    refreshPage(false);\n    return 'toast://切换成功';\n}\n// 呈现样式切换\n$.exports.switchShowType = function () {\n    return $(['pic_2', 'movie_2', 'pic_1', 'pic_1_full', 'card_pic_1', 'card_pic_2', 'movie_1', 'movie_1_left_pic', 'card_pic_3', 'movie_3', 'movie_3_marquee', 'pic_2_card', 'pic_3', 'pic_3_square', 'icon_2', 'icon_2_round', 'icon_round_4', 'avatar'], 3, '样式列表').select(() => {\n        if (getMyVar('showPage', '🖼︎概览') == '☑️多选') {\n            banList = ['icon_round_4', 'pic_1_full', 'card_pic_1', 'pic_2_card', 'pic_3', 'pic_3_square', 'icon_2', 'icon_2_round', 'icon_round_4', 'card_pic_3'];\n            if (banList.includes(input)) {\n                return 'toast://☑️多选下严禁切换成该样式~';\n            }\n        }\n        var PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n        PhotoAlbum.showType = input;\n        saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n        clearMyVar('addSwitch');\n        refreshPage(true);\n        return 'toast://切换成功~';\n    })\n}\n// 新增图片\n$.exports.addNewPic = function () {\n    if (getMyVar('addSwitch', 'fold') == 'fold') {\n        newArray = [{\n            desc: '请输入标题，一行一条',\n            col_type: 'input',\n            extra: {\n                titleVisible: false,\n                type: 'textarea',\n                height: -1,\n                highlight: true,\n                onChange: \"putMyVar('titleArray',input)\",\n                cls: 'addMorePhotos'\n            }\n        }, {\n            desc: '请输入链接，一行一条',\n            col_type: 'input',\n            extra: {\n                titleVisible: false,\n                type: 'textarea',\n                height: -1,\n                highlight: true,\n                onChange: \"putMyVar('linkArray',input)\",\n                cls: 'addMorePhotos'\n            }\n        }, {\n            title: '当前选中分组：' + getMyVar('selectGroup', '未分组'),\n            url: $('hiker://empty#noLoading#').lazyRule(() => {\n                PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                groupArray = [];\n                for (var group in PhotoAlbum.相册) {\n                    groupArray.push(group);\n                }\n                return $(groupArray, 3, '样式列表').select(() => {\n                    putMyVar('selectGroup', input)\n                    updateItem('group_btn', {\n                        title: '🎨当前选中分组：' + getMyVar('selectGroup', '未分组'),\n                    });\n                    return 'toast://切换成功~';\n                })\n            }),\n            col_type: 'text_1',\n            extra: {\n                id: 'group_btn',\n                cls: 'addMorePhotos'\n            }\n        }, {\n            title: '‘‘’’<big><span style=\"color:#6EB897\">添 加</span></big>',\n            url: $('#noLoading#').lazyRule(() => {\n                PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                // 依次是window、Unix/Linux、Mac的换行符（系统换行产生的不可见字符）\n                titleArray = getMyVar('titleArray', '[]').split(/\\r\\n|\\n|\\r/);\n                linkArray = getMyVar('linkArray', '[]').split(/\\r\\n|\\n|\\r/);\n                group = getMyVar('selectGroup', '未分组');\n                if (group == '未分组') {\n                    return 'toast://请先选择分组！'\n                } else {\n                    if (PhotoAlbum.isSecret == 'yes') {\n                        keyArray = [];\n                        for (i in PhotoAlbum.keyMap) {\n                            keyArray.push(i);\n                        }\n                        if (keyArray.includes(group)) {\n                            return $('', group + '图册|设有密码').input((group) => {\n                                PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                                keyMap = PhotoAlbum.keyMap;\n                                password = base64Decode(base64Decode(keyMap[group]));\n                                if (input == password) {\n                                    // 日志备份\n                                    saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                                    // 依次是window、Unix/Linux、Mac的换行符（系统换行产生的不可见字符）\n                                    titleArray = getMyVar('titleArray', '[]').split(/\\r\\n|\\n|\\r/);\n                                    linkArray = getMyVar('linkArray', '[]').split(/\\r\\n|\\n|\\r/);\n                                    date = $.require(\"hiker://page/api?rule=图册\").getCurrentDate(1);\n                                    dataLength = titleArray.length > linkArray.length ? titleArray.length : linkArray.length;\n                                    if (PhotoAlbum.相册[group] == undefined) {\n                                        PhotoAlbum.相册[group] = [];\n                                    }\n                                    for (let i = 0; i < dataLength; i++) {\n                                        title = i > titleArray.length - 1 ? '未命名' : (titleArray[i] == '' ? '未命名' : titleArray[i]);\n                                        link = i > linkArray.length - 1 ? '空链接' : (linkArray[i] == '' ? '空链接' : linkArray[i]);\n                                        PhotoAlbum.相册[group].unshift({\n                                            link: link,\n                                            date: date,\n                                            title: title,\n                                            group: group\n                                        });\n                                    }\n                                    saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                                    clearMyVar('addSwitch');\n                                    refreshPage(true);\n                                    return \"toast://图片添加成功~\";\n                                } else {\n                                    return 'toast://密码错误！'\n                                }\n                            }, group)\n                        } else {\n                            // 日志备份\n                            saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                            date = $.require(\"hiker://page/api?rule=图册\").getCurrentDate(1);\n                            dataLength = titleArray.length > linkArray.length ? titleArray.length : linkArray.length;\n                            if (PhotoAlbum.相册[group] == undefined) {\n                                PhotoAlbum.相册[group] = [];\n                            }\n                            for (let i = 0; i < dataLength; i++) {\n                                title = i > titleArray.length - 1 ? '未命名' : (titleArray[i] == '' ? '未命名' : titleArray[i]);\n                                link = i > linkArray.length - 1 ? '空链接' : (linkArray[i] == '' ? '空链接' : linkArray[i]);\n                                PhotoAlbum.相册[group].unshift({\n                                    link: link,\n                                    date: date,\n                                    title: title,\n                                    group: group\n                                });\n                            }\n                            saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                            clearMyVar('addSwitch');\n                            refreshPage(true);\n                            return \"toast://图片添加成功~\";\n                        }\n                    } else {\n                        // 日志备份\n                        saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                        date = $.require(\"hiker://page/api?rule=图册\").getCurrentDate(1);\n                        dataLength = titleArray.length > linkArray.length ? titleArray.length : linkArray.length;\n                        if (PhotoAlbum.相册[group] == undefined) {\n                            PhotoAlbum.相册[group] = [];\n                        }\n                        for (let i = 0; i < dataLength; i++) {\n                            title = i > titleArray.length - 1 ? '未命名' : (titleArray[i] == '' ? '未命名' : titleArray[i]);\n                            link = i > linkArray.length - 1 ? '空链接' : (linkArray[i] == '' ? '空链接' : linkArray[i]);\n                            PhotoAlbum.相册[group].unshift({\n                                link: link,\n                                date: date,\n                                title: title,\n                                group: group\n                            });\n                        }\n                        saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                        clearMyVar('addSwitch');\n                        refreshPage(true);\n                        return \"toast://图片添加成功~\";\n                    }\n                }\n            }),\n            col_type: 'text_center_1',\n            extra: {\n                cls: 'addMorePhotos'\n            }\n        }];\n        addItemAfter('addMoreBtn', newArray);\n        putMyVar('addSwitch', 'open');\n    } else {\n        deleteItemByCls('addMorePhotos');\n        putMyVar('addSwitch', 'fold');\n    }\n    return \"hiker://empty\";\n}\n// 新增长按-批量导入\n$.exports.long_click_addNewPic = function () {\n    return $('', '请输入链接').input(() => {\n        var link = input;\n        return $('', '请输入导入的分组名称').input((link) => {\n            PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n            if (PhotoAlbum.isSecret == 'yes') {\n                keyArray = [];\n                for (i in PhotoAlbum.keyMap) {\n                    keyArray.push(i);\n                }\n                if (keyArray.includes(input)) {\n                    return $('', input + '图册|设有密码').input((group, link) => {\n                        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                        keyMap = PhotoAlbum.keyMap;\n                        password = base64Decode(base64Decode(keyMap[group]));\n                        if (input == password) {\n                            // 日志备份\n                            saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                            data = request(link).split(/\\r\\n|\\n|\\r/);\n                            date = $.require(\"hiker://page/api?rule=图册\").getCurrentDate(1);\n                            if (PhotoAlbum.相册[group] == undefined) {\n                                PhotoAlbum.相册[group] = [];\n                            }\n                            data.forEach(item => {\n                                if (item == '') {\n                                    return;\n                                } else {\n                                    title = item.split(/,|，/)[0];\n                                    link = item.split(/,|，/)[1];\n                                }\n                                PhotoAlbum.相册[group].unshift({\n                                    link: link,\n                                    date: date,\n                                    title: title,\n                                    group: group\n                                });\n                            });\n                            saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                            refreshPage(true);\n                            return \"toast://图片导入成功~\";\n                        } else {\n                            return 'toast://密码错误！'\n                        }\n                    }, input, link)\n                } else {\n                    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                    // 日志备份\n                    saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                    data = request(link).split(/\\r\\n|\\n/);\n                    date = $.require(\"hiker://page/api?rule=图册\").getCurrentDate(1);\n                    if (PhotoAlbum.相册[input] == undefined) {\n                        PhotoAlbum.相册[input] = [];\n                    }\n                    data.forEach(item => {\n                        if (item == '') {\n                            return;\n                        } else {\n                            title = item.split(/,|，/)[0];\n                            link = item.split(/,|，/)[1];\n                        }\n                        PhotoAlbum.相册[input].unshift({\n                            link: link,\n                            date: date,\n                            title: title,\n                            group: input\n                        });\n                    });\n                    saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                    refreshPage(true);\n                    return \"toast://图片导入成功~\";\n                }\n            } else {\n                PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                // 日志备份\n                saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                data = request(link).split(/\\r\\n|\\n/);\n                date = $.require(\"hiker://page/api?rule=图册\").getCurrentDate(1);\n                if (PhotoAlbum.相册[input] == undefined) {\n                    PhotoAlbum.相册[input] = [];\n                }\n                data.forEach(item => {\n                    if (item == '') {\n                        return;\n                    } else {\n                        title = item.split(/,|，/)[0];\n                        link = item.split(/,|，/)[1];\n                    }\n                    PhotoAlbum.相册[input].unshift({\n                        link: link,\n                        date: date,\n                        title: title,\n                        group: input\n                    });\n                });\n                saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                refreshPage(true);\n                return \"toast://图片导入成功~\";\n            }\n        }, link)\n    })\n}\n//撤销上一次操作\n$.exports.revoke = function () {\n    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum_workBack.json'))));\n    saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n    refreshPage(false);\n    return 'toast://撤销成功';\n}\n// 分页按钮长按事件\n$.exports.long_click_pageBtn = function (MY_PAGE_add) {\n    if (getMyVar('showPage', '🖼︎概览') == '🖼︎概览') {\n        title = '进入多选批量模式操作';\n    } else {\n        title = '退出批量模式';\n    }\n    return [{\n        title: title, js: $.toString((MY_PAGE_add) => {\n            return $.require(\"hiker://page/api?rule=图册\").SwitchMode(MY_PAGE_add)\n        }, MY_PAGE_add)\n    }, {\n        title: '撤销上一次操作', js: $.toString(() => {\n            return $.require(\"hiker://page/api?rule=图册\").revoke()\n        })\n    }];\n}\n// 分页选择弹窗\n$.exports.refreshPageNum = function () {\n    // 加载图册配置\n    var PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n    Select_group = getMyVar('Select_group', '全部');\n    singleMax = PhotoAlbum.singleMax;\n    // 获取当前的全部showImg\n    if (getMyVar('currentPage', 'whole') == 'search_res') {\n        var keyWord = getMyVar('condition');\n        var reg = new RegExp(keyWord);\n        var showImg = [];\n        if (Select_group == '🗑️') {\n            res_source = '回收站';\n            PhotoAlbum.回收站.forEach(item => {\n                if (item.title.match(reg) && item.title != '未命名') {\n                    showImg.push(item);\n                }\n            });\n        } else {\n            res_source = '图库';\n            for (group in PhotoAlbum.相册) {\n                PhotoAlbum.相册[group].forEach(item => {\n                    if (item.title.match(reg) && item.title != '未命名') {\n                        showImg.push(item);\n                    }\n                });\n            }\n        }\n    } else if (Select_group == '全部') {\n        showImg = [];\n        keyArray = [];\n        for (i in PhotoAlbum.keyMap) {\n            keyArray.push(i);\n        }\n        for (group in PhotoAlbum.相册) {\n            if (!keyArray.includes(group)) {\n                showImg = showImg.concat(PhotoAlbum.相册[group]);\n            }\n        }\n    } else if (Select_group == '🗑️') {\n        var showImg = PhotoAlbum.回收站;\n    } else {\n        var showImg = PhotoAlbum.相册[Select_group];\n    }\n    // 开始分页工作\n    maxNum = showImg.length;\n    maxPage = Math.ceil(maxNum / singleMax);\n    thePageNum = getMyVar('thePageNum', 1 + '');\n    pageList = ['∷'];\n    if (maxNum <= singleMax) {\n        pageList.push('““””<font color=\"red\">1/1</font>');\n    } else {\n        for (let page = 1; page <= maxPage; page++) {\n            start = (page - 1) * singleMax + 1;\n            if (thePageNum == page) {\n                pageList.push('““””<font color=\"red\">' + page + '/' + start + '</font>');\n            } else {\n                pageList.push('““””<font color=\"gray\">' + page + '/' + start + '</font>');\n            }\n        }\n    }\n    return $(pageList, 3).select((singleMax) => {\n        if (input == '∷') {\n            return $(singleMax, '请设置单页最大数量').input(() => {\n                PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                PhotoAlbum.singleMax = parseInt(input);\n                saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                refreshPage(false);\n                return 'toast://limit设置生效'\n            })\n        }\n        thePageNum = input.split('/')[0].split('>')[1];\n        putMyVar('thePageNum', thePageNum);\n        putMyVar('lastPage', '1');\n        refreshPage(true);\n        return 'hiker://empty';\n    }, singleMax)\n}\n\n// 修改前面图片的数量统计(返回函数方法的可执行字符串)\n$.exports.refreshPicArrayNum = function () {\n    return $.toString(() => {\n        pic_len = showImg.length - videoArray.length;\n        d[getMyVar('indexOfArray')].title = '<b>图片</b>\\t\\t\\t本页<font color=' + color + '>' + pic_len + '</font>条数据\\t\\t\\tlimit:<font color=' + color + '>' + singleMax + '</font>\\t\\t\\t第<font color=\"red\">' + MY_PAGE_add + '</font>/<font color=' + color + '>' + maxPage + '</font>页';\n    })\n}\n\n\n// 恢复原位\n$.exports.reinstate = function (group, link) {\n    if (group && link) {\n        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n        // 日志备份\n        saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n        $.require(\"hiker://page/api?rule=图册\").overwriteArray();\n        i = PhotoAlbum.回收站.indexOf(link);\n        // 恢复到原分组\n        if (PhotoAlbum.相册[group] == undefined) {\n            PhotoAlbum.相册[group] = [];\n        }\n        PhotoAlbum.相册[group].unshift(PhotoAlbum.回收站[i]);\n        // 从回收站删除\n        PhotoAlbum.回收站.splice(i, 1);\n        saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n        refreshPage(false);\n        return 'toast://已从回收站恢复';\n    } else {\n        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n        $.require(\"hiker://page/api?rule=图册\").overwriteArray();\n        if (getMyVar('selectNum', '0') == '0') {\n            return 'toast://请先选择要恢复的图片！'\n        } else {\n            // 日志备份\n            saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n            selectArray = JSON.parse(getMyVar('selectArray'));\n            selectArray.forEach(item => {\n                group = item.group;\n                link = item.link;\n                // 恢复到原分组\n                if (PhotoAlbum.相册[group] == undefined) {\n                    PhotoAlbum.相册[group] = [];\n                }\n                PhotoAlbum.相册[group].unshift(item);\n                // 从回收站删除\n                // PhotoAlbum.回收站.pop(item);——服气，搞不明这样写为什么会出现各种bug...\n                i = PhotoAlbum.回收站.indexOf(link);\n                PhotoAlbum.回收站.splice(i, 1);\n            });\n            selectNum = getMyVar('selectNum', '0');\n            clearMyVar('selectNum');\n            clearMyVar('selectArray');\n            // 直接清除全部最大可能的index\n            showImg = [];\n            keyArray = [];\n            for (i in PhotoAlbum.keyMap) {\n                keyArray.push(i);\n            }\n            for (group in PhotoAlbum.相册) {\n                if (!keyArray.includes(group)) {\n                    showImg = showImg.concat(PhotoAlbum.相册[group]);\n                }\n            }\n            maxNum = showImg.length;\n            for (let index = 1; index <= maxNum; index++) {\n                clearMyVar('isChoose_' + index);\n            }\n            // log('清除index的数量:'+maxNum);\n            saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n            refreshPage(false);\n            return \"toast://共恢复\" + selectNum + '张图片';\n        }\n    }\n}\n\n// 删除(移动到回收站)\n$.exports.removeBin = function (group, link, title) {\n    if (group && link && title) {\n        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n        // 日志备份\n        saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n        $.require(\"hiker://page/api?rule=图册\").overwriteArray();\n        i = PhotoAlbum.相册[group].indexOf(link);\n        PhotoAlbum.相册[group].splice(i, 1);\n        // 放入回收站\n        date = $.require(\"hiker://page/api?rule=图册\").getCurrentDate(1);\n        PhotoAlbum.回收站.unshift({\n            link: link,\n            date: date,\n            title: title,\n            group: group\n        });\n        saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n        refreshPage(false);\n        return \"toast://删除成功\";\n    } else {\n        $.require(\"hiker://page/api?rule=图册\").overwriteArray();\n        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n        if (getMyVar('selectNum', '0') == '0') {\n            return 'toast://请先选择要删除的图片！'\n        } else {\n            // 日志备份\n            saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n            selectArray = JSON.parse(getMyVar('selectArray'));\n            selectArray.forEach(item => {\n                link = item.link;\n                title = item.title;\n                group = item.group;\n                // i是动态获取的\n                i = PhotoAlbum.相册[group].indexOf(link);\n                PhotoAlbum.相册[group].splice(i, 1);\n                // 放入回收站\n                date = $.require(\"hiker://page/api?rule=图册\").getCurrentDate(1);\n                PhotoAlbum.回收站.unshift({\n                    link: link,\n                    date: date,\n                    title: title,\n                    group: group\n                });\n            });\n            selectNum = getMyVar('selectNum', '0');\n            clearMyVar('selectNum');\n            clearMyVar('selectArray');\n            // 直接清除全部最大可能的index\n            showImg = [];\n            keyArray = [];\n            for (i in PhotoAlbum.keyMap) {\n                keyArray.push(i);\n            }\n            for (group in PhotoAlbum.相册) {\n                if (!keyArray.includes(group)) {\n                    showImg = showImg.concat(PhotoAlbum.相册[group]);\n                }\n            }\n            maxNum = showImg.length;\n            for (let index = 1; index <= maxNum; index++) {\n                clearMyVar('isChoose_' + index);\n            }\n            // log('清除index的数量:'+maxNum);\n            saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n            refreshPage(false);\n            return \"toast://共删除\" + selectNum + '张图片';\n        }\n    }\n}\n// 彻底删除\n$.exports.completelyDelete = function (link) {\n    if (link) {\n        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n        // 日志备份\n        saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n        $.require(\"hiker://page/api?rule=图册\").overwriteArray();\n        i = PhotoAlbum.回收站.indexOf(link);\n        PhotoAlbum.回收站.splice(i, 1);\n        saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n        refreshPage(false);\n        return 'toast://已彻底删除';\n    } else {\n        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n        $.require(\"hiker://page/api?rule=图册\").overwriteArray();\n        if (getMyVar('selectNum', '0') == '0') {\n            return 'toast://请先选择要删除的图片！'\n        } else {\n            // 日志备份\n            saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n            selectArray = JSON.parse(getMyVar('selectArray'));\n            selectArray.forEach(item => {\n                link = item.link;\n                i = PhotoAlbum.回收站.indexOf(link);\n                PhotoAlbum.回收站.splice(i, 1);\n            });\n            selectNum = getMyVar('selectNum', '0');\n            clearMyVar('selectNum');\n            clearMyVar('selectArray');\n            // 直接清除全部最大可能的index\n            showImg = [];\n            keyArray = [];\n            for (i in PhotoAlbum.keyMap) {\n                keyArray.push(i);\n            }\n            for (group in PhotoAlbum.相册) {\n                if (!keyArray.includes(group)) {\n                    showImg = showImg.concat(PhotoAlbum.相册[group]);\n                }\n            }\n            maxNum = showImg.length;\n            for (let index = 1; index <= maxNum; index++) {\n                clearMyVar('isChoose_' + index);\n            }\n            // log('清除index的数量:'+maxNum);\n            saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n            refreshPage(false);\n            return \"toast://共彻底删除\" + selectNum + '张图片';\n        }\n    }\n}\n// 加入随机\n$.exports.JoinRandom = function (link,group) {\n    if (link) {\n        if (!fileExist('hiker://files/rules/cy/Theme/pic_list.json')) {\n            return 'toast://你还没有使用过我的主题哦！'\n        } else {\n            PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n            $.require(\"hiker://page/api?rule=图册\").overwriteArray();\n            if (group) {\n                i = PhotoAlbum.相册[group].indexOf(link);\n                eval('data=' + fetch('hiker://files/rules/cy/Theme/pic_list.json'));\n                self_way = String(data.self_way);\n                data.gif_list.unshift(PhotoAlbum.相册[group][i].link);\n            }else{\n                i = PhotoAlbum.回收站.indexOf(link);\n                eval('data=' + fetch('hiker://files/rules/cy/Theme/pic_list.json'));\n                self_way = String(data.self_way);\n                data.gif_list.unshift(PhotoAlbum.回收站[i].link);\n            }\n            saveFile('hiker://files/rules/cy/Theme/pic_list.json', '{\"gif_list\":' + JSON.stringify(data.gif_list) + ',\"showType\":' + JSON.stringify(data.showType) + ',\"self_way\":' + self_way + '}');\n            return 'toast://加入成功~'\n        }\n    } else {\n        if (!fileExist('hiker://files/rules/cy/Theme/pic_list.json')) {\n            return 'toast://你还没有使用过我的主题哦！'\n        } else {\n            if (getMyVar('selectNum', '0') == '0') {\n                return 'toast://请先选择图片！'\n            } else {\n                PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                eval('data=' + fetch('hiker://files/rules/cy/Theme/pic_list.json'));\n                self_way = String(data.self_way);\n                selectArray = JSON.parse(getMyVar('selectArray'));\n                selectArray.forEach(item => {\n                    data.gif_list.unshift(item.link);\n                });\n                selectNum = getMyVar('selectNum', '0');\n                clearMyVar('selectNum');\n                clearMyVar('selectArray');\n                // 直接清除全部最大可能的index\n                showImg = [];\n                keyArray = [];\n                for (i in PhotoAlbum.keyMap) {\n                    keyArray.push(i);\n                }\n                for (group in PhotoAlbum.相册) {\n                    if (!keyArray.includes(group)) {\n                        showImg = showImg.concat(PhotoAlbum.相册[group]);\n                    }\n                }\n                maxNum = showImg.length;\n                for (let index = 1; index <= maxNum; index++) {\n                    clearMyVar('isChoose_' + index);\n                }\n                // log('清除index的数量:'+maxNum);\n                saveFile('hiker://files/rules/cy/Theme/pic_list.json', '{\"gif_list\":' + JSON.stringify(data.gif_list) + ',\"showType\":' + JSON.stringify(data.showType) + ',\"self_way\":' + self_way + '}');\n                refreshPage(false);\n                return \"toast://共有\" + selectNum + '张图片加入了随机图库';\n            }\n        }\n    }\n}\n// 重命名\n$.exports.reName = function (title, link, group) {\n    return $(title).input((link, group) => {\n        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n        // 日志备份\n        saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n        $.require(\"hiker://page/api?rule=图册\").overwriteArray();\n        i = PhotoAlbum.相册[group].indexOf(link);\n        PhotoAlbum.相册[group][i].title = input;\n        saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n        refreshPage(false);\n        return 'toast://重命名成功'\n    }, link, group)\n}\n// 改链接\n$.exports.changeLinke = function (link, group) {\n    return $(link).input((link, group) => {\n        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n        // 日志备份\n        saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n        $.require(\"hiker://page/api?rule=图册\").overwriteArray();\n        i = PhotoAlbum.相册[group].indexOf(link);\n        PhotoAlbum.相册[group][i].link = input;\n        saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n        refreshPage(false);\n        return 'toast://修改链接成功'\n    }, link, group)\n}\n// 移动分组\n$.exports.moveGroup = function (group, link, title) {\n    if (group && link && title) {\n        return $(group).input((group, link, title) => {\n            PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n            // 日志备份\n            saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n            $.require(\"hiker://page/api?rule=图册\").overwriteArray();\n            i = PhotoAlbum.相册[group].indexOf(link);\n            if (input == '回收站') {\n                // 移动到回收站\n                date = $.require(\"hiker://page/api?rule=图册\").getCurrentDate(1);\n                PhotoAlbum.回收站.unshift({\n                    link: link,\n                    date: date,\n                    title: title,\n                    group: group\n                });\n                // 从原分组删除\n                PhotoAlbum.相册[group].splice(i, 1);\n                saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                refreshPage(false);\n                return 'toast://已移动到回收站';\n            } else {\n                // 修改分组信息\n                PhotoAlbum.相册[group][i].group = input;\n                // 移动到新分组\n                if (PhotoAlbum.相册[input] == undefined) {\n                    PhotoAlbum.相册[input] = [];\n                }\n                PhotoAlbum.相册[input].unshift(PhotoAlbum.相册[group][i]);\n                // 从原分组删除\n                PhotoAlbum.相册[group].splice(i, 1);\n                saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                refreshPage(false);\n                return 'toast://移动成功';\n            }\n        }, group, link, title)\n    } else {\n        if (getMyVar('selectNum', '0') == '0') {\n            return 'toast://请先选择要移动的图片！'\n        } else {\n            return $('', '请输入要移动到的分组').input(() => {\n                $.require(\"hiker://page/api?rule=图册\").overwriteArray();\n                PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                // 日志备份\n                saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                selectArray = JSON.parse(getMyVar('selectArray'));\n                selectArray.forEach(item => {\n                    link = item.link;\n                    title = item.title;\n                    group = item.group;\n                    $.require(\"hiker://page/api?rule=图册\").overwriteArray();\n                    i = PhotoAlbum.相册[group].indexOf(link);\n                    if (input == '回收站') {\n                        // 移动到回收站\n                        date = $.require(\"hiker://page/api?rule=图册\").getCurrentDate(1);\n                        PhotoAlbum.回收站.unshift({\n                            link: link,\n                            date: date,\n                            title: title,\n                            group: group\n                        });\n                        // 从原分组删除\n                        PhotoAlbum.相册[group].splice(i, 1);\n                    } else {\n                        // 修改分组信息\n                        PhotoAlbum.相册[group][i].group = input;\n                        // 移动到新分组\n                        if (PhotoAlbum.相册[input] == undefined) {\n                            PhotoAlbum.相册[input] = [];\n                        }\n                        PhotoAlbum.相册[input].unshift(PhotoAlbum.相册[group][i]);\n                        // 从原分组删除\n                        PhotoAlbum.相册[group].splice(i, 1);\n                    }\n                });\n                selectNum = getMyVar('selectNum', '0');\n                clearMyVar('selectNum');\n                clearMyVar('selectArray');\n                // 直接清除全部最大可能的index\n                showImg = [];\n                keyArray = [];\n                for (i in PhotoAlbum.keyMap) {\n                    keyArray.push(i);\n                }\n                for (group in PhotoAlbum.相册) {\n                    if (!keyArray.includes(group)) {\n                        showImg = showImg.concat(PhotoAlbum.相册[group]);\n                    }\n                }\n                maxNum = showImg.length;\n                for (let index = 1; index <= maxNum; index++) {\n                    clearMyVar('isChoose_' + index);\n                }\n                // log('清除index的数量:'+maxNum);\n                saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                refreshPage(false);\n                return \"toast://共移动\" + selectNum + '张图片';\n            });\n        }\n    }\n}\n// 预览-多选\n$.exports.preview = function (item) {\n    if (item.link.match(/#isVideo=true#/)) {\n        link = item.link;\n        if (link.match(/-dir/)) {\n            link = item.link.split('-dir')[0];\n        } else {\n            lazy = $(\"\").lazyRule(() => {\n                return $.require('hiker://page/globalParse?rule=道长仓库Pro').lazyParse(input);\n            });\n            link = item.link.split('#isVideo=true#')[0] + lazy;\n        }\n    } else {\n        link = item.link;\n        if (!link.match(/jpg|jpeg|gif|png|svg|webp|bmp|tif/)) {\n            link = link + '.png';\n        }\n    }\n    return link;\n}\n\n// 图片视频-回收站长按事件\n$.exports.long_click_binPage = function (group, link, from, item) {\n    if (from) {\n        return [{\n            title: '预览', js: $.toString((item) => {\n                return $.require('hiker://page/api?rule=图册').preview(item);\n            }, item)\n        }, {\n            title: '恢复', js: $.toString(() => {\n                return $.require('hiker://page/api?rule=图册').reinstate();\n            })\n        }, {\n            title: '彻底删除', js: $.toString(() => {\n                return $.require(\"hiker://page/api?rule=图册\").completelyDelete();\n            })\n        }, {\n            title: '加入随机', js: $.toString(() => {\n                return $.require(\"hiker://page/api?rule=图册\").JoinRandom();\n            })\n        }];\n    } else {\n        return [{\n            title: '恢复原位', js: $.toString((group, link) => {\n                return $.require(\"hiker://page/api?rule=图册\").reinstate(group, link);\n            }, group, link)\n        }, {\n            title: '彻底删除', js: $.toString((link) => {\n                return $.require(\"hiker://page/api?rule=图册\").completelyDelete(link);\n            }, link)\n        }, {\n            title: '加入随机', js: $.toString((link) => {\n                return $.require(\"hiker://page/api?rule=图册\").JoinRandom(link);\n            }, link)\n        }];\n    }\n}\n// 图片视频-分组长按事件\n$.exports.long_click_truePage = function (title, link, group, from, item, type) {\n    switch (arguments.length) {\n        case 6:\n            return [{\n                title: '预览', js: $.toString((item) => {\n                    return $.require('hiker://page/api?rule=图册').preview(item);\n                }, item)\n            }, {\n                title: '移动', js: $.toString(() => {\n                    return $.require(\"hiker://page/api?rule=图册\").moveGroup();\n                })\n            }, {\n                title: '删除', js: $.toString(() => {\n                    return $.require(\"hiker://page/api?rule=图册\").removeBin();\n                })\n            }]\n            break;\n        case 4:\n            return [{\n                title: '重命名', js: $.toString((title, link, group) => {\n                    return $.require(\"hiker://page/api?rule=图册\").reName(title, link, group);\n                }, title, link, group)\n            }, {\n                title: '改链接', js: $.toString((link, group) => {\n                    return $.require(\"hiker://page/api?rule=图册\").changeLinke(link, group);\n                }, link, group)\n            }, {\n                title: '移动分组', js: $.toString((group, link, title) => {\n                    return $.require(\"hiker://page/api?rule=图册\").moveGroup(group, link, title);\n                }, group, link, title)\n            }, {\n                title: '删除', js: $.toString((group, link, title) => {\n                    return $.require(\"hiker://page/api?rule=图册\").removeBin(group, link, title);\n                }, group, link, title)\n            }];\n            break;\n        case 5:\n            return [{\n                title: '预览', js: $.toString((item) => {\n                    return $.require('hiker://page/api?rule=图册').preview(item);\n                }, item)\n            }, {\n                title: '移动', js: $.toString(() => {\n                    return $.require(\"hiker://page/api?rule=图册\").moveGroup();\n                })\n            }, {\n                title: '删除', js: $.toString(() => {\n                    return $.require(\"hiker://page/api?rule=图册\").removeBin();\n                })\n            }, {\n                title: '加入随机', js: $.toString(() => {\n                    return $.require(\"hiker://page/api?rule=图册\").JoinRandom();\n                })\n            }]\n            break;\n        case 3:\n            return [{\n                title: '重命名', js: $.toString((title, link, group) => {\n                    return $.require(\"hiker://page/api?rule=图册\").reName(title, link, group);\n                }, title, link, group)\n            }, {\n                title: '改链接', js: $.toString((link, group) => {\n                    return $.require(\"hiker://page/api?rule=图册\").changeLinke(link, group);\n                }, link, group)\n            }, {\n                title: '移动分组', js: $.toString((group, link, title) => {\n                    return $.require(\"hiker://page/api?rule=图册\").moveGroup(group, link, title);\n                }, group, link, title)\n            }, {\n                title: '删除', js: $.toString((group, link, title) => {\n                    return $.require(\"hiker://page/api?rule=图册\").removeBin(group, link, title);\n                }, group, link, title)\n            }, {\n                title: '加入随机', js: $.toString((link,group) => {\n                    return $.require(\"hiker://page/api?rule=图册\").JoinRandom(link,group);\n                }, link,group)\n            }];\n            break;\n    }\n}\n// 分组权限验证\n$.exports.Authentication = function (Select_group) {\n    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n    if (Select_group == '🗑️') {\n        password = base64Decode(base64Decode(PhotoAlbum.user_password))\n    } else {\n        keyMap = PhotoAlbum.keyMap;\n        password = base64Decode(base64Decode(keyMap[Select_group]));\n    }\n    if (password != getMyVar('password')) {\n        return \"toast://密码错误！\"\n    } else {\n        putMyVar('isOpen_' + Select_group, 'y')\n        refreshPage(true);\n        return \"toast://秘钥正确~\";\n    }\n}\n// 多选相册（删除）\n$.exports.selectGroupToDel = function (group) {\n    selectArray = JSON.parse(getMyVar('selectArray', '[]'));\n    if (selectArray.includes(group)) {\n        selectNum = Number(getMyVar('selectNum', '0')) - 1;\n        selectArray = selectArray.filter(item => item != group);\n        putMyVar('selectArray', selectArray);\n        putMyVar('selectNum', selectNum);\n    } else {\n        selectNum = Number(getMyVar('selectNum', '0')) + 1;\n        selectArray.push(group);\n        putMyVar('selectArray', selectArray);\n        putMyVar('selectNum', selectNum);\n    }\n    // refreshPage(true);\n    updateItem('del_select_' + group, {\n        title: JSON.parse(getMyVar('selectArray', '[]')).includes(group) ? '““””<font color=red>' + group + '</font>' : group,\n    });\n    return 'hiker://empty'\n}\n// 删除多选相册\n$.exports.DelselectGroup = function () {\n    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n    if (getMyVar('selectNum', '0') == '0') {\n        return 'toast://请先选择要删除的相册！'\n    } else {\n        keyArray = [];\n        for (var item in PhotoAlbum.keyMap) {\n            keyArray.push(item);\n        }\n        selectArray = JSON.parse(getMyVar('selectArray'));\n        for (var group in PhotoAlbum.相册) {\n            if (selectArray.includes(group)) {\n                if (keyArray.includes(group) && selectArray.length != 1) {\n                    return 'toast://选中分组中有相册设有秘钥，请单独进行删除！'\n                } else if (keyArray.includes(group) && selectArray.length == 1) {\n                    if (PhotoAlbum.isSecret == 'yes') {\n                        return $('', group + '图册|设有密码').input((group) => {\n                            PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                            keyMap = PhotoAlbum.keyMap;\n                            password = base64Decode(base64Decode(keyMap[group]));\n                            if (input == password) {\n                                PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                                // 日志备份\n                                saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                                delete PhotoAlbum.相册[group];\n                                // 清除密钥对\n                                delete PhotoAlbum.keyMap[group];\n                                saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                                selectNum = getMyVar('selectNum', '0');\n                                clearMyVar('selectNum');\n                                clearMyVar('selectArray');\n                                refreshPage(true);\n                                return \"toast://该加密相册已删除~\";\n                            } else {\n                                return 'toast://密码错误！'\n                            }\n                        }, group)\n                    } else {\n                        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                        // 日志备份\n                        saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                        delete PhotoAlbum.相册[group];\n                        // 清除密钥对\n                        delete PhotoAlbum.keyMap[group];\n                        saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                        selectNum = getMyVar('selectNum', '0');\n                        clearMyVar('selectNum');\n                        clearMyVar('selectArray');\n                        refreshPage(true);\n                        return \"toast://该加密相册已删除~\";\n                    }\n                } else {\n                    // 日志备份\n                    saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                    // 放入回收站\n                    date = $.require(\"hiker://page/api?rule=图册\").getCurrentDate(1);\n                    PhotoAlbum.相册[group].forEach(item => {\n                        item.date = date;\n                    });\n                    PhotoAlbum.回收站 = PhotoAlbum.相册[group].concat(PhotoAlbum.回收站);\n                    // 删除相册\n                    delete PhotoAlbum.相册[group];\n                    saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                }\n            }\n        };\n        // 对于多选来说，要在循环外返回结果\n        selectNum = getMyVar('selectNum', '0');\n        clearMyVar('selectNum');\n        clearMyVar('selectArray');\n        refreshPage(true);\n        return \"toast://共删除\" + selectNum + '个相册';\n    }\n}\n// 创建相册\n$.exports.creatGroup = function () {\n    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n    PhotoAlbum_Name = getMyVar('PhotoAlbum_Name', '未命名');\n    groupFuns = ['全部', '🗑️', '➕', '➖'];\n    if (groupFuns.includes(PhotoAlbum_Name)) {\n        return 'toast://相册名不能是关键字！';\n    }\n    for (group in PhotoAlbum.相册) {\n        if (PhotoAlbum_Name == group) {\n            return 'toast://已存在同名相册！'\n        }\n    };\n    PhotoAlbum.相册[PhotoAlbum_Name] = [];\n    saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n    refreshPage(true);\n    return \"toast://相册创建成功~\";\n}\n// 勾选相册（多选模式）\n$.exports.CheckGroup = function (index, item, showType) {\n    selectArray = JSON.parse(getMyVar('selectArray', '[]'));\n    if (getMyVar('isChoose_' + index, 'no') == 'yes') {\n        selectNum = Number(getMyVar('selectNum', '0')) - 1;\n        selectArray.pop(item);\n        putMyVar('selectArray', selectArray);\n        putMyVar('selectNum', selectNum);\n        putMyVar('isChoose_' + index, 'no');\n    } else {\n        selectNum = Number(getMyVar('selectNum', '0')) + 1;\n        selectArray.push(item);\n        putMyVar('selectArray', selectArray);\n        putMyVar('selectNum', selectNum);\n        putMyVar('isChoose_' + index, 'yes');\n    }\n    updateItem('selfMap' + index, {\n        desc: getMyVar('isChoose_' + index, 'no') == 'yes' ? '✅' : (getMyVar('isChoose_' + index, 'no') == 'yes' ? '✅' : (showType.match(/card/) ? 0 + '' : (showType == 'pic_1' || showType.match(/movie_1/) ? '#' + item.group + '\\t\\t' + item.date : index + ''))),\n    });\n    return 'hiker://empty'\n}\n// 高级root权限\n$.exports.rootFun = function () {\n    return $('', '你没有权限哦').input(() => {\n        if (input == 'root') {\n            // 加载图册配置\n            PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n            isSecret = PhotoAlbum.isSecret;\n            addItemAfter('root', [{\n                title: '导出解码文件',\n                url: $('#noLoading#').lazyRule(() => {\n                    saveFile('hiker://files/cache/PhotoAlbum_temp.json', base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                    return 'share://hiker://files/cache/PhotoAlbum_temp.json';\n                }),\n                col_type: 'text_1'\n            }, {\n                title: '导入解码文件（覆盖）',\n                url: $('#noLoading#').lazyRule(() => {\n                    return $('', '填写文件所在路径|支持文件直链').input(() => {\n                        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                        // 日志备份\n                        saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                        PhotoAlbum = request(input);\n                        saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(PhotoAlbum)));\n                        return \"toast://导入成功~\";\n                    })\n                }),\n                col_type: 'text_1'\n            }, {\n                title: '清空秘钥',\n                desc: '清除所有用户秘钥和相册秘钥',\n                url: $('#noLoading#').lazyRule(() => {\n                    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                    // 日志备份\n                    saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                    PhotoAlbum.keyMap = {};\n                    PhotoAlbum.user_password = '';\n                    saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(PhotoAlbum)));\n                    return \"toast://清除成功~\";\n                }),\n                col_type: 'text_1'\n            }, {\n                title: '<b>裸奔模式</b>',\n                img: (isSecret == 'yes' ? 'https://lanmeiguojiang.com/tubiao/messy/63.svg' : 'https://lanmeiguojiang.com/tubiao/messy/55.svg') + '@Referer=',\n                url: $('#noLoading#').lazyRule(() => {\n                    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                    if (PhotoAlbum.isSecret == 'yes') {\n                        PhotoAlbum.isSecret = 'no';\n                    } else {\n                        PhotoAlbum.isSecret = 'yes';\n                    }\n                    saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                    refreshPage(true);\n                    return \"toast://用户密码设置成功~\";\n                }),\n                col_type: 'text_icon'\n            }, {\n                title: '无需设置密码，开放搜索等功能。若设置了密码还请关闭该选项',\n                col_type: 'rich_text',\n                extra: { \"textSize\": \"12\" }\n            }]);\n        } else {\n            return 'toast://你是谁？你想干嘛！'\n        }\n    })\n}\n// 上锁\n$.exports.lockUp = function () {\n    return $('hiker://empty').rule(() => {\n        var d = [];\n        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n        keyMap = PhotoAlbum.keyMap;\n        if (JSON.stringify(keyMap) == '{}') {\n            d.push({\n                title: '暂无上锁的相册',\n                url: 'hiker://empty',\n                col_type: 'text_1'\n            })\n        } else {\n            for (var item in keyMap) {\n                d.push({\n                    title: '🔒' + item,\n                    url: $(['更改密码', '清除密码'], 2, '请选择操作').select((group) => {\n                        if (input == '更改密码') {\n                            return $('', '请输入原密码').input((group) => {\n                                PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                                keyMap = PhotoAlbum.keyMap;\n                                password = base64Decode(base64Decode(keyMap[group]));\n                                if (input == password) {\n                                    return $('', '请输入新密码').input((group) => {\n                                        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                                        keyMap = PhotoAlbum.keyMap;\n                                        keyMap[group] = base64Encode(base64Encode(input));\n                                        saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                                        refreshPage(true);\n                                        return \"toast://相册秘钥更改成功~\";\n                                    }, group);\n                                } else {\n                                    return 'toast://密码错误！'\n                                }\n                            }, group)\n                        } else {\n                            return $('', '请输入原密码').input((group) => {\n                                PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                                keyMap = PhotoAlbum.keyMap;\n                                password = base64Decode(base64Decode(keyMap[group]));\n                                if (input == password) {\n                                    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                                    delete PhotoAlbum.keyMap[group];\n                                    saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                                    refreshPage(true);\n                                    return \"toast://相册秘钥已清除~\";\n                                } else {\n                                    return 'toast://密码错误！'\n                                }\n                            }, group)\n                        }\n                    }, item),\n                    col_type: 'text_1'\n                })\n            }\n        }\n        d.push({\n            title: '‘‘’’<big><span style=\"color:#6EB897\">添 加🔒</span></big>',\n            url: 'hiker://empty',\n            col_type: 'text_1'\n        }, {\n            title: '🎨当前选中分组：' + getMyVar('selectGroup', '未选择'),\n            url: $('hiker://empty#noLoading#').lazyRule(() => {\n                PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                groupArray = [];\n                keyArray = [];\n                for (var item in PhotoAlbum.keyMap) {\n                    keyArray.push(item);\n                }\n                for (var group in PhotoAlbum.相册) {\n                    if (!keyArray.includes(group)) {\n                        groupArray.push(group);\n                    }\n                }\n                return $(groupArray, 3, '未上锁分组').select(() => {\n                    putMyVar('selectGroup', input)\n                    updateItem('group_btn', {\n                        title: '🎨当前选中分组：' + getMyVar('selectGroup', '未选择'),\n                    });\n                    return 'hiker://empty';\n                })\n            }),\n            col_type: 'text_1',\n            extra: {\n                id: 'group_btn'\n            }\n        }, {\n            desc: '请输入密码',\n            col_type: 'input',\n            extra: {\n                titleVisible: false,\n                type: 'textarea',\n                height: 1,\n                highlight: true,\n                onChange: \"putMyVar('password',input)\",\n            }\n        }, {\n            title: '确认添加',\n            url: $('#noLoading#').lazyRule(() => {\n                PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                keyMap = PhotoAlbum.keyMap;\n                selectGroup = getMyVar('selectGroup', '未选择');\n                password = getMyVar('password');\n                if (selectGroup == '未选择') {\n                    return \"toast://请先选择要上锁的相册\"\n                } else if (password == '') {\n                    return \"toast://密码不能为空！\"\n                } else {\n                    if (PhotoAlbum.user_password == '') {\n                        return $('', '请设置用户密码(请牢记)').input(() => {\n                            PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                            PhotoAlbum.user_password = base64Encode(base64Encode(input));\n                            saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                            return \"toast://用户密码设置成功~\";\n                        })\n                    } else {\n                        return $('', '请输入密码').input(() => {\n                            PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                            keyMap = PhotoAlbum.keyMap;\n                            selectGroup = getMyVar('selectGroup', '未选择');\n                            password = getMyVar('password');\n                            if (input == base64Decode(base64Decode(PhotoAlbum.user_password))) {\n                                keyMap[selectGroup] = base64Encode(base64Encode(password));\n                                saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                                refreshPage(true);\n                                return \"toast://相册秘钥添加成功~\";\n                            } else {\n                                return 'toast://密码错误！'\n                            }\n                        })\n                    }\n                }\n            }),\n            col_type: 'text_center_1'\n        });\n        setResult(d);\n    });\n}\n// 设置或修改密码\n$.exports.setPassword = function () {\n    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n    if (PhotoAlbum.user_password == '') {\n        return $('', '请设置用户密码(请牢记)').input(() => {\n            PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n            PhotoAlbum.user_password = base64Encode(base64Encode(input));\n            saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n            return \"toast://用户密码设置成功~\";\n        })\n    } else {\n        return $('', '请输入原密码').input(() => {\n            PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n            if (input == base64Decode(base64Decode(PhotoAlbum.user_password))) {\n                return $('', '请输入新密码').input(() => {\n                    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                    PhotoAlbum.user_password = base64Encode(base64Encode(input));\n                    saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                    return \"toast://用户密码更改成功~\";\n                });\n            } else {\n                return 'toast://密码错误！'\n            }\n        })\n    }\n}\n// 清空回收站\n$.exports.clearBin = function () {\n    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n    if (PhotoAlbum.user_password == '') {\n        return $('', '请设置用户密码(请牢记)').input(() => {\n            PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n            PhotoAlbum.user_password = base64Encode(base64Encode(input));\n            saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n            return \"toast://用户密码设置成功~\";\n        })\n    } else {\n        return $('', '请输入密码').input(() => {\n            PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n            if (input == base64Decode(base64Decode(PhotoAlbum.user_password))) {\n                return $(\"慎重考虑~\").confirm(() => {\n                    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                    PhotoAlbum.回收站 = [];\n                    saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                    return \"toast://回收站已清空！\";\n                });\n            } else {\n                return 'toast://密码错误！'\n            }\n        })\n    }\n}\n// 去重\n$.exports.dedup = function () {\n    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n    // 获取全部数据\n    allData = []\n    for (group in PhotoAlbum.相册) {\n        allData = allData.concat(PhotoAlbum.相册[group]);\n    }\n    allData = allData.concat(PhotoAlbum.回收站);\n    // 链接去重数组定义为全局\n    var newArr = [];\n    var repetNum = 0;\n    for (group in PhotoAlbum.相册) {\n        tempArray = [];\n        PhotoAlbum.相册[group].forEach(item => {\n            if (!newArr.includes(item.link)) {\n                // 将链接存入去重数组\n                newArr.push(item.link);\n                // 存储到临时数组倒手\n                tempArray.push(item);\n            } else {\n                repetNum++;\n            };\n\n        });\n        // 倒手存入\n        PhotoAlbum.相册[group] = tempArray;\n    }\n    saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n    return \"toast://本次去重\" + repetNum + '条数据';\n}\n// 外部接口1-加入随机图\n$.exports.addToRandomPool = function (linkArray) {\n    if (!fileExist('hiker://files/rules/cy/Theme/pic_list.json') || !fileExist('hiker://files/rules/cy/PhotoAlbum.json')) {\n        return 'toast://朋友，你还没有使用过我的主题或者说你没有图册哦！'\n    } else {\n        eval('data=' + fetch('hiker://files/rules/cy/Theme/pic_list.json'));\n        self_way = String(data.self_way);\n        data.gif_list = linkArray.concat(data.gif_list);\n        saveFile('hiker://files/rules/cy/Theme/pic_list.json', '{\"gif_list\":' + JSON.stringify(data.gif_list) + ',\"showType\":' + JSON.stringify(data.showType) + ',\"self_way\":' + self_way + '}');\n        return 'toast://加入成功~'\n    }\n}\n// 外部接口2-加入图册分组,参数为JSON数组:[{title:'',link:''}]\n$.exports.addToPhotoAlbum = function (data) {\n    if (!fileExist('hiker://files/rules/cy/Theme/pic_list.json') || !fileExist('hiker://files/rules/cy/PhotoAlbum.json')) {\n        return 'toast://朋友，你还没有使用过我的主题或者说你没有图册哦！'\n    } else {\n        return $('', '请输入相册分组名称').input((data) => {\n            PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n            if (PhotoAlbum.isSecret == 'yes') {\n                keyArray = [];\n                for (i in PhotoAlbum.keyMap) {\n                    keyArray.push(i);\n                }\n                if (keyArray.includes(input)) {\n                    return $('', input + '图册|设有密码').input((group, data) => {\n                        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n                        keyMap = PhotoAlbum.keyMap;\n                        password = base64Decode(base64Decode(keyMap[group]));\n                        if (input == password) {\n                            // 日志备份\n                            saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                            date = $.require(\"hiker://page/api?rule=图册\").getCurrentDate(1);\n                            if (PhotoAlbum.相册[group] == undefined) {\n                                PhotoAlbum.相册[group] = [];\n                            }\n                            data.forEach(item => {\n                                PhotoAlbum.相册[group].unshift({\n                                    link: item.link,\n                                    date: date,\n                                    title: item.title,\n                                    group: group\n                                });\n                            });\n                            saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                            return \"toast://图片添加成功~\";\n                        } else {\n                            return 'toast://密码错误！'\n                        }\n                    }, input, data)\n                } else {\n                    // 日志备份\n                    saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                    date = $.require(\"hiker://page/api?rule=图册\").getCurrentDate(1);\n                    if (PhotoAlbum.相册[input] == undefined) {\n                        PhotoAlbum.相册[input] = [];\n                    }\n                    data.forEach(item => {\n                        PhotoAlbum.相册[input].unshift({\n                            link: item.link,\n                            date: date,\n                            title: item.title,\n                            group: input\n                        });\n                    });\n                    saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                    return \"toast://图片添加成功~\";\n                }\n            } else {\n                // 日志备份\n                saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                date = $.require(\"hiker://page/api?rule=图册\").getCurrentDate(1);\n                if (PhotoAlbum.相册[input] == undefined) {\n                    PhotoAlbum.相册[input] = [];\n                }\n                data.forEach(item => {\n                    PhotoAlbum.相册[input].unshift({\n                        link: item.link,\n                        date: date,\n                        title: item.title,\n                        group: input\n                    });\n                });\n                saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n                return \"toast://图片添加成功~\";\n            }\n        }, data)\n    }\n}\n"},{"col_type":"movie_3","name":"家","path":"homePage","rule":"js:\n// 静默备份\ntry {\n    var d = [];\n    // 预处理\n    $.require(\"hiker://page/api?rule=图册\").pretreatment();\n    // 加载图册配置和初始化页面、页码\n    var PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\n    Select_group = getMyVar('Select_group', '全部');\n    showType = PhotoAlbum.showType;\n    keyMap = PhotoAlbum.keyMap;\n    singleMax = PhotoAlbum.singleMax;\n    isSecret = PhotoAlbum.isSecret;\n    color = \"#19B89D\";\n    // 页码差距\n    margin = MY_PAGE - getMyVar('lastPage', '1');\n    // 使用MY_PAGE_add承接页码\n    MY_PAGE_add = parseInt(getMyVar('thePageNum', '1')) + margin;\n    log('页码:' + MY_PAGE_add);\n    putMyVar('lastPage', MY_PAGE);\n    // 倒手变量记录最新的MY_PAGE_add\n    putMyVar('thePageNum', MY_PAGE_add);\n    // 第一页展示功能区\n    if (MY_PAGE == 1) {\n        // 检索\n        d.unshift({\n            title: \"检索\",\n            desc: '请输入检索关键字~',\n            col_type: \"input\",\n            url: $.toString(() => {\n                return $.require(\"hiker://page/api?rule=图册\").search()\n            }),\n            extra: {\n                type: 'textarea',\n                defaultValue: getMyVar('condition', ''),\n                height: 1,\n                onChange: \"putMyVar('condition',input)\",\n            }\n        })\n        groupItems = ['全部'];\n        groupFuns = ['🗑️', '➕', '➖'];\n        for (i in PhotoAlbum.相册) {\n            groupItems.push(i);\n        }\n        groupItems.push.apply(groupItems, groupFuns);\n        groupItems.forEach(item => {\n            groupFuns = ['全部', '🗑️', '➕', '➖'];\n            if (groupFuns.includes(item)) {\n                d.push({\n                    title: getMyVar('Select_group', '全部') == item ? ('““””<b> <font color=' + color + '>' + item + ' </font></b>') : item,\n                    col_type: 'scroll_button',\n                    url: $('hiker://empty#noLoading#').lazyRule((item) => {\n                        return $.require(\"hiker://page/api?rule=图册\").SwitchGroup(item)\n                    }, item)\n                })\n            } else {\n                d.push({\n                    title: getMyVar('Select_group', '全部') == item ? ('““””<b> <font color=' + color + '>' + item + ' </font></b>') : item,\n                    col_type: 'scroll_button',\n                    url: $('hiker://empty#noLoading#').lazyRule((item) => {\n                        return $.require(\"hiker://page/api?rule=图册\").SwitchGroup(item)\n                    }, item),\n                    extra: {\n                        longClick: $.require(\"hiker://page/api?rule=图册\").groupFun(item)\n                    }\n                })\n            }\n        });\n        d.push({\n            col_type: 'blank_block'\n        })\n        // 添加更多按钮\n        d.push({\n            title: getMyVar('showPage', '🖼︎概览') == '🖼︎概览' ? '🖼︎概览' : '☑️多选',\n            url: $('#noLoading#').lazyRule((MY_PAGE_add) => {\n                return $.require(\"hiker://page/api?rule=图册\").SwitchMode(MY_PAGE_add)\n            }, MY_PAGE_add),\n            col_type: 'scroll_button'\n        }, {\n            title: '🎨' + showType,\n            url: $('#noLoading#').lazyRule(() => {\n                return $.require(\"hiker://page/api?rule=图册\").switchShowType()\n            }),\n            col_type: 'scroll_button',\n            extra: {\n                id: 'showType_btn'\n            }\n        }, {\n            title: '⚙️设置',\n            url: $('#noLoading##noHistory#').lazyRule(() => {\n                return $('hiker://empty##fypage#fullTheme#').rule(() => {\n                    require(\"hiker://page/setting?rule=图册\");\n                })\n            }),\n            col_type: 'scroll_button'\n        }, {\n            title: '➕',\n            url: $('#noLoading#').lazyRule(() => {\n                return $.require(\"hiker://page/api?rule=图册\").addNewPic()\n            }),\n            col_type: 'scroll_button',\n            extra: {\n                id: 'addMoreBtn',\n                longClick: [{\n                    title: '批量导入，支持本地直链、云链', js: $.toString(() => {\n                        return $.require(\"hiker://page/api?rule=图册\").long_click_addNewPic()\n                    })\n                }]\n            }\n        });\n    }\n    d.push({\n        url: 'hiker://empty',\n        col_type: 'line_blank'\n    },);\n    // 数据匹配\n    keyArray = [];\n    for (i in PhotoAlbum.keyMap) {\n        keyArray.push(i);\n    }\n    if ((keyArray.includes(Select_group) || (Select_group == '🗑️') && PhotoAlbum.user_password != '') && getMyVar('currentPage', 'whole') != 'search_res' && getMyVar('isOpen_' + Select_group, 'n') == 'n' && isSecret == 'yes') {\n        d.push({\n            desc: '请输入密码',\n            col_type: 'input',\n            extra: {\n                titleVisible: false,\n                type: 'textarea',\n                height: 1,\n                highlight: true,\n                onChange: \"putMyVar('password',input)\",\n            }\n        }, {\n            title: '确认',\n            url: $('#noLoading#').lazyRule((Select_group) => {\n                return $.require(\"hiker://page/api?rule=图册\").Authentication(Select_group);\n            }, Select_group),\n            col_type: 'text_center_1'\n        });\n    } else {\n        if (getMyVar('currentPage', 'whole') == 'search_res') {\n            var keyWord = getMyVar('condition');\n            var reg = new RegExp(keyWord);\n            var showImg = [];\n            if (Select_group == '🗑️') {\n                res_source = '回收站';\n                PhotoAlbum.回收站.forEach(item => {\n                    if (item.title.match(reg) && item.title != '未命名') {\n                        showImg.push(item);\n                    }\n                });\n            } else {\n                res_source = '图库';\n                for (group in PhotoAlbum.相册) {\n                    PhotoAlbum.相册[group].forEach(item => {\n                        if (item.title.match(reg) && item.title != '未命名') {\n                            showImg.push(item);\n                        }\n                    });\n                }\n            }\n        } else if (Select_group == '全部') {\n            showImg = [];\n            if (isSecret == 'yes') {\n                for (var group in PhotoAlbum.相册) {\n                    if (!keyArray.includes(group)) {\n                        showImg = showImg.concat(PhotoAlbum.相册[group]);\n                    }\n                }\n            } else {\n                for (var group in PhotoAlbum.相册) {\n                    showImg = showImg.concat(PhotoAlbum.相册[group]);\n                }\n            }\n        } else if (Select_group == '🗑️') {\n            var showImg = PhotoAlbum.回收站;\n        } else {\n            var showImg = PhotoAlbum.相册[Select_group];\n        }\n        // 获取分页data\n        try {\n            maxPage = Math.ceil(showImg.length / singleMax);\n            startPage = (MY_PAGE_add - 1) * singleMax + 1;\n            endPage = singleMax * MY_PAGE_add;\n            showImg = showImg.slice(startPage - 1, endPage);\n        } catch (e) {\n            log('在对相册进行操作~');\n            showImg = ['temp'];\n            maxPage = Math.ceil(showImg.length / singleMax);\n            startPage = (MY_PAGE_add - 1) * singleMax + 1;\n            endPage = singleMax * MY_PAGE_add;\n            showImg = showImg.slice(startPage - 1, endPage);\n        }\n        // 首页数据展示\n        if (MY_PAGE_add > maxPage) {\n            d.push({\n                title: \"““””<small><font color='gray'>—到底了哦—</font></small>\",\n                url: 'hiker://empty',\n                col_type: 'text_center_1'\n            });\n        } else {\n            if (Select_group == '➕') {\n                d.push({\n                    title: '请输入相册名字',\n                    url: 'hiker://empty',\n                    col_type: 'text_1'\n                }, {\n                    desc: '没啥要求,但是你也不要乱来~',\n                    col_type: 'input',\n                    extra: {\n                        titleVisible: false,\n                        type: 'textarea',\n                        height: -1,\n                        highlight: true,\n                        onChange: \"putMyVar('PhotoAlbum_Name',input)\",\n                    }\n                }, {\n                    title: '‘‘’’<big><span style=\"color:#6EB897\">创 建</span></big>',\n                    url: $('#noLoading#').lazyRule(() => {\n                        return $.require(\"hiker://page/api?rule=图册\").creatGroup();\n                    }),\n                    col_type: 'text_center_1'\n                });\n            } else if (Select_group == '➖') {\n                d.push({\n                    title: '请选中你要删除的相册',\n                    url: 'hiker://empty',\n                    col_type: 'text_1'\n                });\n                for (var group in PhotoAlbum.相册) {\n                    d.push({\n                        title: JSON.parse(getMyVar('selectArray', '[]')).includes(group) ? '““””<font color=red>' + group + '</font>' : group,\n                        col_type: 'scroll_button',\n                        url: $('hiker://empty#noLoading#').lazyRule((group) => {\n                            return $.require(\"hiker://page/api?rule=图册\").selectGroupToDel(group);\n                        }, group),\n                        extra: {\n                            id: 'del_select_' + group\n                        }\n                    })\n                }\n                d.push({\n                    title: '‘‘’’<big><span style=\"color:#6EB897\">删 除</span></big>',\n                    url: $('hiker://empty#noLoading#').lazyRule(() => {\n                        return $.require(\"hiker://page/api?rule=图册\").DelselectGroup();\n                    }),\n                    col_type: 'text_center_1'\n                });\n            } else {\n                if (getMyVar('showPage', '🖼︎概览') == '🖼︎概览') {\n                    eval(JSON.parse(request('hiker://page/overview?rule=图册')).rule);\n                } else {\n                    eval(JSON.parse(request('hiker://page/editor?rule=图册')).rule);\n                }\n            }\n        }\n    }\n    // 备份\n    saveFile('hiker://files/rules/cy/PhotoAlbum_back.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\n} catch (e) {\n    log(e.message);\n    showLoading('异常！！！');\n    d.push({\n        title: '恢复备份',\n        desc: '数据发生了损坏或许发生了未知错误，可以尝试恢复~',\n        url: $('#noLoading#').lazyRule(() => {\n            PhotoAlbum_back = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum_back.json'))));\n            saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum_back))));\n            refreshPage(true);\n            return \"toast://恢复成功\";\n        }),\n        col_type: 'text_center_1'\n    });\n    setResult(d);\n}\nsetResult(d);\n"},{"col_type":"movie_3","name":"多选编辑模式","path":"editor","rule":"// 判断多选样式\r\nbanList = ['icon_round_4', 'pic_1_full', 'card_pic_1', 'pic_2_card', 'pic_3', 'pic_3_square', 'icon_2', 'icon_2_round', 'icon_round_4', 'card_pic_3'];\r\nif (banList.includes(showType)) {\r\n    showType = 'movie_3_marquee';\r\n}\r\nd.push({\r\n    col_type: 'blank_block'\r\n});\r\nif (Select_group == '🗑️') {\r\n    videoArray = [];\r\n    // 图片序号\r\n    show_Index = (MY_PAGE_add - 1) * singleMax + 1;\r\n    d.push({\r\n        title: '<b>图片</b>',\r\n        url: $('#noLoading#').lazyRule(() => {\r\n            return $.require(\"hiker://page/api?rule=图册\").refreshPageNum();\r\n        }),\r\n        img: 'https://hikerfans.com/tubiao/more/39.png@Referer=',\r\n        col_type: 'avatar',\r\n        extra: {\r\n            id: 'picArray_show',\r\n            longClick: $.require(\"hiker://page/api?rule=图册\").long_click_pageBtn(MY_PAGE_add)\r\n        }\r\n    });\r\n    putMyVar('indexOfArray', d.length - 1);\r\n    showImg.forEach(item => {\r\n        if (item.link.match(/#isVideo=true#/)) {\r\n            videoArray.push(item);\r\n        } else {\r\n            link = item.link;\r\n            group = item.group;\r\n            shwoUrl = \"pics://\" + link;\r\n            if (link.match(/http/)) {\r\n                showPic=link + '@Referer=';\r\n            }else{\r\n                showPic=link\r\n            }\r\n            d.push({\r\n                title: item.title,\r\n                desc: getMyVar('isChoose_' + show_Index, 'no') == 'yes' ? '✅' : (showType.match(/card/) ? 0 + '' : (showType == 'pic_1' || showType.match(/movie_1/) ? '#' + item.group + '\\t\\t' + item.date : show_Index + '')),\r\n                url: $('#noLoading#').lazyRule((index, item, showType) => {\r\n                    selectArray = JSON.parse(getMyVar('selectArray', '[]'));\r\n                    if (getMyVar('isChoose_' + index, 'no') == 'yes') {\r\n                        selectNum = Number(getMyVar('selectNum', '0')) - 1;\r\n                        selectArray.pop(item);\r\n                        putMyVar('selectArray', selectArray);\r\n                        putMyVar('selectNum', selectNum);\r\n                        putMyVar('isChoose_' + index, 'no');\r\n                    } else {\r\n                        selectNum = Number(getMyVar('selectNum', '0')) + 1;\r\n                        selectArray.push(item);\r\n                        putMyVar('selectArray', selectArray);\r\n                        putMyVar('selectNum', selectNum);\r\n                        putMyVar('isChoose_' + index, 'yes');\r\n                    }\r\n                    updateItem('selfMap' + index, {\r\n                        desc: getMyVar('isChoose_' + index, 'no') == 'yes' ? '✅' : (getMyVar('isChoose_' + index, 'no') == 'yes' ? '✅' : (showType.match(/card/) ? 0 + '' : (showType == 'pic_1' || showType.match(/movie_1/) ? '#' + item.group + '\\t\\t' + item.date : index + ''))),\r\n                    });\r\n                    return 'hiker://empty'\r\n                }, show_Index, item, showType),\r\n                img: showPic,\r\n                col_type: showType,\r\n                extra: {\r\n                    id: 'selfMap' + show_Index,\r\n                    longClick: $.require(\"hiker://page/api?rule=图册\").long_click_binPage(group, link,'select',item)\r\n                }\r\n            });\r\n            show_Index++;\r\n        }\r\n    })\r\n    d.push({\r\n        url: 'hiker://empty',\r\n        col_type: 'line'\r\n    }, {\r\n        title: '<b>视频</b>\\t\\t\\t本页<font color=' + color + '>' + videoArray.length + '</font>条数据\\t\\t\\tlimit:<font color=' + color + '>' + singleMax + '</font>\\t\\t\\t第<font color=\"red\">' + MY_PAGE_add + '</font>/<font color=' + color + '>' + maxPage + '</font>页',\r\n        url: $('#noLoading#').lazyRule(() => {\r\n            return $.require(\"hiker://page/api?rule=图册\").refreshPageNum();\r\n        }),\r\n        img: 'https://hikerfans.com/tubiao/q/49.png@Referer=',\r\n        col_type: 'avatar',\r\n        extra: {\r\n            longClick: $.require(\"hiker://page/api?rule=图册\").long_click_pageBtn(MY_PAGE_add)\r\n        }\r\n    });\r\n    // 修改前面图片的数量统计\r\n    eval($.require(\"hiker://page/api?rule=图册\").refreshPicArrayNum());\r\n    videoArray.forEach(item => {\r\n        link = item.link;\r\n        group = item.group;\r\n        if (link.match(/-dir/)) {\r\n            shwoUrl = item.link.split('-dir')[0];\r\n            if (link.match(/-u=/)) {\r\n                showPic = item.link.split('-u=')[1] + '@Referer=';\r\n            }else{\r\n                if (link.match(/-r=/)) {\r\n                    showPic = item.link.split('#isVideo=true#')[0] + '@Referer='+item.link.split('-r=')[1];\r\n                }else{\r\n                    showPic = item.link.split('#isVideo=true#')[0] + '@Referer=';\r\n                }\r\n            }\r\n        } else {\r\n            lazy = $(\"\").lazyRule(() => {\r\n                return $.require('hiker://page/globalParse?rule=道长仓库Pro').lazyParse(input);\r\n            });\r\n            shwoUrl = item.link.split('#isVideo=true#')[0] + lazy;\r\n            showPic = item.link.split('#isVideo=true#')[1] + '@Referer=';\r\n        }\r\n        d.push({\r\n            title: item.title,\r\n            desc: getMyVar('isChoose_' + show_Index, 'no') == 'yes' ? '✅' : (showType.match(/card/) ? 0 + '' : (showType == 'pic_1' || showType.match(/movie_1/) ? '#' + item.group + '\\t\\t' + item.date : show_Index + '')),\r\n            url: $('#noLoading#').lazyRule((index, item, showType) => {\r\n                selectArray = JSON.parse(getMyVar('selectArray', '[]'));\r\n                if (getMyVar('isChoose_' + index, 'no') == 'yes') {\r\n                    selectNum = Number(getMyVar('selectNum', '0')) - 1;\r\n                    selectArray.pop(item);\r\n                    putMyVar('selectArray', selectArray);\r\n                    putMyVar('selectNum', selectNum);\r\n                    putMyVar('isChoose_' + index, 'no');\r\n                } else {\r\n                    selectNum = Number(getMyVar('selectNum', '0')) + 1;\r\n                    selectArray.push(item);\r\n                    putMyVar('selectArray', selectArray);\r\n                    putMyVar('selectNum', selectNum);\r\n                    putMyVar('isChoose_' + index, 'yes');\r\n                }\r\n                updateItem('selfMap' + index, {\r\n                    desc: getMyVar('isChoose_' + index, 'no') == 'yes' ? '✅' : (getMyVar('isChoose_' + index, 'no') == 'yes' ? '✅' : (showType.match(/card/) ? 0 + '' : (showType == 'pic_1' || showType.match(/movie_1/) ? '#' + item.group + '\\t\\t' + item.date : index + ''))),\r\n                });\r\n                return 'hiker://empty'\r\n            }, (pic_len + show_Index), item, showType),\r\n            img: showPic,\r\n            col_type: showType,\r\n            extra: {\r\n                id: 'selfMap' + (pic_len + show_Index),\r\n                longClick: $.require(\"hiker://page/api?rule=图册\").long_click_binPage(group, link,'select',item)\r\n            }\r\n        });\r\n        show_Index++;\r\n    })\r\n    if (MY_PAGE_add <= maxPage) {\r\n        d.push({\r\n            title: \"““””<small><font color='gray'>—\" + MY_PAGE_add + \"—</font></small>\",\r\n            url: 'hiker://empty',\r\n            col_type: 'text_center_1'\r\n        });\r\n    }\r\n} else {\r\n    videoArray = [];\r\n    // 图片序号\r\n    show_Index = (MY_PAGE_add - 1) * singleMax + 1;\r\n    d.push({\r\n        title: '<b>图片</b>',\r\n        url: $('#noLoading#').lazyRule(() => {\r\n            return $.require(\"hiker://page/api?rule=图册\").refreshPageNum();\r\n        }),\r\n        img: 'https://hikerfans.com/tubiao/more/39.png@Referer=',\r\n        col_type: 'avatar',\r\n        extra: {\r\n            id: 'picArray_show',\r\n            longClick: $.require(\"hiker://page/api?rule=图册\").long_click_pageBtn(MY_PAGE_add)\r\n        }\r\n    });\r\n    putMyVar('indexOfArray', d.length - 1);\r\n    showImg.forEach(item => {\r\n        if (item.link.match(/#isVideo=true#/)) {\r\n            videoArray.push(item);\r\n        } else {\r\n            link = item.link;\r\n            group = item.group;\r\n            title = item.title;\r\n            shwoUrl = \"pics://\" + item.link;\r\n            if (link.match(/http/)) {\r\n                showPic=link + '@Referer=';\r\n            }else{\r\n                showPic=link\r\n            }\r\n            d.push({\r\n                title: item.title,\r\n                desc: getMyVar('isChoose_' + show_Index, 'no') == 'yes' ? '✅' : (showType.match(/card/) ? 0 + '' : (showType == 'pic_1' || showType.match(/movie_1/) ? '#' + item.group + '\\t\\t' + item.date : show_Index + '')),\r\n                url: $('#noLoading#').lazyRule((index, item, showType) => {\r\n                    return $.require(\"hiker://page/api?rule=图册\").CheckGroup(index, item, showType)\r\n                }, show_Index, item, showType),\r\n                img: showPic,\r\n                col_type: showType,\r\n                extra: {\r\n                    id: 'selfMap' + show_Index,\r\n                    longClick: $.require(\"hiker://page/api?rule=图册\").long_click_truePage(title, link, group,'select',item)\r\n                }\r\n            });\r\n            show_Index++;\r\n        }\r\n    })\r\n    d.push({\r\n        url: 'hiker://empty',\r\n        col_type: 'line'\r\n    }, {\r\n        title: '<b>视频</b>\\t\\t\\t本页<font color=' + color + '>' + videoArray.length + '</font>条数据\\t\\t\\tlimit:<font color=' + color + '>' + singleMax + '</font>\\t\\t\\t第<font color=\"red\">' + MY_PAGE_add + '</font>/<font color=' + color + '>' + maxPage + '</font>页',\r\n        url: $('#noLoading#').lazyRule(() => {\r\n            return $.require(\"hiker://page/api?rule=图册\").refreshPageNum();\r\n        }),\r\n        img: 'https://hikerfans.com/tubiao/q/49.png@Referer=',\r\n        col_type: 'avatar',\r\n        extra: {\r\n            longClick: $.require(\"hiker://page/api?rule=图册\").long_click_pageBtn(MY_PAGE_add)\r\n        }\r\n    });\r\n    // 修改前面图片的数量统计\r\n    eval($.require(\"hiker://page/api?rule=图册\").refreshPicArrayNum());\r\n    videoArray.forEach(item => {\r\n        lazy = $(\"\").lazyRule(() => {\r\n            return $.require('hiker://page/globalParse?rule=道长仓库Pro').lazyParse(input);\r\n        });\r\n        link = item.link;\r\n        group = item.group;\r\n        title = item.title;\r\n        if (link.match(/-dir/)) {\r\n            if (link.match(/-u=/)) {\r\n                showPic = item.link.split('-u=')[1] + '@Referer=';\r\n            }else{\r\n                if (link.match(/-r=/)) {\r\n                    showPic = item.link.split('#isVideo=true#')[0] + '@Referer='+item.link.split('-r=')[1];\r\n                }else{\r\n                    showPic = item.link.split('#isVideo=true#')[0] + '@Referer=';\r\n                }\r\n            }\r\n        } else {\r\n            showPic = item.link.split('#isVideo=true#')[1] + '@Referer=';\r\n        }\r\n        d.push({\r\n            title: item.title,\r\n            desc: getMyVar('isChoose_' + show_Index, 'no') == 'yes' ? '✅' : (showType.match(/card/) ? 0 + '' : (showType == 'pic_1' || showType.match(/movie_1/) ? '#' + item.group + '\\t\\t' + item.date : show_Index + '')),\r\n            url: $('#noLoading#').lazyRule((index, item, showType) => {\r\n                return $.require(\"hiker://page/api?rule=图册\").CheckGroup(index, item, showType)\r\n            }, (pic_len + show_Index), item, showType),\r\n            img: showPic,\r\n            col_type: showType,\r\n            extra: {\r\n                id: 'selfMap' + (pic_len + show_Index),\r\n                longClick: $.require(\"hiker://page/api?rule=图册\").long_click_truePage(title, link, group,'select',item,'video')\r\n            }\r\n        });\r\n        show_Index++;\r\n    })\r\n    if (MY_PAGE_add <= maxPage) {\r\n        d.push({\r\n            title: \"““””<small><font color='gray'>—\" + MY_PAGE_add + \"—</font></small>\",\r\n            url: 'hiker://empty',\r\n            col_type: 'text_center_1'\r\n        });\r\n    }\r\n}\r\n"},{"col_type":"movie_3","name":"设置页面","path":"setting","rule":"js:\nvar d = [];\nd.push({\n    title: '<font color=#20b2aa> 侠名：你好呀，朋友...</font>',\n    img: 'https://lanmeiguojiang.com/tubiao/messy/19.svg@Referer=',\n    url: $('#noLoading#').lazyRule(() => {\n        return $.require(\"hiker://page/api?rule=图册\").rootFun()\n    }),\n    col_type: 'avatar',\n    extra: {\n        id: 'root'\n    }\n}, {\n    title: '上锁',\n    desc: '给指定相册添加密码锁',\n    url: $('#noLoading#').lazyRule(() => {\n        return $.require(\"hiker://page/api?rule=图册\").lockUp()\n    }),\n    col_type: 'text_1'\n}, {\n    title: '设置或修改密码',\n    desc: '设置用户密码以开启条件检索、相册加密等功能',\n    url: $('#noLoading#').lazyRule(() => {\n        return $.require(\"hiker://page/api?rule=图册\").setPassword()\n    }),\n    col_type: 'text_1'\n}, {\n    title: '清空回收站',\n    desc: '定期清理，谨慎操作',\n    url: $('#noLoading#').lazyRule(() => {\n        return $.require(\"hiker://page/api?rule=图册\").clearBin()\n    }),\n    col_type: 'text_1'\n}, {\n    title: '图册去重',\n    desc: ' 定期去重，良好习惯（回收站不参与去重）',\n    url: $('#noLoading#').lazyRule(() => {\n        return $.require(\"hiker://page/api?rule=图册\").dedup()\n    }),\n    col_type: 'text_1'\n}, {\n    title: '返回主页并刷新',\n    url: $('#noLoading#').lazyRule(() => {\n        // 留意一下刷新还需要那些操作\n        back(true);\n        return \"toast://主页刷新成功~\";\n    }),\n    col_type: 'text_center_1'\n})\nsetResult(d);"},{"col_type":"movie_3","name":"概览","path":"overview","rule":"if (Select_group == '🗑️') {\r\n    videoArray = [];\r\n    // 图片序号\r\n    show_Index = (MY_PAGE_add - 1) * singleMax + 1;\r\n    d.push({\r\n        title: '<b>图片</b>',\r\n        url: $('#noLoading#').lazyRule(() => {\r\n            return $.require(\"hiker://page/api?rule=图册\").refreshPageNum();\r\n        }),\r\n        img: 'https://hikerfans.com/tubiao/more/39.png@Referer=',\r\n        col_type: 'avatar',\r\n        extra: {\r\n            id: 'picArray_show',\r\n            longClick: $.require(\"hiker://page/api?rule=图册\").long_click_pageBtn(MY_PAGE_add)\r\n        }\r\n    });\r\n    putMyVar('indexOfArray', d.length - 1);\r\n    showImg.forEach(item => {\r\n        if (item.link.match(/#isVideo=true#/)) {\r\n            videoArray.push(item);\r\n        } else {\r\n            link = item.link;\r\n            group = item.group;\r\n            shwoUrl = \"pics://\" + link;\r\n            if (link.match(/http/)) {\r\n                showPic = link + '@Referer=';\r\n            } else {\r\n                showPic = link\r\n            }\r\n            d.push({\r\n                title: item.title,\r\n                desc: showType.match(/card/) ? 0 + '' : (showType == 'pic_1' || showType.match(/movie_1/) ? '#' + item.group + '\\t\\t' + item.date : show_Index + ''),\r\n                url: shwoUrl,\r\n                img: showPic,\r\n                col_type: showType,\r\n                extra: {\r\n                    id: 'selfMap' + show_Index,\r\n                    longClick: $.require(\"hiker://page/api?rule=图册\").long_click_binPage(group, link)\r\n                }\r\n            });\r\n            show_Index++;\r\n        }\r\n    })\r\n    d.push({\r\n        url: 'hiker://empty',\r\n        col_type: 'line'\r\n    }, {\r\n        title: '<b>视频</b>\\t\\t\\t本页<font color=' + color + '>' + videoArray.length + '</font>条数据\\t\\t\\tlimit:<font color=' + color + '>' + singleMax + '</font>\\t\\t\\t第<font color=\"red\">' + MY_PAGE_add + '</font>/<font color=' + color + '>' + maxPage + '</font>页',\r\n        url: $('#noLoading#').lazyRule(() => {\r\n            return $.require(\"hiker://page/api?rule=图册\").refreshPageNum();\r\n        }),\r\n        img: 'https://hikerfans.com/tubiao/q/49.png@Referer=',\r\n        col_type: 'avatar',\r\n        extra: {\r\n            longClick: $.require(\"hiker://page/api?rule=图册\").long_click_pageBtn(MY_PAGE_add)\r\n        }\r\n    });\r\n    // 修改前面图片的数量统计\r\n    eval($.require(\"hiker://page/api?rule=图册\").refreshPicArrayNum());\r\n    videoArray.forEach(item => {\r\n        link = item.link;\r\n        group = item.group;\r\n        if (link.match(/-dir/)) {\r\n            shwoUrl = item.link.split('-dir')[0];\r\n            if (link.match(/-u=/)) {\r\n                showPic = item.link.split('-u=')[1] + '@Referer=';\r\n            }else{\r\n                if (link.match(/-r=/)) {\r\n                    showPic = item.link.split('#isVideo=true#')[0] + '@Referer='+item.link.split('-r=')[1];\r\n                }else{\r\n                    showPic = item.link.split('#isVideo=true#')[0] + '@Referer=';\r\n                }\r\n            }\r\n        } else {\r\n            lazy = $(\"\").lazyRule(() => {\r\n                return $.require('hiker://page/globalParse?rule=道长仓库Pro').lazyParse(input);\r\n            });\r\n            shwoUrl = item.link.split('#isVideo=true#')[0] + lazy;\r\n            showPic = item.link.split('#isVideo=true#')[1] + '@Referer=';\r\n        }\r\n        d.push({\r\n            title: item.title,\r\n            desc: showType.match(/card/) ? 0 + '' : (showType == 'pic_1' || showType.match(/movie_1/) ? '#' + item.group + '\\t\\t' + item.date : show_Index + ''),\r\n            url: shwoUrl,\r\n            img: showPic,\r\n            col_type: showType,\r\n            extra: {\r\n                id: 'selfMap' + (pic_len + show_Index),\r\n                longClick: $.require(\"hiker://page/api?rule=图册\").long_click_binPage(group, link)\r\n            }\r\n        });\r\n        show_Index++;\r\n    })\r\n    if (MY_PAGE_add <= maxPage) {\r\n        d.push({\r\n            title: \"““””<small><font color='gray'>—\" + MY_PAGE_add + \"—</font></small>\",\r\n            url: 'hiker://empty',\r\n            col_type: 'text_center_1'\r\n        });\r\n    }\r\n} else {\r\n    videoArray = [];\r\n    // 图片序号\r\n    show_Index = (MY_PAGE_add - 1) * singleMax + 1;\r\n    d.push({\r\n        title: '<b>图片</b>',\r\n        url: $('#noLoading#').lazyRule(() => {\r\n            return $.require(\"hiker://page/api?rule=图册\").refreshPageNum();\r\n        }),\r\n        img: 'https://hikerfans.com/tubiao/more/39.png@Referer=',\r\n        col_type: 'avatar',\r\n        extra: {\r\n            id: 'picArray_show',\r\n            longClick: $.require(\"hiker://page/api?rule=图册\").long_click_pageBtn(MY_PAGE_add)\r\n        }\r\n    });\r\n    putMyVar('indexOfArray', d.length - 1);\r\n    showImg.forEach(item => {\r\n        if (item.link.match(/#isVideo=true#/)) {\r\n            videoArray.push(item);\r\n        } else {\r\n            link = item.link;\r\n            group = item.group;\r\n            title = item.title;\r\n            shwoUrl = \"pics://\" + item.link;\r\n            if (link.match(/http/)) {\r\n                showPic = link + '@Referer=';\r\n            } else {\r\n                showPic = link\r\n            }\r\n            d.push({\r\n                title: item.title,\r\n                desc: showType.match(/card/) ? 0 + '' : (showType == 'pic_1' || showType.match(/movie_1/) ? '#' + item.group + '\\t\\t' + item.date : show_Index + ''),\r\n                url: shwoUrl,\r\n                img: showPic,\r\n                col_type: showType,\r\n                extra: {\r\n                    id: 'selfMap' + show_Index,\r\n                    longClick: $.require(\"hiker://page/api?rule=图册\").long_click_truePage(title, link, group)\r\n                }\r\n            });\r\n            show_Index++;\r\n        }\r\n    })\r\n    d.push({\r\n        url: 'hiker://empty',\r\n        col_type: 'line'\r\n    }, {\r\n        title: '<b>视频</b>\\t\\t\\t本页<font color=' + color + '>' + videoArray.length + '</font>条数据\\t\\t\\tlimit:<font color=' + color + '>' + singleMax + '</font>\\t\\t\\t第<font color=\"red\">' + MY_PAGE_add + '</font>/<font color=' + color + '>' + maxPage + '</font>页',\r\n        url: $('#noLoading#').lazyRule(() => {\r\n            return $.require(\"hiker://page/api?rule=图册\").refreshPageNum();\r\n        }),\r\n        img: 'https://hikerfans.com/tubiao/q/49.png@Referer=',\r\n        col_type: 'avatar',\r\n        extra: {\r\n            longClick: $.require(\"hiker://page/api?rule=图册\").long_click_pageBtn(MY_PAGE_add)\r\n        }\r\n    });\r\n    // 修改前面图片的数量统计\r\n    eval($.require(\"hiker://page/api?rule=图册\").refreshPicArrayNum());\r\n    videoArray.forEach(item => {\r\n        link = item.link;\r\n        group = item.group;\r\n        title = item.title;\r\n        if (link.match(/-dir/)) {\r\n            shwoUrl = item.link.split('-dir')[0];\r\n            if (link.match(/-u=/)) {\r\n                showPic = item.link.split('-u=')[1] + '@Referer=';\r\n            }else{\r\n                if (link.match(/-r=/)) {\r\n                    showPic = item.link.split('#isVideo=true#')[0] + '@Referer='+item.link.split('-r=')[1];\r\n                }else{\r\n                    showPic = item.link.split('#isVideo=true#')[0] + '@Referer=';\r\n                }\r\n            }\r\n        } else {\r\n            lazy = $(\"\").lazyRule(() => {\r\n                return $.require('hiker://page/globalParse?rule=道长仓库Pro').lazyParse(input);\r\n            });\r\n            shwoUrl = item.link.split('#isVideo=true#')[0] + lazy;\r\n            showPic = item.link.split('#isVideo=true#')[1] + '@Referer=';\r\n        }\r\n        d.push({\r\n            title: item.title,\r\n            desc: showType.match(/card/) ? 0 + '' : (showType == 'pic_1' || showType.match(/movie_1/) ? '#' + item.group + '\\t\\t' + item.date : show_Index + ''),\r\n            url: shwoUrl,\r\n            img: showPic,\r\n            col_type: showType,\r\n            extra: {\r\n                id: 'selfMap' + (pic_len + show_Index),\r\n                longClick: $.require(\"hiker://page/api?rule=图册\").long_click_truePage(title, link, group, 'video')\r\n            }\r\n        });\r\n        show_Index++;\r\n    })\r\n    if (MY_PAGE_add <= maxPage) {\r\n        d.push({\r\n            title: \"““””<small><font color='gray'>—\" + MY_PAGE_add + \"—</font></small>\",\r\n            url: 'hiker://empty',\r\n            col_type: 'text_center_1'\r\n        });\r\n    }\r\n}\r\n"}],"title":"图册","author":"cy","version":22,"type":"tool","url":"hiker://empty##fypage","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:$.require(\"hiker://page/homePage\")","searchFind":"","search_url":"","group":"⑦工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"函数工具箱\",\"path\":\"api\",\"rule\":\"// 一、工具类封装 \\n// 获取当前时间\\n$.exports.getCurrentDate = function (format) {\\n    var now = new Date();\\n    var year = now.getFullYear(); //得到年份\\n    var month = now.getMonth(); //得到月份\\n    var date = now.getDate(); //得到日期\\n    var day = now.getDay(); //得到周几\\n    var hour = now.getHours(); //得到小时\\n    var minu = now.getMinutes(); //得到分钟\\n    var sec = now.getSeconds(); //得到秒\\n    month = month + 1;\\n    if (month < 10) month = \\\"0\\\" + month;\\n    if (date < 10) date = \\\"0\\\" + date;\\n    if (hour < 10) hour = \\\"0\\\" + hour;\\n    if (minu < 10) minu = \\\"0\\\" + minu;\\n    if (sec < 10) sec = \\\"0\\\" + sec;\\n    var time = \\\"\\\";\\n    //精确到天\\n    if (format == 1) {\\n        time = year + \\\"年\\\" + month + \\\"月\\\" + date + \\\"日\\\";\\n    }\\n    //精确到分\\n    else if (format == 2) {\\n        time = year + \\\"-\\\" + month + \\\"-\\\" + date + \\\" \\\" + hour + \\\":\\\" + minu + \\\":\\\" + sec;\\n    }\\n    return time;\\n}\\n// 注册重写Array对象的indexOf和remove方法\\n$.exports.overwriteArray = function () {\\n    Array.prototype.indexOf = function (val) {\\n        for (var i = 0; i < this.length; i++) {\\n            if (this[i].link == val) return i;\\n        }\\n        return -1;\\n    };\\n    Array.prototype.remove = function (val) {\\n        var index = this.indexOf(val);\\n        if (index > -1) {\\n            this.splice(index, 1);\\n        }\\n    };\\n}\\n\\n\\n// 二、功能类函数封装\\n// 预处理\\n$.exports.pretreatment = function () {\\n    if (fileExist('hiker://files/cache/PhotoAlbum_temp.json')) {\\n        saveFile('hiker://files/cache/PhotoAlbum_temp.json', '你想干嘛！');\\n    }\\n    if (!fileExist('hiker://files/rules/cy/PhotoAlbum.json')) {\\n        date = $.require(\\\"hiker://page/api?rule=图册\\\").getCurrentDate(1);\\n        PhotoAlbum = {\\n            \\\"相册\\\": {\\n                \\\"gif壁纸\\\": [{\\n                    link: 'https://p0.meituan.net/csc/d797e865aaa4334699479c2fef6cab181597933.gif',\\n                    date: date,\\n                    title: '熊猫吃竹子',\\n                    group: 'gif壁纸'\\n                }, {\\n                    link: 'https://alifei03.cfp.cn/creative/vcg/nowater800/new/VCG211293929470.gif',\\n                    date: date,\\n                    title: '摇尾狗',\\n                    group: 'gif壁纸'\\n                }, {\\n                    link: 'https://tenfei04.cfp.cn/creative/vcg/nowarter800/new/VCG211178908145.gif',\\n                    date: date,\\n                    title: '荡秋千',\\n                    group: 'gif壁纸'\\n                }, {\\n                    link: 'https://tenfei03.cfp.cn/creative/vcg/nowarter800/new/VCG211229245788.gif',\\n                    date: date,\\n                    title: '夜间动图',\\n                    group: 'gif壁纸'\\n                }, {\\n                    link: 'https://alifei01.cfp.cn/creative/vcg/nowarter800/new/VCG211223467674.gif',\\n                    date: date,\\n                    title: '夜月',\\n                    group: 'gif壁纸'\\n                }, {\\n                    link: 'https://tenfei04.cfp.cn/creative/vcg/nowarter800/new/VCG211151553894.gif',\\n                    date: date,\\n                    title: '注意力',\\n                    group: 'gif壁纸'\\n                }, {\\n                    link: 'https://alifei04.cfp.cn/creative/vcg/nowarter800/new/VCG211166346104.gif',\\n                    date: date,\\n                    title: '夜鸦',\\n                    group: 'gif壁纸'\\n                }, {\\n                    link: 'https://tenfei02.cfp.cn/creative/vcg/nowarter800/new/VCG211151545477.gif',\\n                    date: date,\\n                    title: '江河流动',\\n                    group: 'gif壁纸'\\n                }, {\\n                    link: 'https://alifei02.cfp.cn/creative/vcg/nowarter800/new/VCG211151550604.gif',\\n                    date: date,\\n                    title: '海滩阅读',\\n                    group: 'gif壁纸'\\n                }, {\\n                    link: 'https://alifei02.cfp.cn/creative/vcg/nowarter800/new/VCG211151555608.gif',\\n                    date: date,\\n                    title: '打水漂',\\n                    group: 'gif壁纸'\\n                }, {\\n                    link: 'https://tenfei05.cfp.cn/creative/vcg/nowarter800/new/VCG211166359866.gif',\\n                    title: \\\"\\\",\\n                    date: date,\\n                    title: '海滩白鹭',\\n                    group: 'gif壁纸'\\n                }, {\\n                    link: 'https://tenfei03.cfp.cn/creative/vcg/nowarter800/new/VCG211166304561.gif',\\n                    title: \\\"\\\",\\n                    date: date,\\n                    title: '招手蝴蝶-动物友谊',\\n                    group: 'gif壁纸'\\n                }, {\\n                    link: 'https://alifei04.cfp.cn/creative/vcg/nowater800/new/VCG211370485521.gif',\\n                    date: date,\\n                    title: '区块链-科技',\\n                    group: 'gif壁纸'\\n                }, {\\n                    link: 'https://alifei04.cfp.cn/creative/vcg/nowater800/new/VCG211370483714.gif',\\n                    date: date,\\n                    title: '魔方-科技',\\n                    group: 'gif壁纸'\\n                }, {\\n                    link: 'https://tenfei02.cfp.cn/creative/vcg/nowater800/new/VCG211366094791.gif',\\n                    date: date,\\n                    title: '科技感十足',\\n                    group: 'gif壁纸'\\n                }, {\\n                    link: 'https://tenfei01.cfp.cn/creative/vcg/nowater800/new/VCG211345500353.gif',\\n                    date: date,\\n                    title: '辅导功课',\\n                    group: 'gif壁纸'\\n                }]\\n            },\\n            \\\"回收站\\\": [],\\n            \\\"keyMap\\\": {},\\n            \\\"isSecret\\\": 'yes',\\n            \\\"singleMax\\\": 30,\\n            \\\"showType\\\": 'pic_2',\\n            \\\"user_password\\\": ''\\n        };\\n        saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n    }\\n}\\n// 检索\\n$.exports.search = function () {\\n    if (input == '') {\\n        return 'toast://检索关键字不能为空'\\n    } else {\\n        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n        if (PhotoAlbum.isSecret == 'yes') {\\n            if (PhotoAlbum.user_password == '') {\\n                return $('', '请设置用户密码(请牢记)').input(() => {\\n                    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                    PhotoAlbum.user_password = base64Encode(base64Encode(input));\\n                    saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                })\\n            } else {\\n                return $('', '请输入密码').input(() => {\\n                    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                    if (input == base64Decode(base64Decode(PhotoAlbum.user_password))) {\\n                        putMyVar('currentPage', 'search_res');\\n                        refreshPage(true);\\n                        return 'hiker://empty';\\n                    } else {\\n                        return 'toast://密码错误！'\\n                    }\\n                })\\n            }\\n        } else {\\n            putMyVar('currentPage', 'search_res');\\n            refreshPage(true);\\n            return 'hiker://empty';\\n        }\\n    }\\n}\\n// 切换分组\\n$.exports.SwitchGroup = function (item) {\\n    // 监听刷新事件没效就手动触发吧\\n    clearMyVar('selectArray');\\n    clearMyVar('selectNum');\\n    clearMyVar('selectGroup');\\n    clearMyVar('currentPage');\\n    clearMyVar('isOpen_🗑️');\\n    clearMyVar('addSwitch');\\n    // 页码处理\\n    clearMyVar('thePageNum');\\n    putMyVar('lastPage', '1');\\n    // clearMyVar('editor_mode');不要清除编辑模式记录\\n    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n    for (i in PhotoAlbum.相册) {\\n        clearMyVar('isOpen_' + i);\\n    }\\n    // 直接清除全部最大可能的index\\n    showImg = [];\\n    keyArray = [];\\n    for (i in PhotoAlbum.keyMap) {\\n        keyArray.push(i);\\n    }\\n    for (group in PhotoAlbum.相册) {\\n        if (!keyArray.includes(group)) {\\n            showImg = showImg.concat(PhotoAlbum.相册[group]);\\n        }\\n    }\\n    maxNum = showImg.length;\\n    for (let index = 1; index <= maxNum; index++) {\\n        clearMyVar('isChoose_' + index);\\n    }\\n    // log('清除index的数量:' + maxNum);\\n    putMyVar(\\\"Select_group\\\", item);\\n    refreshPage();\\n    return 'hiker://empty'\\n}\\n// 分组更名\\n$.exports.reGroupName = function (item) {\\n    groupFuns = ['全部', '🗑️', '➕', '➖'];\\n    if (groupFuns.includes(item)) {\\n        return 'toast://不能操作不存在的相册！'\\n    }\\n    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n    if (PhotoAlbum.isSecret == 'yes') {\\n        keyArray = [];\\n        for (i in PhotoAlbum.keyMap) {\\n            keyArray.push(i);\\n        }\\n        if (keyArray.includes(item)) {\\n            return $('', item + '图册|设有密码').input((group) => {\\n                PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                keyMap = PhotoAlbum.keyMap;\\n                password = base64Decode(base64Decode(keyMap[group]));\\n                if (input == password) {\\n                    return $('', '相册重命名').input((group) => {\\n                        groupFuns = ['全部', '🗑️', '➕', '➖'];\\n                        if (groupFuns.includes(input)) {\\n                            return 'toast://相册名不能是关键字！';\\n                        }\\n                        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                        // 日志备份\\n                        saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                        // 数据转移_同时完成分组信息的修改_并注意相册合并\\n                        if (PhotoAlbum.相册[input] == undefined) {\\n                            PhotoAlbum.相册[input] = [];\\n                        }\\n                        PhotoAlbum.相册[input] = PhotoAlbum.相册[group].map((item) => {\\n                            item.group = input;\\n                            return item;\\n                        }).concat(PhotoAlbum.相册[input]);\\n                        PhotoAlbum.keyMap[input] = PhotoAlbum.keyMap[group];\\n                        // 删除原相册数据\\n                        delete PhotoAlbum.相册[group];\\n                        delete PhotoAlbum.keyMap[group];\\n                        saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                        clearMyVar('selectNum');\\n                        clearMyVar('selectArray');\\n                        for (var group in PhotoAlbum.相册) {\\n                            clearMyVar('isChoose_' + group);\\n                        }\\n                        putMyVar('Select_group', input);\\n                        refreshPage(true);\\n                        return \\\"toast://该加密相册已改名~\\\";\\n                    }, group)\\n                } else {\\n                    return 'toast://密码错误！'\\n                }\\n            }, item)\\n        } else {\\n            return $('', '相册重命名').input((group) => {\\n                groupFuns = ['全部', '🗑️', '➕', '➖'];\\n                if (groupFuns.includes(input)) {\\n                    return 'toast://相册名不能是关键字！';\\n                }\\n                PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                // 日志备份\\n                saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                // 数据转移_同时完成分组信息的修改_并注意相册合并\\n                if (PhotoAlbum.相册[input] == undefined) {\\n                    PhotoAlbum.相册[input] = [];\\n                }\\n                PhotoAlbum.相册[input] = PhotoAlbum.相册[group].map((item) => {\\n                    item.group = input;\\n                    return item;\\n                }).concat(PhotoAlbum.相册[input]);\\n                PhotoAlbum.keyMap[input] = PhotoAlbum.keyMap[group];\\n                // 删除原相册数据\\n                delete PhotoAlbum.相册[group];\\n                delete PhotoAlbum.keyMap[group];\\n                saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                clearMyVar('selectNum');\\n                clearMyVar('selectArray');\\n                for (i in PhotoAlbum.相册) {\\n                    clearMyVar('isChoose_' + i);\\n                }\\n                putMyVar('Select_group', input);\\n                refreshPage(true);\\n                return \\\"toast://该相册已改名~\\\";\\n            }, item)\\n        }\\n    } else {\\n        return $('', '相册重命名').input((group) => {\\n            groupFuns = ['全部', '🗑️', '➕', '➖'];\\n            if (groupFuns.includes(input)) {\\n                return 'toast://相册名不能是关键字！';\\n            }\\n            PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n            // 日志备份\\n            saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n            // 数据转移_同时完成分组信息的修改_并注意相册合并\\n            if (PhotoAlbum.相册[input] == undefined) {\\n                PhotoAlbum.相册[input] = [];\\n            }\\n            PhotoAlbum.相册[input] = PhotoAlbum.相册[group].map((item) => {\\n                item.group = input;\\n                return item;\\n            }).concat(PhotoAlbum.相册[input]);\\n            PhotoAlbum.keyMap[input] = PhotoAlbum.keyMap[group];\\n            // 删除原相册数据\\n            delete PhotoAlbum.相册[group];\\n            delete PhotoAlbum.keyMap[group];\\n            saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n            clearMyVar('selectNum');\\n            clearMyVar('selectArray');\\n            for (i in PhotoAlbum.相册) {\\n                clearMyVar('isChoose_' + i);\\n            }\\n            putMyVar('Select_group', input);\\n            refreshPage(true);\\n            return \\\"toast://该相册已改名~\\\";\\n        }, item)\\n    }\\n}\\n// 删除分组\\n$.exports.deleteGroup = function (item) {\\n    groupFuns = ['全部', '🗑️', '➕', '➖'];\\n    if (groupFuns.includes(item)) {\\n        return 'toast://不能操作不存在的相册！'\\n    }\\n    return $('你确定要删除该相册吗？').confirm((item) => {\\n        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n        if (PhotoAlbum.isSecret == 'yes') {\\n            keyArray = [];\\n            for (i in PhotoAlbum.keyMap) {\\n                keyArray.push(i);\\n            }\\n            if (keyArray.includes(item)) {\\n                return $('', item + '图册|设有密码').input((group) => {\\n                    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                    keyMap = PhotoAlbum.keyMap;\\n                    password = base64Decode(base64Decode(keyMap[group]));\\n                    if (input == password) {\\n                        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                        // 日志备份\\n                        saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                        delete PhotoAlbum.相册[group];\\n                        // 清除密钥对\\n                        delete PhotoAlbum.keyMap[group];\\n                        saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                        selectNum = getMyVar('selectNum', '0');\\n                        clearMyVar('selectNum');\\n                        clearMyVar('selectArray');\\n                        putMyVar('Select_group', '全部');\\n                        refreshPage(true);\\n                        return \\\"toast://该加密相册已删除~\\\";\\n                    } else {\\n                        return 'toast://密码错误！'\\n                    }\\n                }, item);\\n            } else {\\n                // 日志备份\\n                saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                // 放入回收站\\n                date = $.require(\\\"hiker://page/api?rule=图册\\\").getCurrentDate(1);\\n                PhotoAlbum.相册[item].forEach(item => {\\n                    item.date = date;\\n                });\\n                PhotoAlbum.回收站 = PhotoAlbum.相册[item].concat(PhotoAlbum.回收站);\\n                // 删除相册\\n                delete PhotoAlbum.相册[item];\\n                saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                putMyVar('Select_group', '全部');\\n                refreshPage(true);\\n                return \\\"toast://删除成功~\\\";\\n            }\\n        } else {\\n            // 日志备份\\n            saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n            // 放入回收站\\n            date = $.require(\\\"hiker://page/api?rule=图册\\\").getCurrentDate(1);\\n            PhotoAlbum.相册[item].forEach(item => {\\n                item.date = date;\\n            });\\n            PhotoAlbum.回收站 = PhotoAlbum.相册[item].concat(PhotoAlbum.回收站);\\n            // 删除相册\\n            delete PhotoAlbum.相册[item];\\n            saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n            putMyVar('Select_group', '全部');\\n            refreshPage(true);\\n            return \\\"toast://删除成功~\\\";\\n        }\\n    }, item)\\n}\\n// 导出IDM批文件\\n$.exports.toIDM = function (item) {\\n    groupFuns = ['全部', '🗑️', '➕', '➖'];\\n    if (groupFuns.includes(item)) {\\n        return 'toast://不能操作不存在的相册！'\\n    }\\n    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n    if (PhotoAlbum.isSecret == 'yes') {\\n        keyArray = [];\\n        for (i in PhotoAlbum.keyMap) {\\n            keyArray.push(i);\\n        }\\n        if (keyArray.includes(item)) {\\n            return $('', item + '图册|设有密码').input((group) => {\\n                PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                keyMap = PhotoAlbum.keyMap;\\n                password = base64Decode(base64Decode(keyMap[group]));\\n                if (input == password) {\\n                    var linkData = '';\\n                    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                    PhotoAlbum.相册[group].forEach(item => {\\n                        if (item.link.match(/#isVideo=true#/)) {\\n                            link = item.link.split('#isVideo=true#')[0];\\n                        } else {\\n                            link = item.link;\\n                        }\\n                        linkData = linkData + link + '\\\\n';\\n                    });\\n                    saveFile('hiker://files/cache/PhotoAlbum_' + group + '.txt', linkData);\\n                    return 'share://hiker://files/cache/PhotoAlbum_' + group + '.txt';\\n                } else {\\n                    return 'toast://密码错误！'\\n                }\\n            }, item);\\n        } else {\\n            var linkData = '';\\n            PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n            PhotoAlbum.相册[item].forEach(item => {\\n                if (item.link.match(/#isVideo=true#/)) {\\n                    link = item.link.split('#isVideo=true#')[0];\\n                } else {\\n                    link = item.link;\\n                }\\n                linkData = linkData + link + '\\\\n';\\n            });\\n            saveFile('hiker://files/cache/PhotoAlbum_' + item + '.txt', linkData);\\n            return 'share://hiker://files/cache/PhotoAlbum_' + item + '.txt';\\n        }\\n    } else {\\n        var linkData = '';\\n        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n        PhotoAlbum.相册[item].forEach(item => {\\n            if (item.link.match(/#isVideo=true#/)) {\\n                link = item.link.split('#isVideo=true#')[0];\\n            } else {\\n                link = item.link;\\n            }\\n            linkData = linkData + link + '\\\\n';\\n        });\\n        saveFile('hiker://files/cache/PhotoAlbum_' + item + '.txt', linkData);\\n        return 'share://hiker://files/cache/PhotoAlbum_' + item + '.txt';\\n    }\\n}\\n// 导出自定义批文件\\n$.exports.toSelfFile = function (item) {\\n    groupFuns = ['全部', '🗑️', '➕', '➖'];\\n    if (groupFuns.includes(item)) {\\n        return 'toast://不能操作不存在的相册！'\\n    }\\n    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n    if (PhotoAlbum.isSecret == 'yes') {\\n        keyArray = [];\\n        for (i in PhotoAlbum.keyMap) {\\n            keyArray.push(i);\\n        }\\n        if (keyArray.includes(item)) {\\n            return $('', item + '图册|设有密码').input((group) => {\\n                PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                keyMap = PhotoAlbum.keyMap;\\n                password = base64Decode(base64Decode(keyMap[group]));\\n                if (input == password) {\\n                    var linkData = '';\\n                    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                    PhotoAlbum.相册[group].forEach(item => {\\n                        if (item.link.match(/#isVideo=true#/)) {\\n                            link = item.link.split('#isVideo=true#')[0];\\n                        } else {\\n                            link = item.link;\\n                        }\\n                        linkData = linkData + item.title + ',' + link + '\\\\n';\\n                    });\\n                    saveFile('hiker://files/cache/PhotoAlbum_' + group + '.txt', linkData);\\n                    return 'share://hiker://files/cache/PhotoAlbum_' + group + '.txt';\\n                } else {\\n                    return 'toast://密码错误！'\\n                }\\n            }, item);\\n        } else {\\n            var linkData = '';\\n            PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n            PhotoAlbum.相册[item].forEach(item => {\\n                if (item.link.match(/#isVideo=true#/)) {\\n                    link = item.link.split('#isVideo=true#')[0];\\n                } else {\\n                    link = item.link;\\n                }\\n                linkData = linkData + item.title + ',' + link + '\\\\n';\\n            });\\n            saveFile('hiker://files/cache/PhotoAlbum_' + item + '.txt', linkData);\\n            return 'share://hiker://files/cache/PhotoAlbum_' + item + '.txt';\\n        }\\n    } else {\\n        var linkData = '';\\n        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n        PhotoAlbum.相册[item].forEach(item => {\\n            if (item.link.match(/#isVideo=true#/)) {\\n                link = item.link.split('#isVideo=true#')[0];\\n            } else {\\n                link = item.link;\\n            }\\n            linkData = linkData + item.title + ',' + link + '\\\\n';\\n        });\\n        saveFile('hiker://files/cache/PhotoAlbum_' + item + '.txt', linkData);\\n        return 'share://hiker://files/cache/PhotoAlbum_' + item + '.txt';\\n    }\\n}\\n// 分组长按事件-隐藏\\n$.exports.groupFun = function (item) {\\n    return [{\\n        title: '更名', js: $.toString((item) => {\\n            return $.require(\\\"hiker://page/api?rule=图册\\\").reGroupName(item)\\n        }, item)\\n    }, {\\n        title: '删除', js: $.toString((item) => {\\n            return $.require(\\\"hiker://page/api?rule=图册\\\").deleteGroup(item)\\n        }, item)\\n    }, {\\n        title: 'IDM批文件', js: $.toString((item) => {\\n            return $.require(\\\"hiker://page/api?rule=图册\\\").toIDM(item)\\n        }, item)\\n    }, {\\n        title: '自定义批文件', js: $.toString((item) => {\\n            return $.require(\\\"hiker://page/api?rule=图册\\\").toSelfFile(item)\\n        }, item)\\n    }];\\n}\\n// 概览/多选切换\\n$.exports.SwitchMode = function (MY_PAGE_add) {\\n    // 监听刷新事件没效就手动触发吧\\n    clearMyVar('selectArray');\\n    clearMyVar('selectNum');\\n    clearMyVar('selectGroup');\\n    clearMyVar('currentPage');\\n    clearMyVar('isOpen_🗑️');\\n    clearMyVar('addSwitch');\\n    // clearMyVar('editor_mode');不要清除编辑模式记录\\n    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n    for (i in PhotoAlbum.相册) {\\n        clearMyVar('isOpen_' + i);\\n    }\\n    // 直接清除全部最大可能的index\\n    showImg = [];\\n    keyArray = [];\\n    for (i in PhotoAlbum.keyMap) {\\n        keyArray.push(i);\\n    }\\n    for (group in PhotoAlbum.相册) {\\n        if (!keyArray.includes(group)) {\\n            showImg = showImg.concat(PhotoAlbum.相册[group]);\\n        }\\n    }\\n    maxNum = showImg.length;\\n    for (let index = 1; index <= maxNum; index++) {\\n        clearMyVar('isChoose_' + index);\\n    }\\n    // log('清除index的数量:' + maxNum);\\n    if (getMyVar('showPage', '🖼︎概览') == '🖼︎概览') {\\n        putMyVar('showPage', '☑️多选');\\n    } else {\\n        putMyVar('showPage', '🖼︎概览');\\n    }\\n    putMyVar('thePageNum', MY_PAGE_add);\\n    putMyVar('lastPage', '1');\\n    refreshPage(false);\\n    return 'toast://切换成功';\\n}\\n// 呈现样式切换\\n$.exports.switchShowType = function () {\\n    return $(['pic_2', 'movie_2', 'pic_1', 'pic_1_full', 'card_pic_1', 'card_pic_2', 'movie_1', 'movie_1_left_pic', 'card_pic_3', 'movie_3', 'movie_3_marquee', 'pic_2_card', 'pic_3', 'pic_3_square', 'icon_2', 'icon_2_round', 'icon_round_4', 'avatar'], 3, '样式列表').select(() => {\\n        if (getMyVar('showPage', '🖼︎概览') == '☑️多选') {\\n            banList = ['icon_round_4', 'pic_1_full', 'card_pic_1', 'pic_2_card', 'pic_3', 'pic_3_square', 'icon_2', 'icon_2_round', 'icon_round_4', 'card_pic_3'];\\n            if (banList.includes(input)) {\\n                return 'toast://☑️多选下严禁切换成该样式~';\\n            }\\n        }\\n        var PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n        PhotoAlbum.showType = input;\\n        saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n        clearMyVar('addSwitch');\\n        refreshPage(true);\\n        return 'toast://切换成功~';\\n    })\\n}\\n// 新增图片\\n$.exports.addNewPic = function () {\\n    if (getMyVar('addSwitch', 'fold') == 'fold') {\\n        newArray = [{\\n            desc: '请输入标题，一行一条',\\n            col_type: 'input',\\n            extra: {\\n                titleVisible: false,\\n                type: 'textarea',\\n                height: -1,\\n                highlight: true,\\n                onChange: \\\"putMyVar('titleArray',input)\\\",\\n                cls: 'addMorePhotos'\\n            }\\n        }, {\\n            desc: '请输入链接，一行一条',\\n            col_type: 'input',\\n            extra: {\\n                titleVisible: false,\\n                type: 'textarea',\\n                height: -1,\\n                highlight: true,\\n                onChange: \\\"putMyVar('linkArray',input)\\\",\\n                cls: 'addMorePhotos'\\n            }\\n        }, {\\n            title: '当前选中分组：' + getMyVar('selectGroup', '未分组'),\\n            url: $('hiker://empty#noLoading#').lazyRule(() => {\\n                PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                groupArray = [];\\n                for (var group in PhotoAlbum.相册) {\\n                    groupArray.push(group);\\n                }\\n                return $(groupArray, 3, '样式列表').select(() => {\\n                    putMyVar('selectGroup', input)\\n                    updateItem('group_btn', {\\n                        title: '🎨当前选中分组：' + getMyVar('selectGroup', '未分组'),\\n                    });\\n                    return 'toast://切换成功~';\\n                })\\n            }),\\n            col_type: 'text_1',\\n            extra: {\\n                id: 'group_btn',\\n                cls: 'addMorePhotos'\\n            }\\n        }, {\\n            title: '‘‘’’<big><span style=\\\"color:#6EB897\\\">添 加</span></big>',\\n            url: $('#noLoading#').lazyRule(() => {\\n                PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                // 依次是window、Unix/Linux、Mac的换行符（系统换行产生的不可见字符）\\n                titleArray = getMyVar('titleArray', '[]').split(/\\\\r\\\\n|\\\\n|\\\\r/);\\n                linkArray = getMyVar('linkArray', '[]').split(/\\\\r\\\\n|\\\\n|\\\\r/);\\n                group = getMyVar('selectGroup', '未分组');\\n                if (group == '未分组') {\\n                    return 'toast://请先选择分组！'\\n                } else {\\n                    if (PhotoAlbum.isSecret == 'yes') {\\n                        keyArray = [];\\n                        for (i in PhotoAlbum.keyMap) {\\n                            keyArray.push(i);\\n                        }\\n                        if (keyArray.includes(group)) {\\n                            return $('', group + '图册|设有密码').input((group) => {\\n                                PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                                keyMap = PhotoAlbum.keyMap;\\n                                password = base64Decode(base64Decode(keyMap[group]));\\n                                if (input == password) {\\n                                    // 日志备份\\n                                    saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                                    // 依次是window、Unix/Linux、Mac的换行符（系统换行产生的不可见字符）\\n                                    titleArray = getMyVar('titleArray', '[]').split(/\\\\r\\\\n|\\\\n|\\\\r/);\\n                                    linkArray = getMyVar('linkArray', '[]').split(/\\\\r\\\\n|\\\\n|\\\\r/);\\n                                    date = $.require(\\\"hiker://page/api?rule=图册\\\").getCurrentDate(1);\\n                                    dataLength = titleArray.length > linkArray.length ? titleArray.length : linkArray.length;\\n                                    if (PhotoAlbum.相册[group] == undefined) {\\n                                        PhotoAlbum.相册[group] = [];\\n                                    }\\n                                    for (let i = 0; i < dataLength; i++) {\\n                                        title = i > titleArray.length - 1 ? '未命名' : (titleArray[i] == '' ? '未命名' : titleArray[i]);\\n                                        link = i > linkArray.length - 1 ? '空链接' : (linkArray[i] == '' ? '空链接' : linkArray[i]);\\n                                        PhotoAlbum.相册[group].unshift({\\n                                            link: link,\\n                                            date: date,\\n                                            title: title,\\n                                            group: group\\n                                        });\\n                                    }\\n                                    saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                                    clearMyVar('addSwitch');\\n                                    refreshPage(true);\\n                                    return \\\"toast://图片添加成功~\\\";\\n                                } else {\\n                                    return 'toast://密码错误！'\\n                                }\\n                            }, group)\\n                        } else {\\n                            // 日志备份\\n                            saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                            date = $.require(\\\"hiker://page/api?rule=图册\\\").getCurrentDate(1);\\n                            dataLength = titleArray.length > linkArray.length ? titleArray.length : linkArray.length;\\n                            if (PhotoAlbum.相册[group] == undefined) {\\n                                PhotoAlbum.相册[group] = [];\\n                            }\\n                            for (let i = 0; i < dataLength; i++) {\\n                                title = i > titleArray.length - 1 ? '未命名' : (titleArray[i] == '' ? '未命名' : titleArray[i]);\\n                                link = i > linkArray.length - 1 ? '空链接' : (linkArray[i] == '' ? '空链接' : linkArray[i]);\\n                                PhotoAlbum.相册[group].unshift({\\n                                    link: link,\\n                                    date: date,\\n                                    title: title,\\n                                    group: group\\n                                });\\n                            }\\n                            saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                            clearMyVar('addSwitch');\\n                            refreshPage(true);\\n                            return \\\"toast://图片添加成功~\\\";\\n                        }\\n                    } else {\\n                        // 日志备份\\n                        saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                        date = $.require(\\\"hiker://page/api?rule=图册\\\").getCurrentDate(1);\\n                        dataLength = titleArray.length > linkArray.length ? titleArray.length : linkArray.length;\\n                        if (PhotoAlbum.相册[group] == undefined) {\\n                            PhotoAlbum.相册[group] = [];\\n                        }\\n                        for (let i = 0; i < dataLength; i++) {\\n                            title = i > titleArray.length - 1 ? '未命名' : (titleArray[i] == '' ? '未命名' : titleArray[i]);\\n                            link = i > linkArray.length - 1 ? '空链接' : (linkArray[i] == '' ? '空链接' : linkArray[i]);\\n                            PhotoAlbum.相册[group].unshift({\\n                                link: link,\\n                                date: date,\\n                                title: title,\\n                                group: group\\n                            });\\n                        }\\n                        saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                        clearMyVar('addSwitch');\\n                        refreshPage(true);\\n                        return \\\"toast://图片添加成功~\\\";\\n                    }\\n                }\\n            }),\\n            col_type: 'text_center_1',\\n            extra: {\\n                cls: 'addMorePhotos'\\n            }\\n        }];\\n        addItemAfter('addMoreBtn', newArray);\\n        putMyVar('addSwitch', 'open');\\n    } else {\\n        deleteItemByCls('addMorePhotos');\\n        putMyVar('addSwitch', 'fold');\\n    }\\n    return \\\"hiker://empty\\\";\\n}\\n// 新增长按-批量导入\\n$.exports.long_click_addNewPic = function () {\\n    return $('', '请输入链接').input(() => {\\n        var link = input;\\n        return $('', '请输入导入的分组名称').input((link) => {\\n            PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n            if (PhotoAlbum.isSecret == 'yes') {\\n                keyArray = [];\\n                for (i in PhotoAlbum.keyMap) {\\n                    keyArray.push(i);\\n                }\\n                if (keyArray.includes(input)) {\\n                    return $('', input + '图册|设有密码').input((group, link) => {\\n                        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                        keyMap = PhotoAlbum.keyMap;\\n                        password = base64Decode(base64Decode(keyMap[group]));\\n                        if (input == password) {\\n                            // 日志备份\\n                            saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                            data = request(link).split(/\\\\r\\\\n|\\\\n|\\\\r/);\\n                            date = $.require(\\\"hiker://page/api?rule=图册\\\").getCurrentDate(1);\\n                            if (PhotoAlbum.相册[group] == undefined) {\\n                                PhotoAlbum.相册[group] = [];\\n                            }\\n                            data.forEach(item => {\\n                                if (item == '') {\\n                                    return;\\n                                } else {\\n                                    title = item.split(/,|，/)[0];\\n                                    link = item.split(/,|，/)[1];\\n                                }\\n                                PhotoAlbum.相册[group].unshift({\\n                                    link: link,\\n                                    date: date,\\n                                    title: title,\\n                                    group: group\\n                                });\\n                            });\\n                            saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                            refreshPage(true);\\n                            return \\\"toast://图片导入成功~\\\";\\n                        } else {\\n                            return 'toast://密码错误！'\\n                        }\\n                    }, input, link)\\n                } else {\\n                    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                    // 日志备份\\n                    saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                    data = request(link).split(/\\\\r\\\\n|\\\\n/);\\n                    date = $.require(\\\"hiker://page/api?rule=图册\\\").getCurrentDate(1);\\n                    if (PhotoAlbum.相册[input] == undefined) {\\n                        PhotoAlbum.相册[input] = [];\\n                    }\\n                    data.forEach(item => {\\n                        if (item == '') {\\n                            return;\\n                        } else {\\n                            title = item.split(/,|，/)[0];\\n                            link = item.split(/,|，/)[1];\\n                        }\\n                        PhotoAlbum.相册[input].unshift({\\n                            link: link,\\n                            date: date,\\n                            title: title,\\n                            group: input\\n                        });\\n                    });\\n                    saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                    refreshPage(true);\\n                    return \\\"toast://图片导入成功~\\\";\\n                }\\n            } else {\\n                PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                // 日志备份\\n                saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                data = request(link).split(/\\\\r\\\\n|\\\\n/);\\n                date = $.require(\\\"hiker://page/api?rule=图册\\\").getCurrentDate(1);\\n                if (PhotoAlbum.相册[input] == undefined) {\\n                    PhotoAlbum.相册[input] = [];\\n                }\\n                data.forEach(item => {\\n                    if (item == '') {\\n                        return;\\n                    } else {\\n                        title = item.split(/,|，/)[0];\\n                        link = item.split(/,|，/)[1];\\n                    }\\n                    PhotoAlbum.相册[input].unshift({\\n                        link: link,\\n                        date: date,\\n                        title: title,\\n                        group: input\\n                    });\\n                });\\n                saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                refreshPage(true);\\n                return \\\"toast://图片导入成功~\\\";\\n            }\\n        }, link)\\n    })\\n}\\n//撤销上一次操作\\n$.exports.revoke = function () {\\n    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum_workBack.json'))));\\n    saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n    refreshPage(false);\\n    return 'toast://撤销成功';\\n}\\n// 分页按钮长按事件\\n$.exports.long_click_pageBtn = function (MY_PAGE_add) {\\n    if (getMyVar('showPage', '🖼︎概览') == '🖼︎概览') {\\n        title = '进入多选批量模式操作';\\n    } else {\\n        title = '退出批量模式';\\n    }\\n    return [{\\n        title: title, js: $.toString((MY_PAGE_add) => {\\n            return $.require(\\\"hiker://page/api?rule=图册\\\").SwitchMode(MY_PAGE_add)\\n        }, MY_PAGE_add)\\n    }, {\\n        title: '撤销上一次操作', js: $.toString(() => {\\n            return $.require(\\\"hiker://page/api?rule=图册\\\").revoke()\\n        })\\n    }];\\n}\\n// 分页选择弹窗\\n$.exports.refreshPageNum = function () {\\n    // 加载图册配置\\n    var PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n    Select_group = getMyVar('Select_group', '全部');\\n    singleMax = PhotoAlbum.singleMax;\\n    // 获取当前的全部showImg\\n    if (getMyVar('currentPage', 'whole') == 'search_res') {\\n        var keyWord = getMyVar('condition');\\n        var reg = new RegExp(keyWord);\\n        var showImg = [];\\n        if (Select_group == '🗑️') {\\n            res_source = '回收站';\\n            PhotoAlbum.回收站.forEach(item => {\\n                if (item.title.match(reg) && item.title != '未命名') {\\n                    showImg.push(item);\\n                }\\n            });\\n        } else {\\n            res_source = '图库';\\n            for (group in PhotoAlbum.相册) {\\n                PhotoAlbum.相册[group].forEach(item => {\\n                    if (item.title.match(reg) && item.title != '未命名') {\\n                        showImg.push(item);\\n                    }\\n                });\\n            }\\n        }\\n    } else if (Select_group == '全部') {\\n        showImg = [];\\n        keyArray = [];\\n        for (i in PhotoAlbum.keyMap) {\\n            keyArray.push(i);\\n        }\\n        for (group in PhotoAlbum.相册) {\\n            if (!keyArray.includes(group)) {\\n                showImg = showImg.concat(PhotoAlbum.相册[group]);\\n            }\\n        }\\n    } else if (Select_group == '🗑️') {\\n        var showImg = PhotoAlbum.回收站;\\n    } else {\\n        var showImg = PhotoAlbum.相册[Select_group];\\n    }\\n    // 开始分页工作\\n    maxNum = showImg.length;\\n    maxPage = Math.ceil(maxNum / singleMax);\\n    thePageNum = getMyVar('thePageNum', 1 + '');\\n    pageList = ['∷'];\\n    if (maxNum <= singleMax) {\\n        pageList.push('““””<font color=\\\"red\\\">1/1</font>');\\n    } else {\\n        for (let page = 1; page <= maxPage; page++) {\\n            start = (page - 1) * singleMax + 1;\\n            if (thePageNum == page) {\\n                pageList.push('““””<font color=\\\"red\\\">' + page + '/' + start + '</font>');\\n            } else {\\n                pageList.push('““””<font color=\\\"gray\\\">' + page + '/' + start + '</font>');\\n            }\\n        }\\n    }\\n    return $(pageList, 3).select((singleMax) => {\\n        if (input == '∷') {\\n            return $(singleMax, '请设置单页最大数量').input(() => {\\n                PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                PhotoAlbum.singleMax = parseInt(input);\\n                saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                refreshPage(false);\\n                return 'toast://limit设置生效'\\n            })\\n        }\\n        thePageNum = input.split('/')[0].split('>')[1];\\n        putMyVar('thePageNum', thePageNum);\\n        putMyVar('lastPage', '1');\\n        refreshPage(true);\\n        return 'hiker://empty';\\n    }, singleMax)\\n}\\n\\n// 修改前面图片的数量统计(返回函数方法的可执行字符串)\\n$.exports.refreshPicArrayNum = function () {\\n    return $.toString(() => {\\n        pic_len = showImg.length - videoArray.length;\\n        d[getMyVar('indexOfArray')].title = '<b>图片</b>\\\\t\\\\t\\\\t本页<font color=' + color + '>' + pic_len + '</font>条数据\\\\t\\\\t\\\\tlimit:<font color=' + color + '>' + singleMax + '</font>\\\\t\\\\t\\\\t第<font color=\\\"red\\\">' + MY_PAGE_add + '</font>/<font color=' + color + '>' + maxPage + '</font>页';\\n    })\\n}\\n\\n\\n// 恢复原位\\n$.exports.reinstate = function (group, link) {\\n    if (group && link) {\\n        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n        // 日志备份\\n        saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n        $.require(\\\"hiker://page/api?rule=图册\\\").overwriteArray();\\n        i = PhotoAlbum.回收站.indexOf(link);\\n        // 恢复到原分组\\n        if (PhotoAlbum.相册[group] == undefined) {\\n            PhotoAlbum.相册[group] = [];\\n        }\\n        PhotoAlbum.相册[group].unshift(PhotoAlbum.回收站[i]);\\n        // 从回收站删除\\n        PhotoAlbum.回收站.splice(i, 1);\\n        saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n        refreshPage(false);\\n        return 'toast://已从回收站恢复';\\n    } else {\\n        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n        $.require(\\\"hiker://page/api?rule=图册\\\").overwriteArray();\\n        if (getMyVar('selectNum', '0') == '0') {\\n            return 'toast://请先选择要恢复的图片！'\\n        } else {\\n            // 日志备份\\n            saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n            selectArray = JSON.parse(getMyVar('selectArray'));\\n            selectArray.forEach(item => {\\n                group = item.group;\\n                link = item.link;\\n                // 恢复到原分组\\n                if (PhotoAlbum.相册[group] == undefined) {\\n                    PhotoAlbum.相册[group] = [];\\n                }\\n                PhotoAlbum.相册[group].unshift(item);\\n                // 从回收站删除\\n                // PhotoAlbum.回收站.pop(item);——服气，搞不明这样写为什么会出现各种bug...\\n                i = PhotoAlbum.回收站.indexOf(link);\\n                PhotoAlbum.回收站.splice(i, 1);\\n            });\\n            selectNum = getMyVar('selectNum', '0');\\n            clearMyVar('selectNum');\\n            clearMyVar('selectArray');\\n            // 直接清除全部最大可能的index\\n            showImg = [];\\n            keyArray = [];\\n            for (i in PhotoAlbum.keyMap) {\\n                keyArray.push(i);\\n            }\\n            for (group in PhotoAlbum.相册) {\\n                if (!keyArray.includes(group)) {\\n                    showImg = showImg.concat(PhotoAlbum.相册[group]);\\n                }\\n            }\\n            maxNum = showImg.length;\\n            for (let index = 1; index <= maxNum; index++) {\\n                clearMyVar('isChoose_' + index);\\n            }\\n            // log('清除index的数量:'+maxNum);\\n            saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n            refreshPage(false);\\n            return \\\"toast://共恢复\\\" + selectNum + '张图片';\\n        }\\n    }\\n}\\n\\n// 删除(移动到回收站)\\n$.exports.removeBin = function (group, link, title) {\\n    if (group && link && title) {\\n        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n        // 日志备份\\n        saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n        $.require(\\\"hiker://page/api?rule=图册\\\").overwriteArray();\\n        i = PhotoAlbum.相册[group].indexOf(link);\\n        PhotoAlbum.相册[group].splice(i, 1);\\n        // 放入回收站\\n        date = $.require(\\\"hiker://page/api?rule=图册\\\").getCurrentDate(1);\\n        PhotoAlbum.回收站.unshift({\\n            link: link,\\n            date: date,\\n            title: title,\\n            group: group\\n        });\\n        saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n        refreshPage(false);\\n        return \\\"toast://删除成功\\\";\\n    } else {\\n        $.require(\\\"hiker://page/api?rule=图册\\\").overwriteArray();\\n        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n        if (getMyVar('selectNum', '0') == '0') {\\n            return 'toast://请先选择要删除的图片！'\\n        } else {\\n            // 日志备份\\n            saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n            selectArray = JSON.parse(getMyVar('selectArray'));\\n            selectArray.forEach(item => {\\n                link = item.link;\\n                title = item.title;\\n                group = item.group;\\n                // i是动态获取的\\n                i = PhotoAlbum.相册[group].indexOf(link);\\n                PhotoAlbum.相册[group].splice(i, 1);\\n                // 放入回收站\\n                date = $.require(\\\"hiker://page/api?rule=图册\\\").getCurrentDate(1);\\n                PhotoAlbum.回收站.unshift({\\n                    link: link,\\n                    date: date,\\n                    title: title,\\n                    group: group\\n                });\\n            });\\n            selectNum = getMyVar('selectNum', '0');\\n            clearMyVar('selectNum');\\n            clearMyVar('selectArray');\\n            // 直接清除全部最大可能的index\\n            showImg = [];\\n            keyArray = [];\\n            for (i in PhotoAlbum.keyMap) {\\n                keyArray.push(i);\\n            }\\n            for (group in PhotoAlbum.相册) {\\n                if (!keyArray.includes(group)) {\\n                    showImg = showImg.concat(PhotoAlbum.相册[group]);\\n                }\\n            }\\n            maxNum = showImg.length;\\n            for (let index = 1; index <= maxNum; index++) {\\n                clearMyVar('isChoose_' + index);\\n            }\\n            // log('清除index的数量:'+maxNum);\\n            saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n            refreshPage(false);\\n            return \\\"toast://共删除\\\" + selectNum + '张图片';\\n        }\\n    }\\n}\\n// 彻底删除\\n$.exports.completelyDelete = function (link) {\\n    if (link) {\\n        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n        // 日志备份\\n        saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n        $.require(\\\"hiker://page/api?rule=图册\\\").overwriteArray();\\n        i = PhotoAlbum.回收站.indexOf(link);\\n        PhotoAlbum.回收站.splice(i, 1);\\n        saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n        refreshPage(false);\\n        return 'toast://已彻底删除';\\n    } else {\\n        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n        $.require(\\\"hiker://page/api?rule=图册\\\").overwriteArray();\\n        if (getMyVar('selectNum', '0') == '0') {\\n            return 'toast://请先选择要删除的图片！'\\n        } else {\\n            // 日志备份\\n            saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n            selectArray = JSON.parse(getMyVar('selectArray'));\\n            selectArray.forEach(item => {\\n                link = item.link;\\n                i = PhotoAlbum.回收站.indexOf(link);\\n                PhotoAlbum.回收站.splice(i, 1);\\n            });\\n            selectNum = getMyVar('selectNum', '0');\\n            clearMyVar('selectNum');\\n            clearMyVar('selectArray');\\n            // 直接清除全部最大可能的index\\n            showImg = [];\\n            keyArray = [];\\n            for (i in PhotoAlbum.keyMap) {\\n                keyArray.push(i);\\n            }\\n            for (group in PhotoAlbum.相册) {\\n                if (!keyArray.includes(group)) {\\n                    showImg = showImg.concat(PhotoAlbum.相册[group]);\\n                }\\n            }\\n            maxNum = showImg.length;\\n            for (let index = 1; index <= maxNum; index++) {\\n                clearMyVar('isChoose_' + index);\\n            }\\n            // log('清除index的数量:'+maxNum);\\n            saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n            refreshPage(false);\\n            return \\\"toast://共彻底删除\\\" + selectNum + '张图片';\\n        }\\n    }\\n}\\n// 加入随机\\n$.exports.JoinRandom = function (link,group) {\\n    if (link) {\\n        if (!fileExist('hiker://files/rules/cy/Theme/pic_list.json')) {\\n            return 'toast://你还没有使用过我的主题哦！'\\n        } else {\\n            PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n            $.require(\\\"hiker://page/api?rule=图册\\\").overwriteArray();\\n            if (group) {\\n                i = PhotoAlbum.相册[group].indexOf(link);\\n                eval('data=' + fetch('hiker://files/rules/cy/Theme/pic_list.json'));\\n                self_way = String(data.self_way);\\n                data.gif_list.unshift(PhotoAlbum.相册[group][i].link);\\n            }else{\\n                i = PhotoAlbum.回收站.indexOf(link);\\n                eval('data=' + fetch('hiker://files/rules/cy/Theme/pic_list.json'));\\n                self_way = String(data.self_way);\\n                data.gif_list.unshift(PhotoAlbum.回收站[i].link);\\n            }\\n            saveFile('hiker://files/rules/cy/Theme/pic_list.json', '{\\\"gif_list\\\":' + JSON.stringify(data.gif_list) + ',\\\"showType\\\":' + JSON.stringify(data.showType) + ',\\\"self_way\\\":' + self_way + '}');\\n            return 'toast://加入成功~'\\n        }\\n    } else {\\n        if (!fileExist('hiker://files/rules/cy/Theme/pic_list.json')) {\\n            return 'toast://你还没有使用过我的主题哦！'\\n        } else {\\n            if (getMyVar('selectNum', '0') == '0') {\\n                return 'toast://请先选择图片！'\\n            } else {\\n                PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                eval('data=' + fetch('hiker://files/rules/cy/Theme/pic_list.json'));\\n                self_way = String(data.self_way);\\n                selectArray = JSON.parse(getMyVar('selectArray'));\\n                selectArray.forEach(item => {\\n                    data.gif_list.unshift(item.link);\\n                });\\n                selectNum = getMyVar('selectNum', '0');\\n                clearMyVar('selectNum');\\n                clearMyVar('selectArray');\\n                // 直接清除全部最大可能的index\\n                showImg = [];\\n                keyArray = [];\\n                for (i in PhotoAlbum.keyMap) {\\n                    keyArray.push(i);\\n                }\\n                for (group in PhotoAlbum.相册) {\\n                    if (!keyArray.includes(group)) {\\n                        showImg = showImg.concat(PhotoAlbum.相册[group]);\\n                    }\\n                }\\n                maxNum = showImg.length;\\n                for (let index = 1; index <= maxNum; index++) {\\n                    clearMyVar('isChoose_' + index);\\n                }\\n                // log('清除index的数量:'+maxNum);\\n                saveFile('hiker://files/rules/cy/Theme/pic_list.json', '{\\\"gif_list\\\":' + JSON.stringify(data.gif_list) + ',\\\"showType\\\":' + JSON.stringify(data.showType) + ',\\\"self_way\\\":' + self_way + '}');\\n                refreshPage(false);\\n                return \\\"toast://共有\\\" + selectNum + '张图片加入了随机图库';\\n            }\\n        }\\n    }\\n}\\n// 重命名\\n$.exports.reName = function (title, link, group) {\\n    return $(title).input((link, group) => {\\n        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n        // 日志备份\\n        saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n        $.require(\\\"hiker://page/api?rule=图册\\\").overwriteArray();\\n        i = PhotoAlbum.相册[group].indexOf(link);\\n        PhotoAlbum.相册[group][i].title = input;\\n        saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n        refreshPage(false);\\n        return 'toast://重命名成功'\\n    }, link, group)\\n}\\n// 改链接\\n$.exports.changeLinke = function (link, group) {\\n    return $(link).input((link, group) => {\\n        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n        // 日志备份\\n        saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n        $.require(\\\"hiker://page/api?rule=图册\\\").overwriteArray();\\n        i = PhotoAlbum.相册[group].indexOf(link);\\n        PhotoAlbum.相册[group][i].link = input;\\n        saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n        refreshPage(false);\\n        return 'toast://修改链接成功'\\n    }, link, group)\\n}\\n// 移动分组\\n$.exports.moveGroup = function (group, link, title) {\\n    if (group && link && title) {\\n        return $(group).input((group, link, title) => {\\n            PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n            // 日志备份\\n            saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n            $.require(\\\"hiker://page/api?rule=图册\\\").overwriteArray();\\n            i = PhotoAlbum.相册[group].indexOf(link);\\n            if (input == '回收站') {\\n                // 移动到回收站\\n                date = $.require(\\\"hiker://page/api?rule=图册\\\").getCurrentDate(1);\\n                PhotoAlbum.回收站.unshift({\\n                    link: link,\\n                    date: date,\\n                    title: title,\\n                    group: group\\n                });\\n                // 从原分组删除\\n                PhotoAlbum.相册[group].splice(i, 1);\\n                saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                refreshPage(false);\\n                return 'toast://已移动到回收站';\\n            } else {\\n                // 修改分组信息\\n                PhotoAlbum.相册[group][i].group = input;\\n                // 移动到新分组\\n                if (PhotoAlbum.相册[input] == undefined) {\\n                    PhotoAlbum.相册[input] = [];\\n                }\\n                PhotoAlbum.相册[input].unshift(PhotoAlbum.相册[group][i]);\\n                // 从原分组删除\\n                PhotoAlbum.相册[group].splice(i, 1);\\n                saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                refreshPage(false);\\n                return 'toast://移动成功';\\n            }\\n        }, group, link, title)\\n    } else {\\n        if (getMyVar('selectNum', '0') == '0') {\\n            return 'toast://请先选择要移动的图片！'\\n        } else {\\n            return $('', '请输入要移动到的分组').input(() => {\\n                $.require(\\\"hiker://page/api?rule=图册\\\").overwriteArray();\\n                PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                // 日志备份\\n                saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                selectArray = JSON.parse(getMyVar('selectArray'));\\n                selectArray.forEach(item => {\\n                    link = item.link;\\n                    title = item.title;\\n                    group = item.group;\\n                    $.require(\\\"hiker://page/api?rule=图册\\\").overwriteArray();\\n                    i = PhotoAlbum.相册[group].indexOf(link);\\n                    if (input == '回收站') {\\n                        // 移动到回收站\\n                        date = $.require(\\\"hiker://page/api?rule=图册\\\").getCurrentDate(1);\\n                        PhotoAlbum.回收站.unshift({\\n                            link: link,\\n                            date: date,\\n                            title: title,\\n                            group: group\\n                        });\\n                        // 从原分组删除\\n                        PhotoAlbum.相册[group].splice(i, 1);\\n                    } else {\\n                        // 修改分组信息\\n                        PhotoAlbum.相册[group][i].group = input;\\n                        // 移动到新分组\\n                        if (PhotoAlbum.相册[input] == undefined) {\\n                            PhotoAlbum.相册[input] = [];\\n                        }\\n                        PhotoAlbum.相册[input].unshift(PhotoAlbum.相册[group][i]);\\n                        // 从原分组删除\\n                        PhotoAlbum.相册[group].splice(i, 1);\\n                    }\\n                });\\n                selectNum = getMyVar('selectNum', '0');\\n                clearMyVar('selectNum');\\n                clearMyVar('selectArray');\\n                // 直接清除全部最大可能的index\\n                showImg = [];\\n                keyArray = [];\\n                for (i in PhotoAlbum.keyMap) {\\n                    keyArray.push(i);\\n                }\\n                for (group in PhotoAlbum.相册) {\\n                    if (!keyArray.includes(group)) {\\n                        showImg = showImg.concat(PhotoAlbum.相册[group]);\\n                    }\\n                }\\n                maxNum = showImg.length;\\n                for (let index = 1; index <= maxNum; index++) {\\n                    clearMyVar('isChoose_' + index);\\n                }\\n                // log('清除index的数量:'+maxNum);\\n                saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                refreshPage(false);\\n                return \\\"toast://共移动\\\" + selectNum + '张图片';\\n            });\\n        }\\n    }\\n}\\n// 预览-多选\\n$.exports.preview = function (item) {\\n    if (item.link.match(/#isVideo=true#/)) {\\n        link = item.link;\\n        if (link.match(/-dir/)) {\\n            link = item.link.split('-dir')[0];\\n        } else {\\n            lazy = $(\\\"\\\").lazyRule(() => {\\n                return $.require('hiker://page/globalParse?rule=道长仓库Pro').lazyParse(input);\\n            });\\n            link = item.link.split('#isVideo=true#')[0] + lazy;\\n        }\\n    } else {\\n        link = item.link;\\n        if (!link.match(/jpg|jpeg|gif|png|svg|webp|bmp|tif/)) {\\n            link = link + '.png';\\n        }\\n    }\\n    return link;\\n}\\n\\n// 图片视频-回收站长按事件\\n$.exports.long_click_binPage = function (group, link, from, item) {\\n    if (from) {\\n        return [{\\n            title: '预览', js: $.toString((item) => {\\n                return $.require('hiker://page/api?rule=图册').preview(item);\\n            }, item)\\n        }, {\\n            title: '恢复', js: $.toString(() => {\\n                return $.require('hiker://page/api?rule=图册').reinstate();\\n            })\\n        }, {\\n            title: '彻底删除', js: $.toString(() => {\\n                return $.require(\\\"hiker://page/api?rule=图册\\\").completelyDelete();\\n            })\\n        }, {\\n            title: '加入随机', js: $.toString(() => {\\n                return $.require(\\\"hiker://page/api?rule=图册\\\").JoinRandom();\\n            })\\n        }];\\n    } else {\\n        return [{\\n            title: '恢复原位', js: $.toString((group, link) => {\\n                return $.require(\\\"hiker://page/api?rule=图册\\\").reinstate(group, link);\\n            }, group, link)\\n        }, {\\n            title: '彻底删除', js: $.toString((link) => {\\n                return $.require(\\\"hiker://page/api?rule=图册\\\").completelyDelete(link);\\n            }, link)\\n        }, {\\n            title: '加入随机', js: $.toString((link) => {\\n                return $.require(\\\"hiker://page/api?rule=图册\\\").JoinRandom(link);\\n            }, link)\\n        }];\\n    }\\n}\\n// 图片视频-分组长按事件\\n$.exports.long_click_truePage = function (title, link, group, from, item, type) {\\n    switch (arguments.length) {\\n        case 6:\\n            return [{\\n                title: '预览', js: $.toString((item) => {\\n                    return $.require('hiker://page/api?rule=图册').preview(item);\\n                }, item)\\n            }, {\\n                title: '移动', js: $.toString(() => {\\n                    return $.require(\\\"hiker://page/api?rule=图册\\\").moveGroup();\\n                })\\n            }, {\\n                title: '删除', js: $.toString(() => {\\n                    return $.require(\\\"hiker://page/api?rule=图册\\\").removeBin();\\n                })\\n            }]\\n            break;\\n        case 4:\\n            return [{\\n                title: '重命名', js: $.toString((title, link, group) => {\\n                    return $.require(\\\"hiker://page/api?rule=图册\\\").reName(title, link, group);\\n                }, title, link, group)\\n            }, {\\n                title: '改链接', js: $.toString((link, group) => {\\n                    return $.require(\\\"hiker://page/api?rule=图册\\\").changeLinke(link, group);\\n                }, link, group)\\n            }, {\\n                title: '移动分组', js: $.toString((group, link, title) => {\\n                    return $.require(\\\"hiker://page/api?rule=图册\\\").moveGroup(group, link, title);\\n                }, group, link, title)\\n            }, {\\n                title: '删除', js: $.toString((group, link, title) => {\\n                    return $.require(\\\"hiker://page/api?rule=图册\\\").removeBin(group, link, title);\\n                }, group, link, title)\\n            }];\\n            break;\\n        case 5:\\n            return [{\\n                title: '预览', js: $.toString((item) => {\\n                    return $.require('hiker://page/api?rule=图册').preview(item);\\n                }, item)\\n            }, {\\n                title: '移动', js: $.toString(() => {\\n                    return $.require(\\\"hiker://page/api?rule=图册\\\").moveGroup();\\n                })\\n            }, {\\n                title: '删除', js: $.toString(() => {\\n                    return $.require(\\\"hiker://page/api?rule=图册\\\").removeBin();\\n                })\\n            }, {\\n                title: '加入随机', js: $.toString(() => {\\n                    return $.require(\\\"hiker://page/api?rule=图册\\\").JoinRandom();\\n                })\\n            }]\\n            break;\\n        case 3:\\n            return [{\\n                title: '重命名', js: $.toString((title, link, group) => {\\n                    return $.require(\\\"hiker://page/api?rule=图册\\\").reName(title, link, group);\\n                }, title, link, group)\\n            }, {\\n                title: '改链接', js: $.toString((link, group) => {\\n                    return $.require(\\\"hiker://page/api?rule=图册\\\").changeLinke(link, group);\\n                }, link, group)\\n            }, {\\n                title: '移动分组', js: $.toString((group, link, title) => {\\n                    return $.require(\\\"hiker://page/api?rule=图册\\\").moveGroup(group, link, title);\\n                }, group, link, title)\\n            }, {\\n                title: '删除', js: $.toString((group, link, title) => {\\n                    return $.require(\\\"hiker://page/api?rule=图册\\\").removeBin(group, link, title);\\n                }, group, link, title)\\n            }, {\\n                title: '加入随机', js: $.toString((link,group) => {\\n                    return $.require(\\\"hiker://page/api?rule=图册\\\").JoinRandom(link,group);\\n                }, link,group)\\n            }];\\n            break;\\n    }\\n}\\n// 分组权限验证\\n$.exports.Authentication = function (Select_group) {\\n    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n    if (Select_group == '🗑️') {\\n        password = base64Decode(base64Decode(PhotoAlbum.user_password))\\n    } else {\\n        keyMap = PhotoAlbum.keyMap;\\n        password = base64Decode(base64Decode(keyMap[Select_group]));\\n    }\\n    if (password != getMyVar('password')) {\\n        return \\\"toast://密码错误！\\\"\\n    } else {\\n        putMyVar('isOpen_' + Select_group, 'y')\\n        refreshPage(true);\\n        return \\\"toast://秘钥正确~\\\";\\n    }\\n}\\n// 多选相册（删除）\\n$.exports.selectGroupToDel = function (group) {\\n    selectArray = JSON.parse(getMyVar('selectArray', '[]'));\\n    if (selectArray.includes(group)) {\\n        selectNum = Number(getMyVar('selectNum', '0')) - 1;\\n        selectArray = selectArray.filter(item => item != group);\\n        putMyVar('selectArray', selectArray);\\n        putMyVar('selectNum', selectNum);\\n    } else {\\n        selectNum = Number(getMyVar('selectNum', '0')) + 1;\\n        selectArray.push(group);\\n        putMyVar('selectArray', selectArray);\\n        putMyVar('selectNum', selectNum);\\n    }\\n    // refreshPage(true);\\n    updateItem('del_select_' + group, {\\n        title: JSON.parse(getMyVar('selectArray', '[]')).includes(group) ? '““””<font color=red>' + group + '</font>' : group,\\n    });\\n    return 'hiker://empty'\\n}\\n// 删除多选相册\\n$.exports.DelselectGroup = function () {\\n    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n    if (getMyVar('selectNum', '0') == '0') {\\n        return 'toast://请先选择要删除的相册！'\\n    } else {\\n        keyArray = [];\\n        for (var item in PhotoAlbum.keyMap) {\\n            keyArray.push(item);\\n        }\\n        selectArray = JSON.parse(getMyVar('selectArray'));\\n        for (var group in PhotoAlbum.相册) {\\n            if (selectArray.includes(group)) {\\n                if (keyArray.includes(group) && selectArray.length != 1) {\\n                    return 'toast://选中分组中有相册设有秘钥，请单独进行删除！'\\n                } else if (keyArray.includes(group) && selectArray.length == 1) {\\n                    if (PhotoAlbum.isSecret == 'yes') {\\n                        return $('', group + '图册|设有密码').input((group) => {\\n                            PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                            keyMap = PhotoAlbum.keyMap;\\n                            password = base64Decode(base64Decode(keyMap[group]));\\n                            if (input == password) {\\n                                PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                                // 日志备份\\n                                saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                                delete PhotoAlbum.相册[group];\\n                                // 清除密钥对\\n                                delete PhotoAlbum.keyMap[group];\\n                                saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                                selectNum = getMyVar('selectNum', '0');\\n                                clearMyVar('selectNum');\\n                                clearMyVar('selectArray');\\n                                refreshPage(true);\\n                                return \\\"toast://该加密相册已删除~\\\";\\n                            } else {\\n                                return 'toast://密码错误！'\\n                            }\\n                        }, group)\\n                    } else {\\n                        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                        // 日志备份\\n                        saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                        delete PhotoAlbum.相册[group];\\n                        // 清除密钥对\\n                        delete PhotoAlbum.keyMap[group];\\n                        saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                        selectNum = getMyVar('selectNum', '0');\\n                        clearMyVar('selectNum');\\n                        clearMyVar('selectArray');\\n                        refreshPage(true);\\n                        return \\\"toast://该加密相册已删除~\\\";\\n                    }\\n                } else {\\n                    // 日志备份\\n                    saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                    // 放入回收站\\n                    date = $.require(\\\"hiker://page/api?rule=图册\\\").getCurrentDate(1);\\n                    PhotoAlbum.相册[group].forEach(item => {\\n                        item.date = date;\\n                    });\\n                    PhotoAlbum.回收站 = PhotoAlbum.相册[group].concat(PhotoAlbum.回收站);\\n                    // 删除相册\\n                    delete PhotoAlbum.相册[group];\\n                    saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                }\\n            }\\n        };\\n        // 对于多选来说，要在循环外返回结果\\n        selectNum = getMyVar('selectNum', '0');\\n        clearMyVar('selectNum');\\n        clearMyVar('selectArray');\\n        refreshPage(true);\\n        return \\\"toast://共删除\\\" + selectNum + '个相册';\\n    }\\n}\\n// 创建相册\\n$.exports.creatGroup = function () {\\n    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n    PhotoAlbum_Name = getMyVar('PhotoAlbum_Name', '未命名');\\n    groupFuns = ['全部', '🗑️', '➕', '➖'];\\n    if (groupFuns.includes(PhotoAlbum_Name)) {\\n        return 'toast://相册名不能是关键字！';\\n    }\\n    for (group in PhotoAlbum.相册) {\\n        if (PhotoAlbum_Name == group) {\\n            return 'toast://已存在同名相册！'\\n        }\\n    };\\n    PhotoAlbum.相册[PhotoAlbum_Name] = [];\\n    saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n    refreshPage(true);\\n    return \\\"toast://相册创建成功~\\\";\\n}\\n// 勾选相册（多选模式）\\n$.exports.CheckGroup = function (index, item, showType) {\\n    selectArray = JSON.parse(getMyVar('selectArray', '[]'));\\n    if (getMyVar('isChoose_' + index, 'no') == 'yes') {\\n        selectNum = Number(getMyVar('selectNum', '0')) - 1;\\n        selectArray.pop(item);\\n        putMyVar('selectArray', selectArray);\\n        putMyVar('selectNum', selectNum);\\n        putMyVar('isChoose_' + index, 'no');\\n    } else {\\n        selectNum = Number(getMyVar('selectNum', '0')) + 1;\\n        selectArray.push(item);\\n        putMyVar('selectArray', selectArray);\\n        putMyVar('selectNum', selectNum);\\n        putMyVar('isChoose_' + index, 'yes');\\n    }\\n    updateItem('selfMap' + index, {\\n        desc: getMyVar('isChoose_' + index, 'no') == 'yes' ? '✅' : (getMyVar('isChoose_' + index, 'no') == 'yes' ? '✅' : (showType.match(/card/) ? 0 + '' : (showType == 'pic_1' || showType.match(/movie_1/) ? '#' + item.group + '\\\\t\\\\t' + item.date : index + ''))),\\n    });\\n    return 'hiker://empty'\\n}\\n// 高级root权限\\n$.exports.rootFun = function () {\\n    return $('', '你没有权限哦').input(() => {\\n        if (input == 'root') {\\n            // 加载图册配置\\n            PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n            isSecret = PhotoAlbum.isSecret;\\n            addItemAfter('root', [{\\n                title: '导出解码文件',\\n                url: $('#noLoading#').lazyRule(() => {\\n                    saveFile('hiker://files/cache/PhotoAlbum_temp.json', base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                    return 'share://hiker://files/cache/PhotoAlbum_temp.json';\\n                }),\\n                col_type: 'text_1'\\n            }, {\\n                title: '导入解码文件（覆盖）',\\n                url: $('#noLoading#').lazyRule(() => {\\n                    return $('', '填写文件所在路径|支持文件直链').input(() => {\\n                        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                        // 日志备份\\n                        saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                        PhotoAlbum = request(input);\\n                        saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(PhotoAlbum)));\\n                        return \\\"toast://导入成功~\\\";\\n                    })\\n                }),\\n                col_type: 'text_1'\\n            }, {\\n                title: '清空秘钥',\\n                desc: '清除所有用户秘钥和相册秘钥',\\n                url: $('#noLoading#').lazyRule(() => {\\n                    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                    // 日志备份\\n                    saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                    PhotoAlbum.keyMap = {};\\n                    PhotoAlbum.user_password = '';\\n                    saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(PhotoAlbum)));\\n                    return \\\"toast://清除成功~\\\";\\n                }),\\n                col_type: 'text_1'\\n            }, {\\n                title: '<b>裸奔模式</b>',\\n                img: (isSecret == 'yes' ? 'https://lanmeiguojiang.com/tubiao/messy/63.svg' : 'https://lanmeiguojiang.com/tubiao/messy/55.svg') + '@Referer=',\\n                url: $('#noLoading#').lazyRule(() => {\\n                    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                    if (PhotoAlbum.isSecret == 'yes') {\\n                        PhotoAlbum.isSecret = 'no';\\n                    } else {\\n                        PhotoAlbum.isSecret = 'yes';\\n                    }\\n                    saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                    refreshPage(true);\\n                    return \\\"toast://用户密码设置成功~\\\";\\n                }),\\n                col_type: 'text_icon'\\n            }, {\\n                title: '无需设置密码，开放搜索等功能。若设置了密码还请关闭该选项',\\n                col_type: 'rich_text',\\n                extra: { \\\"textSize\\\": \\\"12\\\" }\\n            }]);\\n        } else {\\n            return 'toast://你是谁？你想干嘛！'\\n        }\\n    })\\n}\\n// 上锁\\n$.exports.lockUp = function () {\\n    return $('hiker://empty').rule(() => {\\n        var d = [];\\n        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n        keyMap = PhotoAlbum.keyMap;\\n        if (JSON.stringify(keyMap) == '{}') {\\n            d.push({\\n                title: '暂无上锁的相册',\\n                url: 'hiker://empty',\\n                col_type: 'text_1'\\n            })\\n        } else {\\n            for (var item in keyMap) {\\n                d.push({\\n                    title: '🔒' + item,\\n                    url: $(['更改密码', '清除密码'], 2, '请选择操作').select((group) => {\\n                        if (input == '更改密码') {\\n                            return $('', '请输入原密码').input((group) => {\\n                                PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                                keyMap = PhotoAlbum.keyMap;\\n                                password = base64Decode(base64Decode(keyMap[group]));\\n                                if (input == password) {\\n                                    return $('', '请输入新密码').input((group) => {\\n                                        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                                        keyMap = PhotoAlbum.keyMap;\\n                                        keyMap[group] = base64Encode(base64Encode(input));\\n                                        saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                                        refreshPage(true);\\n                                        return \\\"toast://相册秘钥更改成功~\\\";\\n                                    }, group);\\n                                } else {\\n                                    return 'toast://密码错误！'\\n                                }\\n                            }, group)\\n                        } else {\\n                            return $('', '请输入原密码').input((group) => {\\n                                PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                                keyMap = PhotoAlbum.keyMap;\\n                                password = base64Decode(base64Decode(keyMap[group]));\\n                                if (input == password) {\\n                                    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                                    delete PhotoAlbum.keyMap[group];\\n                                    saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                                    refreshPage(true);\\n                                    return \\\"toast://相册秘钥已清除~\\\";\\n                                } else {\\n                                    return 'toast://密码错误！'\\n                                }\\n                            }, group)\\n                        }\\n                    }, item),\\n                    col_type: 'text_1'\\n                })\\n            }\\n        }\\n        d.push({\\n            title: '‘‘’’<big><span style=\\\"color:#6EB897\\\">添 加🔒</span></big>',\\n            url: 'hiker://empty',\\n            col_type: 'text_1'\\n        }, {\\n            title: '🎨当前选中分组：' + getMyVar('selectGroup', '未选择'),\\n            url: $('hiker://empty#noLoading#').lazyRule(() => {\\n                PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                groupArray = [];\\n                keyArray = [];\\n                for (var item in PhotoAlbum.keyMap) {\\n                    keyArray.push(item);\\n                }\\n                for (var group in PhotoAlbum.相册) {\\n                    if (!keyArray.includes(group)) {\\n                        groupArray.push(group);\\n                    }\\n                }\\n                return $(groupArray, 3, '未上锁分组').select(() => {\\n                    putMyVar('selectGroup', input)\\n                    updateItem('group_btn', {\\n                        title: '🎨当前选中分组：' + getMyVar('selectGroup', '未选择'),\\n                    });\\n                    return 'hiker://empty';\\n                })\\n            }),\\n            col_type: 'text_1',\\n            extra: {\\n                id: 'group_btn'\\n            }\\n        }, {\\n            desc: '请输入密码',\\n            col_type: 'input',\\n            extra: {\\n                titleVisible: false,\\n                type: 'textarea',\\n                height: 1,\\n                highlight: true,\\n                onChange: \\\"putMyVar('password',input)\\\",\\n            }\\n        }, {\\n            title: '确认添加',\\n            url: $('#noLoading#').lazyRule(() => {\\n                PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                keyMap = PhotoAlbum.keyMap;\\n                selectGroup = getMyVar('selectGroup', '未选择');\\n                password = getMyVar('password');\\n                if (selectGroup == '未选择') {\\n                    return \\\"toast://请先选择要上锁的相册\\\"\\n                } else if (password == '') {\\n                    return \\\"toast://密码不能为空！\\\"\\n                } else {\\n                    if (PhotoAlbum.user_password == '') {\\n                        return $('', '请设置用户密码(请牢记)').input(() => {\\n                            PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                            PhotoAlbum.user_password = base64Encode(base64Encode(input));\\n                            saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                            return \\\"toast://用户密码设置成功~\\\";\\n                        })\\n                    } else {\\n                        return $('', '请输入密码').input(() => {\\n                            PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                            keyMap = PhotoAlbum.keyMap;\\n                            selectGroup = getMyVar('selectGroup', '未选择');\\n                            password = getMyVar('password');\\n                            if (input == base64Decode(base64Decode(PhotoAlbum.user_password))) {\\n                                keyMap[selectGroup] = base64Encode(base64Encode(password));\\n                                saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                                refreshPage(true);\\n                                return \\\"toast://相册秘钥添加成功~\\\";\\n                            } else {\\n                                return 'toast://密码错误！'\\n                            }\\n                        })\\n                    }\\n                }\\n            }),\\n            col_type: 'text_center_1'\\n        });\\n        setResult(d);\\n    });\\n}\\n// 设置或修改密码\\n$.exports.setPassword = function () {\\n    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n    if (PhotoAlbum.user_password == '') {\\n        return $('', '请设置用户密码(请牢记)').input(() => {\\n            PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n            PhotoAlbum.user_password = base64Encode(base64Encode(input));\\n            saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n            return \\\"toast://用户密码设置成功~\\\";\\n        })\\n    } else {\\n        return $('', '请输入原密码').input(() => {\\n            PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n            if (input == base64Decode(base64Decode(PhotoAlbum.user_password))) {\\n                return $('', '请输入新密码').input(() => {\\n                    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                    PhotoAlbum.user_password = base64Encode(base64Encode(input));\\n                    saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                    return \\\"toast://用户密码更改成功~\\\";\\n                });\\n            } else {\\n                return 'toast://密码错误！'\\n            }\\n        })\\n    }\\n}\\n// 清空回收站\\n$.exports.clearBin = function () {\\n    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n    if (PhotoAlbum.user_password == '') {\\n        return $('', '请设置用户密码(请牢记)').input(() => {\\n            PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n            PhotoAlbum.user_password = base64Encode(base64Encode(input));\\n            saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n            return \\\"toast://用户密码设置成功~\\\";\\n        })\\n    } else {\\n        return $('', '请输入密码').input(() => {\\n            PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n            if (input == base64Decode(base64Decode(PhotoAlbum.user_password))) {\\n                return $(\\\"慎重考虑~\\\").confirm(() => {\\n                    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                    PhotoAlbum.回收站 = [];\\n                    saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                    return \\\"toast://回收站已清空！\\\";\\n                });\\n            } else {\\n                return 'toast://密码错误！'\\n            }\\n        })\\n    }\\n}\\n// 去重\\n$.exports.dedup = function () {\\n    PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n    // 获取全部数据\\n    allData = []\\n    for (group in PhotoAlbum.相册) {\\n        allData = allData.concat(PhotoAlbum.相册[group]);\\n    }\\n    allData = allData.concat(PhotoAlbum.回收站);\\n    // 链接去重数组定义为全局\\n    var newArr = [];\\n    var repetNum = 0;\\n    for (group in PhotoAlbum.相册) {\\n        tempArray = [];\\n        PhotoAlbum.相册[group].forEach(item => {\\n            if (!newArr.includes(item.link)) {\\n                // 将链接存入去重数组\\n                newArr.push(item.link);\\n                // 存储到临时数组倒手\\n                tempArray.push(item);\\n            } else {\\n                repetNum++;\\n            };\\n\\n        });\\n        // 倒手存入\\n        PhotoAlbum.相册[group] = tempArray;\\n    }\\n    saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n    return \\\"toast://本次去重\\\" + repetNum + '条数据';\\n}\\n// 外部接口1-加入随机图\\n$.exports.addToRandomPool = function (linkArray) {\\n    if (!fileExist('hiker://files/rules/cy/Theme/pic_list.json') || !fileExist('hiker://files/rules/cy/PhotoAlbum.json')) {\\n        return 'toast://朋友，你还没有使用过我的主题或者说你没有图册哦！'\\n    } else {\\n        eval('data=' + fetch('hiker://files/rules/cy/Theme/pic_list.json'));\\n        self_way = String(data.self_way);\\n        data.gif_list = linkArray.concat(data.gif_list);\\n        saveFile('hiker://files/rules/cy/Theme/pic_list.json', '{\\\"gif_list\\\":' + JSON.stringify(data.gif_list) + ',\\\"showType\\\":' + JSON.stringify(data.showType) + ',\\\"self_way\\\":' + self_way + '}');\\n        return 'toast://加入成功~'\\n    }\\n}\\n// 外部接口2-加入图册分组,参数为JSON数组:[{title:'',link:''}]\\n$.exports.addToPhotoAlbum = function (data) {\\n    if (!fileExist('hiker://files/rules/cy/Theme/pic_list.json') || !fileExist('hiker://files/rules/cy/PhotoAlbum.json')) {\\n        return 'toast://朋友，你还没有使用过我的主题或者说你没有图册哦！'\\n    } else {\\n        return $('', '请输入相册分组名称').input((data) => {\\n            PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n            if (PhotoAlbum.isSecret == 'yes') {\\n                keyArray = [];\\n                for (i in PhotoAlbum.keyMap) {\\n                    keyArray.push(i);\\n                }\\n                if (keyArray.includes(input)) {\\n                    return $('', input + '图册|设有密码').input((group, data) => {\\n                        PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n                        keyMap = PhotoAlbum.keyMap;\\n                        password = base64Decode(base64Decode(keyMap[group]));\\n                        if (input == password) {\\n                            // 日志备份\\n                            saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                            date = $.require(\\\"hiker://page/api?rule=图册\\\").getCurrentDate(1);\\n                            if (PhotoAlbum.相册[group] == undefined) {\\n                                PhotoAlbum.相册[group] = [];\\n                            }\\n                            data.forEach(item => {\\n                                PhotoAlbum.相册[group].unshift({\\n                                    link: item.link,\\n                                    date: date,\\n                                    title: item.title,\\n                                    group: group\\n                                });\\n                            });\\n                            saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                            return \\\"toast://图片添加成功~\\\";\\n                        } else {\\n                            return 'toast://密码错误！'\\n                        }\\n                    }, input, data)\\n                } else {\\n                    // 日志备份\\n                    saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                    date = $.require(\\\"hiker://page/api?rule=图册\\\").getCurrentDate(1);\\n                    if (PhotoAlbum.相册[input] == undefined) {\\n                        PhotoAlbum.相册[input] = [];\\n                    }\\n                    data.forEach(item => {\\n                        PhotoAlbum.相册[input].unshift({\\n                            link: item.link,\\n                            date: date,\\n                            title: item.title,\\n                            group: input\\n                        });\\n                    });\\n                    saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                    return \\\"toast://图片添加成功~\\\";\\n                }\\n            } else {\\n                // 日志备份\\n                saveFile('hiker://files/rules/cy/PhotoAlbum_workBack.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                date = $.require(\\\"hiker://page/api?rule=图册\\\").getCurrentDate(1);\\n                if (PhotoAlbum.相册[input] == undefined) {\\n                    PhotoAlbum.相册[input] = [];\\n                }\\n                data.forEach(item => {\\n                    PhotoAlbum.相册[input].unshift({\\n                        link: item.link,\\n                        date: date,\\n                        title: item.title,\\n                        group: input\\n                    });\\n                });\\n                saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n                return \\\"toast://图片添加成功~\\\";\\n            }\\n        }, data)\\n    }\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"家\",\"path\":\"homePage\",\"rule\":\"js:\\n// 静默备份\\ntry {\\n    var d = [];\\n    // 预处理\\n    $.require(\\\"hiker://page/api?rule=图册\\\").pretreatment();\\n    // 加载图册配置和初始化页面、页码\\n    var PhotoAlbum = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum.json'))));\\n    Select_group = getMyVar('Select_group', '全部');\\n    showType = PhotoAlbum.showType;\\n    keyMap = PhotoAlbum.keyMap;\\n    singleMax = PhotoAlbum.singleMax;\\n    isSecret = PhotoAlbum.isSecret;\\n    color = \\\"#19B89D\\\";\\n    // 页码差距\\n    margin = MY_PAGE - getMyVar('lastPage', '1');\\n    // 使用MY_PAGE_add承接页码\\n    MY_PAGE_add = parseInt(getMyVar('thePageNum', '1')) + margin;\\n    log('页码:' + MY_PAGE_add);\\n    putMyVar('lastPage', MY_PAGE);\\n    // 倒手变量记录最新的MY_PAGE_add\\n    putMyVar('thePageNum', MY_PAGE_add);\\n    // 第一页展示功能区\\n    if (MY_PAGE == 1) {\\n        // 检索\\n        d.unshift({\\n            title: \\\"检索\\\",\\n            desc: '请输入检索关键字~',\\n            col_type: \\\"input\\\",\\n            url: $.toString(() => {\\n                return $.require(\\\"hiker://page/api?rule=图册\\\").search()\\n            }),\\n            extra: {\\n                type: 'textarea',\\n                defaultValue: getMyVar('condition', ''),\\n                height: 1,\\n                onChange: \\\"putMyVar('condition',input)\\\",\\n            }\\n        })\\n        groupItems = ['全部'];\\n        groupFuns = ['🗑️', '➕', '➖'];\\n        for (i in PhotoAlbum.相册) {\\n            groupItems.push(i);\\n        }\\n        groupItems.push.apply(groupItems, groupFuns);\\n        groupItems.forEach(item => {\\n            groupFuns = ['全部', '🗑️', '➕', '➖'];\\n            if (groupFuns.includes(item)) {\\n                d.push({\\n                    title: getMyVar('Select_group', '全部') == item ? ('““””<b> <font color=' + color + '>' + item + ' </font></b>') : item,\\n                    col_type: 'scroll_button',\\n                    url: $('hiker://empty#noLoading#').lazyRule((item) => {\\n                        return $.require(\\\"hiker://page/api?rule=图册\\\").SwitchGroup(item)\\n                    }, item)\\n                })\\n            } else {\\n                d.push({\\n                    title: getMyVar('Select_group', '全部') == item ? ('““””<b> <font color=' + color + '>' + item + ' </font></b>') : item,\\n                    col_type: 'scroll_button',\\n                    url: $('hiker://empty#noLoading#').lazyRule((item) => {\\n                        return $.require(\\\"hiker://page/api?rule=图册\\\").SwitchGroup(item)\\n                    }, item),\\n                    extra: {\\n                        longClick: $.require(\\\"hiker://page/api?rule=图册\\\").groupFun(item)\\n                    }\\n                })\\n            }\\n        });\\n        d.push({\\n            col_type: 'blank_block'\\n        })\\n        // 添加更多按钮\\n        d.push({\\n            title: getMyVar('showPage', '🖼︎概览') == '🖼︎概览' ? '🖼︎概览' : '☑️多选',\\n            url: $('#noLoading#').lazyRule((MY_PAGE_add) => {\\n                return $.require(\\\"hiker://page/api?rule=图册\\\").SwitchMode(MY_PAGE_add)\\n            }, MY_PAGE_add),\\n            col_type: 'scroll_button'\\n        }, {\\n            title: '🎨' + showType,\\n            url: $('#noLoading#').lazyRule(() => {\\n                return $.require(\\\"hiker://page/api?rule=图册\\\").switchShowType()\\n            }),\\n            col_type: 'scroll_button',\\n            extra: {\\n                id: 'showType_btn'\\n            }\\n        }, {\\n            title: '⚙️设置',\\n            url: $('#noLoading##noHistory#').lazyRule(() => {\\n                return $('hiker://empty##fypage#fullTheme#').rule(() => {\\n                    require(\\\"hiker://page/setting?rule=图册\\\");\\n                })\\n            }),\\n            col_type: 'scroll_button'\\n        }, {\\n            title: '➕',\\n            url: $('#noLoading#').lazyRule(() => {\\n                return $.require(\\\"hiker://page/api?rule=图册\\\").addNewPic()\\n            }),\\n            col_type: 'scroll_button',\\n            extra: {\\n                id: 'addMoreBtn',\\n                longClick: [{\\n                    title: '批量导入，支持本地直链、云链', js: $.toString(() => {\\n                        return $.require(\\\"hiker://page/api?rule=图册\\\").long_click_addNewPic()\\n                    })\\n                }]\\n            }\\n        });\\n    }\\n    d.push({\\n        url: 'hiker://empty',\\n        col_type: 'line_blank'\\n    },);\\n    // 数据匹配\\n    keyArray = [];\\n    for (i in PhotoAlbum.keyMap) {\\n        keyArray.push(i);\\n    }\\n    if ((keyArray.includes(Select_group) || (Select_group == '🗑️') && PhotoAlbum.user_password != '') && getMyVar('currentPage', 'whole') != 'search_res' && getMyVar('isOpen_' + Select_group, 'n') == 'n' && isSecret == 'yes') {\\n        d.push({\\n            desc: '请输入密码',\\n            col_type: 'input',\\n            extra: {\\n                titleVisible: false,\\n                type: 'textarea',\\n                height: 1,\\n                highlight: true,\\n                onChange: \\\"putMyVar('password',input)\\\",\\n            }\\n        }, {\\n            title: '确认',\\n            url: $('#noLoading#').lazyRule((Select_group) => {\\n                return $.require(\\\"hiker://page/api?rule=图册\\\").Authentication(Select_group);\\n            }, Select_group),\\n            col_type: 'text_center_1'\\n        });\\n    } else {\\n        if (getMyVar('currentPage', 'whole') == 'search_res') {\\n            var keyWord = getMyVar('condition');\\n            var reg = new RegExp(keyWord);\\n            var showImg = [];\\n            if (Select_group == '🗑️') {\\n                res_source = '回收站';\\n                PhotoAlbum.回收站.forEach(item => {\\n                    if (item.title.match(reg) && item.title != '未命名') {\\n                        showImg.push(item);\\n                    }\\n                });\\n            } else {\\n                res_source = '图库';\\n                for (group in PhotoAlbum.相册) {\\n                    PhotoAlbum.相册[group].forEach(item => {\\n                        if (item.title.match(reg) && item.title != '未命名') {\\n                            showImg.push(item);\\n                        }\\n                    });\\n                }\\n            }\\n        } else if (Select_group == '全部') {\\n            showImg = [];\\n            if (isSecret == 'yes') {\\n                for (var group in PhotoAlbum.相册) {\\n                    if (!keyArray.includes(group)) {\\n                        showImg = showImg.concat(PhotoAlbum.相册[group]);\\n                    }\\n                }\\n            } else {\\n                for (var group in PhotoAlbum.相册) {\\n                    showImg = showImg.concat(PhotoAlbum.相册[group]);\\n                }\\n            }\\n        } else if (Select_group == '🗑️') {\\n            var showImg = PhotoAlbum.回收站;\\n        } else {\\n            var showImg = PhotoAlbum.相册[Select_group];\\n        }\\n        // 获取分页data\\n        try {\\n            maxPage = Math.ceil(showImg.length / singleMax);\\n            startPage = (MY_PAGE_add - 1) * singleMax + 1;\\n            endPage = singleMax * MY_PAGE_add;\\n            showImg = showImg.slice(startPage - 1, endPage);\\n        } catch (e) {\\n            log('在对相册进行操作~');\\n            showImg = ['temp'];\\n            maxPage = Math.ceil(showImg.length / singleMax);\\n            startPage = (MY_PAGE_add - 1) * singleMax + 1;\\n            endPage = singleMax * MY_PAGE_add;\\n            showImg = showImg.slice(startPage - 1, endPage);\\n        }\\n        // 首页数据展示\\n        if (MY_PAGE_add > maxPage) {\\n            d.push({\\n                title: \\\"““””<small><font color='gray'>—到底了哦—</font></small>\\\",\\n                url: 'hiker://empty',\\n                col_type: 'text_center_1'\\n            });\\n        } else {\\n            if (Select_group == '➕') {\\n                d.push({\\n                    title: '请输入相册名字',\\n                    url: 'hiker://empty',\\n                    col_type: 'text_1'\\n                }, {\\n                    desc: '没啥要求,但是你也不要乱来~',\\n                    col_type: 'input',\\n                    extra: {\\n                        titleVisible: false,\\n                        type: 'textarea',\\n                        height: -1,\\n                        highlight: true,\\n                        onChange: \\\"putMyVar('PhotoAlbum_Name',input)\\\",\\n                    }\\n                }, {\\n                    title: '‘‘’’<big><span style=\\\"color:#6EB897\\\">创 建</span></big>',\\n                    url: $('#noLoading#').lazyRule(() => {\\n                        return $.require(\\\"hiker://page/api?rule=图册\\\").creatGroup();\\n                    }),\\n                    col_type: 'text_center_1'\\n                });\\n            } else if (Select_group == '➖') {\\n                d.push({\\n                    title: '请选中你要删除的相册',\\n                    url: 'hiker://empty',\\n                    col_type: 'text_1'\\n                });\\n                for (var group in PhotoAlbum.相册) {\\n                    d.push({\\n                        title: JSON.parse(getMyVar('selectArray', '[]')).includes(group) ? '““””<font color=red>' + group + '</font>' : group,\\n                        col_type: 'scroll_button',\\n                        url: $('hiker://empty#noLoading#').lazyRule((group) => {\\n                            return $.require(\\\"hiker://page/api?rule=图册\\\").selectGroupToDel(group);\\n                        }, group),\\n                        extra: {\\n                            id: 'del_select_' + group\\n                        }\\n                    })\\n                }\\n                d.push({\\n                    title: '‘‘’’<big><span style=\\\"color:#6EB897\\\">删 除</span></big>',\\n                    url: $('hiker://empty#noLoading#').lazyRule(() => {\\n                        return $.require(\\\"hiker://page/api?rule=图册\\\").DelselectGroup();\\n                    }),\\n                    col_type: 'text_center_1'\\n                });\\n            } else {\\n                if (getMyVar('showPage', '🖼︎概览') == '🖼︎概览') {\\n                    eval(JSON.parse(request('hiker://page/overview?rule=图册')).rule);\\n                } else {\\n                    eval(JSON.parse(request('hiker://page/editor?rule=图册')).rule);\\n                }\\n            }\\n        }\\n    }\\n    // 备份\\n    saveFile('hiker://files/rules/cy/PhotoAlbum_back.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum))));\\n} catch (e) {\\n    log(e.message);\\n    showLoading('异常！！！');\\n    d.push({\\n        title: '恢复备份',\\n        desc: '数据发生了损坏或许发生了未知错误，可以尝试恢复~',\\n        url: $('#noLoading#').lazyRule(() => {\\n            PhotoAlbum_back = JSON.parse(base64Decode(base64Decode(request('hiker://files/rules/cy/PhotoAlbum_back.json'))));\\n            saveFile('hiker://files/rules/cy/PhotoAlbum.json', base64Encode(base64Encode(JSON.stringify(PhotoAlbum_back))));\\n            refreshPage(true);\\n            return \\\"toast://恢复成功\\\";\\n        }),\\n        col_type: 'text_center_1'\\n    });\\n    setResult(d);\\n}\\nsetResult(d);\\n\"},{\"col_type\":\"movie_3\",\"name\":\"多选编辑模式\",\"path\":\"editor\",\"rule\":\"// 判断多选样式\\r\\nbanList = ['icon_round_4', 'pic_1_full', 'card_pic_1', 'pic_2_card', 'pic_3', 'pic_3_square', 'icon_2', 'icon_2_round', 'icon_round_4', 'card_pic_3'];\\r\\nif (banList.includes(showType)) {\\r\\n    showType = 'movie_3_marquee';\\r\\n}\\r\\nd.push({\\r\\n    col_type: 'blank_block'\\r\\n});\\r\\nif (Select_group == '🗑️') {\\r\\n    videoArray = [];\\r\\n    // 图片序号\\r\\n    show_Index = (MY_PAGE_add - 1) * singleMax + 1;\\r\\n    d.push({\\r\\n        title: '<b>图片</b>',\\r\\n        url: $('#noLoading#').lazyRule(() => {\\r\\n            return $.require(\\\"hiker://page/api?rule=图册\\\").refreshPageNum();\\r\\n        }),\\r\\n        img: 'https://hikerfans.com/tubiao/more/39.png@Referer=',\\r\\n        col_type: 'avatar',\\r\\n        extra: {\\r\\n            id: 'picArray_show',\\r\\n            longClick: $.require(\\\"hiker://page/api?rule=图册\\\").long_click_pageBtn(MY_PAGE_add)\\r\\n        }\\r\\n    });\\r\\n    putMyVar('indexOfArray', d.length - 1);\\r\\n    showImg.forEach(item => {\\r\\n        if (item.link.match(/#isVideo=true#/)) {\\r\\n            videoArray.push(item);\\r\\n        } else {\\r\\n            link = item.link;\\r\\n            group = item.group;\\r\\n            shwoUrl = \\\"pics://\\\" + link;\\r\\n            if (link.match(/http/)) {\\r\\n                showPic=link + '@Referer=';\\r\\n            }else{\\r\\n                showPic=link\\r\\n            }\\r\\n            d.push({\\r\\n                title: item.title,\\r\\n                desc: getMyVar('isChoose_' + show_Index, 'no') == 'yes' ? '✅' : (showType.match(/card/) ? 0 + '' : (showType == 'pic_1' || showType.match(/movie_1/) ? '#' + item.group + '\\\\t\\\\t' + item.date : show_Index + '')),\\r\\n                url: $('#noLoading#').lazyRule((index, item, showType) => {\\r\\n                    selectArray = JSON.parse(getMyVar('selectArray', '[]'));\\r\\n                    if (getMyVar('isChoose_' + index, 'no') == 'yes') {\\r\\n                        selectNum = Number(getMyVar('selectNum', '0')) - 1;\\r\\n                        selectArray.pop(item);\\r\\n                        putMyVar('selectArray', selectArray);\\r\\n                        putMyVar('selectNum', selectNum);\\r\\n                        putMyVar('isChoose_' + index, 'no');\\r\\n                    } else {\\r\\n                        selectNum = Number(getMyVar('selectNum', '0')) + 1;\\r\\n                        selectArray.push(item);\\r\\n                        putMyVar('selectArray', selectArray);\\r\\n                        putMyVar('selectNum', selectNum);\\r\\n                        putMyVar('isChoose_' + index, 'yes');\\r\\n                    }\\r\\n                    updateItem('selfMap' + index, {\\r\\n                        desc: getMyVar('isChoose_' + index, 'no') == 'yes' ? '✅' : (getMyVar('isChoose_' + index, 'no') == 'yes' ? '✅' : (showType.match(/card/) ? 0 + '' : (showType == 'pic_1' || showType.match(/movie_1/) ? '#' + item.group + '\\\\t\\\\t' + item.date : index + ''))),\\r\\n                    });\\r\\n                    return 'hiker://empty'\\r\\n                }, show_Index, item, showType),\\r\\n                img: showPic,\\r\\n                col_type: showType,\\r\\n                extra: {\\r\\n                    id: 'selfMap' + show_Index,\\r\\n                    longClick: $.require(\\\"hiker://page/api?rule=图册\\\").long_click_binPage(group, link,'select',item)\\r\\n                }\\r\\n            });\\r\\n            show_Index++;\\r\\n        }\\r\\n    })\\r\\n    d.push({\\r\\n        url: 'hiker://empty',\\r\\n        col_type: 'line'\\r\\n    }, {\\r\\n        title: '<b>视频</b>\\\\t\\\\t\\\\t本页<font color=' + color + '>' + videoArray.length + '</font>条数据\\\\t\\\\t\\\\tlimit:<font color=' + color + '>' + singleMax + '</font>\\\\t\\\\t\\\\t第<font color=\\\"red\\\">' + MY_PAGE_add + '</font>/<font color=' + color + '>' + maxPage + '</font>页',\\r\\n        url: $('#noLoading#').lazyRule(() => {\\r\\n            return $.require(\\\"hiker://page/api?rule=图册\\\").refreshPageNum();\\r\\n        }),\\r\\n        img: 'https://hikerfans.com/tubiao/q/49.png@Referer=',\\r\\n        col_type: 'avatar',\\r\\n        extra: {\\r\\n            longClick: $.require(\\\"hiker://page/api?rule=图册\\\").long_click_pageBtn(MY_PAGE_add)\\r\\n        }\\r\\n    });\\r\\n    // 修改前面图片的数量统计\\r\\n    eval($.require(\\\"hiker://page/api?rule=图册\\\").refreshPicArrayNum());\\r\\n    videoArray.forEach(item => {\\r\\n        link = item.link;\\r\\n        group = item.group;\\r\\n        if (link.match(/-dir/)) {\\r\\n            shwoUrl = item.link.split('-dir')[0];\\r\\n            if (link.match(/-u=/)) {\\r\\n                showPic = item.link.split('-u=')[1] + '@Referer=';\\r\\n            }else{\\r\\n                if (link.match(/-r=/)) {\\r\\n                    showPic = item.link.split('#isVideo=true#')[0] + '@Referer='+item.link.split('-r=')[1];\\r\\n                }else{\\r\\n                    showPic = item.link.split('#isVideo=true#')[0] + '@Referer=';\\r\\n                }\\r\\n            }\\r\\n        } else {\\r\\n            lazy = $(\\\"\\\").lazyRule(() => {\\r\\n                return $.require('hiker://page/globalParse?rule=道长仓库Pro').lazyParse(input);\\r\\n            });\\r\\n            shwoUrl = item.link.split('#isVideo=true#')[0] + lazy;\\r\\n            showPic = item.link.split('#isVideo=true#')[1] + '@Referer=';\\r\\n        }\\r\\n        d.push({\\r\\n            title: item.title,\\r\\n            desc: getMyVar('isChoose_' + show_Index, 'no') == 'yes' ? '✅' : (showType.match(/card/) ? 0 + '' : (showType == 'pic_1' || showType.match(/movie_1/) ? '#' + item.group + '\\\\t\\\\t' + item.date : show_Index + '')),\\r\\n            url: $('#noLoading#').lazyRule((index, item, showType) => {\\r\\n                selectArray = JSON.parse(getMyVar('selectArray', '[]'));\\r\\n                if (getMyVar('isChoose_' + index, 'no') == 'yes') {\\r\\n                    selectNum = Number(getMyVar('selectNum', '0')) - 1;\\r\\n                    selectArray.pop(item);\\r\\n                    putMyVar('selectArray', selectArray);\\r\\n                    putMyVar('selectNum', selectNum);\\r\\n                    putMyVar('isChoose_' + index, 'no');\\r\\n                } else {\\r\\n                    selectNum = Number(getMyVar('selectNum', '0')) + 1;\\r\\n                    selectArray.push(item);\\r\\n                    putMyVar('selectArray', selectArray);\\r\\n                    putMyVar('selectNum', selectNum);\\r\\n                    putMyVar('isChoose_' + index, 'yes');\\r\\n                }\\r\\n                updateItem('selfMap' + index, {\\r\\n                    desc: getMyVar('isChoose_' + index, 'no') == 'yes' ? '✅' : (getMyVar('isChoose_' + index, 'no') == 'yes' ? '✅' : (showType.match(/card/) ? 0 + '' : (showType == 'pic_1' || showType.match(/movie_1/) ? '#' + item.group + '\\\\t\\\\t' + item.date : index + ''))),\\r\\n                });\\r\\n                return 'hiker://empty'\\r\\n            }, (pic_len + show_Index), item, showType),\\r\\n            img: showPic,\\r\\n            col_type: showType,\\r\\n            extra: {\\r\\n                id: 'selfMap' + (pic_len + show_Index),\\r\\n                longClick: $.require(\\\"hiker://page/api?rule=图册\\\").long_click_binPage(group, link,'select',item)\\r\\n            }\\r\\n        });\\r\\n        show_Index++;\\r\\n    })\\r\\n    if (MY_PAGE_add <= maxPage) {\\r\\n        d.push({\\r\\n            title: \\\"““””<small><font color='gray'>—\\\" + MY_PAGE_add + \\\"—</font></small>\\\",\\r\\n            url: 'hiker://empty',\\r\\n            col_type: 'text_center_1'\\r\\n        });\\r\\n    }\\r\\n} else {\\r\\n    videoArray = [];\\r\\n    // 图片序号\\r\\n    show_Index = (MY_PAGE_add - 1) * singleMax + 1;\\r\\n    d.push({\\r\\n        title: '<b>图片</b>',\\r\\n        url: $('#noLoading#').lazyRule(() => {\\r\\n            return $.require(\\\"hiker://page/api?rule=图册\\\").refreshPageNum();\\r\\n        }),\\r\\n        img: 'https://hikerfans.com/tubiao/more/39.png@Referer=',\\r\\n        col_type: 'avatar',\\r\\n        extra: {\\r\\n            id: 'picArray_show',\\r\\n            longClick: $.require(\\\"hiker://page/api?rule=图册\\\").long_click_pageBtn(MY_PAGE_add)\\r\\n        }\\r\\n    });\\r\\n    putMyVar('indexOfArray', d.length - 1);\\r\\n    showImg.forEach(item => {\\r\\n        if (item.link.match(/#isVideo=true#/)) {\\r\\n            videoArray.push(item);\\r\\n        } else {\\r\\n            link = item.link;\\r\\n            group = item.group;\\r\\n            title = item.title;\\r\\n            shwoUrl = \\\"pics://\\\" + item.link;\\r\\n            if (link.match(/http/)) {\\r\\n                showPic=link + '@Referer=';\\r\\n            }else{\\r\\n                showPic=link\\r\\n            }\\r\\n            d.push({\\r\\n                title: item.title,\\r\\n                desc: getMyVar('isChoose_' + show_Index, 'no') == 'yes' ? '✅' : (showType.match(/card/) ? 0 + '' : (showType == 'pic_1' || showType.match(/movie_1/) ? '#' + item.group + '\\\\t\\\\t' + item.date : show_Index + '')),\\r\\n                url: $('#noLoading#').lazyRule((index, item, showType) => {\\r\\n                    return $.require(\\\"hiker://page/api?rule=图册\\\").CheckGroup(index, item, showType)\\r\\n                }, show_Index, item, showType),\\r\\n                img: showPic,\\r\\n                col_type: showType,\\r\\n                extra: {\\r\\n                    id: 'selfMap' + show_Index,\\r\\n                    longClick: $.require(\\\"hiker://page/api?rule=图册\\\").long_click_truePage(title, link, group,'select',item)\\r\\n                }\\r\\n            });\\r\\n            show_Index++;\\r\\n        }\\r\\n    })\\r\\n    d.push({\\r\\n        url: 'hiker://empty',\\r\\n        col_type: 'line'\\r\\n    }, {\\r\\n        title: '<b>视频</b>\\\\t\\\\t\\\\t本页<font color=' + color + '>' + videoArray.length + '</font>条数据\\\\t\\\\t\\\\tlimit:<font color=' + color + '>' + singleMax + '</font>\\\\t\\\\t\\\\t第<font color=\\\"red\\\">' + MY_PAGE_add + '</font>/<font color=' + color + '>' + maxPage + '</font>页',\\r\\n        url: $('#noLoading#').lazyRule(() => {\\r\\n            return $.require(\\\"hiker://page/api?rule=图册\\\").refreshPageNum();\\r\\n        }),\\r\\n        img: 'https://hikerfans.com/tubiao/q/49.png@Referer=',\\r\\n        col_type: 'avatar',\\r\\n        extra: {\\r\\n            longClick: $.require(\\\"hiker://page/api?rule=图册\\\").long_click_pageBtn(MY_PAGE_add)\\r\\n        }\\r\\n    });\\r\\n    // 修改前面图片的数量统计\\r\\n    eval($.require(\\\"hiker://page/api?rule=图册\\\").refreshPicArrayNum());\\r\\n    videoArray.forEach(item => {\\r\\n        lazy = $(\\\"\\\").lazyRule(() => {\\r\\n            return $.require('hiker://page/globalParse?rule=道长仓库Pro').lazyParse(input);\\r\\n        });\\r\\n        link = item.link;\\r\\n        group = item.group;\\r\\n        title = item.title;\\r\\n        if (link.match(/-dir/)) {\\r\\n            if (link.match(/-u=/)) {\\r\\n                showPic = item.link.split('-u=')[1] + '@Referer=';\\r\\n            }else{\\r\\n                if (link.match(/-r=/)) {\\r\\n                    showPic = item.link.split('#isVideo=true#')[0] + '@Referer='+item.link.split('-r=')[1];\\r\\n                }else{\\r\\n                    showPic = item.link.split('#isVideo=true#')[0] + '@Referer=';\\r\\n                }\\r\\n            }\\r\\n        } else {\\r\\n            showPic = item.link.split('#isVideo=true#')[1] + '@Referer=';\\r\\n        }\\r\\n        d.push({\\r\\n            title: item.title,\\r\\n            desc: getMyVar('isChoose_' + show_Index, 'no') == 'yes' ? '✅' : (showType.match(/card/) ? 0 + '' : (showType == 'pic_1' || showType.match(/movie_1/) ? '#' + item.group + '\\\\t\\\\t' + item.date : show_Index + '')),\\r\\n            url: $('#noLoading#').lazyRule((index, item, showType) => {\\r\\n                return $.require(\\\"hiker://page/api?rule=图册\\\").CheckGroup(index, item, showType)\\r\\n            }, (pic_len + show_Index), item, showType),\\r\\n            img: showPic,\\r\\n            col_type: showType,\\r\\n            extra: {\\r\\n                id: 'selfMap' + (pic_len + show_Index),\\r\\n                longClick: $.require(\\\"hiker://page/api?rule=图册\\\").long_click_truePage(title, link, group,'select',item,'video')\\r\\n            }\\r\\n        });\\r\\n        show_Index++;\\r\\n    })\\r\\n    if (MY_PAGE_add <= maxPage) {\\r\\n        d.push({\\r\\n            title: \\\"““””<small><font color='gray'>—\\\" + MY_PAGE_add + \\\"—</font></small>\\\",\\r\\n            url: 'hiker://empty',\\r\\n            col_type: 'text_center_1'\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\"},{\"col_type\":\"movie_3\",\"name\":\"设置页面\",\"path\":\"setting\",\"rule\":\"js:\\nvar d = [];\\nd.push({\\n    title: '<font color=#20b2aa> 侠名：你好呀，朋友...</font>',\\n    img: 'https://lanmeiguojiang.com/tubiao/messy/19.svg@Referer=',\\n    url: $('#noLoading#').lazyRule(() => {\\n        return $.require(\\\"hiker://page/api?rule=图册\\\").rootFun()\\n    }),\\n    col_type: 'avatar',\\n    extra: {\\n        id: 'root'\\n    }\\n}, {\\n    title: '上锁',\\n    desc: '给指定相册添加密码锁',\\n    url: $('#noLoading#').lazyRule(() => {\\n        return $.require(\\\"hiker://page/api?rule=图册\\\").lockUp()\\n    }),\\n    col_type: 'text_1'\\n}, {\\n    title: '设置或修改密码',\\n    desc: '设置用户密码以开启条件检索、相册加密等功能',\\n    url: $('#noLoading#').lazyRule(() => {\\n        return $.require(\\\"hiker://page/api?rule=图册\\\").setPassword()\\n    }),\\n    col_type: 'text_1'\\n}, {\\n    title: '清空回收站',\\n    desc: '定期清理，谨慎操作',\\n    url: $('#noLoading#').lazyRule(() => {\\n        return $.require(\\\"hiker://page/api?rule=图册\\\").clearBin()\\n    }),\\n    col_type: 'text_1'\\n}, {\\n    title: '图册去重',\\n    desc: ' 定期去重，良好习惯（回收站不参与去重）',\\n    url: $('#noLoading#').lazyRule(() => {\\n        return $.require(\\\"hiker://page/api?rule=图册\\\").dedup()\\n    }),\\n    col_type: 'text_1'\\n}, {\\n    title: '返回主页并刷新',\\n    url: $('#noLoading#').lazyRule(() => {\\n        // 留意一下刷新还需要那些操作\\n        back(true);\\n        return \\\"toast://主页刷新成功~\\\";\\n    }),\\n    col_type: 'text_center_1'\\n})\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"概览\",\"path\":\"overview\",\"rule\":\"if (Select_group == '🗑️') {\\r\\n    videoArray = [];\\r\\n    // 图片序号\\r\\n    show_Index = (MY_PAGE_add - 1) * singleMax + 1;\\r\\n    d.push({\\r\\n        title: '<b>图片</b>',\\r\\n        url: $('#noLoading#').lazyRule(() => {\\r\\n            return $.require(\\\"hiker://page/api?rule=图册\\\").refreshPageNum();\\r\\n        }),\\r\\n        img: 'https://hikerfans.com/tubiao/more/39.png@Referer=',\\r\\n        col_type: 'avatar',\\r\\n        extra: {\\r\\n            id: 'picArray_show',\\r\\n            longClick: $.require(\\\"hiker://page/api?rule=图册\\\").long_click_pageBtn(MY_PAGE_add)\\r\\n        }\\r\\n    });\\r\\n    putMyVar('indexOfArray', d.length - 1);\\r\\n    showImg.forEach(item => {\\r\\n        if (item.link.match(/#isVideo=true#/)) {\\r\\n            videoArray.push(item);\\r\\n        } else {\\r\\n            link = item.link;\\r\\n            group = item.group;\\r\\n            shwoUrl = \\\"pics://\\\" + link;\\r\\n            if (link.match(/http/)) {\\r\\n                showPic = link + '@Referer=';\\r\\n            } else {\\r\\n                showPic = link\\r\\n            }\\r\\n            d.push({\\r\\n                title: item.title,\\r\\n                desc: showType.match(/card/) ? 0 + '' : (showType == 'pic_1' || showType.match(/movie_1/) ? '#' + item.group + '\\\\t\\\\t' + item.date : show_Index + ''),\\r\\n                url: shwoUrl,\\r\\n                img: showPic,\\r\\n                col_type: showType,\\r\\n                extra: {\\r\\n                    id: 'selfMap' + show_Index,\\r\\n                    longClick: $.require(\\\"hiker://page/api?rule=图册\\\").long_click_binPage(group, link)\\r\\n                }\\r\\n            });\\r\\n            show_Index++;\\r\\n        }\\r\\n    })\\r\\n    d.push({\\r\\n        url: 'hiker://empty',\\r\\n        col_type: 'line'\\r\\n    }, {\\r\\n        title: '<b>视频</b>\\\\t\\\\t\\\\t本页<font color=' + color + '>' + videoArray.length + '</font>条数据\\\\t\\\\t\\\\tlimit:<font color=' + color + '>' + singleMax + '</font>\\\\t\\\\t\\\\t第<font color=\\\"red\\\">' + MY_PAGE_add + '</font>/<font color=' + color + '>' + maxPage + '</font>页',\\r\\n        url: $('#noLoading#').lazyRule(() => {\\r\\n            return $.require(\\\"hiker://page/api?rule=图册\\\").refreshPageNum();\\r\\n        }),\\r\\n        img: 'https://hikerfans.com/tubiao/q/49.png@Referer=',\\r\\n        col_type: 'avatar',\\r\\n        extra: {\\r\\n            longClick: $.require(\\\"hiker://page/api?rule=图册\\\").long_click_pageBtn(MY_PAGE_add)\\r\\n        }\\r\\n    });\\r\\n    // 修改前面图片的数量统计\\r\\n    eval($.require(\\\"hiker://page/api?rule=图册\\\").refreshPicArrayNum());\\r\\n    videoArray.forEach(item => {\\r\\n        link = item.link;\\r\\n        group = item.group;\\r\\n        if (link.match(/-dir/)) {\\r\\n            shwoUrl = item.link.split('-dir')[0];\\r\\n            if (link.match(/-u=/)) {\\r\\n                showPic = item.link.split('-u=')[1] + '@Referer=';\\r\\n            }else{\\r\\n                if (link.match(/-r=/)) {\\r\\n                    showPic = item.link.split('#isVideo=true#')[0] + '@Referer='+item.link.split('-r=')[1];\\r\\n                }else{\\r\\n                    showPic = item.link.split('#isVideo=true#')[0] + '@Referer=';\\r\\n                }\\r\\n            }\\r\\n        } else {\\r\\n            lazy = $(\\\"\\\").lazyRule(() => {\\r\\n                return $.require('hiker://page/globalParse?rule=道长仓库Pro').lazyParse(input);\\r\\n            });\\r\\n            shwoUrl = item.link.split('#isVideo=true#')[0] + lazy;\\r\\n            showPic = item.link.split('#isVideo=true#')[1] + '@Referer=';\\r\\n        }\\r\\n        d.push({\\r\\n            title: item.title,\\r\\n            desc: showType.match(/card/) ? 0 + '' : (showType == 'pic_1' || showType.match(/movie_1/) ? '#' + item.group + '\\\\t\\\\t' + item.date : show_Index + ''),\\r\\n            url: shwoUrl,\\r\\n            img: showPic,\\r\\n            col_type: showType,\\r\\n            extra: {\\r\\n                id: 'selfMap' + (pic_len + show_Index),\\r\\n                longClick: $.require(\\\"hiker://page/api?rule=图册\\\").long_click_binPage(group, link)\\r\\n            }\\r\\n        });\\r\\n        show_Index++;\\r\\n    })\\r\\n    if (MY_PAGE_add <= maxPage) {\\r\\n        d.push({\\r\\n            title: \\\"““””<small><font color='gray'>—\\\" + MY_PAGE_add + \\\"—</font></small>\\\",\\r\\n            url: 'hiker://empty',\\r\\n            col_type: 'text_center_1'\\r\\n        });\\r\\n    }\\r\\n} else {\\r\\n    videoArray = [];\\r\\n    // 图片序号\\r\\n    show_Index = (MY_PAGE_add - 1) * singleMax + 1;\\r\\n    d.push({\\r\\n        title: '<b>图片</b>',\\r\\n        url: $('#noLoading#').lazyRule(() => {\\r\\n            return $.require(\\\"hiker://page/api?rule=图册\\\").refreshPageNum();\\r\\n        }),\\r\\n        img: 'https://hikerfans.com/tubiao/more/39.png@Referer=',\\r\\n        col_type: 'avatar',\\r\\n        extra: {\\r\\n            id: 'picArray_show',\\r\\n            longClick: $.require(\\\"hiker://page/api?rule=图册\\\").long_click_pageBtn(MY_PAGE_add)\\r\\n        }\\r\\n    });\\r\\n    putMyVar('indexOfArray', d.length - 1);\\r\\n    showImg.forEach(item => {\\r\\n        if (item.link.match(/#isVideo=true#/)) {\\r\\n            videoArray.push(item);\\r\\n        } else {\\r\\n            link = item.link;\\r\\n            group = item.group;\\r\\n            title = item.title;\\r\\n            shwoUrl = \\\"pics://\\\" + item.link;\\r\\n            if (link.match(/http/)) {\\r\\n                showPic = link + '@Referer=';\\r\\n            } else {\\r\\n                showPic = link\\r\\n            }\\r\\n            d.push({\\r\\n                title: item.title,\\r\\n                desc: showType.match(/card/) ? 0 + '' : (showType == 'pic_1' || showType.match(/movie_1/) ? '#' + item.group + '\\\\t\\\\t' + item.date : show_Index + ''),\\r\\n                url: shwoUrl,\\r\\n                img: showPic,\\r\\n                col_type: showType,\\r\\n                extra: {\\r\\n                    id: 'selfMap' + show_Index,\\r\\n                    longClick: $.require(\\\"hiker://page/api?rule=图册\\\").long_click_truePage(title, link, group)\\r\\n                }\\r\\n            });\\r\\n            show_Index++;\\r\\n        }\\r\\n    })\\r\\n    d.push({\\r\\n        url: 'hiker://empty',\\r\\n        col_type: 'line'\\r\\n    }, {\\r\\n        title: '<b>视频</b>\\\\t\\\\t\\\\t本页<font color=' + color + '>' + videoArray.length + '</font>条数据\\\\t\\\\t\\\\tlimit:<font color=' + color + '>' + singleMax + '</font>\\\\t\\\\t\\\\t第<font color=\\\"red\\\">' + MY_PAGE_add + '</font>/<font color=' + color + '>' + maxPage + '</font>页',\\r\\n        url: $('#noLoading#').lazyRule(() => {\\r\\n            return $.require(\\\"hiker://page/api?rule=图册\\\").refreshPageNum();\\r\\n        }),\\r\\n        img: 'https://hikerfans.com/tubiao/q/49.png@Referer=',\\r\\n        col_type: 'avatar',\\r\\n        extra: {\\r\\n            longClick: $.require(\\\"hiker://page/api?rule=图册\\\").long_click_pageBtn(MY_PAGE_add)\\r\\n        }\\r\\n    });\\r\\n    // 修改前面图片的数量统计\\r\\n    eval($.require(\\\"hiker://page/api?rule=图册\\\").refreshPicArrayNum());\\r\\n    videoArray.forEach(item => {\\r\\n        link = item.link;\\r\\n        group = item.group;\\r\\n        title = item.title;\\r\\n        if (link.match(/-dir/)) {\\r\\n            shwoUrl = item.link.split('-dir')[0];\\r\\n            if (link.match(/-u=/)) {\\r\\n                showPic = item.link.split('-u=')[1] + '@Referer=';\\r\\n            }else{\\r\\n                if (link.match(/-r=/)) {\\r\\n                    showPic = item.link.split('#isVideo=true#')[0] + '@Referer='+item.link.split('-r=')[1];\\r\\n                }else{\\r\\n                    showPic = item.link.split('#isVideo=true#')[0] + '@Referer=';\\r\\n                }\\r\\n            }\\r\\n        } else {\\r\\n            lazy = $(\\\"\\\").lazyRule(() => {\\r\\n                return $.require('hiker://page/globalParse?rule=道长仓库Pro').lazyParse(input);\\r\\n            });\\r\\n            shwoUrl = item.link.split('#isVideo=true#')[0] + lazy;\\r\\n            showPic = item.link.split('#isVideo=true#')[1] + '@Referer=';\\r\\n        }\\r\\n        d.push({\\r\\n            title: item.title,\\r\\n            desc: showType.match(/card/) ? 0 + '' : (showType == 'pic_1' || showType.match(/movie_1/) ? '#' + item.group + '\\\\t\\\\t' + item.date : show_Index + ''),\\r\\n            url: shwoUrl,\\r\\n            img: showPic,\\r\\n            col_type: showType,\\r\\n            extra: {\\r\\n                id: 'selfMap' + (pic_len + show_Index),\\r\\n                longClick: $.require(\\\"hiker://page/api?rule=图册\\\").long_click_truePage(title, link, group, 'video')\\r\\n            }\\r\\n        });\\r\\n        show_Index++;\\r\\n    })\\r\\n    if (MY_PAGE_add <= maxPage) {\\r\\n        d.push({\\r\\n            title: \\\"““””<small><font color='gray'>—\\\" + MY_PAGE_add + \\\"—</font></small>\\\",\\r\\n            url: 'hiker://empty',\\r\\n            col_type: 'text_center_1'\\r\\n        });\\r\\n    }\\r\\n}\\r\\n\"}]","proxy":"","icon":"https://lanmeiguojiang.com/tubiao/more/38.png"}
{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"字符串处理工具","path":"stringtool","rule":"js:\nconst matchList  = {\n  // \"<\":\"&lt;\",\n  // \">\": \"&gt;\",\n  // \"&\": \"&amp;\",\n  // '\"': \"&quot;\",\n  // \"'\": \"acute;\",\n  \" \": \"&nbsp;\",\n  \"\\n\":\"<br>\"\n}\n// 字符过滤器\nfunction htmlEscape(text){\n  let regStr = '(' + Object.keys(matchList).toString() + ')'\n  regStr = regStr.replace(/,/g, ')|(')  \n  const regExp = new RegExp(regStr, 'g')\n  return text.replace(regExp, match => matchList[match])\n}\n$.exports.htmlEscape = htmlEscape"},{"col_type":"movie_3","name":"CompressUI","path":"compress-ui","rule":"js:\nif (MY_PARAMS.title) {\n    setPageTitle('算法 ' + MY_PARAMS.title)\n}\n\nlet lzStringTool = JSON.parse(request('hiker://page/lz-string-tool?rule=' + MY_RULE.title)).rule;\neval(lzStringTool)\neval(MY_PARAMS.pageRule);\n\naddListener('onClose', $.toString(()=>{\n    //clearVar(\"test-compress\");\n}))\n\nlet d = [];\nif (MY_PARAMS.title == '压缩算法模板') {\n    d.push({\n        title: '注意：这只是个界面模板，没有任何算法，你们可以参考其他子页面算法的实现，复制这个模板的代码去修改',\n        col_type: \"rich_text\"\n    });\n\n}\n\nString.prototype.byteLength = function() {\n    var count = 0;\n    for (var i = 0, l = this.length; i < l; i++) {\n        count += this.charCodeAt(i) <= 128 ? 1 : 2;\n    }\n    return count;\n}\n\nfunction varJudge(input){\n   if(input==null){\n       return \"\";\n   }else{\n       return input;\n   }\n}\n\nd.push({\n    title: \"压缩\",\n    desc: \"请输入原文\",\n    col_type: 'input',\n    extra: {\n        // titleVisible: false,\n        type: \"textarea\",\n        height: 4,\n        defaultValue: getVar(\"test-decompress\", \"\"),\n        onChange: $.toString(() => {\n            putVar(\"test-decompress\", input)\n        })\n    },\n    url: $.toString((MY_PARAMS) => {\n        let inputValue = getVar(\"test-decompress\", \"\")\n        eval(MY_PARAMS.pageRule)\n        let start = new Date().getTime();\n        let result = ZipTool.compress.exec(inputValue)\n        let end = new Date().getTime();        \n        let duration=end-start;\n        if (result.startsWith(\"x5Rule://\")) {\n            return result;\n        }\n        let t=findItem(MY_RULE.title+'message');\n        putVar(\"test-algorithm-duration\",duration+\"\");\n        updateItem(t.extra.id,{\n            title:t.title.replace(/(\\d+|-)ms/,duration+'ms'),\n        })\n        putVar(\"test-compress\", result)\n        // log(result)\n        refreshPage(false)\n        return 'toast://压缩成功'\n    }, MY_PARAMS)\n})\n\nlet d_size = varJudge(getVar(\"test-decompress\", \"\")).byteLength();\n\n    // ZipTool.decompress.size.get() * 2;\nlet ds_size = varJudge(getVar(\"test-decompress\", \"\")).length\nlet d_text = '&nbsp;&nbsp;Decompress Size: ' + d_size + ' Bytes' + ', Length: ' + ds_size\nd.push({\n    title: d_text,\n    col_type: 'rich_text'\n})\nd.push({\n    title: \"解压\",\n    desc: \"请输入密文\",\n    col_type: 'input',\n    extra: {\n        // titleVisible: false,\n        type: \"textarea\",\n        height: 4,\n        defaultValue: getVar(\"test-compress\", \"\"),\n        onChange: $.toString(() => {\n            putVar(\"test-compress\", input)\n        })\n    },\n    url: $.toString((MY_PARAMS) => {\n        let inputValue = getVar(\"test-compress\", \"\");\n        if(inputValue==\"\"){\n            return \"toast://压缩内容为空\";\n        }\n        eval(MY_PARAMS.pageRule)\n        let start = new Date().getTime();\n        let result = ZipTool.decompress.exec(inputValue)\n        let end = new Date().getTime();\n        let duration=end-start;\n        let t=findItem(MY_RULE.title+'message');\n        putVar(\"test-algorithm-duration\",duration+\"\");\n        updateItem(t.extra.id,{\n            title:t.title.replace(/(\\d+|-)ms/,duration+'ms'),\n        })\n        \n        putVar(\"test-decompress\", result)\n        // log(result)\n        refreshPage(false)\n        return 'toast://解压成功'\n    }, MY_PARAMS)\n})\nlet c_size = varJudge(getVar(\"test-compress\", \"\")).byteLength()\n\n    // ZipTool.compress.size.get();\nlet cs_size = varJudge(getVar(\"test-compress\", \"\")).length\nd.push({\n    title: '&nbsp;&nbsp;Compress Size: ' + c_size + ' Bytes' + ', Length: ' + cs_size,\n    col_type: 'rich_text'\n})\n// log((1 - (c_size / d_size)))\nlet compare = Math.round(\n    (1 - (c_size / d_size)) * 100)\nlet duration = getVar(\"test-algorithm-duration\", \"-\")    \nd.push({\n    title: '&nbsp;&nbsp;压缩率: ' + compare + '%'+ ', 耗时: ' + duration + 'ms',\n    col_type: 'rich_text',\n    extra:{\n        id: MY_RULE.title+'message'\n    }\n})\n\nd.push({\n    title: '清空原文',\n    img: 'https://gitee.com/CherishRx/imagewarehouse/raw/master/image/32d29e2fbcdf8d83071deec7f6aa4b7c.png',\n    url: \"hiker://empty#noLoading#\" + \"@lazyRule=.js:putVar('test-decompress', '');refreshPage();'toast://清空成功'\",\n    col_type: 'icon_2'\n});\n\nd.push({\n    title: '清空密文',\n    img: 'https://gitee.com/CherishRx/imagewarehouse/raw/master/image/32d29e2fbcdf8d83071deec7f6aa4b7c.png',\n    url: \"hiker://empty#noLoading#\" + \"@lazyRule=.js:putVar('test-compress', '');refreshPage();'toast://清空成功'\",\n    col_type: 'icon_2'\n});\n\nd.push({\n    title: '复制原文',\n    img: 'https://gitee.com/CherishRx/imagewarehouse/raw/master/image/32d29e2fbcdf8d83071deec7f6aa4b7c.png',\n    url: $(\"hiker://empty#noLoading#\").lazyRule(() => {\n        var dec = getVar(\"test-decompress\");\n        if (dec) {\n            return \"copy://\" + dec;\n        } else {\n            return \"toast://内容为空！\"\n        }\n    }),\n    col_type: 'icon_2'\n});\n\nd.push({\n    title: '复制密文',\n    img: 'https://gitee.com/CherishRx/imagewarehouse/raw/master/image/32d29e2fbcdf8d83071deec7f6aa4b7c.png',\n    url: $(\"hiker://empty#noLoading#\").lazyRule(() => {\n        var enc = getVar(\"test-compress\");\n        if (enc) {\n            return \"copy://\" + enc;\n        } else {\n            return \"toast://内容为空！\"\n        }\n    }),\n    col_type: 'icon_2'\n});\nsetResult(d)"},{"col_type":"movie_3","name":"压缩算法模板","path":"template","rule":"js:\n// 注： ZipTool 变量名不能改，没有中文标注的地方也不能动\nlet ZipTool = {\n    dependence: '依赖地址',\n    compress: {\n        size: {\n            key: \"test-compress-size\",\n            set: (newValue) => {\n                putVar(this.key, newValue.toString())\n            },\n            get: () => {\n                return parseInt(getVar(this.key, \"0\"))\n            }\n        },\n        /**\n         * 压缩执行方法，通过 ZipTool.compress.exec(input) 调用\n         */\n        exec: (input) => {\n            // eval(request(ZipTool.dependence))\n            // ***修改这里 result 的值为压缩后的字符串值即可***\n            let result = '执行压缩后返回的值'\n            ZipTool.compress.size.set(result.length)\n            return result\n        }\n    },\n    /**\n     * 解压执行方法，通过 ZipTool.decompress.exec(input) 调用\n     */\n    decompress: {\n        size: {\n            get: () => {\n                return getVar(\"test-decompress\", \"0\").length\n            }\n        },\n        exec: (input) => {\n            // eval(request(ZipTool.dependence))\n            // ***修改这里 result 的值为解压后的字符串值即可***\n            let result = '执行解压后返回的值'\n            return result\n        }\n    }\n}"},{"col_type":"movie_3","name":"lz-string","path":"lz-string","rule":"js:\n/*\n原文 1052 Bytes \n原文Base64 1880 Bytes\n原文LZ-String 480 Bytes\n原文LZMA 422 Bytes\n\nhttps://qastack.cn/programming/294297/javascript-implementation-of-gzip\n\nhttps://cdn.jsdelivr.net/npm/lz-string@1.4.4/libs/lz-string.min.js\nhttps://cdn.jsdelivr.net/npm/lz-string@1.4.4/libs/base64-string.js\n*/\nfunction toHexString(byteArray) {\n    return Array.from(byteArray, function(byte) {\n        return ('0' + (byte & 0xFF).toString(16)).slice(-2);\n    }).join('')\n}\nlet ZipTool = {\n    dependence: 'https://unpkg.com/lz-string@1.4.4/libs/lz-string.min.js',\n    compress: {\n        size: {\n            key: \"test-compress-size\",\n            set: (newValue) => {\n                putVar(this.key, newValue.toString())\n            },\n            get: () => {\n                return parseInt(getVar(this.key, \"0\"))\n            }\n        },\n        exec: (input) => {\n            eval(request(ZipTool.dependence))\n// LZString.compressToEncodedURIComponent\n            let result = LZString.compressToBase64(input)\n            ZipTool.compress.size.set(result.length * 2)\n            return result\n        }\n    },\n    decompress: {\n        size: {\n            get: () => {\n                return getVar(\"test-decompress\", \"0\").length\n            }\n        },\n        exec: (input) => {\n            eval(request(ZipTool.dependence))\n// LZString.decompressFromEncodedURIComponent\n            let result = LZString.decompressFromBase64(input)\n            return result\n        }\n    }\n}"},{"col_type":"movie_3","name":"LZMA","path":"lzma","rule":"js:\n/*\nhttps://cdn.jsdelivr.net/npm/lzma@2.3.2/src/lzma_worker-min.js\n\nhttps://unpkg.com/lzma@2.3.2/src/lzma_worker-min.js\n*/\nlet compression_mode = 1;\n\nlet lzStringTool = JSON.parse(request('hiker://page/lz-string-tool')).rule;\n// let lzmaJS = JSON.parse(request('hiker://page/lib-lzma-local.js')).rule;\n// let LZMA = $.require(\"lib-lzma-local.js\");\n// log(Object.keys(LZMA));\n\nfunction setTimeout(func, delay) {\n    //java.lang.Thread.sleep(delay);\n    func();\n}\n\nfunction stringToUint8Array(str) {\n    // 将字符串转换为 ASCII 值的数组\n    const charCodes = Array.from(str).map(char => char.charCodeAt(0));\n    // 将每个 ASCII 值转换回相应的字符\n    const binaryCodes = charCodes.map(code => String.fromCharCode(code));\n    // 将字符数组减少为它们的 ASCII 值数组\n    const binaryData = binaryCodes.reduce((acc, code) => {\n        acc.push(code.charCodeAt(0));\n        return acc;\n    }, []);\n    // 从 ASCII 值数组创建 Uint8Array\n    const uint8Array = new Uint8Array(binaryData);\n    return uint8Array;\n}\n\nfunction unzip(input) {\n    eval(lzStringTool)\n    let output = \"\";\n    input = stringToUint8Array(input);\n    /*log(input)\n    $.log($.type(input))*/\n    LZMA.decompress(input,\n        (result) => {\n            //log(result)\n            putVar(\"test-decompress\", result);\n            output = result;\n        },\n        (progress) => {})\n    //log(output)\n    return output;\n}\n\neval(JSON.parse(request(\"hiker://page/lib-lzma-local.js?rule=\" + MY_RULE.title)).rule)\nlet ZipTool = {\n    compress: {\n        key: \"test-compress-size\",\n        size: {\n            set: (newValue) => {\n                try {\n                    fba.putVar(this.key, newValue.toString())\n                } catch (e) {\n                    putVar(this.key, newValue.toString())\n                }\n            },\n            get: () => {\n                try {\n                    return parseInt(fba.getVar(this.key, \"0\"))\n                } catch (e) {\n                    return parseInt(getVar(this.key, \"0\"))\n                }\n            }\n        },\n        exec: (input) => {\n            putVar(\"test-compress\", \"\")\n            // showLoading(\"压缩中，请稍候...\")\n            return $().x5Lazy((input, mode, stringTool, ZipTool, title) => {\n                //let dependent = 'https://unpkg.com/lzma@2.3.2/src/lzma_worker-min.js'\n                let dependent = \"hiker://page/lib-lzma-local.js?rule=\" + title;\n                eval(JSON.parse(fba.fetch(dependent)).rule)\n                // eval(lzmaJS)\n                eval(stringTool)\n                let start = new Date().getTime();\n                // fba.log(\"input: \" + input)\n                LZMA.compress(input, mode,\n                    (result) => {\n                        if (fba.getVar(\"test-compress\")) return\n                        // fba.log(\"result: \" + convert_to_formated_hex(result))\n                        ZipTool.compress.size.set(result.length)\n                        let end = new Date().getTime();\n                        let duration = end - start;\n\n\n                        fba.putVar(\"test-compress\", String.fromCharCode.apply(null, Array.from(result)));\n\n                        let rule = $$$().lazyRule((title, duration) => {\n                            let t = findItem(title + 'message');\n                            putVar(\"test-algorithm-duration\", duration + \"\");\n                            updateItem(t.extra.id, {\n                                title: t.title.replace(/(\\d+|-)ms/, duration + 'ms'),\n                            })\n                        }, title, duration);\n                        fba.parseLazyRule(rule);\n                        //fba.putVar(\"test-compress\",convert_formated_hex_to_string(convert_to_formated_hex(result)))\n                        // fba.hideLoading()\n                        // fba.log(\"compress: \" + fba.getVar(\"test-compress\"))\n                    },\n                    (progress) => {\n                        // fba.log(\"progress: \" + progress*100 + \"%\")\n                    })\n                if (fba.getVar(\"test-compress\")) {\n                    fba.refreshPage(false)\n                    return 'toast://压缩成功'\n                }\n            }, input, compression_mode, lzStringTool, ZipTool, MY_RULE.title)\n        },\n    },\n    decompress: {\n        size: {\n            get: () => {\n                try {\n                    return fba.getVar(\"test-decompress\", \"0\").length\n                } catch (e) {\n                    return getVar(\"test-decompress\", \"0\").length\n                }\n            }\n        },\n        exec: (input) => {\n            //putVar(\"test-decompress\", \"\")\n            // showLoading(\"解压中，请稍候...\")            \n            let result = unzip(input)\n            return result\n        }\n    },\n}"},{"col_type":"movie_3","name":"GZip","path":"gzip","rule":"js:\n/*\n通过 pako 实现\n\nhttps://qastack.cn/programming/294297/javascript-implementation-of-gzip\n\nhttps://www.zhihu.com/question/53169830\n\nhttp://blog.ideacome.com/2021/07/01/gzipya-suo-de-lz77suan-fa-he-ha-fu-man-bian-ma-shi-xian-yuan-li/amp/\n\nhttp://qiutianaimeili.com/html/page/2019/12/bncs8g07hcg.html\n\nhttps://cdn.staticfile.org/pako/1.0.10/pako.min.js\n*/\nlet pako = $.require(\"lib-pako.js?rule=\" + MY_RULE.title)\n// require(\"https://cdn.staticfile.org/pako/1.0.10/pako.min.js\")\n/*eval(\n    request('hiker://page/' + \"lib-pako.js?rule=\" + MY_RULE.title)\n);*/\nlet ZipTool = {\n    compress: {\n        size: {\n            key: \"test-compress-size\",\n            set: (newValue) => {\n                putVar(this.key, newValue.toString())\n            },\n            get: () => {\n                return parseInt(getVar(this.key, \"0\"))\n            }\n        },\n        exec: (input) => {\n            let result = pako.gzip(input, {\n                to: \"string\"\n            })\n            ZipTool.compress.size.set(result.length)\n            return result\n        }\n    },\n    decompress: {\n        size: {\n            get: () => {\n                return getVar(\"test-decompress\", \"0\").length\n            }\n        },\n        exec: (input) => {\n            let result = pako.ungzip(input, {\n                to: \"string\"\n            })\n            return result\n        }\n    }\n}"},{"col_type":"movie_3","name":"lz-string字串转换函数","path":"lz-string-tool","rule":"js:\nif (!String.prototype.trim) {\n    String.prototype.trim = function() {\n        return this.replace(/^\\s+|\\s+$/, \"\");\n    }\n}\n\nfunction is_array(input) {\n    return typeof(input) === \"object\" && (input instanceof Array);\n}\n\nfunction convert_formated_hex_to_bytes(hex_str) {\n    var count = 0,\n        hex_arr,\n        hex_data = [],\n        hex_len,\n        i;\n\n    if (hex_str.trim() == \"\") return [];\n\n    /// Check for invalid hex characters.\n    if (/[^0-9a-fA-F\\s]/.test(hex_str)) {\n        return false;\n    }\n\n    hex_arr = hex_str.split(/([0-9a-fA-F]+)/g);\n    hex_len = hex_arr.length;\n\n    for (i = 0; i < hex_len; ++i) {\n        if (hex_arr[i].trim() == \"\") {\n            continue;\n        }\n        hex_data[count++] = parseInt(hex_arr[i], 16);\n    }\n\n    return hex_data;\n}\n\nfunction convert_formated_hex_to_string(s) {\n    var byte_arr = convert_formated_hex_to_bytes(s);\n    var res = \"\";\n    for (var i = 0; i < byte_arr.length; i += 2) {\n        res += String.fromCharCode(byte_arr[i] | (byte_arr[i + 1] << 8));\n    }\n    return res;\n}\n\nfunction convert_string_to_hex(s) {\n    var byte_arr = [];\n    for (var i = 0; i < s.length; i++) {\n        var value = s.charCodeAt(i);\n        byte_arr.push(value & 255);\n        byte_arr.push((value >> 8) & 255);\n    }\n    return convert_to_formated_hex(byte_arr);\n}\n\nfunction convert_to_formated_hex(byte_arr) {\n    var hex_str = \"\",\n        i,\n        len,\n        tmp_hex;\n\n    if (!is_array(byte_arr)) {\n        return false;\n    }\n\n    len = byte_arr.length;\n\n    for (i = 0; i < len; ++i) {\n        if (byte_arr[i] < 0) {\n            byte_arr[i] = byte_arr[i] + 256;\n        }\n        if (byte_arr[i] === undefined) {\n            alert(\"Boom \" + i);\n            byte_arr[i] = 0;\n        }\n        tmp_hex = byte_arr[i].toString(16);\n\n        // Add leading zero.\n        if (tmp_hex.length == 1) tmp_hex = \"0\" + tmp_hex;\n\n        if ((i + 1) % 16 === 0) {\n            tmp_hex += \"\\n\";\n        } else {\n            tmp_hex += \" \";\n        }\n\n        hex_str += tmp_hex;\n    }\n\n    return hex_str.trim();\n}"},{"col_type":"movie_3","name":"GZip-Base64","path":"gzip-base64","rule":"js:\n/**\n * 以下压缩和解压方法来自 α 大佬\n */\n// 解压\n\nlet {\n    utf8ArrayToStr,\n    performance\n} = $.require(\"hiker://page/methods\")\n\nfunction unzip(b64Data) {\n    let strData = window0.atob(b64Data);\n    const charData = strData.split('').map(function(x) {\n        return x.charCodeAt(0);\n    });\n    const binData = new Uint8Array(charData);\n    const data = pako.inflate(binData);\n    //strData = String.fromCharCode.apply(null, new Uint16Array(data));\n    return utf8ArrayToStr(data);\n}\n\nlet level=9;\n\n// 压缩\nfunction zip(str) {\n    log((getPageTitle().replace(/算法|\\s+|-Base64/g,\"\"))+\"压缩等级:\"+level);\n    const binary = pako.gzip(str, {\n        to: 'string',\n        level:level\n    })\n    //log(binary)\n    return window0.btoa(binary);\n}\n\n\nlet pako = $.require(\"lib-pako.js?rule=\" + MY_RULE.title)\nlet ZipTool = {\n    compress: {\n        size: {\n            key: \"test-compress-size\",\n            set: (newValue) => {\n                putVar(this.key, newValue.toString())\n            },\n            get: () => {\n                return parseInt(getVar(this.key, \"0\"))\n            }\n        },\n        exec: (input) => {\n            let result = performance(zip,input)\n            ZipTool.compress.size.set(result.length)\n            return result\n        }\n    },\n    decompress: {\n        size: {\n            get: () => {\n                return getVar(\"test-decompress\", \"\").length\n            }\n        },\n        exec: (input) => {\n            let result = performance(unzip,input)\n            return result\n        }\n    }\n}"},{"col_type":"movie_3","name":"lib-pako.js","path":"lib-pako.js","rule":"js:\n// require(\"https://cdn.staticfile.org/pako/1.0.10/pako.min.js\")\nlet pako = $.require(\"lib-pako-local.js\")\n$.exports=pako"},{"col_type":"movie_3","name":"lib-pako-local.js","path":"lib-pako-local.js","rule":"js:\n!function(t){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=t();else if(\"function\"==typeof define&&define.amd)define([],t);else{(\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this).pako=t()}}(function(){return function r(s,o,l){function h(e,t){if(!o[e]){if(!s[e]){var a=\"function\"==typeof require&&require;if(!t&&a)return a(e,!0);if(d)return d(e,!0);var i=new Error(\"Cannot find module '\"+e+\"'\");throw i.code=\"MODULE_NOT_FOUND\",i}var n=o[e]={exports:{}};s[e][0].call(n.exports,function(t){return h(s[e][1][t]||t)},n,n.exports,r,s,o,l)}return o[e].exports}for(var d=\"function\"==typeof require&&require,t=0;t<l.length;t++)h(l[t]);return h}({1:[function(t,e,a){\"use strict\";var s=t(\"./zlib/deflate\"),o=t(\"./utils/common\"),l=t(\"./utils/strings\"),n=t(\"./zlib/messages\"),r=t(\"./zlib/zstream\"),h=Object.prototype.toString,d=0,f=-1,_=0,u=8;function c(t){if(!(this instanceof c))return new c(t);this.options=o.assign({level:f,method:u,chunkSize:16384,windowBits:15,memLevel:8,strategy:_,to:\"\"},t||{});var e=this.options;e.raw&&0<e.windowBits?e.windowBits=-e.windowBits:e.gzip&&0<e.windowBits&&e.windowBits<16&&(e.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new r,this.strm.avail_out=0;var a=s.deflateInit2(this.strm,e.level,e.method,e.windowBits,e.memLevel,e.strategy);if(a!==d)throw new Error(n[a]);if(e.header&&s.deflateSetHeader(this.strm,e.header),e.dictionary){var i;if(i=\"string\"==typeof e.dictionary?l.string2buf(e.dictionary):\"[object ArrayBuffer]\"===h.call(e.dictionary)?new Uint8Array(e.dictionary):e.dictionary,(a=s.deflateSetDictionary(this.strm,i))!==d)throw new Error(n[a]);this._dict_set=!0}}function i(t,e){var a=new c(e);if(a.push(t,!0),a.err)throw a.msg||n[a.err];return a.result}c.prototype.push=function(t,e){var a,i,n=this.strm,r=this.options.chunkSize;if(this.ended)return!1;i=e===~~e?e:!0===e?4:0,\"string\"==typeof t?n.input=l.string2buf(t):\"[object ArrayBuffer]\"===h.call(t)?n.input=new Uint8Array(t):n.input=t,n.next_in=0,n.avail_in=n.input.length;do{if(0===n.avail_out&&(n.output=new o.Buf8(r),n.next_out=0,n.avail_out=r),1!==(a=s.deflate(n,i))&&a!==d)return this.onEnd(a),!(this.ended=!0);0!==n.avail_out&&(0!==n.avail_in||4!==i&&2!==i)||(\"string\"===this.options.to?this.onData(l.buf2binstring(o.shrinkBuf(n.output,n.next_out))):this.onData(o.shrinkBuf(n.output,n.next_out)))}while((0<n.avail_in||0===n.avail_out)&&1!==a);return 4===i?(a=s.deflateEnd(this.strm),this.onEnd(a),this.ended=!0,a===d):2!==i||(this.onEnd(d),!(n.avail_out=0))},c.prototype.onData=function(t){this.chunks.push(t)},c.prototype.onEnd=function(t){t===d&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=o.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg},a.Deflate=c,a.deflate=i,a.deflateRaw=function(t,e){return(e=e||{}).raw=!0,i(t,e)},a.gzip=function(t,e){return(e=e||{}).gzip=!0,i(t,e)}},{\"./utils/common\":3,\"./utils/strings\":4,\"./zlib/deflate\":8,\"./zlib/messages\":13,\"./zlib/zstream\":15}],2:[function(t,e,a){\"use strict\";var f=t(\"./zlib/inflate\"),_=t(\"./utils/common\"),u=t(\"./utils/strings\"),c=t(\"./zlib/constants\"),i=t(\"./zlib/messages\"),n=t(\"./zlib/zstream\"),r=t(\"./zlib/gzheader\"),b=Object.prototype.toString;function s(t){if(!(this instanceof s))return new s(t);this.options=_.assign({chunkSize:16384,windowBits:0,to:\"\"},t||{});var e=this.options;e.raw&&0<=e.windowBits&&e.windowBits<16&&(e.windowBits=-e.windowBits,0===e.windowBits&&(e.windowBits=-15)),!(0<=e.windowBits&&e.windowBits<16)||t&&t.windowBits||(e.windowBits+=32),15<e.windowBits&&e.windowBits<48&&0==(15&e.windowBits)&&(e.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new n,this.strm.avail_out=0;var a=f.inflateInit2(this.strm,e.windowBits);if(a!==c.Z_OK)throw new Error(i[a]);if(this.header=new r,f.inflateGetHeader(this.strm,this.header),e.dictionary&&(\"string\"==typeof e.dictionary?e.dictionary=u.string2buf(e.dictionary):\"[object ArrayBuffer]\"===b.call(e.dictionary)&&(e.dictionary=new Uint8Array(e.dictionary)),e.raw&&(a=f.inflateSetDictionary(this.strm,e.dictionary))!==c.Z_OK))throw new Error(i[a])}function o(t,e){var a=new s(e);if(a.push(t,!0),a.err)throw a.msg||i[a.err];return a.result}s.prototype.push=function(t,e){var a,i,n,r,s,o=this.strm,l=this.options.chunkSize,h=this.options.dictionary,d=!1;if(this.ended)return!1;i=e===~~e?e:!0===e?c.Z_FINISH:c.Z_NO_FLUSH,\"string\"==typeof t?o.input=u.binstring2buf(t):\"[object ArrayBuffer]\"===b.call(t)?o.input=new Uint8Array(t):o.input=t,o.next_in=0,o.avail_in=o.input.length;do{if(0===o.avail_out&&(o.output=new _.Buf8(l),o.next_out=0,o.avail_out=l),(a=f.inflate(o,c.Z_NO_FLUSH))===c.Z_NEED_DICT&&h&&(a=f.inflateSetDictionary(this.strm,h)),a===c.Z_BUF_ERROR&&!0===d&&(a=c.Z_OK,d=!1),a!==c.Z_STREAM_END&&a!==c.Z_OK)return this.onEnd(a),!(this.ended=!0);o.next_out&&(0!==o.avail_out&&a!==c.Z_STREAM_END&&(0!==o.avail_in||i!==c.Z_FINISH&&i!==c.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(n=u.utf8border(o.output,o.next_out),r=o.next_out-n,s=u.buf2string(o.output,n),o.next_out=r,o.avail_out=l-r,r&&_.arraySet(o.output,o.output,n,r,0),this.onData(s)):this.onData(_.shrinkBuf(o.output,o.next_out)))),0===o.avail_in&&0===o.avail_out&&(d=!0)}while((0<o.avail_in||0===o.avail_out)&&a!==c.Z_STREAM_END);return a===c.Z_STREAM_END&&(i=c.Z_FINISH),i===c.Z_FINISH?(a=f.inflateEnd(this.strm),this.onEnd(a),this.ended=!0,a===c.Z_OK):i!==c.Z_SYNC_FLUSH||(this.onEnd(c.Z_OK),!(o.avail_out=0))},s.prototype.onData=function(t){this.chunks.push(t)},s.prototype.onEnd=function(t){t===c.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=_.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg},a.Inflate=s,a.inflate=o,a.inflateRaw=function(t,e){return(e=e||{}).raw=!0,o(t,e)},a.ungzip=o},{\"./utils/common\":3,\"./utils/strings\":4,\"./zlib/constants\":6,\"./zlib/gzheader\":9,\"./zlib/inflate\":11,\"./zlib/messages\":13,\"./zlib/zstream\":15}],3:[function(t,e,a){\"use strict\";var i=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;a.assign=function(t){for(var e,a,i=Array.prototype.slice.call(arguments,1);i.length;){var n=i.shift();if(n){if(\"object\"!=typeof n)throw new TypeError(n+\"must be non-object\");for(var r in n)e=n,a=r,Object.prototype.hasOwnProperty.call(e,a)&&(t[r]=n[r])}}return t},a.shrinkBuf=function(t,e){return t.length===e?t:t.subarray?t.subarray(0,e):(t.length=e,t)};var n={arraySet:function(t,e,a,i,n){if(e.subarray&&t.subarray)t.set(e.subarray(a,a+i),n);else for(var r=0;r<i;r++)t[n+r]=e[a+r]},flattenChunks:function(t){var e,a,i,n,r,s;for(e=i=0,a=t.length;e<a;e++)i+=t[e].length;for(s=new Uint8Array(i),e=n=0,a=t.length;e<a;e++)r=t[e],s.set(r,n),n+=r.length;return s}},r={arraySet:function(t,e,a,i,n){for(var r=0;r<i;r++)t[n+r]=e[a+r]},flattenChunks:function(t){return[].concat.apply([],t)}};a.setTyped=function(t){t?(a.Buf8=Uint8Array,a.Buf16=Uint16Array,a.Buf32=Int32Array,a.assign(a,n)):(a.Buf8=Array,a.Buf16=Array,a.Buf32=Array,a.assign(a,r))},a.setTyped(i)},{}],4:[function(t,e,a){\"use strict\";var l=t(\"./common\"),n=!0,r=!0;try{String.fromCharCode.apply(null,[0])}catch(t){n=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(t){r=!1}for(var h=new l.Buf8(256),i=0;i<256;i++)h[i]=252<=i?6:248<=i?5:240<=i?4:224<=i?3:192<=i?2:1;function d(t,e){if(e<65534&&(t.subarray&&r||!t.subarray&&n))return String.fromCharCode.apply(null,l.shrinkBuf(t,e));for(var a=\"\",i=0;i<e;i++)a+=String.fromCharCode(t[i]);return a}h[254]=h[254]=1,a.string2buf=function(t){var e,a,i,n,r,s=t.length,o=0;for(n=0;n<s;n++)55296==(64512&(a=t.charCodeAt(n)))&&n+1<s&&56320==(64512&(i=t.charCodeAt(n+1)))&&(a=65536+(a-55296<<10)+(i-56320),n++),o+=a<128?1:a<2048?2:a<65536?3:4;for(e=new l.Buf8(o),n=r=0;r<o;n++)55296==(64512&(a=t.charCodeAt(n)))&&n+1<s&&56320==(64512&(i=t.charCodeAt(n+1)))&&(a=65536+(a-55296<<10)+(i-56320),n++),a<128?e[r++]=a:(a<2048?e[r++]=192|a>>>6:(a<65536?e[r++]=224|a>>>12:(e[r++]=240|a>>>18,e[r++]=128|a>>>12&63),e[r++]=128|a>>>6&63),e[r++]=128|63&a);return e},a.buf2binstring=function(t){return d(t,t.length)},a.binstring2buf=function(t){for(var e=new l.Buf8(t.length),a=0,i=e.length;a<i;a++)e[a]=t.charCodeAt(a);return e},a.buf2string=function(t,e){var a,i,n,r,s=e||t.length,o=new Array(2*s);for(a=i=0;a<s;)if((n=t[a++])<128)o[i++]=n;else if(4<(r=h[n]))o[i++]=65533,a+=r-1;else{for(n&=2===r?31:3===r?15:7;1<r&&a<s;)n=n<<6|63&t[a++],r--;1<r?o[i++]=65533:n<65536?o[i++]=n:(n-=65536,o[i++]=55296|n>>10&1023,o[i++]=56320|1023&n)}return d(o,i)},a.utf8border=function(t,e){var a;for((e=e||t.length)>t.length&&(e=t.length),a=e-1;0<=a&&128==(192&t[a]);)a--;return a<0?e:0===a?e:a+h[t[a]]>e?a:e}},{\"./common\":3}],5:[function(t,e,a){\"use strict\";e.exports=function(t,e,a,i){for(var n=65535&t|0,r=t>>>16&65535|0,s=0;0!==a;){for(a-=s=2e3<a?2e3:a;r=r+(n=n+e[i++]|0)|0,--s;);n%=65521,r%=65521}return n|r<<16|0}},{}],6:[function(t,e,a){\"use strict\";e.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],7:[function(t,e,a){\"use strict\";var o=function(){for(var t,e=[],a=0;a<256;a++){t=a;for(var i=0;i<8;i++)t=1&t?3988292384^t>>>1:t>>>1;e[a]=t}return e}();e.exports=function(t,e,a,i){var n=o,r=i+a;t^=-1;for(var s=i;s<r;s++)t=t>>>8^n[255&(t^e[s])];return-1^t}},{}],8:[function(t,e,a){\"use strict\";var l,_=t(\"../utils/common\"),h=t(\"./trees\"),u=t(\"./adler32\"),c=t(\"./crc32\"),i=t(\"./messages\"),d=0,f=4,b=0,g=-2,m=-1,w=4,n=2,p=8,v=9,r=286,s=30,o=19,k=2*r+1,y=15,x=3,z=258,B=z+x+1,S=42,E=113,A=1,Z=2,R=3,C=4;function N(t,e){return t.msg=i[e],e}function O(t){return(t<<1)-(4<t?9:0)}function D(t){for(var e=t.length;0<=--e;)t[e]=0}function I(t){var e=t.state,a=e.pending;a>t.avail_out&&(a=t.avail_out),0!==a&&(_.arraySet(t.output,e.pending_buf,e.pending_out,a,t.next_out),t.next_out+=a,e.pending_out+=a,t.total_out+=a,t.avail_out-=a,e.pending-=a,0===e.pending&&(e.pending_out=0))}function U(t,e){h._tr_flush_block(t,0<=t.block_start?t.block_start:-1,t.strstart-t.block_start,e),t.block_start=t.strstart,I(t.strm)}function T(t,e){t.pending_buf[t.pending++]=e}function F(t,e){t.pending_buf[t.pending++]=e>>>8&255,t.pending_buf[t.pending++]=255&e}function L(t,e){var a,i,n=t.max_chain_length,r=t.strstart,s=t.prev_length,o=t.nice_match,l=t.strstart>t.w_size-B?t.strstart-(t.w_size-B):0,h=t.window,d=t.w_mask,f=t.prev,_=t.strstart+z,u=h[r+s-1],c=h[r+s];t.prev_length>=t.good_match&&(n>>=2),o>t.lookahead&&(o=t.lookahead);do{if(h[(a=e)+s]===c&&h[a+s-1]===u&&h[a]===h[r]&&h[++a]===h[r+1]){r+=2,a++;do{}while(h[++r]===h[++a]&&h[++r]===h[++a]&&h[++r]===h[++a]&&h[++r]===h[++a]&&h[++r]===h[++a]&&h[++r]===h[++a]&&h[++r]===h[++a]&&h[++r]===h[++a]&&r<_);if(i=z-(_-r),r=_-z,s<i){if(t.match_start=e,o<=(s=i))break;u=h[r+s-1],c=h[r+s]}}}while((e=f[e&d])>l&&0!=--n);return s<=t.lookahead?s:t.lookahead}function H(t){var e,a,i,n,r,s,o,l,h,d,f=t.w_size;do{if(n=t.window_size-t.lookahead-t.strstart,t.strstart>=f+(f-B)){for(_.arraySet(t.window,t.window,f,f,0),t.match_start-=f,t.strstart-=f,t.block_start-=f,e=a=t.hash_size;i=t.head[--e],t.head[e]=f<=i?i-f:0,--a;);for(e=a=f;i=t.prev[--e],t.prev[e]=f<=i?i-f:0,--a;);n+=f}if(0===t.strm.avail_in)break;if(s=t.strm,o=t.window,l=t.strstart+t.lookahead,h=n,d=void 0,d=s.avail_in,h<d&&(d=h),a=0===d?0:(s.avail_in-=d,_.arraySet(o,s.input,s.next_in,d,l),1===s.state.wrap?s.adler=u(s.adler,o,d,l):2===s.state.wrap&&(s.adler=c(s.adler,o,d,l)),s.next_in+=d,s.total_in+=d,d),t.lookahead+=a,t.lookahead+t.insert>=x)for(r=t.strstart-t.insert,t.ins_h=t.window[r],t.ins_h=(t.ins_h<<t.hash_shift^t.window[r+1])&t.hash_mask;t.insert&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[r+x-1])&t.hash_mask,t.prev[r&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=r,r++,t.insert--,!(t.lookahead+t.insert<x)););}while(t.lookahead<B&&0!==t.strm.avail_in)}function j(t,e){for(var a,i;;){if(t.lookahead<B){if(H(t),t.lookahead<B&&e===d)return A;if(0===t.lookahead)break}if(a=0,t.lookahead>=x&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+x-1])&t.hash_mask,a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),0!==a&&t.strstart-a<=t.w_size-B&&(t.match_length=L(t,a)),t.match_length>=x)if(i=h._tr_tally(t,t.strstart-t.match_start,t.match_length-x),t.lookahead-=t.match_length,t.match_length<=t.max_lazy_match&&t.lookahead>=x){for(t.match_length--;t.strstart++,t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+x-1])&t.hash_mask,a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart,0!=--t.match_length;);t.strstart++}else t.strstart+=t.match_length,t.match_length=0,t.ins_h=t.window[t.strstart],t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+1])&t.hash_mask;else i=h._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++;if(i&&(U(t,!1),0===t.strm.avail_out))return A}return t.insert=t.strstart<x-1?t.strstart:x-1,e===f?(U(t,!0),0===t.strm.avail_out?R:C):t.last_lit&&(U(t,!1),0===t.strm.avail_out)?A:Z}function K(t,e){for(var a,i,n;;){if(t.lookahead<B){if(H(t),t.lookahead<B&&e===d)return A;if(0===t.lookahead)break}if(a=0,t.lookahead>=x&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+x-1])&t.hash_mask,a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),t.prev_length=t.match_length,t.prev_match=t.match_start,t.match_length=x-1,0!==a&&t.prev_length<t.max_lazy_match&&t.strstart-a<=t.w_size-B&&(t.match_length=L(t,a),t.match_length<=5&&(1===t.strategy||t.match_length===x&&4096<t.strstart-t.match_start)&&(t.match_length=x-1)),t.prev_length>=x&&t.match_length<=t.prev_length){for(n=t.strstart+t.lookahead-x,i=h._tr_tally(t,t.strstart-1-t.prev_match,t.prev_length-x),t.lookahead-=t.prev_length-1,t.prev_length-=2;++t.strstart<=n&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+x-1])&t.hash_mask,a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),0!=--t.prev_length;);if(t.match_available=0,t.match_length=x-1,t.strstart++,i&&(U(t,!1),0===t.strm.avail_out))return A}else if(t.match_available){if((i=h._tr_tally(t,0,t.window[t.strstart-1]))&&U(t,!1),t.strstart++,t.lookahead--,0===t.strm.avail_out)return A}else t.match_available=1,t.strstart++,t.lookahead--}return t.match_available&&(i=h._tr_tally(t,0,t.window[t.strstart-1]),t.match_available=0),t.insert=t.strstart<x-1?t.strstart:x-1,e===f?(U(t,!0),0===t.strm.avail_out?R:C):t.last_lit&&(U(t,!1),0===t.strm.avail_out)?A:Z}function M(t,e,a,i,n){this.good_length=t,this.max_lazy=e,this.nice_length=a,this.max_chain=i,this.func=n}function P(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=p,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new _.Buf16(2*k),this.dyn_dtree=new _.Buf16(2*(2*s+1)),this.bl_tree=new _.Buf16(2*(2*o+1)),D(this.dyn_ltree),D(this.dyn_dtree),D(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new _.Buf16(y+1),this.heap=new _.Buf16(2*r+1),D(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new _.Buf16(2*r+1),D(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function Y(t){var e;return t&&t.state?(t.total_in=t.total_out=0,t.data_type=n,(e=t.state).pending=0,e.pending_out=0,e.wrap<0&&(e.wrap=-e.wrap),e.status=e.wrap?S:E,t.adler=2===e.wrap?0:1,e.last_flush=d,h._tr_init(e),b):N(t,g)}function q(t){var e,a=Y(t);return a===b&&((e=t.state).window_size=2*e.w_size,D(e.head),e.max_lazy_match=l[e.level].max_lazy,e.good_match=l[e.level].good_length,e.nice_match=l[e.level].nice_length,e.max_chain_length=l[e.level].max_chain,e.strstart=0,e.block_start=0,e.lookahead=0,e.insert=0,e.match_length=e.prev_length=x-1,e.match_available=0,e.ins_h=0),a}function G(t,e,a,i,n,r){if(!t)return g;var s=1;if(e===m&&(e=6),i<0?(s=0,i=-i):15<i&&(s=2,i-=16),n<1||v<n||a!==p||i<8||15<i||e<0||9<e||r<0||w<r)return N(t,g);8===i&&(i=9);var o=new P;return(t.state=o).strm=t,o.wrap=s,o.gzhead=null,o.w_bits=i,o.w_size=1<<o.w_bits,o.w_mask=o.w_size-1,o.hash_bits=n+7,o.hash_size=1<<o.hash_bits,o.hash_mask=o.hash_size-1,o.hash_shift=~~((o.hash_bits+x-1)/x),o.window=new _.Buf8(2*o.w_size),o.head=new _.Buf16(o.hash_size),o.prev=new _.Buf16(o.w_size),o.lit_bufsize=1<<n+6,o.pending_buf_size=4*o.lit_bufsize,o.pending_buf=new _.Buf8(o.pending_buf_size),o.d_buf=1*o.lit_bufsize,o.l_buf=3*o.lit_bufsize,o.level=e,o.strategy=r,o.method=a,q(t)}l=[new M(0,0,0,0,function(t,e){var a=65535;for(a>t.pending_buf_size-5&&(a=t.pending_buf_size-5);;){if(t.lookahead<=1){if(H(t),0===t.lookahead&&e===d)return A;if(0===t.lookahead)break}t.strstart+=t.lookahead,t.lookahead=0;var i=t.block_start+a;if((0===t.strstart||t.strstart>=i)&&(t.lookahead=t.strstart-i,t.strstart=i,U(t,!1),0===t.strm.avail_out))return A;if(t.strstart-t.block_start>=t.w_size-B&&(U(t,!1),0===t.strm.avail_out))return A}return t.insert=0,e===f?(U(t,!0),0===t.strm.avail_out?R:C):(t.strstart>t.block_start&&(U(t,!1),t.strm.avail_out),A)}),new M(4,4,8,4,j),new M(4,5,16,8,j),new M(4,6,32,32,j),new M(4,4,16,16,K),new M(8,16,32,32,K),new M(8,16,128,128,K),new M(8,32,128,256,K),new M(32,128,258,1024,K),new M(32,258,258,4096,K)],a.deflateInit=function(t,e){return G(t,e,p,15,8,0)},a.deflateInit2=G,a.deflateReset=q,a.deflateResetKeep=Y,a.deflateSetHeader=function(t,e){return t&&t.state?2!==t.state.wrap?g:(t.state.gzhead=e,b):g},a.deflate=function(t,e){var a,i,n,r;if(!t||!t.state||5<e||e<0)return t?N(t,g):g;if(i=t.state,!t.output||!t.input&&0!==t.avail_in||666===i.status&&e!==f)return N(t,0===t.avail_out?-5:g);if(i.strm=t,a=i.last_flush,i.last_flush=e,i.status===S)if(2===i.wrap)t.adler=0,T(i,31),T(i,139),T(i,8),i.gzhead?(T(i,(i.gzhead.text?1:0)+(i.gzhead.hcrc?2:0)+(i.gzhead.extra?4:0)+(i.gzhead.name?8:0)+(i.gzhead.comment?16:0)),T(i,255&i.gzhead.time),T(i,i.gzhead.time>>8&255),T(i,i.gzhead.time>>16&255),T(i,i.gzhead.time>>24&255),T(i,9===i.level?2:2<=i.strategy||i.level<2?4:0),T(i,255&i.gzhead.os),i.gzhead.extra&&i.gzhead.extra.length&&(T(i,255&i.gzhead.extra.length),T(i,i.gzhead.extra.length>>8&255)),i.gzhead.hcrc&&(t.adler=c(t.adler,i.pending_buf,i.pending,0)),i.gzindex=0,i.status=69):(T(i,0),T(i,0),T(i,0),T(i,0),T(i,0),T(i,9===i.level?2:2<=i.strategy||i.level<2?4:0),T(i,3),i.status=E);else{var s=p+(i.w_bits-8<<4)<<8;s|=(2<=i.strategy||i.level<2?0:i.level<6?1:6===i.level?2:3)<<6,0!==i.strstart&&(s|=32),s+=31-s%31,i.status=E,F(i,s),0!==i.strstart&&(F(i,t.adler>>>16),F(i,65535&t.adler)),t.adler=1}if(69===i.status)if(i.gzhead.extra){for(n=i.pending;i.gzindex<(65535&i.gzhead.extra.length)&&(i.pending!==i.pending_buf_size||(i.gzhead.hcrc&&i.pending>n&&(t.adler=c(t.adler,i.pending_buf,i.pending-n,n)),I(t),n=i.pending,i.pending!==i.pending_buf_size));)T(i,255&i.gzhead.extra[i.gzindex]),i.gzindex++;i.gzhead.hcrc&&i.pending>n&&(t.adler=c(t.adler,i.pending_buf,i.pending-n,n)),i.gzindex===i.gzhead.extra.length&&(i.gzindex=0,i.status=73)}else i.status=73;if(73===i.status)if(i.gzhead.name){n=i.pending;do{if(i.pending===i.pending_buf_size&&(i.gzhead.hcrc&&i.pending>n&&(t.adler=c(t.adler,i.pending_buf,i.pending-n,n)),I(t),n=i.pending,i.pending===i.pending_buf_size)){r=1;break}T(i,r=i.gzindex<i.gzhead.name.length?255&i.gzhead.name.charCodeAt(i.gzindex++):0)}while(0!==r);i.gzhead.hcrc&&i.pending>n&&(t.adler=c(t.adler,i.pending_buf,i.pending-n,n)),0===r&&(i.gzindex=0,i.status=91)}else i.status=91;if(91===i.status)if(i.gzhead.comment){n=i.pending;do{if(i.pending===i.pending_buf_size&&(i.gzhead.hcrc&&i.pending>n&&(t.adler=c(t.adler,i.pending_buf,i.pending-n,n)),I(t),n=i.pending,i.pending===i.pending_buf_size)){r=1;break}T(i,r=i.gzindex<i.gzhead.comment.length?255&i.gzhead.comment.charCodeAt(i.gzindex++):0)}while(0!==r);i.gzhead.hcrc&&i.pending>n&&(t.adler=c(t.adler,i.pending_buf,i.pending-n,n)),0===r&&(i.status=103)}else i.status=103;if(103===i.status&&(i.gzhead.hcrc?(i.pending+2>i.pending_buf_size&&I(t),i.pending+2<=i.pending_buf_size&&(T(i,255&t.adler),T(i,t.adler>>8&255),t.adler=0,i.status=E)):i.status=E),0!==i.pending){if(I(t),0===t.avail_out)return i.last_flush=-1,b}else if(0===t.avail_in&&O(e)<=O(a)&&e!==f)return N(t,-5);if(666===i.status&&0!==t.avail_in)return N(t,-5);if(0!==t.avail_in||0!==i.lookahead||e!==d&&666!==i.status){var o=2===i.strategy?function(t,e){for(var a;;){if(0===t.lookahead&&(H(t),0===t.lookahead)){if(e===d)return A;break}if(t.match_length=0,a=h._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++,a&&(U(t,!1),0===t.strm.avail_out))return A}return t.insert=0,e===f?(U(t,!0),0===t.strm.avail_out?R:C):t.last_lit&&(U(t,!1),0===t.strm.avail_out)?A:Z}(i,e):3===i.strategy?function(t,e){for(var a,i,n,r,s=t.window;;){if(t.lookahead<=z){if(H(t),t.lookahead<=z&&e===d)return A;if(0===t.lookahead)break}if(t.match_length=0,t.lookahead>=x&&0<t.strstart&&(i=s[n=t.strstart-1])===s[++n]&&i===s[++n]&&i===s[++n]){r=t.strstart+z;do{}while(i===s[++n]&&i===s[++n]&&i===s[++n]&&i===s[++n]&&i===s[++n]&&i===s[++n]&&i===s[++n]&&i===s[++n]&&n<r);t.match_length=z-(r-n),t.match_length>t.lookahead&&(t.match_length=t.lookahead)}if(t.match_length>=x?(a=h._tr_tally(t,1,t.match_length-x),t.lookahead-=t.match_length,t.strstart+=t.match_length,t.match_length=0):(a=h._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++),a&&(U(t,!1),0===t.strm.avail_out))return A}return t.insert=0,e===f?(U(t,!0),0===t.strm.avail_out?R:C):t.last_lit&&(U(t,!1),0===t.strm.avail_out)?A:Z}(i,e):l[i.level].func(i,e);if(o!==R&&o!==C||(i.status=666),o===A||o===R)return 0===t.avail_out&&(i.last_flush=-1),b;if(o===Z&&(1===e?h._tr_align(i):5!==e&&(h._tr_stored_block(i,0,0,!1),3===e&&(D(i.head),0===i.lookahead&&(i.strstart=0,i.block_start=0,i.insert=0))),I(t),0===t.avail_out))return i.last_flush=-1,b}return e!==f?b:i.wrap<=0?1:(2===i.wrap?(T(i,255&t.adler),T(i,t.adler>>8&255),T(i,t.adler>>16&255),T(i,t.adler>>24&255),T(i,255&t.total_in),T(i,t.total_in>>8&255),T(i,t.total_in>>16&255),T(i,t.total_in>>24&255)):(F(i,t.adler>>>16),F(i,65535&t.adler)),I(t),0<i.wrap&&(i.wrap=-i.wrap),0!==i.pending?b:1)},a.deflateEnd=function(t){var e;return t&&t.state?(e=t.state.status)!==S&&69!==e&&73!==e&&91!==e&&103!==e&&e!==E&&666!==e?N(t,g):(t.state=null,e===E?N(t,-3):b):g},a.deflateSetDictionary=function(t,e){var a,i,n,r,s,o,l,h,d=e.length;if(!t||!t.state)return g;if(2===(r=(a=t.state).wrap)||1===r&&a.status!==S||a.lookahead)return g;for(1===r&&(t.adler=u(t.adler,e,d,0)),a.wrap=0,d>=a.w_size&&(0===r&&(D(a.head),a.strstart=0,a.block_start=0,a.insert=0),h=new _.Buf8(a.w_size),_.arraySet(h,e,d-a.w_size,a.w_size,0),e=h,d=a.w_size),s=t.avail_in,o=t.next_in,l=t.input,t.avail_in=d,t.next_in=0,t.input=e,H(a);a.lookahead>=x;){for(i=a.strstart,n=a.lookahead-(x-1);a.ins_h=(a.ins_h<<a.hash_shift^a.window[i+x-1])&a.hash_mask,a.prev[i&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=i,i++,--n;);a.strstart=i,a.lookahead=x-1,H(a)}return a.strstart+=a.lookahead,a.block_start=a.strstart,a.insert=a.lookahead,a.lookahead=0,a.match_length=a.prev_length=x-1,a.match_available=0,t.next_in=o,t.input=l,t.avail_in=s,a.wrap=r,b},a.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":3,\"./adler32\":5,\"./crc32\":7,\"./messages\":13,\"./trees\":14}],9:[function(t,e,a){\"use strict\";e.exports=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}},{}],10:[function(t,e,a){\"use strict\";e.exports=function(t,e){var a,i,n,r,s,o,l,h,d,f,_,u,c,b,g,m,w,p,v,k,y,x,z,B,S;a=t.state,i=t.next_in,B=t.input,n=i+(t.avail_in-5),r=t.next_out,S=t.output,s=r-(e-t.avail_out),o=r+(t.avail_out-257),l=a.dmax,h=a.wsize,d=a.whave,f=a.wnext,_=a.window,u=a.hold,c=a.bits,b=a.lencode,g=a.distcode,m=(1<<a.lenbits)-1,w=(1<<a.distbits)-1;t:do{c<15&&(u+=B[i++]<<c,c+=8,u+=B[i++]<<c,c+=8),p=b[u&m];e:for(;;){if(u>>>=v=p>>>24,c-=v,0===(v=p>>>16&255))S[r++]=65535&p;else{if(!(16&v)){if(0==(64&v)){p=b[(65535&p)+(u&(1<<v)-1)];continue e}if(32&v){a.mode=12;break t}t.msg=\"invalid literal/length code\",a.mode=30;break t}k=65535&p,(v&=15)&&(c<v&&(u+=B[i++]<<c,c+=8),k+=u&(1<<v)-1,u>>>=v,c-=v),c<15&&(u+=B[i++]<<c,c+=8,u+=B[i++]<<c,c+=8),p=g[u&w];a:for(;;){if(u>>>=v=p>>>24,c-=v,!(16&(v=p>>>16&255))){if(0==(64&v)){p=g[(65535&p)+(u&(1<<v)-1)];continue a}t.msg=\"invalid distance code\",a.mode=30;break t}if(y=65535&p,c<(v&=15)&&(u+=B[i++]<<c,(c+=8)<v&&(u+=B[i++]<<c,c+=8)),l<(y+=u&(1<<v)-1)){t.msg=\"invalid distance too far back\",a.mode=30;break t}if(u>>>=v,c-=v,(v=r-s)<y){if(d<(v=y-v)&&a.sane){t.msg=\"invalid distance too far back\",a.mode=30;break t}if(z=_,(x=0)===f){if(x+=h-v,v<k){for(k-=v;S[r++]=_[x++],--v;);x=r-y,z=S}}else if(f<v){if(x+=h+f-v,(v-=f)<k){for(k-=v;S[r++]=_[x++],--v;);if(x=0,f<k){for(k-=v=f;S[r++]=_[x++],--v;);x=r-y,z=S}}}else if(x+=f-v,v<k){for(k-=v;S[r++]=_[x++],--v;);x=r-y,z=S}for(;2<k;)S[r++]=z[x++],S[r++]=z[x++],S[r++]=z[x++],k-=3;k&&(S[r++]=z[x++],1<k&&(S[r++]=z[x++]))}else{for(x=r-y;S[r++]=S[x++],S[r++]=S[x++],S[r++]=S[x++],2<(k-=3););k&&(S[r++]=S[x++],1<k&&(S[r++]=S[x++]))}break}}break}}while(i<n&&r<o);i-=k=c>>3,u&=(1<<(c-=k<<3))-1,t.next_in=i,t.next_out=r,t.avail_in=i<n?n-i+5:5-(i-n),t.avail_out=r<o?o-r+257:257-(r-o),a.hold=u,a.bits=c}},{}],11:[function(t,e,a){\"use strict\";var Z=t(\"../utils/common\"),R=t(\"./adler32\"),C=t(\"./crc32\"),N=t(\"./inffast\"),O=t(\"./inftrees\"),D=1,I=2,U=0,T=-2,F=1,i=852,n=592;function L(t){return(t>>>24&255)+(t>>>8&65280)+((65280&t)<<8)+((255&t)<<24)}function r(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Z.Buf16(320),this.work=new Z.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function s(t){var e;return t&&t.state?(e=t.state,t.total_in=t.total_out=e.total=0,t.msg=\"\",e.wrap&&(t.adler=1&e.wrap),e.mode=F,e.last=0,e.havedict=0,e.dmax=32768,e.head=null,e.hold=0,e.bits=0,e.lencode=e.lendyn=new Z.Buf32(i),e.distcode=e.distdyn=new Z.Buf32(n),e.sane=1,e.back=-1,U):T}function o(t){var e;return t&&t.state?((e=t.state).wsize=0,e.whave=0,e.wnext=0,s(t)):T}function l(t,e){var a,i;return t&&t.state?(i=t.state,e<0?(a=0,e=-e):(a=1+(e>>4),e<48&&(e&=15)),e&&(e<8||15<e)?T:(null!==i.window&&i.wbits!==e&&(i.window=null),i.wrap=a,i.wbits=e,o(t))):T}function h(t,e){var a,i;return t?(i=new r,(t.state=i).window=null,(a=l(t,e))!==U&&(t.state=null),a):T}var d,f,_=!0;function H(t){if(_){var e;for(d=new Z.Buf32(512),f=new Z.Buf32(32),e=0;e<144;)t.lens[e++]=8;for(;e<256;)t.lens[e++]=9;for(;e<280;)t.lens[e++]=7;for(;e<288;)t.lens[e++]=8;for(O(D,t.lens,0,288,d,0,t.work,{bits:9}),e=0;e<32;)t.lens[e++]=5;O(I,t.lens,0,32,f,0,t.work,{bits:5}),_=!1}t.lencode=d,t.lenbits=9,t.distcode=f,t.distbits=5}function j(t,e,a,i){var n,r=t.state;return null===r.window&&(r.wsize=1<<r.wbits,r.wnext=0,r.whave=0,r.window=new Z.Buf8(r.wsize)),i>=r.wsize?(Z.arraySet(r.window,e,a-r.wsize,r.wsize,0),r.wnext=0,r.whave=r.wsize):(i<(n=r.wsize-r.wnext)&&(n=i),Z.arraySet(r.window,e,a-i,n,r.wnext),(i-=n)?(Z.arraySet(r.window,e,a-i,i,0),r.wnext=i,r.whave=r.wsize):(r.wnext+=n,r.wnext===r.wsize&&(r.wnext=0),r.whave<r.wsize&&(r.whave+=n))),0}a.inflateReset=o,a.inflateReset2=l,a.inflateResetKeep=s,a.inflateInit=function(t){return h(t,15)},a.inflateInit2=h,a.inflate=function(t,e){var a,i,n,r,s,o,l,h,d,f,_,u,c,b,g,m,w,p,v,k,y,x,z,B,S=0,E=new Z.Buf8(4),A=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!t||!t.state||!t.output||!t.input&&0!==t.avail_in)return T;12===(a=t.state).mode&&(a.mode=13),s=t.next_out,n=t.output,l=t.avail_out,r=t.next_in,i=t.input,o=t.avail_in,h=a.hold,d=a.bits,f=o,_=l,x=U;t:for(;;)switch(a.mode){case F:if(0===a.wrap){a.mode=13;break}for(;d<16;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}if(2&a.wrap&&35615===h){E[a.check=0]=255&h,E[1]=h>>>8&255,a.check=C(a.check,E,2,0),d=h=0,a.mode=2;break}if(a.flags=0,a.head&&(a.head.done=!1),!(1&a.wrap)||(((255&h)<<8)+(h>>8))%31){t.msg=\"incorrect header check\",a.mode=30;break}if(8!=(15&h)){t.msg=\"unknown compression method\",a.mode=30;break}if(d-=4,y=8+(15&(h>>>=4)),0===a.wbits)a.wbits=y;else if(y>a.wbits){t.msg=\"invalid window size\",a.mode=30;break}a.dmax=1<<y,t.adler=a.check=1,a.mode=512&h?10:12,d=h=0;break;case 2:for(;d<16;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}if(a.flags=h,8!=(255&a.flags)){t.msg=\"unknown compression method\",a.mode=30;break}if(57344&a.flags){t.msg=\"unknown header flags set\",a.mode=30;break}a.head&&(a.head.text=h>>8&1),512&a.flags&&(E[0]=255&h,E[1]=h>>>8&255,a.check=C(a.check,E,2,0)),d=h=0,a.mode=3;case 3:for(;d<32;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}a.head&&(a.head.time=h),512&a.flags&&(E[0]=255&h,E[1]=h>>>8&255,E[2]=h>>>16&255,E[3]=h>>>24&255,a.check=C(a.check,E,4,0)),d=h=0,a.mode=4;case 4:for(;d<16;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}a.head&&(a.head.xflags=255&h,a.head.os=h>>8),512&a.flags&&(E[0]=255&h,E[1]=h>>>8&255,a.check=C(a.check,E,2,0)),d=h=0,a.mode=5;case 5:if(1024&a.flags){for(;d<16;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}a.length=h,a.head&&(a.head.extra_len=h),512&a.flags&&(E[0]=255&h,E[1]=h>>>8&255,a.check=C(a.check,E,2,0)),d=h=0}else a.head&&(a.head.extra=null);a.mode=6;case 6:if(1024&a.flags&&(o<(u=a.length)&&(u=o),u&&(a.head&&(y=a.head.extra_len-a.length,a.head.extra||(a.head.extra=new Array(a.head.extra_len)),Z.arraySet(a.head.extra,i,r,u,y)),512&a.flags&&(a.check=C(a.check,i,u,r)),o-=u,r+=u,a.length-=u),a.length))break t;a.length=0,a.mode=7;case 7:if(2048&a.flags){if(0===o)break t;for(u=0;y=i[r+u++],a.head&&y&&a.length<65536&&(a.head.name+=String.fromCharCode(y)),y&&u<o;);if(512&a.flags&&(a.check=C(a.check,i,u,r)),o-=u,r+=u,y)break t}else a.head&&(a.head.name=null);a.length=0,a.mode=8;case 8:if(4096&a.flags){if(0===o)break t;for(u=0;y=i[r+u++],a.head&&y&&a.length<65536&&(a.head.comment+=String.fromCharCode(y)),y&&u<o;);if(512&a.flags&&(a.check=C(a.check,i,u,r)),o-=u,r+=u,y)break t}else a.head&&(a.head.comment=null);a.mode=9;case 9:if(512&a.flags){for(;d<16;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}if(h!==(65535&a.check)){t.msg=\"header crc mismatch\",a.mode=30;break}d=h=0}a.head&&(a.head.hcrc=a.flags>>9&1,a.head.done=!0),t.adler=a.check=0,a.mode=12;break;case 10:for(;d<32;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}t.adler=a.check=L(h),d=h=0,a.mode=11;case 11:if(0===a.havedict)return t.next_out=s,t.avail_out=l,t.next_in=r,t.avail_in=o,a.hold=h,a.bits=d,2;t.adler=a.check=1,a.mode=12;case 12:if(5===e||6===e)break t;case 13:if(a.last){h>>>=7&d,d-=7&d,a.mode=27;break}for(;d<3;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}switch(a.last=1&h,d-=1,3&(h>>>=1)){case 0:a.mode=14;break;case 1:if(H(a),a.mode=20,6!==e)break;h>>>=2,d-=2;break t;case 2:a.mode=17;break;case 3:t.msg=\"invalid block type\",a.mode=30}h>>>=2,d-=2;break;case 14:for(h>>>=7&d,d-=7&d;d<32;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}if((65535&h)!=(h>>>16^65535)){t.msg=\"invalid stored block lengths\",a.mode=30;break}if(a.length=65535&h,d=h=0,a.mode=15,6===e)break t;case 15:a.mode=16;case 16:if(u=a.length){if(o<u&&(u=o),l<u&&(u=l),0===u)break t;Z.arraySet(n,i,r,u,s),o-=u,r+=u,l-=u,s+=u,a.length-=u;break}a.mode=12;break;case 17:for(;d<14;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}if(a.nlen=257+(31&h),h>>>=5,d-=5,a.ndist=1+(31&h),h>>>=5,d-=5,a.ncode=4+(15&h),h>>>=4,d-=4,286<a.nlen||30<a.ndist){t.msg=\"too many length or distance symbols\",a.mode=30;break}a.have=0,a.mode=18;case 18:for(;a.have<a.ncode;){for(;d<3;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}a.lens[A[a.have++]]=7&h,h>>>=3,d-=3}for(;a.have<19;)a.lens[A[a.have++]]=0;if(a.lencode=a.lendyn,a.lenbits=7,z={bits:a.lenbits},x=O(0,a.lens,0,19,a.lencode,0,a.work,z),a.lenbits=z.bits,x){t.msg=\"invalid code lengths set\",a.mode=30;break}a.have=0,a.mode=19;case 19:for(;a.have<a.nlen+a.ndist;){for(;m=(S=a.lencode[h&(1<<a.lenbits)-1])>>>16&255,w=65535&S,!((g=S>>>24)<=d);){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}if(w<16)h>>>=g,d-=g,a.lens[a.have++]=w;else{if(16===w){for(B=g+2;d<B;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}if(h>>>=g,d-=g,0===a.have){t.msg=\"invalid bit length repeat\",a.mode=30;break}y=a.lens[a.have-1],u=3+(3&h),h>>>=2,d-=2}else if(17===w){for(B=g+3;d<B;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}d-=g,y=0,u=3+(7&(h>>>=g)),h>>>=3,d-=3}else{for(B=g+7;d<B;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}d-=g,y=0,u=11+(127&(h>>>=g)),h>>>=7,d-=7}if(a.have+u>a.nlen+a.ndist){t.msg=\"invalid bit length repeat\",a.mode=30;break}for(;u--;)a.lens[a.have++]=y}}if(30===a.mode)break;if(0===a.lens[256]){t.msg=\"invalid code -- missing end-of-block\",a.mode=30;break}if(a.lenbits=9,z={bits:a.lenbits},x=O(D,a.lens,0,a.nlen,a.lencode,0,a.work,z),a.lenbits=z.bits,x){t.msg=\"invalid literal/lengths set\",a.mode=30;break}if(a.distbits=6,a.distcode=a.distdyn,z={bits:a.distbits},x=O(I,a.lens,a.nlen,a.ndist,a.distcode,0,a.work,z),a.distbits=z.bits,x){t.msg=\"invalid distances set\",a.mode=30;break}if(a.mode=20,6===e)break t;case 20:a.mode=21;case 21:if(6<=o&&258<=l){t.next_out=s,t.avail_out=l,t.next_in=r,t.avail_in=o,a.hold=h,a.bits=d,N(t,_),s=t.next_out,n=t.output,l=t.avail_out,r=t.next_in,i=t.input,o=t.avail_in,h=a.hold,d=a.bits,12===a.mode&&(a.back=-1);break}for(a.back=0;m=(S=a.lencode[h&(1<<a.lenbits)-1])>>>16&255,w=65535&S,!((g=S>>>24)<=d);){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}if(m&&0==(240&m)){for(p=g,v=m,k=w;m=(S=a.lencode[k+((h&(1<<p+v)-1)>>p)])>>>16&255,w=65535&S,!(p+(g=S>>>24)<=d);){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}h>>>=p,d-=p,a.back+=p}if(h>>>=g,d-=g,a.back+=g,a.length=w,0===m){a.mode=26;break}if(32&m){a.back=-1,a.mode=12;break}if(64&m){t.msg=\"invalid literal/length code\",a.mode=30;break}a.extra=15&m,a.mode=22;case 22:if(a.extra){for(B=a.extra;d<B;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}a.length+=h&(1<<a.extra)-1,h>>>=a.extra,d-=a.extra,a.back+=a.extra}a.was=a.length,a.mode=23;case 23:for(;m=(S=a.distcode[h&(1<<a.distbits)-1])>>>16&255,w=65535&S,!((g=S>>>24)<=d);){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}if(0==(240&m)){for(p=g,v=m,k=w;m=(S=a.distcode[k+((h&(1<<p+v)-1)>>p)])>>>16&255,w=65535&S,!(p+(g=S>>>24)<=d);){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}h>>>=p,d-=p,a.back+=p}if(h>>>=g,d-=g,a.back+=g,64&m){t.msg=\"invalid distance code\",a.mode=30;break}a.offset=w,a.extra=15&m,a.mode=24;case 24:if(a.extra){for(B=a.extra;d<B;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}a.offset+=h&(1<<a.extra)-1,h>>>=a.extra,d-=a.extra,a.back+=a.extra}if(a.offset>a.dmax){t.msg=\"invalid distance too far back\",a.mode=30;break}a.mode=25;case 25:if(0===l)break t;if(u=_-l,a.offset>u){if((u=a.offset-u)>a.whave&&a.sane){t.msg=\"invalid distance too far back\",a.mode=30;break}u>a.wnext?(u-=a.wnext,c=a.wsize-u):c=a.wnext-u,u>a.length&&(u=a.length),b=a.window}else b=n,c=s-a.offset,u=a.length;for(l<u&&(u=l),l-=u,a.length-=u;n[s++]=b[c++],--u;);0===a.length&&(a.mode=21);break;case 26:if(0===l)break t;n[s++]=a.length,l--,a.mode=21;break;case 27:if(a.wrap){for(;d<32;){if(0===o)break t;o--,h|=i[r++]<<d,d+=8}if(_-=l,t.total_out+=_,a.total+=_,_&&(t.adler=a.check=a.flags?C(a.check,n,_,s-_):R(a.check,n,_,s-_)),_=l,(a.flags?h:L(h))!==a.check){t.msg=\"incorrect data check\",a.mode=30;break}d=h=0}a.mode=28;case 28:if(a.wrap&&a.flags){for(;d<32;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}if(h!==(4294967295&a.total)){t.msg=\"incorrect length check\",a.mode=30;break}d=h=0}a.mode=29;case 29:x=1;break t;case 30:x=-3;break t;case 31:return-4;case 32:default:return T}return t.next_out=s,t.avail_out=l,t.next_in=r,t.avail_in=o,a.hold=h,a.bits=d,(a.wsize||_!==t.avail_out&&a.mode<30&&(a.mode<27||4!==e))&&j(t,t.output,t.next_out,_-t.avail_out)?(a.mode=31,-4):(f-=t.avail_in,_-=t.avail_out,t.total_in+=f,t.total_out+=_,a.total+=_,a.wrap&&_&&(t.adler=a.check=a.flags?C(a.check,n,_,t.next_out-_):R(a.check,n,_,t.next_out-_)),t.data_type=a.bits+(a.last?64:0)+(12===a.mode?128:0)+(20===a.mode||15===a.mode?256:0),(0===f&&0===_||4===e)&&x===U&&(x=-5),x)},a.inflateEnd=function(t){if(!t||!t.state)return T;var e=t.state;return e.window&&(e.window=null),t.state=null,U},a.inflateGetHeader=function(t,e){var a;return t&&t.state?0==(2&(a=t.state).wrap)?T:((a.head=e).done=!1,U):T},a.inflateSetDictionary=function(t,e){var a,i=e.length;return t&&t.state?0!==(a=t.state).wrap&&11!==a.mode?T:11===a.mode&&R(1,e,i,0)!==a.check?-3:j(t,e,i,i)?(a.mode=31,-4):(a.havedict=1,U):T},a.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":3,\"./adler32\":5,\"./crc32\":7,\"./inffast\":10,\"./inftrees\":12}],12:[function(t,e,a){\"use strict\";var D=t(\"../utils/common\"),I=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],U=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],T=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],F=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];e.exports=function(t,e,a,i,n,r,s,o){var l,h,d,f,_,u,c,b,g,m=o.bits,w=0,p=0,v=0,k=0,y=0,x=0,z=0,B=0,S=0,E=0,A=null,Z=0,R=new D.Buf16(16),C=new D.Buf16(16),N=null,O=0;for(w=0;w<=15;w++)R[w]=0;for(p=0;p<i;p++)R[e[a+p]]++;for(y=m,k=15;1<=k&&0===R[k];k--);if(k<y&&(y=k),0===k)return n[r++]=20971520,n[r++]=20971520,o.bits=1,0;for(v=1;v<k&&0===R[v];v++);for(y<v&&(y=v),w=B=1;w<=15;w++)if(B<<=1,(B-=R[w])<0)return-1;if(0<B&&(0===t||1!==k))return-1;for(C[1]=0,w=1;w<15;w++)C[w+1]=C[w]+R[w];for(p=0;p<i;p++)0!==e[a+p]&&(s[C[e[a+p]]++]=p);if(0===t?(A=N=s,u=19):1===t?(A=I,Z-=257,N=U,O-=257,u=256):(A=T,N=F,u=-1),w=v,_=r,z=p=E=0,d=-1,f=(S=1<<(x=y))-1,1===t&&852<S||2===t&&592<S)return 1;for(;;){for(c=w-z,s[p]<u?(b=0,g=s[p]):s[p]>u?(b=N[O+s[p]],g=A[Z+s[p]]):(b=96,g=0),l=1<<w-z,v=h=1<<x;n[_+(E>>z)+(h-=l)]=c<<24|b<<16|g|0,0!==h;);for(l=1<<w-1;E&l;)l>>=1;if(0!==l?(E&=l-1,E+=l):E=0,p++,0==--R[w]){if(w===k)break;w=e[a+s[p]]}if(y<w&&(E&f)!==d){for(0===z&&(z=y),_+=v,B=1<<(x=w-z);x+z<k&&!((B-=R[x+z])<=0);)x++,B<<=1;if(S+=1<<x,1===t&&852<S||2===t&&592<S)return 1;n[d=E&f]=y<<24|x<<16|_-r|0}}return 0!==E&&(n[_+E]=w-z<<24|64<<16|0),o.bits=y,0}},{\"../utils/common\":3}],13:[function(t,e,a){\"use strict\";e.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],14:[function(t,e,a){\"use strict\";var l=t(\"../utils/common\"),o=0,h=1;function i(t){for(var e=t.length;0<=--e;)t[e]=0}var d=0,s=29,f=256,_=f+1+s,u=30,c=19,g=2*_+1,m=15,n=16,b=7,w=256,p=16,v=17,k=18,y=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],x=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],z=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],B=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],S=new Array(2*(_+2));i(S);var E=new Array(2*u);i(E);var A=new Array(512);i(A);var Z=new Array(256);i(Z);var R=new Array(s);i(R);var C,N,O,D=new Array(u);function I(t,e,a,i,n){this.static_tree=t,this.extra_bits=e,this.extra_base=a,this.elems=i,this.max_length=n,this.has_stree=t&&t.length}function r(t,e){this.dyn_tree=t,this.max_code=0,this.stat_desc=e}function U(t){return t<256?A[t]:A[256+(t>>>7)]}function T(t,e){t.pending_buf[t.pending++]=255&e,t.pending_buf[t.pending++]=e>>>8&255}function F(t,e,a){t.bi_valid>n-a?(t.bi_buf|=e<<t.bi_valid&65535,T(t,t.bi_buf),t.bi_buf=e>>n-t.bi_valid,t.bi_valid+=a-n):(t.bi_buf|=e<<t.bi_valid&65535,t.bi_valid+=a)}function L(t,e,a){F(t,a[2*e],a[2*e+1])}function H(t,e){for(var a=0;a|=1&t,t>>>=1,a<<=1,0<--e;);return a>>>1}function j(t,e,a){var i,n,r=new Array(m+1),s=0;for(i=1;i<=m;i++)r[i]=s=s+a[i-1]<<1;for(n=0;n<=e;n++){var o=t[2*n+1];0!==o&&(t[2*n]=H(r[o]++,o))}}function K(t){var e;for(e=0;e<_;e++)t.dyn_ltree[2*e]=0;for(e=0;e<u;e++)t.dyn_dtree[2*e]=0;for(e=0;e<c;e++)t.bl_tree[2*e]=0;t.dyn_ltree[2*w]=1,t.opt_len=t.static_len=0,t.last_lit=t.matches=0}function M(t){8<t.bi_valid?T(t,t.bi_buf):0<t.bi_valid&&(t.pending_buf[t.pending++]=t.bi_buf),t.bi_buf=0,t.bi_valid=0}function P(t,e,a,i){var n=2*e,r=2*a;return t[n]<t[r]||t[n]===t[r]&&i[e]<=i[a]}function Y(t,e,a){for(var i=t.heap[a],n=a<<1;n<=t.heap_len&&(n<t.heap_len&&P(e,t.heap[n+1],t.heap[n],t.depth)&&n++,!P(e,i,t.heap[n],t.depth));)t.heap[a]=t.heap[n],a=n,n<<=1;t.heap[a]=i}function q(t,e,a){var i,n,r,s,o=0;if(0!==t.last_lit)for(;i=t.pending_buf[t.d_buf+2*o]<<8|t.pending_buf[t.d_buf+2*o+1],n=t.pending_buf[t.l_buf+o],o++,0===i?L(t,n,e):(L(t,(r=Z[n])+f+1,e),0!==(s=y[r])&&F(t,n-=R[r],s),L(t,r=U(--i),a),0!==(s=x[r])&&F(t,i-=D[r],s)),o<t.last_lit;);L(t,w,e)}function G(t,e){var a,i,n,r=e.dyn_tree,s=e.stat_desc.static_tree,o=e.stat_desc.has_stree,l=e.stat_desc.elems,h=-1;for(t.heap_len=0,t.heap_max=g,a=0;a<l;a++)0!==r[2*a]?(t.heap[++t.heap_len]=h=a,t.depth[a]=0):r[2*a+1]=0;for(;t.heap_len<2;)r[2*(n=t.heap[++t.heap_len]=h<2?++h:0)]=1,t.depth[n]=0,t.opt_len--,o&&(t.static_len-=s[2*n+1]);for(e.max_code=h,a=t.heap_len>>1;1<=a;a--)Y(t,r,a);for(n=l;a=t.heap[1],t.heap[1]=t.heap[t.heap_len--],Y(t,r,1),i=t.heap[1],t.heap[--t.heap_max]=a,t.heap[--t.heap_max]=i,r[2*n]=r[2*a]+r[2*i],t.depth[n]=(t.depth[a]>=t.depth[i]?t.depth[a]:t.depth[i])+1,r[2*a+1]=r[2*i+1]=n,t.heap[1]=n++,Y(t,r,1),2<=t.heap_len;);t.heap[--t.heap_max]=t.heap[1],function(t,e){var a,i,n,r,s,o,l=e.dyn_tree,h=e.max_code,d=e.stat_desc.static_tree,f=e.stat_desc.has_stree,_=e.stat_desc.extra_bits,u=e.stat_desc.extra_base,c=e.stat_desc.max_length,b=0;for(r=0;r<=m;r++)t.bl_count[r]=0;for(l[2*t.heap[t.heap_max]+1]=0,a=t.heap_max+1;a<g;a++)c<(r=l[2*l[2*(i=t.heap[a])+1]+1]+1)&&(r=c,b++),l[2*i+1]=r,h<i||(t.bl_count[r]++,s=0,u<=i&&(s=_[i-u]),o=l[2*i],t.opt_len+=o*(r+s),f&&(t.static_len+=o*(d[2*i+1]+s)));if(0!==b){do{for(r=c-1;0===t.bl_count[r];)r--;t.bl_count[r]--,t.bl_count[r+1]+=2,t.bl_count[c]--,b-=2}while(0<b);for(r=c;0!==r;r--)for(i=t.bl_count[r];0!==i;)h<(n=t.heap[--a])||(l[2*n+1]!==r&&(t.opt_len+=(r-l[2*n+1])*l[2*n],l[2*n+1]=r),i--)}}(t,e),j(r,h,t.bl_count)}function X(t,e,a){var i,n,r=-1,s=e[1],o=0,l=7,h=4;for(0===s&&(l=138,h=3),e[2*(a+1)+1]=65535,i=0;i<=a;i++)n=s,s=e[2*(i+1)+1],++o<l&&n===s||(o<h?t.bl_tree[2*n]+=o:0!==n?(n!==r&&t.bl_tree[2*n]++,t.bl_tree[2*p]++):o<=10?t.bl_tree[2*v]++:t.bl_tree[2*k]++,r=n,(o=0)===s?(l=138,h=3):n===s?(l=6,h=3):(l=7,h=4))}function W(t,e,a){var i,n,r=-1,s=e[1],o=0,l=7,h=4;for(0===s&&(l=138,h=3),i=0;i<=a;i++)if(n=s,s=e[2*(i+1)+1],!(++o<l&&n===s)){if(o<h)for(;L(t,n,t.bl_tree),0!=--o;);else 0!==n?(n!==r&&(L(t,n,t.bl_tree),o--),L(t,p,t.bl_tree),F(t,o-3,2)):o<=10?(L(t,v,t.bl_tree),F(t,o-3,3)):(L(t,k,t.bl_tree),F(t,o-11,7));r=n,(o=0)===s?(l=138,h=3):n===s?(l=6,h=3):(l=7,h=4)}}i(D);var J=!1;function Q(t,e,a,i){var n,r,s,o;F(t,(d<<1)+(i?1:0),3),r=e,s=a,o=!0,M(n=t),o&&(T(n,s),T(n,~s)),l.arraySet(n.pending_buf,n.window,r,s,n.pending),n.pending+=s}a._tr_init=function(t){J||(function(){var t,e,a,i,n,r=new Array(m+1);for(i=a=0;i<s-1;i++)for(R[i]=a,t=0;t<1<<y[i];t++)Z[a++]=i;for(Z[a-1]=i,i=n=0;i<16;i++)for(D[i]=n,t=0;t<1<<x[i];t++)A[n++]=i;for(n>>=7;i<u;i++)for(D[i]=n<<7,t=0;t<1<<x[i]-7;t++)A[256+n++]=i;for(e=0;e<=m;e++)r[e]=0;for(t=0;t<=143;)S[2*t+1]=8,t++,r[8]++;for(;t<=255;)S[2*t+1]=9,t++,r[9]++;for(;t<=279;)S[2*t+1]=7,t++,r[7]++;for(;t<=287;)S[2*t+1]=8,t++,r[8]++;for(j(S,_+1,r),t=0;t<u;t++)E[2*t+1]=5,E[2*t]=H(t,5);C=new I(S,y,f+1,_,m),N=new I(E,x,0,u,m),O=new I(new Array(0),z,0,c,b)}(),J=!0),t.l_desc=new r(t.dyn_ltree,C),t.d_desc=new r(t.dyn_dtree,N),t.bl_desc=new r(t.bl_tree,O),t.bi_buf=0,t.bi_valid=0,K(t)},a._tr_stored_block=Q,a._tr_flush_block=function(t,e,a,i){var n,r,s=0;0<t.level?(2===t.strm.data_type&&(t.strm.data_type=function(t){var e,a=4093624447;for(e=0;e<=31;e++,a>>>=1)if(1&a&&0!==t.dyn_ltree[2*e])return o;if(0!==t.dyn_ltree[18]||0!==t.dyn_ltree[20]||0!==t.dyn_ltree[26])return h;for(e=32;e<f;e++)if(0!==t.dyn_ltree[2*e])return h;return o}(t)),G(t,t.l_desc),G(t,t.d_desc),s=function(t){var e;for(X(t,t.dyn_ltree,t.l_desc.max_code),X(t,t.dyn_dtree,t.d_desc.max_code),G(t,t.bl_desc),e=c-1;3<=e&&0===t.bl_tree[2*B[e]+1];e--);return t.opt_len+=3*(e+1)+5+5+4,e}(t),n=t.opt_len+3+7>>>3,(r=t.static_len+3+7>>>3)<=n&&(n=r)):n=r=a+5,a+4<=n&&-1!==e?Q(t,e,a,i):4===t.strategy||r===n?(F(t,2+(i?1:0),3),q(t,S,E)):(F(t,4+(i?1:0),3),function(t,e,a,i){var n;for(F(t,e-257,5),F(t,a-1,5),F(t,i-4,4),n=0;n<i;n++)F(t,t.bl_tree[2*B[n]+1],3);W(t,t.dyn_ltree,e-1),W(t,t.dyn_dtree,a-1)}(t,t.l_desc.max_code+1,t.d_desc.max_code+1,s+1),q(t,t.dyn_ltree,t.dyn_dtree)),K(t),i&&M(t)},a._tr_tally=function(t,e,a){return t.pending_buf[t.d_buf+2*t.last_lit]=e>>>8&255,t.pending_buf[t.d_buf+2*t.last_lit+1]=255&e,t.pending_buf[t.l_buf+t.last_lit]=255&a,t.last_lit++,0===e?t.dyn_ltree[2*a]++:(t.matches++,e--,t.dyn_ltree[2*(Z[a]+f+1)]++,t.dyn_dtree[2*U(e)]++),t.last_lit===t.lit_bufsize-1},a._tr_align=function(t){var e;F(t,2,3),L(t,w,S),16===(e=t).bi_valid?(T(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):8<=e.bi_valid&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)}},{\"../utils/common\":3}],15:[function(t,e,a){\"use strict\";e.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}},{}],\"/\":[function(t,e,a){\"use strict\";var i={};(0,t(\"./lib/utils/common\").assign)(i,t(\"./lib/deflate\"),t(\"./lib/inflate\"),t(\"./lib/zlib/constants\")),e.exports=i},{\"./lib/deflate\":1,\"./lib/inflate\":2,\"./lib/utils/common\":3,\"./lib/zlib/constants\":6}]},{},[])(\"/\")});"},{"col_type":"movie_3","name":"lib-lzma-local.js","path":"lib-lzma-local.js","rule":"js:\nvar e=function(){\"use strict\";function r(e,r){postMessage({action:xt,cbn:r,result:e})}function t(e){var r=[];return r[e-1]=void 0,r}function o(e,r){return i(e[0]+r[0],e[1]+r[1])}function n(e,r){return u(~~Math.max(Math.min(e[1]/Ot,2147483647),-2147483648)&~~Math.max(Math.min(r[1]/Ot,2147483647),-2147483648),c(e)&c(r))}function s(e,r){var t,o;return e[0]==r[0]&&e[1]==r[1]?0:(t=0>e[1],o=0>r[1],t&&!o?-1:!t&&o?1:h(e,r)[1]<0?-1:1)}function i(e,r){var t,o;for(r%=0x10000000000000000,e%=0x10000000000000000,t=r%Ot,o=Math.floor(e/Ot)*Ot,r=r-t+o,e=e-o+t;0>e;)e+=Ot,r-=Ot;for(;e>4294967295;)e-=Ot,r+=Ot;for(r%=0x10000000000000000;r>0x7fffffff00000000;)r-=0x10000000000000000;for(;-0x8000000000000000>r;)r+=0x10000000000000000;return[e,r]}function _(e,r){return e[0]==r[0]&&e[1]==r[1]}function a(e){return e>=0?[e,0]:[e+Ot,-Ot]}function c(e){return e[0]>=2147483648?~~Math.max(Math.min(e[0]-Ot,2147483647),-2147483648):~~Math.max(Math.min(e[0],2147483647),-2147483648)}function u(e,r){var t,o;return t=e*Ot,o=r,0>r&&(o+=Ot),[o,t]}function f(e){return 30>=e?1<<e:f(30)*f(e-30)}function m(e,r){var t,o,n,s;if(r&=63,_(e,Ht))return r?Gt:e;if(0>e[1])throw Error(\"Neg\");return s=f(r),o=e[1]*s%0x10000000000000000,n=e[0]*s,t=n-n%Ot,o+=t,n-=t,o>=0x8000000000000000&&(o-=0x10000000000000000),[n,o]}function d(e,r){var t;return r&=63,t=f(r),i(Math.floor(e[0]/t),e[1]/t)}function p(e,r){var t;return r&=63,t=d(e,r),0>e[1]&&(t=o(t,m([2,0],63-r))),t}function h(e,r){return i(e[0]-r[0],e[1]-r[1])}function P(e,r){return e.Mc=r,e.Lc=0,e.Yb=r.length,e}function l(e){return e.Lc>=e.Yb?-1:255&e.Mc[e.Lc++]}function v(e,r,t,o){return e.Lc>=e.Yb?-1:(o=Math.min(o,e.Yb-e.Lc),M(e.Mc,e.Lc,r,t,o),e.Lc+=o,o)}function B(e){return e.Mc=t(32),e.Yb=0,e}function S(e){var r=e.Mc;return r.length=e.Yb,r}function g(e,r){e.Mc[e.Yb++]=r<<24>>24}function k(e,r,t,o){M(r,t,e.Mc,e.Yb,o),e.Yb+=o}function R(e,r,t,o,n){var s;for(s=r;t>s;++s)o[n++]=e.charCodeAt(s)}function M(e,r,t,o,n){for(var s=0;n>s;++s)t[o+s]=e[r+s]}function D(e,r){Ar(r,1<<e.s),r.n=e.f,Hr(r,e.m),r.eb=0,r.fb=3,r.Y=2,r.y=3}function b(r,t,o,n,i){var _,a;if(s(n,At)<0)throw Error(\"invalid length \"+n);for(r.Tb=n,_=Dr({}),D(i,_),_.Gc=void 0===e.disableEndMark,Gr(_,o),a=0;64>a;a+=8)g(o,255&c(d(n,a)));r.yb=(_.W=0,_.oc=t,_.pc=0,Mr(_),_.d.Ab=o,Fr(_),wr(_),br(_),_.$.rb=_.n+1-2,Qr(_.$,1<<_.Y),_.i.rb=_.n+1-2,Qr(_.i,1<<_.Y),void(_.g=Gt),X({},_))}function w(e,r,t){return e.Nb=B({}),b(e,P({},r),e.Nb,a(r.length),t),e}function E(e,r,t){var o,n,s,i,_=\"\",c=[];for(n=0;5>n;++n){if(s=l(r),-1==s)throw Error(\"truncated input\");c[n]=s<<24>>24}if(o=ir({}),!ar(o,c))throw Error(\"corrupted input\");for(n=0;64>n;n+=8){if(s=l(r),-1==s)throw Error(\"truncated input\");s=s.toString(16),1==s.length&&(s=\"0\"+s),_=s+\"\"+_}/^0+$|^f+$/i.test(_)?e.Tb=At:(i=parseInt(_,16),e.Tb=i>4294967295?At:a(i)),e.yb=nr(o,r,t,e.Tb)}function L(e,r){return e.Nb=B({}),E(e,P({},r),e.Nb),e}function y(e,r,o,n){var s;e.Bc=r,e._b=o,s=r+o+n,(null==e.c||e.Kb!=s)&&(e.c=null,e.Kb=s,e.c=t(e.Kb)),e.H=e.Kb-o}function C(e,r){return e.c[e.f+e.o+r]}function z(e,r,t,o){var n,s;for(e.T&&e.o+r+o>e.h&&(o=e.h-(e.o+r)),++t,s=e.f+e.o+r,n=0;o>n&&e.c[s+n]==e.c[s+n-t];++n);return n}function F(e){return e.h-e.o}function I(e){var r,t,o;for(o=e.f+e.o-e.Bc,o>0&&--o,t=e.f+e.h-o,r=0;t>r;++r)e.c[r]=e.c[o+r];e.f-=o}function x(e){var r;++e.o,e.o>e.zb&&(r=e.f+e.o,r>e.H&&I(e),N(e))}function N(e){var r,t,o;if(!e.T)for(;;){if(o=-e.f+e.Kb-e.h,!o)return;if(r=v(e.cc,e.c,e.f+e.h,o),-1==r)return e.zb=e.h,t=e.f+e.zb,t>e.H&&(e.zb=e.H-e.f),void(e.T=1);e.h+=r,e.h>=e.o+e._b&&(e.zb=e.h-e._b)}}function O(e,r){e.f+=r,e.zb-=r,e.o-=r,e.h-=r}function A(e,r,o,n,s){var i,_,a;1073741567>r&&(e.Fc=16+(n>>1),a=~~((r+o+n+s)/2)+256,y(e,r+o,n+s,a),e.ob=n,i=r+1,e.p!=i&&(e.L=t(2*(e.p=i))),_=65536,e.qb&&(_=r-1,_|=_>>1,_|=_>>2,_|=_>>4,_|=_>>8,_>>=1,_|=65535,_>16777216&&(_>>=1),e.Ec=_,++_,_+=e.R),_!=e.rc&&(e.ub=t(e.rc=_)))}function H(e,r){var t,o,n,s,i,_,a,c,u,f,m,d,p,h,P,l,v,B,S,g,k;if(e.h>=e.o+e.ob)h=e.ob;else if(h=e.h-e.o,e.xb>h)return W(e),0;for(v=0,P=e.o>e.p?e.o-e.p:0,o=e.f+e.o,l=1,c=0,u=0,e.qb?(k=Tt[255&e.c[o]]^255&e.c[o+1],c=1023&k,k^=(255&e.c[o+2])<<8,u=65535&k,f=(k^Tt[255&e.c[o+3]]<<5)&e.Ec):f=255&e.c[o]^(255&e.c[o+1])<<8,n=e.ub[e.R+f]||0,e.qb&&(s=e.ub[c]||0,i=e.ub[1024+u]||0,e.ub[c]=e.o,e.ub[1024+u]=e.o,s>P&&e.c[e.f+s]==e.c[o]&&(r[v++]=l=2,r[v++]=e.o-s-1),i>P&&e.c[e.f+i]==e.c[o]&&(i==s&&(v-=2),r[v++]=l=3,r[v++]=e.o-i-1,s=i),0!=v&&s==n&&(v-=2,l=1)),e.ub[e.R+f]=e.o,S=(e.k<<1)+1,g=e.k<<1,d=p=e.w,0!=e.w&&n>P&&e.c[e.f+n+e.w]!=e.c[o+e.w]&&(r[v++]=l=e.w,r[v++]=e.o-n-1),t=e.Fc;;){if(P>=n||0==t--){e.L[S]=e.L[g]=0;break}if(a=e.o-n,_=(e.k>=a?e.k-a:e.k-a+e.p)<<1,B=e.f+n,m=p>d?d:p,e.c[B+m]==e.c[o+m]){for(;++m!=h&&e.c[B+m]==e.c[o+m];);if(m>l&&(r[v++]=l=m,r[v++]=a-1,m==h)){e.L[g]=e.L[_],e.L[S]=e.L[_+1];break}}(255&e.c[o+m])>(255&e.c[B+m])?(e.L[g]=n,g=_+1,n=e.L[g],p=m):(e.L[S]=n,S=_,n=e.L[S],d=m)}return W(e),v}function G(e){e.f=0,e.o=0,e.h=0,e.T=0,N(e),e.k=0,O(e,-1)}function W(e){var r;++e.k>=e.p&&(e.k=0),x(e),1073741823==e.o&&(r=e.o-e.p,T(e.L,2*e.p,r),T(e.ub,e.rc,r),O(e,r))}function T(e,r,t){var o,n;for(o=0;r>o;++o)n=e[o]||0,t>=n?n=0:n-=t,e[o]=n}function Z(e,r){e.qb=r>2,e.qb?(e.w=0,e.xb=4,e.R=66560):(e.w=2,e.xb=3,e.R=0)}function Y(e,r){var t,o,n,s,i,_,a,c,u,f,m,d,p,h,P,l,v;do{if(e.h>=e.o+e.ob)d=e.ob;else if(d=e.h-e.o,e.xb>d){W(e);continue}for(p=e.o>e.p?e.o-e.p:0,o=e.f+e.o,e.qb?(v=Tt[255&e.c[o]]^255&e.c[o+1],_=1023&v,e.ub[_]=e.o,v^=(255&e.c[o+2])<<8,a=65535&v,e.ub[1024+a]=e.o,c=(v^Tt[255&e.c[o+3]]<<5)&e.Ec):c=255&e.c[o]^(255&e.c[o+1])<<8,n=e.ub[e.R+c],e.ub[e.R+c]=e.o,P=(e.k<<1)+1,l=e.k<<1,f=m=e.w,t=e.Fc;;){if(p>=n||0==t--){e.L[P]=e.L[l]=0;break}if(i=e.o-n,s=(e.k>=i?e.k-i:e.k-i+e.p)<<1,h=e.f+n,u=m>f?f:m,e.c[h+u]==e.c[o+u]){for(;++u!=d&&e.c[h+u]==e.c[o+u];);if(u==d){e.L[l]=e.L[s],e.L[P]=e.L[s+1];break}}(255&e.c[o+u])>(255&e.c[h+u])?(e.L[l]=n,l=s+1,n=e.L[l],m=u):(e.L[P]=n,P=s,n=e.L[P],f=u)}W(e)}while(0!=--r)}function V(e,r,t){var o=e.o-r-1;for(0>o&&(o+=e.M);0!=t;--t)o>=e.M&&(o=0),e.Lb[e.o++]=e.Lb[o++],e.o>=e.M&&$(e)}function j(e,r){(null==e.Lb||e.M!=r)&&(e.Lb=t(r)),e.M=r,e.o=0,e.h=0}function $(e){var r=e.o-e.h;r&&(k(e.cc,e.Lb,e.h,r),e.o>=e.M&&(e.o=0),e.h=e.o)}function K(e,r){var t=e.o-r-1;return 0>t&&(t+=e.M),e.Lb[t]}function q(e,r){e.Lb[e.o++]=r,e.o>=e.M&&$(e)}function J(e){$(e),e.cc=null}function Q(e){return e-=2,4>e?e:3}function U(e){return 4>e?0:10>e?e-3:e-6}function X(e,r){return e.cb=r,e.Z=null,e.zc=1,e}function er(e,r){return e.Z=r,e.cb=null,e.zc=1,e}function rr(e){if(!e.zc)throw Error(\"bad state\");return e.cb?or(e):tr(e),e.zc}function tr(e){var r=sr(e.Z);if(-1==r)throw Error(\"corrupted input\");e.Pb=At,e.Pc=e.Z.g,(r||s(e.Z.Nc,Gt)>=0&&s(e.Z.g,e.Z.Nc)>=0)&&($(e.Z.B),J(e.Z.B),e.Z.e.Ab=null,e.zc=0)}function or(e){Rr(e.cb,e.cb.Xb,e.cb.uc,e.cb.Kc),e.Pb=e.cb.Xb[0],e.cb.Kc[0]&&(Or(e.cb),e.zc=0)}function nr(e,r,t,o){return e.e.Ab=r,J(e.B),e.B.cc=t,_r(e),e.U=0,e.ib=0,e.Jc=0,e.Ic=0,e.Qc=0,e.Nc=o,e.g=Gt,e.jc=0,er({},e)}function sr(e){var r,t,n,i,_,u;if(u=c(e.g)&e.Dc,vt(e.e,e.Gb,(e.U<<4)+u)){if(vt(e.e,e.Zb,e.U))n=0,vt(e.e,e.Cb,e.U)?(vt(e.e,e.Db,e.U)?(vt(e.e,e.Eb,e.U)?(t=e.Qc,e.Qc=e.Ic):t=e.Ic,e.Ic=e.Jc):t=e.Jc,e.Jc=e.ib,e.ib=t):vt(e.e,e.pb,(e.U<<4)+u)||(e.U=7>e.U?9:11,n=1),n||(n=mr(e.sb,e.e,u)+2,e.U=7>e.U?8:11);else if(e.Qc=e.Ic,e.Ic=e.Jc,e.Jc=e.ib,n=2+mr(e.Rb,e.e,u),e.U=7>e.U?7:10,_=at(e.kb[Q(n)],e.e),_>=4){if(i=(_>>1)-1,e.ib=(2|1&_)<<i,14>_)e.ib+=ut(e.kc,e.ib-_-1,e.e,i);else if(e.ib+=Bt(e.e,i-4)<<4,e.ib+=ct(e.Fb,e.e),0>e.ib)return-1==e.ib?1:-1}else e.ib=_;if(s(a(e.ib),e.g)>=0||e.ib>=e.nb)return-1;V(e.B,e.ib,n),e.g=o(e.g,a(n)),e.jc=K(e.B,0)}else r=Pr(e.gb,c(e.g),e.jc),e.jc=7>e.U?vr(r,e.e):Br(r,e.e,K(e.B,e.ib)),q(e.B,e.jc),e.U=U(e.U),e.g=o(e.g,Wt);return 0}function ir(e){e.B={},e.e={},e.Gb=t(192),e.Zb=t(12),e.Cb=t(12),e.Db=t(12),e.Eb=t(12),e.pb=t(192),e.kb=t(4),e.kc=t(114),e.Fb=_t({},4),e.Rb=dr({}),e.sb=dr({}),e.gb={};for(var r=0;4>r;++r)e.kb[r]=_t({},6);return e}function _r(e){e.B.h=0,e.B.o=0,gt(e.Gb),gt(e.pb),gt(e.Zb),gt(e.Cb),gt(e.Db),gt(e.Eb),gt(e.kc),lr(e.gb);for(var r=0;4>r;++r)gt(e.kb[r].G);pr(e.Rb),pr(e.sb),gt(e.Fb.G),St(e.e)}function ar(e,r){var t,o,n,s,i,_,a;if(5>r.length)return 0;for(a=255&r[0],n=a%9,_=~~(a/9),s=_%5,i=~~(_/5),t=0,o=0;4>o;++o)t+=(255&r[1+o])<<8*o;return t>99999999||!ur(e,n,s,i)?0:cr(e,t)}function cr(e,r){return 0>r?0:(e.Ob!=r&&(e.Ob=r,e.nb=Math.max(e.Ob,1),j(e.B,Math.max(e.nb,4096))),1)}function ur(e,r,t,o){if(r>8||t>4||o>4)return 0;hr(e.gb,t,r);var n=1<<o;return fr(e.Rb,n),fr(e.sb,n),e.Dc=n-1,1}function fr(e,r){for(;r>e.O;++e.O)e.ec[e.O]=_t({},3),e.hc[e.O]=_t({},3)}function mr(e,r,t){if(!vt(r,e.wc,0))return at(e.ec[t],r);var o=8;return o+=vt(r,e.wc,1)?8+at(e.tc,r):at(e.hc[t],r)}function dr(e){return e.wc=t(2),e.ec=t(16),e.hc=t(16),e.tc=_t({},8),e.O=0,e}function pr(e){gt(e.wc);for(var r=0;e.O>r;++r)gt(e.ec[r].G),gt(e.hc[r].G);gt(e.tc.G)}function hr(e,r,o){var n,s;if(null==e.V||e.u!=o||e.I!=r)for(e.I=r,e.qc=(1<<r)-1,e.u=o,s=1<<e.u+e.I,e.V=t(s),n=0;s>n;++n)e.V[n]=Sr({})}function Pr(e,r,t){return e.V[((r&e.qc)<<e.u)+((255&t)>>>8-e.u)]}function lr(e){var r,t;for(t=1<<e.u+e.I,r=0;t>r;++r)gt(e.V[r].Ib)}function vr(e,r){var t=1;do t=t<<1|vt(r,e.Ib,t);while(256>t);return t<<24>>24}function Br(e,r,t){var o,n,s=1;do if(n=t>>7&1,t<<=1,o=vt(r,e.Ib,(1+n<<8)+s),s=s<<1|o,n!=o){for(;256>s;)s=s<<1|vt(r,e.Ib,s);break}while(256>s);return s<<24>>24}function Sr(e){return e.Ib=t(768),e}function gr(e,r){var t,o,n,s;e.jb=r,n=e.a[r].r,o=e.a[r].j;do e.a[r].t&&(st(e.a[n]),e.a[n].r=n-1,e.a[r].Ac&&(e.a[n-1].t=0,e.a[n-1].r=e.a[r].r2,e.a[n-1].j=e.a[r].j2)),s=n,t=o,o=e.a[s].j,n=e.a[s].r,e.a[s].j=t,e.a[s].r=r,r=s;while(r>0);return e.mb=e.a[0].j,e.q=e.a[0].r}function kr(e){e.l=0,e.J=0;for(var r=0;4>r;++r)e.v[r]=0}function Rr(e,r,t,n){var i,u,f,m,d,p,P,l,v,B,S,g,k,R,M;if(r[0]=Gt,t[0]=Gt,n[0]=1,e.oc&&(e.b.cc=e.oc,G(e.b),e.W=1,e.oc=null),!e.pc){if(e.pc=1,R=e.g,_(e.g,Gt)){if(!F(e.b))return void Er(e,c(e.g));xr(e),k=c(e.g)&e.y,kt(e.d,e.C,(e.l<<4)+k,0),e.l=U(e.l),f=C(e.b,-e.s),rt(Xr(e.A,c(e.g),e.J),e.d,f),e.J=f,--e.s,e.g=o(e.g,Wt)}if(!F(e.b))return void Er(e,c(e.g));for(;;){if(P=Lr(e,c(e.g)),B=e.mb,k=c(e.g)&e.y,u=(e.l<<4)+k,1==P&&-1==B)kt(e.d,e.C,u,0),f=C(e.b,-e.s),M=Xr(e.A,c(e.g),e.J),7>e.l?rt(M,e.d,f):(v=C(e.b,-e.v[0]-1-e.s),tt(M,e.d,v,f)),e.J=f,e.l=U(e.l);else{if(kt(e.d,e.C,u,1),4>B){if(kt(e.d,e.bb,e.l,1),B?(kt(e.d,e.hb,e.l,1),1==B?kt(e.d,e.Ub,e.l,0):(kt(e.d,e.Ub,e.l,1),kt(e.d,e.vc,e.l,B-2))):(kt(e.d,e.hb,e.l,0),1==P?kt(e.d,e._,u,0):kt(e.d,e._,u,1)),1==P?e.l=7>e.l?9:11:(Kr(e.i,e.d,P-2,k),e.l=7>e.l?8:11),m=e.v[B],0!=B){for(p=B;p>=1;--p)e.v[p]=e.v[p-1];e.v[0]=m}}else{for(kt(e.d,e.bb,e.l,0),e.l=7>e.l?7:10,Kr(e.$,e.d,P-2,k),B-=4,g=Tr(B),l=Q(P),mt(e.K[l],e.d,g),g>=4&&(d=(g>>1)-1,i=(2|1&g)<<d,S=B-i,14>g?Pt(e.Sb,i-g-1,e.d,d,S):(Rt(e.d,S>>4,d-4),pt(e.S,e.d,15&S),++e.Qb)),m=B,p=3;p>=1;--p)e.v[p]=e.v[p-1];e.v[0]=m,++e.Mb}e.J=C(e.b,P-1-e.s)}if(e.s-=P,e.g=o(e.g,a(P)),!e.s){if(e.Mb>=128&&wr(e),e.Qb>=16&&br(e),r[0]=e.g,t[0]=Mt(e.d),!F(e.b))return void Er(e,c(e.g));if(s(h(e.g,R),[4096,0])>=0)return e.pc=0,void(n[0]=0)}}}}function Mr(e){var r,t;e.b||(r={},t=4,e.X||(t=2),Z(r,t),e.b=r),Ur(e.A,e.eb,e.fb),(e.ab!=e.wb||e.Hb!=e.n)&&(A(e.b,e.ab,4096,e.n,274),e.wb=e.ab,e.Hb=e.n)}function Dr(e){var r;for(e.v=t(4),e.a=[],e.d={},e.C=t(192),e.bb=t(12),e.hb=t(12),e.Ub=t(12),e.vc=t(12),e._=t(192),e.K=[],e.Sb=t(114),e.S=ft({},4),e.$=qr({}),e.i=qr({}),e.A={},e.m=[],e.P=[],e.lb=[],e.nc=t(16),e.x=t(4),e.Q=t(4),e.Xb=[Gt],e.uc=[Gt],e.Kc=[0],e.fc=t(5),e.yc=t(128),e.vb=0,e.X=1,e.D=0,e.Hb=-1,e.mb=0,r=0;4096>r;++r)e.a[r]={};for(r=0;4>r;++r)e.K[r]=ft({},6);return e}function br(e){for(var r=0;16>r;++r)e.nc[r]=ht(e.S,r);e.Qb=0}function wr(e){var r,t,o,n,s,i,_,a;for(n=4;128>n;++n)i=Tr(n),o=(i>>1)-1,r=(2|1&i)<<o,e.yc[n]=lt(e.Sb,r-i-1,o,n-r);for(s=0;4>s;++s){for(t=e.K[s],_=s<<6,i=0;e.$b>i;++i)e.P[_+i]=dt(t,i);for(i=14;e.$b>i;++i)e.P[_+i]+=(i>>1)-1-4<<6;for(a=128*s,n=0;4>n;++n)e.lb[a+n]=e.P[_+n];for(;128>n;++n)e.lb[a+n]=e.P[_+Tr(n)]+e.yc[n]}e.Mb=0}function Er(e,r){Nr(e),Wr(e,r&e.y);for(var t=0;5>t;++t)bt(e.d)}function Lr(e,r){var t,o,n,s,i,_,a,c,u,f,m,d,p,h,P,l,v,B,S,g,k,R,M,D,b,w,E,L,y,I,x,N,O,A,H,G,W,T,Z,Y,V,j,$,K,q,J,Q,X,er,rr;if(e.jb!=e.q)return p=e.a[e.q].r-e.q,e.mb=e.a[e.q].j,e.q=e.a[e.q].r,p;if(e.q=e.jb=0,e.N?(d=e.vb,e.N=0):d=xr(e),E=e.D,b=F(e.b)+1,2>b)return e.mb=-1,1;for(b>273&&(b=273),Y=0,u=0;4>u;++u)e.x[u]=e.v[u],e.Q[u]=z(e.b,-1,e.x[u],273),e.Q[u]>e.Q[Y]&&(Y=u);if(e.Q[Y]>=e.n)return e.mb=Y,p=e.Q[Y],Ir(e,p-1),p;if(d>=e.n)return e.mb=e.m[E-1]+4,Ir(e,d-1),d;if(a=C(e.b,-1),v=C(e.b,-e.v[0]-1-1),2>d&&a!=v&&2>e.Q[Y])return e.mb=-1,1;if(e.a[0].Hc=e.l,A=r&e.y,e.a[1].z=Yt[e.C[(e.l<<4)+A]>>>2]+nt(Xr(e.A,r,e.J),e.l>=7,v,a),st(e.a[1]),B=Yt[2048-e.C[(e.l<<4)+A]>>>2],Z=B+Yt[2048-e.bb[e.l]>>>2],v==a&&(V=Z+zr(e,e.l,A),e.a[1].z>V&&(e.a[1].z=V,it(e.a[1]))),m=d>=e.Q[Y]?d:e.Q[Y],2>m)return e.mb=e.a[1].j,1;e.a[1].r=0,e.a[0].bc=e.x[0],e.a[0].ac=e.x[1],e.a[0].dc=e.x[2],e.a[0].lc=e.x[3],f=m;do e.a[f--].z=268435455;while(f>=2);for(u=0;4>u;++u)if(T=e.Q[u],!(2>T)){G=Z+Cr(e,u,e.l,A);do s=G+Jr(e.i,T-2,A),x=e.a[T],x.z>s&&(x.z=s,x.r=0,x.j=u,x.t=0);while(--T>=2)}if(D=B+Yt[e.bb[e.l]>>>2],f=e.Q[0]>=2?e.Q[0]+1:2,d>=f){for(L=0;f>e.m[L];)L+=2;for(;c=e.m[L+1],s=D+yr(e,c,f,A),x=e.a[f],x.z>s&&(x.z=s,x.r=0,x.j=c+4,x.t=0),f!=e.m[L]||(L+=2,L!=E);++f);}for(t=0;;){if(++t,t==m)return gr(e,t);if(S=xr(e),E=e.D,S>=e.n)return e.vb=S,e.N=1,gr(e,t);if(++r,O=e.a[t].r,e.a[t].t?(--O,e.a[t].Ac?($=e.a[e.a[t].r2].Hc,$=4>e.a[t].j2?7>$?8:11:7>$?7:10):$=e.a[O].Hc,$=U($)):$=e.a[O].Hc,O==t-1?$=e.a[t].j?U($):7>$?9:11:(e.a[t].t&&e.a[t].Ac?(O=e.a[t].r2,N=e.a[t].j2,$=7>$?8:11):(N=e.a[t].j,$=4>N?7>$?8:11:7>$?7:10),I=e.a[O],4>N?N?1==N?(e.x[0]=I.ac,e.x[1]=I.bc,e.x[2]=I.dc,e.x[3]=I.lc):2==N?(e.x[0]=I.dc,e.x[1]=I.bc,e.x[2]=I.ac,e.x[3]=I.lc):(e.x[0]=I.lc,e.x[1]=I.bc,e.x[2]=I.ac,e.x[3]=I.dc):(e.x[0]=I.bc,e.x[1]=I.ac,e.x[2]=I.dc,e.x[3]=I.lc):(e.x[0]=N-4,e.x[1]=I.bc,e.x[2]=I.ac,e.x[3]=I.dc)),e.a[t].Hc=$,e.a[t].bc=e.x[0],e.a[t].ac=e.x[1],e.a[t].dc=e.x[2],e.a[t].lc=e.x[3],_=e.a[t].z,a=C(e.b,-1),v=C(e.b,-e.x[0]-1-1),A=r&e.y,o=_+Yt[e.C[($<<4)+A]>>>2]+nt(Xr(e.A,r,C(e.b,-2)),$>=7,v,a),R=e.a[t+1],g=0,R.z>o&&(R.z=o,R.r=t,R.j=-1,R.t=0,g=1),B=_+Yt[2048-e.C[($<<4)+A]>>>2],Z=B+Yt[2048-e.bb[$]>>>2],v!=a||t>R.r&&!R.j||(V=Z+(Yt[e.hb[$]>>>2]+Yt[e._[($<<4)+A]>>>2]),R.z>=V&&(R.z=V,R.r=t,R.j=0,R.t=0,g=1)),w=F(e.b)+1,w=w>4095-t?4095-t:w,b=w,!(2>b)){if(b>e.n&&(b=e.n),!g&&v!=a&&(q=Math.min(w-1,e.n),P=z(e.b,0,e.x[0],q),P>=2)){for(K=U($),H=r+1&e.y,M=o+Yt[2048-e.C[(K<<4)+H]>>>2]+Yt[2048-e.bb[K]>>>2],y=t+1+P;y>m;)e.a[++m].z=268435455;s=M+(J=Jr(e.i,P-2,H),J+Cr(e,0,K,H)),x=e.a[y],x.z>s&&(x.z=s,x.r=t+1,x.j=0,x.t=1,x.Ac=0)}for(j=2,W=0;4>W;++W)if(h=z(e.b,-1,e.x[W],b),!(2>h)){l=h;do{for(;t+h>m;)e.a[++m].z=268435455;s=Z+(Q=Jr(e.i,h-2,A),Q+Cr(e,W,$,A)),x=e.a[t+h],x.z>s&&(x.z=s,x.r=t,x.j=W,x.t=0)}while(--h>=2);if(h=l,W||(j=h+1),w>h&&(q=Math.min(w-1-h,e.n),P=z(e.b,h,e.x[W],q),P>=2)){for(K=7>$?8:11,H=r+h&e.y,n=Z+(X=Jr(e.i,h-2,A),X+Cr(e,W,$,A))+Yt[e.C[(K<<4)+H]>>>2]+nt(Xr(e.A,r+h,C(e.b,h-1-1)),1,C(e.b,h-1-(e.x[W]+1)),C(e.b,h-1)),K=U(K),H=r+h+1&e.y,k=n+Yt[2048-e.C[(K<<4)+H]>>>2],M=k+Yt[2048-e.bb[K]>>>2],y=h+1+P;t+y>m;)e.a[++m].z=268435455;s=M+(er=Jr(e.i,P-2,H),er+Cr(e,0,K,H)),x=e.a[t+y],x.z>s&&(x.z=s,x.r=t+h+1,x.j=0,x.t=1,x.Ac=1,x.r2=t,x.j2=W)}}if(S>b){for(S=b,E=0;S>e.m[E];E+=2);e.m[E]=S,E+=2}if(S>=j){for(D=B+Yt[e.bb[$]>>>2];t+S>m;)e.a[++m].z=268435455;for(L=0;j>e.m[L];)L+=2;for(h=j;;++h)if(i=e.m[L+1],s=D+yr(e,i,h,A),x=e.a[t+h],x.z>s&&(x.z=s,x.r=t,x.j=i+4,x.t=0),h==e.m[L]){if(w>h&&(q=Math.min(w-1-h,e.n),P=z(e.b,h,i,q),P>=2)){for(K=7>$?7:10,H=r+h&e.y,n=s+Yt[e.C[(K<<4)+H]>>>2]+nt(Xr(e.A,r+h,C(e.b,h-1-1)),1,C(e.b,h-(i+1)-1),C(e.b,h-1)),K=U(K),H=r+h+1&e.y,k=n+Yt[2048-e.C[(K<<4)+H]>>>2],M=k+Yt[2048-e.bb[K]>>>2],y=h+1+P;t+y>m;)e.a[++m].z=268435455;s=M+(rr=Jr(e.i,P-2,H),rr+Cr(e,0,K,H)),x=e.a[t+y],x.z>s&&(x.z=s,x.r=t+h+1,x.j=0,x.t=1,x.Ac=1,x.r2=t,x.j2=i+4)}if(L+=2,L==E)break}}}}}function yr(e,r,t,o){var n,s=Q(t);return n=128>r?e.lb[128*s+r]:e.P[(s<<6)+Zr(r)]+e.nc[15&r],n+Jr(e.$,t-2,o)}function Cr(e,r,t,o){var n;return r?(n=Yt[2048-e.hb[t]>>>2],1==r?n+=Yt[e.Ub[t]>>>2]:(n+=Yt[2048-e.Ub[t]>>>2],n+=wt(e.vc[t],r-2))):(n=Yt[e.hb[t]>>>2],n+=Yt[2048-e._[(t<<4)+o]>>>2]),n}function zr(e,r,t){return Yt[e.hb[r]>>>2]+Yt[e._[(r<<4)+t]>>>2]}function Fr(e){kr(e),Dt(e.d),gt(e.C),gt(e._),gt(e.bb),gt(e.hb),gt(e.Ub),gt(e.vc),gt(e.Sb),et(e.A);for(var r=0;4>r;++r)gt(e.K[r].G);jr(e.$,1<<e.Y),jr(e.i,1<<e.Y),gt(e.S.G),e.N=0,e.jb=0,e.q=0,e.s=0}function Ir(e,r){r>0&&(Y(e.b,r),e.s+=r)}function xr(e){var r=0;return e.D=H(e.b,e.m),e.D>0&&(r=e.m[e.D-2],r==e.n&&(r+=z(e.b,r-1,e.m[e.D-1],273-r))),++e.s,r}function Nr(e){e.b&&e.W&&(e.b.cc=null,e.W=0)}function Or(e){Nr(e),e.d.Ab=null}function Ar(e,r){e.ab=r;for(var t=0;r>1<<t;++t);e.$b=2*t}function Hr(e,r){var t=e.X;e.X=r,e.b&&t!=e.X&&(e.wb=-1,e.b=null)}function Gr(e,r){e.fc[0]=9*(5*e.Y+e.eb)+e.fb<<24>>24;for(var t=0;4>t;++t)e.fc[1+t]=e.ab>>8*t<<24>>24;k(r,e.fc,0,5)}function Wr(e,r){if(e.Gc){kt(e.d,e.C,(e.l<<4)+r,1),kt(e.d,e.bb,e.l,0),e.l=7>e.l?7:10,Kr(e.$,e.d,0,r);var t=Q(2);mt(e.K[t],e.d,63),Rt(e.d,67108863,26),pt(e.S,e.d,15)}}function Tr(e){return 2048>e?Zt[e]:2097152>e?Zt[e>>10]+20:Zt[e>>20]+40}function Zr(e){return 131072>e?Zt[e>>6]+12:134217728>e?Zt[e>>16]+32:Zt[e>>26]+52}function Yr(e,r,t,o){8>t?(kt(r,e.db,0,0),mt(e.Vb[o],r,t)):(t-=8,kt(r,e.db,0,1),8>t?(kt(r,e.db,1,0),mt(e.Wb[o],r,t)):(kt(r,e.db,1,1),mt(e.ic,r,t-8)))}function Vr(e){e.db=t(2),e.Vb=t(16),e.Wb=t(16),e.ic=ft({},8);for(var r=0;16>r;++r)e.Vb[r]=ft({},3),e.Wb[r]=ft({},3);return e}function jr(e,r){gt(e.db);for(var t=0;r>t;++t)gt(e.Vb[t].G),gt(e.Wb[t].G);gt(e.ic.G)}function $r(e,r,t,o,n){var s,i,_,a,c;for(s=Yt[e.db[0]>>>2],i=Yt[2048-e.db[0]>>>2],_=i+Yt[e.db[1]>>>2],a=i+Yt[2048-e.db[1]>>>2],c=0,c=0;8>c;++c){if(c>=t)return;o[n+c]=s+dt(e.Vb[r],c)}for(;16>c;++c){if(c>=t)return;o[n+c]=_+dt(e.Wb[r],c-8)}for(;t>c;++c)o[n+c]=a+dt(e.ic,c-8-8)}function Kr(e,r,t,o){Yr(e,r,t,o),0==--e.sc[o]&&($r(e,o,e.rb,e.Cc,272*o),e.sc[o]=e.rb)}function qr(e){return Vr(e),e.Cc=[],e.sc=[],e}function Jr(e,r,t){return e.Cc[272*t+r]}function Qr(e,r){for(var t=0;r>t;++t)$r(e,t,e.rb,e.Cc,272*t),e.sc[t]=e.rb}function Ur(e,r,o){var n,s;if(null==e.V||e.u!=o||e.I!=r)for(e.I=r,e.qc=(1<<r)-1,e.u=o,s=1<<e.u+e.I,e.V=t(s),n=0;s>n;++n)e.V[n]=ot({})}function Xr(e,r,t){return e.V[((r&e.qc)<<e.u)+((255&t)>>>8-e.u)]}function et(e){var r,t=1<<e.u+e.I;for(r=0;t>r;++r)gt(e.V[r].tb)}function rt(e,r,t){var o,n,s=1;for(n=7;n>=0;--n)o=t>>n&1,kt(r,e.tb,s,o),s=s<<1|o}function tt(e,r,t,o){var n,s,i,_,a=1,c=1;for(s=7;s>=0;--s)n=o>>s&1,_=c,a&&(i=t>>s&1,_+=1+i<<8,a=i==n),kt(r,e.tb,_,n),c=c<<1|n}function ot(e){return e.tb=t(768),e}function nt(e,r,t,o){var n,s,i=1,_=7,a=0;if(r)for(;_>=0;--_)if(s=t>>_&1,n=o>>_&1,a+=wt(e.tb[(1+s<<8)+i],n),i=i<<1|n,s!=n){--_;break}for(;_>=0;--_)n=o>>_&1,a+=wt(e.tb[i],n),i=i<<1|n;return a}function st(e){e.j=-1,e.t=0}function it(e){e.j=0,e.t=0}function _t(e,r){return e.F=r,e.G=t(1<<r),e}function at(e,r){var t,o=1;for(t=e.F;0!=t;--t)o=(o<<1)+vt(r,e.G,o);return o-(1<<e.F)}function ct(e,r){var t,o,n=1,s=0;for(o=0;e.F>o;++o)t=vt(r,e.G,n),n<<=1,n+=t,s|=t<<o;return s}function ut(e,r,t,o){var n,s,i=1,_=0;for(s=0;o>s;++s)n=vt(t,e,r+i),i<<=1,i+=n,_|=n<<s;return _}function ft(e,r){return e.F=r,e.G=t(1<<r),e}function mt(e,r,t){var o,n,s=1;for(n=e.F;0!=n;)--n,o=t>>>n&1,kt(r,e.G,s,o),s=s<<1|o}function dt(e,r){var t,o,n=1,s=0;for(o=e.F;0!=o;)--o,t=r>>>o&1,s+=wt(e.G[n],t),n=(n<<1)+t;return s}function pt(e,r,t){var o,n,s=1;for(n=0;e.F>n;++n)o=1&t,kt(r,e.G,s,o),s=s<<1|o,t>>=1}function ht(e,r){var t,o,n=1,s=0;for(o=e.F;0!=o;--o)t=1&r,r>>>=1,s+=wt(e.G[n],t),n=n<<1|t;return s}function Pt(e,r,t,o,n){var s,i,_=1;for(i=0;o>i;++i)s=1&n,kt(t,e,r+_,s),_=_<<1|s,n>>=1}function lt(e,r,t,o){var n,s,i=1,_=0;for(s=t;0!=s;--s)n=1&o,o>>>=1,_+=Yt[(2047&(e[r+i]-n^-n))>>>2],i=i<<1|n;return _}function vt(e,r,t){var o,n=r[t];return o=(e.E>>>11)*n,(-2147483648^o)>(-2147483648^e.Bb)?(e.E=o,r[t]=n+(2048-n>>>5)<<16>>16,-16777216&e.E||(e.Bb=e.Bb<<8|l(e.Ab),e.E<<=8),0):(e.E-=o,e.Bb-=o,r[t]=n-(n>>>5)<<16>>16,-16777216&e.E||(e.Bb=e.Bb<<8|l(e.Ab),e.E<<=8),1)}function Bt(e,r){var t,o,n=0;for(t=r;0!=t;--t)e.E>>>=1,o=e.Bb-e.E>>>31,e.Bb-=e.E&o-1,n=n<<1|1-o,-16777216&e.E||(e.Bb=e.Bb<<8|l(e.Ab),e.E<<=8);return n}function St(e){e.Bb=0,e.E=-1;for(var r=0;5>r;++r)e.Bb=e.Bb<<8|l(e.Ab)}function gt(e){for(var r=e.length-1;r>=0;--r)e[r]=1024}function kt(e,r,t,s){var i,_=r[t];i=(e.E>>>11)*_,s?(e.xc=o(e.xc,n(a(i),[4294967295,0])),e.E-=i,r[t]=_-(_>>>5)<<16>>16):(e.E=i,r[t]=_+(2048-_>>>5)<<16>>16),-16777216&e.E||(e.E<<=8,bt(e))}function Rt(e,r,t){for(var n=t-1;n>=0;--n)e.E>>>=1,1==(r>>>n&1)&&(e.xc=o(e.xc,a(e.E))),-16777216&e.E||(e.E<<=8,bt(e))}function Mt(e){return o(o(a(e.Jb),e.mc),[4,0])}function Dt(e){e.mc=Gt,e.xc=Gt,e.E=-1,e.Jb=1,e.Oc=0}function bt(e){var r,t=c(p(e.xc,32));if(0!=t||s(e.xc,[4278190080,0])<0){e.mc=o(e.mc,a(e.Jb)),r=e.Oc;do g(e.Ab,r+t),r=255;while(0!=--e.Jb);e.Oc=c(e.xc)>>>24}++e.Jb,e.xc=m(n(e.xc,[16777215,0]),8)}function wt(e,r){return Yt[(2047&(e-r^-r))>>>2]}function Et(e){for(var r,t,o,n=0,s=0,i=e.length,_=[],a=[];i>n;++n,++s){if(r=255&e[n],128&r)if(192==(224&r)){if(n+1>=i)return e;if(t=255&e[++n],128!=(192&t))return e;a[s]=(31&r)<<6|63&t}else{if(224!=(240&r))return e;\nif(n+2>=i)return e;if(t=255&e[++n],128!=(192&t))return e;if(o=255&e[++n],128!=(192&o))return e;a[s]=(15&r)<<12|(63&t)<<6|63&o}else{if(!r)return e;a[s]=r}16383==s&&(_.push(String.fromCharCode.apply(String,a)),s=-1)}return s>0&&(a.length=s,_.push(String.fromCharCode.apply(String,a))),_.join(\"\")}function Lt(e){var r,t,o,n=[],s=0,i=e.length;if(\"object\"==typeof e)return e;for(R(e,0,i,n,0),o=0;i>o;++o)r=n[o],r>=1&&127>=r?++s:s+=!r||r>=128&&2047>=r?2:3;for(t=[],s=0,o=0;i>o;++o)r=n[o],r>=1&&127>=r?t[s++]=r<<24>>24:!r||r>=128&&2047>=r?(t[s++]=(192|r>>6&31)<<24>>24,t[s++]=(128|63&r)<<24>>24):(t[s++]=(224|r>>12&15)<<24>>24,t[s++]=(128|r>>6&63)<<24>>24,t[s++]=(128|63&r)<<24>>24);return t}function yt(e){return e[1]+e[0]}function Ct(e,t,o,n){function s(){try{for(var e,r=(new Date).getTime();rr(a.c.yb);)if(i=yt(a.c.yb.Pb)/yt(a.c.Tb),(new Date).getTime()-r>200)return n(i),Nt(s,0),0;n(1),e=S(a.c.Nb),Nt(o.bind(null,e),0)}catch(t){o(null,t)}}var i,_,a={},c=void 0===o&&void 0===n;if(\"function\"!=typeof o&&(_=o,o=n=0),n=n||function(e){return void 0!==_?r(e,_):void 0},o=o||function(e,r){return void 0!==_?postMessage({action:Ft,cbn:_,result:e,error:r}):void 0},c){for(a.c=w({},Lt(e),Vt(t));rr(a.c.yb););return S(a.c.Nb)}try{a.c=w({},Lt(e),Vt(t)),n(0)}catch(u){return o(null,u)}Nt(s,0)}function zt(e,t,o){function n(){try{for(var e,r=0,i=(new Date).getTime();rr(c.d.yb);)if(++r%1e3==0&&(new Date).getTime()-i>200)return _&&(s=yt(c.d.yb.Z.g)/a,o(s)),Nt(n,0),0;o(1),e=Et(S(c.d.Nb)),Nt(t.bind(null,e),0)}catch(u){t(null,u)}}var s,i,_,a,c={},u=void 0===t&&void 0===o;if(\"function\"!=typeof t&&(i=t,t=o=0),o=o||function(e){return void 0!==i?r(_?e:-1,i):void 0},t=t||function(e,r){return void 0!==i?postMessage({action:It,cbn:i,result:e,error:r}):void 0},u){for(c.d=L({},e);rr(c.d.yb););return Et(S(c.d.Nb))}try{c.d=L({},e),a=yt(c.d.Tb),_=a>-1,o(0)}catch(f){return t(null,f)}Nt(n,0)}var Ft=1,It=2,xt=3,Nt=\"function\"==typeof setImmediate?setImmediate:setTimeout,Ot=4294967296,At=[4294967295,-Ot],Ht=[0,-0x8000000000000000],Gt=[0,0],Wt=[1,0],Tt=function(){var e,r,t,o=[];for(e=0;256>e;++e){for(t=e,r=0;8>r;++r)0!=(1&t)?t=t>>>1^-306674912:t>>>=1;o[e]=t}return o}(),Zt=function(){var e,r,t,o=2,n=[0,1];for(t=2;22>t;++t)for(r=1<<(t>>1)-1,e=0;r>e;++e,++o)n[o]=t<<24>>24;return n}(),Yt=function(){var e,r,t,o,n=[];for(r=8;r>=0;--r)for(o=1<<9-r-1,e=1<<9-r,t=o;e>t;++t)n[t]=(r<<6)+(e-t<<6>>>9-r-1);return n}(),Vt=function(){var e=[{s:16,f:64,m:0},{s:20,f:64,m:0},{s:19,f:64,m:1},{s:20,f:64,m:1},{s:21,f:128,m:1},{s:22,f:128,m:1},{s:23,f:128,m:1},{s:24,f:255,m:1},{s:25,f:255,m:1}];return function(r){return e[r-1]||e[6]}}();return\"undefined\"==typeof onmessage||\"undefined\"!=typeof window&&void 0!==window.document||!function(){onmessage=function(r){r&&r.gc&&(r.gc.action==It?e.decompress(r.gc.gc,r.gc.cbn):r.gc.action==Ft&&e.compress(r.gc.gc,r.gc.Rc,r.gc.cbn))}}(),{compress:Ct,decompress:zt}}();this.LZMA=this.LZMA_WORKER=e;"},{"col_type":"movie_3","name":"Zlib-Base64","path":"deflate-base64","rule":"js:\n/**\n * 以下压缩和解压方法来自 α 大佬\n */\n// 解压 \nlet {\n    utf8ArrayToStr,\n    performance,\n} = $.require(\"hiker://page/methods\")\n\n\nfunction unzip(b64Data) {\n    let strData = window0.atob(b64Data);\n    const charData = strData.split('').map(function(x) {\n        return x.charCodeAt(0);\n    });\n    const binData = new Uint8Array(charData);\n    const data = pako.inflate(binData);\n    //strData = String.fromCharCode.apply(null, new Uint16Array(data));\n    return utf8ArrayToStr(data);\n}\n\n//pako.deflate\nlet level=9;\n\n// 压缩\nfunction zip(str) {\n    log((getPageTitle().replace(/算法|\\s+|-Base64/g,\"\"))+\"压缩等级:\"+level);\n    const binary = pako.deflate(str, {\n        to: 'string',\n        level:level\n    })\n    //log(binary)\n    return window0.btoa(binary);\n}\n\nlet pako = $.require(\"lib-pako.js?rule=\" + MY_RULE.title)\nlet ZipTool = {\n    compress: {\n        size: {\n            key: \"test-compress-size\",\n            set: (newValue) => {\n                putVar(this.key, newValue.toString())\n            },\n            get: () => {\n                return parseInt(getVar(this.key, \"0\"))\n            }\n        },\n        exec: (input) => {\n            let result = performance(zip,input)\n            ZipTool.compress.size.set(result.length)\n            return result\n        }\n    },\n    decompress: {\n        size: {\n            get: () => {\n                return getVar(\"test-decompress\", \"\").length\n            }\n        },\n        exec: (input) => {\n            let result = performance(unzip,input)\n            return result\n        }\n    }\n}"},{"col_type":"movie_3","name":"lib-lz4-local.js","path":"lib-lz4-local.js","rule":"js:\n// lz4.js - An implementation of Lz4 in plain JavaScript.\n//\n// TODO:\n// - Unify header parsing/writing.\n// - Support options (block size, checksums)\n// - Support streams\n// - Better error handling (handle bad offset, etc.)\n// - HC support (better search algorithm)\n// - Tests/benchmarking\n// xxh32.js - implementation of xxhash32 in plain JavaScript\n//var util = require('hiker://page/util.js');\n\n// xxhash32 primes\nvar prime1 = 0x9e3779b1;\nvar prime2 = 0x85ebca77;\nvar prime3 = 0xc2b2ae3d;\nvar prime4 = 0x27d4eb2f;\nvar prime5 = 0x165667b1;\n\n// Utility functions/primitives\n// --\n\nfunction rotl32(x, r) {\n    x = x | 0;\n    r = r | 0;\n\n    return x >>> (32 - r | 0) | x << r | 0;\n}\n\nfunction rotmul32(h, r, m) {\n    h = h | 0;\n    r = r | 0;\n    m = m | 0;\n\n    return util.imul(h >>> (32 - r | 0) | h << r, m) | 0;\n}\n\nfunction shiftxor32(h, s) {\n    h = h | 0;\n    s = s | 0;\n\n    return h >>> s ^ h | 0;\n}\n\n// Implementation\n// --\n\nfunction xxhapply(h, src, m0, s, m1) {\n    return rotmul32(util.imul(src, m0) + h, s, m1);\n}\n\nfunction xxh1(h, src, index) {\n    return rotmul32((h + util.imul(src[index], prime5)), 11, prime1);\n}\n\nfunction xxh4(h, src, index) {\n    return xxhapply(h, util.readU32(src, index), prime3, 17, prime4);\n}\n\nfunction xxh16(h, src, index) {\n    return [\n        xxhapply(h[0], util.readU32(src, index + 0), prime2, 13, prime1),\n        xxhapply(h[1], util.readU32(src, index + 4), prime2, 13, prime1),\n        xxhapply(h[2], util.readU32(src, index + 8), prime2, 13, prime1),\n        xxhapply(h[3], util.readU32(src, index + 12), prime2, 13, prime1)\n    ];\n}\n\nfunction xxh32(seed, src, index, len) {\n    var h, l;\n    l = len;\n    if (len >= 16) {\n        h = [\n            seed + prime1 + prime2,\n            seed + prime2,\n            seed,\n            seed - prime1\n        ];\n\n        while (len >= 16) {\n            h = xxh16(h, src, index);\n\n            index += 16;\n            len -= 16;\n        }\n\n        h = rotl32(h[0], 1) + rotl32(h[1], 7) + rotl32(h[2], 12) + rotl32(h[3], 18) + l;\n    } else {\n        h = (seed + prime5 + len) >>> 0;\n    }\n\n    while (len >= 4) {\n        h = xxh4(h, src, index);\n\n        index += 4;\n        len -= 4;\n    }\n\n    while (len > 0) {\n        h = xxh1(h, src, index);\n\n        index++;\n        len--;\n    }\n\n    h = shiftxor32(util.imul(shiftxor32(util.imul(shiftxor32(h, 15), prime2), 13), prime3), 16);\n\n    return h >>> 0;\n}\n\n\nvar xxhash = {\n    hash : xxh32\n}\nvar util = {\n    hashU32: function(a) {\n        a = a | 0;\n        a = a + 2127912214 + (a << 12) | 0;\n        a = a ^ -949894596 ^ a >>> 19;\n        a = a + 374761393 + (a << 5) | 0;\n        a = a + -744332180 ^ a << 9;\n        a = a + -42973499 + (a << 3) | 0;\n        return a ^ -1252372727 ^ a >>> 16 | 0;\n    },\n    // Reads a 64-bit little-endian integer from an array.\n    readU64: function(b, n) {\n        var x = 0;\n        x |= b[n++] << 0;\n        x |= b[n++] << 8;\n        x |= b[n++] << 16;\n        x |= b[n++] << 24;\n        x |= b[n++] << 32;\n        x |= b[n++] << 40;\n        x |= b[n++] << 48;\n        x |= b[n++] << 56;\n        return x;\n    },\n\n    // Reads a 32-bit little-endian integer from an array.\n    readU32: function(b, n) {\n        var x = 0;\n        x |= b[n++] << 0;\n        x |= b[n++] << 8;\n        x |= b[n++] << 16;\n        x |= b[n++] << 24;\n        return x;\n    },\n    // Writes a 32-bit little-endian integer from an array.\n    writeU32: function(b, n, x) {\n        b[n++] = (x >> 0) & 0xff;\n        b[n++] = (x >> 8) & 0xff;\n        b[n++] = (x >> 16) & 0xff;\n        b[n++] = (x >> 24) & 0xff;\n    },\n    // Multiplies two numbers using 32-bit integer multiplication.\n    // Algorithm from Emscripten.\n    imul: function(a, b) {\n        var ah = a >>> 16;\n        var al = a & 65535;\n        var bh = b >>> 16;\n        var bl = b & 65535;\n\n        return al * bl + (ah * bl + al * bh << 16) | 0;\n    },\n}\n\n// Constants\n// --\n\n// Compression format parameters/constants.\nvar minMatch = 4;\nvar minLength = 13;\nvar searchLimit = 5;\nvar skipTrigger = 6;\nvar hashSize = 1 << 16;\n\n// Token constants.\nvar mlBits = 4;\nvar mlMask = (1 << mlBits) - 1;\nvar runBits = 4;\nvar runMask = (1 << runBits) - 1;\n\n// Shared buffers\nvar blockBuf = makeBuffer(5 << 20);\nvar hashTable = makeHashTable();\n\n// Frame constants.\nvar magicNum = 0x184D2204;\n\n// Frame descriptor flags.\nvar fdContentChksum = 0x4;\nvar fdContentSize = 0x8;\nvar fdBlockChksum = 0x10;\n// var fdBlockIndep = 0x20;\nvar fdVersion = 0x40;\nvar fdVersionMask = 0xC0;\n\n// Block sizes.\nvar bsUncompressed = 0x80000000;\nvar bsDefault = 7;\nvar bsShift = 4;\nvar bsMask = 7;\nvar bsMap = {\n    4: 0x10000,\n    5: 0x40000,\n    6: 0x100000,\n    7: 0x400000\n};\n\n// Utility functions/primitives\n// --\n\n// Makes our hashtable. On older browsers, may return a plain array.\nfunction makeHashTable() {\n    try {\n        return new Uint32Array(hashSize);\n    } catch (error) {\n        var hashTable = new Array(hashSize);\n\n        for (var i = 0; i < hashSize; i++) {\n            hashTable[i] = 0;\n        }\n\n        return hashTable;\n    }\n}\n\n// Clear hashtable.\nfunction clearHashTable(table) {\n    for (var i = 0; i < hashSize; i++) {\n        hashTable[i] = 0;\n    }\n}\n\n// Makes a byte buffer. On older browsers, may return a plain array.\nfunction makeBuffer(size) {\n    try {\n        return new Uint8Array(size);\n    } catch (error) {\n        var buf = new Array(size);\n\n        for (var i = 0; i < size; i++) {\n            buf[i] = 0;\n        }\n\n        return buf;\n    }\n}\n\nfunction sliceArray(array, start, end) {\n    if (typeof array.buffer !== undefined) {\n        if (Uint8Array.prototype.slice) {\n            return array.slice(start, end);\n        } else {\n            // Uint8Array#slice polyfill.\n            var len = array.length;\n\n            // Calculate start.\n            start = start | 0;\n            start = (start < 0) ? Math.max(len + start, 0) : Math.min(start, len);\n\n            // Calculate end.\n            end = (end === undefined) ? len : end | 0;\n            end = (end < 0) ? Math.max(len + end, 0) : Math.min(end, len);\n\n            // Copy into new array.\n            var arraySlice = new Uint8Array(end - start);\n            for (var i = start, n = 0; i < end;) {\n                arraySlice[n++] = array[i++];\n            }\n\n            return arraySlice;\n        }\n    } else {\n        // Assume normal array.\n        return array.slice(start, end);\n    }\n}\n\n// Implementation\n// --\nexports = $.exports\n\n// Calculates an upper bound for lz4 compression.\nexports.compressBound = function compressBound(n) {\n    return (n + (n / 255) + 16) | 0;\n};\n\n// Calculates an upper bound for lz4 decompression, by reading the data.\nexports.decompressBound = function decompressBound(src) {\n    var sIndex = 0;\n\n    // Read magic number\n    if (util.readU32(src, sIndex) !== magicNum) {\n        throw new Error('invalid magic number');\n    }\n\n    sIndex += 4;\n\n    // Read descriptor\n    var descriptor = src[sIndex++];\n\n    // Check version\n    if ((descriptor & fdVersionMask) !== fdVersion) {\n        throw new Error('incompatible descriptor version ' + (descriptor & fdVersionMask));\n    }\n\n    // Read flags\n    var useBlockSum = (descriptor & fdBlockChksum) !== 0;\n    var useContentSize = (descriptor & fdContentSize) !== 0;\n\n    // Read block size\n    var bsIdx = (src[sIndex++] >> bsShift) & bsMask;\n\n    if (bsMap[bsIdx] === undefined) {\n        throw new Error('invalid block size ' + bsIdx);\n    }\n\n    var maxBlockSize = bsMap[bsIdx];\n\n    // Get content size\n    if (useContentSize) {\n        return util.readU64(src, sIndex);\n    }\n\n    // Checksum\n    sIndex++;\n\n    // Read blocks.\n    var maxSize = 0;\n    while (true) {\n        var blockSize = util.readU32(src, sIndex);\n        sIndex += 4;\n\n        if (blockSize & bsUncompressed) {\n            blockSize &= ~bsUncompressed;\n            maxSize += blockSize;\n        } else if (blockSize > 0) {\n            maxSize += maxBlockSize;\n        }\n\n        if (blockSize === 0) {\n            return maxSize;\n        }\n\n        if (useBlockSum) {\n            sIndex += 4;\n        }\n\n        sIndex += blockSize;\n    }\n};\n\n// Creates a buffer of a given byte-size, falling back to plain arrays.\nexports.makeBuffer = makeBuffer;\n\n// Decompresses a block of Lz4.\nexports.decompressBlock = function decompressBlock(src, dst, sIndex, sLength, dIndex) {\n    var mLength, mOffset, sEnd, n, i;\n    var hasCopyWithin = dst.copyWithin !== undefined && dst.fill !== undefined;\n\n    // Setup initial state.\n    sEnd = sIndex + sLength;\n\n    // Consume entire input block.\n    while (sIndex < sEnd) {\n        var token = src[sIndex++];\n\n        // Copy literals.\n        var literalCount = (token >> 4);\n        if (literalCount > 0) {\n            // Parse length.\n            if (literalCount === 0xf) {\n                while (true) {\n                    literalCount += src[sIndex];\n                    if (src[sIndex++] !== 0xff) {\n                        break;\n                    }\n                }\n            }\n\n            // Copy literals\n            for (n = sIndex + literalCount; sIndex < n;) {\n                dst[dIndex++] = src[sIndex++];\n            }\n        }\n\n        if (sIndex >= sEnd) {\n            break;\n        }\n\n        // Copy match.\n        mLength = (token & 0xf);\n\n        // Parse offset.\n        mOffset = src[sIndex++] | (src[sIndex++] << 8);\n\n        // Parse length.\n        if (mLength === 0xf) {\n            while (true) {\n                mLength += src[sIndex];\n                if (src[sIndex++] !== 0xff) {\n                    break;\n                }\n            }\n        }\n\n        mLength += minMatch;\n\n        // Copy match\n        // prefer to use typedarray.copyWithin for larger matches\n        // NOTE: copyWithin doesn't work as required by LZ4 for overlapping sequences\n        // e.g. mOffset=1, mLength=30 (repeach char 30 times)\n        // we special case the repeat char w/ array.fill\n        if (hasCopyWithin && mOffset === 1) {\n            dst.fill(dst[dIndex - 1] | 0, dIndex, dIndex + mLength);\n            dIndex += mLength;\n        } else if (hasCopyWithin && mOffset > mLength && mLength > 31) {\n            dst.copyWithin(dIndex, dIndex - mOffset, dIndex - mOffset + mLength);\n            dIndex += mLength;\n        } else {\n            for (i = dIndex - mOffset, n = i + mLength; i < n;) {\n                dst[dIndex++] = dst[i++] | 0;\n            }\n        }\n    }\n\n    return dIndex;\n};\n\n// Compresses a block with Lz4.\nexports.compressBlock = function compressBlock(src, dst, sIndex, sLength, hashTable) {\n    var mIndex, mAnchor, mLength, mOffset, mStep;\n    var literalCount, dIndex, sEnd, n;\n\n    // Setup initial state.\n    dIndex = 0;\n    sEnd = sLength + sIndex;\n    mAnchor = sIndex;\n\n    // Process only if block is large enough.\n    if (sLength >= minLength) {\n        var searchMatchCount = (1 << skipTrigger) + 3;\n\n        // Consume until last n literals (Lz4 spec limitation.)\n        while (sIndex + minMatch < sEnd - searchLimit) {\n            var seq = util.readU32(src, sIndex);\n            var hash = util.hashU32(seq) >>> 0;\n\n            // Crush hash to 16 bits.\n            hash = ((hash >> 16) ^ hash) >>> 0 & 0xffff;\n\n            // Look for a match in the hashtable. NOTE: remove one; see below.\n            mIndex = hashTable[hash] - 1;\n\n            // Put pos in hash table. NOTE: add one so that zero = invalid.\n            hashTable[hash] = sIndex + 1;\n\n            // Determine if there is a match (within range.)\n            if (mIndex < 0 || ((sIndex - mIndex) >>> 16) > 0 || util.readU32(src, mIndex) !== seq) {\n                mStep = searchMatchCount++ >> skipTrigger;\n                sIndex += mStep;\n                continue;\n            }\n\n            searchMatchCount = (1 << skipTrigger) + 3;\n\n            // Calculate literal count and offset.\n            literalCount = sIndex - mAnchor;\n            mOffset = sIndex - mIndex;\n\n            // We've already matched one word, so get that out of the way.\n            sIndex += minMatch;\n            mIndex += minMatch;\n\n            // Determine match length.\n            // N.B.: mLength does not include minMatch, Lz4 adds it back\n            // in decoding.\n            mLength = sIndex;\n            while (sIndex < sEnd - searchLimit && src[sIndex] === src[mIndex]) {\n                sIndex++;\n                mIndex++;\n            }\n            mLength = sIndex - mLength;\n\n            // Write token + literal count.\n            var token = mLength < mlMask ? mLength : mlMask;\n            if (literalCount >= runMask) {\n                dst[dIndex++] = (runMask << mlBits) + token;\n                for (n = literalCount - runMask; n >= 0xff; n -= 0xff) {\n                    dst[dIndex++] = 0xff;\n                }\n                dst[dIndex++] = n;\n            } else {\n                dst[dIndex++] = (literalCount << mlBits) + token;\n            }\n\n            // Write literals.\n            for (var i = 0; i < literalCount; i++) {\n                dst[dIndex++] = src[mAnchor + i];\n            }\n\n            // Write offset.\n            dst[dIndex++] = mOffset;\n            dst[dIndex++] = (mOffset >> 8);\n\n            // Write match length.\n            if (mLength >= mlMask) {\n                for (n = mLength - mlMask; n >= 0xff; n -= 0xff) {\n                    dst[dIndex++] = 0xff;\n                }\n                dst[dIndex++] = n;\n            }\n\n            // Move the anchor.\n            mAnchor = sIndex;\n        }\n    }\n\n    // Nothing was encoded.\n    if (mAnchor === 0) {\n        return 0;\n    }\n\n    // Write remaining literals.\n    // Write literal token+count.\n    literalCount = sEnd - mAnchor;\n    if (literalCount >= runMask) {\n        dst[dIndex++] = (runMask << mlBits);\n        for (n = literalCount - runMask; n >= 0xff; n -= 0xff) {\n            dst[dIndex++] = 0xff;\n        }\n        dst[dIndex++] = n;\n    } else {\n        dst[dIndex++] = (literalCount << mlBits);\n    }\n\n    // Write literals.\n    sIndex = mAnchor;\n    while (sIndex < sEnd) {\n        dst[dIndex++] = src[sIndex++];\n    }\n\n    return dIndex;\n};\n\n// Decompresses a frame of Lz4 data.\nexports.decompressFrame = function decompressFrame(src, dst) {\n    var useBlockSum, useContentSum, useContentSize, descriptor;\n    var sIndex = 0;\n    var dIndex = 0;\n\n    // Read magic number\n    if (util.readU32(src, sIndex) !== magicNum) {\n        throw new Error('invalid magic number');\n    }\n\n    sIndex += 4;\n\n    // Read descriptor\n    descriptor = src[sIndex++];\n\n    // Check version\n    if ((descriptor & fdVersionMask) !== fdVersion) {\n        throw new Error('incompatible descriptor version');\n    }\n\n    // Read flags\n    useBlockSum = (descriptor & fdBlockChksum) !== 0;\n    useContentSum = (descriptor & fdContentChksum) !== 0;\n    useContentSize = (descriptor & fdContentSize) !== 0;\n\n    // Read block size\n    var bsIdx = (src[sIndex++] >> bsShift) & bsMask;\n\n    if (bsMap[bsIdx] === undefined) {\n        throw new Error('invalid block size');\n    }\n\n    if (useContentSize) {\n        // TODO: read content size\n        sIndex += 8;\n    }\n\n    sIndex++;\n\n    // Read blocks.\n    while (true) {\n        var compSize;\n\n        compSize = util.readU32(src, sIndex);\n        sIndex += 4;\n\n        if (compSize === 0) {\n            break;\n        }\n\n        if (useBlockSum) {\n            // TODO: read block checksum\n            sIndex += 4;\n        }\n\n        // Check if block is compressed\n        if ((compSize & bsUncompressed) !== 0) {\n            // Mask off the 'uncompressed' bit\n            compSize &= ~bsUncompressed;\n\n            // Copy uncompressed data into destination buffer.\n            for (var j = 0; j < compSize; j++) {\n                dst[dIndex++] = src[sIndex++];\n            }\n        } else {\n            // Decompress into blockBuf\n            dIndex = exports.decompressBlock(src, dst, sIndex, compSize, dIndex);\n            sIndex += compSize;\n        }\n    }\n\n    if (useContentSum) {\n        // TODO: read content checksum\n        sIndex += 4;\n    }\n\n    return dIndex;\n};\n\n// Compresses data to an Lz4 frame.\nexports.compressFrame = function compressFrame(src, dst) {\n    var dIndex = 0;\n\n    // Write magic number.\n    util.writeU32(dst, dIndex, magicNum);\n    dIndex += 4;\n\n    // Descriptor flags.\n    dst[dIndex++] = fdVersion;\n    dst[dIndex++] = bsDefault << bsShift;\n\n    // Descriptor checksum.\n    dst[dIndex] = xxhash.hash(0, dst, 4, dIndex - 4) >> 8;\n    dIndex++;\n\n    // Write blocks.\n    var maxBlockSize = bsMap[bsDefault];\n    var remaining = src.length;\n    var sIndex = 0;\n\n    // Clear the hashtable.\n    clearHashTable(hashTable);\n\n    // Split input into blocks and write.\n    while (remaining > 0) {\n        var compSize = 0;\n        var blockSize = remaining > maxBlockSize ? maxBlockSize : remaining;\n\n        compSize = exports.compressBlock(src, blockBuf, sIndex, blockSize, hashTable);\n\n        if (compSize > blockSize || compSize === 0) {\n            // Output uncompressed.\n            util.writeU32(dst, dIndex, 0x80000000 | blockSize);\n            dIndex += 4;\n\n            for (var z = sIndex + blockSize; sIndex < z;) {\n                dst[dIndex++] = src[sIndex++];\n            }\n\n            remaining -= blockSize;\n        } else {\n            // Output compressed.\n            util.writeU32(dst, dIndex, compSize);\n            dIndex += 4;\n\n            for (var j = 0; j < compSize;) {\n                dst[dIndex++] = blockBuf[j++];\n            }\n\n            sIndex += blockSize;\n            remaining -= blockSize;\n        }\n    }\n\n    // Write blank end block.\n    util.writeU32(dst, dIndex, 0);\n    dIndex += 4;\n\n    return dIndex;\n};\n\n// Decompresses a buffer containing an Lz4 frame. maxSize is optional; if not\n// provided, a maximum size will be determined by examining the data. The\n// buffer returned will always be perfectly-sized.\nexports.decompress = function decompress(src, maxSize) {\n    var dst, size;\n\n    if (maxSize === undefined) {\n        maxSize = exports.decompressBound(src);\n    }\n    dst = exports.makeBuffer(maxSize);\n    size = exports.decompressFrame(src, dst);\n\n    if (size !== maxSize) {\n        dst = sliceArray(dst, 0, size);\n    }\n\n    return dst;\n};\n\n// Compresses a buffer to an Lz4 frame. maxSize is optional; if not provided,\n// a buffer will be created based on the theoretical worst output size for a\n// given input size. The buffer returned will always be perfectly-sized.\nexports.compress = function compress(src, maxSize) {\n    var dst, size;\n\n    if (maxSize === undefined) {\n        maxSize = exports.compressBound(src.length);\n    }\n\n    dst = exports.makeBuffer(maxSize);\n    size = exports.compressFrame(src, dst);\n\n    if (size !== maxSize) {\n        dst = sliceArray(dst, 0, size);\n    }\n\n    return dst;\n};"},{"col_type":"movie_3","name":"LZ4-Base64","path":"lz4","rule":"js:\n/**\n * 以下压缩和解压方法来自 α 大佬\n */\n// 解压\n\nlet {\n    utf8ArrayToStr,\n    strToUtf8Array,\n    arrayBufferToBase64\n} = $.require(\"hiker://page/methods\");\n\nlet lz4 = $.require(\"hiker://page/lib-lz4-local.js\");\n\nfunction unzip(b64Data) {\n    let strData = window0.atob(b64Data);\n    const charData = strData.split('').map(function(x) {\n        return x.charCodeAt(0);\n    });\n    const binData = new Uint8Array(charData);\n    let data = lz4.decompress(binData);\n    return utf8ArrayToStr(data);\n}\n\n\n// 压缩\nfunction zip(str) {\n    let uint8Array = strToUtf8Array(str);\n    let compressed = lz4.compress(uint8Array);\n    return arrayBufferToBase64(compressed);\n}\n\n\n//let pako = $.require(\"lib-pako.js?rule=\" + MY_RULE.title)\nlet ZipTool = {\n    compress: {\n        size: {\n            key: \"test-compress-size\",\n            set: (newValue) => {\n                putVar(this.key, newValue.toString())\n            },\n            get: () => {\n                return parseInt(getVar(this.key, \"0\"))\n            }\n        },\n        exec: (input) => {\n            let result = zip(input)\n            ZipTool.compress.size.set(result.length)\n            return result\n        }\n    },\n    decompress: {\n        size: {\n            get: () => {\n                return getVar(\"test-decompress\", \"\").length\n            }\n        },\n        exec: (input) => {\n            let result = unzip(input)\n            return result\n        }\n    }\n}"},{"col_type":"movie_3","name":"通用函数","path":"methods","rule":"js:\n//文本转UTF8数组\nfunction strToUtf8Array(string) {\n    Uint8Array.prototype.slice = Array.prototype.slice;\n    let pos = 0;\n    const len = string.length;\n    const out = [];\n    let at = 0; // output position\n    let tlen = Math.max(32, len + (len >> 1) + 7); // 1.5x size\n    let target = new Uint8Array((tlen >> 3) << 3); // ... but at 8 byte offset\n    while (pos < len) {\n        let value = string.charCodeAt(pos++);\n        if (value >= 0xd800 && value <= 0xdbff) {\n            // high surrogate\n            if (pos < len) {\n                const extra = string.charCodeAt(pos);\n                if ((extra & 0xfc00) === 0xdc00) {\n                    ++pos;\n                    value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n                }\n            }\n            if (value >= 0xd800 && value <= 0xdbff) {\n                continue; // drop lone surrogate\n            }\n        }\n        // expand the buffer if we couldn't write 4 bytes\n        if (at + 4 > target.length) {\n            tlen += 8; // minimum extra\n            tlen *= (1.0 + (pos / string.length) * 2); // take 2x the remaining\n            tlen = (tlen >> 3) << 3; // 8 byte offset\n\n            const update = new Uint8Array(tlen);\n            update.set(target);\n            target = update;\n        }\n        if ((value & 0xffffff80) === 0) { // 1-byte\n            target[at++] = value; // ASCII\n            continue;\n        } else if ((value & 0xfffff800) === 0) { // 2-byte\n            target[at++] = ((value >> 6) & 0x1f) | 0xc0;\n        } else if ((value & 0xffff0000) === 0) { // 3-byte\n            target[at++] = ((value >> 12) & 0x0f) | 0xe0;\n            target[at++] = ((value >> 6) & 0x3f) | 0x80;\n        } else if ((value & 0xffe00000) === 0) { // 4-byte\n            target[at++] = ((value >> 18) & 0x07) | 0xf0;\n            target[at++] = ((value >> 12) & 0x3f) | 0x80;\n            target[at++] = ((value >> 6) & 0x3f) | 0x80;\n        } else {\n            // FIXME: do we care\n            continue;\n        }\n        target[at++] = (value & 0x3f) | 0x80;\n    }\n    return target.slice(0, at);\n}\n\n//UTF8数组转文本\nfunction utf8ArrayToStr(array) {\n    var out, i, len, c;\n    var char2, char3;\n    out = \"\";\n    len = array.length;\n    i = 0;\n    while (i < len) {\n        c = array[i++];\n        switch (c >> 4) {\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n                out += String.fromCharCode(c);\n                break;\n            case 12:\n            case 13:\n                char2 = array[i++];\n                out += String.fromCharCode(((c & 0x1f) << 6) | (char2 & 0x3f));\n                break;\n            case 14:\n                char2 = array[i++];\n                char3 = array[i++];\n                out += String.fromCharCode(\n                    ((c & 0x0f) << 12) | ((char2 & 0x3f) << 6) | ((char3 & 0x3f) << 0)\n                );\n                break;\n        }\n    }\n    return out;\n}\n\n//二进制转base64\nfunction arrayBufferToBase64(arrayBuffer) {\n    let base64String = '';\n    const bytes = new Uint8Array(arrayBuffer);\n    for (let i = 0; i < bytes.length; i++) {\n        base64String += String.fromCharCode(bytes[i]);\n    }\n    return window0.btoa(base64String);\n}\n\nfunction base64ToUintArray(b64Data) {\n    let strData = window0.atob(b64Data);\n    const charData = strData.split('').map(function(x) {\n        return x.charCodeAt(0);\n    });\n    const binData = new Uint8Array(charData);\n    return binData;\n}\n\n\nfunction calculateByteLength(text) {\n    let byteLength = 0;\n    for (let i = 0; i < text.length; i++) {\n        let charCode = text.charCodeAt(i);\n        if (charCode <= 0x7f) {\n            byteLength += 1; // ASCII字符占用1个字节\n        } else if (charCode <= 0x7ff) {\n            byteLength += 2; // 2个字节\n        } else if (charCode <= 0xffff) {\n            byteLength += 3; // 3个字节\n        } else {\n            byteLength += 4; // 4个字节\n        }\n    }\n    return byteLength;\n}\n\n\nfunction performance(func, str) {\n    let nolog = false;\n    originlog = log\n    log = function(input) {\n        if (!nolog) {\n            return originlog(input)\n        }\n    }\n    toast(\"开始\");\n    const start = Date.now();\n    let r = func(str); // 调用函数\n    const end = Date.now();\n    const duration = end - start;\n    log(`${getPageTitle()} 方法 ${func.name} 耗时 ${duration}`);\n    if (func.name == \"zip\") {\n        let sl = calculateByteLength(str);\n        let rl = calculateByteLength(r);\n        log(\"原始byte:\" + sl);\n        log(\"压缩byte:\" + rl);\n        log(\"压缩率:\" + Math.round((1 - (rl / sl)) * 100) + \"%\")\n        log(\"--------分割线--------\");\n    }\n    log(\"结束\");\n    log=originlog;\n    return r;\n}\n\n\n$.exports = {\n    strToUtf8Array: strToUtf8Array,\n    utf8ArrayToStr: utf8ArrayToStr,\n    arrayBufferToBase64: arrayBufferToBase64,\n    base64ToUintArray:base64ToUintArray,\n    calculateByteLength: calculateByteLength,\n    performance: performance,\n}"},{"col_type":"movie_3","name":"Brotli-Base64","path":"brotli","rule":"js:\n/**\n * 以下压缩和解压方法来自 α 大佬\n */\n// 解压\n\nlet {\n    utf8ArrayToStr,\n    strToUtf8Array,\n    arrayBufferToBase64,\n    performance\n} = $.require(\"hiker://page/methods\");\n\n//let lz4 = $.require(\"hiker://page/lib-lz4-local.js\");\nlet brotli = $.require(\"https://cdn.jsdelivr.net/npm/brotli-js@1.0.2/index.min.js\");\n\nfunction unzip(b64Data) {\n    let strData = window0.atob(b64Data);\n    const charData = strData.split('').map(function(x) {\n        return x.charCodeAt(0);\n    });\n    const binData = new Uint8Array(charData);\n    const data = brotli.decompressArray(binData);\n    return utf8ArrayToStr(data);\n}\n\nlet level = 5;\n\n// 压缩\nfunction zip(str) {\n    let uint8Array = strToUtf8Array(str);\n    log(\"brotli 当前压缩等级:\" + level);\n    // 使用 Brotli 压缩 ArrayBuffer\n    const compressed = brotli.compressArray(uint8Array, level);\n    // 将压缩后的 ArrayBuffer 转换为 base64 编码\n    const base64CompressedData = arrayBufferToBase64(compressed);\n    return base64CompressedData;\n}\n\nlet ZipTool = {\n    compress: {\n        size: {\n            key: \"test-compress-size\",\n            set: (newValue) => {\n                putVar(this.key, newValue.toString())\n            },\n            get: () => {\n                return parseInt(getVar(this.key, \"0\"))\n            }\n        },\n        exec: (input) => {\n            let result = performance(zip, input)\n            ZipTool.compress.size.set(result.length)\n            return result\n        }\n    },\n    decompress: {\n        size: {\n            get: () => {\n                return getVar(\"test-decompress\", \"\").length\n            }\n        },\n        exec: (input) => {\n            let result = performance(unzip,input);\n            return result\n        }\n    }\n}"},{"col_type":"movie_3","name":"LZMA-base64","path":"lzma-base64","rule":"js:\n/**\n * \n */\n// 解压\n\nlet {\n    utf8ArrayToStr,\n    performance,\n    arrayBufferToBase64,\n    base64ToUintArray,\n} = $.require(\"hiker://page/methods\");\n\n\nfunction setTimeout(func, delay) {\n    //java.lang.Thread.sleep(delay);\n    func();\n}\n\neval(JSON.parse(request(\"hiker://page/lib-lzma-local.js?rule=\" + MY_RULE.title)).rule)\n\nfunction unzip(input) {\n    let output = \"\";\n    let b64 = base64ToUintArray(input);\n    LZMA.decompress(b64,\n        (result) => {\n            putVar(\"test-decompress\", result);\n            output = result;\n        },\n        (progress) => {})\n    return output;\n}\n\nlet level = 1;\n\n// 压缩\nfunction zip(input) {\n    log((getPageTitle().replace(/算法|\\s+|-Base64/g, \"\")) + \"压缩等级:\" + level);\n    let output = \"\";\n    LZMA.compress(input, level,\n        (result) => {\n            putVar(\"test-compress\", arrayBufferToBase64(result))\n            output = arrayBufferToBase64(result);\n        },\n        (progress) => {\n\n        })\n    return output;\n}\n\nlet ZipTool = {\n    compress: {\n        size: {\n            key: \"test-compress-size\",\n            set: (newValue) => {\n                putVar(this.key, newValue.toString())\n            },\n            get: () => {\n                return parseInt(getVar(this.key, \"0\"))\n            }\n        },\n        exec: (input) => {\n            let result = performance(zip,input)\n            ZipTool.compress.size.set(result.length)\n            return result\n        }\n    },\n    decompress: {\n        size: {\n            get: () => {\n                return getVar(\"test-decompress\", \"\").length\n            }\n        },\n        exec: (input) => {\n            let result =performance(unzip,input)\n            return result\n        }\n    }\n}"}],"title":"字符串压缩算法集","author":"Reborn&α","version":15,"type":"other","url":"hiker://empty","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\ntry { if(fba != null) {} } catch (e) {}\nlet d = []\nd.push({\n    title: '这是一个字符串压缩算法的集合，算法代码都在子页面<br><br>如何添加算法测试？<br>1. 新增子页面<br>2. 复制压缩算法模板的子页面代码<br>3. 修改模板中我标注要修改的地方<br>4. 保存即可，规则会自动检测添加的算法<br><br>点击可体验对应算法：',\n    col_type: 'rich_text'\n})\nlet pageList = MY_RULE.pageList.filter(page => !page.name.match(/通用函数|字符串处理工具|CompressUI|字串转换函数|lib-(.*?).js/))\nfor (let page of pageList) {\n    /*let rule = $().rule((page) => {\n        const {\n            htmlEscape\n        } = $.require(\"hiker://page/stringtool\");\n        let d = []\n        d.push({\n            title: htmlEscape(page.rule),\n            col_type: 'rich_text'\n        })\n        setResult(d)\n    }, page)*/\n    let rule = \"hiker://page/compress-ui\"\n    d.push({\n        title: page.name,\n        col_type: 'text_2',\n        url: rule,\n        extra: {\n            title: page.name,\n            pageRule: page.rule,\n            pagePath: page.path\n        }\n    })\n}\nsetResult(d)","searchFind":"","search_url":"","group":"⑧工具","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"字符串处理工具\",\"path\":\"stringtool\",\"rule\":\"js:\\nconst matchList  = {\\n  // \\\"<\\\":\\\"&lt;\\\",\\n  // \\\">\\\": \\\"&gt;\\\",\\n  // \\\"&\\\": \\\"&amp;\\\",\\n  // '\\\"': \\\"&quot;\\\",\\n  // \\\"'\\\": \\\"acute;\\\",\\n  \\\" \\\": \\\"&nbsp;\\\",\\n  \\\"\\\\n\\\":\\\"<br>\\\"\\n}\\n// 字符过滤器\\nfunction htmlEscape(text){\\n  let regStr = '(' + Object.keys(matchList).toString() + ')'\\n  regStr = regStr.replace(/,/g, ')|(')  \\n  const regExp = new RegExp(regStr, 'g')\\n  return text.replace(regExp, match => matchList[match])\\n}\\n$.exports.htmlEscape = htmlEscape\"},{\"col_type\":\"movie_3\",\"name\":\"CompressUI\",\"path\":\"compress-ui\",\"rule\":\"js:\\nif (MY_PARAMS.title) {\\n    setPageTitle('算法 ' + MY_PARAMS.title)\\n}\\n\\nlet lzStringTool = JSON.parse(request('hiker://page/lz-string-tool?rule=' + MY_RULE.title)).rule;\\neval(lzStringTool)\\neval(MY_PARAMS.pageRule);\\n\\naddListener('onClose', $.toString(()=>{\\n    //clearVar(\\\"test-compress\\\");\\n}))\\n\\nlet d = [];\\nif (MY_PARAMS.title == '压缩算法模板') {\\n    d.push({\\n        title: '注意：这只是个界面模板，没有任何算法，你们可以参考其他子页面算法的实现，复制这个模板的代码去修改',\\n        col_type: \\\"rich_text\\\"\\n    });\\n\\n}\\n\\nString.prototype.byteLength = function() {\\n    var count = 0;\\n    for (var i = 0, l = this.length; i < l; i++) {\\n        count += this.charCodeAt(i) <= 128 ? 1 : 2;\\n    }\\n    return count;\\n}\\n\\nfunction varJudge(input){\\n   if(input==null){\\n       return \\\"\\\";\\n   }else{\\n       return input;\\n   }\\n}\\n\\nd.push({\\n    title: \\\"压缩\\\",\\n    desc: \\\"请输入原文\\\",\\n    col_type: 'input',\\n    extra: {\\n        // titleVisible: false,\\n        type: \\\"textarea\\\",\\n        height: 4,\\n        defaultValue: getVar(\\\"test-decompress\\\", \\\"\\\"),\\n        onChange: $.toString(() => {\\n            putVar(\\\"test-decompress\\\", input)\\n        })\\n    },\\n    url: $.toString((MY_PARAMS) => {\\n        let inputValue = getVar(\\\"test-decompress\\\", \\\"\\\")\\n        eval(MY_PARAMS.pageRule)\\n        let start = new Date().getTime();\\n        let result = ZipTool.compress.exec(inputValue)\\n        let end = new Date().getTime();        \\n        let duration=end-start;\\n        if (result.startsWith(\\\"x5Rule://\\\")) {\\n            return result;\\n        }\\n        let t=findItem(MY_RULE.title+'message');\\n        putVar(\\\"test-algorithm-duration\\\",duration+\\\"\\\");\\n        updateItem(t.extra.id,{\\n            title:t.title.replace(/(\\\\d+|-)ms/,duration+'ms'),\\n        })\\n        putVar(\\\"test-compress\\\", result)\\n        // log(result)\\n        refreshPage(false)\\n        return 'toast://压缩成功'\\n    }, MY_PARAMS)\\n})\\n\\nlet d_size = varJudge(getVar(\\\"test-decompress\\\", \\\"\\\")).byteLength();\\n\\n    // ZipTool.decompress.size.get() * 2;\\nlet ds_size = varJudge(getVar(\\\"test-decompress\\\", \\\"\\\")).length\\nlet d_text = '&nbsp;&nbsp;Decompress Size: ' + d_size + ' Bytes' + ', Length: ' + ds_size\\nd.push({\\n    title: d_text,\\n    col_type: 'rich_text'\\n})\\nd.push({\\n    title: \\\"解压\\\",\\n    desc: \\\"请输入密文\\\",\\n    col_type: 'input',\\n    extra: {\\n        // titleVisible: false,\\n        type: \\\"textarea\\\",\\n        height: 4,\\n        defaultValue: getVar(\\\"test-compress\\\", \\\"\\\"),\\n        onChange: $.toString(() => {\\n            putVar(\\\"test-compress\\\", input)\\n        })\\n    },\\n    url: $.toString((MY_PARAMS) => {\\n        let inputValue = getVar(\\\"test-compress\\\", \\\"\\\");\\n        if(inputValue==\\\"\\\"){\\n            return \\\"toast://压缩内容为空\\\";\\n        }\\n        eval(MY_PARAMS.pageRule)\\n        let start = new Date().getTime();\\n        let result = ZipTool.decompress.exec(inputValue)\\n        let end = new Date().getTime();\\n        let duration=end-start;\\n        let t=findItem(MY_RULE.title+'message');\\n        putVar(\\\"test-algorithm-duration\\\",duration+\\\"\\\");\\n        updateItem(t.extra.id,{\\n            title:t.title.replace(/(\\\\d+|-)ms/,duration+'ms'),\\n        })\\n        \\n        putVar(\\\"test-decompress\\\", result)\\n        // log(result)\\n        refreshPage(false)\\n        return 'toast://解压成功'\\n    }, MY_PARAMS)\\n})\\nlet c_size = varJudge(getVar(\\\"test-compress\\\", \\\"\\\")).byteLength()\\n\\n    // ZipTool.compress.size.get();\\nlet cs_size = varJudge(getVar(\\\"test-compress\\\", \\\"\\\")).length\\nd.push({\\n    title: '&nbsp;&nbsp;Compress Size: ' + c_size + ' Bytes' + ', Length: ' + cs_size,\\n    col_type: 'rich_text'\\n})\\n// log((1 - (c_size / d_size)))\\nlet compare = Math.round(\\n    (1 - (c_size / d_size)) * 100)\\nlet duration = getVar(\\\"test-algorithm-duration\\\", \\\"-\\\")    \\nd.push({\\n    title: '&nbsp;&nbsp;压缩率: ' + compare + '%'+ ', 耗时: ' + duration + 'ms',\\n    col_type: 'rich_text',\\n    extra:{\\n        id: MY_RULE.title+'message'\\n    }\\n})\\n\\nd.push({\\n    title: '清空原文',\\n    img: 'https://gitee.com/CherishRx/imagewarehouse/raw/master/image/32d29e2fbcdf8d83071deec7f6aa4b7c.png',\\n    url: \\\"hiker://empty#noLoading#\\\" + \\\"@lazyRule=.js:putVar('test-decompress', '');refreshPage();'toast://清空成功'\\\",\\n    col_type: 'icon_2'\\n});\\n\\nd.push({\\n    title: '清空密文',\\n    img: 'https://gitee.com/CherishRx/imagewarehouse/raw/master/image/32d29e2fbcdf8d83071deec7f6aa4b7c.png',\\n    url: \\\"hiker://empty#noLoading#\\\" + \\\"@lazyRule=.js:putVar('test-compress', '');refreshPage();'toast://清空成功'\\\",\\n    col_type: 'icon_2'\\n});\\n\\nd.push({\\n    title: '复制原文',\\n    img: 'https://gitee.com/CherishRx/imagewarehouse/raw/master/image/32d29e2fbcdf8d83071deec7f6aa4b7c.png',\\n    url: $(\\\"hiker://empty#noLoading#\\\").lazyRule(() => {\\n        var dec = getVar(\\\"test-decompress\\\");\\n        if (dec) {\\n            return \\\"copy://\\\" + dec;\\n        } else {\\n            return \\\"toast://内容为空！\\\"\\n        }\\n    }),\\n    col_type: 'icon_2'\\n});\\n\\nd.push({\\n    title: '复制密文',\\n    img: 'https://gitee.com/CherishRx/imagewarehouse/raw/master/image/32d29e2fbcdf8d83071deec7f6aa4b7c.png',\\n    url: $(\\\"hiker://empty#noLoading#\\\").lazyRule(() => {\\n        var enc = getVar(\\\"test-compress\\\");\\n        if (enc) {\\n            return \\\"copy://\\\" + enc;\\n        } else {\\n            return \\\"toast://内容为空！\\\"\\n        }\\n    }),\\n    col_type: 'icon_2'\\n});\\nsetResult(d)\"},{\"col_type\":\"movie_3\",\"name\":\"压缩算法模板\",\"path\":\"template\",\"rule\":\"js:\\n// 注： ZipTool 变量名不能改，没有中文标注的地方也不能动\\nlet ZipTool = {\\n    dependence: '依赖地址',\\n    compress: {\\n        size: {\\n            key: \\\"test-compress-size\\\",\\n            set: (newValue) => {\\n                putVar(this.key, newValue.toString())\\n            },\\n            get: () => {\\n                return parseInt(getVar(this.key, \\\"0\\\"))\\n            }\\n        },\\n        /**\\n         * 压缩执行方法，通过 ZipTool.compress.exec(input) 调用\\n         */\\n        exec: (input) => {\\n            // eval(request(ZipTool.dependence))\\n            // ***修改这里 result 的值为压缩后的字符串值即可***\\n            let result = '执行压缩后返回的值'\\n            ZipTool.compress.size.set(result.length)\\n            return result\\n        }\\n    },\\n    /**\\n     * 解压执行方法，通过 ZipTool.decompress.exec(input) 调用\\n     */\\n    decompress: {\\n        size: {\\n            get: () => {\\n                return getVar(\\\"test-decompress\\\", \\\"0\\\").length\\n            }\\n        },\\n        exec: (input) => {\\n            // eval(request(ZipTool.dependence))\\n            // ***修改这里 result 的值为解压后的字符串值即可***\\n            let result = '执行解压后返回的值'\\n            return result\\n        }\\n    }\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"lz-string\",\"path\":\"lz-string\",\"rule\":\"js:\\n/*\\n原文 1052 Bytes \\n原文Base64 1880 Bytes\\n原文LZ-String 480 Bytes\\n原文LZMA 422 Bytes\\n\\nhttps://qastack.cn/programming/294297/javascript-implementation-of-gzip\\n\\nhttps://cdn.jsdelivr.net/npm/lz-string@1.4.4/libs/lz-string.min.js\\nhttps://cdn.jsdelivr.net/npm/lz-string@1.4.4/libs/base64-string.js\\n*/\\nfunction toHexString(byteArray) {\\n    return Array.from(byteArray, function(byte) {\\n        return ('0' + (byte & 0xFF).toString(16)).slice(-2);\\n    }).join('')\\n}\\nlet ZipTool = {\\n    dependence: 'https://unpkg.com/lz-string@1.4.4/libs/lz-string.min.js',\\n    compress: {\\n        size: {\\n            key: \\\"test-compress-size\\\",\\n            set: (newValue) => {\\n                putVar(this.key, newValue.toString())\\n            },\\n            get: () => {\\n                return parseInt(getVar(this.key, \\\"0\\\"))\\n            }\\n        },\\n        exec: (input) => {\\n            eval(request(ZipTool.dependence))\\n// LZString.compressToEncodedURIComponent\\n            let result = LZString.compressToBase64(input)\\n            ZipTool.compress.size.set(result.length * 2)\\n            return result\\n        }\\n    },\\n    decompress: {\\n        size: {\\n            get: () => {\\n                return getVar(\\\"test-decompress\\\", \\\"0\\\").length\\n            }\\n        },\\n        exec: (input) => {\\n            eval(request(ZipTool.dependence))\\n// LZString.decompressFromEncodedURIComponent\\n            let result = LZString.decompressFromBase64(input)\\n            return result\\n        }\\n    }\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"LZMA\",\"path\":\"lzma\",\"rule\":\"js:\\n/*\\nhttps://cdn.jsdelivr.net/npm/lzma@2.3.2/src/lzma_worker-min.js\\n\\nhttps://unpkg.com/lzma@2.3.2/src/lzma_worker-min.js\\n*/\\nlet compression_mode = 1;\\n\\nlet lzStringTool = JSON.parse(request('hiker://page/lz-string-tool')).rule;\\n// let lzmaJS = JSON.parse(request('hiker://page/lib-lzma-local.js')).rule;\\n// let LZMA = $.require(\\\"lib-lzma-local.js\\\");\\n// log(Object.keys(LZMA));\\n\\nfunction setTimeout(func, delay) {\\n    //java.lang.Thread.sleep(delay);\\n    func();\\n}\\n\\nfunction stringToUint8Array(str) {\\n    // 将字符串转换为 ASCII 值的数组\\n    const charCodes = Array.from(str).map(char => char.charCodeAt(0));\\n    // 将每个 ASCII 值转换回相应的字符\\n    const binaryCodes = charCodes.map(code => String.fromCharCode(code));\\n    // 将字符数组减少为它们的 ASCII 值数组\\n    const binaryData = binaryCodes.reduce((acc, code) => {\\n        acc.push(code.charCodeAt(0));\\n        return acc;\\n    }, []);\\n    // 从 ASCII 值数组创建 Uint8Array\\n    const uint8Array = new Uint8Array(binaryData);\\n    return uint8Array;\\n}\\n\\nfunction unzip(input) {\\n    eval(lzStringTool)\\n    let output = \\\"\\\";\\n    input = stringToUint8Array(input);\\n    /*log(input)\\n    $.log($.type(input))*/\\n    LZMA.decompress(input,\\n        (result) => {\\n            //log(result)\\n            putVar(\\\"test-decompress\\\", result);\\n            output = result;\\n        },\\n        (progress) => {})\\n    //log(output)\\n    return output;\\n}\\n\\neval(JSON.parse(request(\\\"hiker://page/lib-lzma-local.js?rule=\\\" + MY_RULE.title)).rule)\\nlet ZipTool = {\\n    compress: {\\n        key: \\\"test-compress-size\\\",\\n        size: {\\n            set: (newValue) => {\\n                try {\\n                    fba.putVar(this.key, newValue.toString())\\n                } catch (e) {\\n                    putVar(this.key, newValue.toString())\\n                }\\n            },\\n            get: () => {\\n                try {\\n                    return parseInt(fba.getVar(this.key, \\\"0\\\"))\\n                } catch (e) {\\n                    return parseInt(getVar(this.key, \\\"0\\\"))\\n                }\\n            }\\n        },\\n        exec: (input) => {\\n            putVar(\\\"test-compress\\\", \\\"\\\")\\n            // showLoading(\\\"压缩中，请稍候...\\\")\\n            return $().x5Lazy((input, mode, stringTool, ZipTool, title) => {\\n                //let dependent = 'https://unpkg.com/lzma@2.3.2/src/lzma_worker-min.js'\\n                let dependent = \\\"hiker://page/lib-lzma-local.js?rule=\\\" + title;\\n                eval(JSON.parse(fba.fetch(dependent)).rule)\\n                // eval(lzmaJS)\\n                eval(stringTool)\\n                let start = new Date().getTime();\\n                // fba.log(\\\"input: \\\" + input)\\n                LZMA.compress(input, mode,\\n                    (result) => {\\n                        if (fba.getVar(\\\"test-compress\\\")) return\\n                        // fba.log(\\\"result: \\\" + convert_to_formated_hex(result))\\n                        ZipTool.compress.size.set(result.length)\\n                        let end = new Date().getTime();\\n                        let duration = end - start;\\n\\n\\n                        fba.putVar(\\\"test-compress\\\", String.fromCharCode.apply(null, Array.from(result)));\\n\\n                        let rule = $$$().lazyRule((title, duration) => {\\n                            let t = findItem(title + 'message');\\n                            putVar(\\\"test-algorithm-duration\\\", duration + \\\"\\\");\\n                            updateItem(t.extra.id, {\\n                                title: t.title.replace(/(\\\\d+|-)ms/, duration + 'ms'),\\n                            })\\n                        }, title, duration);\\n                        fba.parseLazyRule(rule);\\n                        //fba.putVar(\\\"test-compress\\\",convert_formated_hex_to_string(convert_to_formated_hex(result)))\\n                        // fba.hideLoading()\\n                        // fba.log(\\\"compress: \\\" + fba.getVar(\\\"test-compress\\\"))\\n                    },\\n                    (progress) => {\\n                        // fba.log(\\\"progress: \\\" + progress*100 + \\\"%\\\")\\n                    })\\n                if (fba.getVar(\\\"test-compress\\\")) {\\n                    fba.refreshPage(false)\\n                    return 'toast://压缩成功'\\n                }\\n            }, input, compression_mode, lzStringTool, ZipTool, MY_RULE.title)\\n        },\\n    },\\n    decompress: {\\n        size: {\\n            get: () => {\\n                try {\\n                    return fba.getVar(\\\"test-decompress\\\", \\\"0\\\").length\\n                } catch (e) {\\n                    return getVar(\\\"test-decompress\\\", \\\"0\\\").length\\n                }\\n            }\\n        },\\n        exec: (input) => {\\n            //putVar(\\\"test-decompress\\\", \\\"\\\")\\n            // showLoading(\\\"解压中，请稍候...\\\")            \\n            let result = unzip(input)\\n            return result\\n        }\\n    },\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"GZip\",\"path\":\"gzip\",\"rule\":\"js:\\n/*\\n通过 pako 实现\\n\\nhttps://qastack.cn/programming/294297/javascript-implementation-of-gzip\\n\\nhttps://www.zhihu.com/question/53169830\\n\\nhttp://blog.ideacome.com/2021/07/01/gzipya-suo-de-lz77suan-fa-he-ha-fu-man-bian-ma-shi-xian-yuan-li/amp/\\n\\nhttp://qiutianaimeili.com/html/page/2019/12/bncs8g07hcg.html\\n\\nhttps://cdn.staticfile.org/pako/1.0.10/pako.min.js\\n*/\\nlet pako = $.require(\\\"lib-pako.js?rule=\\\" + MY_RULE.title)\\n// require(\\\"https://cdn.staticfile.org/pako/1.0.10/pako.min.js\\\")\\n/*eval(\\n    request('hiker://page/' + \\\"lib-pako.js?rule=\\\" + MY_RULE.title)\\n);*/\\nlet ZipTool = {\\n    compress: {\\n        size: {\\n            key: \\\"test-compress-size\\\",\\n            set: (newValue) => {\\n                putVar(this.key, newValue.toString())\\n            },\\n            get: () => {\\n                return parseInt(getVar(this.key, \\\"0\\\"))\\n            }\\n        },\\n        exec: (input) => {\\n            let result = pako.gzip(input, {\\n                to: \\\"string\\\"\\n            })\\n            ZipTool.compress.size.set(result.length)\\n            return result\\n        }\\n    },\\n    decompress: {\\n        size: {\\n            get: () => {\\n                return getVar(\\\"test-decompress\\\", \\\"0\\\").length\\n            }\\n        },\\n        exec: (input) => {\\n            let result = pako.ungzip(input, {\\n                to: \\\"string\\\"\\n            })\\n            return result\\n        }\\n    }\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"lz-string字串转换函数\",\"path\":\"lz-string-tool\",\"rule\":\"js:\\nif (!String.prototype.trim) {\\n    String.prototype.trim = function() {\\n        return this.replace(/^\\\\s+|\\\\s+$/, \\\"\\\");\\n    }\\n}\\n\\nfunction is_array(input) {\\n    return typeof(input) === \\\"object\\\" && (input instanceof Array);\\n}\\n\\nfunction convert_formated_hex_to_bytes(hex_str) {\\n    var count = 0,\\n        hex_arr,\\n        hex_data = [],\\n        hex_len,\\n        i;\\n\\n    if (hex_str.trim() == \\\"\\\") return [];\\n\\n    /// Check for invalid hex characters.\\n    if (/[^0-9a-fA-F\\\\s]/.test(hex_str)) {\\n        return false;\\n    }\\n\\n    hex_arr = hex_str.split(/([0-9a-fA-F]+)/g);\\n    hex_len = hex_arr.length;\\n\\n    for (i = 0; i < hex_len; ++i) {\\n        if (hex_arr[i].trim() == \\\"\\\") {\\n            continue;\\n        }\\n        hex_data[count++] = parseInt(hex_arr[i], 16);\\n    }\\n\\n    return hex_data;\\n}\\n\\nfunction convert_formated_hex_to_string(s) {\\n    var byte_arr = convert_formated_hex_to_bytes(s);\\n    var res = \\\"\\\";\\n    for (var i = 0; i < byte_arr.length; i += 2) {\\n        res += String.fromCharCode(byte_arr[i] | (byte_arr[i + 1] << 8));\\n    }\\n    return res;\\n}\\n\\nfunction convert_string_to_hex(s) {\\n    var byte_arr = [];\\n    for (var i = 0; i < s.length; i++) {\\n        var value = s.charCodeAt(i);\\n        byte_arr.push(value & 255);\\n        byte_arr.push((value >> 8) & 255);\\n    }\\n    return convert_to_formated_hex(byte_arr);\\n}\\n\\nfunction convert_to_formated_hex(byte_arr) {\\n    var hex_str = \\\"\\\",\\n        i,\\n        len,\\n        tmp_hex;\\n\\n    if (!is_array(byte_arr)) {\\n        return false;\\n    }\\n\\n    len = byte_arr.length;\\n\\n    for (i = 0; i < len; ++i) {\\n        if (byte_arr[i] < 0) {\\n            byte_arr[i] = byte_arr[i] + 256;\\n        }\\n        if (byte_arr[i] === undefined) {\\n            alert(\\\"Boom \\\" + i);\\n            byte_arr[i] = 0;\\n        }\\n        tmp_hex = byte_arr[i].toString(16);\\n\\n        // Add leading zero.\\n        if (tmp_hex.length == 1) tmp_hex = \\\"0\\\" + tmp_hex;\\n\\n        if ((i + 1) % 16 === 0) {\\n            tmp_hex += \\\"\\\\n\\\";\\n        } else {\\n            tmp_hex += \\\" \\\";\\n        }\\n\\n        hex_str += tmp_hex;\\n    }\\n\\n    return hex_str.trim();\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"GZip-Base64\",\"path\":\"gzip-base64\",\"rule\":\"js:\\n/**\\n * 以下压缩和解压方法来自 α 大佬\\n */\\n// 解压\\n\\nlet {\\n    utf8ArrayToStr,\\n    performance\\n} = $.require(\\\"hiker://page/methods\\\")\\n\\nfunction unzip(b64Data) {\\n    let strData = window0.atob(b64Data);\\n    const charData = strData.split('').map(function(x) {\\n        return x.charCodeAt(0);\\n    });\\n    const binData = new Uint8Array(charData);\\n    const data = pako.inflate(binData);\\n    //strData = String.fromCharCode.apply(null, new Uint16Array(data));\\n    return utf8ArrayToStr(data);\\n}\\n\\nlet level=9;\\n\\n// 压缩\\nfunction zip(str) {\\n    log((getPageTitle().replace(/算法|\\\\s+|-Base64/g,\\\"\\\"))+\\\"压缩等级:\\\"+level);\\n    const binary = pako.gzip(str, {\\n        to: 'string',\\n        level:level\\n    })\\n    //log(binary)\\n    return window0.btoa(binary);\\n}\\n\\n\\nlet pako = $.require(\\\"lib-pako.js?rule=\\\" + MY_RULE.title)\\nlet ZipTool = {\\n    compress: {\\n        size: {\\n            key: \\\"test-compress-size\\\",\\n            set: (newValue) => {\\n                putVar(this.key, newValue.toString())\\n            },\\n            get: () => {\\n                return parseInt(getVar(this.key, \\\"0\\\"))\\n            }\\n        },\\n        exec: (input) => {\\n            let result = performance(zip,input)\\n            ZipTool.compress.size.set(result.length)\\n            return result\\n        }\\n    },\\n    decompress: {\\n        size: {\\n            get: () => {\\n                return getVar(\\\"test-decompress\\\", \\\"\\\").length\\n            }\\n        },\\n        exec: (input) => {\\n            let result = performance(unzip,input)\\n            return result\\n        }\\n    }\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"lib-pako.js\",\"path\":\"lib-pako.js\",\"rule\":\"js:\\n// require(\\\"https://cdn.staticfile.org/pako/1.0.10/pako.min.js\\\")\\nlet pako = $.require(\\\"lib-pako-local.js\\\")\\n$.exports=pako\"},{\"col_type\":\"movie_3\",\"name\":\"lib-pako-local.js\",\"path\":\"lib-pako-local.js\",\"rule\":\"js:\\n!function(t){if(\\\"object\\\"==typeof exports&&\\\"undefined\\\"!=typeof module)module.exports=t();else if(\\\"function\\\"==typeof define&&define.amd)define([],t);else{(\\\"undefined\\\"!=typeof window?window:\\\"undefined\\\"!=typeof global?global:\\\"undefined\\\"!=typeof self?self:this).pako=t()}}(function(){return function r(s,o,l){function h(e,t){if(!o[e]){if(!s[e]){var a=\\\"function\\\"==typeof require&&require;if(!t&&a)return a(e,!0);if(d)return d(e,!0);var i=new Error(\\\"Cannot find module '\\\"+e+\\\"'\\\");throw i.code=\\\"MODULE_NOT_FOUND\\\",i}var n=o[e]={exports:{}};s[e][0].call(n.exports,function(t){return h(s[e][1][t]||t)},n,n.exports,r,s,o,l)}return o[e].exports}for(var d=\\\"function\\\"==typeof require&&require,t=0;t<l.length;t++)h(l[t]);return h}({1:[function(t,e,a){\\\"use strict\\\";var s=t(\\\"./zlib/deflate\\\"),o=t(\\\"./utils/common\\\"),l=t(\\\"./utils/strings\\\"),n=t(\\\"./zlib/messages\\\"),r=t(\\\"./zlib/zstream\\\"),h=Object.prototype.toString,d=0,f=-1,_=0,u=8;function c(t){if(!(this instanceof c))return new c(t);this.options=o.assign({level:f,method:u,chunkSize:16384,windowBits:15,memLevel:8,strategy:_,to:\\\"\\\"},t||{});var e=this.options;e.raw&&0<e.windowBits?e.windowBits=-e.windowBits:e.gzip&&0<e.windowBits&&e.windowBits<16&&(e.windowBits+=16),this.err=0,this.msg=\\\"\\\",this.ended=!1,this.chunks=[],this.strm=new r,this.strm.avail_out=0;var a=s.deflateInit2(this.strm,e.level,e.method,e.windowBits,e.memLevel,e.strategy);if(a!==d)throw new Error(n[a]);if(e.header&&s.deflateSetHeader(this.strm,e.header),e.dictionary){var i;if(i=\\\"string\\\"==typeof e.dictionary?l.string2buf(e.dictionary):\\\"[object ArrayBuffer]\\\"===h.call(e.dictionary)?new Uint8Array(e.dictionary):e.dictionary,(a=s.deflateSetDictionary(this.strm,i))!==d)throw new Error(n[a]);this._dict_set=!0}}function i(t,e){var a=new c(e);if(a.push(t,!0),a.err)throw a.msg||n[a.err];return a.result}c.prototype.push=function(t,e){var a,i,n=this.strm,r=this.options.chunkSize;if(this.ended)return!1;i=e===~~e?e:!0===e?4:0,\\\"string\\\"==typeof t?n.input=l.string2buf(t):\\\"[object ArrayBuffer]\\\"===h.call(t)?n.input=new Uint8Array(t):n.input=t,n.next_in=0,n.avail_in=n.input.length;do{if(0===n.avail_out&&(n.output=new o.Buf8(r),n.next_out=0,n.avail_out=r),1!==(a=s.deflate(n,i))&&a!==d)return this.onEnd(a),!(this.ended=!0);0!==n.avail_out&&(0!==n.avail_in||4!==i&&2!==i)||(\\\"string\\\"===this.options.to?this.onData(l.buf2binstring(o.shrinkBuf(n.output,n.next_out))):this.onData(o.shrinkBuf(n.output,n.next_out)))}while((0<n.avail_in||0===n.avail_out)&&1!==a);return 4===i?(a=s.deflateEnd(this.strm),this.onEnd(a),this.ended=!0,a===d):2!==i||(this.onEnd(d),!(n.avail_out=0))},c.prototype.onData=function(t){this.chunks.push(t)},c.prototype.onEnd=function(t){t===d&&(\\\"string\\\"===this.options.to?this.result=this.chunks.join(\\\"\\\"):this.result=o.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg},a.Deflate=c,a.deflate=i,a.deflateRaw=function(t,e){return(e=e||{}).raw=!0,i(t,e)},a.gzip=function(t,e){return(e=e||{}).gzip=!0,i(t,e)}},{\\\"./utils/common\\\":3,\\\"./utils/strings\\\":4,\\\"./zlib/deflate\\\":8,\\\"./zlib/messages\\\":13,\\\"./zlib/zstream\\\":15}],2:[function(t,e,a){\\\"use strict\\\";var f=t(\\\"./zlib/inflate\\\"),_=t(\\\"./utils/common\\\"),u=t(\\\"./utils/strings\\\"),c=t(\\\"./zlib/constants\\\"),i=t(\\\"./zlib/messages\\\"),n=t(\\\"./zlib/zstream\\\"),r=t(\\\"./zlib/gzheader\\\"),b=Object.prototype.toString;function s(t){if(!(this instanceof s))return new s(t);this.options=_.assign({chunkSize:16384,windowBits:0,to:\\\"\\\"},t||{});var e=this.options;e.raw&&0<=e.windowBits&&e.windowBits<16&&(e.windowBits=-e.windowBits,0===e.windowBits&&(e.windowBits=-15)),!(0<=e.windowBits&&e.windowBits<16)||t&&t.windowBits||(e.windowBits+=32),15<e.windowBits&&e.windowBits<48&&0==(15&e.windowBits)&&(e.windowBits|=15),this.err=0,this.msg=\\\"\\\",this.ended=!1,this.chunks=[],this.strm=new n,this.strm.avail_out=0;var a=f.inflateInit2(this.strm,e.windowBits);if(a!==c.Z_OK)throw new Error(i[a]);if(this.header=new r,f.inflateGetHeader(this.strm,this.header),e.dictionary&&(\\\"string\\\"==typeof e.dictionary?e.dictionary=u.string2buf(e.dictionary):\\\"[object ArrayBuffer]\\\"===b.call(e.dictionary)&&(e.dictionary=new Uint8Array(e.dictionary)),e.raw&&(a=f.inflateSetDictionary(this.strm,e.dictionary))!==c.Z_OK))throw new Error(i[a])}function o(t,e){var a=new s(e);if(a.push(t,!0),a.err)throw a.msg||i[a.err];return a.result}s.prototype.push=function(t,e){var a,i,n,r,s,o=this.strm,l=this.options.chunkSize,h=this.options.dictionary,d=!1;if(this.ended)return!1;i=e===~~e?e:!0===e?c.Z_FINISH:c.Z_NO_FLUSH,\\\"string\\\"==typeof t?o.input=u.binstring2buf(t):\\\"[object ArrayBuffer]\\\"===b.call(t)?o.input=new Uint8Array(t):o.input=t,o.next_in=0,o.avail_in=o.input.length;do{if(0===o.avail_out&&(o.output=new _.Buf8(l),o.next_out=0,o.avail_out=l),(a=f.inflate(o,c.Z_NO_FLUSH))===c.Z_NEED_DICT&&h&&(a=f.inflateSetDictionary(this.strm,h)),a===c.Z_BUF_ERROR&&!0===d&&(a=c.Z_OK,d=!1),a!==c.Z_STREAM_END&&a!==c.Z_OK)return this.onEnd(a),!(this.ended=!0);o.next_out&&(0!==o.avail_out&&a!==c.Z_STREAM_END&&(0!==o.avail_in||i!==c.Z_FINISH&&i!==c.Z_SYNC_FLUSH)||(\\\"string\\\"===this.options.to?(n=u.utf8border(o.output,o.next_out),r=o.next_out-n,s=u.buf2string(o.output,n),o.next_out=r,o.avail_out=l-r,r&&_.arraySet(o.output,o.output,n,r,0),this.onData(s)):this.onData(_.shrinkBuf(o.output,o.next_out)))),0===o.avail_in&&0===o.avail_out&&(d=!0)}while((0<o.avail_in||0===o.avail_out)&&a!==c.Z_STREAM_END);return a===c.Z_STREAM_END&&(i=c.Z_FINISH),i===c.Z_FINISH?(a=f.inflateEnd(this.strm),this.onEnd(a),this.ended=!0,a===c.Z_OK):i!==c.Z_SYNC_FLUSH||(this.onEnd(c.Z_OK),!(o.avail_out=0))},s.prototype.onData=function(t){this.chunks.push(t)},s.prototype.onEnd=function(t){t===c.Z_OK&&(\\\"string\\\"===this.options.to?this.result=this.chunks.join(\\\"\\\"):this.result=_.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg},a.Inflate=s,a.inflate=o,a.inflateRaw=function(t,e){return(e=e||{}).raw=!0,o(t,e)},a.ungzip=o},{\\\"./utils/common\\\":3,\\\"./utils/strings\\\":4,\\\"./zlib/constants\\\":6,\\\"./zlib/gzheader\\\":9,\\\"./zlib/inflate\\\":11,\\\"./zlib/messages\\\":13,\\\"./zlib/zstream\\\":15}],3:[function(t,e,a){\\\"use strict\\\";var i=\\\"undefined\\\"!=typeof Uint8Array&&\\\"undefined\\\"!=typeof Uint16Array&&\\\"undefined\\\"!=typeof Int32Array;a.assign=function(t){for(var e,a,i=Array.prototype.slice.call(arguments,1);i.length;){var n=i.shift();if(n){if(\\\"object\\\"!=typeof n)throw new TypeError(n+\\\"must be non-object\\\");for(var r in n)e=n,a=r,Object.prototype.hasOwnProperty.call(e,a)&&(t[r]=n[r])}}return t},a.shrinkBuf=function(t,e){return t.length===e?t:t.subarray?t.subarray(0,e):(t.length=e,t)};var n={arraySet:function(t,e,a,i,n){if(e.subarray&&t.subarray)t.set(e.subarray(a,a+i),n);else for(var r=0;r<i;r++)t[n+r]=e[a+r]},flattenChunks:function(t){var e,a,i,n,r,s;for(e=i=0,a=t.length;e<a;e++)i+=t[e].length;for(s=new Uint8Array(i),e=n=0,a=t.length;e<a;e++)r=t[e],s.set(r,n),n+=r.length;return s}},r={arraySet:function(t,e,a,i,n){for(var r=0;r<i;r++)t[n+r]=e[a+r]},flattenChunks:function(t){return[].concat.apply([],t)}};a.setTyped=function(t){t?(a.Buf8=Uint8Array,a.Buf16=Uint16Array,a.Buf32=Int32Array,a.assign(a,n)):(a.Buf8=Array,a.Buf16=Array,a.Buf32=Array,a.assign(a,r))},a.setTyped(i)},{}],4:[function(t,e,a){\\\"use strict\\\";var l=t(\\\"./common\\\"),n=!0,r=!0;try{String.fromCharCode.apply(null,[0])}catch(t){n=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(t){r=!1}for(var h=new l.Buf8(256),i=0;i<256;i++)h[i]=252<=i?6:248<=i?5:240<=i?4:224<=i?3:192<=i?2:1;function d(t,e){if(e<65534&&(t.subarray&&r||!t.subarray&&n))return String.fromCharCode.apply(null,l.shrinkBuf(t,e));for(var a=\\\"\\\",i=0;i<e;i++)a+=String.fromCharCode(t[i]);return a}h[254]=h[254]=1,a.string2buf=function(t){var e,a,i,n,r,s=t.length,o=0;for(n=0;n<s;n++)55296==(64512&(a=t.charCodeAt(n)))&&n+1<s&&56320==(64512&(i=t.charCodeAt(n+1)))&&(a=65536+(a-55296<<10)+(i-56320),n++),o+=a<128?1:a<2048?2:a<65536?3:4;for(e=new l.Buf8(o),n=r=0;r<o;n++)55296==(64512&(a=t.charCodeAt(n)))&&n+1<s&&56320==(64512&(i=t.charCodeAt(n+1)))&&(a=65536+(a-55296<<10)+(i-56320),n++),a<128?e[r++]=a:(a<2048?e[r++]=192|a>>>6:(a<65536?e[r++]=224|a>>>12:(e[r++]=240|a>>>18,e[r++]=128|a>>>12&63),e[r++]=128|a>>>6&63),e[r++]=128|63&a);return e},a.buf2binstring=function(t){return d(t,t.length)},a.binstring2buf=function(t){for(var e=new l.Buf8(t.length),a=0,i=e.length;a<i;a++)e[a]=t.charCodeAt(a);return e},a.buf2string=function(t,e){var a,i,n,r,s=e||t.length,o=new Array(2*s);for(a=i=0;a<s;)if((n=t[a++])<128)o[i++]=n;else if(4<(r=h[n]))o[i++]=65533,a+=r-1;else{for(n&=2===r?31:3===r?15:7;1<r&&a<s;)n=n<<6|63&t[a++],r--;1<r?o[i++]=65533:n<65536?o[i++]=n:(n-=65536,o[i++]=55296|n>>10&1023,o[i++]=56320|1023&n)}return d(o,i)},a.utf8border=function(t,e){var a;for((e=e||t.length)>t.length&&(e=t.length),a=e-1;0<=a&&128==(192&t[a]);)a--;return a<0?e:0===a?e:a+h[t[a]]>e?a:e}},{\\\"./common\\\":3}],5:[function(t,e,a){\\\"use strict\\\";e.exports=function(t,e,a,i){for(var n=65535&t|0,r=t>>>16&65535|0,s=0;0!==a;){for(a-=s=2e3<a?2e3:a;r=r+(n=n+e[i++]|0)|0,--s;);n%=65521,r%=65521}return n|r<<16|0}},{}],6:[function(t,e,a){\\\"use strict\\\";e.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],7:[function(t,e,a){\\\"use strict\\\";var o=function(){for(var t,e=[],a=0;a<256;a++){t=a;for(var i=0;i<8;i++)t=1&t?3988292384^t>>>1:t>>>1;e[a]=t}return e}();e.exports=function(t,e,a,i){var n=o,r=i+a;t^=-1;for(var s=i;s<r;s++)t=t>>>8^n[255&(t^e[s])];return-1^t}},{}],8:[function(t,e,a){\\\"use strict\\\";var l,_=t(\\\"../utils/common\\\"),h=t(\\\"./trees\\\"),u=t(\\\"./adler32\\\"),c=t(\\\"./crc32\\\"),i=t(\\\"./messages\\\"),d=0,f=4,b=0,g=-2,m=-1,w=4,n=2,p=8,v=9,r=286,s=30,o=19,k=2*r+1,y=15,x=3,z=258,B=z+x+1,S=42,E=113,A=1,Z=2,R=3,C=4;function N(t,e){return t.msg=i[e],e}function O(t){return(t<<1)-(4<t?9:0)}function D(t){for(var e=t.length;0<=--e;)t[e]=0}function I(t){var e=t.state,a=e.pending;a>t.avail_out&&(a=t.avail_out),0!==a&&(_.arraySet(t.output,e.pending_buf,e.pending_out,a,t.next_out),t.next_out+=a,e.pending_out+=a,t.total_out+=a,t.avail_out-=a,e.pending-=a,0===e.pending&&(e.pending_out=0))}function U(t,e){h._tr_flush_block(t,0<=t.block_start?t.block_start:-1,t.strstart-t.block_start,e),t.block_start=t.strstart,I(t.strm)}function T(t,e){t.pending_buf[t.pending++]=e}function F(t,e){t.pending_buf[t.pending++]=e>>>8&255,t.pending_buf[t.pending++]=255&e}function L(t,e){var a,i,n=t.max_chain_length,r=t.strstart,s=t.prev_length,o=t.nice_match,l=t.strstart>t.w_size-B?t.strstart-(t.w_size-B):0,h=t.window,d=t.w_mask,f=t.prev,_=t.strstart+z,u=h[r+s-1],c=h[r+s];t.prev_length>=t.good_match&&(n>>=2),o>t.lookahead&&(o=t.lookahead);do{if(h[(a=e)+s]===c&&h[a+s-1]===u&&h[a]===h[r]&&h[++a]===h[r+1]){r+=2,a++;do{}while(h[++r]===h[++a]&&h[++r]===h[++a]&&h[++r]===h[++a]&&h[++r]===h[++a]&&h[++r]===h[++a]&&h[++r]===h[++a]&&h[++r]===h[++a]&&h[++r]===h[++a]&&r<_);if(i=z-(_-r),r=_-z,s<i){if(t.match_start=e,o<=(s=i))break;u=h[r+s-1],c=h[r+s]}}}while((e=f[e&d])>l&&0!=--n);return s<=t.lookahead?s:t.lookahead}function H(t){var e,a,i,n,r,s,o,l,h,d,f=t.w_size;do{if(n=t.window_size-t.lookahead-t.strstart,t.strstart>=f+(f-B)){for(_.arraySet(t.window,t.window,f,f,0),t.match_start-=f,t.strstart-=f,t.block_start-=f,e=a=t.hash_size;i=t.head[--e],t.head[e]=f<=i?i-f:0,--a;);for(e=a=f;i=t.prev[--e],t.prev[e]=f<=i?i-f:0,--a;);n+=f}if(0===t.strm.avail_in)break;if(s=t.strm,o=t.window,l=t.strstart+t.lookahead,h=n,d=void 0,d=s.avail_in,h<d&&(d=h),a=0===d?0:(s.avail_in-=d,_.arraySet(o,s.input,s.next_in,d,l),1===s.state.wrap?s.adler=u(s.adler,o,d,l):2===s.state.wrap&&(s.adler=c(s.adler,o,d,l)),s.next_in+=d,s.total_in+=d,d),t.lookahead+=a,t.lookahead+t.insert>=x)for(r=t.strstart-t.insert,t.ins_h=t.window[r],t.ins_h=(t.ins_h<<t.hash_shift^t.window[r+1])&t.hash_mask;t.insert&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[r+x-1])&t.hash_mask,t.prev[r&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=r,r++,t.insert--,!(t.lookahead+t.insert<x)););}while(t.lookahead<B&&0!==t.strm.avail_in)}function j(t,e){for(var a,i;;){if(t.lookahead<B){if(H(t),t.lookahead<B&&e===d)return A;if(0===t.lookahead)break}if(a=0,t.lookahead>=x&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+x-1])&t.hash_mask,a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),0!==a&&t.strstart-a<=t.w_size-B&&(t.match_length=L(t,a)),t.match_length>=x)if(i=h._tr_tally(t,t.strstart-t.match_start,t.match_length-x),t.lookahead-=t.match_length,t.match_length<=t.max_lazy_match&&t.lookahead>=x){for(t.match_length--;t.strstart++,t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+x-1])&t.hash_mask,a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart,0!=--t.match_length;);t.strstart++}else t.strstart+=t.match_length,t.match_length=0,t.ins_h=t.window[t.strstart],t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+1])&t.hash_mask;else i=h._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++;if(i&&(U(t,!1),0===t.strm.avail_out))return A}return t.insert=t.strstart<x-1?t.strstart:x-1,e===f?(U(t,!0),0===t.strm.avail_out?R:C):t.last_lit&&(U(t,!1),0===t.strm.avail_out)?A:Z}function K(t,e){for(var a,i,n;;){if(t.lookahead<B){if(H(t),t.lookahead<B&&e===d)return A;if(0===t.lookahead)break}if(a=0,t.lookahead>=x&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+x-1])&t.hash_mask,a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),t.prev_length=t.match_length,t.prev_match=t.match_start,t.match_length=x-1,0!==a&&t.prev_length<t.max_lazy_match&&t.strstart-a<=t.w_size-B&&(t.match_length=L(t,a),t.match_length<=5&&(1===t.strategy||t.match_length===x&&4096<t.strstart-t.match_start)&&(t.match_length=x-1)),t.prev_length>=x&&t.match_length<=t.prev_length){for(n=t.strstart+t.lookahead-x,i=h._tr_tally(t,t.strstart-1-t.prev_match,t.prev_length-x),t.lookahead-=t.prev_length-1,t.prev_length-=2;++t.strstart<=n&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+x-1])&t.hash_mask,a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),0!=--t.prev_length;);if(t.match_available=0,t.match_length=x-1,t.strstart++,i&&(U(t,!1),0===t.strm.avail_out))return A}else if(t.match_available){if((i=h._tr_tally(t,0,t.window[t.strstart-1]))&&U(t,!1),t.strstart++,t.lookahead--,0===t.strm.avail_out)return A}else t.match_available=1,t.strstart++,t.lookahead--}return t.match_available&&(i=h._tr_tally(t,0,t.window[t.strstart-1]),t.match_available=0),t.insert=t.strstart<x-1?t.strstart:x-1,e===f?(U(t,!0),0===t.strm.avail_out?R:C):t.last_lit&&(U(t,!1),0===t.strm.avail_out)?A:Z}function M(t,e,a,i,n){this.good_length=t,this.max_lazy=e,this.nice_length=a,this.max_chain=i,this.func=n}function P(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=p,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new _.Buf16(2*k),this.dyn_dtree=new _.Buf16(2*(2*s+1)),this.bl_tree=new _.Buf16(2*(2*o+1)),D(this.dyn_ltree),D(this.dyn_dtree),D(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new _.Buf16(y+1),this.heap=new _.Buf16(2*r+1),D(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new _.Buf16(2*r+1),D(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function Y(t){var e;return t&&t.state?(t.total_in=t.total_out=0,t.data_type=n,(e=t.state).pending=0,e.pending_out=0,e.wrap<0&&(e.wrap=-e.wrap),e.status=e.wrap?S:E,t.adler=2===e.wrap?0:1,e.last_flush=d,h._tr_init(e),b):N(t,g)}function q(t){var e,a=Y(t);return a===b&&((e=t.state).window_size=2*e.w_size,D(e.head),e.max_lazy_match=l[e.level].max_lazy,e.good_match=l[e.level].good_length,e.nice_match=l[e.level].nice_length,e.max_chain_length=l[e.level].max_chain,e.strstart=0,e.block_start=0,e.lookahead=0,e.insert=0,e.match_length=e.prev_length=x-1,e.match_available=0,e.ins_h=0),a}function G(t,e,a,i,n,r){if(!t)return g;var s=1;if(e===m&&(e=6),i<0?(s=0,i=-i):15<i&&(s=2,i-=16),n<1||v<n||a!==p||i<8||15<i||e<0||9<e||r<0||w<r)return N(t,g);8===i&&(i=9);var o=new P;return(t.state=o).strm=t,o.wrap=s,o.gzhead=null,o.w_bits=i,o.w_size=1<<o.w_bits,o.w_mask=o.w_size-1,o.hash_bits=n+7,o.hash_size=1<<o.hash_bits,o.hash_mask=o.hash_size-1,o.hash_shift=~~((o.hash_bits+x-1)/x),o.window=new _.Buf8(2*o.w_size),o.head=new _.Buf16(o.hash_size),o.prev=new _.Buf16(o.w_size),o.lit_bufsize=1<<n+6,o.pending_buf_size=4*o.lit_bufsize,o.pending_buf=new _.Buf8(o.pending_buf_size),o.d_buf=1*o.lit_bufsize,o.l_buf=3*o.lit_bufsize,o.level=e,o.strategy=r,o.method=a,q(t)}l=[new M(0,0,0,0,function(t,e){var a=65535;for(a>t.pending_buf_size-5&&(a=t.pending_buf_size-5);;){if(t.lookahead<=1){if(H(t),0===t.lookahead&&e===d)return A;if(0===t.lookahead)break}t.strstart+=t.lookahead,t.lookahead=0;var i=t.block_start+a;if((0===t.strstart||t.strstart>=i)&&(t.lookahead=t.strstart-i,t.strstart=i,U(t,!1),0===t.strm.avail_out))return A;if(t.strstart-t.block_start>=t.w_size-B&&(U(t,!1),0===t.strm.avail_out))return A}return t.insert=0,e===f?(U(t,!0),0===t.strm.avail_out?R:C):(t.strstart>t.block_start&&(U(t,!1),t.strm.avail_out),A)}),new M(4,4,8,4,j),new M(4,5,16,8,j),new M(4,6,32,32,j),new M(4,4,16,16,K),new M(8,16,32,32,K),new M(8,16,128,128,K),new M(8,32,128,256,K),new M(32,128,258,1024,K),new M(32,258,258,4096,K)],a.deflateInit=function(t,e){return G(t,e,p,15,8,0)},a.deflateInit2=G,a.deflateReset=q,a.deflateResetKeep=Y,a.deflateSetHeader=function(t,e){return t&&t.state?2!==t.state.wrap?g:(t.state.gzhead=e,b):g},a.deflate=function(t,e){var a,i,n,r;if(!t||!t.state||5<e||e<0)return t?N(t,g):g;if(i=t.state,!t.output||!t.input&&0!==t.avail_in||666===i.status&&e!==f)return N(t,0===t.avail_out?-5:g);if(i.strm=t,a=i.last_flush,i.last_flush=e,i.status===S)if(2===i.wrap)t.adler=0,T(i,31),T(i,139),T(i,8),i.gzhead?(T(i,(i.gzhead.text?1:0)+(i.gzhead.hcrc?2:0)+(i.gzhead.extra?4:0)+(i.gzhead.name?8:0)+(i.gzhead.comment?16:0)),T(i,255&i.gzhead.time),T(i,i.gzhead.time>>8&255),T(i,i.gzhead.time>>16&255),T(i,i.gzhead.time>>24&255),T(i,9===i.level?2:2<=i.strategy||i.level<2?4:0),T(i,255&i.gzhead.os),i.gzhead.extra&&i.gzhead.extra.length&&(T(i,255&i.gzhead.extra.length),T(i,i.gzhead.extra.length>>8&255)),i.gzhead.hcrc&&(t.adler=c(t.adler,i.pending_buf,i.pending,0)),i.gzindex=0,i.status=69):(T(i,0),T(i,0),T(i,0),T(i,0),T(i,0),T(i,9===i.level?2:2<=i.strategy||i.level<2?4:0),T(i,3),i.status=E);else{var s=p+(i.w_bits-8<<4)<<8;s|=(2<=i.strategy||i.level<2?0:i.level<6?1:6===i.level?2:3)<<6,0!==i.strstart&&(s|=32),s+=31-s%31,i.status=E,F(i,s),0!==i.strstart&&(F(i,t.adler>>>16),F(i,65535&t.adler)),t.adler=1}if(69===i.status)if(i.gzhead.extra){for(n=i.pending;i.gzindex<(65535&i.gzhead.extra.length)&&(i.pending!==i.pending_buf_size||(i.gzhead.hcrc&&i.pending>n&&(t.adler=c(t.adler,i.pending_buf,i.pending-n,n)),I(t),n=i.pending,i.pending!==i.pending_buf_size));)T(i,255&i.gzhead.extra[i.gzindex]),i.gzindex++;i.gzhead.hcrc&&i.pending>n&&(t.adler=c(t.adler,i.pending_buf,i.pending-n,n)),i.gzindex===i.gzhead.extra.length&&(i.gzindex=0,i.status=73)}else i.status=73;if(73===i.status)if(i.gzhead.name){n=i.pending;do{if(i.pending===i.pending_buf_size&&(i.gzhead.hcrc&&i.pending>n&&(t.adler=c(t.adler,i.pending_buf,i.pending-n,n)),I(t),n=i.pending,i.pending===i.pending_buf_size)){r=1;break}T(i,r=i.gzindex<i.gzhead.name.length?255&i.gzhead.name.charCodeAt(i.gzindex++):0)}while(0!==r);i.gzhead.hcrc&&i.pending>n&&(t.adler=c(t.adler,i.pending_buf,i.pending-n,n)),0===r&&(i.gzindex=0,i.status=91)}else i.status=91;if(91===i.status)if(i.gzhead.comment){n=i.pending;do{if(i.pending===i.pending_buf_size&&(i.gzhead.hcrc&&i.pending>n&&(t.adler=c(t.adler,i.pending_buf,i.pending-n,n)),I(t),n=i.pending,i.pending===i.pending_buf_size)){r=1;break}T(i,r=i.gzindex<i.gzhead.comment.length?255&i.gzhead.comment.charCodeAt(i.gzindex++):0)}while(0!==r);i.gzhead.hcrc&&i.pending>n&&(t.adler=c(t.adler,i.pending_buf,i.pending-n,n)),0===r&&(i.status=103)}else i.status=103;if(103===i.status&&(i.gzhead.hcrc?(i.pending+2>i.pending_buf_size&&I(t),i.pending+2<=i.pending_buf_size&&(T(i,255&t.adler),T(i,t.adler>>8&255),t.adler=0,i.status=E)):i.status=E),0!==i.pending){if(I(t),0===t.avail_out)return i.last_flush=-1,b}else if(0===t.avail_in&&O(e)<=O(a)&&e!==f)return N(t,-5);if(666===i.status&&0!==t.avail_in)return N(t,-5);if(0!==t.avail_in||0!==i.lookahead||e!==d&&666!==i.status){var o=2===i.strategy?function(t,e){for(var a;;){if(0===t.lookahead&&(H(t),0===t.lookahead)){if(e===d)return A;break}if(t.match_length=0,a=h._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++,a&&(U(t,!1),0===t.strm.avail_out))return A}return t.insert=0,e===f?(U(t,!0),0===t.strm.avail_out?R:C):t.last_lit&&(U(t,!1),0===t.strm.avail_out)?A:Z}(i,e):3===i.strategy?function(t,e){for(var a,i,n,r,s=t.window;;){if(t.lookahead<=z){if(H(t),t.lookahead<=z&&e===d)return A;if(0===t.lookahead)break}if(t.match_length=0,t.lookahead>=x&&0<t.strstart&&(i=s[n=t.strstart-1])===s[++n]&&i===s[++n]&&i===s[++n]){r=t.strstart+z;do{}while(i===s[++n]&&i===s[++n]&&i===s[++n]&&i===s[++n]&&i===s[++n]&&i===s[++n]&&i===s[++n]&&i===s[++n]&&n<r);t.match_length=z-(r-n),t.match_length>t.lookahead&&(t.match_length=t.lookahead)}if(t.match_length>=x?(a=h._tr_tally(t,1,t.match_length-x),t.lookahead-=t.match_length,t.strstart+=t.match_length,t.match_length=0):(a=h._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++),a&&(U(t,!1),0===t.strm.avail_out))return A}return t.insert=0,e===f?(U(t,!0),0===t.strm.avail_out?R:C):t.last_lit&&(U(t,!1),0===t.strm.avail_out)?A:Z}(i,e):l[i.level].func(i,e);if(o!==R&&o!==C||(i.status=666),o===A||o===R)return 0===t.avail_out&&(i.last_flush=-1),b;if(o===Z&&(1===e?h._tr_align(i):5!==e&&(h._tr_stored_block(i,0,0,!1),3===e&&(D(i.head),0===i.lookahead&&(i.strstart=0,i.block_start=0,i.insert=0))),I(t),0===t.avail_out))return i.last_flush=-1,b}return e!==f?b:i.wrap<=0?1:(2===i.wrap?(T(i,255&t.adler),T(i,t.adler>>8&255),T(i,t.adler>>16&255),T(i,t.adler>>24&255),T(i,255&t.total_in),T(i,t.total_in>>8&255),T(i,t.total_in>>16&255),T(i,t.total_in>>24&255)):(F(i,t.adler>>>16),F(i,65535&t.adler)),I(t),0<i.wrap&&(i.wrap=-i.wrap),0!==i.pending?b:1)},a.deflateEnd=function(t){var e;return t&&t.state?(e=t.state.status)!==S&&69!==e&&73!==e&&91!==e&&103!==e&&e!==E&&666!==e?N(t,g):(t.state=null,e===E?N(t,-3):b):g},a.deflateSetDictionary=function(t,e){var a,i,n,r,s,o,l,h,d=e.length;if(!t||!t.state)return g;if(2===(r=(a=t.state).wrap)||1===r&&a.status!==S||a.lookahead)return g;for(1===r&&(t.adler=u(t.adler,e,d,0)),a.wrap=0,d>=a.w_size&&(0===r&&(D(a.head),a.strstart=0,a.block_start=0,a.insert=0),h=new _.Buf8(a.w_size),_.arraySet(h,e,d-a.w_size,a.w_size,0),e=h,d=a.w_size),s=t.avail_in,o=t.next_in,l=t.input,t.avail_in=d,t.next_in=0,t.input=e,H(a);a.lookahead>=x;){for(i=a.strstart,n=a.lookahead-(x-1);a.ins_h=(a.ins_h<<a.hash_shift^a.window[i+x-1])&a.hash_mask,a.prev[i&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=i,i++,--n;);a.strstart=i,a.lookahead=x-1,H(a)}return a.strstart+=a.lookahead,a.block_start=a.strstart,a.insert=a.lookahead,a.lookahead=0,a.match_length=a.prev_length=x-1,a.match_available=0,t.next_in=o,t.input=l,t.avail_in=s,a.wrap=r,b},a.deflateInfo=\\\"pako deflate (from Nodeca project)\\\"},{\\\"../utils/common\\\":3,\\\"./adler32\\\":5,\\\"./crc32\\\":7,\\\"./messages\\\":13,\\\"./trees\\\":14}],9:[function(t,e,a){\\\"use strict\\\";e.exports=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\\\"\\\",this.comment=\\\"\\\",this.hcrc=0,this.done=!1}},{}],10:[function(t,e,a){\\\"use strict\\\";e.exports=function(t,e){var a,i,n,r,s,o,l,h,d,f,_,u,c,b,g,m,w,p,v,k,y,x,z,B,S;a=t.state,i=t.next_in,B=t.input,n=i+(t.avail_in-5),r=t.next_out,S=t.output,s=r-(e-t.avail_out),o=r+(t.avail_out-257),l=a.dmax,h=a.wsize,d=a.whave,f=a.wnext,_=a.window,u=a.hold,c=a.bits,b=a.lencode,g=a.distcode,m=(1<<a.lenbits)-1,w=(1<<a.distbits)-1;t:do{c<15&&(u+=B[i++]<<c,c+=8,u+=B[i++]<<c,c+=8),p=b[u&m];e:for(;;){if(u>>>=v=p>>>24,c-=v,0===(v=p>>>16&255))S[r++]=65535&p;else{if(!(16&v)){if(0==(64&v)){p=b[(65535&p)+(u&(1<<v)-1)];continue e}if(32&v){a.mode=12;break t}t.msg=\\\"invalid literal/length code\\\",a.mode=30;break t}k=65535&p,(v&=15)&&(c<v&&(u+=B[i++]<<c,c+=8),k+=u&(1<<v)-1,u>>>=v,c-=v),c<15&&(u+=B[i++]<<c,c+=8,u+=B[i++]<<c,c+=8),p=g[u&w];a:for(;;){if(u>>>=v=p>>>24,c-=v,!(16&(v=p>>>16&255))){if(0==(64&v)){p=g[(65535&p)+(u&(1<<v)-1)];continue a}t.msg=\\\"invalid distance code\\\",a.mode=30;break t}if(y=65535&p,c<(v&=15)&&(u+=B[i++]<<c,(c+=8)<v&&(u+=B[i++]<<c,c+=8)),l<(y+=u&(1<<v)-1)){t.msg=\\\"invalid distance too far back\\\",a.mode=30;break t}if(u>>>=v,c-=v,(v=r-s)<y){if(d<(v=y-v)&&a.sane){t.msg=\\\"invalid distance too far back\\\",a.mode=30;break t}if(z=_,(x=0)===f){if(x+=h-v,v<k){for(k-=v;S[r++]=_[x++],--v;);x=r-y,z=S}}else if(f<v){if(x+=h+f-v,(v-=f)<k){for(k-=v;S[r++]=_[x++],--v;);if(x=0,f<k){for(k-=v=f;S[r++]=_[x++],--v;);x=r-y,z=S}}}else if(x+=f-v,v<k){for(k-=v;S[r++]=_[x++],--v;);x=r-y,z=S}for(;2<k;)S[r++]=z[x++],S[r++]=z[x++],S[r++]=z[x++],k-=3;k&&(S[r++]=z[x++],1<k&&(S[r++]=z[x++]))}else{for(x=r-y;S[r++]=S[x++],S[r++]=S[x++],S[r++]=S[x++],2<(k-=3););k&&(S[r++]=S[x++],1<k&&(S[r++]=S[x++]))}break}}break}}while(i<n&&r<o);i-=k=c>>3,u&=(1<<(c-=k<<3))-1,t.next_in=i,t.next_out=r,t.avail_in=i<n?n-i+5:5-(i-n),t.avail_out=r<o?o-r+257:257-(r-o),a.hold=u,a.bits=c}},{}],11:[function(t,e,a){\\\"use strict\\\";var Z=t(\\\"../utils/common\\\"),R=t(\\\"./adler32\\\"),C=t(\\\"./crc32\\\"),N=t(\\\"./inffast\\\"),O=t(\\\"./inftrees\\\"),D=1,I=2,U=0,T=-2,F=1,i=852,n=592;function L(t){return(t>>>24&255)+(t>>>8&65280)+((65280&t)<<8)+((255&t)<<24)}function r(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Z.Buf16(320),this.work=new Z.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function s(t){var e;return t&&t.state?(e=t.state,t.total_in=t.total_out=e.total=0,t.msg=\\\"\\\",e.wrap&&(t.adler=1&e.wrap),e.mode=F,e.last=0,e.havedict=0,e.dmax=32768,e.head=null,e.hold=0,e.bits=0,e.lencode=e.lendyn=new Z.Buf32(i),e.distcode=e.distdyn=new Z.Buf32(n),e.sane=1,e.back=-1,U):T}function o(t){var e;return t&&t.state?((e=t.state).wsize=0,e.whave=0,e.wnext=0,s(t)):T}function l(t,e){var a,i;return t&&t.state?(i=t.state,e<0?(a=0,e=-e):(a=1+(e>>4),e<48&&(e&=15)),e&&(e<8||15<e)?T:(null!==i.window&&i.wbits!==e&&(i.window=null),i.wrap=a,i.wbits=e,o(t))):T}function h(t,e){var a,i;return t?(i=new r,(t.state=i).window=null,(a=l(t,e))!==U&&(t.state=null),a):T}var d,f,_=!0;function H(t){if(_){var e;for(d=new Z.Buf32(512),f=new Z.Buf32(32),e=0;e<144;)t.lens[e++]=8;for(;e<256;)t.lens[e++]=9;for(;e<280;)t.lens[e++]=7;for(;e<288;)t.lens[e++]=8;for(O(D,t.lens,0,288,d,0,t.work,{bits:9}),e=0;e<32;)t.lens[e++]=5;O(I,t.lens,0,32,f,0,t.work,{bits:5}),_=!1}t.lencode=d,t.lenbits=9,t.distcode=f,t.distbits=5}function j(t,e,a,i){var n,r=t.state;return null===r.window&&(r.wsize=1<<r.wbits,r.wnext=0,r.whave=0,r.window=new Z.Buf8(r.wsize)),i>=r.wsize?(Z.arraySet(r.window,e,a-r.wsize,r.wsize,0),r.wnext=0,r.whave=r.wsize):(i<(n=r.wsize-r.wnext)&&(n=i),Z.arraySet(r.window,e,a-i,n,r.wnext),(i-=n)?(Z.arraySet(r.window,e,a-i,i,0),r.wnext=i,r.whave=r.wsize):(r.wnext+=n,r.wnext===r.wsize&&(r.wnext=0),r.whave<r.wsize&&(r.whave+=n))),0}a.inflateReset=o,a.inflateReset2=l,a.inflateResetKeep=s,a.inflateInit=function(t){return h(t,15)},a.inflateInit2=h,a.inflate=function(t,e){var a,i,n,r,s,o,l,h,d,f,_,u,c,b,g,m,w,p,v,k,y,x,z,B,S=0,E=new Z.Buf8(4),A=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!t||!t.state||!t.output||!t.input&&0!==t.avail_in)return T;12===(a=t.state).mode&&(a.mode=13),s=t.next_out,n=t.output,l=t.avail_out,r=t.next_in,i=t.input,o=t.avail_in,h=a.hold,d=a.bits,f=o,_=l,x=U;t:for(;;)switch(a.mode){case F:if(0===a.wrap){a.mode=13;break}for(;d<16;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}if(2&a.wrap&&35615===h){E[a.check=0]=255&h,E[1]=h>>>8&255,a.check=C(a.check,E,2,0),d=h=0,a.mode=2;break}if(a.flags=0,a.head&&(a.head.done=!1),!(1&a.wrap)||(((255&h)<<8)+(h>>8))%31){t.msg=\\\"incorrect header check\\\",a.mode=30;break}if(8!=(15&h)){t.msg=\\\"unknown compression method\\\",a.mode=30;break}if(d-=4,y=8+(15&(h>>>=4)),0===a.wbits)a.wbits=y;else if(y>a.wbits){t.msg=\\\"invalid window size\\\",a.mode=30;break}a.dmax=1<<y,t.adler=a.check=1,a.mode=512&h?10:12,d=h=0;break;case 2:for(;d<16;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}if(a.flags=h,8!=(255&a.flags)){t.msg=\\\"unknown compression method\\\",a.mode=30;break}if(57344&a.flags){t.msg=\\\"unknown header flags set\\\",a.mode=30;break}a.head&&(a.head.text=h>>8&1),512&a.flags&&(E[0]=255&h,E[1]=h>>>8&255,a.check=C(a.check,E,2,0)),d=h=0,a.mode=3;case 3:for(;d<32;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}a.head&&(a.head.time=h),512&a.flags&&(E[0]=255&h,E[1]=h>>>8&255,E[2]=h>>>16&255,E[3]=h>>>24&255,a.check=C(a.check,E,4,0)),d=h=0,a.mode=4;case 4:for(;d<16;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}a.head&&(a.head.xflags=255&h,a.head.os=h>>8),512&a.flags&&(E[0]=255&h,E[1]=h>>>8&255,a.check=C(a.check,E,2,0)),d=h=0,a.mode=5;case 5:if(1024&a.flags){for(;d<16;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}a.length=h,a.head&&(a.head.extra_len=h),512&a.flags&&(E[0]=255&h,E[1]=h>>>8&255,a.check=C(a.check,E,2,0)),d=h=0}else a.head&&(a.head.extra=null);a.mode=6;case 6:if(1024&a.flags&&(o<(u=a.length)&&(u=o),u&&(a.head&&(y=a.head.extra_len-a.length,a.head.extra||(a.head.extra=new Array(a.head.extra_len)),Z.arraySet(a.head.extra,i,r,u,y)),512&a.flags&&(a.check=C(a.check,i,u,r)),o-=u,r+=u,a.length-=u),a.length))break t;a.length=0,a.mode=7;case 7:if(2048&a.flags){if(0===o)break t;for(u=0;y=i[r+u++],a.head&&y&&a.length<65536&&(a.head.name+=String.fromCharCode(y)),y&&u<o;);if(512&a.flags&&(a.check=C(a.check,i,u,r)),o-=u,r+=u,y)break t}else a.head&&(a.head.name=null);a.length=0,a.mode=8;case 8:if(4096&a.flags){if(0===o)break t;for(u=0;y=i[r+u++],a.head&&y&&a.length<65536&&(a.head.comment+=String.fromCharCode(y)),y&&u<o;);if(512&a.flags&&(a.check=C(a.check,i,u,r)),o-=u,r+=u,y)break t}else a.head&&(a.head.comment=null);a.mode=9;case 9:if(512&a.flags){for(;d<16;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}if(h!==(65535&a.check)){t.msg=\\\"header crc mismatch\\\",a.mode=30;break}d=h=0}a.head&&(a.head.hcrc=a.flags>>9&1,a.head.done=!0),t.adler=a.check=0,a.mode=12;break;case 10:for(;d<32;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}t.adler=a.check=L(h),d=h=0,a.mode=11;case 11:if(0===a.havedict)return t.next_out=s,t.avail_out=l,t.next_in=r,t.avail_in=o,a.hold=h,a.bits=d,2;t.adler=a.check=1,a.mode=12;case 12:if(5===e||6===e)break t;case 13:if(a.last){h>>>=7&d,d-=7&d,a.mode=27;break}for(;d<3;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}switch(a.last=1&h,d-=1,3&(h>>>=1)){case 0:a.mode=14;break;case 1:if(H(a),a.mode=20,6!==e)break;h>>>=2,d-=2;break t;case 2:a.mode=17;break;case 3:t.msg=\\\"invalid block type\\\",a.mode=30}h>>>=2,d-=2;break;case 14:for(h>>>=7&d,d-=7&d;d<32;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}if((65535&h)!=(h>>>16^65535)){t.msg=\\\"invalid stored block lengths\\\",a.mode=30;break}if(a.length=65535&h,d=h=0,a.mode=15,6===e)break t;case 15:a.mode=16;case 16:if(u=a.length){if(o<u&&(u=o),l<u&&(u=l),0===u)break t;Z.arraySet(n,i,r,u,s),o-=u,r+=u,l-=u,s+=u,a.length-=u;break}a.mode=12;break;case 17:for(;d<14;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}if(a.nlen=257+(31&h),h>>>=5,d-=5,a.ndist=1+(31&h),h>>>=5,d-=5,a.ncode=4+(15&h),h>>>=4,d-=4,286<a.nlen||30<a.ndist){t.msg=\\\"too many length or distance symbols\\\",a.mode=30;break}a.have=0,a.mode=18;case 18:for(;a.have<a.ncode;){for(;d<3;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}a.lens[A[a.have++]]=7&h,h>>>=3,d-=3}for(;a.have<19;)a.lens[A[a.have++]]=0;if(a.lencode=a.lendyn,a.lenbits=7,z={bits:a.lenbits},x=O(0,a.lens,0,19,a.lencode,0,a.work,z),a.lenbits=z.bits,x){t.msg=\\\"invalid code lengths set\\\",a.mode=30;break}a.have=0,a.mode=19;case 19:for(;a.have<a.nlen+a.ndist;){for(;m=(S=a.lencode[h&(1<<a.lenbits)-1])>>>16&255,w=65535&S,!((g=S>>>24)<=d);){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}if(w<16)h>>>=g,d-=g,a.lens[a.have++]=w;else{if(16===w){for(B=g+2;d<B;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}if(h>>>=g,d-=g,0===a.have){t.msg=\\\"invalid bit length repeat\\\",a.mode=30;break}y=a.lens[a.have-1],u=3+(3&h),h>>>=2,d-=2}else if(17===w){for(B=g+3;d<B;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}d-=g,y=0,u=3+(7&(h>>>=g)),h>>>=3,d-=3}else{for(B=g+7;d<B;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}d-=g,y=0,u=11+(127&(h>>>=g)),h>>>=7,d-=7}if(a.have+u>a.nlen+a.ndist){t.msg=\\\"invalid bit length repeat\\\",a.mode=30;break}for(;u--;)a.lens[a.have++]=y}}if(30===a.mode)break;if(0===a.lens[256]){t.msg=\\\"invalid code -- missing end-of-block\\\",a.mode=30;break}if(a.lenbits=9,z={bits:a.lenbits},x=O(D,a.lens,0,a.nlen,a.lencode,0,a.work,z),a.lenbits=z.bits,x){t.msg=\\\"invalid literal/lengths set\\\",a.mode=30;break}if(a.distbits=6,a.distcode=a.distdyn,z={bits:a.distbits},x=O(I,a.lens,a.nlen,a.ndist,a.distcode,0,a.work,z),a.distbits=z.bits,x){t.msg=\\\"invalid distances set\\\",a.mode=30;break}if(a.mode=20,6===e)break t;case 20:a.mode=21;case 21:if(6<=o&&258<=l){t.next_out=s,t.avail_out=l,t.next_in=r,t.avail_in=o,a.hold=h,a.bits=d,N(t,_),s=t.next_out,n=t.output,l=t.avail_out,r=t.next_in,i=t.input,o=t.avail_in,h=a.hold,d=a.bits,12===a.mode&&(a.back=-1);break}for(a.back=0;m=(S=a.lencode[h&(1<<a.lenbits)-1])>>>16&255,w=65535&S,!((g=S>>>24)<=d);){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}if(m&&0==(240&m)){for(p=g,v=m,k=w;m=(S=a.lencode[k+((h&(1<<p+v)-1)>>p)])>>>16&255,w=65535&S,!(p+(g=S>>>24)<=d);){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}h>>>=p,d-=p,a.back+=p}if(h>>>=g,d-=g,a.back+=g,a.length=w,0===m){a.mode=26;break}if(32&m){a.back=-1,a.mode=12;break}if(64&m){t.msg=\\\"invalid literal/length code\\\",a.mode=30;break}a.extra=15&m,a.mode=22;case 22:if(a.extra){for(B=a.extra;d<B;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}a.length+=h&(1<<a.extra)-1,h>>>=a.extra,d-=a.extra,a.back+=a.extra}a.was=a.length,a.mode=23;case 23:for(;m=(S=a.distcode[h&(1<<a.distbits)-1])>>>16&255,w=65535&S,!((g=S>>>24)<=d);){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}if(0==(240&m)){for(p=g,v=m,k=w;m=(S=a.distcode[k+((h&(1<<p+v)-1)>>p)])>>>16&255,w=65535&S,!(p+(g=S>>>24)<=d);){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}h>>>=p,d-=p,a.back+=p}if(h>>>=g,d-=g,a.back+=g,64&m){t.msg=\\\"invalid distance code\\\",a.mode=30;break}a.offset=w,a.extra=15&m,a.mode=24;case 24:if(a.extra){for(B=a.extra;d<B;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}a.offset+=h&(1<<a.extra)-1,h>>>=a.extra,d-=a.extra,a.back+=a.extra}if(a.offset>a.dmax){t.msg=\\\"invalid distance too far back\\\",a.mode=30;break}a.mode=25;case 25:if(0===l)break t;if(u=_-l,a.offset>u){if((u=a.offset-u)>a.whave&&a.sane){t.msg=\\\"invalid distance too far back\\\",a.mode=30;break}u>a.wnext?(u-=a.wnext,c=a.wsize-u):c=a.wnext-u,u>a.length&&(u=a.length),b=a.window}else b=n,c=s-a.offset,u=a.length;for(l<u&&(u=l),l-=u,a.length-=u;n[s++]=b[c++],--u;);0===a.length&&(a.mode=21);break;case 26:if(0===l)break t;n[s++]=a.length,l--,a.mode=21;break;case 27:if(a.wrap){for(;d<32;){if(0===o)break t;o--,h|=i[r++]<<d,d+=8}if(_-=l,t.total_out+=_,a.total+=_,_&&(t.adler=a.check=a.flags?C(a.check,n,_,s-_):R(a.check,n,_,s-_)),_=l,(a.flags?h:L(h))!==a.check){t.msg=\\\"incorrect data check\\\",a.mode=30;break}d=h=0}a.mode=28;case 28:if(a.wrap&&a.flags){for(;d<32;){if(0===o)break t;o--,h+=i[r++]<<d,d+=8}if(h!==(4294967295&a.total)){t.msg=\\\"incorrect length check\\\",a.mode=30;break}d=h=0}a.mode=29;case 29:x=1;break t;case 30:x=-3;break t;case 31:return-4;case 32:default:return T}return t.next_out=s,t.avail_out=l,t.next_in=r,t.avail_in=o,a.hold=h,a.bits=d,(a.wsize||_!==t.avail_out&&a.mode<30&&(a.mode<27||4!==e))&&j(t,t.output,t.next_out,_-t.avail_out)?(a.mode=31,-4):(f-=t.avail_in,_-=t.avail_out,t.total_in+=f,t.total_out+=_,a.total+=_,a.wrap&&_&&(t.adler=a.check=a.flags?C(a.check,n,_,t.next_out-_):R(a.check,n,_,t.next_out-_)),t.data_type=a.bits+(a.last?64:0)+(12===a.mode?128:0)+(20===a.mode||15===a.mode?256:0),(0===f&&0===_||4===e)&&x===U&&(x=-5),x)},a.inflateEnd=function(t){if(!t||!t.state)return T;var e=t.state;return e.window&&(e.window=null),t.state=null,U},a.inflateGetHeader=function(t,e){var a;return t&&t.state?0==(2&(a=t.state).wrap)?T:((a.head=e).done=!1,U):T},a.inflateSetDictionary=function(t,e){var a,i=e.length;return t&&t.state?0!==(a=t.state).wrap&&11!==a.mode?T:11===a.mode&&R(1,e,i,0)!==a.check?-3:j(t,e,i,i)?(a.mode=31,-4):(a.havedict=1,U):T},a.inflateInfo=\\\"pako inflate (from Nodeca project)\\\"},{\\\"../utils/common\\\":3,\\\"./adler32\\\":5,\\\"./crc32\\\":7,\\\"./inffast\\\":10,\\\"./inftrees\\\":12}],12:[function(t,e,a){\\\"use strict\\\";var D=t(\\\"../utils/common\\\"),I=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],U=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],T=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],F=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];e.exports=function(t,e,a,i,n,r,s,o){var l,h,d,f,_,u,c,b,g,m=o.bits,w=0,p=0,v=0,k=0,y=0,x=0,z=0,B=0,S=0,E=0,A=null,Z=0,R=new D.Buf16(16),C=new D.Buf16(16),N=null,O=0;for(w=0;w<=15;w++)R[w]=0;for(p=0;p<i;p++)R[e[a+p]]++;for(y=m,k=15;1<=k&&0===R[k];k--);if(k<y&&(y=k),0===k)return n[r++]=20971520,n[r++]=20971520,o.bits=1,0;for(v=1;v<k&&0===R[v];v++);for(y<v&&(y=v),w=B=1;w<=15;w++)if(B<<=1,(B-=R[w])<0)return-1;if(0<B&&(0===t||1!==k))return-1;for(C[1]=0,w=1;w<15;w++)C[w+1]=C[w]+R[w];for(p=0;p<i;p++)0!==e[a+p]&&(s[C[e[a+p]]++]=p);if(0===t?(A=N=s,u=19):1===t?(A=I,Z-=257,N=U,O-=257,u=256):(A=T,N=F,u=-1),w=v,_=r,z=p=E=0,d=-1,f=(S=1<<(x=y))-1,1===t&&852<S||2===t&&592<S)return 1;for(;;){for(c=w-z,s[p]<u?(b=0,g=s[p]):s[p]>u?(b=N[O+s[p]],g=A[Z+s[p]]):(b=96,g=0),l=1<<w-z,v=h=1<<x;n[_+(E>>z)+(h-=l)]=c<<24|b<<16|g|0,0!==h;);for(l=1<<w-1;E&l;)l>>=1;if(0!==l?(E&=l-1,E+=l):E=0,p++,0==--R[w]){if(w===k)break;w=e[a+s[p]]}if(y<w&&(E&f)!==d){for(0===z&&(z=y),_+=v,B=1<<(x=w-z);x+z<k&&!((B-=R[x+z])<=0);)x++,B<<=1;if(S+=1<<x,1===t&&852<S||2===t&&592<S)return 1;n[d=E&f]=y<<24|x<<16|_-r|0}}return 0!==E&&(n[_+E]=w-z<<24|64<<16|0),o.bits=y,0}},{\\\"../utils/common\\\":3}],13:[function(t,e,a){\\\"use strict\\\";e.exports={2:\\\"need dictionary\\\",1:\\\"stream end\\\",0:\\\"\\\",\\\"-1\\\":\\\"file error\\\",\\\"-2\\\":\\\"stream error\\\",\\\"-3\\\":\\\"data error\\\",\\\"-4\\\":\\\"insufficient memory\\\",\\\"-5\\\":\\\"buffer error\\\",\\\"-6\\\":\\\"incompatible version\\\"}},{}],14:[function(t,e,a){\\\"use strict\\\";var l=t(\\\"../utils/common\\\"),o=0,h=1;function i(t){for(var e=t.length;0<=--e;)t[e]=0}var d=0,s=29,f=256,_=f+1+s,u=30,c=19,g=2*_+1,m=15,n=16,b=7,w=256,p=16,v=17,k=18,y=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],x=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],z=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],B=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],S=new Array(2*(_+2));i(S);var E=new Array(2*u);i(E);var A=new Array(512);i(A);var Z=new Array(256);i(Z);var R=new Array(s);i(R);var C,N,O,D=new Array(u);function I(t,e,a,i,n){this.static_tree=t,this.extra_bits=e,this.extra_base=a,this.elems=i,this.max_length=n,this.has_stree=t&&t.length}function r(t,e){this.dyn_tree=t,this.max_code=0,this.stat_desc=e}function U(t){return t<256?A[t]:A[256+(t>>>7)]}function T(t,e){t.pending_buf[t.pending++]=255&e,t.pending_buf[t.pending++]=e>>>8&255}function F(t,e,a){t.bi_valid>n-a?(t.bi_buf|=e<<t.bi_valid&65535,T(t,t.bi_buf),t.bi_buf=e>>n-t.bi_valid,t.bi_valid+=a-n):(t.bi_buf|=e<<t.bi_valid&65535,t.bi_valid+=a)}function L(t,e,a){F(t,a[2*e],a[2*e+1])}function H(t,e){for(var a=0;a|=1&t,t>>>=1,a<<=1,0<--e;);return a>>>1}function j(t,e,a){var i,n,r=new Array(m+1),s=0;for(i=1;i<=m;i++)r[i]=s=s+a[i-1]<<1;for(n=0;n<=e;n++){var o=t[2*n+1];0!==o&&(t[2*n]=H(r[o]++,o))}}function K(t){var e;for(e=0;e<_;e++)t.dyn_ltree[2*e]=0;for(e=0;e<u;e++)t.dyn_dtree[2*e]=0;for(e=0;e<c;e++)t.bl_tree[2*e]=0;t.dyn_ltree[2*w]=1,t.opt_len=t.static_len=0,t.last_lit=t.matches=0}function M(t){8<t.bi_valid?T(t,t.bi_buf):0<t.bi_valid&&(t.pending_buf[t.pending++]=t.bi_buf),t.bi_buf=0,t.bi_valid=0}function P(t,e,a,i){var n=2*e,r=2*a;return t[n]<t[r]||t[n]===t[r]&&i[e]<=i[a]}function Y(t,e,a){for(var i=t.heap[a],n=a<<1;n<=t.heap_len&&(n<t.heap_len&&P(e,t.heap[n+1],t.heap[n],t.depth)&&n++,!P(e,i,t.heap[n],t.depth));)t.heap[a]=t.heap[n],a=n,n<<=1;t.heap[a]=i}function q(t,e,a){var i,n,r,s,o=0;if(0!==t.last_lit)for(;i=t.pending_buf[t.d_buf+2*o]<<8|t.pending_buf[t.d_buf+2*o+1],n=t.pending_buf[t.l_buf+o],o++,0===i?L(t,n,e):(L(t,(r=Z[n])+f+1,e),0!==(s=y[r])&&F(t,n-=R[r],s),L(t,r=U(--i),a),0!==(s=x[r])&&F(t,i-=D[r],s)),o<t.last_lit;);L(t,w,e)}function G(t,e){var a,i,n,r=e.dyn_tree,s=e.stat_desc.static_tree,o=e.stat_desc.has_stree,l=e.stat_desc.elems,h=-1;for(t.heap_len=0,t.heap_max=g,a=0;a<l;a++)0!==r[2*a]?(t.heap[++t.heap_len]=h=a,t.depth[a]=0):r[2*a+1]=0;for(;t.heap_len<2;)r[2*(n=t.heap[++t.heap_len]=h<2?++h:0)]=1,t.depth[n]=0,t.opt_len--,o&&(t.static_len-=s[2*n+1]);for(e.max_code=h,a=t.heap_len>>1;1<=a;a--)Y(t,r,a);for(n=l;a=t.heap[1],t.heap[1]=t.heap[t.heap_len--],Y(t,r,1),i=t.heap[1],t.heap[--t.heap_max]=a,t.heap[--t.heap_max]=i,r[2*n]=r[2*a]+r[2*i],t.depth[n]=(t.depth[a]>=t.depth[i]?t.depth[a]:t.depth[i])+1,r[2*a+1]=r[2*i+1]=n,t.heap[1]=n++,Y(t,r,1),2<=t.heap_len;);t.heap[--t.heap_max]=t.heap[1],function(t,e){var a,i,n,r,s,o,l=e.dyn_tree,h=e.max_code,d=e.stat_desc.static_tree,f=e.stat_desc.has_stree,_=e.stat_desc.extra_bits,u=e.stat_desc.extra_base,c=e.stat_desc.max_length,b=0;for(r=0;r<=m;r++)t.bl_count[r]=0;for(l[2*t.heap[t.heap_max]+1]=0,a=t.heap_max+1;a<g;a++)c<(r=l[2*l[2*(i=t.heap[a])+1]+1]+1)&&(r=c,b++),l[2*i+1]=r,h<i||(t.bl_count[r]++,s=0,u<=i&&(s=_[i-u]),o=l[2*i],t.opt_len+=o*(r+s),f&&(t.static_len+=o*(d[2*i+1]+s)));if(0!==b){do{for(r=c-1;0===t.bl_count[r];)r--;t.bl_count[r]--,t.bl_count[r+1]+=2,t.bl_count[c]--,b-=2}while(0<b);for(r=c;0!==r;r--)for(i=t.bl_count[r];0!==i;)h<(n=t.heap[--a])||(l[2*n+1]!==r&&(t.opt_len+=(r-l[2*n+1])*l[2*n],l[2*n+1]=r),i--)}}(t,e),j(r,h,t.bl_count)}function X(t,e,a){var i,n,r=-1,s=e[1],o=0,l=7,h=4;for(0===s&&(l=138,h=3),e[2*(a+1)+1]=65535,i=0;i<=a;i++)n=s,s=e[2*(i+1)+1],++o<l&&n===s||(o<h?t.bl_tree[2*n]+=o:0!==n?(n!==r&&t.bl_tree[2*n]++,t.bl_tree[2*p]++):o<=10?t.bl_tree[2*v]++:t.bl_tree[2*k]++,r=n,(o=0)===s?(l=138,h=3):n===s?(l=6,h=3):(l=7,h=4))}function W(t,e,a){var i,n,r=-1,s=e[1],o=0,l=7,h=4;for(0===s&&(l=138,h=3),i=0;i<=a;i++)if(n=s,s=e[2*(i+1)+1],!(++o<l&&n===s)){if(o<h)for(;L(t,n,t.bl_tree),0!=--o;);else 0!==n?(n!==r&&(L(t,n,t.bl_tree),o--),L(t,p,t.bl_tree),F(t,o-3,2)):o<=10?(L(t,v,t.bl_tree),F(t,o-3,3)):(L(t,k,t.bl_tree),F(t,o-11,7));r=n,(o=0)===s?(l=138,h=3):n===s?(l=6,h=3):(l=7,h=4)}}i(D);var J=!1;function Q(t,e,a,i){var n,r,s,o;F(t,(d<<1)+(i?1:0),3),r=e,s=a,o=!0,M(n=t),o&&(T(n,s),T(n,~s)),l.arraySet(n.pending_buf,n.window,r,s,n.pending),n.pending+=s}a._tr_init=function(t){J||(function(){var t,e,a,i,n,r=new Array(m+1);for(i=a=0;i<s-1;i++)for(R[i]=a,t=0;t<1<<y[i];t++)Z[a++]=i;for(Z[a-1]=i,i=n=0;i<16;i++)for(D[i]=n,t=0;t<1<<x[i];t++)A[n++]=i;for(n>>=7;i<u;i++)for(D[i]=n<<7,t=0;t<1<<x[i]-7;t++)A[256+n++]=i;for(e=0;e<=m;e++)r[e]=0;for(t=0;t<=143;)S[2*t+1]=8,t++,r[8]++;for(;t<=255;)S[2*t+1]=9,t++,r[9]++;for(;t<=279;)S[2*t+1]=7,t++,r[7]++;for(;t<=287;)S[2*t+1]=8,t++,r[8]++;for(j(S,_+1,r),t=0;t<u;t++)E[2*t+1]=5,E[2*t]=H(t,5);C=new I(S,y,f+1,_,m),N=new I(E,x,0,u,m),O=new I(new Array(0),z,0,c,b)}(),J=!0),t.l_desc=new r(t.dyn_ltree,C),t.d_desc=new r(t.dyn_dtree,N),t.bl_desc=new r(t.bl_tree,O),t.bi_buf=0,t.bi_valid=0,K(t)},a._tr_stored_block=Q,a._tr_flush_block=function(t,e,a,i){var n,r,s=0;0<t.level?(2===t.strm.data_type&&(t.strm.data_type=function(t){var e,a=4093624447;for(e=0;e<=31;e++,a>>>=1)if(1&a&&0!==t.dyn_ltree[2*e])return o;if(0!==t.dyn_ltree[18]||0!==t.dyn_ltree[20]||0!==t.dyn_ltree[26])return h;for(e=32;e<f;e++)if(0!==t.dyn_ltree[2*e])return h;return o}(t)),G(t,t.l_desc),G(t,t.d_desc),s=function(t){var e;for(X(t,t.dyn_ltree,t.l_desc.max_code),X(t,t.dyn_dtree,t.d_desc.max_code),G(t,t.bl_desc),e=c-1;3<=e&&0===t.bl_tree[2*B[e]+1];e--);return t.opt_len+=3*(e+1)+5+5+4,e}(t),n=t.opt_len+3+7>>>3,(r=t.static_len+3+7>>>3)<=n&&(n=r)):n=r=a+5,a+4<=n&&-1!==e?Q(t,e,a,i):4===t.strategy||r===n?(F(t,2+(i?1:0),3),q(t,S,E)):(F(t,4+(i?1:0),3),function(t,e,a,i){var n;for(F(t,e-257,5),F(t,a-1,5),F(t,i-4,4),n=0;n<i;n++)F(t,t.bl_tree[2*B[n]+1],3);W(t,t.dyn_ltree,e-1),W(t,t.dyn_dtree,a-1)}(t,t.l_desc.max_code+1,t.d_desc.max_code+1,s+1),q(t,t.dyn_ltree,t.dyn_dtree)),K(t),i&&M(t)},a._tr_tally=function(t,e,a){return t.pending_buf[t.d_buf+2*t.last_lit]=e>>>8&255,t.pending_buf[t.d_buf+2*t.last_lit+1]=255&e,t.pending_buf[t.l_buf+t.last_lit]=255&a,t.last_lit++,0===e?t.dyn_ltree[2*a]++:(t.matches++,e--,t.dyn_ltree[2*(Z[a]+f+1)]++,t.dyn_dtree[2*U(e)]++),t.last_lit===t.lit_bufsize-1},a._tr_align=function(t){var e;F(t,2,3),L(t,w,S),16===(e=t).bi_valid?(T(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):8<=e.bi_valid&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)}},{\\\"../utils/common\\\":3}],15:[function(t,e,a){\\\"use strict\\\";e.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\\\"\\\",this.state=null,this.data_type=2,this.adler=0}},{}],\\\"/\\\":[function(t,e,a){\\\"use strict\\\";var i={};(0,t(\\\"./lib/utils/common\\\").assign)(i,t(\\\"./lib/deflate\\\"),t(\\\"./lib/inflate\\\"),t(\\\"./lib/zlib/constants\\\")),e.exports=i},{\\\"./lib/deflate\\\":1,\\\"./lib/inflate\\\":2,\\\"./lib/utils/common\\\":3,\\\"./lib/zlib/constants\\\":6}]},{},[])(\\\"/\\\")});\"},{\"col_type\":\"movie_3\",\"name\":\"lib-lzma-local.js\",\"path\":\"lib-lzma-local.js\",\"rule\":\"js:\\nvar e=function(){\\\"use strict\\\";function r(e,r){postMessage({action:xt,cbn:r,result:e})}function t(e){var r=[];return r[e-1]=void 0,r}function o(e,r){return i(e[0]+r[0],e[1]+r[1])}function n(e,r){return u(~~Math.max(Math.min(e[1]/Ot,2147483647),-2147483648)&~~Math.max(Math.min(r[1]/Ot,2147483647),-2147483648),c(e)&c(r))}function s(e,r){var t,o;return e[0]==r[0]&&e[1]==r[1]?0:(t=0>e[1],o=0>r[1],t&&!o?-1:!t&&o?1:h(e,r)[1]<0?-1:1)}function i(e,r){var t,o;for(r%=0x10000000000000000,e%=0x10000000000000000,t=r%Ot,o=Math.floor(e/Ot)*Ot,r=r-t+o,e=e-o+t;0>e;)e+=Ot,r-=Ot;for(;e>4294967295;)e-=Ot,r+=Ot;for(r%=0x10000000000000000;r>0x7fffffff00000000;)r-=0x10000000000000000;for(;-0x8000000000000000>r;)r+=0x10000000000000000;return[e,r]}function _(e,r){return e[0]==r[0]&&e[1]==r[1]}function a(e){return e>=0?[e,0]:[e+Ot,-Ot]}function c(e){return e[0]>=2147483648?~~Math.max(Math.min(e[0]-Ot,2147483647),-2147483648):~~Math.max(Math.min(e[0],2147483647),-2147483648)}function u(e,r){var t,o;return t=e*Ot,o=r,0>r&&(o+=Ot),[o,t]}function f(e){return 30>=e?1<<e:f(30)*f(e-30)}function m(e,r){var t,o,n,s;if(r&=63,_(e,Ht))return r?Gt:e;if(0>e[1])throw Error(\\\"Neg\\\");return s=f(r),o=e[1]*s%0x10000000000000000,n=e[0]*s,t=n-n%Ot,o+=t,n-=t,o>=0x8000000000000000&&(o-=0x10000000000000000),[n,o]}function d(e,r){var t;return r&=63,t=f(r),i(Math.floor(e[0]/t),e[1]/t)}function p(e,r){var t;return r&=63,t=d(e,r),0>e[1]&&(t=o(t,m([2,0],63-r))),t}function h(e,r){return i(e[0]-r[0],e[1]-r[1])}function P(e,r){return e.Mc=r,e.Lc=0,e.Yb=r.length,e}function l(e){return e.Lc>=e.Yb?-1:255&e.Mc[e.Lc++]}function v(e,r,t,o){return e.Lc>=e.Yb?-1:(o=Math.min(o,e.Yb-e.Lc),M(e.Mc,e.Lc,r,t,o),e.Lc+=o,o)}function B(e){return e.Mc=t(32),e.Yb=0,e}function S(e){var r=e.Mc;return r.length=e.Yb,r}function g(e,r){e.Mc[e.Yb++]=r<<24>>24}function k(e,r,t,o){M(r,t,e.Mc,e.Yb,o),e.Yb+=o}function R(e,r,t,o,n){var s;for(s=r;t>s;++s)o[n++]=e.charCodeAt(s)}function M(e,r,t,o,n){for(var s=0;n>s;++s)t[o+s]=e[r+s]}function D(e,r){Ar(r,1<<e.s),r.n=e.f,Hr(r,e.m),r.eb=0,r.fb=3,r.Y=2,r.y=3}function b(r,t,o,n,i){var _,a;if(s(n,At)<0)throw Error(\\\"invalid length \\\"+n);for(r.Tb=n,_=Dr({}),D(i,_),_.Gc=void 0===e.disableEndMark,Gr(_,o),a=0;64>a;a+=8)g(o,255&c(d(n,a)));r.yb=(_.W=0,_.oc=t,_.pc=0,Mr(_),_.d.Ab=o,Fr(_),wr(_),br(_),_.$.rb=_.n+1-2,Qr(_.$,1<<_.Y),_.i.rb=_.n+1-2,Qr(_.i,1<<_.Y),void(_.g=Gt),X({},_))}function w(e,r,t){return e.Nb=B({}),b(e,P({},r),e.Nb,a(r.length),t),e}function E(e,r,t){var o,n,s,i,_=\\\"\\\",c=[];for(n=0;5>n;++n){if(s=l(r),-1==s)throw Error(\\\"truncated input\\\");c[n]=s<<24>>24}if(o=ir({}),!ar(o,c))throw Error(\\\"corrupted input\\\");for(n=0;64>n;n+=8){if(s=l(r),-1==s)throw Error(\\\"truncated input\\\");s=s.toString(16),1==s.length&&(s=\\\"0\\\"+s),_=s+\\\"\\\"+_}/^0+$|^f+$/i.test(_)?e.Tb=At:(i=parseInt(_,16),e.Tb=i>4294967295?At:a(i)),e.yb=nr(o,r,t,e.Tb)}function L(e,r){return e.Nb=B({}),E(e,P({},r),e.Nb),e}function y(e,r,o,n){var s;e.Bc=r,e._b=o,s=r+o+n,(null==e.c||e.Kb!=s)&&(e.c=null,e.Kb=s,e.c=t(e.Kb)),e.H=e.Kb-o}function C(e,r){return e.c[e.f+e.o+r]}function z(e,r,t,o){var n,s;for(e.T&&e.o+r+o>e.h&&(o=e.h-(e.o+r)),++t,s=e.f+e.o+r,n=0;o>n&&e.c[s+n]==e.c[s+n-t];++n);return n}function F(e){return e.h-e.o}function I(e){var r,t,o;for(o=e.f+e.o-e.Bc,o>0&&--o,t=e.f+e.h-o,r=0;t>r;++r)e.c[r]=e.c[o+r];e.f-=o}function x(e){var r;++e.o,e.o>e.zb&&(r=e.f+e.o,r>e.H&&I(e),N(e))}function N(e){var r,t,o;if(!e.T)for(;;){if(o=-e.f+e.Kb-e.h,!o)return;if(r=v(e.cc,e.c,e.f+e.h,o),-1==r)return e.zb=e.h,t=e.f+e.zb,t>e.H&&(e.zb=e.H-e.f),void(e.T=1);e.h+=r,e.h>=e.o+e._b&&(e.zb=e.h-e._b)}}function O(e,r){e.f+=r,e.zb-=r,e.o-=r,e.h-=r}function A(e,r,o,n,s){var i,_,a;1073741567>r&&(e.Fc=16+(n>>1),a=~~((r+o+n+s)/2)+256,y(e,r+o,n+s,a),e.ob=n,i=r+1,e.p!=i&&(e.L=t(2*(e.p=i))),_=65536,e.qb&&(_=r-1,_|=_>>1,_|=_>>2,_|=_>>4,_|=_>>8,_>>=1,_|=65535,_>16777216&&(_>>=1),e.Ec=_,++_,_+=e.R),_!=e.rc&&(e.ub=t(e.rc=_)))}function H(e,r){var t,o,n,s,i,_,a,c,u,f,m,d,p,h,P,l,v,B,S,g,k;if(e.h>=e.o+e.ob)h=e.ob;else if(h=e.h-e.o,e.xb>h)return W(e),0;for(v=0,P=e.o>e.p?e.o-e.p:0,o=e.f+e.o,l=1,c=0,u=0,e.qb?(k=Tt[255&e.c[o]]^255&e.c[o+1],c=1023&k,k^=(255&e.c[o+2])<<8,u=65535&k,f=(k^Tt[255&e.c[o+3]]<<5)&e.Ec):f=255&e.c[o]^(255&e.c[o+1])<<8,n=e.ub[e.R+f]||0,e.qb&&(s=e.ub[c]||0,i=e.ub[1024+u]||0,e.ub[c]=e.o,e.ub[1024+u]=e.o,s>P&&e.c[e.f+s]==e.c[o]&&(r[v++]=l=2,r[v++]=e.o-s-1),i>P&&e.c[e.f+i]==e.c[o]&&(i==s&&(v-=2),r[v++]=l=3,r[v++]=e.o-i-1,s=i),0!=v&&s==n&&(v-=2,l=1)),e.ub[e.R+f]=e.o,S=(e.k<<1)+1,g=e.k<<1,d=p=e.w,0!=e.w&&n>P&&e.c[e.f+n+e.w]!=e.c[o+e.w]&&(r[v++]=l=e.w,r[v++]=e.o-n-1),t=e.Fc;;){if(P>=n||0==t--){e.L[S]=e.L[g]=0;break}if(a=e.o-n,_=(e.k>=a?e.k-a:e.k-a+e.p)<<1,B=e.f+n,m=p>d?d:p,e.c[B+m]==e.c[o+m]){for(;++m!=h&&e.c[B+m]==e.c[o+m];);if(m>l&&(r[v++]=l=m,r[v++]=a-1,m==h)){e.L[g]=e.L[_],e.L[S]=e.L[_+1];break}}(255&e.c[o+m])>(255&e.c[B+m])?(e.L[g]=n,g=_+1,n=e.L[g],p=m):(e.L[S]=n,S=_,n=e.L[S],d=m)}return W(e),v}function G(e){e.f=0,e.o=0,e.h=0,e.T=0,N(e),e.k=0,O(e,-1)}function W(e){var r;++e.k>=e.p&&(e.k=0),x(e),1073741823==e.o&&(r=e.o-e.p,T(e.L,2*e.p,r),T(e.ub,e.rc,r),O(e,r))}function T(e,r,t){var o,n;for(o=0;r>o;++o)n=e[o]||0,t>=n?n=0:n-=t,e[o]=n}function Z(e,r){e.qb=r>2,e.qb?(e.w=0,e.xb=4,e.R=66560):(e.w=2,e.xb=3,e.R=0)}function Y(e,r){var t,o,n,s,i,_,a,c,u,f,m,d,p,h,P,l,v;do{if(e.h>=e.o+e.ob)d=e.ob;else if(d=e.h-e.o,e.xb>d){W(e);continue}for(p=e.o>e.p?e.o-e.p:0,o=e.f+e.o,e.qb?(v=Tt[255&e.c[o]]^255&e.c[o+1],_=1023&v,e.ub[_]=e.o,v^=(255&e.c[o+2])<<8,a=65535&v,e.ub[1024+a]=e.o,c=(v^Tt[255&e.c[o+3]]<<5)&e.Ec):c=255&e.c[o]^(255&e.c[o+1])<<8,n=e.ub[e.R+c],e.ub[e.R+c]=e.o,P=(e.k<<1)+1,l=e.k<<1,f=m=e.w,t=e.Fc;;){if(p>=n||0==t--){e.L[P]=e.L[l]=0;break}if(i=e.o-n,s=(e.k>=i?e.k-i:e.k-i+e.p)<<1,h=e.f+n,u=m>f?f:m,e.c[h+u]==e.c[o+u]){for(;++u!=d&&e.c[h+u]==e.c[o+u];);if(u==d){e.L[l]=e.L[s],e.L[P]=e.L[s+1];break}}(255&e.c[o+u])>(255&e.c[h+u])?(e.L[l]=n,l=s+1,n=e.L[l],m=u):(e.L[P]=n,P=s,n=e.L[P],f=u)}W(e)}while(0!=--r)}function V(e,r,t){var o=e.o-r-1;for(0>o&&(o+=e.M);0!=t;--t)o>=e.M&&(o=0),e.Lb[e.o++]=e.Lb[o++],e.o>=e.M&&$(e)}function j(e,r){(null==e.Lb||e.M!=r)&&(e.Lb=t(r)),e.M=r,e.o=0,e.h=0}function $(e){var r=e.o-e.h;r&&(k(e.cc,e.Lb,e.h,r),e.o>=e.M&&(e.o=0),e.h=e.o)}function K(e,r){var t=e.o-r-1;return 0>t&&(t+=e.M),e.Lb[t]}function q(e,r){e.Lb[e.o++]=r,e.o>=e.M&&$(e)}function J(e){$(e),e.cc=null}function Q(e){return e-=2,4>e?e:3}function U(e){return 4>e?0:10>e?e-3:e-6}function X(e,r){return e.cb=r,e.Z=null,e.zc=1,e}function er(e,r){return e.Z=r,e.cb=null,e.zc=1,e}function rr(e){if(!e.zc)throw Error(\\\"bad state\\\");return e.cb?or(e):tr(e),e.zc}function tr(e){var r=sr(e.Z);if(-1==r)throw Error(\\\"corrupted input\\\");e.Pb=At,e.Pc=e.Z.g,(r||s(e.Z.Nc,Gt)>=0&&s(e.Z.g,e.Z.Nc)>=0)&&($(e.Z.B),J(e.Z.B),e.Z.e.Ab=null,e.zc=0)}function or(e){Rr(e.cb,e.cb.Xb,e.cb.uc,e.cb.Kc),e.Pb=e.cb.Xb[0],e.cb.Kc[0]&&(Or(e.cb),e.zc=0)}function nr(e,r,t,o){return e.e.Ab=r,J(e.B),e.B.cc=t,_r(e),e.U=0,e.ib=0,e.Jc=0,e.Ic=0,e.Qc=0,e.Nc=o,e.g=Gt,e.jc=0,er({},e)}function sr(e){var r,t,n,i,_,u;if(u=c(e.g)&e.Dc,vt(e.e,e.Gb,(e.U<<4)+u)){if(vt(e.e,e.Zb,e.U))n=0,vt(e.e,e.Cb,e.U)?(vt(e.e,e.Db,e.U)?(vt(e.e,e.Eb,e.U)?(t=e.Qc,e.Qc=e.Ic):t=e.Ic,e.Ic=e.Jc):t=e.Jc,e.Jc=e.ib,e.ib=t):vt(e.e,e.pb,(e.U<<4)+u)||(e.U=7>e.U?9:11,n=1),n||(n=mr(e.sb,e.e,u)+2,e.U=7>e.U?8:11);else if(e.Qc=e.Ic,e.Ic=e.Jc,e.Jc=e.ib,n=2+mr(e.Rb,e.e,u),e.U=7>e.U?7:10,_=at(e.kb[Q(n)],e.e),_>=4){if(i=(_>>1)-1,e.ib=(2|1&_)<<i,14>_)e.ib+=ut(e.kc,e.ib-_-1,e.e,i);else if(e.ib+=Bt(e.e,i-4)<<4,e.ib+=ct(e.Fb,e.e),0>e.ib)return-1==e.ib?1:-1}else e.ib=_;if(s(a(e.ib),e.g)>=0||e.ib>=e.nb)return-1;V(e.B,e.ib,n),e.g=o(e.g,a(n)),e.jc=K(e.B,0)}else r=Pr(e.gb,c(e.g),e.jc),e.jc=7>e.U?vr(r,e.e):Br(r,e.e,K(e.B,e.ib)),q(e.B,e.jc),e.U=U(e.U),e.g=o(e.g,Wt);return 0}function ir(e){e.B={},e.e={},e.Gb=t(192),e.Zb=t(12),e.Cb=t(12),e.Db=t(12),e.Eb=t(12),e.pb=t(192),e.kb=t(4),e.kc=t(114),e.Fb=_t({},4),e.Rb=dr({}),e.sb=dr({}),e.gb={};for(var r=0;4>r;++r)e.kb[r]=_t({},6);return e}function _r(e){e.B.h=0,e.B.o=0,gt(e.Gb),gt(e.pb),gt(e.Zb),gt(e.Cb),gt(e.Db),gt(e.Eb),gt(e.kc),lr(e.gb);for(var r=0;4>r;++r)gt(e.kb[r].G);pr(e.Rb),pr(e.sb),gt(e.Fb.G),St(e.e)}function ar(e,r){var t,o,n,s,i,_,a;if(5>r.length)return 0;for(a=255&r[0],n=a%9,_=~~(a/9),s=_%5,i=~~(_/5),t=0,o=0;4>o;++o)t+=(255&r[1+o])<<8*o;return t>99999999||!ur(e,n,s,i)?0:cr(e,t)}function cr(e,r){return 0>r?0:(e.Ob!=r&&(e.Ob=r,e.nb=Math.max(e.Ob,1),j(e.B,Math.max(e.nb,4096))),1)}function ur(e,r,t,o){if(r>8||t>4||o>4)return 0;hr(e.gb,t,r);var n=1<<o;return fr(e.Rb,n),fr(e.sb,n),e.Dc=n-1,1}function fr(e,r){for(;r>e.O;++e.O)e.ec[e.O]=_t({},3),e.hc[e.O]=_t({},3)}function mr(e,r,t){if(!vt(r,e.wc,0))return at(e.ec[t],r);var o=8;return o+=vt(r,e.wc,1)?8+at(e.tc,r):at(e.hc[t],r)}function dr(e){return e.wc=t(2),e.ec=t(16),e.hc=t(16),e.tc=_t({},8),e.O=0,e}function pr(e){gt(e.wc);for(var r=0;e.O>r;++r)gt(e.ec[r].G),gt(e.hc[r].G);gt(e.tc.G)}function hr(e,r,o){var n,s;if(null==e.V||e.u!=o||e.I!=r)for(e.I=r,e.qc=(1<<r)-1,e.u=o,s=1<<e.u+e.I,e.V=t(s),n=0;s>n;++n)e.V[n]=Sr({})}function Pr(e,r,t){return e.V[((r&e.qc)<<e.u)+((255&t)>>>8-e.u)]}function lr(e){var r,t;for(t=1<<e.u+e.I,r=0;t>r;++r)gt(e.V[r].Ib)}function vr(e,r){var t=1;do t=t<<1|vt(r,e.Ib,t);while(256>t);return t<<24>>24}function Br(e,r,t){var o,n,s=1;do if(n=t>>7&1,t<<=1,o=vt(r,e.Ib,(1+n<<8)+s),s=s<<1|o,n!=o){for(;256>s;)s=s<<1|vt(r,e.Ib,s);break}while(256>s);return s<<24>>24}function Sr(e){return e.Ib=t(768),e}function gr(e,r){var t,o,n,s;e.jb=r,n=e.a[r].r,o=e.a[r].j;do e.a[r].t&&(st(e.a[n]),e.a[n].r=n-1,e.a[r].Ac&&(e.a[n-1].t=0,e.a[n-1].r=e.a[r].r2,e.a[n-1].j=e.a[r].j2)),s=n,t=o,o=e.a[s].j,n=e.a[s].r,e.a[s].j=t,e.a[s].r=r,r=s;while(r>0);return e.mb=e.a[0].j,e.q=e.a[0].r}function kr(e){e.l=0,e.J=0;for(var r=0;4>r;++r)e.v[r]=0}function Rr(e,r,t,n){var i,u,f,m,d,p,P,l,v,B,S,g,k,R,M;if(r[0]=Gt,t[0]=Gt,n[0]=1,e.oc&&(e.b.cc=e.oc,G(e.b),e.W=1,e.oc=null),!e.pc){if(e.pc=1,R=e.g,_(e.g,Gt)){if(!F(e.b))return void Er(e,c(e.g));xr(e),k=c(e.g)&e.y,kt(e.d,e.C,(e.l<<4)+k,0),e.l=U(e.l),f=C(e.b,-e.s),rt(Xr(e.A,c(e.g),e.J),e.d,f),e.J=f,--e.s,e.g=o(e.g,Wt)}if(!F(e.b))return void Er(e,c(e.g));for(;;){if(P=Lr(e,c(e.g)),B=e.mb,k=c(e.g)&e.y,u=(e.l<<4)+k,1==P&&-1==B)kt(e.d,e.C,u,0),f=C(e.b,-e.s),M=Xr(e.A,c(e.g),e.J),7>e.l?rt(M,e.d,f):(v=C(e.b,-e.v[0]-1-e.s),tt(M,e.d,v,f)),e.J=f,e.l=U(e.l);else{if(kt(e.d,e.C,u,1),4>B){if(kt(e.d,e.bb,e.l,1),B?(kt(e.d,e.hb,e.l,1),1==B?kt(e.d,e.Ub,e.l,0):(kt(e.d,e.Ub,e.l,1),kt(e.d,e.vc,e.l,B-2))):(kt(e.d,e.hb,e.l,0),1==P?kt(e.d,e._,u,0):kt(e.d,e._,u,1)),1==P?e.l=7>e.l?9:11:(Kr(e.i,e.d,P-2,k),e.l=7>e.l?8:11),m=e.v[B],0!=B){for(p=B;p>=1;--p)e.v[p]=e.v[p-1];e.v[0]=m}}else{for(kt(e.d,e.bb,e.l,0),e.l=7>e.l?7:10,Kr(e.$,e.d,P-2,k),B-=4,g=Tr(B),l=Q(P),mt(e.K[l],e.d,g),g>=4&&(d=(g>>1)-1,i=(2|1&g)<<d,S=B-i,14>g?Pt(e.Sb,i-g-1,e.d,d,S):(Rt(e.d,S>>4,d-4),pt(e.S,e.d,15&S),++e.Qb)),m=B,p=3;p>=1;--p)e.v[p]=e.v[p-1];e.v[0]=m,++e.Mb}e.J=C(e.b,P-1-e.s)}if(e.s-=P,e.g=o(e.g,a(P)),!e.s){if(e.Mb>=128&&wr(e),e.Qb>=16&&br(e),r[0]=e.g,t[0]=Mt(e.d),!F(e.b))return void Er(e,c(e.g));if(s(h(e.g,R),[4096,0])>=0)return e.pc=0,void(n[0]=0)}}}}function Mr(e){var r,t;e.b||(r={},t=4,e.X||(t=2),Z(r,t),e.b=r),Ur(e.A,e.eb,e.fb),(e.ab!=e.wb||e.Hb!=e.n)&&(A(e.b,e.ab,4096,e.n,274),e.wb=e.ab,e.Hb=e.n)}function Dr(e){var r;for(e.v=t(4),e.a=[],e.d={},e.C=t(192),e.bb=t(12),e.hb=t(12),e.Ub=t(12),e.vc=t(12),e._=t(192),e.K=[],e.Sb=t(114),e.S=ft({},4),e.$=qr({}),e.i=qr({}),e.A={},e.m=[],e.P=[],e.lb=[],e.nc=t(16),e.x=t(4),e.Q=t(4),e.Xb=[Gt],e.uc=[Gt],e.Kc=[0],e.fc=t(5),e.yc=t(128),e.vb=0,e.X=1,e.D=0,e.Hb=-1,e.mb=0,r=0;4096>r;++r)e.a[r]={};for(r=0;4>r;++r)e.K[r]=ft({},6);return e}function br(e){for(var r=0;16>r;++r)e.nc[r]=ht(e.S,r);e.Qb=0}function wr(e){var r,t,o,n,s,i,_,a;for(n=4;128>n;++n)i=Tr(n),o=(i>>1)-1,r=(2|1&i)<<o,e.yc[n]=lt(e.Sb,r-i-1,o,n-r);for(s=0;4>s;++s){for(t=e.K[s],_=s<<6,i=0;e.$b>i;++i)e.P[_+i]=dt(t,i);for(i=14;e.$b>i;++i)e.P[_+i]+=(i>>1)-1-4<<6;for(a=128*s,n=0;4>n;++n)e.lb[a+n]=e.P[_+n];for(;128>n;++n)e.lb[a+n]=e.P[_+Tr(n)]+e.yc[n]}e.Mb=0}function Er(e,r){Nr(e),Wr(e,r&e.y);for(var t=0;5>t;++t)bt(e.d)}function Lr(e,r){var t,o,n,s,i,_,a,c,u,f,m,d,p,h,P,l,v,B,S,g,k,R,M,D,b,w,E,L,y,I,x,N,O,A,H,G,W,T,Z,Y,V,j,$,K,q,J,Q,X,er,rr;if(e.jb!=e.q)return p=e.a[e.q].r-e.q,e.mb=e.a[e.q].j,e.q=e.a[e.q].r,p;if(e.q=e.jb=0,e.N?(d=e.vb,e.N=0):d=xr(e),E=e.D,b=F(e.b)+1,2>b)return e.mb=-1,1;for(b>273&&(b=273),Y=0,u=0;4>u;++u)e.x[u]=e.v[u],e.Q[u]=z(e.b,-1,e.x[u],273),e.Q[u]>e.Q[Y]&&(Y=u);if(e.Q[Y]>=e.n)return e.mb=Y,p=e.Q[Y],Ir(e,p-1),p;if(d>=e.n)return e.mb=e.m[E-1]+4,Ir(e,d-1),d;if(a=C(e.b,-1),v=C(e.b,-e.v[0]-1-1),2>d&&a!=v&&2>e.Q[Y])return e.mb=-1,1;if(e.a[0].Hc=e.l,A=r&e.y,e.a[1].z=Yt[e.C[(e.l<<4)+A]>>>2]+nt(Xr(e.A,r,e.J),e.l>=7,v,a),st(e.a[1]),B=Yt[2048-e.C[(e.l<<4)+A]>>>2],Z=B+Yt[2048-e.bb[e.l]>>>2],v==a&&(V=Z+zr(e,e.l,A),e.a[1].z>V&&(e.a[1].z=V,it(e.a[1]))),m=d>=e.Q[Y]?d:e.Q[Y],2>m)return e.mb=e.a[1].j,1;e.a[1].r=0,e.a[0].bc=e.x[0],e.a[0].ac=e.x[1],e.a[0].dc=e.x[2],e.a[0].lc=e.x[3],f=m;do e.a[f--].z=268435455;while(f>=2);for(u=0;4>u;++u)if(T=e.Q[u],!(2>T)){G=Z+Cr(e,u,e.l,A);do s=G+Jr(e.i,T-2,A),x=e.a[T],x.z>s&&(x.z=s,x.r=0,x.j=u,x.t=0);while(--T>=2)}if(D=B+Yt[e.bb[e.l]>>>2],f=e.Q[0]>=2?e.Q[0]+1:2,d>=f){for(L=0;f>e.m[L];)L+=2;for(;c=e.m[L+1],s=D+yr(e,c,f,A),x=e.a[f],x.z>s&&(x.z=s,x.r=0,x.j=c+4,x.t=0),f!=e.m[L]||(L+=2,L!=E);++f);}for(t=0;;){if(++t,t==m)return gr(e,t);if(S=xr(e),E=e.D,S>=e.n)return e.vb=S,e.N=1,gr(e,t);if(++r,O=e.a[t].r,e.a[t].t?(--O,e.a[t].Ac?($=e.a[e.a[t].r2].Hc,$=4>e.a[t].j2?7>$?8:11:7>$?7:10):$=e.a[O].Hc,$=U($)):$=e.a[O].Hc,O==t-1?$=e.a[t].j?U($):7>$?9:11:(e.a[t].t&&e.a[t].Ac?(O=e.a[t].r2,N=e.a[t].j2,$=7>$?8:11):(N=e.a[t].j,$=4>N?7>$?8:11:7>$?7:10),I=e.a[O],4>N?N?1==N?(e.x[0]=I.ac,e.x[1]=I.bc,e.x[2]=I.dc,e.x[3]=I.lc):2==N?(e.x[0]=I.dc,e.x[1]=I.bc,e.x[2]=I.ac,e.x[3]=I.lc):(e.x[0]=I.lc,e.x[1]=I.bc,e.x[2]=I.ac,e.x[3]=I.dc):(e.x[0]=I.bc,e.x[1]=I.ac,e.x[2]=I.dc,e.x[3]=I.lc):(e.x[0]=N-4,e.x[1]=I.bc,e.x[2]=I.ac,e.x[3]=I.dc)),e.a[t].Hc=$,e.a[t].bc=e.x[0],e.a[t].ac=e.x[1],e.a[t].dc=e.x[2],e.a[t].lc=e.x[3],_=e.a[t].z,a=C(e.b,-1),v=C(e.b,-e.x[0]-1-1),A=r&e.y,o=_+Yt[e.C[($<<4)+A]>>>2]+nt(Xr(e.A,r,C(e.b,-2)),$>=7,v,a),R=e.a[t+1],g=0,R.z>o&&(R.z=o,R.r=t,R.j=-1,R.t=0,g=1),B=_+Yt[2048-e.C[($<<4)+A]>>>2],Z=B+Yt[2048-e.bb[$]>>>2],v!=a||t>R.r&&!R.j||(V=Z+(Yt[e.hb[$]>>>2]+Yt[e._[($<<4)+A]>>>2]),R.z>=V&&(R.z=V,R.r=t,R.j=0,R.t=0,g=1)),w=F(e.b)+1,w=w>4095-t?4095-t:w,b=w,!(2>b)){if(b>e.n&&(b=e.n),!g&&v!=a&&(q=Math.min(w-1,e.n),P=z(e.b,0,e.x[0],q),P>=2)){for(K=U($),H=r+1&e.y,M=o+Yt[2048-e.C[(K<<4)+H]>>>2]+Yt[2048-e.bb[K]>>>2],y=t+1+P;y>m;)e.a[++m].z=268435455;s=M+(J=Jr(e.i,P-2,H),J+Cr(e,0,K,H)),x=e.a[y],x.z>s&&(x.z=s,x.r=t+1,x.j=0,x.t=1,x.Ac=0)}for(j=2,W=0;4>W;++W)if(h=z(e.b,-1,e.x[W],b),!(2>h)){l=h;do{for(;t+h>m;)e.a[++m].z=268435455;s=Z+(Q=Jr(e.i,h-2,A),Q+Cr(e,W,$,A)),x=e.a[t+h],x.z>s&&(x.z=s,x.r=t,x.j=W,x.t=0)}while(--h>=2);if(h=l,W||(j=h+1),w>h&&(q=Math.min(w-1-h,e.n),P=z(e.b,h,e.x[W],q),P>=2)){for(K=7>$?8:11,H=r+h&e.y,n=Z+(X=Jr(e.i,h-2,A),X+Cr(e,W,$,A))+Yt[e.C[(K<<4)+H]>>>2]+nt(Xr(e.A,r+h,C(e.b,h-1-1)),1,C(e.b,h-1-(e.x[W]+1)),C(e.b,h-1)),K=U(K),H=r+h+1&e.y,k=n+Yt[2048-e.C[(K<<4)+H]>>>2],M=k+Yt[2048-e.bb[K]>>>2],y=h+1+P;t+y>m;)e.a[++m].z=268435455;s=M+(er=Jr(e.i,P-2,H),er+Cr(e,0,K,H)),x=e.a[t+y],x.z>s&&(x.z=s,x.r=t+h+1,x.j=0,x.t=1,x.Ac=1,x.r2=t,x.j2=W)}}if(S>b){for(S=b,E=0;S>e.m[E];E+=2);e.m[E]=S,E+=2}if(S>=j){for(D=B+Yt[e.bb[$]>>>2];t+S>m;)e.a[++m].z=268435455;for(L=0;j>e.m[L];)L+=2;for(h=j;;++h)if(i=e.m[L+1],s=D+yr(e,i,h,A),x=e.a[t+h],x.z>s&&(x.z=s,x.r=t,x.j=i+4,x.t=0),h==e.m[L]){if(w>h&&(q=Math.min(w-1-h,e.n),P=z(e.b,h,i,q),P>=2)){for(K=7>$?7:10,H=r+h&e.y,n=s+Yt[e.C[(K<<4)+H]>>>2]+nt(Xr(e.A,r+h,C(e.b,h-1-1)),1,C(e.b,h-(i+1)-1),C(e.b,h-1)),K=U(K),H=r+h+1&e.y,k=n+Yt[2048-e.C[(K<<4)+H]>>>2],M=k+Yt[2048-e.bb[K]>>>2],y=h+1+P;t+y>m;)e.a[++m].z=268435455;s=M+(rr=Jr(e.i,P-2,H),rr+Cr(e,0,K,H)),x=e.a[t+y],x.z>s&&(x.z=s,x.r=t+h+1,x.j=0,x.t=1,x.Ac=1,x.r2=t,x.j2=i+4)}if(L+=2,L==E)break}}}}}function yr(e,r,t,o){var n,s=Q(t);return n=128>r?e.lb[128*s+r]:e.P[(s<<6)+Zr(r)]+e.nc[15&r],n+Jr(e.$,t-2,o)}function Cr(e,r,t,o){var n;return r?(n=Yt[2048-e.hb[t]>>>2],1==r?n+=Yt[e.Ub[t]>>>2]:(n+=Yt[2048-e.Ub[t]>>>2],n+=wt(e.vc[t],r-2))):(n=Yt[e.hb[t]>>>2],n+=Yt[2048-e._[(t<<4)+o]>>>2]),n}function zr(e,r,t){return Yt[e.hb[r]>>>2]+Yt[e._[(r<<4)+t]>>>2]}function Fr(e){kr(e),Dt(e.d),gt(e.C),gt(e._),gt(e.bb),gt(e.hb),gt(e.Ub),gt(e.vc),gt(e.Sb),et(e.A);for(var r=0;4>r;++r)gt(e.K[r].G);jr(e.$,1<<e.Y),jr(e.i,1<<e.Y),gt(e.S.G),e.N=0,e.jb=0,e.q=0,e.s=0}function Ir(e,r){r>0&&(Y(e.b,r),e.s+=r)}function xr(e){var r=0;return e.D=H(e.b,e.m),e.D>0&&(r=e.m[e.D-2],r==e.n&&(r+=z(e.b,r-1,e.m[e.D-1],273-r))),++e.s,r}function Nr(e){e.b&&e.W&&(e.b.cc=null,e.W=0)}function Or(e){Nr(e),e.d.Ab=null}function Ar(e,r){e.ab=r;for(var t=0;r>1<<t;++t);e.$b=2*t}function Hr(e,r){var t=e.X;e.X=r,e.b&&t!=e.X&&(e.wb=-1,e.b=null)}function Gr(e,r){e.fc[0]=9*(5*e.Y+e.eb)+e.fb<<24>>24;for(var t=0;4>t;++t)e.fc[1+t]=e.ab>>8*t<<24>>24;k(r,e.fc,0,5)}function Wr(e,r){if(e.Gc){kt(e.d,e.C,(e.l<<4)+r,1),kt(e.d,e.bb,e.l,0),e.l=7>e.l?7:10,Kr(e.$,e.d,0,r);var t=Q(2);mt(e.K[t],e.d,63),Rt(e.d,67108863,26),pt(e.S,e.d,15)}}function Tr(e){return 2048>e?Zt[e]:2097152>e?Zt[e>>10]+20:Zt[e>>20]+40}function Zr(e){return 131072>e?Zt[e>>6]+12:134217728>e?Zt[e>>16]+32:Zt[e>>26]+52}function Yr(e,r,t,o){8>t?(kt(r,e.db,0,0),mt(e.Vb[o],r,t)):(t-=8,kt(r,e.db,0,1),8>t?(kt(r,e.db,1,0),mt(e.Wb[o],r,t)):(kt(r,e.db,1,1),mt(e.ic,r,t-8)))}function Vr(e){e.db=t(2),e.Vb=t(16),e.Wb=t(16),e.ic=ft({},8);for(var r=0;16>r;++r)e.Vb[r]=ft({},3),e.Wb[r]=ft({},3);return e}function jr(e,r){gt(e.db);for(var t=0;r>t;++t)gt(e.Vb[t].G),gt(e.Wb[t].G);gt(e.ic.G)}function $r(e,r,t,o,n){var s,i,_,a,c;for(s=Yt[e.db[0]>>>2],i=Yt[2048-e.db[0]>>>2],_=i+Yt[e.db[1]>>>2],a=i+Yt[2048-e.db[1]>>>2],c=0,c=0;8>c;++c){if(c>=t)return;o[n+c]=s+dt(e.Vb[r],c)}for(;16>c;++c){if(c>=t)return;o[n+c]=_+dt(e.Wb[r],c-8)}for(;t>c;++c)o[n+c]=a+dt(e.ic,c-8-8)}function Kr(e,r,t,o){Yr(e,r,t,o),0==--e.sc[o]&&($r(e,o,e.rb,e.Cc,272*o),e.sc[o]=e.rb)}function qr(e){return Vr(e),e.Cc=[],e.sc=[],e}function Jr(e,r,t){return e.Cc[272*t+r]}function Qr(e,r){for(var t=0;r>t;++t)$r(e,t,e.rb,e.Cc,272*t),e.sc[t]=e.rb}function Ur(e,r,o){var n,s;if(null==e.V||e.u!=o||e.I!=r)for(e.I=r,e.qc=(1<<r)-1,e.u=o,s=1<<e.u+e.I,e.V=t(s),n=0;s>n;++n)e.V[n]=ot({})}function Xr(e,r,t){return e.V[((r&e.qc)<<e.u)+((255&t)>>>8-e.u)]}function et(e){var r,t=1<<e.u+e.I;for(r=0;t>r;++r)gt(e.V[r].tb)}function rt(e,r,t){var o,n,s=1;for(n=7;n>=0;--n)o=t>>n&1,kt(r,e.tb,s,o),s=s<<1|o}function tt(e,r,t,o){var n,s,i,_,a=1,c=1;for(s=7;s>=0;--s)n=o>>s&1,_=c,a&&(i=t>>s&1,_+=1+i<<8,a=i==n),kt(r,e.tb,_,n),c=c<<1|n}function ot(e){return e.tb=t(768),e}function nt(e,r,t,o){var n,s,i=1,_=7,a=0;if(r)for(;_>=0;--_)if(s=t>>_&1,n=o>>_&1,a+=wt(e.tb[(1+s<<8)+i],n),i=i<<1|n,s!=n){--_;break}for(;_>=0;--_)n=o>>_&1,a+=wt(e.tb[i],n),i=i<<1|n;return a}function st(e){e.j=-1,e.t=0}function it(e){e.j=0,e.t=0}function _t(e,r){return e.F=r,e.G=t(1<<r),e}function at(e,r){var t,o=1;for(t=e.F;0!=t;--t)o=(o<<1)+vt(r,e.G,o);return o-(1<<e.F)}function ct(e,r){var t,o,n=1,s=0;for(o=0;e.F>o;++o)t=vt(r,e.G,n),n<<=1,n+=t,s|=t<<o;return s}function ut(e,r,t,o){var n,s,i=1,_=0;for(s=0;o>s;++s)n=vt(t,e,r+i),i<<=1,i+=n,_|=n<<s;return _}function ft(e,r){return e.F=r,e.G=t(1<<r),e}function mt(e,r,t){var o,n,s=1;for(n=e.F;0!=n;)--n,o=t>>>n&1,kt(r,e.G,s,o),s=s<<1|o}function dt(e,r){var t,o,n=1,s=0;for(o=e.F;0!=o;)--o,t=r>>>o&1,s+=wt(e.G[n],t),n=(n<<1)+t;return s}function pt(e,r,t){var o,n,s=1;for(n=0;e.F>n;++n)o=1&t,kt(r,e.G,s,o),s=s<<1|o,t>>=1}function ht(e,r){var t,o,n=1,s=0;for(o=e.F;0!=o;--o)t=1&r,r>>>=1,s+=wt(e.G[n],t),n=n<<1|t;return s}function Pt(e,r,t,o,n){var s,i,_=1;for(i=0;o>i;++i)s=1&n,kt(t,e,r+_,s),_=_<<1|s,n>>=1}function lt(e,r,t,o){var n,s,i=1,_=0;for(s=t;0!=s;--s)n=1&o,o>>>=1,_+=Yt[(2047&(e[r+i]-n^-n))>>>2],i=i<<1|n;return _}function vt(e,r,t){var o,n=r[t];return o=(e.E>>>11)*n,(-2147483648^o)>(-2147483648^e.Bb)?(e.E=o,r[t]=n+(2048-n>>>5)<<16>>16,-16777216&e.E||(e.Bb=e.Bb<<8|l(e.Ab),e.E<<=8),0):(e.E-=o,e.Bb-=o,r[t]=n-(n>>>5)<<16>>16,-16777216&e.E||(e.Bb=e.Bb<<8|l(e.Ab),e.E<<=8),1)}function Bt(e,r){var t,o,n=0;for(t=r;0!=t;--t)e.E>>>=1,o=e.Bb-e.E>>>31,e.Bb-=e.E&o-1,n=n<<1|1-o,-16777216&e.E||(e.Bb=e.Bb<<8|l(e.Ab),e.E<<=8);return n}function St(e){e.Bb=0,e.E=-1;for(var r=0;5>r;++r)e.Bb=e.Bb<<8|l(e.Ab)}function gt(e){for(var r=e.length-1;r>=0;--r)e[r]=1024}function kt(e,r,t,s){var i,_=r[t];i=(e.E>>>11)*_,s?(e.xc=o(e.xc,n(a(i),[4294967295,0])),e.E-=i,r[t]=_-(_>>>5)<<16>>16):(e.E=i,r[t]=_+(2048-_>>>5)<<16>>16),-16777216&e.E||(e.E<<=8,bt(e))}function Rt(e,r,t){for(var n=t-1;n>=0;--n)e.E>>>=1,1==(r>>>n&1)&&(e.xc=o(e.xc,a(e.E))),-16777216&e.E||(e.E<<=8,bt(e))}function Mt(e){return o(o(a(e.Jb),e.mc),[4,0])}function Dt(e){e.mc=Gt,e.xc=Gt,e.E=-1,e.Jb=1,e.Oc=0}function bt(e){var r,t=c(p(e.xc,32));if(0!=t||s(e.xc,[4278190080,0])<0){e.mc=o(e.mc,a(e.Jb)),r=e.Oc;do g(e.Ab,r+t),r=255;while(0!=--e.Jb);e.Oc=c(e.xc)>>>24}++e.Jb,e.xc=m(n(e.xc,[16777215,0]),8)}function wt(e,r){return Yt[(2047&(e-r^-r))>>>2]}function Et(e){for(var r,t,o,n=0,s=0,i=e.length,_=[],a=[];i>n;++n,++s){if(r=255&e[n],128&r)if(192==(224&r)){if(n+1>=i)return e;if(t=255&e[++n],128!=(192&t))return e;a[s]=(31&r)<<6|63&t}else{if(224!=(240&r))return e;\\nif(n+2>=i)return e;if(t=255&e[++n],128!=(192&t))return e;if(o=255&e[++n],128!=(192&o))return e;a[s]=(15&r)<<12|(63&t)<<6|63&o}else{if(!r)return e;a[s]=r}16383==s&&(_.push(String.fromCharCode.apply(String,a)),s=-1)}return s>0&&(a.length=s,_.push(String.fromCharCode.apply(String,a))),_.join(\\\"\\\")}function Lt(e){var r,t,o,n=[],s=0,i=e.length;if(\\\"object\\\"==typeof e)return e;for(R(e,0,i,n,0),o=0;i>o;++o)r=n[o],r>=1&&127>=r?++s:s+=!r||r>=128&&2047>=r?2:3;for(t=[],s=0,o=0;i>o;++o)r=n[o],r>=1&&127>=r?t[s++]=r<<24>>24:!r||r>=128&&2047>=r?(t[s++]=(192|r>>6&31)<<24>>24,t[s++]=(128|63&r)<<24>>24):(t[s++]=(224|r>>12&15)<<24>>24,t[s++]=(128|r>>6&63)<<24>>24,t[s++]=(128|63&r)<<24>>24);return t}function yt(e){return e[1]+e[0]}function Ct(e,t,o,n){function s(){try{for(var e,r=(new Date).getTime();rr(a.c.yb);)if(i=yt(a.c.yb.Pb)/yt(a.c.Tb),(new Date).getTime()-r>200)return n(i),Nt(s,0),0;n(1),e=S(a.c.Nb),Nt(o.bind(null,e),0)}catch(t){o(null,t)}}var i,_,a={},c=void 0===o&&void 0===n;if(\\\"function\\\"!=typeof o&&(_=o,o=n=0),n=n||function(e){return void 0!==_?r(e,_):void 0},o=o||function(e,r){return void 0!==_?postMessage({action:Ft,cbn:_,result:e,error:r}):void 0},c){for(a.c=w({},Lt(e),Vt(t));rr(a.c.yb););return S(a.c.Nb)}try{a.c=w({},Lt(e),Vt(t)),n(0)}catch(u){return o(null,u)}Nt(s,0)}function zt(e,t,o){function n(){try{for(var e,r=0,i=(new Date).getTime();rr(c.d.yb);)if(++r%1e3==0&&(new Date).getTime()-i>200)return _&&(s=yt(c.d.yb.Z.g)/a,o(s)),Nt(n,0),0;o(1),e=Et(S(c.d.Nb)),Nt(t.bind(null,e),0)}catch(u){t(null,u)}}var s,i,_,a,c={},u=void 0===t&&void 0===o;if(\\\"function\\\"!=typeof t&&(i=t,t=o=0),o=o||function(e){return void 0!==i?r(_?e:-1,i):void 0},t=t||function(e,r){return void 0!==i?postMessage({action:It,cbn:i,result:e,error:r}):void 0},u){for(c.d=L({},e);rr(c.d.yb););return Et(S(c.d.Nb))}try{c.d=L({},e),a=yt(c.d.Tb),_=a>-1,o(0)}catch(f){return t(null,f)}Nt(n,0)}var Ft=1,It=2,xt=3,Nt=\\\"function\\\"==typeof setImmediate?setImmediate:setTimeout,Ot=4294967296,At=[4294967295,-Ot],Ht=[0,-0x8000000000000000],Gt=[0,0],Wt=[1,0],Tt=function(){var e,r,t,o=[];for(e=0;256>e;++e){for(t=e,r=0;8>r;++r)0!=(1&t)?t=t>>>1^-306674912:t>>>=1;o[e]=t}return o}(),Zt=function(){var e,r,t,o=2,n=[0,1];for(t=2;22>t;++t)for(r=1<<(t>>1)-1,e=0;r>e;++e,++o)n[o]=t<<24>>24;return n}(),Yt=function(){var e,r,t,o,n=[];for(r=8;r>=0;--r)for(o=1<<9-r-1,e=1<<9-r,t=o;e>t;++t)n[t]=(r<<6)+(e-t<<6>>>9-r-1);return n}(),Vt=function(){var e=[{s:16,f:64,m:0},{s:20,f:64,m:0},{s:19,f:64,m:1},{s:20,f:64,m:1},{s:21,f:128,m:1},{s:22,f:128,m:1},{s:23,f:128,m:1},{s:24,f:255,m:1},{s:25,f:255,m:1}];return function(r){return e[r-1]||e[6]}}();return\\\"undefined\\\"==typeof onmessage||\\\"undefined\\\"!=typeof window&&void 0!==window.document||!function(){onmessage=function(r){r&&r.gc&&(r.gc.action==It?e.decompress(r.gc.gc,r.gc.cbn):r.gc.action==Ft&&e.compress(r.gc.gc,r.gc.Rc,r.gc.cbn))}}(),{compress:Ct,decompress:zt}}();this.LZMA=this.LZMA_WORKER=e;\"},{\"col_type\":\"movie_3\",\"name\":\"Zlib-Base64\",\"path\":\"deflate-base64\",\"rule\":\"js:\\n/**\\n * 以下压缩和解压方法来自 α 大佬\\n */\\n// 解压 \\nlet {\\n    utf8ArrayToStr,\\n    performance,\\n} = $.require(\\\"hiker://page/methods\\\")\\n\\n\\nfunction unzip(b64Data) {\\n    let strData = window0.atob(b64Data);\\n    const charData = strData.split('').map(function(x) {\\n        return x.charCodeAt(0);\\n    });\\n    const binData = new Uint8Array(charData);\\n    const data = pako.inflate(binData);\\n    //strData = String.fromCharCode.apply(null, new Uint16Array(data));\\n    return utf8ArrayToStr(data);\\n}\\n\\n//pako.deflate\\nlet level=9;\\n\\n// 压缩\\nfunction zip(str) {\\n    log((getPageTitle().replace(/算法|\\\\s+|-Base64/g,\\\"\\\"))+\\\"压缩等级:\\\"+level);\\n    const binary = pako.deflate(str, {\\n        to: 'string',\\n        level:level\\n    })\\n    //log(binary)\\n    return window0.btoa(binary);\\n}\\n\\nlet pako = $.require(\\\"lib-pako.js?rule=\\\" + MY_RULE.title)\\nlet ZipTool = {\\n    compress: {\\n        size: {\\n            key: \\\"test-compress-size\\\",\\n            set: (newValue) => {\\n                putVar(this.key, newValue.toString())\\n            },\\n            get: () => {\\n                return parseInt(getVar(this.key, \\\"0\\\"))\\n            }\\n        },\\n        exec: (input) => {\\n            let result = performance(zip,input)\\n            ZipTool.compress.size.set(result.length)\\n            return result\\n        }\\n    },\\n    decompress: {\\n        size: {\\n            get: () => {\\n                return getVar(\\\"test-decompress\\\", \\\"\\\").length\\n            }\\n        },\\n        exec: (input) => {\\n            let result = performance(unzip,input)\\n            return result\\n        }\\n    }\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"lib-lz4-local.js\",\"path\":\"lib-lz4-local.js\",\"rule\":\"js:\\n// lz4.js - An implementation of Lz4 in plain JavaScript.\\n//\\n// TODO:\\n// - Unify header parsing/writing.\\n// - Support options (block size, checksums)\\n// - Support streams\\n// - Better error handling (handle bad offset, etc.)\\n// - HC support (better search algorithm)\\n// - Tests/benchmarking\\n// xxh32.js - implementation of xxhash32 in plain JavaScript\\n//var util = require('hiker://page/util.js');\\n\\n// xxhash32 primes\\nvar prime1 = 0x9e3779b1;\\nvar prime2 = 0x85ebca77;\\nvar prime3 = 0xc2b2ae3d;\\nvar prime4 = 0x27d4eb2f;\\nvar prime5 = 0x165667b1;\\n\\n// Utility functions/primitives\\n// --\\n\\nfunction rotl32(x, r) {\\n    x = x | 0;\\n    r = r | 0;\\n\\n    return x >>> (32 - r | 0) | x << r | 0;\\n}\\n\\nfunction rotmul32(h, r, m) {\\n    h = h | 0;\\n    r = r | 0;\\n    m = m | 0;\\n\\n    return util.imul(h >>> (32 - r | 0) | h << r, m) | 0;\\n}\\n\\nfunction shiftxor32(h, s) {\\n    h = h | 0;\\n    s = s | 0;\\n\\n    return h >>> s ^ h | 0;\\n}\\n\\n// Implementation\\n// --\\n\\nfunction xxhapply(h, src, m0, s, m1) {\\n    return rotmul32(util.imul(src, m0) + h, s, m1);\\n}\\n\\nfunction xxh1(h, src, index) {\\n    return rotmul32((h + util.imul(src[index], prime5)), 11, prime1);\\n}\\n\\nfunction xxh4(h, src, index) {\\n    return xxhapply(h, util.readU32(src, index), prime3, 17, prime4);\\n}\\n\\nfunction xxh16(h, src, index) {\\n    return [\\n        xxhapply(h[0], util.readU32(src, index + 0), prime2, 13, prime1),\\n        xxhapply(h[1], util.readU32(src, index + 4), prime2, 13, prime1),\\n        xxhapply(h[2], util.readU32(src, index + 8), prime2, 13, prime1),\\n        xxhapply(h[3], util.readU32(src, index + 12), prime2, 13, prime1)\\n    ];\\n}\\n\\nfunction xxh32(seed, src, index, len) {\\n    var h, l;\\n    l = len;\\n    if (len >= 16) {\\n        h = [\\n            seed + prime1 + prime2,\\n            seed + prime2,\\n            seed,\\n            seed - prime1\\n        ];\\n\\n        while (len >= 16) {\\n            h = xxh16(h, src, index);\\n\\n            index += 16;\\n            len -= 16;\\n        }\\n\\n        h = rotl32(h[0], 1) + rotl32(h[1], 7) + rotl32(h[2], 12) + rotl32(h[3], 18) + l;\\n    } else {\\n        h = (seed + prime5 + len) >>> 0;\\n    }\\n\\n    while (len >= 4) {\\n        h = xxh4(h, src, index);\\n\\n        index += 4;\\n        len -= 4;\\n    }\\n\\n    while (len > 0) {\\n        h = xxh1(h, src, index);\\n\\n        index++;\\n        len--;\\n    }\\n\\n    h = shiftxor32(util.imul(shiftxor32(util.imul(shiftxor32(h, 15), prime2), 13), prime3), 16);\\n\\n    return h >>> 0;\\n}\\n\\n\\nvar xxhash = {\\n    hash : xxh32\\n}\\nvar util = {\\n    hashU32: function(a) {\\n        a = a | 0;\\n        a = a + 2127912214 + (a << 12) | 0;\\n        a = a ^ -949894596 ^ a >>> 19;\\n        a = a + 374761393 + (a << 5) | 0;\\n        a = a + -744332180 ^ a << 9;\\n        a = a + -42973499 + (a << 3) | 0;\\n        return a ^ -1252372727 ^ a >>> 16 | 0;\\n    },\\n    // Reads a 64-bit little-endian integer from an array.\\n    readU64: function(b, n) {\\n        var x = 0;\\n        x |= b[n++] << 0;\\n        x |= b[n++] << 8;\\n        x |= b[n++] << 16;\\n        x |= b[n++] << 24;\\n        x |= b[n++] << 32;\\n        x |= b[n++] << 40;\\n        x |= b[n++] << 48;\\n        x |= b[n++] << 56;\\n        return x;\\n    },\\n\\n    // Reads a 32-bit little-endian integer from an array.\\n    readU32: function(b, n) {\\n        var x = 0;\\n        x |= b[n++] << 0;\\n        x |= b[n++] << 8;\\n        x |= b[n++] << 16;\\n        x |= b[n++] << 24;\\n        return x;\\n    },\\n    // Writes a 32-bit little-endian integer from an array.\\n    writeU32: function(b, n, x) {\\n        b[n++] = (x >> 0) & 0xff;\\n        b[n++] = (x >> 8) & 0xff;\\n        b[n++] = (x >> 16) & 0xff;\\n        b[n++] = (x >> 24) & 0xff;\\n    },\\n    // Multiplies two numbers using 32-bit integer multiplication.\\n    // Algorithm from Emscripten.\\n    imul: function(a, b) {\\n        var ah = a >>> 16;\\n        var al = a & 65535;\\n        var bh = b >>> 16;\\n        var bl = b & 65535;\\n\\n        return al * bl + (ah * bl + al * bh << 16) | 0;\\n    },\\n}\\n\\n// Constants\\n// --\\n\\n// Compression format parameters/constants.\\nvar minMatch = 4;\\nvar minLength = 13;\\nvar searchLimit = 5;\\nvar skipTrigger = 6;\\nvar hashSize = 1 << 16;\\n\\n// Token constants.\\nvar mlBits = 4;\\nvar mlMask = (1 << mlBits) - 1;\\nvar runBits = 4;\\nvar runMask = (1 << runBits) - 1;\\n\\n// Shared buffers\\nvar blockBuf = makeBuffer(5 << 20);\\nvar hashTable = makeHashTable();\\n\\n// Frame constants.\\nvar magicNum = 0x184D2204;\\n\\n// Frame descriptor flags.\\nvar fdContentChksum = 0x4;\\nvar fdContentSize = 0x8;\\nvar fdBlockChksum = 0x10;\\n// var fdBlockIndep = 0x20;\\nvar fdVersion = 0x40;\\nvar fdVersionMask = 0xC0;\\n\\n// Block sizes.\\nvar bsUncompressed = 0x80000000;\\nvar bsDefault = 7;\\nvar bsShift = 4;\\nvar bsMask = 7;\\nvar bsMap = {\\n    4: 0x10000,\\n    5: 0x40000,\\n    6: 0x100000,\\n    7: 0x400000\\n};\\n\\n// Utility functions/primitives\\n// --\\n\\n// Makes our hashtable. On older browsers, may return a plain array.\\nfunction makeHashTable() {\\n    try {\\n        return new Uint32Array(hashSize);\\n    } catch (error) {\\n        var hashTable = new Array(hashSize);\\n\\n        for (var i = 0; i < hashSize; i++) {\\n            hashTable[i] = 0;\\n        }\\n\\n        return hashTable;\\n    }\\n}\\n\\n// Clear hashtable.\\nfunction clearHashTable(table) {\\n    for (var i = 0; i < hashSize; i++) {\\n        hashTable[i] = 0;\\n    }\\n}\\n\\n// Makes a byte buffer. On older browsers, may return a plain array.\\nfunction makeBuffer(size) {\\n    try {\\n        return new Uint8Array(size);\\n    } catch (error) {\\n        var buf = new Array(size);\\n\\n        for (var i = 0; i < size; i++) {\\n            buf[i] = 0;\\n        }\\n\\n        return buf;\\n    }\\n}\\n\\nfunction sliceArray(array, start, end) {\\n    if (typeof array.buffer !== undefined) {\\n        if (Uint8Array.prototype.slice) {\\n            return array.slice(start, end);\\n        } else {\\n            // Uint8Array#slice polyfill.\\n            var len = array.length;\\n\\n            // Calculate start.\\n            start = start | 0;\\n            start = (start < 0) ? Math.max(len + start, 0) : Math.min(start, len);\\n\\n            // Calculate end.\\n            end = (end === undefined) ? len : end | 0;\\n            end = (end < 0) ? Math.max(len + end, 0) : Math.min(end, len);\\n\\n            // Copy into new array.\\n            var arraySlice = new Uint8Array(end - start);\\n            for (var i = start, n = 0; i < end;) {\\n                arraySlice[n++] = array[i++];\\n            }\\n\\n            return arraySlice;\\n        }\\n    } else {\\n        // Assume normal array.\\n        return array.slice(start, end);\\n    }\\n}\\n\\n// Implementation\\n// --\\nexports = $.exports\\n\\n// Calculates an upper bound for lz4 compression.\\nexports.compressBound = function compressBound(n) {\\n    return (n + (n / 255) + 16) | 0;\\n};\\n\\n// Calculates an upper bound for lz4 decompression, by reading the data.\\nexports.decompressBound = function decompressBound(src) {\\n    var sIndex = 0;\\n\\n    // Read magic number\\n    if (util.readU32(src, sIndex) !== magicNum) {\\n        throw new Error('invalid magic number');\\n    }\\n\\n    sIndex += 4;\\n\\n    // Read descriptor\\n    var descriptor = src[sIndex++];\\n\\n    // Check version\\n    if ((descriptor & fdVersionMask) !== fdVersion) {\\n        throw new Error('incompatible descriptor version ' + (descriptor & fdVersionMask));\\n    }\\n\\n    // Read flags\\n    var useBlockSum = (descriptor & fdBlockChksum) !== 0;\\n    var useContentSize = (descriptor & fdContentSize) !== 0;\\n\\n    // Read block size\\n    var bsIdx = (src[sIndex++] >> bsShift) & bsMask;\\n\\n    if (bsMap[bsIdx] === undefined) {\\n        throw new Error('invalid block size ' + bsIdx);\\n    }\\n\\n    var maxBlockSize = bsMap[bsIdx];\\n\\n    // Get content size\\n    if (useContentSize) {\\n        return util.readU64(src, sIndex);\\n    }\\n\\n    // Checksum\\n    sIndex++;\\n\\n    // Read blocks.\\n    var maxSize = 0;\\n    while (true) {\\n        var blockSize = util.readU32(src, sIndex);\\n        sIndex += 4;\\n\\n        if (blockSize & bsUncompressed) {\\n            blockSize &= ~bsUncompressed;\\n            maxSize += blockSize;\\n        } else if (blockSize > 0) {\\n            maxSize += maxBlockSize;\\n        }\\n\\n        if (blockSize === 0) {\\n            return maxSize;\\n        }\\n\\n        if (useBlockSum) {\\n            sIndex += 4;\\n        }\\n\\n        sIndex += blockSize;\\n    }\\n};\\n\\n// Creates a buffer of a given byte-size, falling back to plain arrays.\\nexports.makeBuffer = makeBuffer;\\n\\n// Decompresses a block of Lz4.\\nexports.decompressBlock = function decompressBlock(src, dst, sIndex, sLength, dIndex) {\\n    var mLength, mOffset, sEnd, n, i;\\n    var hasCopyWithin = dst.copyWithin !== undefined && dst.fill !== undefined;\\n\\n    // Setup initial state.\\n    sEnd = sIndex + sLength;\\n\\n    // Consume entire input block.\\n    while (sIndex < sEnd) {\\n        var token = src[sIndex++];\\n\\n        // Copy literals.\\n        var literalCount = (token >> 4);\\n        if (literalCount > 0) {\\n            // Parse length.\\n            if (literalCount === 0xf) {\\n                while (true) {\\n                    literalCount += src[sIndex];\\n                    if (src[sIndex++] !== 0xff) {\\n                        break;\\n                    }\\n                }\\n            }\\n\\n            // Copy literals\\n            for (n = sIndex + literalCount; sIndex < n;) {\\n                dst[dIndex++] = src[sIndex++];\\n            }\\n        }\\n\\n        if (sIndex >= sEnd) {\\n            break;\\n        }\\n\\n        // Copy match.\\n        mLength = (token & 0xf);\\n\\n        // Parse offset.\\n        mOffset = src[sIndex++] | (src[sIndex++] << 8);\\n\\n        // Parse length.\\n        if (mLength === 0xf) {\\n            while (true) {\\n                mLength += src[sIndex];\\n                if (src[sIndex++] !== 0xff) {\\n                    break;\\n                }\\n            }\\n        }\\n\\n        mLength += minMatch;\\n\\n        // Copy match\\n        // prefer to use typedarray.copyWithin for larger matches\\n        // NOTE: copyWithin doesn't work as required by LZ4 for overlapping sequences\\n        // e.g. mOffset=1, mLength=30 (repeach char 30 times)\\n        // we special case the repeat char w/ array.fill\\n        if (hasCopyWithin && mOffset === 1) {\\n            dst.fill(dst[dIndex - 1] | 0, dIndex, dIndex + mLength);\\n            dIndex += mLength;\\n        } else if (hasCopyWithin && mOffset > mLength && mLength > 31) {\\n            dst.copyWithin(dIndex, dIndex - mOffset, dIndex - mOffset + mLength);\\n            dIndex += mLength;\\n        } else {\\n            for (i = dIndex - mOffset, n = i + mLength; i < n;) {\\n                dst[dIndex++] = dst[i++] | 0;\\n            }\\n        }\\n    }\\n\\n    return dIndex;\\n};\\n\\n// Compresses a block with Lz4.\\nexports.compressBlock = function compressBlock(src, dst, sIndex, sLength, hashTable) {\\n    var mIndex, mAnchor, mLength, mOffset, mStep;\\n    var literalCount, dIndex, sEnd, n;\\n\\n    // Setup initial state.\\n    dIndex = 0;\\n    sEnd = sLength + sIndex;\\n    mAnchor = sIndex;\\n\\n    // Process only if block is large enough.\\n    if (sLength >= minLength) {\\n        var searchMatchCount = (1 << skipTrigger) + 3;\\n\\n        // Consume until last n literals (Lz4 spec limitation.)\\n        while (sIndex + minMatch < sEnd - searchLimit) {\\n            var seq = util.readU32(src, sIndex);\\n            var hash = util.hashU32(seq) >>> 0;\\n\\n            // Crush hash to 16 bits.\\n            hash = ((hash >> 16) ^ hash) >>> 0 & 0xffff;\\n\\n            // Look for a match in the hashtable. NOTE: remove one; see below.\\n            mIndex = hashTable[hash] - 1;\\n\\n            // Put pos in hash table. NOTE: add one so that zero = invalid.\\n            hashTable[hash] = sIndex + 1;\\n\\n            // Determine if there is a match (within range.)\\n            if (mIndex < 0 || ((sIndex - mIndex) >>> 16) > 0 || util.readU32(src, mIndex) !== seq) {\\n                mStep = searchMatchCount++ >> skipTrigger;\\n                sIndex += mStep;\\n                continue;\\n            }\\n\\n            searchMatchCount = (1 << skipTrigger) + 3;\\n\\n            // Calculate literal count and offset.\\n            literalCount = sIndex - mAnchor;\\n            mOffset = sIndex - mIndex;\\n\\n            // We've already matched one word, so get that out of the way.\\n            sIndex += minMatch;\\n            mIndex += minMatch;\\n\\n            // Determine match length.\\n            // N.B.: mLength does not include minMatch, Lz4 adds it back\\n            // in decoding.\\n            mLength = sIndex;\\n            while (sIndex < sEnd - searchLimit && src[sIndex] === src[mIndex]) {\\n                sIndex++;\\n                mIndex++;\\n            }\\n            mLength = sIndex - mLength;\\n\\n            // Write token + literal count.\\n            var token = mLength < mlMask ? mLength : mlMask;\\n            if (literalCount >= runMask) {\\n                dst[dIndex++] = (runMask << mlBits) + token;\\n                for (n = literalCount - runMask; n >= 0xff; n -= 0xff) {\\n                    dst[dIndex++] = 0xff;\\n                }\\n                dst[dIndex++] = n;\\n            } else {\\n                dst[dIndex++] = (literalCount << mlBits) + token;\\n            }\\n\\n            // Write literals.\\n            for (var i = 0; i < literalCount; i++) {\\n                dst[dIndex++] = src[mAnchor + i];\\n            }\\n\\n            // Write offset.\\n            dst[dIndex++] = mOffset;\\n            dst[dIndex++] = (mOffset >> 8);\\n\\n            // Write match length.\\n            if (mLength >= mlMask) {\\n                for (n = mLength - mlMask; n >= 0xff; n -= 0xff) {\\n                    dst[dIndex++] = 0xff;\\n                }\\n                dst[dIndex++] = n;\\n            }\\n\\n            // Move the anchor.\\n            mAnchor = sIndex;\\n        }\\n    }\\n\\n    // Nothing was encoded.\\n    if (mAnchor === 0) {\\n        return 0;\\n    }\\n\\n    // Write remaining literals.\\n    // Write literal token+count.\\n    literalCount = sEnd - mAnchor;\\n    if (literalCount >= runMask) {\\n        dst[dIndex++] = (runMask << mlBits);\\n        for (n = literalCount - runMask; n >= 0xff; n -= 0xff) {\\n            dst[dIndex++] = 0xff;\\n        }\\n        dst[dIndex++] = n;\\n    } else {\\n        dst[dIndex++] = (literalCount << mlBits);\\n    }\\n\\n    // Write literals.\\n    sIndex = mAnchor;\\n    while (sIndex < sEnd) {\\n        dst[dIndex++] = src[sIndex++];\\n    }\\n\\n    return dIndex;\\n};\\n\\n// Decompresses a frame of Lz4 data.\\nexports.decompressFrame = function decompressFrame(src, dst) {\\n    var useBlockSum, useContentSum, useContentSize, descriptor;\\n    var sIndex = 0;\\n    var dIndex = 0;\\n\\n    // Read magic number\\n    if (util.readU32(src, sIndex) !== magicNum) {\\n        throw new Error('invalid magic number');\\n    }\\n\\n    sIndex += 4;\\n\\n    // Read descriptor\\n    descriptor = src[sIndex++];\\n\\n    // Check version\\n    if ((descriptor & fdVersionMask) !== fdVersion) {\\n        throw new Error('incompatible descriptor version');\\n    }\\n\\n    // Read flags\\n    useBlockSum = (descriptor & fdBlockChksum) !== 0;\\n    useContentSum = (descriptor & fdContentChksum) !== 0;\\n    useContentSize = (descriptor & fdContentSize) !== 0;\\n\\n    // Read block size\\n    var bsIdx = (src[sIndex++] >> bsShift) & bsMask;\\n\\n    if (bsMap[bsIdx] === undefined) {\\n        throw new Error('invalid block size');\\n    }\\n\\n    if (useContentSize) {\\n        // TODO: read content size\\n        sIndex += 8;\\n    }\\n\\n    sIndex++;\\n\\n    // Read blocks.\\n    while (true) {\\n        var compSize;\\n\\n        compSize = util.readU32(src, sIndex);\\n        sIndex += 4;\\n\\n        if (compSize === 0) {\\n            break;\\n        }\\n\\n        if (useBlockSum) {\\n            // TODO: read block checksum\\n            sIndex += 4;\\n        }\\n\\n        // Check if block is compressed\\n        if ((compSize & bsUncompressed) !== 0) {\\n            // Mask off the 'uncompressed' bit\\n            compSize &= ~bsUncompressed;\\n\\n            // Copy uncompressed data into destination buffer.\\n            for (var j = 0; j < compSize; j++) {\\n                dst[dIndex++] = src[sIndex++];\\n            }\\n        } else {\\n            // Decompress into blockBuf\\n            dIndex = exports.decompressBlock(src, dst, sIndex, compSize, dIndex);\\n            sIndex += compSize;\\n        }\\n    }\\n\\n    if (useContentSum) {\\n        // TODO: read content checksum\\n        sIndex += 4;\\n    }\\n\\n    return dIndex;\\n};\\n\\n// Compresses data to an Lz4 frame.\\nexports.compressFrame = function compressFrame(src, dst) {\\n    var dIndex = 0;\\n\\n    // Write magic number.\\n    util.writeU32(dst, dIndex, magicNum);\\n    dIndex += 4;\\n\\n    // Descriptor flags.\\n    dst[dIndex++] = fdVersion;\\n    dst[dIndex++] = bsDefault << bsShift;\\n\\n    // Descriptor checksum.\\n    dst[dIndex] = xxhash.hash(0, dst, 4, dIndex - 4) >> 8;\\n    dIndex++;\\n\\n    // Write blocks.\\n    var maxBlockSize = bsMap[bsDefault];\\n    var remaining = src.length;\\n    var sIndex = 0;\\n\\n    // Clear the hashtable.\\n    clearHashTable(hashTable);\\n\\n    // Split input into blocks and write.\\n    while (remaining > 0) {\\n        var compSize = 0;\\n        var blockSize = remaining > maxBlockSize ? maxBlockSize : remaining;\\n\\n        compSize = exports.compressBlock(src, blockBuf, sIndex, blockSize, hashTable);\\n\\n        if (compSize > blockSize || compSize === 0) {\\n            // Output uncompressed.\\n            util.writeU32(dst, dIndex, 0x80000000 | blockSize);\\n            dIndex += 4;\\n\\n            for (var z = sIndex + blockSize; sIndex < z;) {\\n                dst[dIndex++] = src[sIndex++];\\n            }\\n\\n            remaining -= blockSize;\\n        } else {\\n            // Output compressed.\\n            util.writeU32(dst, dIndex, compSize);\\n            dIndex += 4;\\n\\n            for (var j = 0; j < compSize;) {\\n                dst[dIndex++] = blockBuf[j++];\\n            }\\n\\n            sIndex += blockSize;\\n            remaining -= blockSize;\\n        }\\n    }\\n\\n    // Write blank end block.\\n    util.writeU32(dst, dIndex, 0);\\n    dIndex += 4;\\n\\n    return dIndex;\\n};\\n\\n// Decompresses a buffer containing an Lz4 frame. maxSize is optional; if not\\n// provided, a maximum size will be determined by examining the data. The\\n// buffer returned will always be perfectly-sized.\\nexports.decompress = function decompress(src, maxSize) {\\n    var dst, size;\\n\\n    if (maxSize === undefined) {\\n        maxSize = exports.decompressBound(src);\\n    }\\n    dst = exports.makeBuffer(maxSize);\\n    size = exports.decompressFrame(src, dst);\\n\\n    if (size !== maxSize) {\\n        dst = sliceArray(dst, 0, size);\\n    }\\n\\n    return dst;\\n};\\n\\n// Compresses a buffer to an Lz4 frame. maxSize is optional; if not provided,\\n// a buffer will be created based on the theoretical worst output size for a\\n// given input size. The buffer returned will always be perfectly-sized.\\nexports.compress = function compress(src, maxSize) {\\n    var dst, size;\\n\\n    if (maxSize === undefined) {\\n        maxSize = exports.compressBound(src.length);\\n    }\\n\\n    dst = exports.makeBuffer(maxSize);\\n    size = exports.compressFrame(src, dst);\\n\\n    if (size !== maxSize) {\\n        dst = sliceArray(dst, 0, size);\\n    }\\n\\n    return dst;\\n};\"},{\"col_type\":\"movie_3\",\"name\":\"LZ4-Base64\",\"path\":\"lz4\",\"rule\":\"js:\\n/**\\n * 以下压缩和解压方法来自 α 大佬\\n */\\n// 解压\\n\\nlet {\\n    utf8ArrayToStr,\\n    strToUtf8Array,\\n    arrayBufferToBase64\\n} = $.require(\\\"hiker://page/methods\\\");\\n\\nlet lz4 = $.require(\\\"hiker://page/lib-lz4-local.js\\\");\\n\\nfunction unzip(b64Data) {\\n    let strData = window0.atob(b64Data);\\n    const charData = strData.split('').map(function(x) {\\n        return x.charCodeAt(0);\\n    });\\n    const binData = new Uint8Array(charData);\\n    let data = lz4.decompress(binData);\\n    return utf8ArrayToStr(data);\\n}\\n\\n\\n// 压缩\\nfunction zip(str) {\\n    let uint8Array = strToUtf8Array(str);\\n    let compressed = lz4.compress(uint8Array);\\n    return arrayBufferToBase64(compressed);\\n}\\n\\n\\n//let pako = $.require(\\\"lib-pako.js?rule=\\\" + MY_RULE.title)\\nlet ZipTool = {\\n    compress: {\\n        size: {\\n            key: \\\"test-compress-size\\\",\\n            set: (newValue) => {\\n                putVar(this.key, newValue.toString())\\n            },\\n            get: () => {\\n                return parseInt(getVar(this.key, \\\"0\\\"))\\n            }\\n        },\\n        exec: (input) => {\\n            let result = zip(input)\\n            ZipTool.compress.size.set(result.length)\\n            return result\\n        }\\n    },\\n    decompress: {\\n        size: {\\n            get: () => {\\n                return getVar(\\\"test-decompress\\\", \\\"\\\").length\\n            }\\n        },\\n        exec: (input) => {\\n            let result = unzip(input)\\n            return result\\n        }\\n    }\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"通用函数\",\"path\":\"methods\",\"rule\":\"js:\\n//文本转UTF8数组\\nfunction strToUtf8Array(string) {\\n    Uint8Array.prototype.slice = Array.prototype.slice;\\n    let pos = 0;\\n    const len = string.length;\\n    const out = [];\\n    let at = 0; // output position\\n    let tlen = Math.max(32, len + (len >> 1) + 7); // 1.5x size\\n    let target = new Uint8Array((tlen >> 3) << 3); // ... but at 8 byte offset\\n    while (pos < len) {\\n        let value = string.charCodeAt(pos++);\\n        if (value >= 0xd800 && value <= 0xdbff) {\\n            // high surrogate\\n            if (pos < len) {\\n                const extra = string.charCodeAt(pos);\\n                if ((extra & 0xfc00) === 0xdc00) {\\n                    ++pos;\\n                    value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\\n                }\\n            }\\n            if (value >= 0xd800 && value <= 0xdbff) {\\n                continue; // drop lone surrogate\\n            }\\n        }\\n        // expand the buffer if we couldn't write 4 bytes\\n        if (at + 4 > target.length) {\\n            tlen += 8; // minimum extra\\n            tlen *= (1.0 + (pos / string.length) * 2); // take 2x the remaining\\n            tlen = (tlen >> 3) << 3; // 8 byte offset\\n\\n            const update = new Uint8Array(tlen);\\n            update.set(target);\\n            target = update;\\n        }\\n        if ((value & 0xffffff80) === 0) { // 1-byte\\n            target[at++] = value; // ASCII\\n            continue;\\n        } else if ((value & 0xfffff800) === 0) { // 2-byte\\n            target[at++] = ((value >> 6) & 0x1f) | 0xc0;\\n        } else if ((value & 0xffff0000) === 0) { // 3-byte\\n            target[at++] = ((value >> 12) & 0x0f) | 0xe0;\\n            target[at++] = ((value >> 6) & 0x3f) | 0x80;\\n        } else if ((value & 0xffe00000) === 0) { // 4-byte\\n            target[at++] = ((value >> 18) & 0x07) | 0xf0;\\n            target[at++] = ((value >> 12) & 0x3f) | 0x80;\\n            target[at++] = ((value >> 6) & 0x3f) | 0x80;\\n        } else {\\n            // FIXME: do we care\\n            continue;\\n        }\\n        target[at++] = (value & 0x3f) | 0x80;\\n    }\\n    return target.slice(0, at);\\n}\\n\\n//UTF8数组转文本\\nfunction utf8ArrayToStr(array) {\\n    var out, i, len, c;\\n    var char2, char3;\\n    out = \\\"\\\";\\n    len = array.length;\\n    i = 0;\\n    while (i < len) {\\n        c = array[i++];\\n        switch (c >> 4) {\\n            case 0:\\n            case 1:\\n            case 2:\\n            case 3:\\n            case 4:\\n            case 5:\\n            case 6:\\n            case 7:\\n                out += String.fromCharCode(c);\\n                break;\\n            case 12:\\n            case 13:\\n                char2 = array[i++];\\n                out += String.fromCharCode(((c & 0x1f) << 6) | (char2 & 0x3f));\\n                break;\\n            case 14:\\n                char2 = array[i++];\\n                char3 = array[i++];\\n                out += String.fromCharCode(\\n                    ((c & 0x0f) << 12) | ((char2 & 0x3f) << 6) | ((char3 & 0x3f) << 0)\\n                );\\n                break;\\n        }\\n    }\\n    return out;\\n}\\n\\n//二进制转base64\\nfunction arrayBufferToBase64(arrayBuffer) {\\n    let base64String = '';\\n    const bytes = new Uint8Array(arrayBuffer);\\n    for (let i = 0; i < bytes.length; i++) {\\n        base64String += String.fromCharCode(bytes[i]);\\n    }\\n    return window0.btoa(base64String);\\n}\\n\\nfunction base64ToUintArray(b64Data) {\\n    let strData = window0.atob(b64Data);\\n    const charData = strData.split('').map(function(x) {\\n        return x.charCodeAt(0);\\n    });\\n    const binData = new Uint8Array(charData);\\n    return binData;\\n}\\n\\n\\nfunction calculateByteLength(text) {\\n    let byteLength = 0;\\n    for (let i = 0; i < text.length; i++) {\\n        let charCode = text.charCodeAt(i);\\n        if (charCode <= 0x7f) {\\n            byteLength += 1; // ASCII字符占用1个字节\\n        } else if (charCode <= 0x7ff) {\\n            byteLength += 2; // 2个字节\\n        } else if (charCode <= 0xffff) {\\n            byteLength += 3; // 3个字节\\n        } else {\\n            byteLength += 4; // 4个字节\\n        }\\n    }\\n    return byteLength;\\n}\\n\\n\\nfunction performance(func, str) {\\n    let nolog = false;\\n    originlog = log\\n    log = function(input) {\\n        if (!nolog) {\\n            return originlog(input)\\n        }\\n    }\\n    toast(\\\"开始\\\");\\n    const start = Date.now();\\n    let r = func(str); // 调用函数\\n    const end = Date.now();\\n    const duration = end - start;\\n    log(`${getPageTitle()} 方法 ${func.name} 耗时 ${duration}`);\\n    if (func.name == \\\"zip\\\") {\\n        let sl = calculateByteLength(str);\\n        let rl = calculateByteLength(r);\\n        log(\\\"原始byte:\\\" + sl);\\n        log(\\\"压缩byte:\\\" + rl);\\n        log(\\\"压缩率:\\\" + Math.round((1 - (rl / sl)) * 100) + \\\"%\\\")\\n        log(\\\"--------分割线--------\\\");\\n    }\\n    log(\\\"结束\\\");\\n    log=originlog;\\n    return r;\\n}\\n\\n\\n$.exports = {\\n    strToUtf8Array: strToUtf8Array,\\n    utf8ArrayToStr: utf8ArrayToStr,\\n    arrayBufferToBase64: arrayBufferToBase64,\\n    base64ToUintArray:base64ToUintArray,\\n    calculateByteLength: calculateByteLength,\\n    performance: performance,\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"Brotli-Base64\",\"path\":\"brotli\",\"rule\":\"js:\\n/**\\n * 以下压缩和解压方法来自 α 大佬\\n */\\n// 解压\\n\\nlet {\\n    utf8ArrayToStr,\\n    strToUtf8Array,\\n    arrayBufferToBase64,\\n    performance\\n} = $.require(\\\"hiker://page/methods\\\");\\n\\n//let lz4 = $.require(\\\"hiker://page/lib-lz4-local.js\\\");\\nlet brotli = $.require(\\\"https://cdn.jsdelivr.net/npm/brotli-js@1.0.2/index.min.js\\\");\\n\\nfunction unzip(b64Data) {\\n    let strData = window0.atob(b64Data);\\n    const charData = strData.split('').map(function(x) {\\n        return x.charCodeAt(0);\\n    });\\n    const binData = new Uint8Array(charData);\\n    const data = brotli.decompressArray(binData);\\n    return utf8ArrayToStr(data);\\n}\\n\\nlet level = 5;\\n\\n// 压缩\\nfunction zip(str) {\\n    let uint8Array = strToUtf8Array(str);\\n    log(\\\"brotli 当前压缩等级:\\\" + level);\\n    // 使用 Brotli 压缩 ArrayBuffer\\n    const compressed = brotli.compressArray(uint8Array, level);\\n    // 将压缩后的 ArrayBuffer 转换为 base64 编码\\n    const base64CompressedData = arrayBufferToBase64(compressed);\\n    return base64CompressedData;\\n}\\n\\nlet ZipTool = {\\n    compress: {\\n        size: {\\n            key: \\\"test-compress-size\\\",\\n            set: (newValue) => {\\n                putVar(this.key, newValue.toString())\\n            },\\n            get: () => {\\n                return parseInt(getVar(this.key, \\\"0\\\"))\\n            }\\n        },\\n        exec: (input) => {\\n            let result = performance(zip, input)\\n            ZipTool.compress.size.set(result.length)\\n            return result\\n        }\\n    },\\n    decompress: {\\n        size: {\\n            get: () => {\\n                return getVar(\\\"test-decompress\\\", \\\"\\\").length\\n            }\\n        },\\n        exec: (input) => {\\n            let result = performance(unzip,input);\\n            return result\\n        }\\n    }\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"LZMA-base64\",\"path\":\"lzma-base64\",\"rule\":\"js:\\n/**\\n * \\n */\\n// 解压\\n\\nlet {\\n    utf8ArrayToStr,\\n    performance,\\n    arrayBufferToBase64,\\n    base64ToUintArray,\\n} = $.require(\\\"hiker://page/methods\\\");\\n\\n\\nfunction setTimeout(func, delay) {\\n    //java.lang.Thread.sleep(delay);\\n    func();\\n}\\n\\neval(JSON.parse(request(\\\"hiker://page/lib-lzma-local.js?rule=\\\" + MY_RULE.title)).rule)\\n\\nfunction unzip(input) {\\n    let output = \\\"\\\";\\n    let b64 = base64ToUintArray(input);\\n    LZMA.decompress(b64,\\n        (result) => {\\n            putVar(\\\"test-decompress\\\", result);\\n            output = result;\\n        },\\n        (progress) => {})\\n    return output;\\n}\\n\\nlet level = 1;\\n\\n// 压缩\\nfunction zip(input) {\\n    log((getPageTitle().replace(/算法|\\\\s+|-Base64/g, \\\"\\\")) + \\\"压缩等级:\\\" + level);\\n    let output = \\\"\\\";\\n    LZMA.compress(input, level,\\n        (result) => {\\n            putVar(\\\"test-compress\\\", arrayBufferToBase64(result))\\n            output = arrayBufferToBase64(result);\\n        },\\n        (progress) => {\\n\\n        })\\n    return output;\\n}\\n\\nlet ZipTool = {\\n    compress: {\\n        size: {\\n            key: \\\"test-compress-size\\\",\\n            set: (newValue) => {\\n                putVar(this.key, newValue.toString())\\n            },\\n            get: () => {\\n                return parseInt(getVar(this.key, \\\"0\\\"))\\n            }\\n        },\\n        exec: (input) => {\\n            let result = performance(zip,input)\\n            ZipTool.compress.size.set(result.length)\\n            return result\\n        }\\n    },\\n    decompress: {\\n        size: {\\n            get: () => {\\n                return getVar(\\\"test-decompress\\\", \\\"\\\").length\\n            }\\n        },\\n        exec: (input) => {\\n            let result =performance(unzip,input)\\n            return result\\n        }\\n    }\\n}\"}]","proxy":"","icon":"https://iconfont.tyrantg.com/api/illustrate.svg?svg_string=%3Csvg%20class%3D%22icon%22%20style%3D%22width%3A%201em%3Bheight%3A%201em%3Bvertical-align%3A%20middle%3Bfill%3A%20currentColor%3Boverflow%3A%20hidden%3B%22%20viewBox%3D%220%200%201024%201024%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20d%3D%22M118.528%20146.304c16.192-9.28%2037.76-16.768%2064.896-22.528A343.68%20343.68%200%200%201%20252.928%20115.2c100.16%200%20150.272%2051.328%20150.272%20153.92V490.24H303.744v-53.248h-1.28c-24.384%2041.472-60.16%2062.208-107.2%2062.208-33.92%200-61.056-9.856-81.472-29.632-20.416-19.776-30.592-46.592-30.592-80.64%200-70.144%2040.96-110.976%20122.752-122.432l98.432-13.568c0-42.624-21.696-63.936-65.088-63.936-42.752%200-83.008%2013.248-120.768%2039.744V146.304zM236.736%20324.48c-37.76%205.12-56.704%2022.528-56.704%2052.288%200%2013.696%204.608%2024.704%2013.76%2033.088%209.216%208.384%2021.568%2012.608%2037.12%2012.608%2021.376%200%2038.976-7.68%2052.8-23.168%2013.824-15.424%2020.672-34.624%2020.672-57.6v-26.176L236.8%20324.48zM960%20960.448h-106.752l-34.368-102.656h-166.912l-33.792%20102.656H512l168.128-448h115.008l164.864%20448z%20m-164.288-176.384l-52.16-155.328a168.64%20168.64%200%200%201-7.104-39.04h-2.688c-1.152%2013.12-3.84%2025.728-8%2037.888l-52.48%20156.48h122.432zM512%20823.616L347.648%20960v-109.12H288.64C128.128%20855.36%2058.496%20762.24%2064.192%20576c21.76%2078.976%2056%20192.96%20224.384%20194.304h59.072v-83.072L512%20823.616z%20m-32-623.232L644.352%2064v109.12h59.072c156.16%200%20230.336%2080.576%20224.384%20274.88-21.76-78.976-74.496-193.152-224.384-194.304h-59.072v83.072L480%20200.384z%22%20fill%3D%22%234A4A4A%22%20%2F%3E%3C%2Fsvg%3E"}